1                        J E S 2  J O B  L O G  --  S Y S T E M  S Y S B  --  N O D E  R L G
0
 09.38.21 JOB05928 ---- MONDAY,    22 MAR 2004 ----
 09.38.21 JOB05928  ICH70001I GG$PJG   LAST ACCESS AT 09:38:15 ON MONDAY, MARCH 22, 2004
 09.38.21 JOB05928  $HASP373 PJG#AMST STARTED - INIT 3    - CLASS E - SYS SYSB
 09.38.21 JOB05928  ***  HCMD      STEP $$QUIET
 09.38.21 JOB05928  PURGE * Q=OUTPUT MULTIPLE
 09.38.21 JOB05928  JOB PJG#AMST NOT IN OUTPUT QUEUE
 09.38.22 JOB05928  PJG#AMST.$$QUIET .         RC=0008 TapeIO=0000 DiskIO=0000 CPU=  .01s Elapsed=01.37s
 09.38.22 JOB05928  PJG#AMST.$CND    .         RC=Zero TapeIO=0000 DiskIO=0002 CPU=  .01s Elapsed=02.40s
 09.38.22 JOB05928  PJG#AMST.$UNP    .         RC=Zero TapeIO=0000 DiskIO=0014 CPU=  .05s Elapsed=02.52s
 09.38.26 JOB05928  PJG#AMST.ASM     .         RC=Zero TapeIO=0000 DiskIO=0312 CPU= 1.64s Elapsed=02.79s
 09.38.26 JOB05928  PJG#AMST.$EDIT   .         RC=Zero TapeIO=0000 DiskIO=0099 CPU=  .36s Elapsed=06.24s
 09.38.26 JOB05928  PJG#AMST Ended.  Name=Module: ASMASTER               Total CPU= 2.07s Elapsed=01.37s
 09.38.26 JOB05928
 09.38.26 JOB05928  Execution charges   Priority=Standard   Block=Day
 09.38.26 JOB05928
 09.38.26 JOB05928  CPU Usage          37.87          $23.47   Standard Processing Unit Equivalent
 09.38.26 JOB05928                                   =======
 09.38.26 JOB05928                                    $23.47   Total Job execution charge
 09.38.26 JOB05928
 09.38.26 JOB05928  See back separator page for print charges
 09.38.26 JOB05928
 09.38.27 JOB05928  $HASP395 PJG#AMST ENDED  ASM=0
1        1 //PJG#AMST JOB PJG$GG,'Module: ASMASTER',TIME=1,MSGCLASS=C              JOB05928
           /*JOBPARM HOLD=OUTPUT,LINES=50,CHARS=TN15,NOTIFY=YES
         2 //       EXEC PURGEOLD
         3 XXPURGEOLD PROC
           XX*
           XX* This proc is maintained by Jim Stosick
           XX*
         4 XX$$QUIET  EXEC PGM=HCMDX,PARM='PURGE * Q=OUTPUT MULTIPLE',
           XX         ACCT=(PURGEOLD,SYS3)
         5 //$CND   EXEC PGM=BILBO,REGION=512K,PARM='RECS=100'
         6 //STEPLIB  DD DSN=WYL.GG.ORV.LINKLIB,DISP=SHR
         7 //SYSPRINT DD SYSOUT=$
         8 //SYSUT1   DD DSN=WYL.GG.PJG.OBJ,DISP=OLD
         9 //SYSUT2   DD DSN=WYL.GG.PJG.OBJ,DISP=OLD
        10 //SYSIN    DD DUMMY
        11 //$UNP   EXEC PGM=WUNPRESS,PARM='NUM'
        12 //SYSPRINT DD SYSOUT=$
        13 //SYSUT1   DD DSN=WYL.GG.ORV.SOURCE(ASMASTER),DISP=SHR
        14 //SYSUT2   DD DSN=&&INPUT,DISP=(,PASS),UNIT=SYSDA,
           //            SPACE=(TRK,(25,25),RLSE),DCB=CARD
        15 //ASM    EXEC PGM=ASMA90,REGION=8M,COND=(0,NE,$UNP),
           //            PARM=('SYSPARM(ASMASTER),TERM,LANG(EN),OBJ',
           //          'LC(32500),XREF(SHORT),NODECK,NORLD,NODX,NOUS')
           //*STEPLIB  DD DSN=SYS1.SASMMOD1,DISP=SHR
        16 //SYSLIB   DD DSN=SYS3.DUMMYMAC,DISP=SHR,DCB=BLKSIZE=27920
        17 //         DD DSN=WYL.GG.ORV.MACLIB,DISP=SHR
        18 //         DD DSN=WYL.GG.SYS.MACLIB,DISP=SHR
        19 //SYSUT1   DD DSN=&&SYSUT1,UNIT=VIO,DISP=(,DELETE),
           //            SPACE=(4088,(500,250),,CONTIG,ROUND)
        20 //SYSTERM  DD SYSOUT=$
        21 //SYSPRINT DD DSN=&&PRINT,UNIT=SYSDA,DISP=(,PASS),
           //            SPACE=(6650,(250,250),RLSE),
           //            DCB=(BLKSIZE=6650,LRECL=133,RECFM=FB)
        22 //SYSLIN   DD DSN=WYL.GG.PJG.OBJ(ASMASTER),DISP=OLD
        23 //SYSUDUMP DD SYSOUT=A
        24 //SYSIN    DD DSN=&&INPUT,DISP=(OLD,DELETE)
        25 //$EDIT  EXEC PGM=ASMEDIT,REGION=1M,
           //            COND=EVEN,PARM='STMT,DATA'
        26 //STEPLIB  DD DSN=WYL.GG.SYS.LINKLIB,DISP=SHR
        27 //ASMOUT   DD DSN=&&PRINT,DISP=(OLD,DELETE)
        28 //SYSPRINT DD SYSOUT=A
        29 //SYSUDUMP DD SYSOUT=A
1 STMT NO. MESSAGE
         2 IEFC001I PROCEDURE PURGEOLD WAS EXPANDED USING SYSTEM LIBRARY SYS3.BETAPROC
        14 IGD01010I STORCLAS= TEMP STORGROUP =
        14 IGD01010I STORGRP=VIO ASSIGNED.
        19 IGD01010I STORCLAS= TEMP STORGROUP =
        19 IGD01010I STORGRP=VIO ASSIGNED.
        21 IGD01010I STORCLAS= TEMP STORGROUP =
        21 IGD01010I STORGRP=VIO ASSIGNED.
 ICH70001I GG$PJG   LAST ACCESS AT 09:38:15 ON MONDAY, MARCH 22, 2004
 IEF142I PJG#AMST $$QUIET - STEP WAS EXECUTED - COND CODE 0008
 *********************************************************************************
 *   PJG#AMST/$$QUIET /                    Return Code      0008                 *
 *   Region used      260K (16K user + 244K system)                              *
 *   Extended region  9348K (4K user + 9344K system)                             *
 *                                                                               *
 *   Paging              In      Out                                             *
 *   Private <-> Aux      0        0       CPU time (TCB)   00:00:00.01          *
 *   Private <-> Exp      0        0       CPU time (SRB)   00:00:00.00          *
 *   VIO                  0        0       Elapsed time    920:49:31.59          *
 *   Common               0      ---                                             *
 *                                                                               *
 *                                                                               *
 *   CPU Usage          0.18         $0.11  Standard Processing Unit Equivalent  *
 *                                   $0.11  Total Step execution charge          *
 *                                                                               *
 *    I/O count  DDname   Type Addr           I/O count  DDname   Type Addr      *
 *                         *** No I/O for this step ***                          *
 *********************************************************************************
 IEF373I STEP/$$QUIET /START 2004082.0938
 IEF374I STEP/$$QUIET /STOP  2004082.0938 CPU    0MIN 00.01SEC SRB    0MIN 00.00SEC VIRT    16K SYS   244K EXT       4K SYS    9344K
 IEF236I ALLOC. FOR PJG#AMST $CND
 IEF237I 0401 ALLOCATED TO STEPLIB
 IEF237I JES2 ALLOCATED TO SYSPRINT
 IEF237I 04DC ALLOCATED TO SYSUT1
 IEF237I 04DC ALLOCATED TO SYSUT2
 IEF237I DMY  ALLOCATED TO SYSIN
 IEF142I PJG#AMST $CND - STEP WAS EXECUTED - COND CODE 0000
 IEF285I   WYL.GG.ORV.LINKLIB                           KEPT
 IEF285I   VOL SER NOS= SYSB01.
 IEF285I   GG$PJG.PJG#AMST.JOB05928.D0000101.?          SYSOUT
 IEF285I   WYL.GG.PJG.OBJ                               KEPT
 IEF285I   VOL SER NOS= SYSB05.
 IEF285I   WYL.GG.PJG.OBJ                               KEPT
 IEF285I   VOL SER NOS= SYSB05.
 *********************************************************************************
 *   PJG#AMST/$CND    /                    Return Code      Zero                 *
 *   Region used      280K (16K user + 264K system)                              *
 *   Extended region  9388K (4K user + 9384K system)                             *
 *                                                                               *
 *   Paging              In      Out                                             *
 *   Private <-> Aux      0        0       CPU time (TCB)   00:00:00.01          *
 *   Private <-> Exp      0        0       CPU time (SRB)   00:00:00.00          *
 *   VIO                  0        0       Elapsed time    920:49:30.56          *
 *   Common               0      ---                                             *
 *                                                                               *
 *                                                                               *
 *   CPU Usage          0.18         $0.11  Standard Processing Unit Equivalent  *
 *                                   $0.11  Total Step execution charge          *
 *                                                                               *
 *    I/O count  DDname   Type Addr           I/O count  DDname   Type Addr      *
 *            2  STEPLIB  Disk 0401                   0  SYSPRINT      ----      *
 *            0  SYSUT1   Disk 04DC                   0  SYSUT2   Disk 04DC      *
 *            0  SYSIN         ----                                              *
 *********************************************************************************
 IEF373I STEP/$CND    /START 2004082.0938
 IEF374I STEP/$CND    /STOP  2004082.0938 CPU    0MIN 00.01SEC SRB    0MIN 00.00SEC VIRT    16K SYS   264K EXT       4K SYS    9384K
 IEF236I ALLOC. FOR PJG#AMST $UNP
 IEF237I JES2 ALLOCATED TO SYSPRINT
 IEF237I 0402 ALLOCATED TO SYSUT1
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT2  )
         DSN (SYS04082.T093821.RA000.PJG#AMST.INPUT.H01   )
         STORCLAS (TEMP) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= SCR101
 IEF142I PJG#AMST $UNP - STEP WAS EXECUTED - COND CODE 0000
 IEF285I   GG$PJG.PJG#AMST.JOB05928.D0000102.?          SYSOUT
 IEF285I   WYL.GG.ORV.SOURCE                            KEPT
 IEF285I   VOL SER NOS= SYSB02.
 IGD106I SYS04082.T093821.RA000.PJG#AMST.INPUT.H01    PASSED,    DDNAME=SYSUT2
 *********************************************************************************
 *   PJG#AMST/$UNP    /                    Return Code      Zero                 *
 *   Region used      380K (108K user + 272K system)                             *
 *   Extended region  9468K (4K user + 9464K system)                             *
 *                                                                               *
 *   Paging              In      Out                                             *
 *   Private <-> Aux      0        0       CPU time (TCB)   00:00:00.05          *
 *   Private <-> Exp      0        0       CPU time (SRB)   00:00:00.00          *
 *   VIO                  0        0       Elapsed time    920:49:30.44          *
 *   Common               0      ---                                             *
 *                                                                               *
 *                                                                               *
 *   CPU Usage          0.93         $0.57  Standard Processing Unit Equivalent  *
 *                                   $0.57  Total Step execution charge          *
 *                                                                               *
 *    I/O count  DDname   Type Addr           I/O count  DDname   Type Addr      *
 *            0  SYSPRINT      ----                   2  SYSUT1   Disk 0402      *
 *           12  SYSUT2   Disk 04E3                                              *
 *********************************************************************************
 IEF373I STEP/$UNP    /START 2004082.0938
 IEF374I STEP/$UNP    /STOP  2004082.0938 CPU    0MIN 00.05SEC SRB    0MIN 00.00SEC VIRT   108K SYS   272K EXT       4K SYS    9464K
 IEF236I ALLOC. FOR PJG#AMST ASM
 IEF237I 0402 ALLOCATED TO SYSLIB
 IEF237I 0402 ALLOCATED TO
 IEF237I 04DC ALLOCATED TO
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT1  )
         DSN (SYS04082.T093821.RA000.PJG#AMST.SYSUT1.H01  )
         STORCLAS (TEMP) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= VIO
 IEF237I JES2 ALLOCATED TO SYSTERM
 IGD101I SMS ALLOCATED TO DDNAME (SYSPRINT)
         DSN (SYS04082.T093821.RA000.PJG#AMST.PRINT.H01   )
         STORCLAS (TEMP) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= SCR101
 IEF237I 04DC ALLOCATED TO SYSLIN
 IEF237I JES2 ALLOCATED TO SYSUDUMP
 IGD103I SMS ALLOCATED TO DDNAME SYSIN
 IEF142I PJG#AMST ASM - STEP WAS EXECUTED - COND CODE 0000
 IEF285I   SYS3.DUMMYMAC                                KEPT
 IEF285I   VOL SER NOS= SYSB02.
 IEF285I   WYL.GG.ORV.MACLIB                            KEPT
 IEF285I   VOL SER NOS= SYSB02.
 IEF285I   WYL.GG.SYS.MACLIB                            KEPT
 IEF285I   VOL SER NOS= SYSB05.
 IGD105I SYS04082.T093821.RA000.PJG#AMST.SYSUT1.H01   DELETED,   DDNAME=SYSUT1
 IEF285I   GG$PJG.PJG#AMST.JOB05928.D0000103.?          SYSOUT
 IGD106I SYS04082.T093821.RA000.PJG#AMST.PRINT.H01    PASSED,    DDNAME=SYSPRINT
 IEF285I   WYL.GG.PJG.OBJ                               KEPT
 IEF285I   VOL SER NOS= SYSB05.
 IEF285I   GG$PJG.PJG#AMST.JOB05928.D0000104.?          SYSOUT
 IGD105I SYS04082.T093821.RA000.PJG#AMST.INPUT.H01    DELETED,   DDNAME=SYSIN
 *********************************************************************************
 *   PJG#AMST/ASM     /                    Return Code      Zero                 *
 *   Region used      8476K (8192K user + 284K system)                           *
 *   Extended region  9952K (412K user + 9540K system)                           *
 *                                                                               *
 *   Paging              In      Out                                             *
 *   Private <-> Aux      0        0       CPU time (TCB)   00:00:01.60          *
 *   Private <-> Exp      0        0       CPU time (SRB)   00:00:00.04          *
 *   VIO                  0        0       Elapsed time    920:49:30.17          *
 *   Common               0      ---                                             *
 *                                                                               *
 *                                                                               *
 *   CPU Usage         30.00        $18.60  Standard Processing Unit Equivalent  *
 *                                  $18.60  Total Step execution charge          *
 *                                                                               *
 *    I/O count  DDname   Type Addr           I/O count  DDname   Type Addr      *
 *           73  SYSLIB   Disk 0402                   0  SYSLIB   Disk 0402      *
 *          128  SYSLIB   Disk 04DC                   0  SYSUT1   VIO  ----      *
 *            0  SYSTERM       ----                  96  SYSPRINT Disk 04E3      *
 *            2  SYSLIN   Disk 04DC                   0  SYSUDUMP      ----      *
 *           13  SYSIN    Disk 04E3                                              *
 *********************************************************************************
 IEF373I STEP/ASM     /START 2004082.0938
 IEF374I STEP/ASM     /STOP  2004082.0938 CPU    0MIN 01.60SEC SRB    0MIN 00.04SEC VIRT  8192K SYS   284K EXT     412K SYS    9540K
 IEF236I ALLOC. FOR PJG#AMST $EDIT
 IEF237I 0402 ALLOCATED TO STEPLIB
 IGD103I SMS ALLOCATED TO DDNAME ASMOUT
 IEF237I JES2 ALLOCATED TO SYSPRINT
 IEF237I JES2 ALLOCATED TO SYSUDUMP
 IEF142I PJG#AMST $EDIT - STEP WAS EXECUTED - COND CODE 0000
 IEF285I   WYL.GG.SYS.LINKLIB                           KEPT
 IEF285I   VOL SER NOS= SYSB02.
 IGD105I SYS04082.T093821.RA000.PJG#AMST.PRINT.H01    DELETED,   DDNAME=ASMOUT
 IEF285I   GG$PJG.PJG#AMST.JOB05928.D0000105.?          SYSOUT
 IEF285I   GG$PJG.PJG#AMST.JOB05928.D0000106.?          SYSOUT
 *********************************************************************************
 *   PJG#AMST/$EDIT   /                    Return Code      Zero                 *
 *   Region used      388K (116K user + 272K system)                             *
 *   Extended region  9468K (4K user + 9464K system)                             *
 *                                                                               *
 *   Paging              In      Out                                             *
 *   Private <-> Aux      0        0       CPU time (TCB)   00:00:00.35          *
 *   Private <-> Exp      0        0       CPU time (SRB)   00:00:00.01          *
 *   VIO                  0        0       Elapsed time    920:49:26.72          *
 *   Common               0      ---                                             *
 *                                                                               *
 *                                                                               *
 *   CPU Usage          6.56         $4.06  Standard Processing Unit Equivalent  *
 *                                   $4.06  Total Step execution charge          *
 *                                                                               *
 *    I/O count  DDname   Type Addr           I/O count  DDname   Type Addr      *
 *            2  STEPLIB  Disk 0402                  97  ASMOUT   Disk 04E3      *
 *            0  SYSPRINT      ----                   0  SYSUDUMP      ----      *
 *********************************************************************************
 IEF373I STEP/$EDIT   /START 2004082.0938
 IEF374I STEP/$EDIT   /STOP  2004082.0938 CPU    0MIN 00.35SEC SRB    0MIN 00.01SEC VIRT   116K SYS   272K EXT       4K SYS    9464K
 *********************************************************************************
 *                                                                               *
 *                      S t a n f o r d   U n i v e r s i t y                    *
 *                                                                               *
 *                              *** Job Summary ***                              *
 *                                                                               *
 *   System Id      SYSB                   Input time     09:38:15  Mar 22, 2004 *
 *                                                                               *
 *   System Release SP6.1.0                Start time     09:38:21  Mar 22, 2004 *
 *                                                                               *
 *   Job name       PJG#AMST               Stop  time     00:00:00  Mar 22, 2004 *
 *                                                                               *
 *   Account        PJG$GG                 Elapsed time  920:49:31.59            *
 *                                                                               *
 *   User Name      Module: ASMASTER       CPU time       00:00:02.02            *
 *                                                                               *
 *   Job class      E                      SRB Time       00:00:00.05            *
 *                                                                               *
 *********************************************************************************
 IEF375I  JOB/PJG#AMST/START 2004082.0938
 IEF376I  JOB/PJG#AMST/STOP  2004082.0938 CPU    0MIN 02.02SEC SRB    0MIN 00.05SEC
1Data set successfully converted from EDIT to FB format
1Assembler Done ASMASTER No Statements Flagged
1         High Level Assembler Option Summary                   (PTF UQ57391)                                               Page    1
-                                                                                            HLASM R4.0  2004/03/22 09.38
0  No Overriding ASMAOPT Parameters
   Overriding Parameters-  SYSPARM(ASMASTER),TERM,LANG(EN),OBJ,LC(32500),XREF(SHORT),NODECK,NORLD,NODX,NOUS
   No Process Statements


   Options for this Assembly
0  NOADATA
     ALIGN
   NOASA
     BATCH
     CODEPAGE(047C)
   NOCOMPAT
   NODBCS
 3 NODECK
 3 NODXREF
     ESD
   NOEXIT
     FLAG(0,ALIGN,CONT,NOIMPLEN,NOPAGE0,PUSH,RECORD,NOSUBSTR,USING0)
   NOFOLD
   NOGOFF
   NOINFO
 3   LANGUAGE(EN)
   NOLIBMAC
 3   LINECOUNT(32500)
     LIST(121)
     MXREF(SOURCE)
 3   OBJECT
     OPTABLE(UNI,NOLIST)
   NOPCONTROL
   NOPESTOP
   NOPROFILE
   NORA2
   NORENT
 3 NORLD
     RXREF
     SIZE(MAX)
 3   SYSPARM(ASMASTER)
 3   TERM(WIDE)
   NOTEST
     THREAD
   NOTRANSLATE
 3 NOUSING
 3   XREF(SHORT)

   No Overriding DD Names

1ASMASTER External Symbol Dictionary                                                                                        Page    2
-Symbol   Type   Id     Address  Length     LD ID  Flags Alias-of                            HLASM R4.0  2004/03/22 09.38
0ASMASTER  SD 00000001 00000000 00000AE0             06
 ASMA00    LD          00000000           00000001
 ASMGBLIN  LD          00000022           00000001
 ASMLCLIN  LD          00000062           00000001
 ASMGBLX   LD          00000092           00000001
 ASMLCLX   LD          000000BC           00000001
 ASMTASK   LD          000000EC           00000001
 ASPACE16  LD          00000162           00000001
 XALGOF16  LD          00000248           00000001
 ARMEMR16  LD          00000328           00000001
 APIXIT16  LD          000003FE           00000001
 XASEND    LD          0000045A           00000001
 XAWAIT    LD          00000506           00000001
 ARTXIT16  LD          00000570           00000001
 ASTIME16  LD          000005C0           00000001
 ARTIME16  LD          00000696           00000001
 ACTIME16  LD          00000716           00000001
 AQHALT16  LD          00000756           00000001
 XALGOFF   LD          000007A8           00000001
 XARMEM    LD          0000080E           00000001
 ARMEMX16  LD          000009D2           00000001
 IOSASC    ER 00000002
 LQEALL    ER 00000003
 TERMINAS  ER 00000004
 LQEDALL   ER 00000005
 VMGET     ER 00000006
 TCREATE   ER 00000007
 AWAIT     ER 00000008
 SIGNAL    ER 00000009
 VMFREE    ER 0000000A
 ENQASTRM  ER 0000000B
 TERMLGOF  ER 0000000C
 NETLOGOF  ER 0000000D
 ACLOGOFF  ER 0000000E
 ASEXIT    ER 0000000F
 EXRADD    ER 00000010
 XITMASK   ER 00000011
 EXRDEL    ER 00000012
 XITGST    ER 00000013
 XITPST    ER 00000014
 EXRDONE   ER 00000015
 XITNEW    ER 00000016
 RTSET     ER 00000017
 XITDEL    ER 00000018
 RTCAN     ER 00000019
 ASLOCK    ER 0000001A
 TEXIT     ER 0000001B
 SYSRNEW   ER 0000001C
 SYSRDEL   ER 0000001D

1ASMASTER ORVYL'S Address space master task                                                                                 Page    3
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement                    (Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                      2       2.              COPY  HEADER
                                       3             =*********************************************************************
                                       4             =*                                                                   *
                                       5             =*                                                                   *
                                       6             =*                          M P - O R V Y L                          *
                                       7             =*                                                                   *
                                       8             =*       ORVYL - Release 5.0 - Class I - Stanford Proprietary        *
                                       9             =*                                                                   *
                                      10             =*                                                                   *
                                      11             =*********************************************************************
-
-                                     13             =         SPLEVEL SET=2
                                      16             =         HIBAL ASSOC=YES
-
                                     998             =*
                                     999             =* REGISTER CONVENTIONS (USE ONLY THE SYMBOLS)
                                    1000             =*
                                    1001             =*                     CLASS  USAGE
                                    1002             =*                     -----  -----------------------------
                                    1003             =RVR      REG   0        1    RETURN VALUE REGISTER
                                    1015             =RS       REG   1        *    SCRATCH
                                    1027             =RA       REG   2        *    SCRATCH
                                    1039             =RB       REG   3        *    SCRATCH
                                    1051             =RJ       REG   4        *    SCRATCH
                                    1063             =RK       REG   5        *    SCRATCH
                                    1075             =RX       REG   6        *    SCRATCH
                                    1087             =RY       REG   7        *    SCRATCH
                                    1099             =RM       REG   8        *    SCRATCH
                                    1111             =RN       REG   9        *    SCRATCH (In Guest)
                                    1123             =RTCBR    REG   9        -    POINTER TO THE RTCB (In Host)
                                    1135             =BR       REG   10       -    FIRST BASE REGISTER
                                    1147             =BRR      REG   11       -    SECOND BASE REGISTER
                                    1159             =WAR      REG   12       -    WORK AREA POINTER
                                    1171             =SPR      REG   13       -    STACK TOP POINTER
                                    1183             =RAR      REG   14       1    RETURN ADDRESS REGISTER
                                    1195             =EPAR     REG   15       1    ENTRY POINT ADDRESS
                                    1207             =*
                                    1208             =*      CLASS   MEANING
                                    1209             =*      -----   --------------------------------------------------
                                    1210             =*        *     Register may be freely used for scratch
                                    1211             =*        -     Register may not be used
                                    1212             =*        1     Available but may change on subroutine calls
                                    1213             =*
1ASMASTER ORVYL'S Address space master task                                                                                 Page    4
0D-Loc  Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+_____  ______ ____    _____ _____  ____ __ ______    ______ _________
0
-
                                    1216       4.     DISABLE  EQU   X'BC'                   Disable 'AND' mask
 000000                00000 00AE0  1217       5.     ASMASTER MODULE TRCNUM=16
                                    1227             +*
                                    1228    02-IDENT +         ENTRY ASMA00
                                    1229             +
 000000 14C1E2D4C1F0F06B            1230    02-IDENT +ASMA00   DC    AL1(20),C'ASMA00,22MAR04,09:38'
                                    1231             +*
1ASMASTER (ASMA00) (09:38) (22MAR04) ORVYL'S Address space master task                                                      Page    5
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   1234       7.              COPY  PZERO
 000000                00000 00280  1235             =PZERO    RECORD BEGIN
                                    1243  1          =*
                                    1244  1          =* Real Page 0.  Each CPU has its own copy of this area.
                                    1245  1          =*
-                                   1247  1          =****************************************************************
                                    1248  1          =*               Fields Fixed by the Architecture               *
                                    1249  1          =*               ********************************               *
                                    1250  1          =*                                                              *
 000000                             1251  1          =PZRSNPSW   DS    D             Restart new PSW                 *
 000008                             1252  1          =PZRSOPSW   DS    D             Restart old PSW                 *
 000010                             1253  1          =           DS    D                                             *
 000018                             1254  1          =PZEXOPSW   DS    D             External old PSW                *
 000020                             1255  1          =PZSVOPSW   DS    D             Supervisor old PSW              *
 000028                             1256  1          =PZPIOPSW   DS    D             Program old PSW                 *
 000030                             1257  1          =PZMCOPSW   DS    D             Machine check old PSW           *
 000038                             1258  1          =PZIOOPSW   DS    D             I/O old PSW                     *
 000040                             1259  1          =           DS    3D                                            *
 000058                             1260  1          =PZEXNPSW   DS    D             External new PSW                *
 000060                             1261  1          =PZSVNPSW   DS    D             Supervisor new PSW              *
 000068                             1262  1          =PZPINPSW   DS    D             Program new PSW                 *
 000070                             1263  1          =PZMCNPSW   DS    D             Machine check new PSW           *
 000078                             1264  1          =PZIONPSW   DS    D             I/O new PSW                     *
 000080                             1265  1          =           DS    F                                             *
 000084                             1266  1          =PZEXCPU    DS    H             CPU address for EXT int         *
 000086                             1267  1          =PZEXIC     DS    H             External interrupt code         *
 000088                             1268  1          =PZSVILC    DS    H             Supervisor call ILC             *
 00008A                             1269  1          =PZSVIC     DS    H             Supervisor interrupt code       *
 00008C                             1270  1          =PZPIILC    DS    H             Program ILC                     *
 00008E                             1271  1          =PZPIIC     DS    H             Program interrupt code          *
 000090                             1272  1          =PZTREXA    DS    A             Translation exception address   *
 000094                             1273  1          =PZMONCL    DS    H             Monitor Class number            *
 000096                             1274  1          =PZPERCD    DS    H             PER code                        *
 000098                             1275  1          =PZPERA     DS    A             PER Address                     *
 00009C                             1276  1          =PZMONCD    DS    A             Monitor Code                    *
 0000A0                             1277  1          =           DS    3D                                            *
 0000B8                             1278  1          =PZIOSID    DS    A             I/O subsystem ID word           *
 0000BC                             1279  1          =PZIOPRM    DS    A             I/O Parameter                   *
 0000C0                             1280  1          =PZIOSCS    DS    A             I/O subchannel ending status    *
 0000C4                             1281  1          =           DS    A                                             *
 0000C8                             1282  1          =           DS    39D                                           *
                                    1283  1          =*                                                              *
                                    1284  1          =*            ***************************************           *
                                    1285  1          =*            End of Fields fixed by the architecture           *
                                    1286  1          =****************************************************************
1ASMASTER (ASMA00) (09:38) (22MAR04) ORVYL'S Address space master task                                                      Page    6
0D-Loc  Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+_____  ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   1288  1          =*
                                    1289  1          =* Fields of general interest
                                    1290  1          =*
 000200                             1291  1          =PZMATP     DS    A             Address of the MAT
 000204                             1292  1          =           DS    A             ** Reserved **
 000208                             1293  1          =PZCURPID   DS    0D            Unique ID of the current process
 000208                             1294  1          =PZCURASB   DS    A             Addr of ASB for current Address space
 00020C                             1295  1          =PZCURTSK   DS    A             ID of current task in the Address space
 000210                             1296  1          =PZLCPUA    DS    A             Logical CPU address
 000214                             1297  1          =PZCPUMSK   DS    A             CPU address mask bit
 000218                             1298  1          =PZPSWM     DS    X             PSW mask for disabling
 000219                             1299  1          =           DS    X             ** Reserved **
                                    1300  1          =*
                                    1301  1          =* Termination/Trace information
                                    1302  1          =*
 00021A 00                          1303  1          =PZTERMFL   FLAG  ,             Termination flags
 PZTERMFL.PZABORT  80 ONES          1307  1          =           FLAG  PZABORT         ABORT macro issued
 PZTERMFL.PZATERM  40 ONES          1312  1          =           FLAG  PZATERM         Start termination processing
 00021B                             1317  1          =PZABSM     DS    X             Save area for system mask in ABORT
 00021C                             1318  1          =PZABR15    DS    A             Save area for R15 in an ABORT
 000220                             1319  1          =PZTZOFF    DS    D             Time zone offset
 000228                             1320  1          =           DS    22A           ** Reserved **
                                    1321  1          =*         DS    24A           ** Reserved **
 000280                00280 00280  1322             =         END   ,
 USING  PZERO,R0                    1331       8.              USING PZERO,R0
1ASMASTER (ASMA00) (09:38) (22MAR04) ORVYL'S Address space master task                                                      Page    7
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   1341      10.              COPY  ASB
 000000                00000 00044  1342             =ASB      RECORD BEGIN
 000000 C1E2C240                    1350  1          =ASBID      DC    CL4'ASB'
 000004                             1351  1          =ASBNEXT    DS    A                       Next ASB in system
                                    1352  1          =*
                                    1353  1          =*  Load Address Space Parameters area
                                    1354  1          =*
 000008                             1355  1          =ASBLASP    DS    0D                      Load Addr Space Parms
 000008                             1356  1          =ASBPKM     DS    H                       Program Key Mask
 00000A                             1357  1          =ASBSASN    DS    H                       Secondary ASN
 00000C                             1358  1          =ASBAX      DS    H                       Authorization index
 00000E                             1359  1          =ASBPASN    DS    H                       Primary ASN
                                    1360  1          =ASBLPARM   EQU   3                       LASP parameter
                                    1361  1          =
 000010                             1362  1          =ASBSASB    DS    A                       Address of secondary ASB
 000014 00                          1363  1          =ASBGCFLG   FLAG  ,
 ASBGCFLG.ASBFGBLC 80 ONES          1367  1          =           FLAG  ASBFGBLC                This is ASB for global/common
 000015                             1372  1          =           DS    3X                      - Available -
                                    1373  1          =*
                                    1374  1          =*  Related control blocks
                                    1375  1          =*
 000018                             1376  1          =ASBVSCT    DS    A                       VSCT for the Address space
 00001C                             1377  1          =ASBASDB    DS    A                       AS dispatching block
 000020                             1378  1          =ASBPAGB    DS    A                       AS paging block
 000024                             1379  1          =ASBIOB     DS    A                       AS I/O block
 000028                             1380  1          =ASBENQ     DS    A                       AS Enqueue table
 00002C                             1381  1          =ASBM1SCP   DS    A                       Mode 1 SCP
 000030                             1382  1          =ASBTCCB    DS    A                       Terminal Control block
 000034                             1383  1          =ASBAIB     DS    A                       Accouting information
 000038                             1384  1          =ASBASFB    DS    A                       File services control block
 00003C                             1385  1          =ASBMSTR    DS    A                       AS Master Control block
 000040                             1386  1          =ASBNET     DS    A                       Local Network Control Block
                                    1387  1          =*ASBLW    DS    A     ** Temp RESMAN ** Lock waiting for
                                    1388  1          =*ASBLH    DS    A     ** Temp RESMAN ** Lock held
 000044                00044 00044  1389             =         END   ,
1ASMASTER (ASMA00) (09:38) (22MAR04) ORVYL'S Address space master task                                                      Page    8
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   1399      12.              COPY  DISPPARM
                                    1400             =*****************************************************************
                                    1401             =*                                                               *
                                    1402             =*  DISPPARM -- Parameters for the dispatcher global routines.   *
                                    1403             =*                                                               *
                                    1404             =*****************************************************************
-                                   1406             =*
                                    1407             =* Routines to indicate completion of a page or swap I/O
                                    1408             =*
 000000                00000 00004  1409             =@DISPPIOC RECORD BEGIN                 Page I/O completion parms
 000000                             1417  1          =@DPIOASB   DS    A                       ASB of completing I/O
 000004                00004 00004  1418             =         END   ,
0000000                00000 00004  1428             =@DISPSIOC RECORD BEGIN                 Swap I/O completion parms
 000000                             1436  1          =@DSIOASB   DS    A                       ASB of completing I/O
 000004                00004 00004  1437             =         END   ,
-                                   1447             =*
                                    1448             =* SUSPEND parameters
                                    1449             =*
0000000                00000 00009  1451             =@SUSPEND RECORD BEGIN
 000000                             1459  1          =@SUSPCTL   DS    0D            ID of the Control level suspended
 000000                             1460  1          =@SUSPID    DS    A             ID of the task/address space suspended
 000004                             1461  1          =@SUSPLC    DS    A             For tasks: Level of control suspended
 000008 00                          1462  1          =@SUSPFLG   FLAG  ,
 @SUSPFLG.@SUSPLNG 80 ONES          1466  1          =           FLAG  @SUSPLNG      This will be of long duration
 @SUSPFLG.@SUSPAS  40 ONES          1471  1          =           FLAG  @SUSPAS       Suspend the entire address space
 @SUSPFLG.@SUSPPLC 20 ONES          1476  1          =           FLAG  @SUSPPLC      Suspend previous level of control
 000009                00009 00009  1481             =         END   ,
-                                   1491             =*
                                    1492             =* RESUMAS/RESUMTS parameters
                                    1493             =*
0000000                00000 00008  1495             =@RESUME  RECORD BEGIN
 000000                             1503  1          =@RESCTL    DS    0D            ID of the unit of work to be resumed
 000000                             1504  1          =@RESUNIT   DS    A             Address of the ASB/task Id to resume
 000004                             1505  1          =@RESLC     DS    A             Level of control in a task
 000008                00008 00008  1506             =         END   ,
-                                   1516             =*
                                    1517             =* DISPSHLD/DISPSREL parmameters
                                    1518             =*
0000000                00000 00004  1520             =@DISPSWP RECORD BEGIN
 000000                             1528  1          =@DISPSAS   DS    A             Address of the ASB being manipulated
 000004                00004 00004  1529             =         END   ,
1ASMASTER (ASMA00) (09:38) (22MAR04) ORVYL'S Address space master task                                                      Page    9
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   1539             =*
                                    1540             =* ACREATE parameters
                                    1541             =*
0000000                00000 00008  1543             =@ACREATE RECORD BEGIN
 000000                             1551  1          =@ACRPSW    DS    D             Instruction address for task
 000008                00008 00008  1552             =         END   ,
-                                   1562             =*
                                    1563             =* TCREATE parameters
                                    1564             =*
0000000                00000 00015  1566             =@TCREATE RECORD BEGIN
 000000                             1574  1          =@TCRPSW    DS    D             Initial PSW for the task
 000008                             1575  1          =@TCRPARM   DS    2A            Parameter for the task
 000010                             1576  1          =@TCRPRIO   DS    A             Adjustment to priority from Current task
 000014 00                          1577  1          =@TCRFLAG   FLAG  ,             Task creation flags
 @TCRFLAG.@TCRFSTK 80 ONES          1581  1          =           FLAG  @TCRFSTK        Task entered with a stack
 @TCRFLAG.@TCRFPAB 40 ONES          1586  1          =           FLAG  @TCRFPABS       Prio is absolute
 000015                00015 00015  1591             =         END   ,
-                                   1601             =*
                                    1602             =* TREMOVE parameters
                                    1603             =*
0000000                00000 00004  1605             =@TREMOVE RECORD BEGIN
 000000                             1613  1          =@TREID     DS    A             ID of the task to be removed
 000004                00004 00004  1614             =         END   ,
-                                   1624             =*
                                    1625             =* TENTRY Parameters  (on entry to a created task)
                                    1626             =*
0000000                00000 00008  1628             =@TENTRY  RECORD BEGIN
 000000                             1636  1          =@TEPARM    DS    2A            Entry parm for the task
 000008                00008 00008  1637             =         END   ,
-                                   1647             =*
                                    1648             =* TEXIT parameters
                                    1649             =*
0000000                00000 00004  1651             =@TEXIT   RECORD BEGIN
 000000                             1659  1          =           DS    A             Not used
 000004                00004 00004  1660             =         END   ,
-                                   1670             =*
                                    1671             =* SYSRNEW -- Get a new SYSR ID
                                    1672             =*
1ASMASTER (ASMA00) (09:38) (22MAR04) ORVYL'S Address space master task                                                      Page   10
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000000                00000 00004  1674             =@SYSRNEW RECORD BEGIN
 000000                             1682  1          =           DS    A             Not used
 000004                00004 00004  1683             =         END   ,
-                                   1693             =*
                                    1694             =* SYSRDEL -- Delete a previous SYSR ID
                                    1695             =*
 000000                00000 00004  1696             =@SYSRDEL RECORD BEGIN
 000000                             1704  1          =@SYSRDID   DS    A             Id of the SYSR
 000004                00004 00004  1705             =         END   ,
-                                   1715             =*
                                    1716             =* SYSRDO -- Schedule a system routine to run in another address space
                                    1717             =*
0000000                00000 0001C  1719             =@SYSRDO  RECORD BEGIN
 000000                             1727  1          =@SYSRID    DS    A             Id from SYSRNEW
 000004                             1728  1          =@SYSRASB   DS    A             ASB of the Address space where it goes
 000008                             1729  1          =@SYSRLOC   DS    A             Location of the system routine
 00000C                             1730  1          =@SYSRPRM   DS    4A            Parameters for the routine
 00001C                0001C 0001C  1731             =         END   ,
-                                   1741             =*
                                    1742             =* SYSRTN -- Parameter passed to a system routine
                                    1743             =*
0000000                00000 00010  1745             =@SYSRTN  RECORD BEGIN
 000000                             1753  1          =@SYSPARS   DS    4A            Parameters
 000010                00010 00010  1754             =         END   ,
-                                   1764             =*
                                    1765             =* PERSET -- Set the Per registers
                                    1766             =*
0000000                00000 0000C  1768             =@PERSET  RECORD BEGIN
 000000                             1776  1          =@PERSDAT   DS    3F            3 Registers (corresponds to CRs 9-11)
 00000C                0000C 0000C  1777             =         END   ,
-                                   1787             =*
                                    1788             =* MONSET -- Set the MON masks
                                    1789             =*
0000000                00000 00002  1791             =@MONSET  RECORD BEGIN
 000000                             1799  1          =@MONSDAT   DS    H             Monitor Class Mask
 000002                00002 00002  1800             =         END   ,
-                                   1810             =*
                                    1811             =* DSPSTAT -- Return Dispatcher Statistics
1ASMASTER (ASMA00) (09:38) (22MAR04) ORVYL'S Address space master task                                                      Page   11
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   1812             =*
0000000                00000 00020  1814             =@DSPSTAT RECORD BEGIN
 000000                             1822  1          =@DSPSST    DS    D             TOD clock when system started
 000008                             1823  1          =@DSPSCHG   DS    D             Total CPU time charged (TOD)
 000010                             1824  1          =@DSPSDSP   DS    D             Dispatch CPU time (TOD)
 000018                             1825  1          =@DSPSIOS   DS    D             I/O Service time (TOD)
 000020                00020 00020  1826             =         END   ,
1ASMASTER (ASMA00) (09:38) (22MAR04) ORVYL'S Address space master task                                                      Page   12
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   1836      14.              COPY  XITPARM                 Exit processing parameters
                                    1837             =*****************************************************************
                                    1838             =*                                                               *
                                    1839             =*  XITPARM --  Parameters for the routines dealing with exit    *
                                    1840             =*              routine definition and execution.                *
                                    1841             =*                                                               *
                                    1842             =*****************************************************************
-                                   1844             =*
                                    1845             =*  @EXRADD -- Define a new exit routine.
                                    1846             =*
0000000                00000 00015  1848             =@EXRADD  RECORD BEGIN
 000000                             1856  1          =@EXRTYPE   DS    A             Exit type bit map
 000004                             1857  1          =@EXRQUAL   DS    A             Exit Qualifier
 000008                             1858  1          =@EXRPSW    DS    D             Exit PSW
 000010                             1859  1          =@EXRPARM   DS    A             Parm for the exit
 000014 00                          1860  1          =@EXRAFLG   FLAG  ,
 @EXRAFLG.@EXRAFQ  80 ONES          1864  1          =           FLAG  @EXRAFQ       Exit should be qualified
 @EXRAFLG.@EXRAFS  40 ONES          1869  1          =           FLAG  @EXRAFS       System exit (entered with a stack)
 000015                00015 00015  1874             =         END   ,
-                                   1884             =*
                                    1885             =*  @EXRDEL -- Remove an exit routine definition.
                                    1886             =*
0000000                00000 00004  1888             =@EXRDEL  RECORD BEGIN
 000000                             1896  1          =@EXRDID    DS    A             Exit routine ID
 000004                00004 00004  1897             =         END   ,
-                                   1907             =*
                                    1908             =*  @EXRDONE -- Complete exit processing.
                                    1909             =*
0000000                00000 00001  1911             =@EXRDONE RECORD BEGIN
 000000 00                          1919  1          =@EXRDCD    FLAG  ,
 @EXRDCD.@EXRDFIN  00 EQ            1923  1          =           FLAG  (@EXRDFIN,0,EQ)         No further processing needed
 @EXRDCD.@EXRDNXT  01 EQ            1933  1          =           FLAG  (@EXRDNXT,1,EQ)         Percolate the exit request
 000001                00001 00001  1943             =         END   ,
-                                   1953             =*
                                    1954             =*  @XITNEW -- Define a new exit request.
                                    1955             =*
0000000                00000 00001  1957             =@XITNEW  RECORD BEGIN
 000000 00                          1965  1          =@XITNFL    FLAG  ,
 @XITNFL.@XITNFG   80 ONES          1969  1          =           FLAG  @XITNFG       Global exit request
 000001                00001 00001  1974             =         END   ,
1ASMASTER (ASMA00) (09:38) (22MAR04) ORVYL'S Address space master task                                                      Page   13
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   1984             =*
                                    1985             =*  @XITDEL -- Delete an exit request
                                    1986             =*
0000000                00000 00004  1988             =@XITDEL  RECORD BEGIN
 000000                             1996  1          =@XITDID    DS    A             Exit request ID
 000004                00004 00004  1997             =         END   ,
-                                   2007             =*
                                    2008             =*  @XITDO -- Schedule an exit.
                                    2009             =*
 000000                00000 00020  2010             =@XITDO   RECORD BEGIN
 000000                             2018  1          =@XITRQID   DS    A             Request ID (from XITNEW)
 000004                             2019  1          =@XITTSK    DS    A             Task Id where this exit is to run
 000008                             2020  1          =@XITTYPE   DS    X             Exit type (Integer)
 00000C                             2021  1          =@XITQUAL   DS    A             Exit qualifier
 000010                             2022  1          =@XITPARM   DS    XL16          Exit parameter area
 000020                00020 00020  2023             =         END   ,
-                                   2033             =*
                                    2034             =*  @XITGPST -- Info about the status of the previous level of control
                                    2035             =*              used by XITGST and XITPST
                                    2036             =*
0000000                00000 00068  2038             =@XITGPST RECORD BEGIN
 000000                             2046  1          =@XITSPSW   DS    D             PSW
 000008                             2047  1          =@XITSGPR   DS    16F           GPRs
 000048                             2048  1          =@XITSFPR   DS    4D            FPRs
 000068                00068 00068  2049             =         END   ,
-                                   2059             =*
                                    2060             =*  @XITMASK -- Modify the current exit mask
                                    2061             =*
0000000                00000 00005  2063             =@XITMASK RECORD BEGIN
 000000                             2071  1          =@XITMSK    DS    A             Bit mask of the data
 000004 00                          2072  1          =@XITMREQ   FLAG  ,             Request type
 @XITMREQ.@XITMSO  00 EQ            2076  1          =           FLAG  (@XITMSO,0,EQ)  OR this data into the mask
 @XITMREQ.@XITMSN  01 EQ            2086  1          =           FLAG  (@XITMSN,1,EQ)  AND this data into the mask
 @XITMREQ.@XITMSS  02 EQ            2096  1          =           FLAG  (@XITMSS,2,EQ)  Store this data into the mask
 000005                00005 00005  2106             =         END   ,
-                                   2116             =*
                                    2117             =* Definition of the types of exits
                                    2118             =*
0                                   2120             =XITTPI   EQU    0          * Program interrupt
                                    2121             =XITTSVC  EQU    1          * Supervisor Call
                                    2122             =XITTRTC  EQU    2            Real time clock expiration
                                    2123             =XITTCTC  EQU    3            CPU time clock expiration
1ASMASTER (ASMA00) (09:38) (22MAR04) ORVYL'S Address space master task                                                      Page   14
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   2124             =XITTPER  EQU    4            Program Event
                                    2125             =XITTMON  EQU    5            Monitor Call
                                    2126             =XITTLGO  EQU    6            Logoff
                                    2127             =XITTR07  EQU    7            -- reserved --
                                    2128             =XITTATTN EQU    8            Attention
                                    2129             =XITTIOCN EQU    9            I/O Completed normally
                                    2130             =XITTIOCA EQU   10            I/O Completed abnormally
-                                   2132             =*
                                    2133             =* Definition of the exit mask
                                    2134             =*
0000000                00000 00004  2136             =XITMSKD  RECORD BEGIN
                                    2144  1          =
 000000 00                          2145  1          =MITMK1     FLAG  ,             First byte of the mask
 MITMK1.XITMPI     80 ONES          2149  1          =           FLAG  XITMPI          Program interrupt
 MITMK1.XITMSVC    40 ONES          2154  1          =           FLAG  XITMSVC         Supervisor Call
 MITMK1.XITMRTC    20 ONES          2159  1          =           FLAG  XITMRTC         Real time clock expiration
 MITMK1.XITMCTC    10 ONES          2164  1          =           FLAG  XITMCTC         CPU time clock expiration
 MITMK1.XITMPER    08 ONES          2169  1          =           FLAG  XITMPER         Program Event
 MITMK1.XITMMON    04 ONES          2174  1          =           FLAG  XITMMON         Monitor Call
 MITMK1.XITMLGO    02 ONES          2179  1          =           FLAG  XITMLGO         Logoff
 MITMK1.XITMR07    01 ONES          2184  1          =           FLAG  XITMR07         -- reserved --
                                    2189  1          =
 000001 00                          2190  1          =MITMK2     FLAG  ,             Second byte of the mask
 MITMK2.XITMATTN   80 ONES          2194  1          =           FLAG  XITMATTN        Attention
 MITMK2.XITMIOCN   40 ONES          2199  1          =           FLAG  XITMIOCN        I/O Completed normally
 MITMK2.XITMIOCA   20 ONES          2204  1          =           FLAG  XITMIOCA        I/O Completed abnormally
                                    2209  1          =
 000002 00                          2210  1          =MITMK3     FLAG  ,             Third byte of the mask
                                    2214  1          =
 000003 00                          2215  1          =MITMK4     FLAG  ,             Fourth byte of the mask
 000004                00004 00004  2219             =         END   ,
-                                   2229             =*
                                    2230             =* Definition of Exit routine entry data area
                                    2231             =*
0000000                00000 00004  2233             =@XITDATA RECORD BEGIN
 000000                             2241  1          =@XITDSA    DS    A             Pointer to XITSAREA (exit status area)
 000004                00004 00004  2242             =         END   ,
-                                   2252             =*
                                    2253             =* Definition of the Exit Status area
                                    2254             =*
0000000                00000 0001C  2256             =XITSAREA RECORD BEGIN
 000000                             2264  1          =XITSRPRM   DS    A             Parm value for the Routine
 000004                             2265  1          =XITSTYPE   DS    X             Type of the exit
 000008                             2266  1          =XITSQUAL   DS    A             Exit Qualifier
 00000C                             2267  1          =XITSXPRM   DS    XL16          Exit parameter area
1ASMASTER (ASMA00) (09:38) (22MAR04) ORVYL'S Address space master task                                                      Page   15
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
000001C                0001C 0001C  2268             =         END   ,
1ASMASTER (ASMA00) (09:38) (22MAR04) ORVYL'S Address space master task                                                      Page   16
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   2278      16.              COPY  TIMEPARM                Timer mgmt parameters
                                    2279             =*****************************************************************
                                    2280             =*                                                               *
                                    2281             =*  TIMEPARM -- Parameters for the timer routines.               *
                                    2282             =*                                                               *
                                    2283             =*****************************************************************
-                                   2285             =*
                                    2286             =* Start a Real-time timer
                                    2287             =*
0000000                00000 00018  2289             =@RTSET   RECORD BEGIN
 000000                             2297  1          =@RTSCLK    DS    D             Time of day or interval in TOD format
 000008 00                          2298  1          =@RTSFLG    FLAG  ,             Request flags
 @RTSFLG.@RTSFINT  80 ONES          2302  1          =           FLAG  @RTSFINT       Interval timer
 00000C                             2307  1          =@RTSXIT    DS    A             ID of the Exit request
 000010                             2308  1          =@RTSPARM   DS    2A            Parms passed to the exit
 000018                00018 00018  2309             =         END   ,
-                                   2319             =*
                                    2320             =* Cancel (RTCAN) Or Check (RTCHK) a Real-time timer
                                    2321             =*
0000000                00000 00020  2323             =@RTCNCK  RECORD BEGIN        Cancel or Check
 000000                             2331  1          =@RTCID     DS    A             ID of the Timer
 000008                             2332  1          =@RTCCLK    DS    D             Interval until the clock expires
 000010                             2333  1          =@RTCPARM   DS    4A            Same as the parm area in exit
 000020                00020 00020  2334             =         END   ,
-                                   2344             =*
                                    2345             =* Layout of parms passed to the Real time timer exit
                                    2346             =*
0000000                00000 00010  2348             =RTEXIT   RECORD BEGIN
 000000                             2356  1          =RTXTID     DS    A             ID of the timer
 000004                             2357  1          =RTXXID     DS    A             ID of the timer Exit
 000008                             2358  1          =RTXPARM    DS    2A            Parms set when the timer was set
 000010                00010 00010  2359             =         END   ,
-                                   2369             =*
                                    2370             =* Start a CPU-time timer
                                    2371             =*
0000000                00000 00014  2373             =@CPSET   RECORD BEGIN
 000000                             2381  1          =@CPSCLK    DS    D             Time of day or interval in TOD format
 000008                             2382  1          =@CPSXIT    DS    A             ID of the Exit request
 00000C                             2383  1          =@CPSPARM   DS    2A            Parms passed to the exit
 000014                00014 00014  2384             =         END   ,
1ASMASTER (ASMA00) (09:38) (22MAR04) ORVYL'S Address space master task                                                      Page   17
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   2394             =*
                                    2395             =* Cancel (CPCAN) Or Check (CPCHK) a CPU-time timer
                                    2396             =*
0000000                00000 00020  2398             =@CPCNCK  RECORD BEGIN        Cancel or Check
 000000                             2406  1          =@CPCID     DS    A             ID of the Timer
 000008                             2407  1          =@CPCCLK    DS    D             Interval until the clock expires
 000010                             2408  1          =@CPCPARM   DS    4A            Same as the parm area in exit
 000020                00020 00020  2409             =         END   ,
-                                   2419             =*
                                    2420             =* Layout of parms passed to the CPU-time timer exit
                                    2421             =*
0000000                00000 00010  2423             =CPEXIT   RECORD BEGIN
 000000                             2431  1          =CPXTID     DS    A             ID of the timer
 000004                             2432  1          =CPXXID     DS    A             ID of the timer Exit
 000008                             2433  1          =CPXPARM    DS    2A            Parms set when the timer was set
 000010                00010 00010  2434             =         END   ,
1ASMASTER (ASMA00) (09:38) (22MAR04) ORVYL'S Address space master task                                                      Page   18
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   2444      18.              COPY  IOSIPARM                IOS init parameters
 000000                00000 00004  2445             =@IOSASC  RECORD BEGIN                  Address space init
 000000                             2453  1          =@IOASCAS   DS    A                       ASB for this addr space
 000004                00004 00004  2454             =         END   ,
1ASMASTER (ASMA00) (09:38) (22MAR04) ORVYL'S Address space master task                                                      Page   19
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   2464      20.              COPY  SIGPARM
                                    2465             =*
                                    2466             =*  AWAIT/AWAITAS parameters
                                    2467             =*    For task based calls, the ECB is a double word.
                                    2468             =*    For address space based calls, the ECB is a word.
                                    2469             =*
 000000                00000 00005  2470             =@AWAIT   RECORD BEGIN
 000000                             2478  1          =@AWTECB    DS    A                       Address of ECB
 000004 00                          2479  1          =@AWTFLG    FLAG  ,
 @AWTFLG.@AWTLONG  80 ONES          2483  1          =           FLAG  @AWTLONG                Long term wait
 000005                00005 00005  2488             =         END   ,
0                                   2498             =*
                                    2499             =*  SIGNAL/SIGNALAS parameters
                                    2500             =*    For task based calls, the ECB and post code is a double word.
                                    2501             =*    For address space based calls, the ECB and post code is a word.
                                    2502             =*
 000000                00000 00014  2503             =@SIGNAL  RECORD BEGIN
 000000                             2511  1          =@SGCODE    DS    D                       Post code
 000008                             2512  1          =@SGECB     DS    A                       Address of ECB
                                    2513  1          =*  -- Parms for task signal --
                                    2514  1          =*    Zero ASB means post in this AS
                                    2515  1          =*    @PSSRID is only used for cross AS posts
 00000C                             2516  1          =@SGASB     DS    A                       ASB to be posted
 000010                             2517  1          =@SGSRID    DS    A                       System routine ID for cross
                                    2518  1          =*                                          AS posting
 000014                00014 00014  2519             =         END   ,
1ASMASTER (ASMA00) (09:38) (22MAR04) ORVYL'S Address space master task                                                      Page   20
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   2529      22.              COPY  VMPARM
                                    2530             =*******************************************************************
                                    2531             =*                                                                 *
                                    2532             =*    Memory parms for inside the virtual machine.                 *
                                    2533             =*                                                                 *
                                    2534             =*******************************************************************
-000000                00000 0000B  2536             =@VMGET   RECORD BEGIN        Parm area for getting virtual memory
 000000                             2544  1          =@VMGLEN    DS    A             Amount of memory needed
 000004                             2545  1          =@VMGDAT    DS    A             More data. Address or maxlen.
 000008                             2546  1          =@VMGPOOL   DS    H             Pool/Subpool to get the memory from
 00000A 00                          2547  1          =@VMGFLG    FLAG  ,
 @VMGFLG.@VMGPAGE  80 ONES          2551  1          =           FLAG  @VMGPAGE      Page Aligned
 @VMGFLG.@VMGONEP  40 ONES          2556  1          =           FLAG  @VMGONEP      Don't cross page boundary
 00000B                0000B 0000B  2561             =         END   ,
-000000                00000 0000A  2571             =@VMFREE  RECORD BEGIN        Used for VMFREE and VMCHECK
 000000                             2579  1          =@VMFLOC    DS    A             Location of the storage to free
 000004                             2580  1          =@VMFLEN    DS    A             Amount to free
 000008                             2581  1          =@VMFPOOL   DS    H             Pool/Subpool where the storage lives
 00000A                0000A 0000A  2582             =         END   ,
-000000                00000 00009  2592             =@VMINFO  RECORD BEGIN        Returns User address limits/hash val
 000000                             2600  1          =@VMIUST    DS    A             Start of the user address space
 000004                             2601  1          =@VMIULEN   DS    A             Length of the user address space
 000008                             2602  1          =@VMITRSH   DS    X             Trash value
 000009                00009 00009  2603             =         END   ,
1ASMASTER (ASMA00) (09:38) (22MAR04) ORVYL'S Address space master task                                                      Page   21
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   2613      24.              COPY  XASPARM                 Cross address space parms
                                    2614             =*
                                    2615             =*  Parameter block for cross address space communication
                                    2616             =*
 000000                00000 0001C  2617             =XASPARM  RECORD BEGIN                  Command parms for XAS channel
 000000                             2625  1          =XAPLINK    DS    A                       CS link field
 000004                             2626  1          =XAPLEN     DS    A                       Length of this CB
 000008                             2627  1          =XAPCMD     DS    A                       Command code
 00000C                             2628  1          =XAPRC      DS    A                       Return code
 000010                             2629  1          =XAPSYSR    DS    A                       System routine ID
 000014                             2630  1          =XAPRASB    DS    A                       ASB of return AS to post
 000018                             2631  1          =XAPRECB    DS    A                       Addr of return ECB to post
 00001C                             2632  1          =XAPREQ     DS    0A                      Request dependent area
 00001C                0001C 0001C  2633             =         END   ,
                                    2642             =*
                                    2643             =*  Memory examination specicific section of XASPARM
                                    2644             =*
 000000                00000 0000C  2645             =XAPMEM   RECORD BEGIN                  Read memory parameters
 000000                             2653  1          =XAPSLOC    DS    A                       Source address of operation
 000004                             2654  1          =XAPDLOC    DS    A                       Destination buffer location
 000008                             2655  1          =XAPDLEN    DS    A                        and length
 00000C                0000C 0000C  2656             =         END   ,
                                    2665             =*
                                    2666             =*  Time-out processing parameters
                                    2667             =*
 000000                00000 00011  2668             =XAPTIME  RECORD BEGIN
 000000                             2676  1          =XATXRID    DS    A                       Exit routine ID
 000004                             2677  1          =XATXSID    DS    A                       Exit request ID
 000008                             2678  1          =XATXMSK    DS    A                       Previous exit mask
 00000C                             2679  1          =XATRTID    DS    A                       Real time timer
 000010 00                          2680  1          =XATFLAG    FLAG  ,
 XATFLAG.XATFMSK   80 ONES          2684  1          =           FLAG  XATFMSK                 Exit mask is valid
 000011                00011 00011  2689             =         END   ,
                                    2698             =*
                                    2699             =*  Command codes
                                    2700             =*
                                    2701             =XACLGOFF EQU   0                       Logoff code
                                    2702             =XACRMEM  EQU   4                       Read memory
                                    2703             =XACLAST  EQU   4                       -Last Code Defined-
                                    2704             =*
                                    2705             =*  Return codes for requests
                                    2706             =*
                                    2707             =XARCOK   EQU   0                       Return code - completed
                                    2708             =XARCFAIL EQU   4                       Function request failed
                                    2709             =XARCBUSY EQU   8                       Address space channel busy
                                    2710             =XARCSETUP EQU  12                      Failure in setting up request
                                    2711             =XARCTIME EQU   16                      Request timed-out
                                    2712             =XARCPOST EQU   20                      Trouble posting AS
                                    2713             =XARCNOAS EQU   24                      Requested AS not available
                                    2714             =XARCNIMP EQU   28                      Function not implemented
                                    2715             =*
                                    2716             =*  Definitions of data area for halt processing
                                    2717             =*
 000000                00000 0000C  2718             =XASHALT  RECORD BEGIN
1ASMASTER (ASMA00) (09:38) (22MAR04) ORVYL'S Address space master task                                                      Page   22
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000000                             2726  1          =XAHFP      DS    A                       Fwd ptr to nxt halt element
 000004                             2727  1          =XAHRTN     DS    A                       Addr of rtn for cleanup
 000008                             2728  1          =XAHPARM    DS    A                       Parameter for cleanup rtn
 00000C                0000C 0000C  2729             =         END   ,
0000000                00000 00004  2739             =@XACLEAN RECORD BEGIN                  Parameters for cleanup rtns
 000000                             2747  1          =@XACID     DS    A                       ID for cleanup
 000004                00004 00004  2748             =         END   ,
                                    2757             =*
                                    2758             =*  Parameter definitions for module routines
                                    2759             =*
 000000                00000 00008  2760             =@XASPACE RECORD BEGIN
 000000                             2768  1          =@XASPARM   DS    A                       Pointer to XASPARM
 000004                             2769  1          =@XASASB    DS    A                       ASB of remote AS
 000008                00008 00008  2770             =         END   ,
0000000                00000 00018  2780             =@XAMEM   RECORD BEGIN
 000000                             2788  1          =@XAMASB    DS    A                       ASB to get memory from
 000004                             2789  1          =@XAMSLOC   DS    A                       Source (local memory address)
 000008                             2790  1          =@XAMDLOC   DS    A                       Destination (global buffer)
 00000C                             2791  1          =@XAMDLEN   DS    A                        and length
 000010                             2792  1          =@XAMTIME   DS    D                       Timeout value (TOD units)
 000018                00018 00018  2793             =         END   ,
1ASMASTER (ASMA00) (09:38) (22MAR04) ORVYL'S Address space master task                                                      Page   23
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000000                00000 00024  2803      26.     ASMSTR   RECORD BEGIN                  Address space master cntl blk
 000000 C1D4E2E3                    2811  1   27.     ASMID      DC    CL4'AMST'               Alpha ID
 000004                             2812  1   28.                DS    A                       - Available -
 000008                             2813  1   29.     ASMPID     DS    D                       Address of our ASB
 000010                             2814  1   30.     ASMECB     DS    D                       Our ECB for cross AS synch
 000018                             2815  1   30.1    ASMMSG     DS    D                       CS message anchor
 000020                             2816  1   32.     ASMXHALT   DS    A                       Queue of halted XAS requests
 000024                00024 00024  2817      33.              END   ,
0000000                00000 00004  2827      33.2    @XACTION RECORD BEGIN
 000000                             2835  1   33.3    @XACPARM   DS    A                       Pointer to XASPARM
 000004                00004 00004  2836      33.4             END   ,
1ASMASTER (ASMA00) (09:38) (22MAR04) ORVYL'S Address space master task                                                      Page   24
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   2847      35.     *********************************************************************
                                    2848      36.     *  ASMGBLIN - Global init for address space                         *
                                    2849      37.     *                                                                   *
                                    2850      38.     *     Input - None                                                  *
                                    2851      39.     *                                                                   *
                                    2852      40.     *    Output - None                                                  *
                                    2853      41.     *                                                                   *
                                    2854      42.     *********************************************************************
 000016                             2855      43.     ASMGBLIN PROC  SCOPE=GLOBAL
 000016 C1E2D4C7C2D3C9D5            2861             +
 00001E 0000/0000                   2862             +
 000022 900F D004/18AF       00004  2864             +
 USING  ASMGBLIN,R10
 000028 50D0 C000/18CD       00000  2879             +
 00002E 9680 C000      00000        2881             +
 000032 41D0 C048            00048  2882             +
                                    2883      44.     *
                                    2884      45.     * Call IO supervisor initialization for this ASB
                                    2885      46.     *
 USING  @IOSASC-72,R13              2886      47.              PSET  @IOSASC
 000036 D703 D048 D048 00000 00000  2903             +
 00003C 5080 D048            00000  2904      48.              ST    RM,@IOASCAS             Save the ASB address
 000040 58F0 AA0E/0DEF       00A30  2905      49.              VCALL IOSASC                  Do it's initialization
                                    2909      50.     *
                                    2910      51.     *  Allocate lock control blocks
                                    2911      52.     *
 000046 58F0 AA12/0DEF       00A34  2912      53.              VCALL LQEALL                  Allocate CBs for locks
                                    2916      54.
 00004C 981F C008            00008  2917      55.              PEND  ,
 DROP   ASMGBLIN,R10
 000050 9680 C000/0B0E 00000        2927             +
 DROP   @IOSASC-72,R13
1ASMASTER (ASMA00) (09:38) (22MAR04) ORVYL'S Address space master task                                                      Page   25
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   2937      57.     *********************************************************************
                                    2938      58.     *  ASMLCLIN - Local init for address space                          *
                                    2939      59.     *                                                                   *
                                    2940      60.     *     Input - None                                                  *
                                    2941      61.     *                                                                   *
                                    2942      62.     *    Output - None                                                  *
                                    2943      63.     *                                                                   *
                                    2944      64.     *********************************************************************
 000056                             2945      65.     ASMLCLIN PROC  SCOPE=GLOBAL
 000056 C1E2D4D3C3D3C9D5            2951             +
 00005E 0000/0000                   2952             +
 000062 900F D004/18AF       00004  2954             +
 USING  ASMLCLIN,R10
 000068 50D0 C000/18CD       00000  2969             +
 00006E 9680 C000      00000        2971             +
 000072 41D0 C048            00048  2972             +
                                    2973      66.     *
                                    2974      67.     * Call initialization routines for task based functions
                                    2975      68.     *
 000076 58F0 A9D6/0DEF       00A38  2976      69.              VCALL TERMINAS                Initialize terminal info
                                    2980      70.     * -->    VCALL FILEUINI                Initialize file system
 00007C 981F C008            00008  2981      71.              PEND  ,
 DROP   ASMLCLIN,R10
 000080 9680 C000/0B0E 00000        2991             +
1ASMASTER (ASMA00) (09:38) (22MAR04) ORVYL'S Address space master task                                                      Page   26
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   2998      73.     *********************************************************************
                                    2999      74.     *   ASMGBLX - Global termination for address space                  *
                                    3000      75.     *                                                                   *
                                    3001      76.     *     Input - None                                                  *
                                    3002      77.     *                                                                   *
                                    3003      78.     *    Output - None                                                  *
                                    3004      79.     *                                                                   *
                                    3005      80.     *********************************************************************
 000086                             3006      81.     ASMGBLX  PROC  SCOPE=GLOBAL
 000086 C1E2D4C7C2D3E740            3012             +
 00008E 0000/0000                   3013             +
 000092 900F D004/18AF       00004  3015             +
 USING  ASMGBLX,R10
 000098 50D0 C000/18CD       00000  3030             +
 00009E 9680 C000      00000        3032             +
 0000A2 41D0 C048            00048  3033             +
 0000A6 981F C008            00008  3034      82.              PEND  ,
 DROP   ASMGBLX,R10
 0000AA 9680 C000/0B0E 00000        3044             +
1ASMASTER (ASMA00) (09:38) (22MAR04) ORVYL'S Address space master task                                                      Page   27
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   3051      84.     *********************************************************************
                                    3052      85.     *   ASMLCLX - Local termination for address space                   *
                                    3053      86.     *                                                                   *
                                    3054      87.     *     Input - None                                                  *
                                    3055      88.     *                                                                   *
                                    3056      89.     *    Output - None                                                  *
                                    3057      90.     *                                                                   *
                                    3058      91.     *********************************************************************
 0000B0                             3059      92.     ASMLCLX  PROC  SCOPE=GLOBAL
 0000B0 C1E2D4D3C3D3E740            3065             +
 0000B8 0000/0000                   3066             +
 0000BC 900F D004/18AF       00004  3068             +
 USING  ASMLCLX,R10
 0000C2 50D0 C000/18CD       00000  3083             +
 0000C8 9680 C000      00000        3085             +
 0000CC 41D0 C048            00048  3086             +
                                    3087      93.     *
                                    3088      94.     * Call the various cleanup routines
                                    3089      95.     *
 0000D0 58F0 A980/0DEF       00A3C  3090     100.              VCALL LQEDALL                 We need one less of these
                                    3094     101.
 0000D6 981F C008            00008  3095     102.              PEND  ,
 DROP   ASMLCLX,R10
 0000DA 9680 C000/0B0E 00000        3105             +
1ASMASTER (ASMA00) (09:38) (22MAR04) ORVYL'S Address space master task                                                      Page   28
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   3112     104.     *********************************************************************
                                    3113     105.     *  ASMTASK - Master task for an address space in the guest          *
                                    3114     106.     *                                                                   *
                                    3115     107.     *    Input - PZERO contains the ASB address of this AS              *
                                    3116     108.     *                                                                   *
                                    3117     109.     *   Output - None                                                   *
                                    3118     110.     *                                                                   *
                                    3119     111.     *********************************************************************
 0000E0                             3120     112.     ASMTASK  PROC  @TENTRY,SCOPE=GLOBAL
 0000E0 C1E2D4E3C1E2D240            3126             +
 0000E8 0008/0000                   3127             +
 0000EC 900F D004/18AF       00004  3129             +
 USING  ASMTASK,R10
 0000F2 50D0 C000/18CD       00000  3144             +
 0000F8 9680 C000      00000        3146             +
 USING  @TENTRY-72,R12
 0000FC 41D0 C050            00050  3160             +
 000100 5880 0208            00208  3161     113.              L     RM,PZCURASB
 USING  ASB,R8                      3162     114.              WITH  (ASB,RM)
                                    3175     115.     *
                                    3176     116.     *  Allocate our work area
                                    3177     117.     *
 USING  @VMGET-72,R13               3178     118.              VMGET L'ASMSTR,LOC=GLOBHI,FIX=YES
 000104 D70A D048 D048 00000 00000  3202             +
 00010A 4100 0024            00024  3214             +
 00010E 5000 D048            00000  3219             +
 000112 D201 D050 A9F0 00008 00ADC  3220             +
 000118 58F0 A954/0DEF       00A40  3223             +
 00011E 1890                        3225     119.              LR    RN,RVR
 USING  ASMSTR,R9                   3226     120.              WITH  (ASMSTR,RN)
                                    3239     121.     *
                                    3240     122.     *  Set up our work area
                                    3241     123.     *
 000120                             3242     124.              CLEAR ASMSTR
 000120 D723 9000 9000 00000 00000  3248             +
 000126 D203 9000 A958 00000 00A44  3249     125.              MVC   ASMID,=CL4'AMST'        Put in our ID
 00012C                             3250     126.              PMOV  ASMPID,PZCURPID         And point to our process ID
 00012C D207 9008 0208 00008 00208  3254             +
 000132 5090 803C            0003C  3255     128.              PMOV  ASBMSTR,LA:ASMSTR       Put our CB addr in ASB
                                    3266     129.     *-------------------------*
                                    3267     130.     *  Start up task for user *
                                    3268     131.     *-------------------------*
 DROP   @VMGET-72,R13               3269     132.              PSET  @TCREATE
 USING  @TCREATE-72,R13
 000136 D714 D048 D048 00000 00000  3289             +
 00013C D207 D048 C048 00000 00000  3290     133.              MVC   @TCRPSW,@TEPARM         Set PSW
 000142 D203 D058 A95C 00010 00A48  3291     133.1             MVC   @TCRPRIO,=A(-10)          make this guy a little lower
 000148 9680 D05C      00014        3292     135.              SET   @TCRFSTK
 00014C 58F0 A960/0DEF       00A4C  3298     136.              VCALL TCREATE
                                    3302     137.     *
                                    3303     138.     *  Set up to receive cross address space communications
                                    3304     139.     *
 000152 41F0 A082/0DEF       0016E  3305     140.              LCALL XASPACE
 000158 981F C008            00008  3314     140.01            PEND  ,
1ASMASTER (ASMA00) (09:38) (22MAR04) ORVYL'S Address space master task                                                      Page   29
0Current Usings:  (PZERO,R0) (@TCREATE-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0DROP   ASMSTR,R9
 DROP   ASB,R8
 DROP   @TENTRY-72,R12
 DROP   ASMTASK,R10
 00015C 9680 C000/0B0E 00000        3339             +
 DROP   @TCREATE-72,R13
1ASMASTER (ASMA00) (09:38) (22MAR04) ORVYL'S Address space master task                                                      Page   30
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   3349     148.     *********************************************************************
                                    3350     149.     *  XASPACE task - runs in user address space and communicates w/    *
                                    3351     150.     *                 other tasks in cross-address-space functions      *
                                    3352     151.     *                                                                   *
                                    3353     152.     *   Input - None                                                    *
                                    3354     153.     *                                                                   *
                                    3355     154.     *  Output - None                                                    *
                                    3356     155.     *             Returns to caller on receipt of logoff msg            *
                                    3357     156.     *                                                                   *
                                    3358     157.     *********************************************************************
0000162                             3360     159.     XASPACE  PROC  ,
 000162 E7C1E2D7C1C3C540            3367             +
 00016A 0000/0000                   3368             +
 00016E 900F D004/18AF       00004  3370             +
 USING  XASPACE,R10
 000174 50D0 C000/18CD       00000  3385             +
 00017A 9680 C000      00000        3387             +
 00017E 41D0 C048            00048  3388             +
 000182 5880 0208            00208  3389     160.              L     RM,PZCURASB
 USING  ASB,R8                      3390     161.              WITH  (ASB,RM)
 000186 5890 803C            0003C  3403     162.              L     RN,ASBMSTR
 USING  ASMSTR,R9                   3404     163.              WITH  (ASMSTR,RN)
                                    3417     164.     *
                                    3418     165.     *  Free up our channel and loop, waiting for work to be done
                                    3419     166.     *
 00018A                             3420     168.     ASMWAIT  LOOP  BEGIN                   Wait for work
 USING  @AWAIT-72,R13               3427  1  169.                AWAIT ASMECB,LEN=LONG
 00018A D704 D048 D048 00000 00000  3445  1          +
 000190 4100 9010            00010  3457  1          +
 000194 5000 D048            00000  3462  1          +
 000198 9680 D04C      00004        3468  1          +
 00019C 58F0 A8E2/0DEF       00A50  3471  1          +
 0001A2                             3473  1  169.1               LOOP  BEGIN                   Pull items from chain
                                    3479  2  170.     *
                                    3480  2  171.     *  We have been posted... what should we do?
                                    3481  2  173.     *
 0001A2 9867 9018            00018  3482  2  173.1                 LM    RX,RY,ASMMSG
 USING  XASPARM,R6                  3483  2  173.2                 WITH  (XASPARM,RX)
 0001A6                             3496  2  173.3                 LOOP  BEGIN
 0001A6 1266/4780 A01C       0018A  3502  3  173.31                  IF    (RX,ZERO),NEXT,ASMWAIT  Get the command code
 0001AC 5820 6000            00000  3519  3  173.4                   L     RA,XAPLINK
 0001B0 1837                        3520  3  173.5                   LR    RB,RY
 0001B2 BB62 9018            00018  3521  3  173.6                   CDS   RX,RA,ASMMSG
 0001B6 4770 A038            001A6  3522  2  173.7                 UNTIL EQUAL,END
 0001BA 5870 6008            00008  3541  2  173.8                 L     RY,XAPCMD
                                    3542  2  177.     *
                                    3543  2  178.     *  Undefined command
                                    3544  2  179.     *
 0001BE 1277/4740 A05E       001CC  3545  2  180.                  IF    ((RY,NEG),OR,(RY,GT,XACLAST)),BEGIN
 0001C4 5970 A8E6            00A54  3569  2          +
 0001C8 47D0 A066            001D4  3570  2          +
 0001CC 4100 001C            0001C  3575  3  181.                    LA    RVR,XARCNIMP            Not implemented
 0001D0 47F0 A078            001E6  3576  3  182.                    B     DOANSWER
1ASMASTER (ASMA00) (09:38) (22MAR04) ORVYL'S Address space master task                                                      Page   31
0Current Usings:  (PZERO,R0) (XASPARM,R6) (ASB,R8) (ASMSTR,R9) (XASPACE,R10) (@AWAIT-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
00001D4                             3577  2  183.                  END   ,
                                    3581  2  184.     *
                                    3582  2  185.     *  Valid and defined command
                                    3583  2  186.     *
 DROP   @AWAIT-72,R13               3584  2  187.                  PSET  @XACTION                Set up to call rtn
 USING  @XACTION-72,R13
 0001D4 D703 D048 D048 00000 00000  3604  2          +
 0001DA 5060 D048            00000  3605  2  188.                  PMOV  @XACPARM,LA:XASPARM
 0001DE 5857 A0D2            00240  3616  2  189.                  L     RK,BTABLE(RY)             get routine address
 0001E2 18F5/0DEF                   3617  2  190.                  ACALL (RK)                        and go to it!
                                    3624  2  191.     *
                                    3625  2  192.     *  Answer back to the user that this request is finished.
                                    3626  2  193.     *  RVR contains the post code for the answer
                                    3627  2  194.     *
 0001E6                             3628  2  195.     DOANSWER     LABEL ,
 0001E6 5000 600C            0000C  3630  2  196.                  ST    RVR,XAPRC               Set return code
 DROP   @XACTION-72,R13             3631  2  197.                  SIGNL L:XAPRECB,LA:XASPARM,L:XAPRASB,L:XAPSYSR
 USING  @SIGNAL-72,R13
 0001EA D713 D048 D048 00000 00000  3652  2          +
 0001F0 D203 D050 6018 00008 00018  3657  2          +
 0001F6 5060 D04C            00004  3668  2          +
 0001FA D203 D054 6014 0000C 00014  3673  2          +
 000200 D203 D058 6010 00010 00010  3678  2          +
 000206 58F0 A8EA/0DEF       00A58  3681  2          +
                                    3683  2  197.01   *
                                    3684  2  197.02   *  If post back failed, release the memory
                                    3685  2  197.03   *
 00020C 1200/4780 A0C0       0022E  3686  2  197.1                 IF    (RVR,NZ),BEGIN          Failed - Free memory
 DROP   @SIGNAL-72,R13              3700  3  197.2                   VMFREE L:XAPLEN,A=LA:XASPARM,LOC=GLOBHI,FIX=YES
 USING  @VMFREE-72,R13
 000212 D709 D048 D048 00000 00000  3727  3          +
 000218 D203 D04C 6004 00004 00004  3732  3          +
 00021E 5060 D048            00000  3743  3          +
 000222 D201 D050 A96E 00008 00ADC  3744  3          +
 000228 58F0 A8EE/0DEF       00A5C  3747  3          +
 00022E                             3749  2  197.3                 END   ,                       OF Failed - Free memory
 00022E 47F0 A034            001A2  3753  1  197.4               END   ,                       OF Pull items from chain
 DROP   XASPARM,R6
                                    3763  1  198.     *  Now loop back and wait for more work.
 000232 47F0 A01C            0018A  3764     199.              END   ,                       OF Wait for work
 000236 981F C008            00008  3769     200.              PEND  ,
 DROP   ASMSTR,R9
 DROP   ASB,R8
 DROP   XASPACE,R10
 00023A 9680 C000/0B0E 00000        3789             +
 DROP   @VMFREE-72,R13
0000240 00000254                    3799     202.     BTABLE   DC    A(XALGOF)               Here we really just return
 000244 00000334                    3800     203.              DC    A(XARMEMR)              Read local memory
1ASMASTER (ASMA00) (09:38) (22MAR04) Routines for server address space                                                      Page   32
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   3802     204.01   *********************************************************************
                                    3803     204.02   *  XALGOF  - Logoff this address space, cleaning up a bit first     *
                                    3804     204.03   *                                                                   *
                                    3805     204.04   *    Input - @XACTION                                               *
                                    3806     204.05   *                                                                   *
                                    3807     204.06   *   Output - None                                                   *
                                    3808     204.07   *                                                                   *
                                    3809     204.08   *********************************************************************
 000248                             3810     204.09   XALGOF   PROC  @XACTION
 000248 E7C1D3C7D6C64040            3817             +
 000250 0008/0000                   3818             +
 000254 900F D004/18AF       00004  3820             +
 USING  XALGOF,R10
 00025A 50D0 C000/18CD       00000  3835             +
 000260 9680 C000      00000        3837             +
 USING  @XACTION-72,R12
 000264 41D0 C050            00050  3851             +
 000268 5880 0208            00208  3852     204.1             L     RM,PZCURASB
 USING  ASB,R8                      3853     204.11            WITH  (ASB,RM)
 00026C 5890 803C            0003C  3866     204.12            L     RN,ASBMSTR
 USING  ASMSTR,R9                   3867     204.13            WITH  (ASMSTR,RN)
                                    3880     204.14
 000270                             3881     204.15            CLEAR ASBMSTR                 Unlink - we're going away
 000270 D703 803C 803C 0003C 0003C  3887             +
 000276 9281 9000      00000        3888     204.16            MVI   ASMID,C'a'
                                    3889     204.17   *
                                    3890     204.18   *  First we clean up any messages that we didn't get to respond to.
                                    3891     204.19   *
 00027A                             3892     204.2    ASMPULL  LOOP  BEGIN                   Pull messages from list
 00027A 9867 9018            00018  3899  1  204.21              LM    RX,RY,ASMMSG
 USING  XASPARM,R6                  3900  1  204.22              WITH  (XASPARM,RX)
 00027E                             3913  1  204.23              LOOP  BEGIN
 00027E 1266/4780 A08E       002E2  3919  2  204.24                IF    (RX,ZERO),EXIT,ASMPULL
 000284 5820 6000            00000  3936  2  204.25                L     RA,XAPLINK
 000288 1837                        3937  2  204.26                LR    RB,RY
 00028A BB62 9018            00018  3938  2  204.27                CDS   RX,RA,ASMMSG
 00028E 4770 A02A            0027E  3939  1  204.28              UNTIL EQUAL,END
                                    3958  1  204.29
 000292 4100 0018            00018  3959  1  204.3               LA    RVR,XARCNOAS
 000296 5000 600C            0000C  3960  1  204.31              ST    RVR,XAPRC               Set return code
 USING  @SIGNAL-72,R13              3961  1  204.32              SIGNL L:XAPRECB,LA:XASPARM,L:XAPRASB,L:XAPSYSR
 00029A D713 D048 D048 00000 00000  3979  1          +
 0002A0 D203 D050 6018 00008 00018  3984  1          +
 0002A6 5060 D04C            00004  3995  1          +
 0002AA D203 D054 6014 0000C 00014  4000  1          +
 0002B0 D203 D058 6010 00010 00010  4005  1          +
 0002B6 58F0 A804/0DEF       00A58  4008  1          +
                                    4010  1  204.33   *
                                    4011  1  204.34   *  If post back failed, release the memory
                                    4012  1  204.35   *
 0002BC 1200/4780 A08A       002DE  4013  1  204.36              IF    (RVR,NZ),BEGIN          Failed - Free memory
 DROP   @SIGNAL-72,R13              4027  2  204.37                VMFREE L:XAPLEN,A=LA:XASPARM,LOC=GLOBHI,FIX=YES
 USING  @VMFREE-72,R13
 0002C2 D709 D048 D048 00000 00000  4054  2          +
1ASMASTER (ASMA00) (09:38) (22MAR04) Routines for server address space                                                      Page   33
0Current Usings:  (PZERO,R0) (XASPARM,R6) (ASB,R8) (ASMSTR,R9) (XALGOF,R10) (@XACTION-72,R12) (@VMFREE-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
00002C8 D203 D04C 6004 00004 00004  4059  2          +
 0002CE 5060 D048            00000  4070  2          +
 0002D2 D201 D050 A888 00008 00ADC  4071  2          +
 0002D8 58F0 A808/0DEF       00A5C  4074  2          +
 0002DE                             4076  1  204.38              END   ,                       OF Failed - Free memory
 0002DE 47F0 A026            0027A  4080     204.39            END   ,                       OF Pull messages from list
 DROP   XASPARM,R6
                                    4090     204.4    *
                                    4091     204.41   *  Free the ASMASTER control block
                                    4092     204.42   *
 0002E2                             4093     204.43            VMFREE LA:L'ASMSTR,A=LA:ASMSTR,LOC=GLOBHI,FIX=YES
 0002E2 D709 D048 D048 00000 00000  4110             +
 0002E8 4100 0024            00024  4122             +
 0002EC 5000 D04C            00004  4127             +
 0002F0 5090 D048            00000  4138             +
 0002F4 D201 D050 A888 00008 00ADC  4139             +
 0002FA 58F0 A808/0DEF       00A5C  4142             +
                                    4144     204.44   *
                                    4145     204.45   * Do other address space cleanup
                                    4146     204.46   *
 000300 58F0 A80C/0DEF       00A60  4147     204.47            VCALL ENQASTRM                Cleanup ENQ/DEQ stuff
                                    4151     204.48   * -->    VCALL FILEUTRM                Cleanup file system stuff
 000306 58F0 A810/0DEF       00A64  4152     204.49            VCALL TERMLGOF                Logoff the terminal
 00030C 58F0 A814/0DEF       00A68  4156     204.5             VCALL NETLOGOF                Clean up network stuff
 000312 58F0 A818/0DEF       00A6C  4160     204.94            VCALL ACLOGOFF                Finish up Accounting stuff
                                    4164     204.96
 000318 58F0 A81C/0DEF       00A70  4165     204.97            VCALL ASEXIT
 00031E 981F C008            00008  4169     204.98            PEND  ,
 DROP   ASMSTR,R9
 DROP   ASB,R8
 DROP   @XACTION-72,R12
 DROP   XALGOF,R10
 000322 9680 C000/0B0E 00000        4194             +
 DROP   @VMFREE-72,R13
1ASMASTER (ASMA00) (09:38) (22MAR04) Routines for server address space                                                      Page   34
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   4204     205.     *********************************************************************
                                    4205     206.     *  XARMEM - routine to read local memory and pass it to another     *
                                    4206     207.     *           address space                                           *
                                    4207     208.     *                                                                   *
                                    4208     209.     *   Input - None                                                    *
                                    4209     210.     *                                                                   *
                                    4210     211.     *  Output - RVR contains code to post back to requestor             *
                                    4211     212.     *             IF RVR = XARCOK                                       *
                                    4212     213.     *          or IF RVR = XARCFAIL (the request failed in server AS)   *
                                    4213     214.     *               XAPDLEN contains then length of data copied         *
                                    4214     215.     *                                                                   *
                                    4215     216.     *********************************************************************
0000000                00000 0000C  4217     222.     #XARMEM  RECORD BEGIN
 000000                             4225  1  223.     #XARXRID   DS    A                       Exit routine ID
 000004                             4226  1  224.     #XARXMSK   DS    A                       Save old exit mask
 000008                             4227  1  225.     #XARKEY    DS    A                       Saved PSW key
 00000C                0000C 0000C  4228     226.              END   ,
0000328                             4238     228.     XARMEMR  PROC  @XACTION,#XARMEM
 000328 E7C1D9D4C5D4D940            4245             +
 000330 0008/0010                   4246             +
 000334 900F D004/18AF       00004  4248             +
 USING  XARMEMR,R10
 00033A 50D0 C000/18CD       00000  4263             +
 000340 9680 C000      00000        4265             +
 USING  @XACTION-72,R12
 AUSING (#XARMEM,@XACTION+8)
 000344 41D0 C060            00060  4284             +
 000348 5890 C048            00000  4285     229.              L     RN,@XACPARM
 USING  XASPARM,R9                  4286     230.              WITH  (XASPARM,RN)
 AUSING (XAPMEM,XAPREQ)             4299     231.              WITH  (XAPMEM,XAPREQ)
                                    4306     232.     *
                                    4307     233.     *  Establish the PI exit in case we blow it in processing this
                                    4308     234.     *  request.  First define the exit routine.
                                    4309     235.     *
 USING  @EXRADD-72,R13              4310     236.              PSET  @EXRADD
 00034C D714 D048 D048 00000 00000  4327             +
 000352 9680 D048      00000        4328     237.              WITH  (XITMSKD,@EXRTYPE),'SET XITMPI'
 AUSING (XITMSKD,@EXRTYPE)
 000356 D203 D050 A740 00008 00A74  4348     238.              MVC   @EXRPSW(4),=X'070C0000' Set PSW
 00035C D203 D054 A744 0000C 00A78  4349     239.              MVC   @EXRPSW+4(4),=A(XAPIXIT+X'80000000')
 000362 9640 D05C      00014        4350     240.              SET   @EXRAFS                 This is a system exit
 000366                             4356     241.              PMOV  @EXRPARM,=A(XARMRST+X'80000000') Restart addr is parm
 000366 D203 D058 A748 00010 00A7C  4360             +
 00036C 58F0 A74C/0DEF       00A80  4361     242.              VCALL EXRADD                  Create the exit
 000372 5000 C050            00000  4365     243.              ST    RVR,#XARXRID            Save exit routine ID
                                    4366     244.     *
                                    4367     245.     *  Now enable the exit routine we just defined.
                                    4368     246.     *
 DROP   @EXRADD-72,R13              4369     247.              PSET  @XITMASK
 USING  @XITMASK-72,R13
 000376 D704 D048 D048 00000 00000  4389             +
 AUSING (XITMSKD,@XITMSK)           4390     248.              WITH  (XITMSKD,@XITMSK)
1ASMASTER (ASMA00) (09:38) (22MAR04) Routines for server address space                                                      Page   35
0Current Usings:  (PZERO,R0) (XASPARM,R9) (XARMEMR,R10) (@XACTION-72,R12) (@XITMASK-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
000037C 9680 D048      00000        4397     249.              SET   XITMPI                  Default is to OR this mask on
 000380 58F0 A750/0DEF       00A84  4403     250.              VCALL XITMASK
                                    4407     251.
 000386 5000 C054            00004  4408     252.              ST    RVR,#XARXMSK            Save old MASK
                                    4409     253.     *
                                    4410     254.     *  Get into KEY 0 so we can copy different keys.
                                    4411     255.     *
                                    4412     256.              REGCH (RA,R2)
 00038A B20B 0000                   4413     257.              IPK   ,                       Get the old key
 00038E 5020 C058            00008  4414     258.              ST    R2,#XARKEY                so we can save it
 000392 B20A 0000      00000        4415     259.              SPKA  0                           and get into super mode!
                                    4416     260.     *---------------------------------------*
                                    4417     261.     *  Move the memory to the global buffer *
                                    4418     262.     *---------------------------------------*
 000396 9823 9020            00004  4419     263.              LM    RA,RB,XAPDLOC           Destination loc/len
 00039A 5840 901C            00000  4420     264.              L     RJ,XAPSLOC              Source address
 00039E 1853                        4421     265.              LR    RK,RB
 0003A0 0E24                        4422     266.              MVCL  RA,RJ
 0003A2 1333                        4423     267.              LCR   RB,RB                   Set length copied
 0003A4 5E30 9024            00008  4424     268.              AL    RB,XAPDLEN
 0003A8 5030 9024            00008  4425     269.              ST    RB,XAPDLEN
 0003AC 4120 0000            00000  4426     270.              LA    RA,XARCOK               Say it went ok
                                    4427     271.     *
                                    4428     272.     *  Branch around restart point
                                    4429     273.     *
 0003B0 47F0 A08E            003C2  4430     274.              IF    FALSE,BEGIN
 0003B4 1333                        4441  1  275.     XARMRST    LCR   RB,RB                   Set length moved
 0003B6 5E30 9024            00008  4442  1  276.                AL    RB,XAPDLEN
 0003BA 5030 9024            00008  4443  1  277.                ST    RB,XAPDLEN
 0003BE 4120 0004            00004  4444  1  278.                LA    RA,XARCFAIL             Say it failed
 0003C2                             4445     279.              END   ,
                                    4449     280.     *
                                    4450     281.     *  Get back into our old key
                                    4451     282.     *
 0003C2 5870 C058            00008  4452     283.              L     RY,#XARKEY              Get old key
 0003C6 B20A 7000      00000        4453     284.              SPKA  @RY                       and restore it
                                    4454     285.     *
                                    4455     286.     *  Delete the exit routine
                                    4456     287.     *
 DROP   @XITMASK-72,R13             4457     288.              PSET  @EXRDEL                 Remove exit routine def
 USING  @EXRDEL-72,R13
 0003CA D703 D048 D048 00000 00000  4477             +
 0003D0                             4478     289.              PMOV  @EXRDID,#XARXRID
 0003D0 D203 D048 C050 00000 00000  4482             +
 0003D6 58F0 A754/0DEF       00A88  4483     290.              VCALL EXRDEL
                                    4487     291.     *
                                    4488     292.     *  Set the exit mask back to what it was before
                                    4489     293.     *
 DROP   @EXRDEL-72,R13              4490     294.              PSET  @XITMASK
 USING  @XITMASK-72,R13
 0003DC D704 D048 D048 00000 00000  4510             +
 0003E2                             4511     295.              PMOV  @XITMSK,#XARXMSK
 0003E2 D203 D048 C054 00000 00004  4515             +
 0003E8 9202 D04C      00004        4516     296.              SET   @XITMSS                 Set the exit mask to this val
1ASMASTER (ASMA00) (09:38) (22MAR04) Routines for server address space                                                      Page   36
0Current Usings:  (PZERO,R0) (XASPARM,R9) (XARMEMR,R10) (@XACTION-72,R12) (@XITMASK-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
00003EC 58F0 A750/0DEF       00A84  4522     297.              VCALL XITMASK
                                    4526     298.     *
                                    4527     299.     *  Return to caller w/ post code
                                    4528     300.     *
 0003F2 1802                        4529     301.              LR    RVR,RA
 0003F4 981F C008            00008  4530     302.              PEND  ,
 DROP   XASPARM,R9
 DROP   @XACTION-72,R12
 DROP   XARMEMR,R10
 0003F8 9680 C000/0B0E 00000        4550             +
 DROP   @XITMASK-72,R13
1ASMASTER (ASMA00) (09:38) (22MAR04) Routines for server address space                                                      Page   37
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   4560     304.     *********************************************************************
                                    4561     305.     *  XAPIXIT - Exit routine to recover from PI                        *
                                    4562     306.     *                                                                   *
                                    4563     307.     *   Input - @XITDATA                                                *
                                    4564     308.     *             The parameter passed in the exit data area contains   *
                                    4565     309.     *             the instruction address that should be set to restart *
                                    4566     310.     *             the unit of work that failed.                         *
                                    4567     311.     *                                                                   *
                                    4568     312.     *  Output - None                                                    *
                                    4569     313.     *             Unit of work that generated the PI is restarted at    *
                                    4570     314.     *             the specified address.                                *
                                    4571     315.     *                                                                   *
                                    4572     316.     *********************************************************************
 0003FE                             4573     317.     XAPIXIT  PROC  @XITDATA
 0003FE E7C1D7C9E7C9E340            4580             +
 000406 0008/0000                   4581             +
 00040A 900F D004/18AF       00004  4583             +
 USING  XAPIXIT,R10
 000410 50D0 C000/18CD       00000  4598             +
 000416 9680 C000      00000        4600             +
 USING  @XITDATA-72,R12
 00041A 41D0 C050            00050  4614             +
 00041E 5890 C048            00000  4615     318.              L     RN,@XITDSA
 USING  XITSAREA,R9                 4616     319.              WITH  (XITSAREA,RN)
                                    4629     320.     *
                                    4630     321.     *  Get the status of the previous level of control (the one that
                                    4631     322.     *  caused the PI)
                                    4632     323.     *
 USING  @XITGPST-72,R13             4633     324.              PSET  @XITGPST
 000422 D767 D048 D048 00000 00000  4650             +
 000428 58F0 A682/0DEF       00A8C  4651     325.              VCALL XITGST
                                    4655     326.     *
                                    4656     327.     *  Move the IA field into the PSW and put the status back
                                    4657     328.     *
 00042E D203 D04C 9000 00004 00000  4658     329.              MVC   @XITSPSW+4(4),XITSRPRM
 000434 58F0 A686/0DEF       00A90  4659     330.              VCALL XITPST
                                    4663     331.     *
                                    4664     332.     *  We have done our duty in this exit, so return
                                    4665     333.     *
 00043A 9200 D048      00000        4666     334.              PSET  @EXRDONE
 DROP   @XITGPST-72,R13
 USING  @EXRDONE-72,R13
 00043E 58F0 A68A/0DEF       00A94  4687     335.              VCALL EXRDONE
 000444 981F C008            00008  4691     336.              PEND  ,
 DROP   XITSAREA,R9
 DROP   @XITDATA-72,R12
 DROP   XAPIXIT,R10
 000448 9680 C000/0B0E 00000        4711             +
 DROP   @EXRDONE-72,R13
1ASMASTER (ASMA00) (09:38) (22MAR04) Basic routines for client address space                                                Page   38
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   4721     338.     *********************************************************************
                                    4722     339.     *  XASEND - Send a request to another address space                 *
                                    4723     340.     *                                                                   *
                                    4724     341.     *   Input - @XASPACE                                                *
                                    4725     342.     *             Parameter area pointed to is filled in                *
                                    4726     343.     *                                                                   *
                                    4727     344.     *  Output - RVR contains return code                                *
                                    4728     345.     *             Codes defined in XASPARM maclib member                *
                                    4729     346.     *                                                                   *
                                    4730     347.     *********************************************************************
000044E                             4732     349.     XASEND   PROC  @XASPACE,SCOPE=GLOBAL
 00044E E7C1E2C5D5C44040            4738             +
 000456 0008/0000                   4739             +
 00045A 900F D004/18AF       00004  4741             +
 USING  XASEND,R10
 000460 50D0 C000/18CD       00000  4756             +
 000466 9680 C000      00000        4758             +
 USING  @XASPACE-72,R12
 00046A 41D0 C050            00050  4772             +
 00046E 5890 C048            00000  4773     350.              L     RN,@XASPARM
 USING  XASPARM,R9                  4774     351.              WITH  (XASPARM,RN)
 000472 5880 C04C            00004  4787     352.              L     RM,@XASASB
 000476 1288/4770 A026       00480  4788     352.1             IF    (RM,ZERO),'L RM,PZCURASB'
 00047C 5880 0208            00208  4803             +
 USING  ASB,R8                      4808     353.              WITH  (ASB,RM)
                                    4821     354.     *
                                    4822     355.     *  Check that this is an ASB
                                    4823     356.     *
 000480                             4824     357.              IF    (ASBID,NE,=CL4'ASB'),BEGIN
 000480 D503 A63E 8000 00A98 00000  4835             +
 000486 4780 A038            00492  4836             +
 00048A 4100 0018            00018  4841  1  358.                LA    RVR,XARCNOAS            AS not available
 00048E 47F0 A096            004F0  4842  1  359.                EXIT  XASEND
 000492                             4845     360.              END   ,
                                    4849     361.     *
                                    4850     362.     *  Check that this AS points at an ASMSTR
                                    4851     363.     *
 000492 5870 803C/1277       0003C  4852     364.              LT    RY,ASBMSTR
 USING  ASMSTR,R7                   4856     365.              WITH  (ASMSTR,RY)
 000498 4780 A04C            004A6  4869     366.              IF    (ZERO,OR,(ASMID,NE,=CL4'AMST')),BEGIN
 00049C D503 A5EA 7000 00A44 00000  4890             +
 0004A2 4780 A054            004AE  4891             +
 0004A6 4100 0018            00018  4896  1  367.                LA    RVR,XARCNOAS            AS not available
 0004AA 47F0 A096            004F0  4897  1  368.                EXIT  XASEND
 0004AE                             4900     369.              END   ,
                                    4904     383.     *
                                    4905     384.     *  Queue the message to the other ASs chain
                                    4906     384.01   *
 0004AE 9845 7018            00018  4907     384.02            LM    RJ,RK,ASMMSG
 0004B2 1829                        4908     384.03           $LA    RA,XASPARM
 0004B4                             4915     384.04            LOOP  BEGIN
 0004B4 5040 9000            00000  4921  1  384.05              ST    RJ,XAPLINK
 0004B8 4130 5001            00001  4922  1  384.06              LA    RB,@RK+1
1ASMASTER (ASMA00) (09:38) (22MAR04) Basic routines for client address space                                                Page   39
0Current Usings:  (PZERO,R0) (ASMSTR,R7) (ASB,R8) (XASPARM,R9) (XASEND,R10) (@XASPACE-72,R12)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
00004BC BB42 7018            00018  4923  1  384.07              CDS   RJ,RA,ASMMSG
 0004C0 4770 A05A            004B4  4924     384.98            UNTIL EQUAL,END
                                    4943     384.99   *
                                    4944     385.     *  Send our message
                                    4945     386.     *
 USING  @SIGNAL-72,R13              4946     387.              SIGNL ASMECB,LA:XASPARM,LA:ASB,L:XAPSYSR
 0004C4 D713 D048 D048 00000 00000  4964             +
 0004CA 4100 7010            00010  4976             +
 0004CE 5000 D050            00008  4981             +
 0004D2 5090 D04C            00004  4992             +
 0004D6 5080 D054            0000C  5003             +
 0004DA D203 D058 9010 00010 00010  5008             +
 0004E0 58F0 A5FE/0DEF       00A58  5011             +
                                    5013     388.
 0004E6                             5014     389.              ASSERT (XARCOK,0)
 0004E6 1200/4780 A096       004F0  5016     390.              IF    (RVR,NZ),'LA RVR,XARCPOST'       Trouble posting
 0004EC 4100 0014            00014  5031             +
 0004F0 981F C008            00008  5036     391.              PEND  ,
 DROP   ASMSTR,R7
 DROP   ASB,R8
 DROP   XASPARM,R9
 DROP   @XASPACE-72,R12
 DROP   XASEND,R10
 0004F4 9680 C000/0B0E 00000        5066             +
 DROP   @SIGNAL-72,R13
1ASMASTER (ASMA00) (09:38) (22MAR04) Basic routines for client address space                                                Page   40
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   5076     393.     *********************************************************************
                                    5077     394.     *  XAWAIT - Send a request to another address space                 *
                                    5078     395.     *                                                                   *
                                    5079     396.     *   Input - @XASPACE                                                *
                                    5080     397.     *             Parameter area pointed to is filled in                *
                                    5081     398.     *                                                                   *
                                    5082     399.     *  Output - RVR contains return code                                *
                                    5083     400.     *             Codes defined in XASPARM maclib member                *
                                    5084     401.     *                                                                   *
                                    5085     402.     *********************************************************************
00004FA                             5087     404.     XAWAIT   PROC  @XASPACE,SCOPE=GLOBAL
 0004FA E7C1E6C1C9E34040            5093             +
 000502 0008/0000                   5094             +
 000506 900F D004/18AF       00004  5096             +
 USING  XAWAIT,R10
 00050C 50D0 C000/18CD       00000  5111             +
 000512 9680 C000      00000        5113             +
 USING  @XASPACE-72,R12
 000516 41D0 C050            00050  5127             +
 00051A 5890 C048            00000  5128     405.              L     RN,@XASPARM
 USING  XASPARM,R9                  5129     406.              WITH  (XASPARM,RN)
 00051E 5880 C04C            00004  5142     407.              L     RM,@XASASB
 USING  ASB,R8                      5143     408.              WITH  (ASB,RM)
                                    5156     409.     *
                                    5157     410.     *  Check that this is an ASB
                                    5158     411.     *
 000522                             5159     412.              IF    (ASBID,NE,=CL4'ASB'),BEGIN
 000522 D503 A592 8000 00A98 00000  5170             +
 000528 4780 A02E            00534  5171             +
 00052C 4100 0018            00018  5176  1  413.                LA    RVR,XARCNOAS            AS not available
 000530 47F0 A060            00566  5177  1  414.                EXIT  XAWAIT
 000534                             5180     415.              END   ,
                                    5184     416.     *
                                    5185     417.     *  Check that this AS points at an ASMSTR
                                    5186     418.     *
 000534 5870 803C/1277       0003C  5187     419.              LT    RY,ASBMSTR
 USING  ASMSTR,R7                   5191     420.              WITH  (ASMSTR,RY)
 00053A 4780 A042            00548  5204     421.              IF    (ZERO,OR,(ASMID,NE,=CL4'AMST')),BEGIN
 00053E D503 A53E 7000 00A44 00000  5225             +
 000544 4780 A04A            00550  5226             +
 000548 4100 0018            00018  5231  1  422.                LA    RVR,XARCNOAS            AS not available
 00054C 47F0 A060            00566  5232  1  423.                EXIT  XAWAIT
 000550                             5235     424.              END   ,
                                    5239     432.     *---------------------------------------*
                                    5240     433.     *  Do the actual wait for our response  *
                                    5241     434.     *---------------------------------------*
 USING  @AWAIT-72,R13               5242     435.              AWAIT L:XAPRECB
 000550 D704 D048 D048 00000 00000  5260             +
 000556 D203 D048 9018 00000 00018  5265             +
 00055C 58F0 A54A/0DEF       00A50  5268             +
 000562 5800 900C            0000C  5270     440.              L     RVR,XAPRC               Pick up our return code
 000566 981F C008            00008  5271     458.              PEND  ,
 DROP   ASMSTR,R7
1ASMASTER (ASMA00) (09:38) (22MAR04) Basic routines for client address space                                                Page   41
0Current Usings:  (PZERO,R0) (@AWAIT-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0DROP   ASB,R8
 DROP   XASPARM,R9
 DROP   @XASPACE-72,R12
 DROP   XAWAIT,R10
 00056A 9680 C000/0B0E 00000        5301             +
 DROP   @AWAIT-72,R13
1ASMASTER (ASMA00) (09:38) (22MAR04) Timer functions for level 2 client routines                                            Page   42
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   5311     460.     *********************************************************************
                                    5312     461.     *  XARTXIT - Real time timer exit routine                           *
                                    5313     462.     *                                                                   *
                                    5314     463.     *    Input - @XITDATA                                               *
                                    5315     464.     *              XITSXPRM contains the ECB address to post            *
                                    5316     465.     *                                                                   *
                                    5317     466.     *   Output - None                                                   *
                                    5318     467.     *                                                                   *
                                    5319     468.     *********************************************************************
 000570                             5320     469.     XARTXIT  PROC  @XITDATA
 000570 E7C1D9E3E7C9E340            5327             +
 000578 0008/0000                   5328             +
 00057C 900F D004/18AF       00004  5330             +
 USING  XARTXIT,R10
 000582 50D0 C000/18CD       00000  5345             +
 000588 9680 C000      00000        5347             +
 USING  @XITDATA-72,R12
 00058C 41D0 C050            00050  5361             +
 000590 5890 C048            00000  5362     470.              L     RN,@XITDSA
 USING  XITSAREA,R9                 5363     471.              WITH  (XITSAREA,RN)
 AUSING (RTEXIT,XITSXPRM)           5376     472.              WITH  (RTEXIT,XITSXPRM)
 000594 5880 9018            0000C  5383     472.1             L     RM,RTXPARM+4            Parm = XASPARM addr
 USING  XASPARM,R8                  5384     472.2             WITH  (XASPARM,RM)
 000598 4100 0010            00010  5397     472.3             PMOV  XAPRC,LA:XARCTIME       Show that we timed out
 00059C 5000 800C            0000C  5413             +
                                    5414     473.     *
                                    5415     474.     *  Post the ECB pointed to in our parameter area
                                    5416     475.     *
 USING  @SIGNAL-72,R13              5417     476.              SIGNL L:RTXPARM,LA:XASPARM    Wake up task... it's time
 0005A0 D713 D048 D048 00000 00000  5435             +
 0005A6 D203 D050 9014 00008 00008  5440             +
 0005AC 5080 D04C            00004  5451             +
 0005B0 58F0 A4DC/0DEF       00A58  5454             +
                                    5456     477.     *
                                    5457     478.     *  Return from our exit routine
                                    5458     479.     *
 0005B6 9200 D048      00000        5459     480.              PSET  @EXRDONE
 DROP   @SIGNAL-72,R13
 USING  @EXRDONE-72,R13
 0005BA 58F0 A518/0DEF       00A94  5480     481.              VCALL EXRDONE
 DROP   XASPARM,R8                  5484     482.              PEND  CODE=NO
 DROP   XITSAREA,R9
 DROP   @XITDATA-72,R12
 DROP   XARTXIT,R10
 DROP   @EXRDONE-72,R13
1ASMASTER (ASMA00) (09:38) (22MAR04) Timer functions for level 2 client routines                                            Page   43
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   5516     484.     *********************************************************************
                                    5517     485.     *  XASTIME - Setup interval timer                                   *
                                    5518     486.     *                                                                   *
                                    5519     487.     *    Input - @XASTIME                                               *
                                    5520     488.     *                                                                   *
                                    5521     489.     *   Output - RVR = 0 if timer setup OK                              *
                                    5522     490.     *                                                                   *
                                    5523     491.     *********************************************************************
 000000                00000 00014  5524     492.     @XASTIME RECORD BEGIN
 000000                             5532  1  493.     @XASTCLK   DS    D                       Time for interval TOD units
 000008                             5533  1  494.     @XASTECB   DS    A                       Addr of ECB to post on t-fire
 00000C                             5534  1  495.     @XASTPRM   DS    A                       Pointer to XAPTIME
 000010                             5535  1  495.1    @XASTPC    DS    A                       Post code if we do post
 000014                00014 00014  5536     496.              END   ,
00005C0                             5546     498.     XASTIME  PROC  @XASTIME
 0005C0 E7C1E2E3C9D4C540            5553             +
 0005C8 0018/0000                   5554             +
 0005CC 900F D004/18AF       00004  5556             +
 USING  XASTIME,R10
 0005D2 50D0 C000/18CD       00000  5571             +
 0005D8 9680 C000      00000        5573             +
 USING  @XASTIME-72,R12
 0005DC 41D0 C060            00060  5587             +
 0005E0 5890 C054            0000C  5588     499.              L     RN,@XASTPRM
 USING  XAPTIME,R9                  5589     500.              WITH  (XAPTIME,RN)
 0005E4                             5602     501.              CLEAR XAPTIME
 0005E4 D710 9000 9000 00000 00000  5608             +
                                    5609     502.     *
                                    5610     503.     *  Establish the real time timer exit to time-out this request
                                    5611     504.     *  if it takes too long.
                                    5612     505.     *  First define the exit routine.
                                    5613     506.     *
 USING  @EXRADD-72,R13              5614     507.              PSET  @EXRADD
 0005EA D714 D048 D048 00000 00000  5631             +
 0005F0 9620 D048      00000        5632     508.              WITH  (XITMSKD,@EXRTYPE),'SET XITMRTC'
 AUSING (XITMSKD,@EXRTYPE)
 0005F4 D203 D050 A4A8 00008 00A74  5652     509.              MVC   @EXRPSW(4),=X'070C0000' Set PSW
 0005FA D203 D054 A4D0 0000C 00A9C  5653     510.              MVC   @EXRPSW+4(4),=A(XARTXIT+X'80000000')
 000600 9640 D05C      00014        5654     511.              SET   @EXRAFS                 This is a system exit
 000604 58F0 A4B4/0DEF       00A80  5660     512.              VCALL EXRADD                  Create the exit
 00060A 5000 9000            00000  5664     513.              ST    RVR,XATXRID             Save exit routine ID
 00060E 1200/4780 A0A6       00672  5665     514.              IF    (RVR,ZERO),XASTFAIL     Couldn't define exit rtn
                                    5682     515.     *
                                    5683     516.     *  Now enable the exit routine we just defined.
                                    5684     517.     *
 DROP   @EXRADD-72,R13              5685     518.              PSET  @XITMASK
 USING  @XITMASK-72,R13
 000614 D704 D048 D048 00000 00000  5705             +
 AUSING (XITMSKD,@XITMSK)           5706     519.              WITH  (XITMSKD,@XITMSK)
 00061A 9620 D048      00000        5713     520.              SET   XITMRTC                 Default is to OR this mask on
 00061E 58F0 A4B8/0DEF       00A84  5719     521.              VCALL XITMASK
                                    5723     522.
 000624 9680 9010      00010        5724     523.              SET   XATFMSK                 Say that this is a valid mask
1ASMASTER (ASMA00) (09:38) (22MAR04) Timer functions for level 2 client routines                                            Page   44
0Current Usings:  (PZERO,R0) (XAPTIME,R9) (XASTIME,R10) (@XASTIME-72,R12) (@XITMASK-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000628 5000 9008            00008  5730     524.              ST    RVR,XATXMSK             Save old MASK
                                    5731     525.     *
                                    5732     526.     *  Allocate an exit request ID
                                    5733     527.     *
 00062C 9200 D048      00000        5734     528.              PSET  @XITNEW
 DROP   @XITMASK-72,R13
 USING  @XITNEW-72,R13
 000630 58F0 A4D4/0DEF       00AA0  5755     529.              VCALL XITNEW
 000636 5000 9004            00004  5759     530.              ST    RVR,XATXSID             Save exit request ID
 00063A 1200/4780 A0A6       00672  5760     531.              IF    (RVR,ZERO),XASTFAIL     Couldn't get exit request ID
                                    5777     532.     *
                                    5778     533.     *  Set the real time timer
                                    5779     534.     *
 DROP   @XITNEW-72,R13              5780     535.              PSET  @RTSET                  Set real time timer
 USING  @RTSET-72,R13
 000640 D717 D048 D048 00000 00000  5800             +
 000646                             5801     536.              PMOV  @RTSCLK,@XASTCLK
 000646 D207 D048 C048 00000 00000  5805             +
 00064C 9680 D050      00008        5806     537.              SET   @RTSFINT                  it's an interval timer
 000650                             5812     538.              PMOV  @RTSXIT,XATXSID
 000650 D203 D054 9004 0000C 00004  5816             +
 000656 D203 D058 C050 00010 00008  5817     539.              MVC   @RTSPARM(4),@XASTECB        parameter is ECB to post
 00065C D203 D05C C058 00014 00010  5818     539.1             MVC   @RTSPARM+4(4),@XASTPC         and post code
 000662 58F0 A4D8/0DEF       00AA4  5819     540.              VCALL RTSET
 000668 5000 900C            0000C  5823     541.              ST    RVR,XATRTID             Save the timer ID
 00066C 1200/4770 A0BE       0068A  5824     542.              IF    (RVR,ZERO),BEGIN        Real time timer set failed
 DROP   @RTSET-72,R13               5838  1  543.     XASTFAIL   PSET  @XARTIME                Clean up exit environment
 USING  @XARTIME-72,R13
 000672 D703 D048 D048 00000 00000  5859  1          +
 000678 5090 D048            00000  5860  1  544.                PMOV  @XARTPRM,LA:XAPTIME
 00067C 58F0 A4DC/0DEF       00AA8  5871  1  545.                ACALL XARTIME
 000682 4100 000C            0000C  5878  1  546.                LA    RVR,XARCSETUP           Failure in set-up
 000686 47F0 A0C0            0068C  5879  1  547.                EXIT  XASTIME
 00068A                             5882     548.              END   ,                       OF Real time timer set failed
 00068A 1B00                        5886     549.              CLEAR RVR                     Set all as OK
 00068C 981F C008            00008  5890     550.              PEND  ,
 DROP   XAPTIME,R9
 DROP   @XASTIME-72,R12
 DROP   XASTIME,R10
 000690 9680 C000/0B0E 00000        5910             +
 DROP   @XARTIME-72,R13
1ASMASTER (ASMA00) (09:38) (22MAR04) Timer functions for level 2 client routines                                            Page   45
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   5920     552.     *********************************************************************
                                    5921     553.     *  XARTIME - Reset timer environment                                *
                                    5922     554.     *                                                                   *
                                    5923     555.     *    Input - @XARTIME                                               *
                                    5924     556.     *                                                                   *
                                    5925     557.     *   Output - None                                                   *
                                    5926     558.     *                                                                   *
                                    5927     559.     *********************************************************************
 000000                00000 00004  5928     560.     @XARTIME RECORD BEGIN
 000000                             5936  1  561.     @XARTPRM   DS    A                       Pointer to XAPTIME
 000004                00004 00004  5937     562.              END   ,
0000696                             5947     564.     XARTIME  PROC  @XARTIME
 000696 E7C1D9E3C9D4C540            5954             +
 00069E 0008/0000                   5955             +
 0006A2 900F D004/18AF       00004  5957             +
 USING  XARTIME,R10
 0006A8 50D0 C000/18CD       00000  5972             +
 0006AE 9680 C000      00000        5974             +
 USING  @XARTIME-72,R12
 0006B2 41D0 C050            00050  5988             +
 0006B6 5890 C048            00000  5989     565.              L     RN,@XARTPRM
 USING  XAPTIME,R9                  5990     566.              WITH  (XAPTIME,RN)
                                    6003     567.     *
                                    6004     568.     *  Free the exit request ID
                                    6005     569.     *
 0006BA 5860 9004/1266       00004  6006     570.              IF    ('LT RX,XATXSID',NZ),BEGIN       Exit request ID ok
 0006C0 4780 A032            006D4  6017             +
 USING  @XITDEL-72,R13              6022  1  571.                PSET  @XITDEL
 0006C4 D703 D048 D048 00000 00000  6039  1          +
 0006CA 5060 D048            00000  6040  1  572.                PMOV  @XITDID,(RX)
 0006CE 58F0 A40A/0DEF       00AAC  6050  1  573.                VCALL XITDEL
 0006D4                             6054     574.              END   ,
                                    6058     575.     *
                                    6059     576.     *  Reset the exit mask
                                    6060     577.     *
 0006D4 9180 9010      00010        6061     578.              IF    XATFMSK,BEGIN           Valid mask stored here
 0006D8 47E0 A050            006F2  6071             +
 DROP   @XITDEL-72,R13              6076  1  579.                PSET  @XITMASK
 USING  @XITMASK-72,R13
 0006DC D704 D048 D048 00000 00000  6096  1          +
 0006E2                             6097  1  580.                PMOV  @XITMSK,XATXMSK
 0006E2 D203 D048 9008 00000 00008  6101  1          +
 0006E8 9202 D04C      00004        6102  1  581.                SET   @XITMSS                 Set to what it was before
 0006EC 58F0 A3E2/0DEF       00A84  6108  1  582.                VCALL XITMASK
 0006F2                             6112     583.              END   ,
                                    6116     584.     *
                                    6117     585.     *  Undefine the exit routine
                                    6118     586.     *
 0006F2 5860 9000/1266       00000  6119     587.              IF    ('LT RX,XATXRID',NZ),BEGIN       Exit rtn ID ok
 0006F8 4780 A06A            0070C  6130             +
 DROP   @XITMASK-72,R13             6135  1  588.                PSET  @EXRDEL
 USING  @EXRDEL-72,R13
 0006FC D703 D048 D048 00000 00000  6155  1          +
1ASMASTER (ASMA00) (09:38) (22MAR04) Timer functions for level 2 client routines                                            Page   46
0Current Usings:  (PZERO,R0) (XAPTIME,R9) (XARTIME,R10) (@XARTIME-72,R12) (@EXRDEL-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000702 5060 D048            00000  6156  1  589.                PMOV  @EXRDID,(RX)
 000706 58F0 A3E6/0DEF       00A88  6166  1  590.                VCALL EXRDEL
 00070C                             6170     591.              END   ,
                                    6174     592.
 00070C 981F C008            00008  6175     593.              PEND  ,
 DROP   XAPTIME,R9
 DROP   @XARTIME-72,R12
 DROP   XARTIME,R10
 000710 9680 C000/0B0E 00000        6195             +
 DROP   @EXRDEL-72,R13
1ASMASTER (ASMA00) (09:38) (22MAR04) Timer functions for level 2 client routines                                            Page   47
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   6205     595.     *********************************************************************
                                    6206     596.     *  XACTIME - Cancel timer                                           *
                                    6207     597.     *                                                                   *
                                    6208     598.     *    Input - @XACTIME                                               *
                                    6209     599.     *                                                                   *
                                    6210     600.     *   Output - None                                                   *
                                    6211     601.     *                                                                   *
                                    6212     602.     *********************************************************************
 000000                00000 00004  6213     603.     @XACTIME RECORD BEGIN
 000000                             6221  1  604.     @XACTPRM   DS    A                       Pointer to XAPTIME
 000004                00004 00004  6222     605.              END   ,
0000716                             6232     607.     XACTIME  PROC  @XACTIME
 000716 E7C1C3E3C9D4C540            6239             +
 00071E 0008/0000                   6240             +
 000722 900F D004/18AF       00004  6242             +
 USING  XACTIME,R10
 000728 50D0 C000/18CD       00000  6257             +
 00072E 9680 C000      00000        6259             +
 USING  @XACTIME-72,R12
 000732 41D0 C050            00050  6273             +
 000736 5890 C048            00000  6274     608.              L     RN,@XACTPRM
 USING  XAPTIME,R9                  6275     609.              WITH  (XAPTIME,RN)
                                    6288     610.     *
                                    6289     611.     *  Cancel the timer whose ID is in this control block
                                    6290     612.     *
 USING  @RTCNCK-72,R13              6291     613.              PSET  @RTCNCK
 00073A D71F D048 D048 00000 00000  6308             +
 000740                             6309     614.              PMOV  @RTCID,XATRTID
 000740 D203 D048 900C 00000 0000C  6313             +
 000746 58F0 A38E/0DEF       00AB0  6314     615.              VCALL RTCAN
 00074C 981F C008            00008  6318     616.              PEND  ,
 DROP   XAPTIME,R9
 DROP   @XACTIME-72,R12
 DROP   XACTIME,R10
 000750 9680 C000/0B0E 00000        6338             +
 DROP   @RTCNCK-72,R13
1ASMASTER (ASMA00) (09:38) (22MAR04) Halt function for level 2 client routines                                              Page   48
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   6348     618.     *********************************************************************
                                    6349     619.     *  XAQHALT - Queue up a halted request for later processing         *
                                    6350     620.     *                                                                   *
                                    6351     621.     *   Input - @XAQHALT                                                *
                                    6352     622.     *                                                                   *
                                    6353     623.     *  Output - None                                                    *
                                    6354     624.     *             ID queued up on AS chain for deferred processing      *
                                    6355     625.     *                                                                   *
                                    6356     626.     *********************************************************************
 000000                00000 00004  6357     627.     @XAQHALT RECORD BEGIN
 000000                             6365  1  628.     @XAQHID    DS    A                       Pointer to XASHALT
 000004                00004 00004  6366     629.              END   ,
0000756                             6376     631.     XAQHALT  PROC  @XAQHALT
 000756 E7C1D8C8C1D3E340            6383             +
 00075E 0008/0000                   6384             +
 000762 900F D004/18AF       00004  6386             +
 USING  XAQHALT,R10
 000768 50D0 C000/18CD       00000  6401             +
 00076E 9680 C000      00000        6403             +
 USING  @XAQHALT-72,R12
 000772 41D0 C050            00050  6417             +
 000776 5880 C048            00000  6418     632.              L     RM,@XAQHID
 USING  XASHALT,R8                  6419     633.              WITH  (XASHALT,RM)
 00077A 5890 0208            00208  6432     634.              L     RN,PZCURASB
 00077E 5890 903C            0003C  6433     635.              WITH  (ASB,RN),'L RN,ASBMSTR'
 USING  ASB,R9
 DROP   ASB,R9
 USING  ASMSTR,R9                   6457     636.              WITH  (ASMSTR,RN)
                                    6470     637.     *
                                    6471     638.     *  Put this halted request on the queue for this AS
                                    6472     639.     *
 000782 5860 9020            00020  6473     640.              L     RX,ASMXHALT
 000786                             6474     641.              LOOP  BEGIN
 000786 5060 8000            00000  6480  1  642.                ST    RX,XAHFP
 00078A BA68 9020            00020  6481  1  643.                CS    RX,RM,ASMXHALT
 00078E 4770 A024            00786  6482     644.              UNTIL EQUAL,END
                                    6501     645.
 000792 981F C008            00008  6502     646.              PEND  ,
 DROP   ASMSTR,R9
 DROP   XASHALT,R8
 DROP   @XAQHALT-72,R12
 DROP   XAQHALT,R10
 000796 9680 C000/0B0E 00000        6527             +
1ASMASTER (ASMA00) (09:38) (22MAR04) Level 2 routines for client address space                                              Page   49
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   6534     648.     *********************************************************************
                                    6535     649.     *  XALGOFF - Send logoff signal to our own address space            *
                                    6536     650.     *                                                                   *
                                    6537     651.     *   Input - None                                                    *
                                    6538     652.     *                                                                   *
                                    6539     653.     *  Output - None                                                    *
                                    6540     654.     *                                                                   *
                                    6541     655.     *********************************************************************
000079C                             6543     657.     XALGOFF  PROC  ,XASPARM,SCOPE=GLOBAL
 00079C E7C1D3C7D6C6C640            6549             +
 0007A4 0000/0020                   6550             +
 0007A8 900F D004/18AF       00004  6552             +
 USING  XALGOFF,R10
 0007AE 50D0 C000/18CD       00000  6567             +
 0007B4 9680 C000      00000        6569             +
 USING  XASPARM-72,R12
 0007B8 41D0 C068            00068  6583             +
 0007BC 5890 0208            00208  6584     658.              L     RN,PZCURASB
 USING  ASB,R9                      6585     659.              WITH  (ASB,RN)
 0007C0 5880 903C            0003C  6598     660.              L     RM,ASBMSTR
 USING  ASMSTR,R8                   6599     661.              WITH  (ASMSTR,RM)
                                    6612     670.     *
                                    6613     671.     *  Post our own AS with code of ACLGOFF.
                                    6614     672.     *
 0007C4 58F0 A30C/0DEF       00AB4  6615     672.1             VCALL ASLOCK                  Make sure we finish first
                                    6619     672.11
 0007CA                             6620     672.2             CLEAR XASPARM
 0007CA D71B C048 C048 00000 00000  6626             +
 0007D0 4100 0000            00000  6627     672.3             PMOV  XAPCMD,LA:XACLGOFF      Logoff command code
 0007D4 5000 C050            00008  6643             +
 USING  @XASPACE-72,R13             6644     672.4             PSET  @XASPACE
 0007D8 D707 D048 D048 00000 00000  6661             +
 0007DE 4100 C048            00000  6662     673.4             PMOV  @XASPARM,LA:XASPARM
 0007E2 5000 D048            00000  6678             +
 0007E6 58F0 A310/0DEF       00AB8  6679     674.4             ACALL XASEND
                                    6686     676.     *
                                    6687     677.     *  And exit this task
                                    6688     678.     *
 DROP   @XASPACE-72,R13             6689     679.              PSET  @TEXIT
 USING  @TEXIT-72,R13
 0007EC D703 D048 D048 00000 00000  6709             +
 0007F2 58F0 A314/0DEF       00ABC  6710     680.              VCALL TEXIT
 0007F8 981F C008            00008  6714     681.              PEND  ,
 DROP   ASMSTR,R8
 DROP   ASB,R9
 DROP   XASPARM-72,R12
 DROP   XALGOFF,R10
 0007FC 9680 C000/0B0E 00000        6739             +
 DROP   @TEXIT-72,R13
1ASMASTER (ASMA00) (09:38) (22MAR04) Level 2 routines for client address space                                              Page   50
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   6749     683.     *********************************************************************
                                    6750     684.     *  XARMEM - Send a read memory request to another address space     *
                                    6751     685.     *                                                                   *
                                    6752     686.     *   Input - @XARMEM                                                 *
                                    6753     687.     *                                                                   *
                                    6754     688.     *  Output - RVR contains return code                                *
                                    6755     689.     *             Codes defined in XASPARM maclib member                *
                                    6756     690.     *           IF RVR = XARCOK or XARCFAIL                             *
                                    6757     691.     *             @XAMLLEN contains length of memory copied             *
                                    6758     692.     *                                                                   *
                                    6759     693.     *********************************************************************
0000000                00000 00058  6761     695.     XAMEM    RECORD BEGIN
 000000                             6769  1  696.     XAMHALT    DS    XL(L'XASHALT)           Area to handle halts
 00000C                             6770  1  697.     XAMPARM    DS    XL(L'XASPARM)           Base parameter len
 000028                             6771  1  698.     XAMMEM     DS    XL(L'XAPMEM)            Memory request extension
 000034                             6772  1  699.     XAMTIME    DS    XL(L'XAPTIME)           Area for timer mgmt
 000048                             6773  1  700.     XAMSYSR    DS    A                       Our SYSR id
 000050                             6774  1  701.     XAMECB     DS    D                       ECB to use for request
 000058                00058 00058  6775     702.              END   ,
0000802                             6785     704.     XARMEM   PROC  @XAMEM,SCOPE=GLOBAL
 000802 E7C1D9D4C5D44040            6791             +
 00080A 0018/0000                   6792             +
 00080E 900F D004/18AF       00004  6794             +
 USING  XARMEM,R10
 000814 50D0 C000/18CD       00000  6809             +
 00081A 9680 C000      00000        6811             +
 USING  @XAMEM-72,R12
 00081E 41D0 C060            00060  6825             +
                                    6826     705.     *
                                    6827     706.     *  Allocate global memory first
                                    6828     707.     *
 USING  @VMGET-72,R13               6829     708.              VMGET L'XAMEM,LOC=GLOBHI
 000822 D70A D048 D048 00000 00000  6853             +
 000828 4100 0058            00058  6865             +
 00082C 5000 D048            00000  6870             +
 000830 D201 D050 A2D0 00008 00ADE  6871             +
 000836 58F0 A232/0DEF       00A40  6874             +
 00083C 1290/4770 A03C       0084A  6876     709.              IF    ('LTR RN,RVR',Z),BEGIN
 000842 4100 000C            0000C  6889  1  710.                LA    RVR,XARCSETUP           Can't post w/out memory
 000846 47F0 A1BA            009C8  6890  1  711.                EXIT  XARMEM
 00084A                             6893     712.              END   ,
 USING  XAMEM,R9                    6897     713.              WITH  (XAMEM,RN)
 00084A                             6910     714.              CLEAR XAMEM                   Clear our global work mem
 00084A D757 9000 9000 00000 00000  6916             +
 AUSING (XASPARM,XAMPARM)           6917     715.              WITH  (XASPARM,XAMPARM)         and set up addressability
 AUSING (XAPMEM,XAPREQ)             6924     716.              WITH  (XAPMEM,XAPREQ)
 AUSING (XAPTIME,XAMTIME)           6931     717.              WITH  (XAPTIME,XAMTIME)
                                    6938     718.     *
                                    6939     719.     *  Set up a timer environment if we need one
                                    6940     720.     *
 000850                             6941     721.              IF    (@XAMTIME,NZ),BEGIN     Set up a timer
 000850 D607 C058 C058 00010 00010  6951             +
1ASMASTER (ASMA00) (09:38) (22MAR04) Level 2 routines for client address space                                              Page   51
0Current Usings:  (PZERO,R0) (XAMEM,R9) (XARMEM,R10) (@XAMEM-72,R12) (@VMGET-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000856 4780 A0A0            008AE  6952             +
 DROP   @VMGET-72,R13               6957  1  722.                PSET  @XASTIME
 USING  @XASTIME-72,R13
 00085A D713 D048 D048 00000 00000  6977  1          +
 000860                             6978  1  723.                PMOV  @XASTCLK,@XAMTIME       Time to wait
 000860 D207 D048 C058 00000 00010  6982  1          +
 000866 4100 9050            00050  6983  1  724.                PMOV  @XASTECB,LA:XAMECB      ECB to post on t-fire
 00086A 5000 D050            00008  6999  1          +
 00086E 4100 9034            00000  7000  1  725.                PMOV  @XASTPRM,LA:XAPTIME
 000872 5000 D054            0000C  7016  1          +
 000876 4100 900C            0000C  7017  1  725.1               PMOV  @XASTPC,LA:XAMPARM        post code is XASPARM
 00087A 5000 D058            00010  7033  1          +
 00087E 58F0 A2B2/0DEF       00AC0  7034  1  726.                ACALL XASTIME
 000884 1220/4780 A0A0       008AE  7041  1  727.                IF    ('LTR RA,RVR',NZ),BEGIN Timer set-up failed
 DROP   @XASTIME-72,R13             7054  2  728.                  VMFREE L'XAMEM,A=LA:XAMEM,LOC=GLOBHI
 USING  @VMFREE-72,R13
 00088A D709 D048 D048 00000 00000  7081  2          +
 000890 4100 0058            00058  7093  2          +
 000894 5000 D04C            00004  7098  2          +
 000898 5090 D048            00000  7109  2          +
 00089C D201 D050 A2D0 00008 00ADE  7110  2          +
 0008A2 58F0 A24E/0DEF       00A5C  7113  2          +
 0008A8 1802                        7115  2  729.                  LR    RVR,RA
 0008AA 47F0 A1BA            009C8  7116  2  730.                  EXIT  XARMEM
 0008AE                             7119  1  731.                END   ,                       OF Timer set-up failed
 0008AE                             7123     732.              END   ,                       OF Set up a timer
                                    7127     733.     *
                                    7128     734.     *  Set up basic parameter area for cross address space communication
                                    7129     735.     *
 0008AE 4100 0004            00004  7130     736.              PMOV  XAPCMD,LA:XACRMEM       Read memory cmd
 0008B2 5000 9014            00008  7146             +
                                    7147     737.     *
                                    7148     738.     *  At the most basic level, we need a SYSR id
                                    7149     739.     *
 DROP   @VMFREE-72,R13              7150     740.              PSET  @SYSRNEW
 USING  @SYSRNEW-72,R13
 0008B6 D703 D048 D048 00000 00000  7170             +
 0008BC 58F0 A2B6/0DEF       00AC4  7171     741.              VCALL SYSRNEW
 0008C2 1280/4770 A0E0       008EE  7175     742.              IF    ('LTR RM,RVR',ZERO),BEGIN        Couldn't get a SYSR
 DROP   @SYSRNEW-72,R13             7188  1  743.                VMFREE L'XAMEM,A=LA:XAMEM,LOC=GLOBHI
 USING  @VMFREE-72,R13
 0008C8 D709 D048 D048 00000 00000  7215  1          +
 0008CE 4100 0058            00058  7227  1          +
 0008D2 5000 D04C            00004  7232  1          +
 0008D6 5090 D048            00000  7243  1          +
 0008DA D201 D050 A2D0 00008 00ADE  7244  1          +
 0008E0 58F0 A24E/0DEF       00A5C  7247  1          +
 0008E6 4100 000C            0000C  7249  1  744.                LA    RVR,XARCSETUP           Trouble posting AS
 0008EA 47F0 A1BA            009C8  7250  1  745.                EXIT  XARMEM
 0008EE                             7253     746.              END   ,
 0008EE 5080 901C            00010  7257     747.              ST    RM,XAPSYSR              Save our SYSR id
 0008F2 5080 9048            00048  7258     748.              ST    RM,XAMSYSR                and save it locally
                                    7259     749.
 0008F6                             7260     750.              PMOV  XAPRASB,PZCURASB        Return ASB
1ASMASTER (ASMA00) (09:38) (22MAR04) Level 2 routines for client address space                                              Page   52
0Current Usings:  (PZERO,R0) (XAMEM,R9) (XARMEM,R10) (@XAMEM-72,R12) (@VMFREE-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
00008F6 D203 9020 0208 00014 00208  7264             +
 0008FC 4100 9050            00050  7265     751.              PMOV  XAPRECB,LA:XAMECB       Return ECB
 000900 5000 9024            00018  7281             +
 000904                             7282     752.              PMOV  XAPSLOC,@XAMSLOC        Source (local address)
 000904 D203 9028 C04C 00000 00004  7286             +
 00090A                             7287     753.              PMOV  XAPDLOC,@XAMDLOC        Destination (global buffer)
 00090A D203 902C C050 00004 00008  7291             +
 000910                             7292     754.              PMOV  XAPDLEN,@XAMDLEN         and length
 000910 D203 9030 C054 00008 0000C  7296             +
                                    7297     755.
 000916                             7298     756.     XARMOK   BEGIN ,                       Try to send block
                                    7303  1  757.     *----------------------------*
                                    7304  1  758.     *  Now send off our request  *
                                    7305  1  759.     *----------------------------*
 DROP   @VMFREE-72,R13              7306  1  760.                PSET  @XASPACE                Send off the request
 USING  @XASPACE-72,R13
 000916 D707 D048 D048 00000 00000  7326  1          +
 00091C 4100 900C            00000  7327  1  761.                PMOV  @XASPARM,LA:XASPARM
 000920 5000 D048            00000  7343  1          +
 000924                             7344  1  762.                PMOV  @XASASB,@XAMASB         ASB to handle request
 000924 D203 D04C C048 00004 00000  7348  1          +
 00092A 58F0 A2AA/0DEF       00AB8  7349  1  763.                ACALL XASEND
 000930                             7356  1  764.                ASSERT (XARCOK,0)
 000930 1200/4770 A142       00950  7358  1  765.                IF    (RVR,NZ),EXIT,XARMOK
                                    7375  1  766.     *----------------------------*
                                    7376  1  767.     *  And wait for our response *
                                    7377  1  768.     *----------------------------*
 000936                             7378  1  769.                PSET  @XASPACE                Wait for the response
 000936 D707 D048 D048 00000 00000  7388  1          +
 00093C 4100 900C            00000  7389  1  770.                PMOV  @XASPARM,LA:XASPARM
 000940 5000 D048            00000  7405  1          +
 000944                             7406  1  770.1               PMOV  @XASASB,@XAMASB         ASB to handle request
 000944 D203 D04C C048 00004 00000  7410  1          +
 00094A 58F0 A2BA/0DEF       00AC8  7411  1  771.                ACALL XAWAIT
 000950                             7418     772.              END   ,                       OF Try to send block
 000950                             7422     773.              PMOV  @XAMDLEN,XAPDLEN        Set length moved
 000950 D203 C054 9030 0000C 00008  7426             +
 000956 1820                        7427     774.              LR    RA,RVR                  Save RC
                                    7428     775.     *
                                    7429     776.     *  If there is a timer exit environment, clean it up
                                    7430     777.     *
 000958                             7431     778.              IF    (@XAMTIME,NZ),BEGIN     Clean up timer env
 000958 D607 C058 C058 00010 00010  7441             +
 00095E 4780 A17C            0098A  7442             +
 DROP   @XASPACE-72,R13             7447  1  779.                PSET  @XACTIME                Cancel timer
 USING  @XACTIME-72,R13
 000962 D703 D048 D048 00000 00000  7467  1          +
 000968 4100 9034            00000  7468  1  780.                PMOV  @XACTPRM,LA:XAPTIME
 00096C 5000 D048            00000  7484  1          +
 000970 58F0 A2BE/0DEF       00ACC  7485  1  781.                ACALL XACTIME
                                    7492  1  782.
 DROP   @XACTIME-72,R13             7493  1  783.                PSET  @XARTIME                Reset timer env
 USING  @XARTIME-72,R13
 000976 D703 D048 D048 00000 00000  7513  1          +
1ASMASTER (ASMA00) (09:38) (22MAR04) Level 2 routines for client address space                                              Page   53
0Current Usings:  (PZERO,R0) (XAMEM,R9) (XARMEM,R10) (@XAMEM-72,R12) (@XARTIME-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
000097C 4100 9034            00000  7514  1  784.                PMOV  @XARTPRM,LA:XAPTIME
 000980 5000 D048            00000  7530  1          +
 000984 58F0 A29A/0DEF       00AA8  7531  1  785.                ACALL XARTIME
 00098A                             7538     786.              END   ,                       OF Clean up timer env
                                    7542     787.     *
                                    7543     788.     *  If we were posted due to a timeout, set up halt processing
                                    7544     789.     *
 00098A 5920 A2C2            00AD0  7545     790.              IF    (RA,EQ,XARCTIME),BEGIN
 00098E 4770 A1A4            009B2  7557             +
 AUSING (XASHALT,XAMHALT)           7562  1  791.                WITH  (XASHALT,XAMHALT)       Set up halt area
 000992 4100 A1D0            009DE  7569  1  792.                PMOV  XAHRTN,LA:XARMEMX       Routine to do cleanup
 000996 5000 9004            00004  7585  1          +
 00099A 5090 9008            00008  7586  1  793.                PMOV  XAHPARM,LA:XAMEM        Parameter to cleanup rtn
                                    7597  1  794.
 DROP   @XARTIME-72,R13             7598  1  795.                PSET  @XAQHALT                Call rtn to queue halted reqs
 USING  @XAQHALT-72,R13
 00099E D703 D048 D048 00000 00000  7618  1          +
 0009A4 4100 9000            00000  7619  1  796.                PMOV  @XAQHID,LA:XASHALT
 0009A8 5000 D048            00000  7635  1          +
 0009AC 58F0 A2C6/0DEF       00AD4  7636  1  797.                ACALL XAQHALT
 0009B2                             7643     798.              END   ,
                                    7647     799.     *
                                    7648     800.     *  Otherwise do synchronous cleanup
                                    7649     801.     *
 0009B2 A1A8           009B2 00990  7650     802.              ELSE  BEGIN
 0009B2 47F0 A1B8            009C6  7655             +
                                    7661  1  803.     *
                                    7662  1  804.     *  Cleanup work areas
                                    7663  1  805.     *
 DROP   @XAQHALT-72,R13             7664  1  806.                PSET  @XACLEAN                Do synchronous cleanup
 USING  @XACLEAN-72,R13
 0009B6 D703 D048 D048 00000 00000  7684  1          +
 0009BC 5090 D048            00000  7685  1  807.                PMOV  @XACID,LA:XAMEM         ID is our work area
 0009C0 41F0 A1D0/0DEF       009DE  7696  1  808.                LCALL XARMEMX
 0009C6                             7705     809.              END   ,
 0009C6 1802                        7709     810.              LR    RVR,RA                  Set RC
 0009C8 981F C008            00008  7710     811.              PEND  ,
 DROP   XAMEM,R9
 DROP   @XAMEM-72,R12
 DROP   XARMEM,R10
 0009CC 9680 C000/0B0E 00000        7730             +
 DROP   @XACLEAN-72,R13
1ASMASTER (ASMA00) (09:38) (22MAR04) Level 2 routines for client address space                                              Page   54
0Current Usings:  (PZERO,R0)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   7740     813.     *********************************************************************
                                    7741     814.     *  XARMEMX - Cleanup routine for memory requests                    *
                                    7742     815.     *            Frees the global memory and IDs allocated for request  *
                                    7743     816.     *              called synchronously for successful reverse posts    *
                                    7744     817.     *              called asynchronously when a halted request finally  *
                                    7745     818.     *                posts back (if ever - not even implemented yet)    *
                                    7746     819.     *                                                                   *
                                    7747     820.     *    Input -  @XACLEN                                               *
                                    7748     821.     *                                                                   *
                                    7749     822.     *   Output -  None                                                  *
                                    7750     823.     *                                                                   *
                                    7751     824.     *********************************************************************
 0009D2                             7752     825.     XARMEMX  PROC  @XACLEAN
 0009D2 E7C1D9D4C5D4E740            7759             +
 0009DA 0008/0000                   7760             +
 0009DE 900F D004/18AF       00004  7762             +
 USING  XARMEMX,R10
 0009E4 50D0 C000/18CD       00000  7777             +
 0009EA 9680 C000      00000        7779             +
 USING  @XACLEAN-72,R12
 0009EE 41D0 C050            00050  7793             +
 0009F2 5890 C048            00000  7794     826.              L     RN,@XACID               ID is ptr to work area
 USING  XAMEM,R9                    7795     827.              WITH  (XAMEM,RN)
                                    7808     828.     *
                                    7809     829.     *  Free our SYSR id
                                    7810     830.     *
 USING  @SYSRDEL-72,R13             7811     831.              PSET  @SYSRDEL
 0009F6 D703 D048 D048 00000 00000  7828             +
 0009FC                             7829     832.              PMOV  @SYSRDID,XAMSYSR        Use our own copy of SYSR id
 0009FC D203 D048 9048 00000 00048  7833             +
 000A02 58F0 A0FA/0DEF       00AD8  7834     833.              VCALL SYSRDEL                   (ie don't trust anyone)
                                    7838     834.     *
                                    7839     835.     *  Free our global parameter memory
                                    7840     836.     *
 DROP   @SYSRDEL-72,R13             7841     837.              VMFREE L'XAMEM,A=LA:XAMEM,LOC=GLOBHI
 USING  @VMFREE-72,R13
 000A08 D709 D048 D048 00000 00000  7868             +
 000A0E 4100 0058            00058  7880             +
 000A12 5000 D04C            00004  7885             +
 000A16 5090 D048            00000  7896             +
 000A1A D201 D050 A100 00008 00ADE  7897             +
 000A20 58F0 A07E/0DEF       00A5C  7900             +
                                    7902     838.
 000A26 981F C008            00008  7903     839.              PEND  ,
 DROP   XAMEM,R9
 DROP   @XACLEAN-72,R12
 DROP   XARMEMX,R10
 000A2A 9680 C000/0B0E 00000        7923             +
 DROP   @VMFREE-72,R13
 DROP   PZERO,R0                    7932     840.              DROP  R0
 000A30                             7940     841.              END   .
 000A30 00000000                    7943                             =V(IOSASC)
 000A34 00000000                    7944                             =V(LQEALL)
 000A38 00000000                    7945                             =V(TERMINAS)
1ASMASTER (ASMA00) (09:38) (22MAR04) Level 2 routines for client address space                                              Page   55
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.38
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000A3C 00000000                    7946                             =V(LQEDALL)
 000A40 00000000                    7947                             =V(VMGET)
 000A44 C1D4E2E3                    7948                             =CL4'AMST'
 000A48 FFFFFFF6                    7949                             =A(-10)
 000A4C 00000000                    7950                             =V(TCREATE)
 000A50 00000000                    7951                             =V(AWAIT)
 000A54 00000004                    7952                             =A(XACLAST)
 000A58 00000000                    7953                             =V(SIGNAL)
 000A5C 00000000                    7954                             =V(VMFREE)
 000A60 00000000                    7955                             =V(ENQASTRM)
 000A64 00000000                    7956                             =V(TERMLGOF)
 000A68 00000000                    7957                             =V(NETLOGOF)
 000A6C 00000000                    7958                             =V(ACLOGOFF)
 000A70 00000000                    7959                             =V(ASEXIT)
 000A74 070C0000                    7960                             =X'070C0000'
 000A78 8000040A                    7961                             =A(XAPIXIT+X'80000000')
 000A7C 800003B4                    7962                             =A(XARMRST+X'80000000')
 000A80 00000000                    7963                             =V(EXRADD)
 000A84 00000000                    7964                             =V(XITMASK)
 000A88 00000000                    7965                             =V(EXRDEL)
 000A8C 00000000                    7966                             =V(XITGST)
 000A90 00000000                    7967                             =V(XITPST)
 000A94 00000000                    7968                             =V(EXRDONE)
 000A98 C1E2C240                    7969                             =CL4'ASB'
 000A9C 8000057C                    7970                             =A(XARTXIT+X'80000000')
 000AA0 00000000                    7971                             =V(XITNEW)
 000AA4 00000000                    7972                             =V(RTSET)
 000AA8 000006A2                    7973                             =A(XARTIME)
 000AAC 00000000                    7974                             =V(XITDEL)
 000AB0 00000000                    7975                             =V(RTCAN)
 000AB4 00000000                    7976                             =V(ASLOCK)
 000AB8 0000045A                    7977                             =A(XASEND)
 000ABC 00000000                    7978                             =V(TEXIT)
 000AC0 000005CC                    7979                             =A(XASTIME)
 000AC4 00000000                    7980                             =V(SYSRNEW)
 000AC8 00000506                    7981                             =A(XAWAIT)
 000ACC 00000722                    7982                             =A(XACTIME)
 000AD0 00000010                    7983                             =A(XARCTIME)
 000AD4 00000762                    7984                             =A(XAQHALT)
 000AD8 00000000                    7985                             =V(SYSRDEL)
 000ADC 3F00                        7986                             =Y(63*256+0)
 000ADE 3B00           00AE0 00AE0  7987                             =Y(59*256+0)

1ASMASTER (ASMA00) (09:38) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   56
-Symbol   Length   Value     Id    R Type   Defn References                                  HLASM R4.0  2004/03/22 09.38
0$$$@R0        1 00000000 FFFFFFFE     J     714 1010
 $$$@R1        1 00000000 FFFFFFFD     J     727 1022
 $$$@R10       1 00000000 FFFFFFF4     J     844 1142
 $$$@R11       1 00000000 FFFFFFF3     J     857 1154
 $$$@R12       1 00000000 FFFFFFF2     J     870 1166
 $$$@R13       1 00000000 FFFFFFF1     J     883 1178
 $$$@R14       1 00000000 FFFFFFF0     J     896 1190
 $$$@R15       1 00000000 FFFFFFEF     J     909 1202
 $$$@R2        1 00000000 FFFFFFFC     J     740 1034
 $$$@R3        1 00000000 FFFFFFFB     J     753 1046
 $$$@R4        1 00000000 FFFFFFFA     J     766 1058
 $$$@R5        1 00000000 FFFFFFF9     J     779 1070
 $$$@R6        1 00000000 FFFFFFF8     J     792 1082
 $$$@R7        1 00000000 FFFFFFF7     J     805 1094
 $$$@R8        1 00000000 FFFFFFF6     J     818 1106
 $$$@R9        1 00000000 FFFFFFF5     J     831 1118  1130
 $$$C1ASMASTER
               1 00000AE0 00000001     J    7988 7990
 $$$R#XARMEM
               1 00000000 FFFFFFBB     J    4219 4234  4234
 $$$R@ACREATE
               1 00000000 FFFFFFE7     J    1545 1558  1558
 $$$R@AWAIT
               1 00000000 FFFFFFC9     J    2472 2494  2494
 $$$R@CPCNCK
               1 00000000 FFFFFFCC     J    2400 2415  2415
 $$$R@CPSET
               1 00000000 FFFFFFCD     J    2375 2390  2390
 $$$R@DISPPIOC
               1 00000000 FFFFFFEC     J    1411 1424  1424
 $$$R@DISPSIOC
               1 00000000 FFFFFFEB     J    1430 1443  1443
 $$$R@DISPSWP
               1 00000000 FFFFFFE8     J    1522 1535  1535
 $$$R@DSPSTAT
               1 00000000 FFFFFFDC     J    1816 1832  1832
 $$$R@EXRADD
               1 00000000 FFFFFFDB     J    1850 1880  1880
 $$$R@EXRDEL
               1 00000000 FFFFFFDA     J    1890 1903  1903
 $$$R@EXRDONE
               1 00000000 FFFFFFD9     J    1913 1949  1949
 $$$R@IOSASC
               1 00000000 FFFFFFCA     J    2447 2460  2460
 $$$R@MONSET
               1 00000000 FFFFFFDD     J    1793 1806  1806
 $$$R@PERSET
               1 00000000 FFFFFFDE     J    1770 1783  1783
 $$$R@RESUME
               1 00000000 FFFFFFE9     J    1497 1512  1512
 $$$R@RTCNCK
               1 00000000 FFFFFFCF     J    2325 2340  2340
 $$$R@RTSET
               1 00000000 FFFFFFD0     J    2291 2315  2315
 $$$R@SIGNAL
1ASMASTER (ASMA00) (09:38) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   57
               1 00000000 FFFFFFC8     J    2505 2525  2525
 $$$R@SUSPEND
               1 00000000 FFFFFFEA     J    1453 1487  1487
 $$$R@SYSRDEL
               1 00000000 FFFFFFE1     J    1698 1711  1711
 $$$R@SYSRDO
               1 00000000 FFFFFFE0     J    1721 1737  1737
 $$$R@SYSRNEW
               1 00000000 FFFFFFE2     J    1676 1689  1689
 $$$R@SYSRTN
               1 00000000 FFFFFFDF     J    1747 1760  1760
 $$$R@TCREATE
               1 00000000 FFFFFFE6     J    1568 1597  1597
 $$$R@TENTRY
               1 00000000 FFFFFFE4     J    1630 1643  1643
 $$$R@TEXIT
               1 00000000 FFFFFFE3     J    1653 1666  1666
 $$$R@TREMOVE
               1 00000000 FFFFFFE5     J    1607 1620  1620
 $$$R@VMFREE
               1 00000000 FFFFFFC6     J    2573 2588  2588
 $$$R@VMGET
               1 00000000 FFFFFFC7     J    2538 2567  2567
 $$$R@VMINFO
               1 00000000 FFFFFFC5     J    2594 2609  2609
 $$$R@XACLEAN
               1 00000000 FFFFFFC0     J    2741 2754  2754
 $$$R@XACTIME
               1 00000000 FFFFFFB8     J    6215 6228  6228
 $$$R@XACTION
               1 00000000 FFFFFFBC     J    2829 2842  2842
 $$$R@XAMEM
               1 00000000 FFFFFFBE     J    2782 2799  2799
 $$$R@XAQHALT
               1 00000000 FFFFFFB7     J    6359 6372  6372
 $$$R@XARTIME
               1 00000000 FFFFFFB9     J    5930 5943  5943
 $$$R@XASPACE
               1 00000000 FFFFFFBF     J    2762 2776  2776
 $$$R@XASTIME
               1 00000000 FFFFFFBA     J    5526 5542  5542
 $$$R@XITDATA
               1 00000000 FFFFFFD2     J    2235 2248  2248
 $$$R@XITDEL
               1 00000000 FFFFFFD7     J    1990 2003  2003
 $$$R@XITDO
               1 00000000 FFFFFFD6     J    2012 2029  2029
 $$$R@XITGPST
               1 00000000 FFFFFFD5     J    2040 2055  2055
 $$$R@XITMASK
               1 00000000 FFFFFFD4     J    2065 2112  2112
 $$$R@XITNEW
               1 00000000 FFFFFFD8     J    1959 1980  1980
 $$$RASB       1 00000000 FFFFFFED     J    1344 1395  1395
 $$$RASMSTR
               1 00000000 FFFFFFBD     J    2805 2823  2823
 $$$RCPEXIT
               1 00000000 FFFFFFCB     J    2425 2440  2440
 $$$RPZERO
1ASMASTER (ASMA00) (09:38) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   58
               1 00000000 FFFFFFEE     J    1237 1328  1328
 $$$RRTEXIT
               1 00000000 FFFFFFCE     J    2350 2365  2365
 $$$RXAMEM
               1 00000000 FFFFFFB6     J    6763 6781  6781
 $$$RXAPMEM
               1 00000000 FFFFFFC3     J    2647 2662  2662
 $$$RXAPTIME
               1 00000000 FFFFFFC2     J    2670 2695  2695
 $$$RXASHALT
               1 00000000 FFFFFFC1     J    2720 2735  2735
 $$$RXASPARM
               1 00000000 FFFFFFC4     J    2619 2639  2639
 $$$RXITMSKD
               1 00000000 FFFFFFD3     J    2138 2225  2225
 $$$RXITSAREA
               1 00000000 FFFFFFD1     J    2258 2274  2274
 $$$11S        2 0000018A 00000001     H    3425 3513B 3767B
 $$$12S        2 000001A2 00000001     H    3477 3761B
 $$$13S        2 000001A6 00000001     H    3500 3535B
 $$$17F        2 000001D4 00000001     H    3580 3570B
 $$$17T        2 000001CC 00000001     H    3573 3558B
 $$$19F        2 0000022E 00000001     H    3752 3695B
 $$$21F        2 000002E2 00000001     H    4089 3930B
 $$$21S        2 0000027A 00000001     H    3897 4088B
 $$$22S        2 0000027E 00000001     H    3917 3952B
 $$$26F        2 000002DE 00000001     H    4079 4022B
 $$$28F        2 000003C2 00000001     H    4448 4436B
 $$$30F        2 000004F0 00000001     H    5064 4844B 4899B
 $$$31F        2 00000480 00000001     H    4807 4797B
 $$$32F        2 00000492 00000001     H    4848 4836B
 $$$33F        2 000004AE 00000001     H    4903 4891B
 $$$33T        2 000004A6 00000001     H    4894 4879B
 $$$35S        2 000004B4 00000001     H    4919 4937B
 $$$38F        2 000004F0 00000001     H    5035 5025B
 $$$39F        2 00000566 00000001     H    5299 5179B 5234B
 $$$40F        2 00000534 00000001     H    5183 5171B
 $$$41F        2 00000550 00000001     H    5238 5226B
 $$$41T        2 00000548 00000001     H    5229 5214B
 $$$44F        2 0000068C 00000001     H    5908 5881B
 $$$47F        2 0000068A 00000001     H    5885 5833B
 $$$49F        2 000006D4 00000001     H    6057 6017B
 $$$50F        2 000006F2 00000001     H    6115 6071B
 $$$51F        2 0000070C 00000001     H    6173 6130B
 $$$54S        2 00000786 00000001     H    6478 6495B
 $$$58F        2 000009C8 00000001     H    7728 6892B 7118B 7252B
 $$$59F        2 0000084A 00000001     H    6896 6884B
 $$$60F        2 000008AE 00000001     H    7126 6952B
 $$$61F        2 000008AE 00000001     H    7122 7049B
 $$$62F        2 000008EE 00000001     H    7256 7183B
 $$$63F        2 00000950 00000001     H    7421 7369B
 $$$65F        2 0000098A 00000001     H    7541 7442B
 $$$66B        4 0000098E 00000001     I    7557 7652
 $$$66F        2 000009B2 00000001     H    7646 7557B 7651
 $$$67E        2 000009B6 00000001     H    7659 7653
 $$$67F        2 000009C6 00000001     H    7708 7655B
 #XARKEY       4 00000008 FFFFFFBB     A    4227 4414M 4452
 #XARMEM      12 00000000 FFFFFFBB     J    4234 4282U
 #XARXMSK      4 00000004 FFFFFFBB     A    4226 4408M 4515
1ASMASTER (ASMA00) (09:38) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   59
 #XARXRID      4 00000000 FFFFFFBB     A    4225 4365M 4482
 @AWAIT        5 00000000 FFFFFFC9     J    2494 3437U 3445M 3445  5252U 5260M 5260
 @AWTECB       4 00000000 FFFFFFC9     A    2478 3462M 5265M
 @AWTFLG       1 00000004 FFFFFFC9     R    2481 2485
 @AWTLONG    128 00000004 FFFFFFC9         2485 3468M
 @EXRADD      21 00000000 FFFFFFDB     J    1880 4319U 4327M 4327  5623U 5631M 5631
 @EXRAFLG      1 00000014 FFFFFFDB     R    1862 1866  1871
 @EXRAFS      64 00000014 FFFFFFDB         1871 4355M 5659M
 @EXRDCD       1 00000000 FFFFFFD9     R    1921 1930  1940
 @EXRDEL       4 00000000 FFFFFFDA     J    1903 4469U 4477M 4477  6147U 6155M 6155
 @EXRDID       4 00000000 FFFFFFDA     A    1896 4482M 6165M
 @EXRDONE      1 00000000 FFFFFFD9     J    1949 4678U 4686M 5471U 5479M
 @EXRPARM      4 00000010 FFFFFFDB     A    1859 4360M
 @EXRPSW       8 00000008 FFFFFFDB     D    1858 4348M 4349M 5652M 5653M
 @EXRTYPE      4 00000000 FFFFFFDB     A    1856 4333U 5637U
 @IOASCAS      4 00000000 FFFFFFCA     A    2453 2904M
 @IOSASC       4 00000000 FFFFFFCA     J    2460 2895U 2903M 2903
 @RK           0 00000000 FFFFFFF9     @    1071 4922
 @RTCID        4 00000000 FFFFFFCF     A    2331 6313M
 @RTCNCK      32 00000000 FFFFFFCF     J    2340 6300U 6308M 6308
 @RTSCLK       8 00000000 FFFFFFD0     D    2297 5805M
 @RTSET       24 00000000 FFFFFFD0     J    2315 5792U 5800M 5800
 @RTSFINT    128 00000008 FFFFFFD0         2304 5811M
 @RTSFLG       1 00000008 FFFFFFD0     R    2300 2304
 @RTSPARM      4 00000010 FFFFFFD0     A    2308 5817M 5818M
 @RTSXIT       4 0000000C FFFFFFD0     A    2307 5816M
 @RY           0 00000000 FFFFFFF7     @    1095 4453
 @R0           0 00000000 FFFFFFFE     @     715  991U 7937U
 @R1           0 00000000 FFFFFFFD     @     728  987U
 @R10          0 00000000 FFFFFFF4     @     845  951U 2923U 2987U 3040U 3101U 3335U 3785U 4190U 4546U 4707U 5062U 5297U
                                                 5505U 5906U 6191U 6334U 6523U 6735U 7726U 7919U
 @R11          0 00000000 FFFFFFF3     @     858  947U
 @R12          0 00000000 FFFFFFF2     @     871  943U 3330U 4185U 4541U 4702U 5057U 5292U 5500U 5901U 6186U 6329U 6518U
                                                 6730U 7721U 7914U
 @R13          0 00000000 FFFFFFF1     @     884  939U 2934U 3278U 3346U 3593U 3641U 3716U 3796U 4043U 4201U 4378U 4466U
                                                 4499U 4557U 4675U 4718U 5073U 5308U 5468U 5513U 5694U 5743U 5789U 5848U
                                                 5917U 6085U 6144U 6202U 6345U 6698U 6746U 6966U 7070U 7159U 7204U 7315U
                                                 7456U 7502U 7607U 7673U 7737U 7857U 7930U
 @R14          0 00000000 FFFFFFF0     @     897  935U
 @R15          0 00000000 FFFFFFEF     @     910  931U
 @R2           0 00000000 FFFFFFFC     @     741  983U
 @R3           0 00000000 FFFFFFFB     @     754  979U
 @R4           0 00000000 FFFFFFFA     @     767  975U
 @R5           0 00000000 FFFFFFF9     @     780  971U
 @R6           0 00000000 FFFFFFF8     @     793  967U 3758U 4085U
 @R7           0 00000000 FFFFFFF7     @     806  963U 5042U 5277U
 @R8           0 00000000 FFFFFFF6     @     819  959U 3325U 3780U 4180U 5047U 5282U 5490U 6513U 6720U
 @R9           0 00000000 FFFFFFF5     @     832  955U 3320U 3775U 4175U 4536U 4697U 5052U 5287U 5495U 5896U 6181U 6324U
                                                 6455U 6508U 6725U 7716U 7909U
 @SGASB        4 0000000C FFFFFFC8     A    2516 3673M 4000M 5003M
 @SGCODE       8 00000000 FFFFFFC8     D    2511 3668M 3995M 4992M 5451M
 @SGECB        4 00000008 FFFFFFC8     A    2512 3657M 3984M 4981M 5440M
 @SGSRID       4 00000010 FFFFFFC8     A    2517 3678M 4005M 5008M
 @SIGNAL      20 00000000 FFFFFFC8     J    2525 3644U 3652M 3652  3971U 3979M 3979  4956U 4964M 4964  5427U 5435M 5435
 @SUSPFLG      1 00000008 FFFFFFEA     R    1464 1468  1473  1478
 @SYSRDEL      4 00000000 FFFFFFE1     J    1711 7820U 7828M 7828
 @SYSRDID      4 00000000 FFFFFFE1     A    1704 7833M
 @SYSRNEW      4 00000000 FFFFFFE2     J    1689 7162U 7170M 7170
 @TCREATE     21 00000000 FFFFFFE6     J    1597 3281U 3289M 3289
1ASMASTER (ASMA00) (09:38) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   60
 @TCRFLAG      1 00000014 FFFFFFE6     R    1579 1583  1588
 @TCRFSTK    128 00000014 FFFFFFE6         1583 3297M
 @TCRPRIO      4 00000010 FFFFFFE6     A    1576 3291M
 @TCRPSW       8 00000000 FFFFFFE6     D    1574 3290M
 @TENTRY       8 00000000 FFFFFFE4     J    1643 3156U
 @TEPARM       4 00000000 FFFFFFE4     A    1636 3290
 @TEXIT        4 00000000 FFFFFFE3     J    1666 6701U 6709M 6709
 @VMFLEN       4 00000004 FFFFFFC6     A    2580 3732M 4059M 4127M 7098M 7232M 7885M
 @VMFLOC       4 00000000 FFFFFFC6     A    2579 3743M 4070M 4138M 7109M 7243M 7896M
 @VMFPOOL      2 00000008 FFFFFFC6     H    2581 3744M 4071M 4139M 7110M 7244M 7897M
 @VMFREE      10 00000000 FFFFFFC6     J    2588 3719U 3727M 3727  4046U 4054M 4054  4110M 4110  7073U 7081M 7081  7207U
                                                 7215M 7215  7860U 7868M 7868
 @VMGET       11 00000000 FFFFFFC7     J    2567 3194U 3202M 3202  6845U 6853M 6853
 @VMGFLG       1 0000000A FFFFFFC7     R    2549 2553  2558
 @VMGLEN       4 00000000 FFFFFFC7     A    2544 3219M 6870M
 @VMGPOOL      2 00000008 FFFFFFC7     H    2546 3220M 6871M
 @XACID        4 00000000 FFFFFFC0     A    2747 7695M 7794
 @XACLEAN      4 00000000 FFFFFFC0     J    2754 7676U 7684M 7684  7789U
 @XACPARM      4 00000000 FFFFFFBC     A    2835 3615M 4285
 @XACTIME      4 00000000 FFFFFFB8     J    6228 6269U 7459U 7467M 7467
 @XACTION      4 00000000 FFFFFFBC     J    2842 3596U 3604M 3604  3847U 4275U 4282U
 @XACTPRM      4 00000000 FFFFFFB8     A    6221 6274  7484M
 @XAMASB       4 00000000 FFFFFFBE     A    2788 7348  7410
 @XAMDLEN      4 0000000C FFFFFFBE     A    2791 7296  7426M
 @XAMDLOC      4 00000008 FFFFFFBE     A    2790 7291
 @XAMEM       24 00000000 FFFFFFBE     J    2799 6821U
 @XAMSLOC      4 00000004 FFFFFFBE     A    2789 7286
 @XAMTIME      8 00000010 FFFFFFBE     D    2792 6951M 6951  6982  7441M 7441
 @XAQHALT      4 00000000 FFFFFFB7     J    6372 6413U 7610U 7618M 7618
 @XAQHID       4 00000000 FFFFFFB7     A    6365 6418  7635M
 @XARTIME      4 00000000 FFFFFFB9     J    5943 5851U 5859M 5859  5984U 7505U 7513M 7513
 @XARTPRM      4 00000000 FFFFFFB9     A    5936 5870M 5989  7530M
 @XASASB       4 00000004 FFFFFFBF     A    2769 4787  5142  7348M 7410M
 @XASPACE      8 00000000 FFFFFFBF     J    2776 4768U 5123U 6653U 6661M 6661  7318U 7326M 7326  7388M 7388
 @XASPARM      4 00000000 FFFFFFBF     A    2768 4773  5128  6678M 7343M 7405M
 @XASTCLK      8 00000000 FFFFFFBA     D    5532 5805  6982M
 @XASTECB      4 00000008 FFFFFFBA     A    5533 5817  6999M
 @XASTIME     20 00000000 FFFFFFBA     J    5542 5583U 6969U 6977M 6977
 @XASTPC       4 00000010 FFFFFFBA     A    5535 5818  7033M
 @XASTPRM      4 0000000C FFFFFFBA     A    5534 5588  7016M
 @XITDATA      4 00000000 FFFFFFD2     J    2248 4610U 5357U
 @XITDEL       4 00000000 FFFFFFD7     J    2003 6031U 6039M 6039
 @XITDID       4 00000000 FFFFFFD7     A    1996 6049M
 @XITDSA       4 00000000 FFFFFFD2     A    2241 4615  5362
 @XITGPST    104 00000000 FFFFFFD5     J    2055 4642U 4650M 4650
 @XITMASK      5 00000000 FFFFFFD4     J    2112 4381U 4389M 4389  4502U 4510M 4510  5697U 5705M 5705  6088U 6096M 6096
 @XITMREQ      1 00000004 FFFFFFD4     R    2074 2083  2093  2103
 @XITMSK       4 00000000 FFFFFFD4     A    2071 4395U 4515M 5711U 6101M
 @XITMSS       2 00000004 FFFFFFD4         2103 4521M 6107M
 @XITNEW       1 00000000 FFFFFFD8     J    1980 5746U 5754M
 @XITNFL       1 00000000 FFFFFFD8     R    1967 1971
 @XITSPSW      8 00000000 FFFFFFD5     D    2046 4658M
 ACLOGOFF      1 00000000 0000000E     T    7958 7958
 ACTIME16      2 00000716 00000001     H    6237 6236
 APIXIT16      2 000003FE 00000001     H    4578 4577
 AQHALT16      2 00000756 00000001     H    6381 6380
 ARMEMR16      2 00000328 00000001     H    4243 4242
 ARMEMX16      2 000009D2 00000001     H    7757 7756
 ARTIME16      2 00000696 00000001     H    5952 5951
1ASMASTER (ASMA00) (09:38) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   61
 ARTXIT16      2 00000570 00000001     H    5325 5324
 ASB          68 00000000 FFFFFFED     J    1395 3171U 3399U 3862U 4817U 5152U 6442U 6594U
 ASBGCFLG      1 00000014 FFFFFFED     R    1365 1369
 ASBID         4 00000000 FFFFFFED     C    1350 4835  5170
 ASBMSTR       4 0000003C FFFFFFED     A    1385 3265M 3403  3866  3887M 3887  4854  5189  6448  6598
 ASEXIT        1 00000000 0000000F     T    7959 7959
 ASLOCK        1 00000000 0000001A     T    7976 7976
 ASMASTER      1 00000000 00000001     J    1221 1218  1219  1223  1329  1396  1425  1444  1488  1513  1536  1559  1598
                                                 1621  1644  1667  1690  1712  1738  1761  1784  1807  1833  1881  1904
                                                 1950  1981  2004  2030  2056  2113  2226  2249  2275  2316  2341  2366
                                                 2391  2416  2441  2461  2495  2526  2568  2589  2610  2640  2663  2696
                                                 2736  2755  2777  2800  2824  2843  4235  5543  5944  6229  6373  6782
 ASMA00        1 00000000 00000001     R    1230 1228
 ASMECB        8 00000010 FFFFFFBD     D    2814 3457  4976
 ASMGBLIN      4 00000022 00000001     I    2864 2859  2875U
 ASMGBLX       4 00000092 00000001     I    3015 3010  3026U
 ASMID         4 00000000 FFFFFFBD     C    2811 3249M 3888M 4890  5225
 ASMLCLIN      4 00000062 00000001     I    2954 2949  2965U
 ASMLCLX       4 000000BC 00000001     I    3068 3063  3079U
 ASMMSG        8 00000018 FFFFFFBD     D    2815 3482  3521M 3899  3938M 4907  4923M
 ASMPID        8 00000008 FFFFFFBD     D    2813 3254M
 ASMSTR       36 00000000 FFFFFFBD     J    2823 3214  3235U 3248M 3248  3413U 3876U 4122  4865U 5200U 6466U 6608U
 ASMTASK       4 000000EC 00000001     I    3129 3124  3140U
 ASMXHALT      4 00000020 FFFFFFBD     A    2816 6473  6481M
 ASPACE16      2 00000162 00000001     H    3365 3364
 ASTIME16      2 000005C0 00000001     H    5551 5550
 AWAIT         1 00000000 00000008     T    7951 7951
 BR           10 0000000A FFFFFFFF A   #    1136 2865M 2875U 2955M 2965U 3016M 3026U 3069M 3079U 3130M 3140U 3371M 3381U
                                                 3821M 3831U 4249M 4259U 4584M 4594U 4742M 4752U 5097M 5107U 5331M 5341U
                                                 5557M 5567U 5958M 5968U 6243M 6253U 6387M 6397U 6553M 6563U 6795M 6805U
                                                 7763M 7773U
 BTABLE        4 00000240 00000001     A    3799 3616
 DOANSWER      2 000001E6 00000001     H    3629 3576B
 ENQASTRM      1 00000000 0000000B     T    7955 7955
 EPAR         15 0000000F FFFFFFFF A   #    1196 2865  2907M 2908B 2914M 2915B 2955  2978M 2979B 3016  3069  3092M 3093B
                                                 3130  3223M 3224B 3300M 3301B 3312M 3313B 3371  3471M 3472B 3622M 3623B
                                                 3681M 3682B 3747M 3748B 3821  4008M 4009B 4074M 4075B 4142M 4143B 4149M
                                                 4150B 4154M 4155B 4158M 4159B 4162M 4163B 4167M 4168B 4249  4363M 4364B
                                                 4405M 4406B 4485M 4486B 4524M 4525B 4584  4653M 4654B 4661M 4662B 4689M
                                                 4690B 4742  5011M 5012B 5097  5268M 5269B 5331  5454M 5455B 5482M 5483B
                                                 5557  5662M 5663B 5721M 5722B 5757M 5758B 5821M 5822B 5876M 5877B 5958
                                                 6052M 6053B 6110M 6111B 6168M 6169B 6243  6316M 6317B 6387  6553  6617M
                                                 6618B 6684M 6685B 6712M 6713B 6795  6874M 6875B 7039M 7040B 7113M 7114B
                                                 7173M 7174B 7247M 7248B 7354M 7355B 7416M 7417B 7490M 7491B 7536M 7537B
                                                 7641M 7642B 7703M 7704B 7763  7836M 7837B 7900M 7901B
 EXRADD        1 00000000 00000010     T    7963 7963
 EXRDEL        1 00000000 00000012     T    7965 7965
 EXRDONE       1 00000000 00000015     T    7968 7968
 HIBAL         1 00000000 FFFFFFFF     J     700  716   729   742   755   768   781   794   807   820   833   846   859
                                                  872   885   898   911  1012  1024  1036  1048  1060  1072  1084  1096
                                                 1108  1120  1132  1144  1156  1168  1180  1192  1204
 IOSASC        1 00000000 00000002     T    7943 7943
 LQEALL        1 00000000 00000003     T    7944 7944
 LQEDALL       1 00000000 00000005     T    7946 7946
 MITMK1        1 00000000 FFFFFFD3     R    2147 2151  2156  2161  2166  2171  2176  2181  2186
 MITMK2        1 00000001 FFFFFFD3     R    2192 2196  2201  2206
 NETLOGOF      1 00000000 0000000D     T    7957 7957
 PZCURASB      4 00000208 FFFFFFEE     A    1294 3161  3389  3852  4803  6432  6584  7264
 PZCURPID      8 00000208 FFFFFFEE     D    1293 3254
1ASMASTER (ASMA00) (09:38) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   62
 PZERO       640 00000000 FFFFFFEE     J    1328 1338U
 PZTERMFL      1 0000021A FFFFFFEE     R    1305 1309  1314
 RA            2 00000002 FFFFFFFF A   #    1028 3519M 3521  3936M 3938  4419M 4422M 4426M 4444M 4529  4914M 4923  7048M
                                                 7115  7427M 7556  7709
 RAR          14 0000000E FFFFFFFF A   #    1184 2908M 2915M 2928B 2979M 2992B 3045B 3093M 3106B 3224M 3301M 3313M 3340B
                                                 3472M 3623M 3682M 3748M 3790B 4009M 4075M 4143M 4150M 4155M 4159M 4163M
                                                 4168M 4195B 4364M 4406M 4486M 4525M 4551B 4654M 4662M 4690M 4712B 5012M
                                                 5067B 5269M 5302B 5455M 5483M 5663M 5722M 5758M 5822M 5877M 5911B 6053M
                                                 6111M 6169M 6196B 6317M 6339B 6528B 6618M 6685M 6713M 6740B 6875M 7040M
                                                 7114M 7174M 7248M 7355M 7417M 7491M 7537M 7642M 7704M 7731B 7837M 7901M
                                                 7924B
 RB            3 00000003 FFFFFFFF A   #    1040 3520M 3937M 4419M 4421  4423M 4423  4424M 4425  4441M 4441  4442M 4443
                                                 4922M
 RJ            4 00000004 FFFFFFFF A   #    1052 4420M 4422M 4907M 4921  4923M
 RK            5 00000005 FFFFFFFF A   #    1064 3616M 3622  4421M 4907M
 RM            8 00000008 FFFFFFFF A   #    1100 2904  3161M 3171U 3389M 3399U 3852M 3862U 4787M 4796M 4796  4803M 4817U
                                                 5142M 5152U 5383M 5393U 6418M 6428U 6481  6598M 6608U 7182M 7257  7258
 RN            9 00000009 FFFFFFFF A   #    1112 3225M 3235U 3403M 3413U 3866M 3876U 4285M 4295U 4615M 4625U 4773M 4783U
                                                 5128M 5138U 5362M 5372U 5588M 5598U 5989M 5999U 6274M 6284U 6432M 6442U
                                                 6448M 6466U 6584M 6594U 6883M 6906U 7794M 7804U
 RTCAN         1 00000000 00000019     T    7975 7975
 RTEXIT       16 00000000 FFFFFFCE     J    2365 5381U
 RTSET         1 00000000 00000017     T    7972 7972
 RTXPARM       4 00000008 FFFFFFCE     A    2358 5383  5440
 RVR           0 00000000 FFFFFFFF A   #    1004 3214M 3225  3457M 3575M 3630  3694M 3694  3959M 3960  4021M 4021  4122M
                                                 4365  4408  4529M 4841M 4896M 4976M 5024M 5024  5031M 5176M 5231M 5270M
                                                 5408M 5664  5673M 5673  5730  5759  5768M 5768  5823  5832M 5832  5878M
                                                 5889M 5889  6638M 6673M 6865M 6883  6889M 6994M 7011M 7028M 7048  7093M
                                                 7115M 7141M 7182  7227M 7249M 7276M 7338M 7366M 7366  7400M 7427  7479M
                                                 7525M 7580M 7630M 7709M 7880M
 RX            6 00000006 FFFFFFFF A   #    1076 3482M 3492U 3510M 3510  3521M 3899M 3909U 3927M 3927  3938M 6015M 6016M
                                                 6016  6128M 6129M 6129  6473M 6480  6481M
 RY            7 00000007 FFFFFFFF A   #    1088 3482M 3520  3541M 3555M 3555  3569  3616  3899M 3937  4452M 4854M 4855M
                                                 4855  4865U 5189M 5190M 5190  5200U
 R0            0 00000000 FFFFFFFF A   #     708 1338U 2864  2954  3015  3068  3129  3370  3820  4248  4583  4741  5096
                                                 5330  5556  5957  6242  6386  6552  6794  7762
 R1            1 00000001 FFFFFFFF A   #     721 2926M 2990M 3043M 3104M 3338M 3788M 4193M 4549M 4710M 5065M 5300M 5909M
                                                 6194M 6337M 6526M 6738M 7729M 7922M
 R15          15 0000000F FFFFFFFF A   #     903 2864  2926M 2954  2990M 3015  3043M 3068  3104M 3129  3338M 3370  3788M
                                                 3820  4193M 4248  4549M 4583  4710M 4741  5065M 5096  5300M 5330  5556
                                                 5909M 5957  6194M 6242  6337M 6386  6526M 6552  6738M 6794  7729M 7762
                                                 7922M
 R2            2 00000002 FFFFFFFF A   #     734 4414
 SIGNAL        1 00000000 00000009     T    7953 7953
 SPR          13 0000000D FFFFFFFF A   #    1172 2864  2879  2880  2882M 2895U 2954  2969  2970  2972M 3015  3030  3031
                                                 3033M 3068  3083  3084  3086M 3129  3144  3145  3160M 3194U 3281U 3370
                                                 3385  3386  3388M 3437U 3596U 3644U 3719U 3820  3835  3836  3851M 3971U
                                                 4046U 4248  4263  4264  4284M 4319U 4381U 4469U 4502U 4583  4598  4599
                                                 4614M 4642U 4678U 4741  4756  4757  4772M 4956U 5096  5111  5112  5127M
                                                 5252U 5330  5345  5346  5361M 5427U 5471U 5556  5571  5572  5587M 5623U
                                                 5697U 5746U 5792U 5851U 5957  5972  5973  5988M 6031U 6088U 6147U 6242
                                                 6257  6258  6273M 6300U 6386  6401  6402  6417M 6552  6567  6568  6583M
                                                 6653U 6701U 6794  6809  6810  6825M 6845U 6969U 7073U 7162U 7207U 7318U
                                                 7459U 7505U 7610U 7676U 7762  7777  7778  7793M 7820U 7860U
 SYSRDEL       1 00000000 0000001D     T    7985 7985
 SYSRNEW       1 00000000 0000001C     T    7980 7980
 TCREATE       1 00000000 00000007     T    7950 7950
 TERMINAS      1 00000000 00000004     T    7945 7945
 TERMLGOF      1 00000000 0000000C     T    7956 7956
1ASMASTER (ASMA00) (09:38) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   63
 TEXIT         1 00000000 0000001B     T    7978 7978
 VMFREE        1 00000000 0000000A     T    7954 7954
 VMGET         1 00000000 00000006     T    7947 7947
 WAR          12 0000000C FFFFFFFF A   #    1160 2879  2880M 2881  2882  2926  2927  2969  2970M 2971  2972  2990  2991
                                                 3030  3031M 3032  3033  3043  3044  3083  3084M 3085  3086  3104  3105
                                                 3144  3145M 3146  3156U 3160  3338  3339  3385  3386M 3387  3388  3788
                                                 3789  3835  3836M 3837  3847U 3851  4193  4194  4263  4264M 4265  4275U
                                                 4284  4549  4550  4598  4599M 4600  4610U 4614  4710  4711  4756  4757M
                                                 4758  4768U 4772  5065  5066  5111  5112M 5113  5123U 5127  5300  5301
                                                 5345  5346M 5347  5357U 5361  5571  5572M 5573  5583U 5587  5909  5910
                                                 5972  5973M 5974  5984U 5988  6194  6195  6257  6258M 6259  6269U 6273
                                                 6337  6338  6401  6402M 6403  6413U 6417  6526  6527  6567  6568M 6569
                                                 6579U 6583  6738  6739  6809  6810M 6811  6821U 6825  7729  7730  7777
                                                 7778M 7779  7789U 7793  7922  7923
 XACLAST       1 00000004 00000001 A   U    2703 7952
 XACLGOFF      1 00000000 00000001 A   U    2701 6638
 XACRMEM       1 00000004 00000001 A   U    2702 7141
 XACTIME       4 00000722 00000001     I    6242 6253U 7982
 XAHFP         4 00000000 FFFFFFC1     A    2726 6480M
 XAHPARM       4 00000008 FFFFFFC1     A    2728 7596M
 XAHRTN        4 00000004 FFFFFFC1     A    2727 7585M
 XALGOF        4 00000254 00000001     I    3820 3799  3831U
 XALGOFF       4 000007A8 00000001     I    6552 6547  6563U
 XALGOF16      2 00000248 00000001     H    3815 3814
 XAMECB        8 00000050 FFFFFFB6     D    6774 6994  7276
 XAMEM        88 00000000 FFFFFFB6     J    6781 6865  6906U 6916M 6916  7093  7227  7804U 7880
 XAMHALT      12 00000000 FFFFFFB6     X    6769 7567U
 XAMPARM      28 0000000C FFFFFFB6     X    6770 6922U 7028
 XAMSYSR       4 00000048 FFFFFFB6     A    6773 7258M 7833
 XAMTIME      17 00000034 FFFFFFB6     X    6772 6936U
 XAPCMD        4 00000008 FFFFFFC4     A    2627 3541  6643M 7146M
 XAPDLEN       4 00000008 FFFFFFC3     A    2655 4424  4425M 4442  4443M 7296M 7426
 XAPDLOC       4 00000004 FFFFFFC3     A    2654 4419  7291M
 XAPIXIT       4 0000040A 00000001     I    4583 4594U 7961
 XAPLEN        4 00000004 FFFFFFC4     A    2626 3732  4059
 XAPLINK       4 00000000 FFFFFFC4     A    2625 3519  3936  4921M
 XAPMEM       12 00000000 FFFFFFC3     J    2662 4304U 6771  6929U
 XAPRASB       4 00000014 FFFFFFC4     A    2630 3673  4000  7264M
 XAPRC         4 0000000C FFFFFFC4     A    2628 3630M 3960M 5270  5413M
 XAPRECB       4 00000018 FFFFFFC4     A    2631 3657  3984  5265  7281M
 XAPREQ        4 0000001C FFFFFFC4     A    2632 4304U 6929U
 XAPSLOC       4 00000000 FFFFFFC3     A    2653 4420  7286M
 XAPSYSR       4 00000010 FFFFFFC4     A    2629 3678  4005  5008  7257M
 XAPTIME      17 00000000 FFFFFFC2     J    2695 5598U 5608M 5608  5999U 6284U 6772  6936U 7011  7479  7525
 XAQHALT       4 00000762 00000001     I    6386 6397U 7984
 XARCFAIL      1 00000004 00000001 A   U    2708 4444
 XARCNIMP      1 0000001C 00000001 A   U    2714 3575
 XARCNOAS      1 00000018 00000001 A   U    2713 3959  4841  4896  5176  5231
 XARCOK        1 00000000 00000001 A   U    2707 4426  5015  5015  7357  7357
 XARCPOST      1 00000014 00000001 A   U    2712 5031
 XARCSETUP
               1 0000000C 00000001 A   U    2710 5878  6889  7249
 XARCTIME      1 00000010 00000001 A   U    2711 5408  7983
 XARMEM        4 0000080E 00000001     I    6794 6789  6805U
 XARMEMR       4 00000334 00000001     I    4248 3800  4259U
 XARMEMX       4 000009DE 00000001     I    7762 7580  7703  7773U
 XARMRST       2 000003B4 00000001     I    4441 7962
 XARTIME       4 000006A2 00000001     I    5957 5968U 7973
 XARTXIT       4 0000057C 00000001     I    5330 5341U 7970
1ASMASTER (ASMA00) (09:38) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   64
 XASEND        4 0000045A 00000001     I    4741 4736  4752U 7977
 XASHALT      12 00000000 FFFFFFC1     J    2735 6428U 6769  7567U 7630
 XASPACE       4 0000016E 00000001     I    3370 3312  3381U
 XASPARM      28 00000000 FFFFFFC4     J    2639 3492U 3909U 4295U 4783U 5138U 5393U 6579U 6626M 6626  6673  6770  6922U
                                                 7338  7400
 XASTFAIL      2 00000672 00000001     H    5840 5676B 5771B
 XASTIME       4 000005CC 00000001     I    5556 5567U 7979
 XATFLAG       1 00000010 FFFFFFC2     R    2682 2686
 XATFMSK     128 00000010 FFFFFFC2         2686 5729M 6070
 XATRTID       4 0000000C FFFFFFC2     A    2679 5823M 6313
 XATXMSK       4 00000008 FFFFFFC2     A    2678 5730M 6101
 XATXRID       4 00000000 FFFFFFC2     A    2676 5664M 6128
 XATXSID       4 00000004 FFFFFFC2     A    2677 5759M 5816  6015
 XAWAIT        4 00000506 00000001     I    5096 5091  5107U 7981
 XITDEL        1 00000000 00000018     T    7974 7974
 XITGST        1 00000000 00000013     T    7966 7966
 XITMASK       1 00000000 00000011     T    7964 7964
 XITMPI      128 00000000 FFFFFFD3         2151 4344M 4402M
 XITMRTC      32 00000000 FFFFFFD3         2161 5648M 5718M
 XITMSKD       4 00000000 FFFFFFD3     J    2225 4333U 4395U 5637U 5711U
 XITNEW        1 00000000 00000016     T    7971 7971
 XITPST        1 00000000 00000014     T    7967 7967
 XITSAREA     28 00000000 FFFFFFD1     J    2274 4625U 5372U
 XITSRPRM      4 00000000 FFFFFFD1     A    2264 4658
 XITSXPRM     16 0000000C FFFFFFD1     X    2267 5381U
 =A(-10)       4 00000A48 00000001     A    7949 3291
 =A(XACLAST)
               4 00000A54 00000001     A    7952 3569
 =A(XACTIME)
               4 00000ACC 00000001     A    7982 7490
 =A(XAPIXIT+X'80000000')
               4 00000A78 00000001     A    7961 4349
 =A(XAQHALT)
               4 00000AD4 00000001     A    7984 7641
 =A(XARCTIME)
               4 00000AD0 00000001     A    7983 7556
 =A(XARMRST+X'80000000')
               4 00000A7C 00000001     A    7962 4360
 =A(XARTIME)
               4 00000AA8 00000001     A    7973 5876  7536
 =A(XARTXIT+X'80000000')
               4 00000A9C 00000001     A    7970 5653
 =A(XASEND)
               4 00000AB8 00000001     A    7977 6684  7354
 =A(XASTIME)
               4 00000AC0 00000001     A    7979 7039
 =A(XAWAIT)
               4 00000AC8 00000001     A    7981 7416
 =CL4'AMST'
               4 00000A44 00000001     C    7948 3249  4890  5225
 =CL4'ASB'
               4 00000A98 00000001     C    7969 4835  5170
 =V(ACLOGOFF)
               4 00000A6C 00000001     V    7958 4162
 =V(ASEXIT)
               4 00000A70 00000001     V    7959 4167
 =V(ASLOCK)
               4 00000AB4 00000001     V    7976 6617
 =V(AWAIT)
1ASMASTER (ASMA00) (09:38) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   65
               4 00000A50 00000001     V    7951 3471  5268
 =V(ENQASTRM)
               4 00000A60 00000001     V    7955 4149
 =V(EXRADD)
               4 00000A80 00000001     V    7963 4363  5662
 =V(EXRDEL)
               4 00000A88 00000001     V    7965 4485  6168
 =V(EXRDONE)
               4 00000A94 00000001     V    7968 4689  5482
 =V(IOSASC)
               4 00000A30 00000001     V    7943 2907
 =V(LQEALL)
               4 00000A34 00000001     V    7944 2914
 =V(LQEDALL)
               4 00000A3C 00000001     V    7946 3092
 =V(NETLOGOF)
               4 00000A68 00000001     V    7957 4158
 =V(RTCAN)
               4 00000AB0 00000001     V    7975 6316
 =V(RTSET)
               4 00000AA4 00000001     V    7972 5821
 =V(SIGNAL)
               4 00000A58 00000001     V    7953 3681  4008  5011  5454
 =V(SYSRDEL)
               4 00000AD8 00000001     V    7985 7836
 =V(SYSRNEW)
               4 00000AC4 00000001     V    7980 7173
 =V(TCREATE)
               4 00000A4C 00000001     V    7950 3300
 =V(TERMINAS)
               4 00000A38 00000001     V    7945 2978
 =V(TERMLGOF)
               4 00000A64 00000001     V    7956 4154
 =V(TEXIT)
               4 00000ABC 00000001     V    7978 6712
 =V(VMFREE)
               4 00000A5C 00000001     V    7954 3747  4074  4142  7113  7247  7900
 =V(VMGET)
               4 00000A40 00000001     V    7947 3223  6874
 =V(XITDEL)
               4 00000AAC 00000001     V    7974 6052
 =V(XITGST)
               4 00000A8C 00000001     V    7966 4653
 =V(XITMASK)
               4 00000A84 00000001     V    7964 4405  4524  5721  6110
 =V(XITNEW)
               4 00000AA0 00000001     V    7971 5757
 =V(XITPST)
               4 00000A90 00000001     V    7967 4661
 =X'070C0000'
               4 00000A74 00000001     X    7960 4348  5652
 =Y(59*256+0)
               2 00000ADE 00000001     Y    7987 6871  7110  7244  7897
 =Y(63*256+0)
               2 00000ADC 00000001     Y    7986 3220  3744  4071  4139

1ASMASTER (ASMA00) (09:38) (22MAR04) Macro and Copy Code Source Summary                                                     Page   66
- Con Source                                        Volume    Members                        HLASM R4.0  2004/03/22 09.38
0     PRIMARY INPUT                                           CSECT    DROP     END      EX       LTORG    POP
                                                              PRINT    PUSH     START    USING
   L2 WYL.GG.ORV.MACLIB                             SYSB02    $LKPARM  ACALL    ASB      AWAIT    DISPPARM HEADER
                                                              IOSIPARM LCALL    MODULE   PEND     PMOV     PROC     PSET
                                                              PZERO    REG      REGCH    SIGNL    SIGPARM  SPLEVEL
                                                              TIMEPARM VCALL    VMFREE   VMGET    VMPARM   XASPARM
                                                              XITPARM
   L3 WYL.GG.SYS.MACLIB                             SYSB05    $BC      $BFLKUP  $BV      $CCLKUP  $CRS     $CSS     $L
                                                              $LA      $LBLAD   $LEXP    $LOR     $REL     $RGLKUP
                                                              $USLKUP  ASSERT   AUSING   BEGIN    CLEAR    CSECT
                                                              DEFCC    DROP     ELSE     END      EX       EXIT     FLAG
                                                              GEN      HIBAL    IDENT    IF       LABEL    LOOP     LT
                                                              LTORG    POP      PRINT    PUSH     RECORD   REGS     SET
                                                              START    STF      UNTIL    USING    WHILE    WITH

1         (ASMA00) (09:38) (22MAR04) General Purpose Register Cross Reference                                               Page   67
- Register  References (M=modified, B=branch, U=USING, D=DROP, N=index)                      HLASM R4.0  2004/03/22 09.38
0    0(0)     991U  992D 1338U 2864  2954  3015  3068  3129  3214M 3219  3225  3370  3457M 3462  3575M 3630  3694M 3694
             3820  3959M 3960  4021M 4021  4122M 4127  4248  4365  4408  4529M 4583  4741  4841M 4896M 4976M 4981  5024M
             5024  5031M 5096  5176M 5231M 5270M 5330  5408M 5413  5556  5664  5673M 5673  5730  5759  5768M 5768  5823
             5832M 5832  5878M 5889M 5889  5957  6242  6386  6552  6638M 6643  6673M 6678  6794  6865M 6870  6883  6889M
             6994M 6999  7011M 7016  7028M 7033  7048  7093M 7098  7115M 7141M 7146  7182  7227M 7232  7249M 7276M 7281
             7338M 7343  7366M 7366  7400M 7405  7427  7479M 7484  7525M 7530  7580M 7585  7630M 7635  7709M 7762  7880M
             7885  7937U 7938D
     1(1)     987U 2864  2926M 2954  2990M 3015  3043M 3068  3104M 3129  3338M 3370  3788M 3820  4193M 4248  4549M 4583
             4710M 4741  5065M 5096  5300M 5330  5556  5909M 5957  6194M 6242  6337M 6386  6526M 6552  6738M 6794  7729M
             7762  7922M
     2(2)     983U 2864  2926M 2954  2990M 3015  3043M 3068  3104M 3129  3338M 3370  3519M 3521  3788M 3820  3936M 3938
             4193M 4248  4413M 4414  4419M 4422M 4426M 4444M 4529  4549M 4583  4710M 4741  4914M 4923  5065M 5096  5300M
             5330  5556  5909M 5957  6194M 6242  6337M 6386  6526M 6552  6738M 6794  7048M 7115  7427M 7556  7709  7729M
             7762  7922M
     3(3)     979U 2864  2926M 2954  2990M 3015  3043M 3068  3104M 3129  3338M 3370  3520M 3521  3788M 3820  3937M 3938
             4193M 4248  4419M 4421  4422M 4423M 4423  4424M 4425  4441M 4441  4442M 4443  4549M 4583  4710M 4741  4922M
             4923  5065M 5096  5300M 5330  5556  5909M 5957  6194M 6242  6337M 6386  6526M 6552  6738M 6794  7729M 7762
             7922M
     4(4)     975U 2864  2926M 2954  2990M 3015  3043M 3068  3104M 3129  3338M 3370  3788M 3820  4193M 4248  4420M 4422M
             4549M 4583  4710M 4741  4907M 4921  4923M 5065M 5096  5300M 5330  5556  5909M 5957  6194M 6242  6337M 6386
             6526M 6552  6738M 6794  7729M 7762  7922M
     5(5)     971U 2864  2926M 2954  2990M 3015  3043M 3068  3104M 3129  3338M 3370  3616M 3622  3788M 3820  4193M 4248
             4421M 4422M 4549M 4583  4710M 4741  4907M 4923M 5065M 5096  5300M 5330  5556  5909M 5957  6194M 6242  6337M
             6386  6526M 6552  6738M 6794  7729M 7762  7922M
     6(6)     967U 2864  2926M 2954  2990M 3015  3043M 3068  3104M 3129  3338M 3370  3482M 3510M 3510  3521M 3615  3668
             3743  3788M 3820  3899M 3927M 3927  3938M 3995  4070  4193M 4248  4549M 4583  4710M 4741  5065M 5096  5300M
             5330  5556  5909M 5957  6015M 6016M 6016  6049  6128M 6129M 6129  6165  6194M 6242  6337M 6386  6473M 6480
             6481M 6526M 6552  6738M 6794  7729M 7762  7922M
     7(7)     963U 2864  2926M 2954  2990M 3015  3043M 3068  3104M 3129  3338M 3370  3482M 3520  3521M 3541M 3555M 3555
             3569  3616N 3788M 3820  3899M 3937  3938M 4193M 4248  4452M 4549M 4583  4710M 4741  4854M 4855M 4855  4865U
             5042U 5065M 5096  5189M 5190M 5190  5200U 5277U 5300M 5330  5556  5909M 5957  6194M 6242  6337M 6386  6526M
             6552  6738M 6794  7729M 7762  7922M
     8(8)     959U 2864  2904  2926M 2954  2990M 3015  3043M 3068  3104M 3129  3161M 3171U 3325U 3338M 3370  3389M 3399U
             3780U 3788M 3820  3852M 3862U 4180U 4193M 4248  4549M 4583  4710M 4741  4787M 4796M 4796  4803M 4817U 5003
             5047U 5065M 5096  5142M 5152U 5282U 5300M 5330  5383M 5393U 5451  5490U 5556  5909M 5957  6194M 6242  6337M
             6386  6418M 6428U 6481  6513U 6526M 6552  6598M 6608U 6720U 6738M 6794  7182M 7257  7258  7729M 7762  7922M
     9(9)     955U 2864  2926M 2954  2990M 3015  3043M 3068  3104M 3129  3225M 3235U 3265  3320U 3338M 3370  3403M 3413U
             3775U 3788M 3820  3866M 3876U 4138  4175U 4193M 4248  4285M 4295U 4536U 4549M 4583  4615M 4625U 4697U 4710M
             4741  4773M 4783U 4914  4992  5052U 5065M 5096  5128M 5138U 5287U 5300M 5330  5362M 5372U 5495U 5556  5588M
             5598U 5870  5896U 5909M 5957  5989M 5999U 6181U 6194M 6242  6274M 6284U 6324U 6337M 6386  6432M 6442U 6448M
             6455U 6466U 6508U 6526M 6552  6584M 6594U 6725U 6738M 6794  6883M 6906U 7109  7243  7596  7695  7716U 7729M
             7762  7794M 7804U 7896  7909U 7922M
    10(A)     951U 2864  2865M 2875U 2923U 2926M 2954  2955M 2965U 2987U 2990M 3015  3016M 3026U 3040U 3043M 3068  3069M
             3079U 3101U 3104M 3129  3130M 3140U 3335U 3338M 3370  3371M 3381U 3785U 3788M 3820  3821M 3831U 4190U 4193M
             4248  4249M 4259U 4546U 4549M 4583  4584M 4594U 4707U 4710M 4741  4742M 4752U 5062U 5065M 5096  5097M 5107U
             5297U 5300M 5330  5331M 5341U 5505U 5556  5557M 5567U 5906U 5909M 5957  5958M 5968U 6191U 6194M 6242  6243M
             6253U 6334U 6337M 6386  6387M 6397U 6523U 6526M 6552  6553M 6563U 6735U 6738M 6794  6795M 6805U 7726U 7729M
             7762  7763M 7773U 7919U 7922M
    11(B)     947U 2864  2926M 2954  2990M 3015  3043M 3068  3104M 3129  3338M 3370  3788M 3820  4193M 4248  4549M 4583
             4710M 4741  5065M 5096  5300M 5330  5556  5909M 5957  6194M 6242  6337M 6386  6526M 6552  6738M 6794  7729M
             7762  7922M
    12(C)     943U 2864  2879  2880M 2881  2882  2926M 2926  2927  2954  2969  2970M 2971  2972  2990M 2990  2991  3015
             3030  3031M 3032  3033  3043M 3043  3044  3068  3083  3084M 3085  3086  3104M 3104  3105  3129  3144  3145M
             3146  3156U 3160  3330U 3338M 3338  3339  3370  3385  3386M 3387  3388  3788M 3788  3789  3820  3835  3836M
             3837  3847U 3851  4185U 4193M 4193  4194  4248  4263  4264M 4265  4275U 4284  4541U 4549M 4549  4550  4583
1         (ASMA00) (09:38) (22MAR04) General Purpose Register Cross Reference                                               Page   68
             4598  4599M 4600  4610U 4614  4702U 4710M 4710  4711  4741  4756  4757M 4758  4768U 4772  5057U 5065M 5065
             5066  5096  5111  5112M 5113  5123U 5127  5292U 5300M 5300  5301  5330  5345  5346M 5347  5357U 5361  5500U
             5556  5571  5572M 5573  5583U 5587  5901U 5909M 5909  5910  5957  5972  5973M 5974  5984U 5988  6186U 6194M
             6194  6195  6242  6257  6258M 6259  6269U 6273  6329U 6337M 6337  6338  6386  6401  6402M 6403  6413U 6417
             6518U 6526M 6526  6527  6552  6567  6568M 6569  6579U 6583  6730U 6738M 6738  6739  6794  6809  6810M 6811
             6821U 6825  7721U 7729M 7729  7730  7762  7777  7778M 7779  7789U 7793  7914U 7922M 7922  7923
    13(D)     939U 2864  2864  2879  2880  2882M 2895U 2926M 2934U 2954  2954  2969  2970  2972M 2990M 3015  3015  3030
             3031  3033M 3043M 3068  3068  3083  3084  3086M 3104M 3129  3129  3144  3145  3160M 3194U 3278U 3281U 3338M
             3346U 3370  3370  3385  3386  3388M 3437U 3593U 3596U 3641U 3644U 3716U 3719U 3788M 3796U 3820  3820  3835
             3836  3851M 3971U 4043U 4046U 4193M 4201U 4248  4248  4263  4264  4284M 4319U 4378U 4381U 4466U 4469U 4499U
             4502U 4549M 4557U 4583  4583  4598  4599  4614M 4642U 4675U 4678U 4710M 4718U 4741  4741  4756  4757  4772M
             4956U 5065M 5073U 5096  5096  5111  5112  5127M 5252U 5300M 5308U 5330  5330  5345  5346  5361M 5427U 5468U
             5471U 5513U 5556  5556  5571  5572  5587M 5623U 5694U 5697U 5743U 5746U 5789U 5792U 5848U 5851U 5909M 5917U
             5957  5957  5972  5973  5988M 6031U 6085U 6088U 6144U 6147U 6194M 6202U 6242  6242  6257  6258  6273M 6300U
             6337M 6345U 6386  6386  6401  6402  6417M 6526M 6552  6552  6567  6568  6583M 6653U 6698U 6701U 6738M 6746U
             6794  6794  6809  6810  6825M 6845U 6966U 6969U 7070U 7073U 7159U 7162U 7204U 7207U 7315U 7318U 7456U 7459U
             7502U 7505U 7607U 7610U 7673U 7676U 7729M 7737U 7762  7762  7777  7778  7793M 7820U 7857U 7860U 7922M 7930U
    14(E)     935U 2864  2908M 2915M 2926M 2928B 2954  2979M 2990M 2992B 3015  3043M 3045B 3068  3093M 3104M 3106B 3129
             3224M 3301M 3313M 3338M 3340B 3370  3472M 3623M 3682M 3748M 3788M 3790B 3820  4009M 4075M 4143M 4150M 4155M
             4159M 4163M 4168M 4193M 4195B 4248  4364M 4406M 4486M 4525M 4549M 4551B 4583  4654M 4662M 4690M 4710M 4712B
             4741  5012M 5065M 5067B 5096  5269M 5300M 5302B 5330  5455M 5483M 5556  5663M 5722M 5758M 5822M 5877M 5909M
             5911B 5957  6053M 6111M 6169M 6194M 6196B 6242  6317M 6337M 6339B 6386  6526M 6528B 6552  6618M 6685M 6713M
             6738M 6740B 6794  6875M 7040M 7114M 7174M 7248M 7355M 7417M 7491M 7537M 7642M 7704M 7729M 7731B 7762  7837M
             7901M 7922M 7924B
    15(F)     931U 2864  2865  2907M 2908B 2914M 2915B 2926M 2954  2955  2978M 2979B 2990M 3015  3016  3043M 3068  3069
             3092M 3093B 3104M 3129  3130  3223M 3224B 3300M 3301B 3312M 3313B 3338M 3370  3371  3471M 3472B 3622M 3623B
             3681M 3682B 3747M 3748B 3788M 3820  3821  4008M 4009B 4074M 4075B 4142M 4143B 4149M 4150B 4154M 4155B 4158M
             4159B 4162M 4163B 4167M 4168B 4193M 4248  4249  4363M 4364B 4405M 4406B 4485M 4486B 4524M 4525B 4549M 4583
             4584  4653M 4654B 4661M 4662B 4689M 4690B 4710M 4741  4742  5011M 5012B 5065M 5096  5097  5268M 5269B 5300M
             5330  5331  5454M 5455B 5482M 5483B 5556  5557  5662M 5663B 5721M 5722B 5757M 5758B 5821M 5822B 5876M 5877B
             5909M 5957  5958  6052M 6053B 6110M 6111B 6168M 6169B 6194M 6242  6243  6316M 6317B 6337M 6386  6387  6526M
             6552  6553  6617M 6618B 6684M 6685B 6712M 6713B 6738M 6794  6795  6874M 6875B 7039M 7040B 7113M 7114B 7173M
             7174B 7247M 7248B 7354M 7355B 7416M 7417B 7490M 7491B 7536M 7537B 7641M 7642B 7703M 7704B 7729M 7762  7763
             7836M 7837B 7900M 7901B 7922M

1ASMASTER (ASMA00) (09:38) (22MAR04) Diagnostic Cross Reference and Assembler Summary                                       Page   69
-                                                                                            HLASM R4.0  2004/03/22 09.38
0     No Statements Flagged in this Assembly
 HIGH LEVEL ASSEMBLER, 5696-234, RELEASE 4.0, PTF UQ57391
0SYSTEM: OS/390 02.10.00            JOBNAME: PJG#AMST    STEPNAME: ASM        PROCSTEP: (NOPROC)
0Datasets Allocated for this Assembly
  Con DDname   Dataset Name                                 Volume  Member
   P1 SYSIN    SYS04082.T093821.RA000.PJG#AMST.INPUT.H01    SCR101
   L1 SYSLIB   SYS3.DUMMYMAC                                SYSB02
   L2          WYL.GG.ORV.MACLIB                            SYSB02
   L3          WYL.GG.SYS.MACLIB                            SYSB05
      SYSLIN   WYL.GG.PJG.OBJ                               SYSB05  ASMASTER
      SYSPRINT SYS04082.T093821.RA000.PJG#AMST.PRINT.H01    SCR101
      SYSTERM  GG$PJG.PJG#AMST.JOB05928.D0000103.?

    7812K allocated to Buffer Pool,         1189K would be required for this to be an In-Storage Assembly
     871 Primary Input Records Read         4517 Library Records Read                  0 Work File Reads
       0 ASMAOPT Records Read               4797 Primary Print Records Written         0 Work File Writes
      75 Punch Records Written                 0 ADATA Records Written
0Assembly Start Time: 09.38.23 Stop Time: 09.38.26 Processor Time: 00.00.01.5288
 Return Code 000
