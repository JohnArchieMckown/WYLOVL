1                        J E S 2  J O B  L O G  --  S Y S T E M  S Y S B  --  N O D E  R L G
0
 09.41.43 JOB05946 ---- MONDAY,    22 MAR 2004 ----
 09.41.43 JOB05946  ICH70001I GG$PJG   LAST ACCESS AT 09:41:32 ON MONDAY, MARCH 22, 2004
 09.41.43 JOB05946  $HASP373 PJG#MEM  STARTED - INIT 2    - CLASS E - SYS SYSB
 09.41.43 JOB05946  ***  HCMD      STEP $$QUIET
 09.41.43 JOB05946  PURGE * Q=OUTPUT MULTIPLE
 09.41.43 JOB05946  JOB PJG#MEM NOT IN OUTPUT QUEUE
 09.41.45 JOB05946  PJG#MEM .$$QUIET .         RC=0008 TapeIO=0000 DiskIO=0000 CPU=  .01s Elapsed=03.93s
 09.41.45 JOB05946  PJG#MEM .$CND    .         RC=Zero TapeIO=0000 DiskIO=0002 CPU=  .01s Elapsed=05.06s
 09.41.45 JOB05946  PJG#MEM .$UNP    .         RC=Zero TapeIO=0000 DiskIO=0012 CPU=  .05s Elapsed=05.25s
 09.41.49 JOB05946  PJG#MEM .ASM     .         RC=Zero TapeIO=0000 DiskIO=0268 CPU= 1.21s Elapsed=05.58s
 09.41.50 JOB05946  PJG#MEM .$EDIT   .         RC=Zero TapeIO=0000 DiskIO=0066 CPU=  .26s Elapsed=09.84s
 09.41.50 JOB05946  PJG#MEM  Ended.  Name=Module: MEMSERV                Total CPU= 1.54s Elapsed=03.93s
 09.41.50 JOB05946
 09.41.50 JOB05946  Execution charges   Priority=Standard   Block=Day
 09.41.50 JOB05946
 09.41.50 JOB05946  CPU Usage          27.93          $17.31   Standard Processing Unit Equivalent
 09.41.50 JOB05946                                   =======
 09.41.50 JOB05946                                    $17.31   Total Job execution charge
 09.41.50 JOB05946
 09.41.50 JOB05946  See back separator page for print charges
 09.41.50 JOB05946
 09.41.50 JOB05946  $HASP395 PJG#MEM  ENDED  ASM=0
1        1 //PJG#MEM  JOB PJG$GG,'Module: MEMSERV',TIME=1,MSGCLASS=C               JOB05946
           /*JOBPARM HOLD=OUTPUT,LINES=50,CHARS=TN15,NOTIFY=YES
         2 //       EXEC PURGEOLD
         3 XXPURGEOLD PROC
           XX*
           XX* This proc is maintained by Jim Stosick
           XX*
         4 XX$$QUIET  EXEC PGM=HCMDX,PARM='PURGE * Q=OUTPUT MULTIPLE',
           XX         ACCT=(PURGEOLD,SYS3)
         5 //$CND   EXEC PGM=BILBO,REGION=512K,PARM='RECS=100'
         6 //STEPLIB  DD DSN=WYL.GG.ORV.LINKLIB,DISP=SHR
         7 //SYSPRINT DD SYSOUT=$
         8 //SYSUT1   DD DSN=WYL.GG.PJG.OBJ,DISP=OLD
         9 //SYSUT2   DD DSN=WYL.GG.PJG.OBJ,DISP=OLD
        10 //SYSIN    DD DUMMY
        11 //$UNP   EXEC PGM=WUNPRESS,PARM='NUM'
        12 //SYSPRINT DD SYSOUT=$
        13 //SYSUT1   DD DSN=WYL.GG.ORV.SOURCE(MEMSERV),DISP=SHR
        14 //SYSUT2   DD DSN=&&INPUT,DISP=(,PASS),UNIT=SYSDA,
           //            SPACE=(TRK,(25,25),RLSE),DCB=CARD
        15 //ASM    EXEC PGM=ASMA90,REGION=8M,COND=(0,NE,$UNP),
           //            PARM=('SYSPARM(MEMSERV),TERM,LANG(EN),OBJ',
           //          'LC(32500),XREF(SHORT),NODECK,NORLD,NODX,NOUS')
           //*STEPLIB  DD DSN=SYS1.SASMMOD1,DISP=SHR
        16 //SYSLIB   DD DSN=SYS3.DUMMYMAC,DISP=SHR,DCB=BLKSIZE=27920
        17 //         DD DSN=WYL.GG.ORV.MACLIB,DISP=SHR
        18 //         DD DSN=WYL.GG.SYS.MACLIB,DISP=SHR
        19 //         DD DSN=SYS1.MACLIB,DISP=SHR
        20 //SYSUT1   DD DSN=&&SYSUT1,UNIT=VIO,DISP=(,DELETE),
           //            SPACE=(4088,(500,250),,CONTIG,ROUND)
        21 //SYSTERM  DD SYSOUT=$
        22 //SYSPRINT DD DSN=&&PRINT,UNIT=SYSDA,DISP=(,PASS),
           //            SPACE=(6650,(250,250),RLSE),
           //            DCB=(BLKSIZE=6650,LRECL=133,RECFM=FB)
        23 //SYSLIN   DD DSN=WYL.GG.PJG.OBJ(MEMSERV),DISP=OLD
        24 //SYSUDUMP DD SYSOUT=A
        25 //SYSIN    DD DSN=&&INPUT,DISP=(OLD,DELETE)
        26 //$EDIT  EXEC PGM=ASMEDIT,REGION=1M,
           //            COND=EVEN,PARM='STMT,DATA'
        27 //STEPLIB  DD DSN=WYL.GG.SYS.LINKLIB,DISP=SHR
        28 //ASMOUT   DD DSN=&&PRINT,DISP=(OLD,DELETE)
        29 //SYSPRINT DD SYSOUT=A
        30 //SYSUDUMP DD SYSOUT=A
1 STMT NO. MESSAGE
         2 IEFC001I PROCEDURE PURGEOLD WAS EXPANDED USING SYSTEM LIBRARY SYS3.BETAPROC
        14 IGD01010I STORCLAS= TEMP STORGROUP =
        14 IGD01010I STORGRP=VIO ASSIGNED.
        20 IGD01010I STORCLAS= TEMP STORGROUP =
        20 IGD01010I STORGRP=VIO ASSIGNED.
        22 IGD01010I STORCLAS= TEMP STORGROUP =
        22 IGD01010I STORGRP=VIO ASSIGNED.
 ICH70001I GG$PJG   LAST ACCESS AT 09:41:32 ON MONDAY, MARCH 22, 2004
 IEF142I PJG#MEM $$QUIET - STEP WAS EXECUTED - COND CODE 0008
 *********************************************************************************
 *   PJG#MEM /$$QUIET /                    Return Code      0008                 *
 *   Region used      260K (16K user + 244K system)                              *
 *   Extended region  9352K (4K user + 9348K system)                             *
 *                                                                               *
 *   Paging              In      Out                                             *
 *   Private <-> Aux      0        0       CPU time (TCB)   00:00:00.01          *
 *   Private <-> Exp      0        0       CPU time (SRB)   00:00:00.00          *
 *   VIO                  0        0       Elapsed time    920:46:09.03          *
 *   Common               0      ---                                             *
 *                                                                               *
 *                                                                               *
 *   CPU Usage          0.18         $0.11  Standard Processing Unit Equivalent  *
 *                                   $0.11  Total Step execution charge          *
 *                                                                               *
 *    I/O count  DDname   Type Addr           I/O count  DDname   Type Addr      *
 *                         *** No I/O for this step ***                          *
 *********************************************************************************
 IEF373I STEP/$$QUIET /START 2004082.0941
 IEF374I STEP/$$QUIET /STOP  2004082.0941 CPU    0MIN 00.01SEC SRB    0MIN 00.00SEC VIRT    16K SYS   244K EXT       4K SYS    9348K
 IEF236I ALLOC. FOR PJG#MEM $CND
 IEF237I 0401 ALLOCATED TO STEPLIB
 IEF237I JES2 ALLOCATED TO SYSPRINT
 IEF237I 04DC ALLOCATED TO SYSUT1
 IEF237I 04DC ALLOCATED TO SYSUT2
 IEF237I DMY  ALLOCATED TO SYSIN
 IEF142I PJG#MEM $CND - STEP WAS EXECUTED - COND CODE 0000
 IEF285I   WYL.GG.ORV.LINKLIB                           KEPT
 IEF285I   VOL SER NOS= SYSB01.
 IEF285I   GG$PJG.PJG#MEM.JOB05946.D0000101.?           SYSOUT
 IEF285I   WYL.GG.PJG.OBJ                               KEPT
 IEF285I   VOL SER NOS= SYSB05.
 IEF285I   WYL.GG.PJG.OBJ                               KEPT
 IEF285I   VOL SER NOS= SYSB05.
 *********************************************************************************
 *   PJG#MEM /$CND    /                    Return Code      Zero                 *
 *   Region used      280K (16K user + 264K system)                              *
 *   Extended region  9392K (4K user + 9388K system)                             *
 *                                                                               *
 *   Paging              In      Out                                             *
 *   Private <-> Aux      0        0       CPU time (TCB)   00:00:00.01          *
 *   Private <-> Exp      0        0       CPU time (SRB)   00:00:00.00          *
 *   VIO                  0        0       Elapsed time    920:46:07.90          *
 *   Common               0      ---                                             *
 *                                                                               *
 *                                                                               *
 *   CPU Usage          0.18         $0.11  Standard Processing Unit Equivalent  *
 *                                   $0.11  Total Step execution charge          *
 *                                                                               *
 *    I/O count  DDname   Type Addr           I/O count  DDname   Type Addr      *
 *            2  STEPLIB  Disk 0401                   0  SYSPRINT      ----      *
 *            0  SYSUT1   Disk 04DC                   0  SYSUT2   Disk 04DC      *
 *            0  SYSIN         ----                                              *
 *********************************************************************************
 IEF373I STEP/$CND    /START 2004082.0941
 IEF374I STEP/$CND    /STOP  2004082.0941 CPU    0MIN 00.01SEC SRB    0MIN 00.00SEC VIRT    16K SYS   264K EXT       4K SYS    9388K
 IEF236I ALLOC. FOR PJG#MEM $UNP
 IEF237I JES2 ALLOCATED TO SYSPRINT
 IEF237I 0402 ALLOCATED TO SYSUT1
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT2  )
         DSN (SYS04082.T094143.RA000.PJG#MEM.INPUT.H01    )
         STORCLAS (TEMP) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= SCR100
 IEF142I PJG#MEM $UNP - STEP WAS EXECUTED - COND CODE 0000
 IEF285I   GG$PJG.PJG#MEM.JOB05946.D0000102.?           SYSOUT
 IEF285I   WYL.GG.ORV.SOURCE                            KEPT
 IEF285I   VOL SER NOS= SYSB02.
 IGD106I SYS04082.T094143.RA000.PJG#MEM.INPUT.H01     PASSED,    DDNAME=SYSUT2
 *********************************************************************************
 *   PJG#MEM /$UNP    /                    Return Code      Zero                 *
 *   Region used      380K (108K user + 272K system)                             *
 *   Extended region  9468K (4K user + 9464K system)                             *
 *                                                                               *
 *   Paging              In      Out                                             *
 *   Private <-> Aux      0        0       CPU time (TCB)   00:00:00.05          *
 *   Private <-> Exp      0        0       CPU time (SRB)   00:00:00.00          *
 *   VIO                  0        0       Elapsed time    920:46:07.71          *
 *   Common               0      ---                                             *
 *                                                                               *
 *                                                                               *
 *   CPU Usage          0.93         $0.57  Standard Processing Unit Equivalent  *
 *                                   $0.57  Total Step execution charge          *
 *                                                                               *
 *    I/O count  DDname   Type Addr           I/O count  DDname   Type Addr      *
 *            0  SYSPRINT      ----                   2  SYSUT1   Disk 0402      *
 *           10  SYSUT2   Disk 038B                                              *
 *********************************************************************************
 IEF373I STEP/$UNP    /START 2004082.0941
 IEF374I STEP/$UNP    /STOP  2004082.0941 CPU    0MIN 00.05SEC SRB    0MIN 00.00SEC VIRT   108K SYS   272K EXT       4K SYS    9464K
 IEF236I ALLOC. FOR PJG#MEM ASM
 IEF237I 0402 ALLOCATED TO SYSLIB
 IEF237I 0402 ALLOCATED TO
 IEF237I 04DC ALLOCATED TO
 IEF237I 04A0 ALLOCATED TO
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT1  )
         DSN (SYS04082.T094143.RA000.PJG#MEM.SYSUT1.H01   )
         STORCLAS (TEMP) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= VIO
 IEF237I JES2 ALLOCATED TO SYSTERM
 IGD101I SMS ALLOCATED TO DDNAME (SYSPRINT)
         DSN (SYS04082.T094143.RA000.PJG#MEM.PRINT.H01    )
         STORCLAS (TEMP) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= SCR101
 IEF237I 04DC ALLOCATED TO SYSLIN
 IEF237I JES2 ALLOCATED TO SYSUDUMP
 IGD103I SMS ALLOCATED TO DDNAME SYSIN
 IEF142I PJG#MEM ASM - STEP WAS EXECUTED - COND CODE 0000
 IEF285I   SYS3.DUMMYMAC                                KEPT
 IEF285I   VOL SER NOS= SYSB02.
 IEF285I   WYL.GG.ORV.MACLIB                            KEPT
 IEF285I   VOL SER NOS= SYSB02.
 IEF285I   WYL.GG.SYS.MACLIB                            KEPT
 IEF285I   VOL SER NOS= SYSB05.
 IEF285I   SYS1.MACLIB                                  KEPT
 IEF285I   VOL SER NOS= MVSBR9.
 IGD105I SYS04082.T094143.RA000.PJG#MEM.SYSUT1.H01    DELETED,   DDNAME=SYSUT1
 IEF285I   GG$PJG.PJG#MEM.JOB05946.D0000103.?           SYSOUT
 IGD106I SYS04082.T094143.RA000.PJG#MEM.PRINT.H01     PASSED,    DDNAME=SYSPRINT
 IEF285I   WYL.GG.PJG.OBJ                               KEPT
 IEF285I   VOL SER NOS= SYSB05.
 IEF285I   GG$PJG.PJG#MEM.JOB05946.D0000104.?           SYSOUT
 IGD105I SYS04082.T094143.RA000.PJG#MEM.INPUT.H01     DELETED,   DDNAME=SYSIN
 *********************************************************************************
 *   PJG#MEM /ASM     /                    Return Code      Zero                 *
 *   Region used      8484K (8192K user + 292K system)                           *
 *   Extended region  9952K (412K user + 9540K system)                           *
 *                                                                               *
 *   Paging              In      Out                                             *
 *   Private <-> Aux      0        0       CPU time (TCB)   00:00:01.17          *
 *   Private <-> Exp      0        0       CPU time (SRB)   00:00:00.04          *
 *   VIO                  0        0       Elapsed time    920:46:07.38          *
 *   Common               0      ---                                             *
 *                                                                               *
 *                                                                               *
 *   CPU Usage         21.93        $13.59  Standard Processing Unit Equivalent  *
 *                                  $13.59  Total Step execution charge          *
 *                                                                               *
 *    I/O count  DDname   Type Addr           I/O count  DDname   Type Addr      *
 *           54  SYSLIB   Disk 0402                   0  SYSLIB   Disk 0402      *
 *          128  SYSLIB   Disk 04DC                  10  SYSLIB   Disk 04A0      *
 *            0  SYSUT1   VIO  ----                   0  SYSTERM       ----      *
 *           63  SYSPRINT Disk 04E3                   2  SYSLIN   Disk 04DC      *
 *            0  SYSUDUMP      ----                  11  SYSIN    Disk 038B      *
 *********************************************************************************
 IEF373I STEP/ASM     /START 2004082.0941
 IEF374I STEP/ASM     /STOP  2004082.0941 CPU    0MIN 01.17SEC SRB    0MIN 00.04SEC VIRT  8192K SYS   292K EXT     412K SYS    9540K
 IEF236I ALLOC. FOR PJG#MEM $EDIT
 IEF237I 0402 ALLOCATED TO STEPLIB
 IGD103I SMS ALLOCATED TO DDNAME ASMOUT
 IEF237I JES2 ALLOCATED TO SYSPRINT
 IEF237I JES2 ALLOCATED TO SYSUDUMP
 IEF142I PJG#MEM $EDIT - STEP WAS EXECUTED - COND CODE 0000
 IEF285I   WYL.GG.SYS.LINKLIB                           KEPT
 IEF285I   VOL SER NOS= SYSB02.
 IGD105I SYS04082.T094143.RA000.PJG#MEM.PRINT.H01     DELETED,   DDNAME=ASMOUT
 IEF285I   GG$PJG.PJG#MEM.JOB05946.D0000105.?           SYSOUT
 IEF285I   GG$PJG.PJG#MEM.JOB05946.D0000106.?           SYSOUT
 *********************************************************************************
 *   PJG#MEM /$EDIT   /                    Return Code      Zero                 *
 *   Region used      388K (116K user + 272K system)                             *
 *   Extended region  9468K (4K user + 9464K system)                             *
 *                                                                               *
 *   Paging              In      Out                                             *
 *   Private <-> Aux      0        0       CPU time (TCB)   00:00:00.25          *
 *   Private <-> Exp      0        0       CPU time (SRB)   00:00:00.01          *
 *   VIO                  0        0       Elapsed time    920:46:03.12          *
 *   Common               0      ---                                             *
 *                                                                               *
 *                                                                               *
 *   CPU Usage          4.68         $2.90  Standard Processing Unit Equivalent  *
 *                                   $2.90  Total Step execution charge          *
 *                                                                               *
 *    I/O count  DDname   Type Addr           I/O count  DDname   Type Addr      *
 *            2  STEPLIB  Disk 0402                  64  ASMOUT   Disk 04E3      *
 *            0  SYSPRINT      ----                   0  SYSUDUMP      ----      *
 *********************************************************************************
 IEF373I STEP/$EDIT   /START 2004082.0941
 IEF374I STEP/$EDIT   /STOP  2004082.0941 CPU    0MIN 00.25SEC SRB    0MIN 00.01SEC VIRT   116K SYS   272K EXT       4K SYS    9464K
 *********************************************************************************
 *                                                                               *
 *                      S t a n f o r d   U n i v e r s i t y                    *
 *                                                                               *
 *                              *** Job Summary ***                              *
 *                                                                               *
 *   System Id      SYSB                   Input time     09:38:22  Mar 22, 2004 *
 *                                                                               *
 *   System Release SP6.1.0                Start time     09:41:43  Mar 22, 2004 *
 *                                                                               *
 *   Job name       PJG#MEM                Stop  time     00:00:00  Mar 22, 2004 *
 *                                                                               *
 *   Account        PJG$GG                 Elapsed time  920:46:09.03            *
 *                                                                               *
 *   User Name      Module: MEMSERV        CPU time       00:00:01.49            *
 *                                                                               *
 *   Job class      E                      SRB Time       00:00:00.05            *
 *                                                                               *
 *********************************************************************************
 IEF375I  JOB/PJG#MEM /START 2004082.0941
 IEF376I  JOB/PJG#MEM /STOP  2004082.0941 CPU    0MIN 01.49SEC SRB    0MIN 00.05SEC
1Data set successfully converted from EDIT to FB format
1Assembler Done MEMSERV No Statements Flagged
1         High Level Assembler Option Summary                   (PTF UQ57391)                                               Page    1
-                                                                                            HLASM R4.0  2004/03/22 09.41
0  No Overriding ASMAOPT Parameters
   Overriding Parameters-  SYSPARM(MEMSERV),TERM,LANG(EN),OBJ,LC(32500),XREF(SHORT),NODECK,NORLD,NODX,NOUS
   No Process Statements


   Options for this Assembly
0  NOADATA
     ALIGN
   NOASA
     BATCH
     CODEPAGE(047C)
   NOCOMPAT
   NODBCS
 3 NODECK
 3 NODXREF
     ESD
   NOEXIT
     FLAG(0,ALIGN,CONT,NOIMPLEN,NOPAGE0,PUSH,RECORD,NOSUBSTR,USING0)
   NOFOLD
   NOGOFF
   NOINFO
 3   LANGUAGE(EN)
   NOLIBMAC
 3   LINECOUNT(32500)
     LIST(121)
     MXREF(SOURCE)
 3   OBJECT
     OPTABLE(UNI,NOLIST)
   NOPCONTROL
   NOPESTOP
   NOPROFILE
   NORA2
   NORENT
 3 NORLD
     RXREF
     SIZE(MAX)
 3   SYSPARM(MEMSERV)
 3   TERM(WIDE)
   NOTEST
     THREAD
   NOTRANSLATE
 3 NOUSING
 3   XREF(SHORT)

   No Overriding DD Names

1MEMSERV  External Symbol Dictionary                                                                                        Page    2
-Symbol   Type   Id     Address  Length     LD ID  Flags Alias-of                            HLASM R4.0  2004/03/22 09.41
0MEMSERV   SD 00000001 00000000 00000908             06
 MEMS00    LD          00000000           00000001
 MEMINIT   LD          00000022           00000001
 MEMGET    LD          000001AA           00000001
 MEMFREE   LD          00000550           00000001
 POOLGET   ER 00000002
 LOCKCRE   ER 00000003
 LOCKOB    ER 00000004
 LOCKREL   ER 00000005
 POOLFREE  ER 00000006

1MEMSERV  ORVYL's Memory Services                                                                                           Page    3
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement                    (Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                      2       2.              COPY  HEADER
                                       3             =*********************************************************************
                                       4             =*                                                                   *
                                       5             =*                                                                   *
                                       6             =*                          M P - O R V Y L                          *
                                       7             =*                                                                   *
                                       8             =*       ORVYL - Release 5.0 - Class I - Stanford Proprietary        *
                                       9             =*                                                                   *
                                      10             =*                                                                   *
                                      11             =*********************************************************************
-
-                                     13             =         SPLEVEL SET=2
                                      16             =         HIBAL ASSOC=YES
-
                                     998             =*
                                     999             =* REGISTER CONVENTIONS (USE ONLY THE SYMBOLS)
                                    1000             =*
                                    1001             =*                     CLASS  USAGE
                                    1002             =*                     -----  -----------------------------
                                    1003             =RVR      REG   0        1    RETURN VALUE REGISTER
                                    1015             =RS       REG   1        *    SCRATCH
                                    1027             =RA       REG   2        *    SCRATCH
                                    1039             =RB       REG   3        *    SCRATCH
                                    1051             =RJ       REG   4        *    SCRATCH
                                    1063             =RK       REG   5        *    SCRATCH
                                    1075             =RX       REG   6        *    SCRATCH
                                    1087             =RY       REG   7        *    SCRATCH
                                    1099             =RM       REG   8        *    SCRATCH
                                    1111             =RN       REG   9        *    SCRATCH (In Guest)
                                    1123             =RTCBR    REG   9        -    POINTER TO THE RTCB (In Host)
                                    1135             =BR       REG   10       -    FIRST BASE REGISTER
                                    1147             =BRR      REG   11       -    SECOND BASE REGISTER
                                    1159             =WAR      REG   12       -    WORK AREA POINTER
                                    1171             =SPR      REG   13       -    STACK TOP POINTER
                                    1183             =RAR      REG   14       1    RETURN ADDRESS REGISTER
                                    1195             =EPAR     REG   15       1    ENTRY POINT ADDRESS
                                    1207             =*
                                    1208             =*      CLASS   MEANING
                                    1209             =*      -----   --------------------------------------------------
                                    1210             =*        *     Register may be freely used for scratch
                                    1211             =*        -     Register may not be used
                                    1212             =*        1     Available but may change on subroutine calls
                                    1213             =*
1MEMSERV  ORVYL's Memory Services                                                                                           Page    4
0D-Loc  Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+_____  ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   1215       3.     CTL      REG   RS
                                    1227       4.     LAS      REG   RA
                                    1239       5.     CUR      REG   RB
                                    1251       6.     SCUR     REG   RJ
                                    1263       7.     NEW      REG   RK
                                    1275       8.     SNEW     REG   RVR
-000000                00000 00908  1288      10.     MEMSERV  MODULE
                                    1298             +*
                                    1299    02-IDENT +         ENTRY MEMS00
                                    1300             +
 000000 14D4C5D4E2F0F06B            1301    02-IDENT +MEMS00   DC    AL1(20),C'MEMS00,22MAR04,09:41'
                                    1302             +*
-000015                00000 00908  1305      12.     MEMSERV  CSECT
-                                   1308      14.              GBLB  &SIMU
                                    1309      15.     &SIMU    SETB  0                       THIS IS NOT A SIMULATION.
-                                   1311      17.     CPAGE    EQU   4096                    CONSTANT SIZE OF PAGE
                                    1312      18.     CMAX     EQU   4                       DEFAULT MAXIMUM PAGE SIZE/BLOCK
                                    1313      19.     CINC     EQU   1                       DEF GETMAIN INCREMENT (PAGES)
                                    1314      20.     NIL      EQU   -1                      END OF LIST POINTER
                                    1315      21.     LLIMIT   EQU   32,,C'N'                MINIMUM SIZE OF ALLOC BLOCK
                                    1316      22.     LPLIMIT  EQU   4096,,C'N'              MINIMUM SIZE FOR PAGE BNDRY
                                    1317      23.     PGALIGN  EQU   X'7FFFF000'             MASK TO ALIGN TO A PAGE BNDRY
                                    1318      24.     NOHIBYT  EQU   X'7FFFFFFF'             MASK OUT HIGH ORDER BIT
                                    1319      25.     USERR    EQU   4                       ERROR: OVER POOL-SIZE LIMIT
                                    1320      26.     MEMERR   EQU   8                       ERROR: GETTING-MEMORY CODE
                                    1321      27.     FIXERR   EQU   12                      ERROR: FIXING-MEMORY CODE
                                    1322      28.     MINSIZER EQU   16                      ERROR: INVALID MIN ALLOC SIZE
                                    1323      29.     NOXSIZER EQU   20                      ERROR: SIZ OF NO-PAGE-X REQ > 4K
                                    1324      30.     MEMNINIT EQU   24                      ERROR: NOT INITIALIZED
                                    1325      31.     FRELENER EQU   28                      ERROR: LENGTH ON RELEASE
                                    1326      32.     FREADDER EQU   32                      ERROR: ADDRESS ON RELEASE
                                    1327      33.     FREOVER  EQU   36                      ERROR: REL OVERLAPS AVAIL MEM
1MEMSERV  (MEMS00) (09:41) (22MAR04) ORVYL's Memory Services                                                                Page    5
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   1329      35.              MACRO
                                    1330      36.     *********************************************************************
                                    1331      37.     *        ROUND THE VALUE IN REGISTER &REG UP TO THE NEXT MULTIPLE   *
                                    1332      38.     * OF &VAL.  &VAL MUST BE A POWER OF TWO                             *
                                    1333      39.     *********************************************************************
                                    1334      40.              RNDUP &REG,&VALLOC,&TREG=
                                    1335      41.     *        VPUSH &TREG,,*
                                    1336      42.              A     &REG,&VALLOC            ADD TO FORCE ROUND-UP
                                    1337      43.              DECR  &REG                    |
                                    1338      44.              L     &TREG,&VALLOC           LOAD POWER OF 2 MASK
                                    1339      45.              LCR   &TREG,&TREG             |
                                    1340      46.              NR    &REG,&TREG              ROUND UP
                                    1341      47.     *        VPOP  &TREG,,*
                                    1342      48.              MEND
1MEMSERV  (MEMS00) (09:41) (22MAR04) ORVYL's Memory Services                                                                Page    6
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   1344      50.              COPY  RTCB
                                    1345             =*******************************************************************
                                    1346             =*                                                                 *
                                    1347             =*      RTCB --  Information about each functional task.           *
                                    1348             =*                                                                 *
                                    1349             =*******************************************************************
0000000                00000 000B0  1351             =RTCB     RECORD    BEGIN
 000000 D9E3C3C2                    1359  1          =           DC    CL4'RTCB'     Control block id
                                    1360  1          =*
                                    1361  1          =* Global information
                                    1362  1          =*
 000004                             1363  1          =RTCBCBAT   DS    A             Address of the CBAT
                                    1364  1          =*
                                    1365  1          =* Task managment info
                                    1366  1          =*
 000008                             1367  1          =RTCBNEXT   DS    A             Chain of all RTCBs in the system
 00000C                             1368  1          =RTCBNAME   DS    CL8           Name of this task
 000014                             1369  1          =RTCBTCB    DS    A             Address of the MVS TCB for this task
 000018                             1370  1          =RTCBSTK    DS    A             Address of the stack for this task
 00001C                             1371  1          =RTCBMSV    DS    A             Address of MVS save area
 000020                             1372  1          =RTCBTECB   DS    A             End of task ECB
 000024                             1373  1          =RTCBESTA   DS    A             ESTAE data block
 000028                             1374  1          =           DS    2A            available
                                    1375  1          =*
                                    1376  1          =* Lock managment info
                                    1377  1          =*
 000030                             1378  1          =RTCBLKWT   DS    A             Address of the lock we're waiting for
 000034                             1379  1          =           DS    4A            available
                                    1380  1          =*
                                    1381  1          =* Message channel management info
                                    1382  1          =*
 000044                             1383  1          =RTCBMCBP   DS    A             Chain of xCCBs owned by this task
 000048                             1384  1          =           DS    4A            available
                                    1385  1          =*
                                    1386  1          =* Timer management info
                                    1387  1          =*
 000058                             1388  1          =RTCBTIMR   DS    D             Current logical timer value
 000060                             1389  1          =RTCBCPU    DS    D             Total CPU time for the task
 000068                             1390  1          =RTCBCPT    DS    D             Current cpu timer value
 000070                             1391  1          =           DS    4A            available
                                    1392  1          =*
                                    1393  1          =* Trace managment info
                                    1394  1          =*
 000080                             1395  1          =RTCBTRTC   DS    A             Loc of current (avail) trace entry
 000084                             1396  1          =RTCBTRTF   DS    A             Loc of start of trace table
 000088                             1397  1          =RTCBTRTL   DS    A             Loc of end of trace table (+1)
 00008C                             1398  1          =           DS    4A            available
                                    1399  1          =*
                                    1400  1          =* Memory management info
                                    1401  1          =*
 00009C                             1402  1          =RTCBMEM    DS    A             Addr of memory CT
 0000A0                             1403  1          =           DS    2A            available
                                    1404  1          =*
                                    1405  1          =* Memory management info
                                    1406  1          =*
1MEMSERV  (MEMS00) (09:41) (22MAR04) ORVYL's Memory Services                                                                Page    7
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
00000A8                             1407  1          =RTCBIOT    DS    A             Addr of I/O Services table
                                    1408  1          =*
                                    1409  1          =* Hiperspace management info
                                    1410  1          =*
 0000AC                             1411  1          =RTCBBUFR   DS    A             MVPG and HSPSERV Buffer for this TCB
 0000B0                000B0 000B0  1412             =         END   ,
 USING  RTCB,R9                     1421      51.              USING RTCB,RTCBR
1MEMSERV  (MEMS00) (09:41) (22MAR04) ORVYL's Memory Services                                                                Page    8
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   1431      53.              COPY  CBAT
                                    1432             =*******************************************************************
                                    1433             =*                                                                 *
                                    1434             =*      CBAT --  Table of addresses of control blocks for various  *
                                    1435             =*               services and functions.  This is pointed at by    *
                                    1436             =*               every RTCB, so services can find their roots.     *
                                    1437             =*                                                                 *
                                    1438             =*******************************************************************
0000000                00000 00090  1440             =CBAT     RECORD    BEGIN
 000000 C3C2C1E3                    1448  1          =           DC    CL4'CBAT'     Control block id
                                    1449  1          =*
                                    1450  1          =* Task Services info
                                    1451  1          =*
 000004                             1452  1          =CBATTASK   DS    A             Address of the task services CT
 000008                             1453  1          =           DS    4A            available
                                    1454  1          =*
                                    1455  1          =* Lock managment info
                                    1456  1          =*
 000018                             1457  1          =CBATLOCK   DS    A             Address of the lock manager CT
 00001C                             1458  1          =           DS    4A            available
                                    1459  1          =*
                                    1460  1          =* Message channel management info
                                    1461  1          =*
 00002C                             1462  1          =CBATMSGS   DS    A             Address of message manager CT
 000030                             1463  1          =           DS    4A            available
                                    1464  1          =*
                                    1465  1          =* Memory management info
                                    1466  1          =*
 000040                             1467  1          =CBATMEM    DS    A             Address of memory CT
 000044                             1468  1          =           DS    4A            available
                                    1469  1          =*
                                    1470  1          =* I/O service management info
                                    1471  1          =*
 000054                             1472  1          =CBATIOCT   DS    A             Address of I/O service CT
 000058                             1473  1          =           DS    4A            available
                                    1474  1          =*
                                    1475  1          =* Parameter initialization parameters
                                    1476  1          =*
 000068                             1477  1          =CBATPARM   DS    A             Address of parameter CT
 00006C                             1478  1          =           DS    4A            available
                                    1479  1          =*
                                    1480  1          =* Termination and Console command info
                                    1481  1          =*
 00007C                             1482  1          =CBATTMCB   DS    A             Address of the termination CT
 000080                             1483  1          =           DS    4A            available
 000090                00090 00090  1484             =         END   ,
1MEMSERV  (MEMS00) (09:41) (22MAR04) ORVYL's Memory Services                                                                Page    9
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   1494      55.              COPY  POOLPARM
                                    1495             =*******************************************************************
                                    1496             =*                                                                 *
                                    1497             =*       POOLPARM -- OS Memory routine calling parms               *
                                    1498             =*                                                                 *
                                    1499             =*******************************************************************
0000000                00000 0000C  1501             =@MEMORY  RECORD BEGIN
 000000                             1509  1          =@MEMDATA   DS    X                       Reserved
 000001                             1510  1          =@MEMKEY    DS    X                       Storage key
                                    1511  1          =
 000002 00                          1512  1          =@MEMPOOL   FLAG   ,                      Type of memory request
 @MEMPOOL.MEMTSYS  80 ONES          1516  1          =           FLAG  (MEMTSYS,X'80')         System pool
 @MEMPOOL.MEMTA16M 10 ONES          1525  1          =           FLAG  (MEMTA16M,X'10')        Above 16 Meg line
 @MEMPOOL.MEMTGLOB 08 ONES          1534  1          =           FLAG  (MEMTGLOB,X'08')        Global subpool
 @MEMPOOL.MEMTFIX  04 ONES          1543  1          =           FLAG  (MEMTFIX,X'04')         Fixed
 @MEMPOOL.MEMTPAGE 02 ONES          1552  1          =           FLAG  (MEMTPAGE,X'02')        Page boundary
 @MEMPOOL.MEMTDEF  01 ONES          1561  1          =           FLAG  (MEMTDEF,X'01')         Default subpool
                                    1570  1          =
 000003 00                          1571  1          =@MEMCODE   FLAG  ,                       MVS codes
 @MEMCODE.MEMCANYR 40 ONES          1575  1          =           FLAG  (MEMCANYR,X'40')        Frame may be above 16m real
 @MEMCODE.MEMCANYV 30 ONES          1584  1          =           FLAG  (MEMCANYV,X'30')        Virtual may be above 16m
 @MEMCODE.MEMCBLOV 10 ONES          1593  1          =           FLAG  (MEMCBLOV,X'10')        Virtual must be below 16m
 @MEMCODE.MEMCRESV 30 OFF           1602  1          =           FLAG  (MEMCRESV,X'30',OFF)    Location determined by rmode
 @MEMCODE.MEMCVAR  08 ONES          1612  1          =           FLAG  (MEMCVAR,X'08')         Variable type request
 @MEMCODE.MEMCPGB  04 ONES          1621  1          =           FLAG  (MEMCPGB,X'04')         Page boundary alignment
 @MEMCODE.MEMCUNC  02 ONES          1630  1          =           FLAG  (MEMCUNC,X'02')         Unconditional type request
 @MEMCODE.MEMCFREE 01 ONES          1639  1          =           FLAG  (MEMCFREE,X'01')        Freemain request
                                    1648  1          =
 000004                             1649  1          =@MEMLEN    DS    A                       Length of area
 000008                             1650  1          =@MEMLOC    DS    A                       Location of area
 00000C                0000C 0000C  1651             =         END   ,
1MEMSERV  (MEMS00) (09:41) (22MAR04) Memory management sub-pool control table                                               Page   10
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   1661      57.     *
                                    1662      58.     *  Individual pool management control table
                                    1663      59.     *
 000000                00000 00054  1664      60.     MEMCTL   RECORD BEGIN
                                    1672  1   61.                CHAIN PFX=HEAD
 000000                             1673  1 01-CHAIN +HEADSIZ    DS     F                 SIZE OF THIS BLOCK
 000004                             1674  1 01-CHAIN +HEADFFWD   DS     F                 FIRST FIT FORWARD POINTER
 000008                             1675  1 01-CHAIN +HEADFBAC   DS     F                 FIRST FIT BACKWARD POINTER
 00000C                             1676  1 01-CHAIN +HEADBFWD   DS     F                 BEST FIT FORWARD POINTER
 000010                             1677  1 01-CHAIN +HEADBBAC   DS     F                 BEST FIT BACKWARD POINTER
 000014                             1678  1   62.     MEMPLOCK   DS    A                       Address of pool lock word
 000018                             1679  1   63.     MEMSIZ     DS    F                       SIZE OF MEMORY FOR THIS BLOCK
 00001C                             1680  1   64.     MEMFRE     DS    F                       TOTAL FREE MEMORY AVAIL
 000020                             1681  1   65.     MEMINC     DS    F                       INCR IN WHICH TO GET MORE MEM
 000024                             1682  1   66.     MEMLOW     DS    F                       MINIMUM SIZE OF ALLOC BLOCK
 000028                             1683  1   67.     MEMPOOLN   DS    H                       MEMORY SUB_POOL NUMBER
 00002A                0002A 00029  1684  1   68.                ORG   MEMPOOLN+1
 000029 00                          1685  1   69.     MEMFPOOL   FLAG  ,                       Sub-Pool type
 MEMFPOOL.POOLGLOB 08 ONES          1689  1   70.                FLAG  (POOLGLOB,MEMTGLOB)     | Global pool
 MEMFPOOL.POOL16M  10 ONES          1697  1   71.                FLAG  (POOL16M,MEMTA16M)      | Above 16M
 MEMFPOOL.POOL4K   02 ONES          1705  1   72.                FLAG  (POOL4K,MEMTPAGE)       | ON 4K BOUNDARY
 MEMFPOOL.POOLFIX  04 ONES          1713  1   73.                FLAG  (POOLFIX,MEMTFIX)       | FIXED
 00002A                0002A 0002A  1721  1   74.                ORG   ,
 00002A 00                          1722  1   75.     MEMFL      FLAG  ,                       TYPE OF BLOCK USING FLAGS
 MEMFL.FIX         80 ONES          1726  1   76.                FLAG  FIX                     FIX PAGES IN MEMORY
 MEMFL.BDPAGE      40 ONES          1731  1   77.                FLAG  BDPAGE                  NO PAGE CROSSING
 MEMFL.FRECALL     20 ONES          1736  1   78.                FLAG  FRECALL                 Called from MEMFREE
 MEMFL.GETCALL     10 ONES          1741  1   79.                FLAG  GETCALL                 Called from MEMGET
 MEMFL.MEMFGINC    08 ONES          1746  1   80.                FLAG  MEMFGINC                FRAGMENT GE INCR TO BE REL
 00002C                             1751  1   81.     STATBEG    DS    0H                      -S>BEGINNING OF STATS BLOCK
 00002C                             1752  1   82.     REQUEST    DS    F                       -S>NUMBER OF MEMORY REQUESTS
 000030                             1753  1   83.     REQSRCH    DS    F                       -S>CELLS SEARCHED ON REQUESTS
 000034                             1754  1   84.     MEMREL     DS    F                       -S>NUMBER OF MEMORY RELEASES
 000038                             1755  1   85.     SYSINC     DS    F                       -S>NUM OF SUB-POOL INCREMENTS
 00003C                             1756  1   86.     USEFRE     DS    F                       -S>NUM OF USER FREE ATTEMPTS
 000040                             1757  1   87.     SYSFRE     DS    F                       -S>NUM OF SYSTEM MEMORY FREES
 000044                             1758  1   88.     DEPTH      DS    F                       -S>CURRENT DEPTH OF POOL BLOCKS
 000048                             1759  1   89.     MAXDEP     DS    F                       -S>MAXIMUM DEPTH OF POOL BLOCKS
 00004C                             1760  1   90.     MAXSIZ     DS    F                       -S>LARGEST THAT BLOCK EVER GOT
 000050                             1761  1   91.     MAXFRAG    DS    F                       -S>SIZE OF LARGEST FRAGMENT
                                    1762  1   92.     STATSIZ    EQU   *-STATBEG               -S>SIZE OF STATISTICS BLOCK
 000054                             1763  1   93.     MEMNEXT    DS    0A                      Next control block address
 000054                00054 00054  1764      94.              END   ,
1MEMSERV  (MEMS00) (09:41) (22MAR04) Memory management control table                                                        Page   11
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000000                00000 002C0  1774      96.     MEMTABLE RECORD BEGIN                           MASTER TABLE RECORD
 000000                             1782  1   97.     MEMX1ST    DS    7A                               1ST sub-ctl blk addr
 00001C                             1783  1   98.     MEMXLAST   DS    A                                | and last
 000020                             1784  1   99.     MEMCTL1    DS    (8*L'MEMCTL)X                    Sub-control blocks
 0002C0                002C0 002C0  1785     100.              END   ,                                OF TABLE RECORD
-                                   1795     102.              COPY  MEMPARM
                                    1796             =*******************************************************************
                                    1797             =*                                                                 *
                                    1798             =*            Memory service initialization parameters             *
                                    1799             =*                                                                 *
                                    1800             =*******************************************************************
0000000                00000 00002  1802             =@MEMINIT RECORD BEGIN                           MEMORY INIT RECORD
 000000 00                          1810  1          =@MIFLAG    FLAG  ,                                Specification flags
 @MIFLAG.MIGLOBAL  80 ONES          1814  1          =           FLAG  MIGLOBAL                         | INIT GLOBAL POOL
                                    1819  1          =*-----------------------------------------------
                                    1820  1          =*  From here on need not be specified on call
                                    1821  1          =*-----------------------------------------------
 000001 00                          1822  1          =@MIWFLAG   FLAG  ,                                Work flags
                                    1826  1          =*   Pool type is determined by the bit values in the pool index
                                    1827  1          =*  offset
 @MIWFLAG.MIWPAGE  04 ONES          1828  1          =           FLAG  (MIWPAGE,X'04')                  | page boundary
 @MIWFLAG.MIWFIX   08 ONES          1837  1          =           FLAG  (MIWFIX,X'08')                   | fixed memory
 @MIWFLAG.MIWA16M  10 ONES          1846  1          =           FLAG  (MIWA16M,X'10')                  | above 16M
 000002                00002 00002  1855             =         END   ,                                OF MEMORY INIT RECORD
-
                                    1865             =*******************************************************************
                                    1866             =*                                                                 *
                                    1867             =*              Memory service allocation parameters               *
                                    1868             =*                                                                 *
                                    1869             =*******************************************************************
0000000                00000 0000A  1871             =@MEMGET  RECORD BEGIN
 000000                             1879  1          =@MGLL      DS    D                                Location/Length
 000008                00008 00000  1880  1          =           ORG   @MGLL
 000000                             1881  1          =@MGLOC     DS    A                                Location (return)
 000004                             1882  1          =@MGLEN     DS    A                                Length of request
 000008                00008 00008  1883  1          =           ORG   ,
 000008 0000                        1884  1          =@MGTYPE    DC    H'0'                             Request type - offset
                                    1885  1          =*   TYPES A16M, FIX, & PAG form an index into a control table for
                                    1886  1          =* a specified pool.  ie. a pool above the 16M line, unfixed and
                                    1887  1          =* double word boundary has an @MGTYPE value of X'10' = 16.
 00000A                0000A 00009  1888  1          =           ORG   @MGTYPE+1
 000009 00                          1889  1          =@MGFTYPE   FLAG  ,
 @MGFTYPE.MGA16M   10 ONES          1893  1          =           FLAG  (MGA16M,X'10')                   Above 16M line
 @MGFTYPE.MGFIX    08 ONES          1902  1          =           FLAG  (MGFIX,X'08')                    Fixed pool
 @MGFTYPE.MGPAG    04 ONES          1911  1          =           FLAG  (MGPAG,X'04')                    Page boundary
 @MGFTYPE.MGGLOB   02 ONES          1920  1          =           FLAG  (MGGLOB,X'02')                   Global pool
 @MGFTYPE.MGBEST   01 ONES          1929  1          =           FLAG  (MGBEST,X'01')                   Best fit
 00000A                0000A 0000A  1938  1          =           ORG   ,
1MEMSERV  (MEMS00) (09:41) (22MAR04) Memory management control table                                                        Page   12
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
000000A                0000A 0000A  1939             =         END   ,
1MEMSERV  (MEMS00) (09:41) (22MAR04) Memory management control table                                                        Page   13
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   1949             =*******************************************************************
                                    1950             =*                                                                 *
                                    1951             =*               Memory service release parameters                 *
                                    1952             =*                                                                 *
                                    1953             =*******************************************************************
0000000                00000 0000A  1955             =@MEMFREE RECORD BEGIN                           PARAMETERS
 000000                             1963  1          =@MFLL      DS    D                                Location/Length
 000008                00008 00000  1964  1          =           ORG   @MFLL
 000000                             1965  1          =@MFLOC     DS    A                                Location
 000004                             1966  1          =@MFLEN     DS    A                                Length
 000008                00008 00008  1967  1          =           ORG   ,
 000008 0000                        1968  1          =@MFTYPE    DC    H'0'                             Request type - offset
 00000A                0000A 00009  1969  1          =           ORG   @MFTYPE+1
 000009 00                          1970  1          =@MFFTYPE   FLAG  ,
                                    1974  1          =*   TYPES A16M, FIX, & PAG form an index into a control table for
                                    1975  1          =* a specified pool.  ie. a pool above the 16M line, unfixed and
                                    1976  1          =* double word boundary has an @MGTYPE value of X'10' = 16.
 @MFFTYPE.MFA16M   10 ONES          1977  1          =           FLAG  (MFA16M,X'10')                   Above 16M line
 @MFFTYPE.MFFIX    08 ONES          1986  1          =           FLAG  (MFFIX,X'08')                    Fixed pool
 @MFFTYPE.MFPAG    04 ONES          1995  1          =           FLAG  (MFPAG,X'04')                    Page boundary
 @MFFTYPE.MFGLOB   02 ONES          2004  1          =           FLAG  (MFGLOB,X'02')                   Global pool
 00000A                0000A 0000A  2013  1          =           ORG   ,
 00000A                0000A 0000A  2014             =         END   ,
1MEMSERV  (MEMS00) (09:41) (22MAR04) Lock parameters                                                                        Page   14
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   2024     104.              COPY  LOCKPARM
                                    2025             =*******************************************************************
                                    2026             =*                                                                 *
                                    2027             =*    LOCKPARM - Lock routine calling parms                        *
                                    2028             =*                                                                 *
                                    2029             =*******************************************************************
0000000                00000 00011  2031             =@LOCKCRE RECORD BEGIN
 000000                             2039  1          =@LOCKNAM   DS    CL16          Name of the lock
 000010 00                          2040  1          =@LOCKFL    FLAG  ,
 @LOCKFL.@LFSPIN   80 ONES          2044  1          =           FLAG  @LFSPIN       Spin type lock
 000011                00011 00011  2049             =         END   ,
                                    2058             =*
 000000                00000 00004  2059             =@LOCKS   RECORD BEGIN
 000000                             2067  1          =@LOCKID    DS    A             Lock id
 000004                00004 00004  2068             =         END   ,
1MEMSERV  (MEMS00) (09:41) (22MAR04) Trace paramters                                                                        Page   15
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   2078     106.              COPY  TRCEPARM
                                    2079             =*******************************************************************
                                    2080             =*                                                                 *
                                    2081             =*       TRCEPARM -- Trace routine calling parms                   *
                                    2082             =*                                                                 *
                                    2083             =*******************************************************************
0000000                00000 00058  2085             =@TRACE   RECORD BEGIN
                                    2093  1          =
 000000 00                          2094  1          =@TRTYPE    FLAG   ,                      Type of the trace entry
 @TRTYPE.TRCFTRA   00 EQ            2098  1          =           FLAG  (TRCFTRA,0,EQ)          Trace
 @TRTYPE.TRCFMCHK  01 EQ            2108  1          =           FLAG  (TRCFMCHK,1,EQ)         Machine check
 @TRTYPE.TRCFSVC   02 EQ            2118  1          =           FLAG  (TRCFSVC,2,EQ)          Svc
 @TRTYPE.TRCFPI    03 EQ            2128  1          =           FLAG  (TRCFPI,3,EQ)           Program
 @TRTYPE.TRCFEXT   04 EQ            2138  1          =           FLAG  (TRCFEXT,4,EQ)          External
 @TRTYPE.TRCFIO    05 EQ            2148  1          =           FLAG  (TRCFIO,5,EQ)           I/O
 @TRTYPE.TRCFRSRT  06 EQ            2158  1          =           FLAG  (TRCFRSRT,6,EQ)         Restart key
 @TRTYPE.TRCFABND  07 EQ            2168  1          =           FLAG  (TRCFABND,7,EQ)         Abend
                                    2178  1          =
 000001                             2179  1          =@TRDLEN    DS    X                       Length of misc data
 000002                             2180  1          =@TRIC      DS    H                       Interrupt code
 000004                             2181  1          =@TRCPID    DS    H                       CPU ID
 000006                             2182  1          =           DS    H
 000008                             2183  1          =@TRNAME    DS    CL8                     Trace name
 000010                             2184  1          =@TRPSW     DS    XL8                     PSW
 000018                             2185  1          =@TRREGS    DS    16A                     Register area
 000058                00058 00058  2186             =         END   ,
1MEMSERV  (MEMS00) (09:41) (22MAR04) Internal link parameters                                                               Page   16
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000000                00000 00018  2196     108.     @LINK    RECORD BEGIN                  PARAMETERS
 000000                             2204  1  109.     @LNKCTL    DS    A                       Control block address
 000008                             2205  1  110.     @LNKLL     DS    D                       Location/Length
 000010                00010 00008  2206  1  111.                ORG   @LNKLL
 000008                             2207  1  112.     @LNKLOC    DS    A                       Location
 00000C                             2208  1  113.     @LNKLEN    DS    A                       Length
 000010                             2209  1  114.     @LNKLAS    DS    A                       Proc element on chain (first)
 000014                             2210  1  115.     @LNKNEW    DS    A                       Next element on chain (first)
 000018                00018 00018  2211     116.              END   ,                       OF PARAMETERS
1MEMSERV  (MEMS00) (09:41) (22MAR04) Internal memory allocation from OS                                                     Page   17
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000000                00000 00010  2221     118.     @MIGET   RECORD BEGIN                  Internal-Get parameters
 000000                             2229  1  119.     @MIGCTL    DS    A                       Address of control block
 000008                             2230  1  120.     @MIGLL     DS    D                       Location/Length of Return
 000010                00010 00008  2231  1  121.                ORG   @MIGLL
 000008                             2232  1  122.     @MIGLOC    DS    A                       Address
 00000C                             2233  1  123.     @MIGLEN    DS    A                       Optional increment
 000010                00010 00010  2234  1  124.                ORG   ,
 000010                00010 00010  2235     125.              END   ,                       OF Internal-Get parameters
1MEMSERV  (MEMS00) (09:41) (22MAR04) ORVYL Memory Management                                                                Page   18
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000000                00000 00014  2245     127.     LAST     RECORD BEGIN
                                    2253  1  128.                CHAIN PFX=LAS
 000000                             2254  1 01-CHAIN +LASSIZ     DS     F                 SIZE OF THIS BLOCK
 000004                             2255  1 01-CHAIN +LASFFWD    DS     F                 FIRST FIT FORWARD POINTER
 000008                             2256  1 01-CHAIN +LASFBAC    DS     F                 FIRST FIT BACKWARD POINTER
 00000C                             2257  1 01-CHAIN +LASBFWD    DS     F                 BEST FIT FORWARD POINTER
 000010                             2258  1 01-CHAIN +LASBBAC    DS     F                 BEST FIT BACKWARD POINTER
 000014                00014 00014  2259     129.              END   ,
-000000                00000 00014  2269     131.     CURRENT  RECORD BEGIN
                                    2277  1  132.                CHAIN PFX=CUR
 000000                             2278  1 01-CHAIN +CURSIZ     DS     F                 SIZE OF THIS BLOCK
 000004                             2279  1 01-CHAIN +CURFFWD    DS     F                 FIRST FIT FORWARD POINTER
 000008                             2280  1 01-CHAIN +CURFBAC    DS     F                 FIRST FIT BACKWARD POINTER
 00000C                             2281  1 01-CHAIN +CURBFWD    DS     F                 BEST FIT FORWARD POINTER
 000010                             2282  1 01-CHAIN +CURBBAC    DS     F                 BEST FIT BACKWARD POINTER
 000014                00014 00014  2283     133.              END   ,
-000000                00000 00014  2293     135.     NEWCHAIN RECORD BEGIN
                                    2301  1  136.                CHAIN PFX=NEW
 000000                             2302  1 01-CHAIN +NEWSIZ     DS     F                 SIZE OF THIS BLOCK
 000004                             2303  1 01-CHAIN +NEWFFWD    DS     F                 FIRST FIT FORWARD POINTER
 000008                             2304  1 01-CHAIN +NEWFBAC    DS     F                 FIRST FIT BACKWARD POINTER
 00000C                             2305  1 01-CHAIN +NEWBFWD    DS     F                 BEST FIT FORWARD POINTER
 000010                             2306  1 01-CHAIN +NEWBBAC    DS     F                 BEST FIT BACKWARD POINTER
 000014                00014 00014  2307     137.              END   ,
-000000                00000 00014  2317     139.     RXCHAIN  RECORD BEGIN
                                    2325  1  140.                CHAIN PFX=RX
 000000                             2326  1 01-CHAIN +RXSIZ      DS     F                 SIZE OF THIS BLOCK
 000004                             2327  1 01-CHAIN +RXFFWD     DS     F                 FIRST FIT FORWARD POINTER
 000008                             2328  1 01-CHAIN +RXFBAC     DS     F                 FIRST FIT BACKWARD POINTER
 00000C                             2329  1 01-CHAIN +RXBFWD     DS     F                 BEST FIT FORWARD POINTER
 000010                             2330  1 01-CHAIN +RXBBAC     DS     F                 BEST FIT BACKWARD POINTER
 000014                00014 00014  2331     141.              END   ,
1MEMSERV  (MEMS00) (09:41) (22MAR04) ORVYL Memory Management                                                                Page   19
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000015                00000 00908  2341     143.     MEMSERV  CSECT
-USING  LAST,R2                     2344     145.              USING LAST,LAS
 USING  CURRENT,R3                  2353     146.              USING CURRENT,CUR
 USING  NEWCHAIN,R5                 2362     147.              USING NEWCHAIN,NEW
 USING  RXCHAIN,R6                  2371     148.              USING RXCHAIN,RX
1MEMSERV  (MEMS00) (09:41) (22MAR04) Initializing Routine                                                                   Page   20
0Current Usings:  (LAST,R2) (CURRENT,R3) (NEWCHAIN,R5) (RXCHAIN,R6) (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   2381     150.     FIXINC   EQU   1*4096                           FIX POOL INCREMENT
                                    2382     151.     NFIXINC  EQU   3*4096                           NON-FIX POOL INC
-                                   2384     153.     *********************************************************************
                                    2385     154.     *                   Memory Control Initialization                   *
                                    2386     155.     *                                                                   *
                                    2387     156.     *   Input - @MEMINIT                                                *
                                    2388     157.     *                                                                   *
                                    2389     158.     *  Output - RTCBMEM or CBATMEM (depending on local or global        *
                                    2390     159.     *           initialization) points to a valid control block         *
                                    2391     160.     *                                                                   *
                                    2392     161.     *********************************************************************
0000016                             2394     163.     MEMINIT  PROC  @MEMINIT,SCOPE=GLOBAL
 000016 D4C5D4C9D5C9E340            2400             +
 00001E 0008/0000                   2401             +
 000022 900F D004/18AF       00004  2403             +
 USING  MEMINIT,R10
 000028 50D0 C000/18CD       00000  2418             +
 00002E 9680 C000      00000        2420             +
 USING  @MEMINIT-72,R12
 000032 41D0 C050            00050  2434             +
                                    2435     164.     *        TRCE  MEMINIT
                                    2436     165.     *-----------------------------------------------
                                    2437     166.     *  Get memory for contrlol blocks
                                    2438     167.     *-----------------------------------------------
 USING  @MEMORY-72,R13              2439     168.              PSET  @MEMORY                          GET CONTROL BLOCK
 000036 D70B D048 D048 00000 00000  2456             +
 00003C 9180 C048      00000        2457     169.              IF    MIGLOBAL,'SET MEMTGLOB'          | GLOBAL CONTROL BLK
 000040 47E0 A026            00048  2467             +
 000044 9608 D04A      00002        2478             +
 000048 9610 D04A      00002        2483     170.              SET   MEMTA16M                         | ABOVE 16M
 00004C D203 D04C A89E 00004 008C0  2489     171.              MVC   @MEMLEN,=A(L'MEMTABLE)           |
 000052 58F0 A8A2/0DEF       008C4  2490     172.              VCALL POOLGET                          |
-000058 5810 D050            00008  2495     174.              L     RS,@MEMLOC                       CONTROL BLOCK LOC
 00005C 9180 C048      00000        2496     175.              IF    MIGLOBAL,BEGIN                   | Global case
 000060 47E0 A04A            0006C  2506             +
 000064 5820 9004            00004  2511  1  176.                L     RA,RTCBCBAT                      |
 000068 5010 2040            00040  2512  1  177.                WITH  (CBAT,RA),'ST RS,CBATMEM '       |
 DROP   LAST,R2
 USING  CBAT,R2
 DROP   CBAT,R2
 USING  LAST,R2
 00006C                             2546     178.              END   ,                                | OF Global case
 00006C A04E           0006C 00062  2550     179.              ELSE  'ST RS,RTCBMEM '                 |
 00006C 47F0 A052            00074  2555             +
 000070 5010 909C            0009C  2562             +
0                                   2568     181.     *-----------------------------------------------
                                    2569     182.     *  Loop through pool control blocks
                                    2570     183.     *-----------------------------------------------
1MEMSERV  (MEMS00) (09:41) (22MAR04) Initializing Routine                                                                   Page   21
0Current Usings:  (MEMTABLE,R1) (LAST,R2) (CURRENT,R3) (NEWCHAIN,R5) (RXCHAIN,R6) (RTCB,R9) (MEMINIT,R10) (@MEMINIT-72,R12) (@MEMORY-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0USING  MEMTABLE,R1                 2571     184.              WITH  (MEMTABLE,RS),BEGIN
 000074 4120 0004            00004  2585  1  185.                LA    RA,L'MEMXLAST                    Loop thru sub-ctls
 000078 4130 101C            0001C  2586  1  186.                LA    RB,MEMXLAST                      | Last sub-block index
 00007C 4140 1020            00020  2587  1  187.                LA    RJ,MEMCTL1                       | 1st sub-ctl blk addr
 000080 1B55                        2588  1  188.                CLEAR (RK)                             | Pool-type index
 DROP   MEMTABLE,R1                 2592     189.              END   ,                                OF With
 000082 4160 A0FC            0011E  2600     190.              LA    RX,LOCKNAMS                      Address of lock names
0USING  MEMCTL,R4                   2602     192.              WITH  (MEMCTL,RJ),BEGIN                Addr to sub-ctl block
 000086                             2616  1  193.     MILOOP     LABEL ,                                Initialize sub pools
 000086 5040 1000            00000  2618  1  194.                ST    RJ,@RS                           Set index pointer
                                    2619  1  195.     *  Set pool type
 00008A 9180 C048      00000        2620  1  196.                IF    (MIGLOBAL),BEGIN                 Global pool
 00008E 47E0 A08A            000AC  2630  1          +
 000092 9608 4029      00029        2635  2  197.                  SET   POOLGLOB                         | Pool type
 DROP   @MEMORY-72,R13              2641  2  198.                  PSET  @LOCKCRE                         | Create lock
 USING  @LOCKCRE-72,R13
 000096 D710 D048 D048 00000 00000  2661  2          +
 00009C D20F D048 6000 00000 00000  2662  2  199.                  MVC   @LOCKNAM,0(RX)                   | | name from table
 0000A2 58F0 A8A6/0DEF       008C8  2663  2  200.                  VCALL LOCKCRE                          |
 0000A8 5000 4014            00014  2667  2  201.                  ST    RVR,MEMPLOCK                     | Save lock-id
 0000AC                             2668  1  202.                END   ,                                OF Global pool
 0000AC 9602 4029      00029        2672  1  203.                SET   POOL4K                           Always use MVS 4K
 0000B0 4250 C049            00001  2678  1  204.                STC   RK,@MIWFLAG                      Pool # tells type
 0000B4 9104 C049      00001        2679  1  205.                IF    (MIWPAGE),BEGIN                  Allocation boundary
 0000B8 47E0 A0A0            000C2  2689  1          +
 0000BC D203 4024 A8AA 00024 008CC  2694  2  206.                  MVC   MEMLOW,=A(LPLIMIT)               |
 0000C2 A0A4           000C2 000BA  2695  1  207.                END   ELSE,BEGIN                       Not page boundary
 0000C2 47F0 A0AA            000CC  2704  1          +
 0000C6 D203 4024 A8AE 00024 008D0  2710  2  208.                  MVC   MEMLOW,=A(LLIMIT)                |
 0000CC                             2711  1  209.                END   ,                                OF Allocation boundary
 0000CC 9108 C049      00001        2715  1  210.                IF    (MIWFIX),BEGIN                   Fixed allocation
 0000D0 47E0 A0C0            000E2  2725  1          +
 0000D4 9680 402A      0002A        2730  2  211.                  SET   FIX
 0000D8 9604 4029      00029        2736  2  212.                  SET   POOLFIX
 0000DC D203 4020 A8B2 00020 008D4  2742  2  213.                  MVC   MEMINC,=A(FIXINC)                Incr for more memory
 0000E2 A0C4           000E2 000D2  2743  1  214.                END   ELSE,BEGIN                       Unfixed allocation
 0000E2 47F0 A0CA            000EC  2752  1          +
 0000E6 D203 4020 A8B6 00020 008D8  2758  2  215.                  MVC   MEMINC,=A(NFIXINC)
 0000EC                             2759  1  216.                END   ,                                Of fixed/unfixed
 0000EC 9110 C049      00001        2763  1  217.                IF    (MIWA16M),'SET POOL16M'
 0000F0 47E0 A0D6            000F8  2773  1          +
 0000F4 9610 4029      00029        2784  1          +
                                    2789  1  218.     *  Flags FRECALL and GETCALL default to 'OFF'
                                    2790  1  219.     *  Initialize chains
 0000F8 5040 4004            00004  2791  1  220.                ST    RJ,HEADFFWD             PNT TO SELF, EMPTY LIST
 0000FC 5040 4008            00008  2792  1  221.                ST    RJ,HEADFBAC             |
 000100 5040 400C            0000C  2793  1  222.                ST    RJ,HEADBFWD             |
 000104 5040 4010            00010  2794  1  223.                ST    RJ,HEADBBAC             |
-                                   2796  1  225.     *  Initialize next sub-control block
 000108 4155 2000            00000  2797  1  226.                LA    RK,0(RK,RA)                      Next index
 00010C 4140 4054            00054  2798  1  227.                LA    RJ,MEMNEXT                       Next control block
1MEMSERV  (MEMS00) (09:41) (22MAR04) Initializing Routine                                                                   Page   22
0Current Usings:  (LAST,R2) (CURRENT,R3) (MEMCTL,R4) (NEWCHAIN,R5) (RXCHAIN,R6) (RTCB,R9) (MEMINIT,R10) (@MEMINIT-72,R12) (@LOCKCRE-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000110 8712 A064            00086  2799  1  228.                BXLE  RS,RA,MILOOP                     |
 DROP   MEMCTL,R4                   2800     229.              END   ,                                OF Addr to sub-ctl blk
 000114 981F C008            00008  2808     230.              PEND  ,
 DROP   @MEMINIT-72,R12
 DROP   MEMINIT,R10
 000118 9680 C000/0B0E 00000        2823             +
 DROP   @LOCKCRE-72,R13
1MEMSERV  (MEMS00) (09:41) (22MAR04) Initializing Routine                                                                   Page   23
0Current Usings:  (LAST,R2) (CURRENT,R3) (NEWCHAIN,R5) (RXCHAIN,R6) (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
000011E D4C5D45FF1F6D45F            2833     232.     LOCKNAMS DC    CL16'MEM~16M~FIX~PAGE'
 00012E D4C5D45FF1F6D45F            2834     233.              DC    CL16'MEM~16M~FIX PAGE'
 00013E D4C5D45FF1F6D440            2835     234.              DC    CL16'MEM~16M FIX~PAGE'
 00014E D4C5D45FF1F6D440            2836     235.              DC    CL16'MEM~16M FIX PAGE'
 00015E D4C5D440F1F6D45F            2837     236.              DC    CL16'MEM 16M~FIX~PAGE'
 00016E D4C5D440F1F6D45F            2838     237.              DC    CL16'MEM 16M~FIX PAGE'
 00017E D4C5D440F1F6D440            2839     238.              DC    CL16'MEM 16M FIX~PAGE'
 00018E D4C5D440F1F6D440            2840     239.              DC    CL16'MEM 16M FIX PAGE'
1MEMSERV  (MEMS00) (09:41) (22MAR04) Memget                                                                                 Page   24
0Current Usings:  (LAST,R2) (CURRENT,R3) (NEWCHAIN,R5) (RXCHAIN,R6) (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   2842     241.     *********************************************************************
                                    2843     242.     *               ORVYL memory management - get memory                *
                                    2844     243.     *                                                                   *
                                    2845     244.     *    Input - @MEMGET                                                *
                                    2846     245.     *                                                                   *
                                    2847     246.     *   Output - @MEMGET                                                *
                                    2848     247.     *            RVR  contains memory address                           *
                                    2849     248.     *            Memory is cleared                                      *
                                    2850     249.     *                                                                   *
                                    2851     250.     *********************************************************************
0000000                00000 00011  2853     252.     MEMWORK  RECORD BEGIN
 000000                             2861  1  253.     LOWADD     DS    F                       LOW SEG OF BLOCK ADDR
 000004                             2862  1  254.     LOWLEN     DS    F                       LOW SEG OF BLOCK LEN
 000008                             2863  1  255.     HIADD      DS    F                       HIGH SEG OF BLOCK ADDR
 00000C                             2864  1  256.     HILEN      DS    F                       HIGH SEG OF BLOCK LEN
 000010 00                          2865  1  257.     INDICATE   FLAG  ,
 INDICATE.MLOW     80 ONES          2869  1  258.                FLAG  MLOW                    SECTION IN LOW SEG OF BLOCK
 INDICATE.MHIGH    40 ONES          2874  1  259.                FLAG  MHIGH                   SECTION IN HIGH SEG OF BLOCK
 INDICATE.ALL      20 ONES          2879  1  260.                FLAG  ALL                     ALL OF BLOCK IS ALLOCATED
 000011                00011 00011  2884     261.              END   ,
-00019E                             2894     263.     MEMGET   PROC  @MEMGET,MEMWORK,SCOPE=GLOBAL
 00019E D4C5D4C7C5E34040            2900             +
 0001A6 0010/0018                   2901             +
 0001AA 900F D004/18AF       00004  2903             +
 USING  MEMGET,R10
 0001B0 50D0 C000/18CD       00000  2918             +
 0001B6 9680 C000      00000        2920             +
 USING  @MEMGET-72,R12
 AUSING (MEMWORK,@MEMGET+16)
 0001BA 41D0 C070            00070  2939             +
                                    2940     264.     *        TRCE  MEMGET
 0001BE 9102 C051      00009        2941     265.              IF    MGGLOB,BEGIN                     GLOBAL REQUEST
 0001C2 47E0 A024            001CE  2951             +
 0001C6 5810 9004            00004  2956  1  266.                L     CTL,RTCBCBAT                     | CBAT ADDR
 0001CA 5810 1040            00040  2957  1  267.                WITH  (CBAT,CTL),'L CTL,CBATMEM '      | MEMORY POOL
 USING  CBAT,R1
 DROP   CBAT,R1
 0001CE A028           001CE 001C4  2981     268.              END   ELSE,BEGIN                       LOCAL REQUEST
 0001CE 47F0 A02C            001D6  2990             +
 0001D2 5810 909C            0009C  2996  1  269.                L     CTL,RTCBMEM                      | MEMORY POOL
 0001D6                             2997     270.              END   ,                                OF GLOBAL/LOCAL
 0001D6 4860 C050            00008  3001     271.              LH    RX,@MGTYPE                       POOL INDEX
 0001DA 5460 A732            008DC  3002     272.              N     RX,=A(L'MGA16M+L'MGFIX+L'MGPAG)  | from these flags
 0001DE 5816 1000            00000  3003     273.              L     CTL,@CTL(RX)                     |
 USING  MEMCTL,R1                   3004     274.              USING MEMCTL,CTL                       ADDR FOR CONTROL BLOCK
00001E2 9120 102A      0002A        3014     276.              IF    ~FRECALL,BEGIN                   Not releasing to OS
 0001E6 4710 A062            0020C  3024             +
 0001EA 4130 0001            00001  3029  1  277.                INCR  CUR,REQUEST                      -S>ONE MORE REQUEST
 0001EE 5E30 102C            0002C  3033  1          +
 0001F2 5030 102C            0002C  3034  1          +
1MEMSERV  (MEMS00) (09:41) (22MAR04) Memget                                                                                 Page   25
0Current Usings:  (MEMCTL,R1) (LAST,R2) (CURRENT,R3) (NEWCHAIN,R5) (RXCHAIN,R6) (RTCB,R9) (MEMGET,R10) (@MEMGET-72,R12)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
00001F6 9102 C051      00009        3035  1  278.                IF    MGGLOB,BEGIN                     Get global lock
 0001FA 47E0 A062            0020C  3045  1          +
 0001FE 5800 1014            00014  3050  2  279.                  LOCKOB MEMPLOCK                        |
 USING  @LOCKS-72,R13
 000202 5000 D048            00000  3066  2          +
 000206 58F0 A736/0DEF       008E0  3069  2          +
 00020C                             3071  1  280.                END   ,                                OF Get global lock
 00020C                             3075     281.              END   ,                                OF Not releasing to OS
 00020C 5800 C04C            00004  3079     282.              L     SNEW,@MGLEN                      LENGTH OF REQUEST
 000210 5A00 1024/0600       00024  3080     283.              RNDUP SNEW,MEMLOW,TREG=CUR    ROUND UP TO MINIMUM ALLOC SIZE
 000216 5830 1024/1333       00024  3085             +
 00021C 1403                        3087             +
 00021E 91C0 102A      0002A        3089     284.              IF   ((FIX+BDPAGE,AND,(SNEW,GT,CPAGE)),OR,(SNEW,ZERO)),BEGIN
 000222 4780 A084            0022E  3106             +
 000226 5900 A73A            008E4  3119             +
 00022A 4720 A08A/1200       00234  3122             +
 000230 4770 A08E            00238  3131             +
 000234 4DE0 A682            0082C  3136  1  285.                BAS   RAR,MEMKAPUT            NON-PAGE-CROSS TOO LARGE
                                    3137  1  286.     *                                      | or zero length
 000238                             3138     287.              END   ,
1MEMSERV  (MEMS00) (09:41) (22MAR04) Memget                                                                                 Page   26
0Current Usings:  (MEMCTL,R1) (LAST,R2) (CURRENT,R3) (NEWCHAIN,R5) (RXCHAIN,R6) (RTCB,R9) (MEMGET,R10) (@MEMGET-72,R12) (@LOCKS-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000238 1831                        3143     289.              LR    CUR,CTL                 LIST HEAD POINTER
 00023A 1B66                        3144     290.     LOOK     CLEAR (RX)                    | CLEAR LOOP COUNTER
 00023C                             3149     291.              LOOP  BEGIN                   LOOK FOR RIGHT BLOCK
 00023C 5E60 A73E            008E8  3155  1  292.                INCR  RX                      | One more cell searched
 000240 1823                        3158  1  293.                LR    LAS,CUR                 INCREMENT, POINTER STYLE
 000242 5830 2004            00004  3159  1  294.                L     CUR,LASFFWD             POINT TO NEXT ELEMENT
 000246 9101 C051      00009        3160  1  295.                IF    MGBEST,'L CUR,LASBFWD'  |
 00024A 47E0 A0A8            00252  3170  1          +
 00024E 5830 200C            0000C  3176  1          +
 000252                             3181  1  296.                IF    (CURSIZ,ZERO),BEGIN     END OF LIST
 000252 D603 3000 3000 00000 00000  3191  1          +
 000258 4770 A114            002BE  3192  1          +
                                    3197  2  297.     *-----------------------------------------------
                                    3198  2  298.     *  End of memory list - if releasing to OS, quit
                                    3199  2  299.     *-----------------------------------------------
 00025C 9120 102A      0002A        3200  2  300.                  IF    FRECALL,BEGIN           SPECIAL ACTION FOR RELEASE MODE
 000260 47E0 A0C4            0026E  3210  2          +
 000264                             3215  3  301.                    CLEAR @MGLOC                  SET RET - NO PAGE AVAILABLE
 000264 D703 C048 C048 00000 00000  3221  3          +
 00026A 47F0 A30E            004B8  3222  3  302.                    B     MEMGETX                 EXIT ROUTINE
 00026E                             3223  2  303.                  END   ,
                                    3227  2  304.     *-----------------------------------------------
                                    3228  2  305.     *  Get more memory from OS
                                    3229  2  306.     *-----------------------------------------------
 00026E 5E60 1030            00030  3230  2  307.                  AL    RX,REQSRCH              UPDATE DEPTH FOR THIS REQUEST
 000272 5060 1030            00030  3231  2  308.                  ST    RX,REQSRCH              |
 000276 5000 C04C            00004  3232  2  309.                  ST    SNEW,@MGLEN             Save request length
                                    3233  2  310.
 DROP   @LOCKS-72,R13               3234  2  311.                  PSET  @MIGET                  GET MEMORY: MAX(MEMINC,REQST)
 USING  @MIGET-72,R13
 00027A D70F D048 D048 00000 00000  3254  2          +
 000280 5000 D054            0000C  3255  2  312.                  ST    SNEW,@MIGLEN            | Optional length
 000284 5010 D048            00000  3256  2  313.                  ST    CTL,@MIGCTL             | Control block
 000288 41F0 A69E/0DEF       00848  3257  2  314.                  LCALL INTGET                  |
 00028E D207 C060 D050 00008 00008  3266  2  315.                  MVC   HIADD(L'@MIGLL),@MIGLL  Location/Length of new mem
                                    3267  2  316.
 000294 9610 102A      0002A        3268  2  317.                  SET   GETCALL                 LINK BLOCK - CALLED FROM GETMEM
 DROP   @MIGET-72,R13               3274  2  318.                  PSET  @MEMFREE                |
 USING  @MEMFREE-72,R13
 000298 D709 D048 D048 00000 00000  3294  2          +
 00029E D207 D048 C060 00000 00008  3295  2  319.                  MVC   @MFLL,HIADD             | Loc/Len
 0002A4 D201 D050 C050 00008 00008  3296  2  320.                  MVC   @MFTYPE,@MGTYPE         | Pool type (number)
 0002AA 41F0 A3A6/0DEF       00550  3297  2  321.                  LCALL MEMFREE                 |
                                    3306  2  322.
 0002B0 94EF 102A      0002A        3307  2  323.                  CLEAR GETCALL                 BACK TO NORMAL MODE
 0002B4 5830 D048            00000  3314  2  324.                  L     CUR,@MFLOC              CUR POINTS TO MOST RECENT BLOCK
 0002B8 5800 C04C            00004  3315  2  325.                  L     SNEW,@MGLEN             | Restore request length
 0002BC 1B66                        3316  2  326.                  CLEAR (RX)                    RESET DEPTH FOR SEARCH REMAINDER
 0002BE                             3320  1  327.                END   ,                       OF END OF LIST
                                    3324  1  328.     *-----------------------------------------------
                                    3325  1  329.     *  END of Get more memory from OS
                                    3326  1  330.     *-----------------------------------------------
 0002BE 5840 3000            00000  3327  1  331.                L     SCUR,CURSIZ             GET SIZE(CURRENT)
 0002C2 1940/4750 A092       0023C  3328     332.              UNTIL (SCUR,GE,SNEW),END      OF LOOK FOR RIGHT BLOCK
1MEMSERV  (MEMS00) (09:41) (22MAR04) Memget                                                                                 Page   27
0Current Usings:  (MEMCTL,R1) (LAST,R2) (CURRENT,R3) (NEWCHAIN,R5) (RXCHAIN,R6) (RTCB,R9) (MEMGET,R10) (@MEMGET-72,R12) (@MEMFREE-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
00002C8 5E60 1030            00030  3351     333.              AL    RX,REQSRCH              Update number of cells srched
 0002CC 5060 1030            00030  3352     334.              ST    RX,REQSRCH              |
 0002D0 941F C068      00010        3353     335.              CLEAR ALL*MLOW*MHIGH          RESET FLAGS
 0002D4 1940/4770 A134       002DE  3367     336.              IF   (SCUR,EQ,SNEW),'SET ALL' ALL SPACE IS TAKEN
 0002DA 9620 C068      00010        3388             +
00002DE 91C0 102A      0002A        3394     338.              IF    (FIX+BDPAGE),BEGIN      CHECK PAGE XING IF NECESSARY
 0002E2 4780 A1D4            0037E  3407             +
 0002E6 1863                        3412  1  339.                LR    RX,CUR                  Compute 1st & last bytes
 0002E8 1A64                        3413  1  340.                AR    RX,SCUR                 | if alloc @ end of block
 0002EA 1876                        3414  1  341.                LR    RY,RX                   |
 0002EC 0660                        3415  1  342.                DECR  RX                      | last byte
 0002EE 1B70                        3417  1  343.                SR    RY,SNEW                 | 1st byte
 0002F0 1857                        3418  1  344.                LR    NEW,RY                  | NEW = ADDR, SNEW = LENGTH
 0002F2 5470 A742            008EC  3419  1  345.                N     RY,=A(PGALIGN)          | start page
 0002F6 5460 A742            008EC  3420  1  346.                N     RX,=A(PGALIGN)          | stop page
 0002FA 1967/4770 A16E       00318  3421  1  347.                IF    (RX,EQ,RY),BEGIN        ALLOC AT HIGH END OF BLOCK
 000300 9120 C068      00010        3436  2  348.                  IF    ALL,EXIT                DON'T LINK IF BLOCK ALL TAKEN
 000304 4710 A16E            00318  3448  2          +
 000308 9680 C068      00010        3454  2  349.                  SET   MLOW                    MEM LEFT AT LOW END OF BLOCK
 00030C 1864                        3460  2  350.                  LR    RX,SCUR                 Size remaining after alloc
 00030E 1B60                        3461  2  351.                  SR    RX,SNEW                 |
 000310 5060 C05C            00004  3462  2  352.                  ST    RX,LOWLEN               | save size
 000314 5030 C058            00000  3463  2  353.                  ST    CUR,LOWADD              |  and address for link
 000318 A172           00318 002FE  3464  1  354.                END   ELSE,BEGIN              LOOK TO RESERVE MEM AT LOW END
 000318 47F0 A1D4            0037E  3473  1          +
 00031C 1853                        3479  2  355.                  LR    NEW,CUR                 NEW = ADDR, SNEW = LENGTH
 00031E 1863                        3480  2  356.                  LR    RX,CUR                  First and last bytes if alloc
 000320 1873                        3481  2  357.                  LR    RY,CUR                  | at low end of block
 000322 1A70                        3482  2  358.                  AR    RY,SNEW                 | Address to link will be
 000324 5070 C060            00008  3483  2  359.                  ST    RY,HIADD                |  1 past last byte
 000328 0670                        3484  2  360.                  DECR  RY                      | last byte
 00032A 5460 A742            008EC  3486  2  361.                  N     RX,=A(PGALIGN)          | start page
 00032E 5470 A742            008EC  3487  2  362.                  N     RY,=A(PGALIGN)          | stop page
 000332 1967/4770 A19A       00344  3488  2  363.                  IF    (RX,EQ,RY),BEGIN        ALLOC AT LOW END OF BLOCK
 000338 9640 C068      00010        3503  3  364.                    SET   MHIGH                   MEM LEFT AT HIGH END OF BLOCK
 00033C 1864                        3509  3  365.                    LR    RX,SCUR                 Length remaining to link
 00033E 1B60                        3510  3  366.                    SR    RX,SNEW                 |
 000340 5060 C064            0000C  3511  3  367.                    ST    RX,HILEN                |
 000344 A19E           00344 00336  3512  2  368.                  END   ELSE,BEGIN              LOOK IN THE MIDDLE OF A BLOCK
 000344 47F0 A1D4            0037E  3521  2          +
 000348 1863                        3527  3  369.                    LR    RX,CUR                  Round up to next page boundary
 00034A 5A60 A746            008F0  3528  3  370.                    A     RX,=A(CPAGE-1)          |
 00034E 5460 A742            008EC  3529  3  371.                    N     RX,=A(PGALIGN)          |
 000352 1856                        3530  3  372.                    LR    NEW,RX                  | NEW = ADDR, SNEW = LENGTH
 000354 1A60                        3531  3  373.                    AR    RX,SNEW                 | last byte+1
 000356 5060 C060            00008  3532  3  374.                    ST    RX,HIADD                | potential high addr to link
 00035A 1873                        3533  3  375.                    LR    RY,CUR                  | last byte+1 of current seg
 00035C 1A74                        3534  3  376.                    AR    RY,SCUR                 |
 00035E 1967/4730 A1D4       0037E  3535  3  377.                    IF    (RX,LE,RY),BEGIN        SPACE FOUND IN MIDDLE OF BLOCK
 000364 9640 C068      00010        3550  4  378.                      SET   MHIGH                   High end space to link
 000368 1B76                        3556  4  379.                      SR    RY,RX                   | save size
 00036A 5070 C064            0000C  3557  4  380.                      ST    RY,HILEN                |  (addr already saved)
 00036E 9680 C068      00010        3558  4  381.                      SET   MLOW                    Low end space to link
1MEMSERV  (MEMS00) (09:41) (22MAR04) Memget                                                                                 Page   28
0Current Usings:  (MEMCTL,R1) (LAST,R2) (CURRENT,R3) (NEWCHAIN,R5) (RXCHAIN,R6) (RTCB,R9) (MEMGET,R10) (@MEMGET-72,R12) (@MEMFREE-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000372 5030 C058            00000  3564  4  382.                      ST    CUR,LOWADD              | save address
 000376 1865                        3565  4  383.                      LR    RX,NEW                  | and length
 000378 1B63                        3566  4  384.                      SR    RX,CUR                  |
 00037A 5060 C05C            00004  3567  4  385.                      ST    RX,LOWLEN               |
 00037E A090           0037E 00362  3568  3  386.                    END   ELSE,LOOK               NO ALLOC POSSIBLE, KEEP LOOKING
 00037E                             3577  2  387.                  END   ,
 00037E                             3581  1  388.                END   ,
 00037E A1D8           0037E 002E4  3585     389.              END   ELSE,BEGIN              END OF PAGE CROSSING CHECK
 00037E 47F0 A1FC            003A6  3594             +
 000382 9120 C068      00010        3600  1  390.                IF    ALL,'LR NEW,CUR'        NEW=ADDR, SNEW=LEN; DON'T LINK
 000386 47E0 A1E2/1853       0038C  3610  1          +
 00038C A1E6           0038C 00388  3621  1  391.                ELSE  BEGIN                   LINK MEMORY LEFT OVER
 00038C 47F0 A1FC            003A6  3626  1          +
 000390 9680 C068      00010        3632  2  392.                  SET   MLOW                    MEM REMAINS AT LOW END OF BLOCK
 000394 1864                        3638  2  393.                  LR    RX,SCUR                 COMPUTE SIZE OF LEFT OVER
 000396 1B60                        3639  2  394.                  SR    RX,SNEW                 |
 000398 5060 C05C            00004  3640  2  395.                  ST    RX,LOWLEN               |
 00039C 5030 C058            00000  3641  2  396.                  ST    CUR,LOWADD              ADDRESS OF LEFT OVER BLOCK
 0003A0 1853                        3642  2  397.                  LR    NEW,CUR                 COMPUTE ADDRESS OF ALLOC BLOCK
 0003A2 1A54                        3643  2  398.                  AR    NEW,SCUR                |
 0003A4 1B50                        3644  2  399.                  SR    NEW,SNEW                NEW = ADDR, SNEW = LENGTH
 0003A6                             3645  1  400.                END   ,
 0003A6                             3649     401.              END   ,
 0003A6 5050 C048            00000  3653     402.              ST    NEW,@MGLOC              Here's the memory (Location)
 0003AA 5000 C04C            00004  3654     403.              ST    SNEW,@MGLEN             | Length
                                    3655     404.
 0003AE 5860 101C            0001C  3656     405.              L     RX,MEMFRE               GET AMT OF FREE MEM REMAINING
 0003B2 1B60                        3657     406.              SR    RX,SNEW                 SUBTRACT CUR ALLOCATED AMOUNT
 0003B4 5060 101C            0001C  3658     407.              ST    RX,MEMFRE               STORE ADJUSTED VALUE
                                    3659     408.     *
                                    3660     409.     *  Delete BEST-FIT link
 0003B8 5820 3010            00010  3661     410.              L     LAS,CURBBAC             BEST-FIT PREV ELEM
 0003BC 5850 300C            0000C  3662     411.              L     NEW,CURBFWD             BEST-FIT NEXT ELEM
 0003C0 5050 200C            0000C  3663     412.              ST    NEW,LASBFWD             LAST NOW POINTS TO NEXT
 0003C4 5020 5010            00010  3664     413.              ST    LAS,NEWBBAC             NEXT NOW POINTS TO LAST
                                    3665     414.     *
                                    3666     415.     *  Delete FIRST-FIT link now
 0003C8 5820 3008            00008  3667     416.              L     LAS,CURFBAC             FIRST-FIT PREV ELEM
 0003CC 5850 3004            00004  3668     417.              L     NEW,CURFFWD             FIRST-FIT NEXT ELEM
 0003D0 5050 2004            00004  3669     418.              ST    NEW,LASFFWD             LAST NOW POINTS TO NEXT
 0003D4 5020 5008            00008  3670     419.              ST    LAS,NEWFBAC             NEXT NOW POINTS TO LAST
 0003D8 9120 C068      00010        3671     420.              IF    ALL,'DECR RX,DEPTH'     ONE LESS FRAGMENT
 0003DC 47E0 A240            003EA  3681             +
 0003E0 5860 1044/0660       00044  3689  1          +
 0003E6 5060 1044            00044  3691             +
 0003EA A244           003EA 003DE  3696     421.              ELSEIF MLOW*MHIGH,'INCR RX,DEPTH'      ONE MORE FRAGMENT
 0003EA 47F0 A258            00402  3702             +
 0003EE 91C0 C068      00010        3717             +
 0003F2 47E0 A258            00402  3718             +
 0003F6 4160 0001            00001  3727  1          +
 0003FA 5E60 1044            00044  3728  1          +
 0003FE 5060 1044            00044  3729             +
 000402 9180 C068      00010        3734     422.              IF    MLOW,BEGIN              IF LOW BLOCK LEFT OVER, LINK IT
 000406 47E0 A282            0042C  3744             +
1MEMSERV  (MEMS00) (09:41) (22MAR04) Memget                                                                                 Page   29
0Current Usings:  (MEMCTL,R1) (LAST,R2) (CURRENT,R3) (NEWCHAIN,R5) (RXCHAIN,R6) (RTCB,R9) (MEMGET,R10) (@MEMGET-72,R12) (@LINK-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0DROP   @MEMFREE-72,R13             3749  1  423.                PSET  @LINK                   | Parameters
 USING  @LINK-72,R13
 00040A D717 D048 D048 00000 00000  3769  1          +
 000410 5010 D048            00000  3770  1  424.                ST    CTL,@LNKCTL             | Control block address
 000414 D207 D050 C058 00008 00000  3771  1  425.                MVC   @LNKLL,LOWADD           | Loc/Len
 00041A 5020 D058            00010  3772  1  426.                ST    LAS,@LNKLAS             | Previous cell
 00041E 5050 D05C            00014  3773  1  427.                ST    NEW,@LNKNEW             | Next cell
 000422 41F0 A324/0DEF       004CE  3774  1  428.                LCALL LINK                    |
 000428 5820 C058            00000  3783  1  429.                L     LAS,LOWADD              | Becomes LASt for HIADD block
 00042C                             3784     430.              END   ,
 00042C 9140 C068      00010        3788     431.              IF    MHIGH,BEGIN             IF HIGH BLK LEFT OVER, LINK IT
 000430 47E0 A2A8            00452  3798             +
 000434                             3803  1  432.                PSET  @LINK                   | Parameters
 000434 D717 D048 D048 00000 00000  3813  1          +
 00043A 5010 D048            00000  3814  1  433.                ST    CTL,@LNKCTL             | Control block address
 00043E D207 D050 C060 00008 00008  3815  1  434.                MVC   @LNKLL,HIADD            | Loc/Len
 000444 5020 D058            00010  3816  1  435.                ST    LAS,@LNKLAS             | Previous cell
 000448 5050 D05C            00014  3817  1  436.                ST    NEW,@LNKNEW             | Next cell
 00044C 41F0 A324/0DEF       004CE  3818  1  437.                LCALL LINK                    |
 000452                             3827     438.              END   ,
 000452 9120 102A      0002A        3831     439.              IF    ~FRECALL,BEGIN          NOT RELEASING MEMORY TO OS
 000456 4710 A30A            004B4  3841             +
 00045A 5860 C048            00000  3846  1  440.                L     RX,@MGLOC               DEST ADDRESS
 00045E 5870 C04C            00004  3847  1  441.                L     RY,@MGLEN               DEST LENGTH
 000462 1B33                        3848  1  442.                CLEAR (RB)                    SOURCE LEN & PAD
 000464 0E62                        3852  1  443.                MVCL  RX,RA                   CLEAR IT
                                    3853  1  444.     *  Do statistics
 000466 5860 1044            00044  3854  1  445.                L     RX,DEPTH                -S>SAVE CURRENT DEPTH COUNT
 00046A 5960 1048            00048  3855  1  446.                STMAX RX,MAXDEP               -S>SAVE MAXIMUM DEPTH TOO
 00046E 47D0 A2CC            00476  3860  1          +
 000472 5060 1048            00048  3861  1          +
 000476 5860 1018            00018  3862  1  447.                L     RX,MEMSIZ               -S>CUR SIZE OF CONTROL BLOCK
 00047A 5960 104C            0004C  3863  1  448.                STMAX RX,MAXSIZ               -S>SAVE MAX SIZE OF CTL BLOCK
 00047E 47D0 A2DC            00486  3868  1          +
 000482 5060 104C            0004C  3869  1          +
 000486 5820 1010            00010  3870  1  449.                L     LAS,HEADBBAC            -S>LAST FRAGMENT IS LARGEST
 00048A D203 1050 2000 00050 00000  3871  1  450.                MVC   MAXFRAG,LASSIZ          -S>
 000490                             3872  1  451.                IF    (MAXFRAG,LT,MEMINC),'CLEAR MEMFGINC'    -S>NONE >= INC
 000490 D503 1050 1020 00050 00020  3884  1          +
 000496 47B0 A2F4            0049E  3885  1          +
 00049A 94F7 102A      0002A        3897  1          +
                                    3902  1  452.     *--------------------------------------
                                    3903  1  453.     *   Release lock if global transaction
                                    3904  1  454.     *--------------------------------------
 00049E 9102 C051      00009        3905  1  455.                IF    MGGLOB,BEGIN            Release global lock
 0004A2 47E0 A30A            004B4  3915  1          +
 0004A6 5800 1014            00014  3920  2  456.                  LOCKRL MEMPLOCK               |
 DROP   @LINK-72,R13
 USING  @LOCKS-72,R13
 0004AA 5000 D048            00000  3939  2          +
 0004AE 58F0 A74A/0DEF       008F4  3942  2          +
 0004B4                             3944  1  457.                END   ,                       OF Release global lock
 0004B4                             3948     458.              END   ,                       OF NOT RELEASING MEMORY TO OS
 0004B4 5800 C048            00000  3952     459.              L     RVR,@MGLOC
1MEMSERV  (MEMS00) (09:41) (22MAR04) Memget                                                                                 Page   30
0Current Usings:  (MEMCTL,R1) (LAST,R2) (CURRENT,R3) (NEWCHAIN,R5) (RXCHAIN,R6) (RTCB,R9) (@LOCKS-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
00004B8 981F C008            00008  3953     460.     MEMGETX  PEND  ,
 DROP   @MEMGET-72,R12
 DROP   MEMGET,R10
 0004BC 9680 C000/0B0E 00000        3969             +
 DROP   @LOCKS-72,R13
 DROP   MEMCTL,R1                   3978     461.              DROP  MEMCTL
1MEMSERV  (MEMS00) (09:41) (22MAR04) Internal Link w/out Collapse                                                           Page   31
0Current Usings:  (LAST,R2) (CURRENT,R3) (NEWCHAIN,R5) (RXCHAIN,R6) (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   3987     463.     *********************************************************************
                                    3988     464.     *                   Internal memory link routine                    *
                                    3989     465.     *                                                                   *
                                    3990     466.     *   Input - @LINK                                                   *
                                    3991     467.     *                                                                   *
                                    3992     468.     *  Output - @LINK:                                                  *
                                    3993     469.     *           @LNKLOC points to the start of the block that was just  *
                                    3994     470.     *           linked (after possible collapse)                        *
                                    3995     471.     *********************************************************************
00004C2                             3997     473.     LINK     PROC  @LINK
 0004C2 D3C9D5D240404040            4002             +
 0004CA 0018/0000                   4003             +
 0004CE 900F D004/18AF       00004  4005             +
 USING  LINK,R10
 0004D4 50D0 C000/18CD       00000  4020             +
 0004DA 9680 C000      00000        4022             +
 USING  @LINK-72,R12
 0004DE 41D0 C060            00060  4036             +
 0004E2 5830 C050            00008  4037     474.              L     CUR,@LNKLOC             Current
 0004E6 D203 3000 C054 00000 0000C  4038     475.              MVC   CURSIZ,@LNKLEN          Save size in block
                                    4039     476.     *  Link first-fit
 0004EC 5820 C058            00010  4040     477.              L     LAS,@LNKLAS             Previous
 0004F0 5850 C05C            00014  4041     478.              L     NEW,@LNKNEW             Next
 0004F4 5020 3008            00008  4042     479.              ST    LAS,CURFBAC             CUR POINTS BACK TO LAST
 0004F8 5050 3004            00004  4043     480.              ST    NEW,CURFFWD             CUR POINTS FWD TO NEW
 0004FC 5030 5008            00008  4044     481.              ST    CUR,NEWFBAC             NEW POINTS BACK TO LAST
 000500 5030 2004            00004  4045     482.              ST    CUR,LASFFWD             LAST POINTS FWD TO CUR
                                    4046     483.     *  Link best-fit
 000504 5850 C048            00000  4047     484.              L     NEW,@LNKCTL             Header is 1st block ptr
 000508                             4048     485.              LOOP  BEGIN
 000508 1825                        4054  1  486.                LR    LAS,NEW                 ADVANCE POINTER
 00050A 5850 200C            0000C  4055  1  487.                L     NEW,LASBFWD             NEXT IN BEST FIT LIST
 00050E 5800 5000            00000  4056  1  488.                L     SNEW,NEWSIZ             GET SIZE
                                    4057  1  489.     *  If sized are equal, then sort by address, highest first.
                                    4058  1  490.     *    Because the size in the header chain is zero, SCUR won't equal
                                    4059  1  491.     *    SNEW if SNEW is the anchor of the chains
                                    4060  1  492.   C            UNTIL (((SCUR,EQ,SNEW),AND,(CUR,GT,NEW)),OR,
 000512 1940/4770 A050       0051E           493.                    (SCUR,LT,SNEW),OR,(SNEW,ZERO)),END
 000518 1935/4720 A05C       0052A  4090             +
 00051E 1940/4740 A05C       0052A  4102             +
 000524 1200/4770 A03A       00508  4113             +
                                    4122     494.     *  Insert CUR between LAS and NEW if @ end of list, or in sorted pos
 00052A 5050 300C            0000C  4123     495.              ST    NEW,CURBFWD             CUR POINTS FWD TO NEW
 00052E 5030 5010            00010  4124     496.              ST    CUR,NEWBBAC             NEW POINTS BACK TO CUR
 000532 5020 3010            00010  4125     497.              ST    LAS,CURBBAC             CUR POINTS BACK TO LAS
 000536 5030 200C            0000C  4126     498.              ST    CUR,LASBFWD             LAS POINTS FWD TO CUR
 00053A 981F C008            00008  4127     499.              PEND  ,
 DROP   @LINK-72,R12
 DROP   LINK,R10
 00053E 9680 C000/0B0E 00000        4142             +
1MEMSERV  (MEMS00) (09:41) (22MAR04) Memfree                                                                                Page   32
0Current Usings:  (LAST,R2) (CURRENT,R3) (NEWCHAIN,R5) (RXCHAIN,R6) (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   4149     501.     *********************************************************************
                                    4150     502.     *               ORVYL memory management - free memory               *
                                    4151     503.     *                                                                   *
                                    4152     504.     *   Input - @MEMFREE                                                *
                                    4153     505.     *                                                                   *
                                    4154     506.     *  Output - @MEMFREE:                                               *
                                    4155     507.     *           @MFLOC points to block just linked                      *
                                    4156     508.     *                                                                   *
                                    4157     509.     *********************************************************************
0000544                             4159     511.     MEMFREE  PROC  @MEMFREE,SCOPE=GLOBAL
 000544 D4C5D4C6D9C5C540            4165             +
 00054C 0010/0000                   4166             +
 000550 900F D004/18AF       00004  4168             +
 USING  MEMFREE,R10
 000556 50D0 C000/18CD       00000  4183             +
 00055C 9680 C000      00000        4185             +
 USING  @MEMFREE-72,R12
 000560 41D0 C058            00058  4199             +
                                    4200     512.     *        TRCE  MEMFREE
                                    4201     513.     *  Choose proper pool
 000564 9102 C051      00009        4202     514.              IF    MFGLOB,BEGIN            Global request
 000568 47E0 A024            00574  4212             +
 00056C 5810 9004            00004  4217  1  515.                L     CTL,RTCBCBAT            | Memory control location
 000570 5810 1040            00040  4218  1  516.                WITH  (CBAT,CTL),'L CTL,CBATMEM'
 USING  CBAT,R1
 DROP   CBAT,R1
 000574 A028           00574 0056A  4242     517.              END   ELSE,BEGIN              Local request
 000574 47F0 A02C            0057C  4251             +
 000578 5810 909C            0009C  4257  1  518.                L     CTL,RTCBMEM             |
 00057C                             4258     519.              END   ,                       OF Local request
 00057C 4860 C050            00008  4262     520.              LH    RX,@MFTYPE              Index into pool type
 000580 5460 A3A8            008F8  4263     521.              N     RX,=A(L'MFA16M+L'MFFIX+L'MFPAG)
 000584 5816 1000            00000  4264     522.              L     CTL,@CTL(RX)            |
 USING  MEMCTL,R1                   4265     523.              USING MEMCTL,CTL
                                    4274     524.
 000588 9110 102A      0002A        4275     525.              IF    ~GETCALL,BEGIN          Not an internal call
 00058C 4710 A062            005B2  4285             +
 000590 4160 0001            00001  4290  1  526.                INCR  RX,MEMREL               -S> ONE MORE RELEASE
 000594 5E60 1034            00034  4294  1          +
 000598 5060 1034            00034  4295  1          +
 00059C 9102 C051      00009        4296  1  527.                IF    MFGLOB,BEGIN            Get global lock
 0005A0 47E0 A062            005B2  4306  1          +
 0005A4 5800 1014            00014  4311  2  528.                  LOCKOB MEMPLOCK               |
 USING  @LOCKS-72,R13
 0005A8 5000 D048            00000  4327  2          +
 0005AC 58F0 A390/0DEF       008E0  4330  2          +
 0005B2                             4332  1  529.                END   ,                       OF Get global lock
 0005B2                             4336     530.              END   ,                       OF Not an internal call
 0005B2 4160 0001            00001  4340     531.              INCR  RX,DEPTH                ANOTHER FRAGMENT
 0005B6 5E60 1044            00044  4344             +
 0005BA 5060 1044            00044  4345             +
 0005BE 5860 1018            00018  4346     532.              L     RX,MEMSIZ               COMPUTE SIZ OF ALLOC MEM
 0005C2 5B60 101C            0001C  4347     533.              S     RX,MEMFRE               |
1MEMSERV  (MEMS00) (09:41) (22MAR04) Memfree                                                                                Page   33
0Current Usings:  (MEMCTL,R1) (LAST,R2) (CURRENT,R3) (NEWCHAIN,R5) (RXCHAIN,R6) (RTCB,R9) (MEMFREE,R10) (@MEMFREE-72,R12) (@LOCKS-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
00005C6 5800 C04C            00004  4348     534.              L     SNEW,@MFLEN             Released length
 0005CA 1200/47D0 A08E       005DE  4349     535.              IF    ((SNEW,NPOS),OR,(~GETCALL,AND,(SNEW,GT,RX))),BEGIN
 0005D0 9110 102A      0002A        4373             +
 0005D4 4710 A092/1906       005E2  4374             +
 0005DA 47D0 A092            005E2  4386             +
 0005DE 4DE0 A2DC            0082C  4391  1  536.                BAS   RAR,MEMKAPUT
 0005E2                             4392     537.              END   ,
 0005E2 5A00 1024/0600       00024  4396     538.              RNDUP SNEW,MEMLOW,TREG=CUR    ROUND UP TO MINIMUM ALLOC SIZE
 0005E8 5830 1024/1333       00024  4401             +
 0005EE 1403                        4403             +
 0005F0 5850 C048            00000  4405     539.              L     NEW,@MFLOC              NEW BLOCK IS ONE TO BE LINKED
 0005F4 1875                        4406     540.              LR    RY,NEW                  CHECK FOR ADDRESS BOUNDARY
 0005F6 5830 1024            00024  4407     541.              L     CUR,MEMLOW              |
 0005FA 1333                        4408     542.              LCR   CUR,CUR                 |
 0005FC 1453                        4409     543.              NR    NEW,CUR                 |
 0005FE 1957/4770 A0BA       0060A  4410     544.              IF    ((NEW,NE,RY),OR,(NEW,NPOS)),BEGIN
 000604 1255/4720 A0BE       0060E  4432             +
 00060A 4DE0 A2DC            0082C  4438  1  545.                BAS   RAR,MEMKAPUT
 00060E                             4439     546.              END   ,
 00060E 1831                        4443     547.              LR    CUR,CTL                 FIRST BLOCK IS HEADER
 000610                             4444     548.              LOOP  BEGIN
 000610 1823                        4450  1  549.                LR    LAS,CUR                 ADVANCE POINTER BY ONE LINK
 000612 5830 2004            00004  4451  1  550.                L     CUR,LASFFWD             UPDATE POINTER TO CURRENT LINK
 000616 1953/4740 A0D6       00626  4452     551.              UNTIL ((NEW,LT,CUR),OR,(CURSIZ,ZERO)),END
 00061C D603 3000 3000 00000 00000  4481             +
 000622 4770 A0C0            00610  4484             +
 000626                             4490     552.              IF    (CURSIZ,NZ),BEGIN       ONLY CHECK IF NON-NIL CHAIN
 000626 D603 3000 3000 00000 00000  4500             +
 00062C 4780 A100            00650  4501             +
                                    4506  1  553.     *   If the block being freed starts before the previous free block
                                    4507  1  554.     * ends, or ends after the next free block starts, then it is an
                                    4508  1  555.     * error.
 000630 1862                        4509  1  556.                LR    RX,LAS
 000632 5A60 2000            00000  4510  1  557.                A     RX,LASSIZ
 000636 1956/47B0 A0F0       00640  4511  1  558.                IF    (NEW,LT,RX),BEGIN       BLK STARTS BEFORE PREV ENDS
 00063C 4DE0 A2DC            0082C  4526  2  559.                  BAS   RAR,MEMKAPUT
 000640                             4527  1  560.                END   ,                       OF BLK STARTS BEFORE PREV ENDS
 000640 1873                        4531  1  561.                LR    RY,CUR                  Check: blk end after nxt start
 000642 1865                        4532  1  562.                LR    RX,NEW                  |
 000644 1A60                        4533  1  563.                AR    RX,SNEW                 |
 000646 1967/47D0 A100       00650  4534  1  564.                IF    (RX,GT,RY),BEGIN        BLK ENDS AFTER START OF NEXT
 00064C 4DE0 A2DC            0082C  4549  2  565.                  BAS   RAR,MEMKAPUT            MEMOVER
 000650                             4550  1  566.                END   ,                       OF BLK ENDS AFTER START OF NEXT
 000650                             4554     567.              END   ,                       OF ONLY CHECK IF NON-NIL CHAIN
                                    4558     568.     *
                                    4559     569.     *  INSERT IF BEFORE CURRENT ADDRESS OR IF AT END OF LIST
 000650 5030 5004            00004  4560     570.              ST    CUR,NEWFFWD             NEW NOW POINTS AHEAD TO CUR
 000654 5050 3008            00008  4561     571.              ST    NEW,CURFBAC             CUR POINTS BACK TO NEW
 000658 5050 2004            00004  4562     572.              ST    NEW,LASFFWD             LAST NOW POINTS FWD TO NEW BLK
 00065C 5020 5008            00008  4563     573.              ST    LAS,NEWFBAC             NEW POINTS BACK TO LAS
 000660 5000 5000            00000  4564     574.              ST    SNEW,NEWSIZ             STORE SIZE OF BLOCK IN BLOCK
 000664 1835                        4565     575.              LR    CUR,NEW                 NOW IT'S INSERTED AND CUR BLOCK
 000666 1860                        4566     576.              LR    RX,SNEW                 TOTAL UP AMOUNT OF FREE MEMORY
 000668 5A60 101C            0001C  4567     577.              A     RX,MEMFRE               | add to this block
1MEMSERV  (MEMS00) (09:41) (22MAR04) Memfree                                                                                Page   34
0Current Usings:  (MEMCTL,R1) (LAST,R2) (CURRENT,R3) (NEWCHAIN,R5) (RXCHAIN,R6) (RTCB,R9) (MEMFREE,R10) (@MEMFREE-72,R12) (@LOCKS-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
000066C 5060 101C            0001C  4568     578.              ST    RX,MEMFRE               | save in ctl block
                                    4569     579.     *  TEST TO COLLAPSE LOW END
 000670 1862                        4570     580.              LR    RX,LAS                  ADDRESS OF LAST BLOCK
 000672 5A60 2000            00000  4571     581.              A     RX,LASSIZ               ADD SIZE OF BLOCK
 000676 1963/4770 A166       006B6  4572     582.              IF    (RX,EQ,CUR),BEGIN       BLOCKS ADJACENT, COLLAPSE
 00067C 5870 1044/0670       00044  4587  1  583.                DECR  RY,DEPTH                ONE LESS FRAGMENT
 000682 5070 1044            00044  4591  1          +
 000686 D203 2004 3004 00004 00004  4592  1  584.                MVC   LASFFWD,CURFFWD         LAST POINTS TO NEXT
 00068C 5860 3004            00004  4593  1  585.                L     RX,CURFFWD              GET ADDRESS OF NEXT BLOCK
 000690 5020 6008            00008  4594  1  586.                ST    LAS,RXFBAC              NEXT BLK POINTS BACK PAST MERGE
 000694 5860 2000            00000  4595  1  587.                L     RX,LASSIZ               SIZE OF LAST
 000698 5A60 3000            00000  4596  1  588.                A     RX,CURSIZ               ADD SIZE OF CUR TO GET TOTAL
 00069C 5060 2000            00000  4597  1  589.                ST    RX,LASSIZ               STORE SIZE IN BLOCK
                                    4598  1  590.     *  DELETE THIS LINK FROM BEST-FIT LIST
 0006A0 5860 2010            00010  4599  1  591.                L     RX,LASBBAC              PREVIOUS ELEM IN BEST-FIT LIST
 0006A4 D203 600C 200C 0000C 0000C  4600  1  592.                MVC   RXBFWD,LASBFWD          LAST NOW POINTS TO NEXT
 0006AA 5850 200C            0000C  4601  1  593.                L     NEW,LASBFWD             BEST-FIT NEXT ELEM
 0006AE D203 5010 2010 00010 00010  4602  1  594.                MVC   NEWBBAC,LASBBAC         NEXT NOW POINTS TO LAST
 0006B4 1832                        4603  1  595.                LR    CUR,LAS                 AFTER COLLPSE CUR IS OLD LAST
 0006B6                             4604     596.              END   ,                       OF BLOCKS ADJACENT, COLLAPSE
                                    4608     597.     *  TEST TO COLLAPSE HIGH END
 0006B6 1853                        4609     598.              LR    NEW,CUR                 GET ADDRESS OF CURRENT
 0006B8 5A50 3000            00000  4610     599.              A     NEW,CURSIZ              ADD SIZE OF CUR (ADDR OF ADJ)
 0006BC 5860 3004            00004  4611     600.              L     RX,CURFFWD              LOAD POINTER TO NEXT
 0006C0 1956/4770 A1AE       006FE  4612     601.              IF    (NEW,EQ,RX),BEGIN       BLOCKS ADJACENT, COLLAPSE
 0006C6 5870 1044/0670       00044  4627  1  602.                DECR  RY,DEPTH                ONE LESS FRAGMENT
 0006CC 5070 1044            00044  4631  1          +
 0006D0 D203 3004 5004 00004 00004  4632  1  603.                MVC   CURFFWD,NEWFFWD         CUR BLOCK POINTS PAST NEXT
 0006D6 5860 5004            00004  4633  1  604.                L     RX,NEWFFWD              ADDRESS OF ELEM PAST MERGE
 0006DA 5030 6008            00008  4634  1  605.                ST    CUR,RXFBAC              NEXT BLK POINTS BACK PAST MERGE
 0006DE 5840 3000            00000  4635  1  606.                L     SCUR,CURSIZ             GET SIZE OF CUR
 0006E2 5A40 5000            00000  4636  1  607.                A     SCUR,NEWSIZ             ADD SIZE OF NEXT
 0006E6 5040 3000            00000  4637  1  608.                ST    SCUR,CURSIZ             SAVE SIZE OF BLOCK IN BLOCK
                                    4638  1  609.     *  DELETE THIS BLOCK FROM BEST-FIT LIST
 0006EA 5820 5010            00010  4639  1  610.                L     LAS,NEWBBAC             BEST-FIT PREV ELEM
 0006EE D203 200C 500C 0000C 0000C  4640  1  611.                MVC   LASBFWD,NEWBFWD         LAST NOW POINTS TO NEXT
 0006F4 5860 500C            0000C  4641  1  612.                L     RX,NEWBFWD              BEST-FIT NEXT ELEM
 0006F8 D203 6010 5010 00010 00010  4642  1  613.                MVC   RXBBAC,NEWBBAC          NEXT NOW POINTS TO LAST
 0006FE                             4643     614.              END   ,                       OF BLOCKS ADJACENT, COLLAPSE
                                    4647     615.     *  INSERT BLOCK IN BEST FIT LIST
 0006FE 5840 3000            00000  4648     616.              L     SCUR,CURSIZ             GET SIZE OF BLOCK
 000702 1851                        4649     617.              LR    NEW,CTL                 SET POINTER TO HEAD OF LIST
 000704                             4650     618.              LOOP  BEGIN                   LOOK TO INSERT
 000704 1825                        4656  1  619.                LR    LAS,NEW                 ADVANCE POINTER
 000706 5850 200C            0000C  4657  1  620.                L     NEW,LASBFWD             NEXT IN BEST FIT LIST
 00070A 5800 5000            00000  4658  1  621.                L     SNEW,NEWSIZ             GET SIZE
                                    4659  1  622.     *  If sized are equal, then sort by address, highest first.
                                    4660  1  623.     *    Because the size in the header chain is zero, SCUR won't equal
                                    4661  1  624.     *    SNEW if SNEW is the anchor of the chains
                                    4662  1  625.   C            UNTIL (((SCUR,EQ,SNEW),AND,(CUR,GT,NEW)),OR,
 00070E 1940/4770 A1CA       0071A           626.                    (SCUR,LT,SNEW),OR,(SNEW,ZERO)),END
 000714 1935/4720 A1D6       00726  4692             +
 00071A 1940/4740 A1D6       00726  4704             +
 000720 1200/4770 A1B4       00704  4715             +
1MEMSERV  (MEMS00) (09:41) (22MAR04) Memfree                                                                                Page   35
0Current Usings:  (MEMCTL,R1) (LAST,R2) (CURRENT,R3) (NEWCHAIN,R5) (RXCHAIN,R6) (RTCB,R9) (MEMFREE,R10) (@MEMFREE-72,R12) (@LOCKS-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   4724     627.     *  Insert CUR between LAS and NEW if @ end of list, or in sorted pos
 000726 5050 300C            0000C  4725     628.              ST    NEW,CURBFWD             CUR POINTS FWD TO NEW
 00072A 5030 5010            00010  4726     629.              ST    CUR,NEWBBAC             NEW POINTS BACK TO CUR
 00072E 5020 3010            00010  4727     630.              ST    LAS,CURBBAC             CUR POINTS BACK TO LAS
 000732 5030 200C            0000C  4728     631.              ST    CUR,LASBFWD             LAS POINTS FWD TO CUR
 000736 5030 C048            00000  4729     632.              ST    CUR,@MFLOC              RETURN RECENTLY LINKED MEMORY
1MEMSERV  (MEMS00) (09:41) (22MAR04) Memfree                                                                                Page   36
0Current Usings:  (MEMCTL,R1) (LAST,R2) (CURRENT,R3) (NEWCHAIN,R5) (RXCHAIN,R6) (RTCB,R9) (MEMFREE,R10) (@MEMFREE-72,R12) (@LOCKS-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
000073A 9110 102A      0002A        4731     634.              IF    ~GETCALL,BEGIN          LOOK TO RELEASE TO OS
 00073E 4710 A29A            007EA  4741             +
                                    4746  1  635.     *-----------------------------------------------
                                    4747  1  636.     *  Release memory to OS
                                    4748  1  637.     *-----------------------------------------------
 000742 5840 3000            00000  4749  1  638.                L     SCUR,CURSIZ             CHECK FOR FRAGMENT BIG ENOUGH
 000746 5940 1020            00020  4750  1  639.                IF    (SCUR,GE,MEMINC),'SET MEMFGINC'  |
 00074A 4750 A202            00752  4762  1          +
 00074E 9608 102A      0002A        4773  1          +
 000752 9108 102A      0002A        4778  1  640.                IF    (NOT,MEMFGINC),EXIT     DON'T LOOK TO RELEASE
 000756 47E0 A29A            007EA  4792  1          +
 00075A 5870 101C            0001C  4798  1  641.                L     RY,MEMFRE               AMOUNT OF FREE MEM REMAINING
 00075E 5860 1020            00020  4799  1  642.                L     RX,MEMINC               GET FETCH INCREMENT
 000762 4C60 A3B4            00904  4800  1  643.                MH    RX,=Y(10)               | MULTIPLY BY 10
 000766 8A60 0002            00002  4801  1  644.                SRA   RX,2                    | DIVIDE BY 4 = 2.50*INCR
 00076A 1976/4750 A29A       007EA  4802  1  645.                IF    (RY,GE,RX),BEGIN        IF FREE >= 2.50*INC RELEASE MEM
 000770 5B70 1020            00020  4817  2  646.                  S     RY,MEMINC               NUMBER OF PAGES TO FREE
 000774 5470 A39C            008EC  4818  2  647.                  N     RY,=A(PGALIGN)          |
 000778 9660 102A      0002A        4819  2  648.                  SET   FRECALL*BDPAGE          PUT IN RELEASE MODE/PAGE ALIGN
 00077C                             4828  2  649.                  LOOP  BEGIN                   GET MEM FOR RELEASE
 00077C 4160 0001            00001  4834  3  650.                    INCR  RX,USEFRE               -S>SHOW ATTEMPT TO FREE MEM
 000780 5E60 103C            0003C  4838  3          +
 000784 5060 103C            0003C  4839  3          +
 DROP   @LOCKS-72,R13               4840  3  651.                    PSET  @MEMGET                 GET GEM FROM POOL FOR OS RET
 USING  @MEMGET-72,R13
 000788 D709 D048 D048 00000 00000  4860  3          +
 00078E D201 D050 C050 00008 00008  4861  3  652.                    MVC   @MGTYPE,@MFTYPE         | set pool number/type
 000794 D203 D04C A394 00004 008E4  4862  3  653.                    MVC   @MGLEN,=A(CPAGE)        |
 00079A 58F0 A3AC/0DEF       008FC  4863  3  654.                    ACALL MEMGET                  LOOK FOR MEMORY
 0007A0 9823 D048            00000  4870  3  655.                    LM    RA,RB,@MGLL             Location/Length for OS free
 0007A4 1222/4780 A296       007E6  4871  3  656.                    IF    (RA,ZERO),EXIT          NONE TO RETURN TO SYS
                                    4888  3  657.     *
 DROP   @MEMGET-72,R13              4889  3  658.                    PSET  @MEMORY                 RELEASE PAGE
 USING  @MEMORY-72,R13
 0007AA D70B D048 D048 00000 00000  4909  3          +
 0007B0 5020 D050            00008  4910  3  659.                    ST    RA,@MEMLOC              | Location
 0007B4 5030 D04C            00004  4911  3  660.                    ST    RB,@MEMLEN              | Length
 0007B8 D200 D04A 1029 00002 00029  4912  3  661.                    MVC   @MEMPOOL,MEMFPOOL       | Memory Pool
 0007BE 58F0 A3B0/0DEF       00900  4913  3  662.                    VCALL POOLFREE                |
 0007C4 4160 0001            00001  4917  3  663.                    INCR  RX,SYSFRE               -S>INDICATE SYSTEM FREE MEM
 0007C8 5E60 1040            00040  4921  3          +
 0007CC 5060 1040            00040  4922  3          +
 0007D0 5860 1018            00018  4923  3  664.                    L     RX,MEMSIZ               BLOCK IS ONE PAGE SMALLER NOW
 0007D4 5B60 A394            008E4  4924  3  665.                    S     RX,=A(CPAGE)            |
 0007D8 5060 1018            00018  4925  3  666.                    ST    RX,MEMSIZ               |
 0007DC 5B70 A394            008E4  4926  3  667.                    S     RY,=A(CPAGE)            CHECK FOR MORE TO RELEASE
 0007E0 1277/4720 A22C       0077C  4927  2  668.                  UNTIL (RY,NPOS),END           OF GET MEM FOR RELEASE
 0007E6 9497 102A      0002A        4949  2  669.                  CLEAR FRECALL*BDPAGE*MEMFGINC NO LONGER IN RELEASE MODE
 0007EA                             4963  1  670.                END   ,                       END OF RELEASE MEMORY SECTION
 0007EA                             4967     671.              END   ,                       OF DON'T RELEASE TO SYS NOW
 0007EA 9110 102A      0002A        4971     672.              IF    ~GETCALL,BEGIN          Not an internal call
 0007EE 4710 A2D2            00822  4981             +
 0007F2 5860 1044            00044  4986  1  673.                L     RX,DEPTH                -S>SAVE CURRENT DEPTH COUNT
 0007F6 5960 1048            00048  4987  1  674.                STMAX RX,MAXDEP               -S>SAVE MAXIMUM DEPTH TOO
1MEMSERV  (MEMS00) (09:41) (22MAR04) Memfree                                                                                Page   37
0Current Usings:  (MEMCTL,R1) (LAST,R2) (CURRENT,R3) (NEWCHAIN,R5) (RXCHAIN,R6) (RTCB,R9) (MEMFREE,R10) (@MEMFREE-72,R12) (@MEMORY-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
00007FA 47D0 A2B2            00802  4992  1          +
 0007FE 5060 1048            00048  4993  1          +
 000802 5820 1010            00010  4994  1  675.                L     LAS,HEADBBAC            -S>LAST FRAGMENT IS THE BIGGEST
 000806 D203 1050 2000 00050 00000  4995  1  676.                MVC   MAXFRAG,LASSIZ          -S>|
0                                   4997  1  678.     *--------------------------------------
                                    4998  1  679.     *  Release global lock
                                    4999  1  680.     *--------------------------------------
 00080C 9102 C051      00009        5000  1  681.                IF    MFGLOB,BEGIN            Release global lock
 000810 47E0 A2D2            00822  5010  1          +
 000814 5800 1014            00014  5015  2  682.                  LOCKRL MEMPLOCK               |
 DROP   @MEMORY-72,R13
 USING  @LOCKS-72,R13
 000818 5000 D048            00000  5034  2          +
 00081C 58F0 A3A4/0DEF       008F4  5037  2          +
 000822                             5039  1  683.                END   ,                       OF Release global lock
 000822                             5043     684.              END   ,                       OF Not an internal call
 000822 981F C008            00008  5047     685.              PEND  ,
 DROP   @MEMFREE-72,R12
 DROP   MEMFREE,R10
 000826 9680 C000/0B0E 00000        5062             +
 DROP   @LOCKS-72,R13
 DROP   MEMCTL,R1                   5071     686.              DROP  MEMCTL
-00082C 4110 0001            00001  5080     688.     MEMKAPUT KAPUT MEMKAPUT
 000830 4100 0080            00080  5089             +
 000834 8900 0018/1610       00018  5090             +
 00083A 0A0D                        5092             +
1MEMSERV  (MEMS00) (09:41) (22MAR04) System Memory Allocate                                                                 Page   38
0Current Usings:  (LAST,R2) (CURRENT,R3) (NEWCHAIN,R5) (RXCHAIN,R6) (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   5094     690.     *********************************************************************
                                    5095     691.     *                                                                   *
                                    5096     692.     *                Internal memory allocation from OS                 *
                                    5097     693.     *                                                                   *
                                    5098     694.     *   Input - @MIGET                                                  *
                                    5099     695.     *                -ACTUAL INCREMENT = MAX(MEMINC,PGALIGN(MIGLEN)     *
                                    5100     696.     *                                                                   *
                                    5101     697.     *  Output - @MIGET                                                  *
                                    5102     698.     *                                                                   *
                                    5103     699.     *********************************************************************
000083C                             5105     701.     INTGET   PROC  @MIGET,SCOPE=LOCAL
 00083C C9D5E3C7C5E34040            5110             +
 000844 0010/0000                   5111             +
 000848 900F D004/18AF       00004  5113             +
 USING  INTGET,R10
 00084E 50D0 C000/18CD       00000  5128             +
 000854 9680 C000      00000        5130             +
 USING  @MIGET-72,R12
 000858 41D0 C058            00058  5144             +
 00085C 5820 C048            00000  5145     702.              L     RA,@MIGCTL              Control block address
 DROP   LAST,R2                     5146     703.              USING MEMCTL,RA
 USING  MEMCTL,R2
 000860 4110 0001            00001  5158     704.              INCR  RS,SYSINC               -S>USER CHECK TO INC MEM POOL
 000864 5E10 2038            00038  5162             +
 000868 5010 2038            00038  5163             +
 00086C 5800 C054            0000C  5164     705.              L     RVR,@MIGLEN             SIZE OF INCREMENT
 000870 5900 2020            00020  5165     706.              IF    (MEMINC,GT,RVR),'L RVR,MEMINC '  USE MAX OF TWO
 000874 47B0 A034            0087C  5177             +
 000878 5800 2020            00020  5183             +
 00087C 5A00 A0A8            008F0  5188     707.              A     RVR,=A(CPAGE-1)         ROUND UP INCREMENT TO NEXT PAGE
 000880 5400 A0A4            008EC  5189     708.              N     RVR,=A(PGALIGN)         |
 USING  @MEMORY-72,R13              5190     709.              PSET  @MEMORY                 GET OS MEMORY
 000884 D70B D048 D048 00000 00000  5207             +
 00088A 5000 D04C            00004  5208     710.              ST    RVR,@MEMLEN             | LENGTH
 00088E D200 D04A 2029 00002 00029  5209     711.              MVC   @MEMPOOL,MEMFPOOL       | SET POOL TYPE
 000894 58F0 A07C/0DEF       008C4  5210     712.              VCALL POOLGET                 |
 00089A 5830 D04C            00004  5214     713.              L     RB,@MEMLEN              GET SIZE OF AREA
 00089E 5030 C054            0000C  5215     714.              ST    RB,@MIGLEN              |
 0008A2 5A30 2018            00018  5216     715.              A     RB,MEMSIZ               ADD PREVIOUS SIZE
 0008A6 5030 2018            00018  5217     716.              ST    RB,MEMSIZ               STORE NEW SIZE OF BLOCK
 0008AA D203 C050 D050 00008 00008  5218     717.              MVC   @MIGLOC,@MEMLOC         NEW ADDRESS
 0008B0 981F C008            00008  5219     718.              PEND  ,
 DROP   @MIGET-72,R12
 DROP   INTGET,R10
 0008B4 9680 C000/0B0E 00000        5234             +
 DROP   @MEMORY-72,R13
 DROP   MEMCTL,R2                   5243     719.              DROP  MEMCTL
 0008C0                             5251     720.              LTORG ,
 0008C0 000002C0                    5253                             =A(L'MEMTABLE)
 0008C4 00000000                    5254                             =V(POOLGET)
 0008C8 00000000                    5255                             =V(LOCKCRE)
 0008CC 00001000                    5256                             =A(LPLIMIT)
 0008D0 00000020                    5257                             =A(LLIMIT)
1MEMSERV  (MEMS00) (09:41) (22MAR04) System Memory Allocate                                                                 Page   39
0Current Usings:  (CURRENT,R3) (NEWCHAIN,R5) (RXCHAIN,R6) (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
00008D4 00001000                    5258                             =A(FIXINC)
 0008D8 00003000                    5259                             =A(NFIXINC)
 0008DC 0000001C                    5260                             =A(L'MGA16M+L'MGFIX+L'MGPAG)
 0008E0 00000000                    5261                             =V(LOCKOB)
 0008E4 00001000                    5262                             =A(CPAGE)
 0008E8 00000001                    5263                             =A(1)
 0008EC 7FFFF000                    5264                             =A(PGALIGN)
 0008F0 00000FFF                    5265                             =A(CPAGE-1)
 0008F4 00000000                    5266                             =V(LOCKREL)
 0008F8 0000001C                    5267                             =A(L'MFA16M+L'MFFIX+L'MFPAG)
 0008FC 000001AA                    5268                             =A(MEMGET)
 000900 00000000                    5269                             =V(POOLFREE)
 000904 000A           00906 00908  5270                             =Y(10)
 000908                00908 00908  5274     721.              END   .

1MEMSERV  (MEMS00) (09:41) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   40
-Symbol   Length   Value     Id    R Type   Defn References                                  HLASM R4.0  2004/03/22 09.41
0$$$@R0        1 00000000 FFFFFFFE     J     714 1010  1282
 $$$@R1        1 00000000 FFFFFFFD     J     727 1022  1222
 $$$@R10       1 00000000 FFFFFFF4     J     844 1142
 $$$@R11       1 00000000 FFFFFFF3     J     857 1154
 $$$@R12       1 00000000 FFFFFFF2     J     870 1166
 $$$@R13       1 00000000 FFFFFFF1     J     883 1178
 $$$@R14       1 00000000 FFFFFFF0     J     896 1190
 $$$@R15       1 00000000 FFFFFFEF     J     909 1202
 $$$@R2        1 00000000 FFFFFFFC     J     740 1034  1234
 $$$@R3        1 00000000 FFFFFFFB     J     753 1046  1246
 $$$@R4        1 00000000 FFFFFFFA     J     766 1058  1258
 $$$@R5        1 00000000 FFFFFFF9     J     779 1070  1270
 $$$@R6        1 00000000 FFFFFFF8     J     792 1082
 $$$@R7        1 00000000 FFFFFFF7     J     805 1094
 $$$@R8        1 00000000 FFFFFFF6     J     818 1106
 $$$@R9        1 00000000 FFFFFFF5     J     831 1118  1130
 $$$C1MEMSERV
               1 00000906 00000001     J    5271 5273
 $$$C2MEMSERV
               1 00000908 00000001     J    5277 5279
 $$$R@LINK
               1 00000000 FFFFFFE3     J    2198 2217  2217
 $$$R@LOCKCRE
               1 00000000 FFFFFFE6     J    2033 2055  2055
 $$$R@LOCKS
               1 00000000 FFFFFFE5     J    2061 2074  2074
 $$$R@MEMFREE
               1 00000000 FFFFFFE7     J    1957 2020  2020
 $$$R@MEMGET
               1 00000000 FFFFFFE8     J    1873 1945  1945
 $$$R@MEMINIT
               1 00000000 FFFFFFE9     J    1804 1861  1861
 $$$R@MEMORY
               1 00000000 FFFFFFEC     J    1503 1657  1657
 $$$R@MIGET
               1 00000000 FFFFFFE2     J    2223 2241  2241
 $$$R@TRACE
               1 00000000 FFFFFFE4     J    2087 2192  2192
 $$$RCBAT      1 00000000 FFFFFFED     J    1442 1490  1490
 $$$RCURRENT
               1 00000000 FFFFFFE0     J    2271 2289  2289
 $$$RLAST      1 00000000 FFFFFFE1     J    2247 2265  2265
 $$$RMEMCTL
               1 00000000 FFFFFFEB     J    1666 1770  1770
 $$$RMEMTABLE
               1 00000000 FFFFFFEA     J    1776 1791  1791
 $$$RMEMWORK
               1 00000000 FFFFFFDD     J    2855 2890  2890
 $$$RNEWCHAIN
               1 00000000 FFFFFFDF     J    2295 2313  2313
 $$$RRTCB      1 00000000 FFFFFFEE     J    1353 1418  1418
 $$$RRXCHAIN
               1 00000000 FFFFFFDE     J    2319 2337  2337
 $$$100F       2 00000640 00000001     H    4530 4521B
 $$$101F       2 00000650 00000001     H    4553 4544B
1MEMSERV  (MEMS00) (09:41) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   41
 $$$102F       2 000006B6 00000001     H    4607 4582B
 $$$103F       2 000006FE 00000001     H    4646 4622B
 $$$104F       2 00000726 00000001     H    4721 4695B 4707B
 $$$104S       2 00000704 00000001     H    4654 4718B
 $$$107F       2 0000071A 00000001     H    4698 4681B
 $$$110F       2 000007EA 00000001     H    4970 4741B 4792B
 $$$111F       2 00000752 00000001     H    4777 4762B
 $$$113F       2 000007EA 00000001     H    4966 4812B
 $$$114F       2 000007E6 00000001     H    4946 4882B
 $$$114S       2 0000077C 00000001     H    4832 4943B
 $$$118F       2 00000822 00000001     H    5046 4981B
 $$$119F       2 00000822 00000001     H    5042 5010B
 $$$121F       2 0000087C 00000001     H    5187 5177B
 $$$35F        2 00000048 00000001     H    2482 2467B
 $$$36B        4 00000060 00000001     I    2506 2552
 $$$36F        2 0000006C 00000001     H    2549 2506B 2551
 $$$37E        2 00000070 00000001     H    2559 2553
 $$$37F        2 00000074 00000001     H    2566 2555B
 $$$38F        2 000000AC 00000001     H    2671 2630B
 $$$39B        4 000000B8 00000001     I    2689 2701
 $$$39F        2 000000C2 00000001     H    2698 2689B 2700
 $$$40E        2 000000C6 00000001     H    2708 2702
 $$$40F        2 000000CC 00000001     H    2714 2704B
 $$$41B        4 000000D0 00000001     I    2725 2749
 $$$41F        2 000000E2 00000001     H    2746 2725B 2748
 $$$42E        2 000000E6 00000001     H    2756 2750
 $$$42F        2 000000EC 00000001     H    2762 2752B
 $$$43F        2 000000F8 00000001     H    2788 2773B
 $$$45B        4 000001C2 00000001     I    2951 2987
 $$$45F        2 000001CE 00000001     H    2984 2951B 2986
 $$$46E        2 000001D2 00000001     H    2994 2988
 $$$46F        2 000001D6 00000001     H    3000 2990B
 $$$47F        2 0000020C 00000001     H    3078 3024B
 $$$48F        2 0000020C 00000001     H    3074 3045B
 $$$49F        2 00000238 00000001     H    3141 3131B
 $$$49T        2 00000234 00000001     H    3134 3122B
 $$$50F        2 0000022E 00000001     H    3125 3106B
 $$$52S        2 0000023C 00000001     H    3153 3345B
 $$$53F        2 00000252 00000001     H    3180 3170B
 $$$54F        2 000002BE 00000001     H    3323 3192B
 $$$55F        2 0000026E 00000001     H    3226 3210B
 $$$58F        2 000002DE 00000001     H    3392 3377B
 $$$59B        4 000002E2 00000001     I    3407 3591
 $$$59F        2 0000037E 00000001     H    3588 3407B 3590
 $$$60B        4 000002FC 00000001     I    3431 3470
 $$$60F        2 00000318 00000001     H    3467 3431B 3448B 3469
 $$$62E        2 0000031C 00000001     H    3477 3471
 $$$62F        2 0000037E 00000001     H    3584 3473B
 $$$63B        4 00000334 00000001     I    3498 3518
 $$$63F        2 00000344 00000001     H    3515 3498B 3517
 $$$64E        2 00000348 00000001     H    3525 3519
 $$$64F        2 0000037E 00000001     H    3580 3521B
 $$$65B        4 00000360 00000001     I    3545 3574
 $$$65F        2 0000037E 00000001     H    3571 3545B 3573
 $$$67E        2 00000382 00000001     H    3598 3592
 $$$67F        2 000003A6 00000001     H    3652 3594B
 $$$68B        4 00000386 00000001     I    3610 3623
 $$$68F        2 0000038C 00000001     H    3620 3610B 3622
 $$$69E        2 00000390 00000001     H    3630 3624
1MEMSERV  (MEMS00) (09:41) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   42
 $$$69F        2 000003A6 00000001     H    3648 3626B
 $$$70B        4 000003DC 00000001     I    3681 3699
 $$$70F        2 000003EA 00000001     H    3695 3681B 3698
 $$$71E        2 000003EE 00000001     H    3706 3700
 $$$71F        2 00000402 00000001     H    3733 3702B 3718B
 $$$73F        2 0000042C 00000001     H    3787 3744B
 $$$74F        2 00000452 00000001     H    3830 3798B
 $$$75F        2 000004B4 00000001     H    3951 3841B
 $$$76F        2 0000049E 00000001     H    3901 3885B
 $$$77F        2 000004B4 00000001     H    3947 3915B
 $$$79F        2 0000052A 00000001     H    4119 4093B 4105B
 $$$79S        2 00000508 00000001     H    4052 4116B
 $$$82F        2 0000051E 00000001     H    4096 4079B
 $$$86B        4 00000568 00000001     I    4212 4248
 $$$86F        2 00000574 00000001     H    4245 4212B 4247
 $$$87E        2 00000578 00000001     H    4255 4249
 $$$87F        2 0000057C 00000001     H    4261 4251B
 $$$88F        2 000005B2 00000001     H    4339 4285B
 $$$89F        2 000005B2 00000001     H    4335 4306B
 $$$90F        2 000005E2 00000001     H    4395 4374B 4386B
 $$$90T        2 000005DE 00000001     H    4389 4362B
 $$$93F        2 0000060E 00000001     H    4442 4433B
 $$$93T        2 0000060A 00000001     H    4436 4424B
 $$$95F        2 00000626 00000001     H    4487 4471B
 $$$95S        2 00000610 00000001     H    4448 4484B
 $$$99F        2 00000650 00000001     H    4557 4501B
 @CTL          0 00000000 FFFFFFFD     @    1223 3003  4264
 @LINK        24 00000000 FFFFFFE3     J    2217 3761U 3769M 3769  3813M 3813  4032U
 @LNKCTL       4 00000000 FFFFFFE3     A    2204 3770M 3814M 4047
 @LNKLAS       4 00000010 FFFFFFE3     A    2209 3772M 3816M 4040
 @LNKLEN       4 0000000C FFFFFFE3     A    2208 4038
 @LNKLL        8 00000008 FFFFFFE3     D    2205 2206  3771M 3815M
 @LNKLOC       4 00000008 FFFFFFE3     A    2207 4037
 @LNKNEW       4 00000014 FFFFFFE3     A    2210 3773M 3817M 4041
 @LOCKCRE     17 00000000 FFFFFFE6     J    2055 2653U 2661M 2661
 @LOCKFL       1 00000010 FFFFFFE6     R    2042 2046
 @LOCKID       4 00000000 FFFFFFE5     A    2067 3066M 3939M 4327M 5034M
 @LOCKNAM     16 00000000 FFFFFFE6     C    2039 2662M
 @LOCKS        4 00000000 FFFFFFE5     J    2074 3060U 3933U 4321U 5028U
 @MEMCODE      1 00000003 FFFFFFEC     R    1573 1581  1590  1599  1609  1618  1627  1636  1645
 @MEMFREE     10 00000000 FFFFFFE7     J    2020 3286U 3294M 3294  4195U
 @MEMGET      10 00000000 FFFFFFE8     J    1945 2930U 2937U 4852U 4860M 4860
 @MEMINIT      2 00000000 FFFFFFE9     J    1861 2430U
 @MEMLEN       4 00000004 FFFFFFEC     A    1649 2489M 4911M 5208M 5214
 @MEMLOC       4 00000008 FFFFFFEC     A    1650 2495  4910M 5218
 @MEMORY      12 00000000 FFFFFFEC     J    1657 2448U 2456M 2456  4901U 4909M 4909  5199U 5207M 5207
 @MEMPOOL      1 00000002 FFFFFFEC     R    1514 1522  1531  1540  1549  1558  1567  4912M 5209M
 @MFFTYPE      1 00000009 FFFFFFE7     R    1972 1983  1992  2001  2010
 @MFLEN        4 00000004 FFFFFFE7     A    1966 4348
 @MFLL         8 00000000 FFFFFFE7     D    1963 1964  3295M
 @MFLOC        4 00000000 FFFFFFE7     A    1965 3314  4405  4729M
 @MFTYPE       2 00000008 FFFFFFE7     H    1968 1969  3296M 4262  4861
 @MGFTYPE      1 00000009 FFFFFFE8     R    1891 1899  1908  1917  1926  1935
 @MGLEN        4 00000004 FFFFFFE8     A    1882 3079  3232M 3315  3654M 3847  4862M
 @MGLL         8 00000000 FFFFFFE8     D    1879 1880  4870
 @MGLOC        4 00000000 FFFFFFE8     A    1881 3221M 3221  3653M 3846  3952
 @MGTYPE       2 00000008 FFFFFFE8     H    1884 1888  3001  3296  4861M
 @MIFLAG       1 00000000 FFFFFFE9     R    1812 1816
 @MIGCTL       4 00000000 FFFFFFE2     A    2229 3256M 5145
1MEMSERV  (MEMS00) (09:41) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   43
 @MIGET       16 00000000 FFFFFFE2     J    2241 3246U 3254M 3254  5140U
 @MIGLEN       4 0000000C FFFFFFE2     A    2233 3255M 5164  5215M
 @MIGLL        8 00000008 FFFFFFE2     D    2230 2231  3266  3266
 @MIGLOC       4 00000008 FFFFFFE2     A    2232 5218M
 @MIWFLAG      1 00000001 FFFFFFE9     R    1824 1834  1843  1852  2678M
 @RS           0 00000000 FFFFFFFD     @    1023 2618M
 @R0           0 00000000 FFFFFFFE     @     715  991U
 @R1           0 00000000 FFFFFFFD     @     728  987U 2598U 2979U 3984U 4240U 5077U
 @R10          0 00000000 FFFFFFF4     @     845  951U 2819U 3965U 4138U 5058U 5230U
 @R11          0 00000000 FFFFFFF3     @     858  947U
 @R12          0 00000000 FFFFFFF2     @     871  943U 2814U 3960U 4133U 5053U 5225U
 @R13          0 00000000 FFFFFFF1     @     884  939U 2650U 2830U 3243U 3283U 3758U 3930U 3976U 4849U 4898U 5025U 5069U
                                                 5241U
 @R14          0 00000000 FFFFFFF0     @     897  935U
 @R15          0 00000000 FFFFFFEF     @     910  931U
 @R2           0 00000000 FFFFFFFC     @     741  983U 2521U 2541U 5153U 5249U
 @R3           0 00000000 FFFFFFFB     @     754  979U
 @R4           0 00000000 FFFFFFFA     @     767  975U 2806U
 @R5           0 00000000 FFFFFFF9     @     780  971U
 @R6           0 00000000 FFFFFFF8     @     793  967U
 @R7           0 00000000 FFFFFFF7     @     806  963U
 @R8           0 00000000 FFFFFFF6     @     819  959U
 @R9           0 00000000 FFFFFFF5     @     832  955U
 @TRTYPE       1 00000000 FFFFFFE4     R    2096 2105  2115  2125  2135  2145  2155  2165  2175
 ALL          32 00000010 FFFFFFDD         2881 3363  3363  3364  3364  3366M 3388M 3445  3609  3680
 BDPAGE       64 0000002A FFFFFFEB         1733 3104  3104  3405  3405  4826  4826  4959  4959  4961  4961
 BR           10 0000000A FFFFFFFF A   #    1136 2404M 2414U 2904M 2914U 4006M 4016U 4169M 4179U 5114M 5124U
 CBAT        144 00000000 FFFFFFED     J    1490 2524U 2966U 4227U
 CBATMEM       4 00000040 FFFFFFED     A    1467 2530M 2972  4233
 CPAGE         1 00001000 00000001 A   U    1311 5262  5265
 CTL           1 00000001 FFFFFFFF A   #    1216 2956M 2966U 2972M 2996M 3003M 3011U 3143  3256  3770  3814  4217M 4227U
                                                 4233M 4257M 4264M 4272U 4443  4649
 CUR           3 00000003 FFFFFFFF A   #    1240 2360U 3032M 3033M 3034  3085M 3086M 3086  3087  3143M 3158  3159M 3176M
                                                 3314M 3412  3463  3479  3480  3481  3527  3533  3564  3566  3616  3641
                                                 3642  4037M 4044  4045  4090  4124  4126  4401M 4402M 4402  4403  4407M
                                                 4408M 4408  4409  4443M 4450  4451M 4468  4531  4560  4565M 4581  4603M
                                                 4609  4634  4692  4726  4728  4729
 CURBBAC       4 00000010 FFFFFFE0     F    2282 3661  4125M 4727M
 CURBFWD       4 0000000C FFFFFFE0     F    2281 3662  4123M 4725M
 CURFBAC       4 00000008 FFFFFFE0     F    2280 3667  4042M 4561M
 CURFFWD       4 00000004 FFFFFFE0     F    2279 3668  4043M 4592  4593  4611  4632M
 CURRENT      20 00000000 FFFFFFE0     J    2289 2360U
 CURSIZ        4 00000000 FFFFFFE0     F    2278 3191M 3191  3327  4038M 4481M 4481  4500M 4500  4596  4610  4635  4637M
                                                 4648  4749
 DEPTH         4 00000044 FFFFFFEB     F    1758 3689  3691M 3728  3729M 3854  4344  4345M 4589  4591M 4629  4631M 4986
 EPAR         15 0000000F FFFFFFFF A   #    1196 2404  2492M 2493B 2665M 2666B 2904  3069M 3070B 3264M 3265B 3304M 3305B
                                                 3781M 3782B 3825M 3826B 3942M 3943B 4006  4169  4330M 4331B 4868M 4869B
                                                 4915M 4916B 5037M 5038B 5114  5212M 5213B
 FIX         128 0000002A FFFFFFEB         1728 2735M 3104  3104  3105  3405  3405  3406
 FIXINC        1 00001000 00000001 A   U    2381 5258
 FRECALL      32 0000002A FFFFFFEB         1738 3023  3209  3840  4826  4826  4827M 4959  4959  4960  4960  4962M
 GETCALL      16 0000002A FFFFFFEB         1743 3273M 3313M 4284  4373  4740  4980
 HEADBBAC      4 00000010 FFFFFFEB     F    1677 2794M 3870  4994
 HEADBFWD      4 0000000C FFFFFFEB     F    1676 2793M
 HEADFBAC      4 00000008 FFFFFFEB     F    1675 2792M
 HEADFFWD      4 00000004 FFFFFFEB     F    1674 2791M
 HIADD         4 00000008 FFFFFFDD     F    2863 3266M 3295  3483M 3532M 3815
 HIBAL         1 00000000 FFFFFFFF     J     700  716   729   742   755   768   781   794   807   820   833   846   859
                                                  872   885   898   911  1012  1024  1036  1048  1060  1072  1084  1096
1MEMSERV  (MEMS00) (09:41) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   44
                                                 1108  1120  1132  1144  1156  1168  1180  1192  1204  1224  1236  1248
                                                 1260  1272  1284
 HILEN         4 0000000C FFFFFFDD     F    2864 3511M 3557M
 INDICATE      1 00000010 FFFFFFDD     R    2867 2871  2876  2881
 INTGET        4 00000848 00000001     I    5113 3264  5124U
 LAS           2 00000002 FFFFFFFF A   #    1228 2351U 3158M 3661M 3664  3667M 3670  3772  3783M 3816  3870M 4040M 4042
                                                 4054M 4125  4450M 4509  4563  4570  4594  4603  4639M 4656M 4727  4994M
 LASBBAC       4 00000010 FFFFFFE1     F    2258 4599  4602
 LASBFWD       4 0000000C FFFFFFE1     F    2257 3176  3663M 4055  4126M 4600  4601  4640M 4657  4728M
 LASFFWD       4 00000004 FFFFFFE1     F    2255 3159  3669M 4045M 4451  4562M 4592M
 LASSIZ        4 00000000 FFFFFFE1     F    2254 3871  4510  4571  4595  4597M 4995
 LAST         20 00000000 FFFFFFE1     J    2265 2351U 2544U
 LINK          4 000004CE 00000001     I    4005 3781  3825  4016U
 LLIMIT        1 00000020 00000001 A   N    1315 5257
 LOCKCRE       1 00000000 00000003     T    5255 5255
 LOCKNAMS     16 0000011E 00000001     C    2833 2600
 LOCKOB        1 00000000 00000004     T    5261 5261
 LOCKREL       1 00000000 00000005     T    5266 5266
 LOOK          2 0000023A 00000001     H    3146 3575
 LOWADD        4 00000000 FFFFFFDD     F    2861 3463M 3564M 3641M 3771  3783
 LOWLEN        4 00000004 FFFFFFDD     F    2862 3462M 3567M 3640M
 LPLIMIT       1 00001000 00000001 A   N    1316 5256
 MAXDEP        4 00000048 FFFFFFEB     F    1759 3859  3861M 4991  4993M
 MAXFRAG       4 00000050 FFFFFFEB     F    1761 3871M 3884  4995M
 MAXSIZ        4 0000004C FFFFFFEB     F    1760 3867  3869M
 MEMCTL       84 00000000 FFFFFFEB     J    1770 1784  2611U 3011U 4272U 5156U
 MEMCTL1       1 00000020 FFFFFFEA     X    1784 2587
 MEMFGINC      8 0000002A FFFFFFEB         1748 3897M 4773M 4789  4960  4960  4961  4961
 MEMFL         1 0000002A FFFFFFEB     R    1724 1728  1733  1738  1743  1748
 MEMFPOOL      1 00000029 FFFFFFEB     R    1687 1694  1702  1710  1718  4912  5209
 MEMFRE        4 0000001C FFFFFFEB     F    1680 3656  3658M 4347  4567  4568M 4798
 MEMFREE       4 00000550 00000001     I    4168 3304  4163  4179U
 MEMGET        4 000001AA 00000001     I    2903 2898  2914U 5268
 MEMGETX       2 000004B8 00000001     H    3956 3222B
 MEMINC        4 00000020 FFFFFFEB     F    1681 2742M 2758M 3884  4761  4799  4817  5176  5183
 MEMINIT       4 00000022 00000001     I    2403 2398  2414U
 MEMKAPUT      2 0000082C 00000001     H    5082 3136B 4391B 4438B 4526B 4549B
 MEMLOW        4 00000024 FFFFFFEB     F    1682 2694M 2710M 3082  3085  4398  4401  4407
 MEMNEXT       4 00000054 FFFFFFEB     A    1763 2798
 MEMPLOCK      4 00000014 FFFFFFEB     A    1678 2667M 3065  3938  4326  5033
 MEMPOOLN      2 00000028 FFFFFFEB     H    1683 1684
 MEMREL        4 00000034 FFFFFFEB     F    1754 4294  4295M
 MEMSERV       1 00000000 00000001     J    1292 1289  1290  1294  1306  1419  1491  1658  1771  1792  1862  1946  2021
                                                 2056  2075  2193  2218  2242  2266  2290  2314  2338  2342  2891
 MEMSIZ        4 00000018 FFFFFFEB     F    1679 3862  4346  4923  4925M 5216  5217M
 MEMS00        1 00000000 00000001     R    1301 1299
 MEMTABLE    704 00000000 FFFFFFEA     J    1791 2580U 5253
 MEMTA16M     16 00000002 FFFFFFEC         1531 2488M
 MEMTGLOB      8 00000002 FFFFFFEC         1540 2478M
 MEMWORK      17 00000000 FFFFFFDD     J    2890 2937U
 MEMXLAST      4 0000001C FFFFFFEA     A    1783 2585  2586
 MFA16M       16 00000009 FFFFFFE7         1983 5267
 MFFIX         8 00000009 FFFFFFE7         1992 5267
 MFGLOB        2 00000009 FFFFFFE7         2010 4211  4305  5009
 MFPAG         4 00000009 FFFFFFE7         2001 5267
 MGA16M       16 00000009 FFFFFFE8         1899 5260
 MGBEST        1 00000009 FFFFFFE8         1935 3169
 MGFIX         8 00000009 FFFFFFE8         1908 5260
 MGGLOB        2 00000009 FFFFFFE8         1926 2950  3044  3914
1MEMSERV  (MEMS00) (09:41) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   45
 MGPAG         4 00000009 FFFFFFE8         1917 5260
 MHIGH        64 00000010 FFFFFFDD         2876 3364  3364  3365  3365  3508M 3555M 3716  3716  3797
 MIGLOBAL    128 00000000 FFFFFFE9         1816 2466  2505  2629
 MILOOP        2 00000086 00000001     H    2617 2799B
 MIWA16M      16 00000001 FFFFFFE9         1852 2772
 MIWFIX        8 00000001 FFFFFFE9         1843 2724
 MIWPAGE       4 00000001 FFFFFFE9         1834 2688
 MLOW        128 00000010 FFFFFFDD         2871 3363  3363  3365  3365  3459M 3563M 3637M 3716  3716  3717  3743
 NEW           5 00000005 FFFFFFFF A   #    1264 2369U 3418M 3479M 3530M 3565  3616M 3642M 3643M 3644M 3653  3662M 3663
                                                 3668M 3669  3773  3817  4041M 4043  4047M 4054  4055M 4090  4123  4405M
                                                 4406  4409M 4421  4432M 4432  4468  4520  4532  4561  4562  4565  4601M
                                                 4609M 4610M 4621  4649M 4656  4657M 4692  4725
 NEWBBAC       4 00000010 FFFFFFDF     F    2306 3664M 4124M 4602M 4639  4642  4726M
 NEWBFWD       4 0000000C FFFFFFDF     F    2305 4640  4641
 NEWCHAIN     20 00000000 FFFFFFDF     J    2313 2369U
 NEWFBAC       4 00000008 FFFFFFDF     F    2304 3670M 4044M 4563M
 NEWFFWD       4 00000004 FFFFFFDF     F    2303 4560M 4632  4633
 NEWSIZ        4 00000000 FFFFFFDF     F    2302 4056  4564M 4636  4658
 NFIXINC       1 00003000 00000001 A   U    2382 5259
 PGALIGN       1 7FFFF000 00000001 A   U    1317 5264
 POOLFIX       4 00000029 FFFFFFEB         1718 2741M
 POOLFREE      1 00000000 00000006     T    5269 5269
 POOLGET       1 00000000 00000002     T    5254 5254
 POOLGLOB      8 00000029 FFFFFFEB         1694 2640M
 POOL16M      16 00000029 FFFFFFEB         1702 2784M
 POOL4K        2 00000029 FFFFFFEB         1710 2677M
 RA            2 00000002 FFFFFFFF A   #    1028 1228  1228  2511M 2524U 2585M 2797  2799  3852M 4870M 4879M 4879  4910
                                                 5145M 5156U
 RAR          14 0000000E FFFFFFFF A   #    1184 2493M 2666M 2824B 3070M 3136M 3265M 3305M 3782M 3826M 3943M 3970B 4143B
                                                 4331M 4391M 4438M 4526M 4549M 4869M 4916M 5038M 5063B 5213M 5235B
 RB            3 00000003 FFFFFFFF A   #    1040 1240  1240  2586M 3851M 3851  4870M 4911  5214M 5215  5216M 5217
 REQSRCH       4 00000030 FFFFFFEB     F    1753 3230  3231M 3351  3352M
 REQUEST       4 0000002C FFFFFFEB     F    1752 3033  3034M
 RJ            4 00000004 FFFFFFFF A   #    1052 1252  1252  2587M 2611U 2618  2791  2792  2793  2794  2798M
 RK            5 00000005 FFFFFFFF A   #    1064 1264  1264  2591M 2591  2678  2797M 2797
 RS            1 00000001 FFFFFFFF A   #    1016 1216  1216  2495M 2530  2562  2580U 2799M 5161M 5162M 5163
 RTCB        176 00000000 FFFFFFEE     J    1418 1428U
 RTCBCBAT      4 00000004 FFFFFFEE     A    1363 2511  2956  4217
 RTCBMEM       4 0000009C FFFFFFEE     A    1402 2562M 2996  4257
 RTCBR         9 00000009 FFFFFFFF A   #    1124 1428U
 RVR           0 00000000 FFFFFFFF A   #    1004 1276  1276  2667  3065M 3066  3938M 3939  3952M 4326M 4327  5033M 5034
                                                 5164M 5176  5183M 5188M 5189M 5208
 RX            6 00000006 FFFFFFFF A   #    1076 2378U 2600M 2662  3001M 3002M 3003  3148M 3148  3157M 3230M 3231  3319M
                                                 3319  3351M 3352  3412M 3413M 3414  3416M 3420M 3430  3460M 3461M 3462
                                                 3480M 3486M 3497  3509M 3510M 3511  3527M 3528M 3529M 3530  3531M 3532
                                                 3544  3556  3565M 3566M 3567  3638M 3639M 3640  3656M 3657M 3658  3689M
                                                 3690M 3691  3727M 3728M 3729  3846M 3852M 3854M 3859  3861  3862M 3867
                                                 3869  4262M 4263M 4264  4293M 4294M 4295  4343M 4344M 4345  4346M 4347M
                                                 4385  4509M 4510M 4520  4532M 4533M 4543  4566M 4567M 4568  4570M 4571M
                                                 4581  4593M 4595M 4596M 4597  4599M 4611M 4621  4633M 4641M 4799M 4800M
                                                 4801M 4811  4837M 4838M 4839  4920M 4921M 4922  4923M 4924M 4925  4986M
                                                 4991  4993
 RXBBAC        4 00000010 FFFFFFDE     F    2330 4642M
 RXBFWD        4 0000000C FFFFFFDE     F    2329 4600M
 RXCHAIN      20 00000000 FFFFFFDE     J    2337 2378U
 RXFBAC        4 00000008 FFFFFFDE     F    2328 4594M 4634M
 RY            7 00000007 FFFFFFFF A   #    1088 3414M 3417M 3418  3419M 3430  3481M 3482M 3483  3485M 3487M 3497  3533M
                                                 3534M 3544  3556M 3557  3847M 4406M 4421  4531M 4543  4589M 4590M 4591
                                                 4629M 4630M 4631  4798M 4811  4817M 4818M 4926M 4940M 4940
1MEMSERV  (MEMS00) (09:41) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   46
 R0            0 00000000 FFFFFFFF A   #     708 2403  2903  4005  4168  5113
 R1            1 00000001 FFFFFFFF A   #     721 2822M 3968M 4141M 5061M 5233M
 R15          15 0000000F FFFFFFFF A   #     903 2403  2822M 2903  3968M 4005  4141M 4168  5061M 5113  5233M
 SCUR          4 00000004 FFFFFFFF A   #    1252 3327M 3342  3376  3413  3460  3509  3534  3638  3643  4078  4102  4635M
                                                 4636M 4637  4648M 4680  4704  4749M 4761
 SNEW          0 00000000 FFFFFFFF A   #    1276 3079M 3082M 3084M 3087M 3119  3130M 3130  3232  3255  3315M 3342  3376
                                                 3417  3461  3482  3510  3531  3639  3644  3654  3657  4056M 4078  4102
                                                 4113M 4113  4348M 4359M 4359  4385  4398M 4400M 4403M 4533  4564  4566
                                                 4658M 4680  4704  4715M 4715
 SPR          13 0000000D FFFFFFFF A   #    1172 2403  2418  2419  2434M 2448U 2653U 2903  2918  2919  2939M 3060U 3246U
                                                 3286U 3761U 3933U 4005  4020  4021  4036M 4168  4183  4184  4199M 4321U
                                                 4852U 4901U 5028U 5113  5128  5129  5144M 5199U
 STATBEG       2 0000002C FFFFFFEB     H    1751 1762
 SYSFRE        4 00000040 FFFFFFEB     F    1757 4921  4922M
 SYSINC        4 00000038 FFFFFFEB     F    1755 5162  5163M
 USEFRE        4 0000003C FFFFFFEB     F    1756 4838  4839M
 WAR          12 0000000C FFFFFFFF A   #    1160 2418  2419M 2420  2430U 2434  2822  2823  2918  2919M 2920  2930U 2939
                                                 3968  3969  4020  4021M 4022  4032U 4036  4141  4142  4183  4184M 4185
                                                 4195U 4199  5061  5062  5128  5129M 5130  5140U 5144  5233  5234
 =A(CPAGE)
               4 000008E4 00000001     A    5262 3119  4862  4924  4926
 =A(CPAGE-1)
               4 000008F0 00000001     A    5265 3528  5188
 =A(FIXINC)
               4 000008D4 00000001     A    5258 2742
 =A(L'MEMTABLE)
               4 000008C0 00000001     A    5253 2489
 =A(L'MFA16M+L'MFFIX+L'MFPAG)
               4 000008F8 00000001     A    5267 4263
 =A(L'MGA16M+L'MGFIX+L'MGPAG)
               4 000008DC 00000001     A    5260 3002
 =A(LLIMIT)
               4 000008D0 00000001     A    5257 2710
 =A(LPLIMIT)
               4 000008CC 00000001     A    5256 2694
 =A(MEMGET)
               4 000008FC 00000001     A    5268 4868
 =A(NFIXINC)
               4 000008D8 00000001     A    5259 2758
 =A(PGALIGN)
               4 000008EC 00000001     A    5264 3419  3420  3486  3487  3529  4818  5189
 =A(1)         4 000008E8 00000001     A    5263 3157
 =V(LOCKCRE)
               4 000008C8 00000001     V    5255 2665
 =V(LOCKOB)
               4 000008E0 00000001     V    5261 3069  4330
 =V(LOCKREL)
               4 000008F4 00000001     V    5266 3942  5037
 =V(POOLFREE)
               4 00000900 00000001     V    5269 4915
 =V(POOLGET)
               4 000008C4 00000001     V    5254 2492  5212
 =Y(10)        2 00000904 00000001     Y    5270 4800

1MEMSERV  (MEMS00) (09:41) (22MAR04) Macro and Copy Code Source Summary                                                     Page   47
- Con Source                                        Volume    Members                        HLASM R4.0  2004/03/22 09.41
0     PRIMARY INPUT                                           CSECT    DROP     END      EX       LTORG    POP
                                                              PRINT    PUSH     RNDUP    START    USING
   L2 WYL.GG.ORV.MACLIB                             SYSB02    ACALL    CBAT     CHAIN    HEADER   KAPUT    LCALL
                                                              LOCKOB   LOCKPARM LOCKRL   MEMPARM  MODULE   PEND
                                                              POOLPARM PROC     PSET     REG      RTCB     SPLEVEL
                                                              TRCEPARM VCALL
   L3 WYL.GG.SYS.MACLIB                             SYSB05    $BC      $BFLKUP  $BV      $CCLKUP  $CRS     $CSS     $L
                                                              $LA      $LBLAD   $LEXP    $LOR     $REL     $RGLKUP
                                                              $USLKUP  AUSING   BEGIN    CLEAR    CSECT    DECR
                                                              DEFCC    DROP     ELSE     ELSEIF   END      EX       FLAG
                                                              GEN      HIBAL    IDENT    IF       INCR     LABEL    LOOP
                                                              LTORG    POP      PRINT    PUSH     RECORD   REGS     SET
                                                              START    STMAX    UNTIL    USING    WHILE    WITH
   L4 SYS1.MACLIB                                   MVSBR9    ABEND    IHBINNRR SYSSTATE

1         (MEMS00) (09:41) (22MAR04) General Purpose Register Cross Reference                                               Page   48
- Register  References (M=modified, B=branch, U=USING, D=DROP, N=index)                      HLASM R4.0  2004/03/22 09.41
0    0(0)     991U  992D 2403  2667  2903  3065M 3066  3079M 3082M 3084M 3087M 3119  3130M 3130  3232  3255  3315M 3342
             3376  3417  3461  3482  3510  3531  3639  3644  3654  3657  3938M 3939  3952M 4005  4056M 4078  4102  4113M
             4113  4168  4326M 4327  4348M 4359M 4359  4385  4398M 4400M 4403M 4533  4564  4566  4658M 4680  4704  4715M
             4715  5033M 5034  5089M 5090M 5091  5113  5164M 5176  5183M 5188M 5189M 5208
     1(1)     987U 2403  2495M 2530  2562  2580U 2598U 2799M 2822M 2903  2956M 2966U 2972M 2979U 2996M 3003M 3011U 3143
             3256  3770  3814  3968M 4005  4141M 4168  4217M 4227U 4233M 4240U 4257M 4264M 4272U 4443  4649  5061M 5088M
             5091M 5113  5161M 5162M 5163  5233M
     2(2)     983U 2351U 2403  2511M 2521U 2524U 2541U 2544U 2585M 2797  2799  2822M 2903  3158M 3661M 3664  3667M 3670
             3772  3783M 3816  3852M 3870M 3968M 4005  4040M 4042  4054M 4125  4141M 4168  4450M 4509  4563  4570  4594
             4603  4639M 4656M 4727  4870M 4879M 4879  4910  4994M 5061M 5113  5145M 5153U 5156U 5233M 5249U
     3(3)     979U 2360U 2403  2586M 2799  2822M 2903  3032M 3033M 3034  3085M 3086M 3086  3087  3143M 3158  3159M 3176M
             3314M 3412  3463  3479  3480  3481  3527  3533  3564  3566  3616  3641  3642  3851M 3851  3852M 3968M 4005
             4037M 4044  4045  4090  4124  4126  4141M 4168  4401M 4402M 4402  4403  4407M 4408M 4408  4409  4443M 4450
             4451M 4468  4531  4560  4565M 4581  4603M 4609  4634  4692  4726  4728  4729  4870M 4911  5061M 5113  5214M
             5215  5216M 5217  5233M
     4(4)     975U 2403  2587M 2611U 2618  2791  2792  2793  2794  2798M 2806U 2822M 2903  3327M 3342  3376  3413  3460
             3509  3534  3638  3643  3968M 4005  4078  4102  4141M 4168  4635M 4636M 4637  4648M 4680  4704  4749M 4761
             5061M 5113  5233M
     5(5)     971U 2369U 2403  2591M 2591  2678  2797M 2797N 2822M 2903  3418M 3479M 3530M 3565  3616M 3642M 3643M 3644M
             3653  3662M 3663  3668M 3669  3773  3817  3968M 4005  4041M 4043  4047M 4054  4055M 4090  4123  4141M 4168
             4405M 4406  4409M 4421  4432M 4432  4468  4520  4532  4561  4562  4565  4601M 4609M 4610M 4621  4649M 4656
             4657M 4692  4725  5061M 5113  5233M
     6(6)     967U 2378U 2403  2600M 2662  2822M 2903  3001M 3002M 3003N 3148M 3148  3157M 3230M 3231  3319M 3319  3351M
             3352  3412M 3413M 3414  3416M 3420M 3430  3460M 3461M 3462  3480M 3486M 3497  3509M 3510M 3511  3527M 3528M
             3529M 3530  3531M 3532  3544  3556  3565M 3566M 3567  3638M 3639M 3640  3656M 3657M 3658  3689M 3690M 3691
             3727M 3728M 3729  3846M 3852M 3854M 3859  3861  3862M 3867  3869  3968M 4005  4141M 4168  4262M 4263M 4264N
             4293M 4294M 4295  4343M 4344M 4345  4346M 4347M 4385  4509M 4510M 4520  4532M 4533M 4543  4566M 4567M 4568
             4570M 4571M 4581  4593M 4595M 4596M 4597  4599M 4611M 4621  4633M 4641M 4799M 4800M 4801M 4811  4837M 4838M
             4839  4920M 4921M 4922  4923M 4924M 4925  4986M 4991  4993  5061M 5113  5233M
     7(7)     963U 2403  2822M 2903  3414M 3417M 3418  3419M 3430  3481M 3482M 3483  3485M 3487M 3497  3533M 3534M 3544
             3556M 3557  3847M 3852M 3968M 4005  4141M 4168  4406M 4421  4531M 4543  4589M 4590M 4591  4629M 4630M 4631
             4798M 4811  4817M 4818M 4926M 4940M 4940  5061M 5113  5233M
     8(8)     959U 2403  2822M 2903  3968M 4005  4141M 4168  5061M 5113  5233M
     9(9)     955U 1428U 2403  2822M 2903  3968M 4005  4141M 4168  5061M 5113  5233M
    10(A)     951U 2403  2404M 2414U 2819U 2822M 2903  2904M 2914U 3965U 3968M 4005  4006M 4016U 4138U 4141M 4168  4169M
             4179U 5058U 5061M 5113  5114M 5124U 5230U 5233M
    11(B)     947U 2403  2822M 2903  3968M 4005  4141M 4168  5061M 5113  5233M
    12(C)     943U 2403  2418  2419M 2420  2430U 2434  2814U 2822M 2822  2823  2903  2918  2919M 2920  2930U 2939  3960U
             3968M 3968  3969  4005  4020  4021M 4022  4032U 4036  4133U 4141M 4141  4142  4168  4183  4184M 4185  4195U
             4199  5053U 5061M 5061  5062  5113  5128  5129M 5130  5140U 5144  5225U 5233M 5233  5234
    13(D)     939U 2403  2403  2418  2419  2434M 2448U 2650U 2653U 2822M 2830U 2903  2903  2918  2919  2939M 3060U 3243U
             3246U 3283U 3286U 3758U 3761U 3930U 3933U 3968M 3976U 4005  4005  4020  4021  4036M 4141M 4168  4168  4183
             4184  4199M 4321U 4849U 4852U 4898U 4901U 5025U 5028U 5061M 5069U 5113  5113  5128  5129  5144M 5199U 5233M
             5241U
    14(E)     935U 2403  2493M 2666M 2822M 2824B 2903  3070M 3136M 3265M 3305M 3782M 3826M 3943M 3968M 3970B 4005  4141M
             4143B 4168  4331M 4391M 4438M 4526M 4549M 4869M 4916M 5038M 5061M 5063B 5113  5213M 5233M 5235B
    15(F)     931U 2403  2404  2492M 2493B 2665M 2666B 2822M 2903  2904  3069M 3070B 3264M 3265B 3304M 3305B 3781M 3782B
             3825M 3826B 3942M 3943B 3968M 4005  4006  4141M 4168  4169  4330M 4331B 4868M 4869B 4915M 4916B 5037M 5038B
             5061M 5113  5114  5212M 5213B 5233M

1MEMSERV  (MEMS00) (09:41) (22MAR04) Diagnostic Cross Reference and Assembler Summary                                       Page   49
-                                                                                            HLASM R4.0  2004/03/22 09.41
0     No Statements Flagged in this Assembly
 HIGH LEVEL ASSEMBLER, 5696-234, RELEASE 4.0, PTF UQ57391
0SYSTEM: OS/390 02.10.00            JOBNAME: PJG#MEM     STEPNAME: ASM        PROCSTEP: (NOPROC)
0Datasets Allocated for this Assembly
  Con DDname   Dataset Name                                 Volume  Member
   P1 SYSIN    SYS04082.T094143.RA000.PJG#MEM.INPUT.H01     SCR100
   L1 SYSLIB   SYS3.DUMMYMAC                                SYSB02
   L2          WYL.GG.ORV.MACLIB                            SYSB02
   L3          WYL.GG.SYS.MACLIB                            SYSB05
   L4          SYS1.MACLIB                                  MVSBR9
      SYSLIN   WYL.GG.PJG.OBJ                               SYSB05  MEMSERV
      SYSPRINT SYS04082.T094143.RA000.PJG#MEM.PRINT.H01     SCR101
      SYSTERM  GG$PJG.PJG#MEM.JOB05946.D0000103.?

    7812K allocated to Buffer Pool,          901K would be required for this to be an In-Storage Assembly
     721 Primary Input Records Read         3956 Library Records Read                  0 Work File Reads
       0 ASMAOPT Records Read               3126 Primary Print Records Written         0 Work File Writes
      65 Punch Records Written                 0 ADATA Records Written
0Assembly Start Time: 09.41.45 Stop Time: 09.41.49 Processor Time: 00.00.01.0915
 Return Code 000
