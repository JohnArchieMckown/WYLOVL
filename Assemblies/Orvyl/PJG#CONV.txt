1                        J E S 2  J O B  L O G  --  S Y S T E M  S Y S B  --  N O D E  R L G
0
 09.45.12 JOB05965 ---- MONDAY,    22 MAR 2004 ----
 09.45.12 JOB05965  ICH70001I GG$PJG   LAST ACCESS AT 09:44:49 ON MONDAY, MARCH 22, 2004
 09.45.12 JOB05965  $HASP373 PJG#CONV STARTED - INIT 2    - CLASS E - SYS SYSB
 09.45.12 JOB05965  ***  HCMD      STEP $$QUIET
 09.45.12 JOB05965  PURGE * Q=OUTPUT MULTIPLE
 09.45.12 JOB05965  JOB PJG#CONV NOT IN OUTPUT QUEUE
 09.45.13 JOB05965  PJG#CONV.$$QUIET .         RC=0008 TapeIO=0000 DiskIO=0000 CPU=  .01s Elapsed=12.70s
 09.45.13 JOB05965  PJG#CONV.$CND    .         RC=Zero TapeIO=0000 DiskIO=0002 CPU=  .01s Elapsed=13.80s
 09.45.14 JOB05965  PJG#CONV.$UNP    .         RC=Zero TapeIO=0000 DiskIO=0017 CPU=  .05s Elapsed=13.97s
 09.45.20 JOB05965  PJG#CONV.ASM     .         RC=Zero TapeIO=0000 DiskIO=0326 CPU= 2.17s Elapsed=14.40s
 09.45.21 JOB05965  PJG#CONV.$EDIT   .         RC=Zero TapeIO=0000 DiskIO=0099 CPU=  .37s Elapsed=20.74s
 09.45.21 JOB05965  PJG#CONV Ended.  Name=Module: TEXTCONV               Total CPU= 2.61s Elapsed=12.70s
 09.45.21 JOB05965
 09.45.21 JOB05965  Execution charges   Priority=Standard   Block=Day
 09.45.21 JOB05965
 09.45.21 JOB05965  CPU Usage          48.00          $29.76   Standard Processing Unit Equivalent
 09.45.21 JOB05965                                   =======
 09.45.21 JOB05965                                    $29.76   Total Job execution charge
 09.45.21 JOB05965
 09.45.21 JOB05965  See back separator page for print charges
 09.45.21 JOB05965
 09.45.21 JOB05965  $HASP395 PJG#CONV ENDED  ASM=0
1        1 //PJG#CONV JOB PJG$GG,'Module: TEXTCONV',TIME=1,MSGCLASS=C              JOB05965
           /*JOBPARM HOLD=OUTPUT,LINES=50,CHARS=TN15,NOTIFY=YES
         2 //       EXEC PURGEOLD
         3 XXPURGEOLD PROC
           XX*
           XX* This proc is maintained by Jim Stosick
           XX*
         4 XX$$QUIET  EXEC PGM=HCMDX,PARM='PURGE * Q=OUTPUT MULTIPLE',
           XX         ACCT=(PURGEOLD,SYS3)
         5 //$CND   EXEC PGM=BILBO,REGION=512K,PARM='RECS=100'
         6 //STEPLIB  DD DSN=WYL.GG.ORV.LINKLIB,DISP=SHR
         7 //SYSPRINT DD SYSOUT=$
         8 //SYSUT1   DD DSN=WYL.GG.PJG.OBJ,DISP=OLD
         9 //SYSUT2   DD DSN=WYL.GG.PJG.OBJ,DISP=OLD
        10 //SYSIN    DD DUMMY
        11 //$UNP   EXEC PGM=WUNPRESS,PARM='NUM'
        12 //SYSPRINT DD SYSOUT=$
        13 //SYSUT1   DD DSN=WYL.GG.ORV.SOURCE(TEXTCONV),DISP=SHR
        14 //SYSUT2   DD DSN=&&INPUT,DISP=(,PASS),UNIT=SYSDA,
           //            SPACE=(TRK,(25,25),RLSE),DCB=CARD
        15 //ASM    EXEC PGM=ASMA90,REGION=8M,COND=(0,NE,$UNP),
           //            PARM=('SYSPARM(TEXTCONV),TERM,LANG(EN),OBJ',
           //          'LC(32500),XREF(SHORT),NODECK,NORLD,NODX,NOUS')
           //*STEPLIB  DD DSN=SYS1.SASMMOD1,DISP=SHR
        16 //SYSLIB   DD DSN=SYS3.DUMMYMAC,DISP=SHR,DCB=BLKSIZE=27920
        17 //         DD DSN=WYL.GG.ORV.MACLIB,DISP=SHR
        18 //         DD DSN=WYL.GG.SYS.MACLIB,DISP=SHR
        19 //SYSUT1   DD DSN=&&SYSUT1,UNIT=VIO,DISP=(,DELETE),
           //            SPACE=(4088,(500,250),,CONTIG,ROUND)
        20 //SYSTERM  DD SYSOUT=$
        21 //SYSPRINT DD DSN=&&PRINT,UNIT=SYSDA,DISP=(,PASS),
           //            SPACE=(6650,(250,250),RLSE),
           //            DCB=(BLKSIZE=6650,LRECL=133,RECFM=FB)
        22 //SYSLIN   DD DSN=WYL.GG.PJG.OBJ(TEXTCONV),DISP=OLD
        23 //SYSUDUMP DD SYSOUT=A
        24 //SYSIN    DD DSN=&&INPUT,DISP=(OLD,DELETE)
        25 //$EDIT  EXEC PGM=ASMEDIT,REGION=1M,
           //            COND=EVEN,PARM='STMT,DATA'
        26 //STEPLIB  DD DSN=WYL.GG.SYS.LINKLIB,DISP=SHR
        27 //ASMOUT   DD DSN=&&PRINT,DISP=(OLD,DELETE)
        28 //SYSPRINT DD SYSOUT=A
        29 //SYSUDUMP DD SYSOUT=A
1 STMT NO. MESSAGE
         2 IEFC001I PROCEDURE PURGEOLD WAS EXPANDED USING SYSTEM LIBRARY SYS3.BETAPROC
        14 IGD01010I STORCLAS= TEMP STORGROUP =
        14 IGD01010I STORGRP=VIO ASSIGNED.
        19 IGD01010I STORCLAS= TEMP STORGROUP =
        19 IGD01010I STORGRP=VIO ASSIGNED.
        21 IGD01010I STORCLAS= TEMP STORGROUP =
        21 IGD01010I STORGRP=VIO ASSIGNED.
 ICH70001I GG$PJG   LAST ACCESS AT 09:44:49 ON MONDAY, MARCH 22, 2004
 IEF142I PJG#CONV $$QUIET - STEP WAS EXECUTED - COND CODE 0008
 *********************************************************************************
 *   PJG#CONV/$$QUIET /                    Return Code      0008                 *
 *   Region used      260K (16K user + 244K system)                              *
 *   Extended region  9352K (4K user + 9348K system)                             *
 *                                                                               *
 *   Paging              In      Out                                             *
 *   Private <-> Aux      0        0       CPU time (TCB)   00:00:00.01          *
 *   Private <-> Exp      0        0       CPU time (SRB)   00:00:00.00          *
 *   VIO                  0        0       Elapsed time    920:42:40.26          *
 *   Common               0      ---                                             *
 *                                                                               *
 *                                                                               *
 *   CPU Usage          0.18         $0.11  Standard Processing Unit Equivalent  *
 *                                   $0.11  Total Step execution charge          *
 *                                                                               *
 *    I/O count  DDname   Type Addr           I/O count  DDname   Type Addr      *
 *                         *** No I/O for this step ***                          *
 *********************************************************************************
 IEF373I STEP/$$QUIET /START 2004082.0945
 IEF374I STEP/$$QUIET /STOP  2004082.0945 CPU    0MIN 00.01SEC SRB    0MIN 00.00SEC VIRT    16K SYS   244K EXT       4K SYS    9348K
 IEF236I ALLOC. FOR PJG#CONV $CND
 IEF237I 0401 ALLOCATED TO STEPLIB
 IEF237I JES2 ALLOCATED TO SYSPRINT
 IEF237I 04DC ALLOCATED TO SYSUT1
 IEF237I 04DC ALLOCATED TO SYSUT2
 IEF237I DMY  ALLOCATED TO SYSIN
 IEF142I PJG#CONV $CND - STEP WAS EXECUTED - COND CODE 0000
 IEF285I   WYL.GG.ORV.LINKLIB                           KEPT
 IEF285I   VOL SER NOS= SYSB01.
 IEF285I   GG$PJG.PJG#CONV.JOB05965.D0000101.?          SYSOUT
 IEF285I   WYL.GG.PJG.OBJ                               KEPT
 IEF285I   VOL SER NOS= SYSB05.
 IEF285I   WYL.GG.PJG.OBJ                               KEPT
 IEF285I   VOL SER NOS= SYSB05.
 *********************************************************************************
 *   PJG#CONV/$CND    /                    Return Code      Zero                 *
 *   Region used      280K (16K user + 264K system)                              *
 *   Extended region  9392K (4K user + 9388K system)                             *
 *                                                                               *
 *   Paging              In      Out                                             *
 *   Private <-> Aux      0        0       CPU time (TCB)   00:00:00.01          *
 *   Private <-> Exp      0        0       CPU time (SRB)   00:00:00.00          *
 *   VIO                  0        0       Elapsed time    920:42:39.16          *
 *   Common               0      ---                                             *
 *                                                                               *
 *                                                                               *
 *   CPU Usage          0.18         $0.11  Standard Processing Unit Equivalent  *
 *                                   $0.11  Total Step execution charge          *
 *                                                                               *
 *    I/O count  DDname   Type Addr           I/O count  DDname   Type Addr      *
 *            2  STEPLIB  Disk 0401                   0  SYSPRINT      ----      *
 *            0  SYSUT1   Disk 04DC                   0  SYSUT2   Disk 04DC      *
 *            0  SYSIN         ----                                              *
 *********************************************************************************
 IEF373I STEP/$CND    /START 2004082.0945
 IEF374I STEP/$CND    /STOP  2004082.0945 CPU    0MIN 00.01SEC SRB    0MIN 00.00SEC VIRT    16K SYS   264K EXT       4K SYS    9388K
 IEF236I ALLOC. FOR PJG#CONV $UNP
 IEF237I JES2 ALLOCATED TO SYSPRINT
 IEF237I 0402 ALLOCATED TO SYSUT1
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT2  )
         DSN (SYS04082.T094512.RA000.PJG#CONV.INPUT.H01   )
         STORCLAS (TEMP) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= SCR101
 IEF142I PJG#CONV $UNP - STEP WAS EXECUTED - COND CODE 0000
 IEF285I   GG$PJG.PJG#CONV.JOB05965.D0000102.?          SYSOUT
 IEF285I   WYL.GG.ORV.SOURCE                            KEPT
 IEF285I   VOL SER NOS= SYSB02.
 IGD106I SYS04082.T094512.RA000.PJG#CONV.INPUT.H01    PASSED,    DDNAME=SYSUT2
 *********************************************************************************
 *   PJG#CONV/$UNP    /                    Return Code      Zero                 *
 *   Region used      380K (108K user + 272K system)                             *
 *   Extended region  9468K (4K user + 9464K system)                             *
 *                                                                               *
 *   Paging              In      Out                                             *
 *   Private <-> Aux      0        0       CPU time (TCB)   00:00:00.05          *
 *   Private <-> Exp      0        0       CPU time (SRB)   00:00:00.00          *
 *   VIO                  0        0       Elapsed time    920:42:38.99          *
 *   Common               0      ---                                             *
 *                                                                               *
 *                                                                               *
 *   CPU Usage          0.93         $0.57  Standard Processing Unit Equivalent  *
 *                                   $0.57  Total Step execution charge          *
 *                                                                               *
 *    I/O count  DDname   Type Addr           I/O count  DDname   Type Addr      *
 *            0  SYSPRINT      ----                   3  SYSUT1   Disk 0402      *
 *           14  SYSUT2   Disk 04E3                                              *
 *********************************************************************************
 IEF373I STEP/$UNP    /START 2004082.0945
 IEF374I STEP/$UNP    /STOP  2004082.0945 CPU    0MIN 00.05SEC SRB    0MIN 00.00SEC VIRT   108K SYS   272K EXT       4K SYS    9464K
 IEF236I ALLOC. FOR PJG#CONV ASM
 IEF237I 0402 ALLOCATED TO SYSLIB
 IEF237I 0402 ALLOCATED TO
 IEF237I 04DC ALLOCATED TO
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT1  )
         DSN (SYS04082.T094512.RA000.PJG#CONV.SYSUT1.H01  )
         STORCLAS (TEMP) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= VIO
 IEF237I JES2 ALLOCATED TO SYSTERM
 IGD101I SMS ALLOCATED TO DDNAME (SYSPRINT)
         DSN (SYS04082.T094512.RA000.PJG#CONV.PRINT.H01   )
         STORCLAS (TEMP) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= SCR100
 IEF237I 04DC ALLOCATED TO SYSLIN
 IEF237I JES2 ALLOCATED TO SYSUDUMP
 IGD103I SMS ALLOCATED TO DDNAME SYSIN
 IEF142I PJG#CONV ASM - STEP WAS EXECUTED - COND CODE 0000
 IEF285I   SYS3.DUMMYMAC                                KEPT
 IEF285I   VOL SER NOS= SYSB02.
 IEF285I   WYL.GG.ORV.MACLIB                            KEPT
 IEF285I   VOL SER NOS= SYSB02.
 IEF285I   WYL.GG.SYS.MACLIB                            KEPT
 IEF285I   VOL SER NOS= SYSB05.
 IGD105I SYS04082.T094512.RA000.PJG#CONV.SYSUT1.H01   DELETED,   DDNAME=SYSUT1
 IEF285I   GG$PJG.PJG#CONV.JOB05965.D0000103.?          SYSOUT
 IGD106I SYS04082.T094512.RA000.PJG#CONV.PRINT.H01    PASSED,    DDNAME=SYSPRINT
 IEF285I   WYL.GG.PJG.OBJ                               KEPT
 IEF285I   VOL SER NOS= SYSB05.
 IEF285I   GG$PJG.PJG#CONV.JOB05965.D0000104.?          SYSOUT
 IGD105I SYS04082.T094512.RA000.PJG#CONV.INPUT.H01    DELETED,   DDNAME=SYSIN
 *********************************************************************************
 *   PJG#CONV/ASM     /                    Return Code      Zero                 *
 *   Region used      8476K (8192K user + 284K system)                           *
 *   Extended region  9952K (412K user + 9540K system)                           *
 *                                                                               *
 *   Paging              In      Out                                             *
 *   Private <-> Aux      0        0       CPU time (TCB)   00:00:02.13          *
 *   Private <-> Exp      0        0       CPU time (SRB)   00:00:00.04          *
 *   VIO                  0        0       Elapsed time    920:42:38.56          *
 *   Common               0      ---                                             *
 *                                                                               *
 *                                                                               *
 *   CPU Usage         39.93        $24.75  Standard Processing Unit Equivalent  *
 *                                  $24.75  Total Step execution charge          *
 *                                                                               *
 *    I/O count  DDname   Type Addr           I/O count  DDname   Type Addr      *
 *           64  SYSLIB   Disk 0402                   0  SYSLIB   Disk 0402      *
 *          146  SYSLIB   Disk 04DC                   0  SYSUT1   VIO  ----      *
 *            0  SYSTERM       ----                  96  SYSPRINT Disk 038B      *
 *            5  SYSLIN   Disk 04DC                   0  SYSUDUMP      ----      *
 *           15  SYSIN    Disk 04E3                                              *
 *********************************************************************************
 IEF373I STEP/ASM     /START 2004082.0945
 IEF374I STEP/ASM     /STOP  2004082.0945 CPU    0MIN 02.13SEC SRB    0MIN 00.04SEC VIRT  8192K SYS   284K EXT     412K SYS    9540K
 IEF236I ALLOC. FOR PJG#CONV $EDIT
 IEF237I 0402 ALLOCATED TO STEPLIB
 IGD103I SMS ALLOCATED TO DDNAME ASMOUT
 IEF237I JES2 ALLOCATED TO SYSPRINT
 IEF237I JES2 ALLOCATED TO SYSUDUMP
 IEF142I PJG#CONV $EDIT - STEP WAS EXECUTED - COND CODE 0000
 IEF285I   WYL.GG.SYS.LINKLIB                           KEPT
 IEF285I   VOL SER NOS= SYSB02.
 IGD105I SYS04082.T094512.RA000.PJG#CONV.PRINT.H01    DELETED,   DDNAME=ASMOUT
 IEF285I   GG$PJG.PJG#CONV.JOB05965.D0000105.?          SYSOUT
 IEF285I   GG$PJG.PJG#CONV.JOB05965.D0000106.?          SYSOUT
 *********************************************************************************
 *   PJG#CONV/$EDIT   /                    Return Code      Zero                 *
 *   Region used      388K (116K user + 272K system)                             *
 *   Extended region  9472K (4K user + 9468K system)                             *
 *                                                                               *
 *   Paging              In      Out                                             *
 *   Private <-> Aux      0        0       CPU time (TCB)   00:00:00.36          *
 *   Private <-> Exp      0        0       CPU time (SRB)   00:00:00.01          *
 *   VIO                  0        0       Elapsed time    920:42:32.22          *
 *   Common               0      ---                                             *
 *                                                                               *
 *                                                                               *
 *   CPU Usage          6.75         $4.18  Standard Processing Unit Equivalent  *
 *                                   $4.18  Total Step execution charge          *
 *                                                                               *
 *    I/O count  DDname   Type Addr           I/O count  DDname   Type Addr      *
 *            2  STEPLIB  Disk 0402                  97  ASMOUT   Disk 038B      *
 *            0  SYSPRINT      ----                   0  SYSUDUMP      ----      *
 *********************************************************************************
 IEF373I STEP/$EDIT   /START 2004082.0945
 IEF374I STEP/$EDIT   /STOP  2004082.0945 CPU    0MIN 00.36SEC SRB    0MIN 00.01SEC VIRT   116K SYS   272K EXT       4K SYS    9468K
 *********************************************************************************
 *                                                                               *
 *                      S t a n f o r d   U n i v e r s i t y                    *
 *                                                                               *
 *                              *** Job Summary ***                              *
 *                                                                               *
 *   System Id      SYSB                   Input time     09:38:29  Mar 22, 2004 *
 *                                                                               *
 *   System Release SP6.1.0                Start time     09:45:12  Mar 22, 2004 *
 *                                                                               *
 *   Job name       PJG#CONV               Stop  time     00:00:00  Mar 22, 2004 *
 *                                                                               *
 *   Account        PJG$GG                 Elapsed time  920:42:40.26            *
 *                                                                               *
 *   User Name      Module: TEXTCONV       CPU time       00:00:02.56            *
 *                                                                               *
 *   Job class      E                      SRB Time       00:00:00.05            *
 *                                                                               *
 *********************************************************************************
 IEF375I  JOB/PJG#CONV/START 2004082.0945
 IEF376I  JOB/PJG#CONV/STOP  2004082.0945 CPU    0MIN 02.56SEC SRB    0MIN 00.05SEC
1Data set successfully converted from EDIT to FB format
1Assembler Done TEXTCONV No Statements Flagged
1         High Level Assembler Option Summary                   (PTF UQ57391)                                               Page    1
-                                                                                            HLASM R4.0  2004/03/22 09.45
0  No Overriding ASMAOPT Parameters
   Overriding Parameters-  SYSPARM(TEXTCONV),TERM,LANG(EN),OBJ,LC(32500),XREF(SHORT),NODECK,NORLD,NODX,NOUS
   No Process Statements


   Options for this Assembly
0  NOADATA
     ALIGN
   NOASA
     BATCH
     CODEPAGE(047C)
   NOCOMPAT
   NODBCS
 3 NODECK
 3 NODXREF
     ESD
   NOEXIT
     FLAG(0,ALIGN,CONT,NOIMPLEN,NOPAGE0,PUSH,RECORD,NOSUBSTR,USING0)
   NOFOLD
   NOGOFF
   NOINFO
 3   LANGUAGE(EN)
   NOLIBMAC
 3   LINECOUNT(32500)
     LIST(121)
     MXREF(SOURCE)
 3   OBJECT
     OPTABLE(UNI,NOLIST)
   NOPCONTROL
   NOPESTOP
   NOPROFILE
   NORA2
   NORENT
 3 NORLD
     RXREF
     SIZE(MAX)
 3   SYSPARM(TEXTCONV)
 3   TERM(WIDE)
   NOTEST
     THREAD
   NOTRANSLATE
 3 NOUSING
 3   XREF(SHORT)

   No Overriding DD Names

1TEXTCONV External Symbol Dictionary                                                                                        Page    2
-Symbol   Type   Id     Address  Length     LD ID  Flags Alias-of                            HLASM R4.0  2004/03/22 09.45
0TEXTCONV  SD 00000001 00000000 000015A4             06
 TEXT00    LD          00000000           00000001
 SEGINIT   LD          00000022           00000001
 SEG       LD          000000D6           00000001
 SEGCOL    LD          0000021E           00000001
 SEGCLR    LD          0000028E           00000001
 SEGHEX    LD          000002E2           00000001
 SEGCORE   LD          00000376           00000001
 SEG       ER 00000002
 BTXBTX    ER 00000003
 SEGCOL    ER 00000004
 SEGHEX    ER 00000005
 SEGSTK    LD          00000A80           00000001
 DTBDTB    LD          00000E34           00000001
 XTBXTB    LD          00000ECA           00000001
 STBSTB    LD          00000F50           00000001
 BTDBTD    LD          00001038           00000001
 BTXBTX    LD          000010EA           00000001
 BTSBTS    LD          0000116E           00000001
 HASHIT    LD          00001202           00000001
 SEGCORE   ER 00000006

1TEXTCONV ORVYL's Text and Conversion Routines                                                                              Page    3
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement                    (Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                      2       2.              COPY  HEADER
                                       3             =*********************************************************************
                                       4             =*                                                                   *
                                       5             =*                                                                   *
                                       6             =*                          M P - O R V Y L                          *
                                       7             =*                                                                   *
                                       8             =*       ORVYL - Release 5.0 - Class I - Stanford Proprietary        *
                                       9             =*                                                                   *
                                      10             =*                                                                   *
                                      11             =*********************************************************************
-
-                                     13             =         SPLEVEL SET=2
                                      16             =         HIBAL ASSOC=YES
-
                                     998             =*
                                     999             =* REGISTER CONVENTIONS (USE ONLY THE SYMBOLS)
                                    1000             =*
                                    1001             =*                     CLASS  USAGE
                                    1002             =*                     -----  -----------------------------
                                    1003             =RVR      REG   0        1    RETURN VALUE REGISTER
                                    1015             =RS       REG   1        *    SCRATCH
                                    1027             =RA       REG   2        *    SCRATCH
                                    1039             =RB       REG   3        *    SCRATCH
                                    1051             =RJ       REG   4        *    SCRATCH
                                    1063             =RK       REG   5        *    SCRATCH
                                    1075             =RX       REG   6        *    SCRATCH
                                    1087             =RY       REG   7        *    SCRATCH
                                    1099             =RM       REG   8        *    SCRATCH
                                    1111             =RN       REG   9        *    SCRATCH (In Guest)
                                    1123             =RTCBR    REG   9        -    POINTER TO THE RTCB (In Host)
                                    1135             =BR       REG   10       -    FIRST BASE REGISTER
                                    1147             =BRR      REG   11       -    SECOND BASE REGISTER
                                    1159             =WAR      REG   12       -    WORK AREA POINTER
                                    1171             =SPR      REG   13       -    STACK TOP POINTER
                                    1183             =RAR      REG   14       1    RETURN ADDRESS REGISTER
                                    1195             =EPAR     REG   15       1    ENTRY POINT ADDRESS
                                    1207             =*
                                    1208             =*      CLASS   MEANING
                                    1209             =*      -----   --------------------------------------------------
                                    1210             =*        *     Register may be freely used for scratch
                                    1211             =*        -     Register may not be used
                                    1212             =*        1     Available but may change on subroutine calls
                                    1213             =*
1TEXTCONV ORVYL's Text and Conversion Routines                                                                              Page    4
0D-Loc  Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+_____  ______ ____    _____ _____  ____ __ ______    ______ _________
0000000                00000 015A4  1215       3.     TEXTCONV MODULE
                                    1225             +*
                                    1226    02-IDENT +         ENTRY TEXT00
                                    1227             +
 000000 14E3C5E7E3F0F06B            1228    02-IDENT +TEXT00   DC    AL1(20),C'TEXT00,22MAR04,09:45'
                                    1229             +*
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page    5
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   1232       5.              MACRO ,
                                    1233       6.     &L       SEGADDR &ADDR
                                    1234       7.     &L       PSET  @SAD
                                    1235       8.              MOVPARM @SADADDR,&ADDR
                                    1236       9.              MOVPARM @SADLOC,LA:#SC
                                    1237      10.              MOVPARM @SADPARM,LA:@SEGCORE
                                    1238      11.              LCALL SEGADDR
                                    1239      12.              MEND  ,
0                                   1241      14.              MACRO ,
                                    1242      15.     &L       SEGWORD &LOC,&LEN,&CB
                                    1243      16.     &L       PSET  @SEGWORD
                                    1244      17.              MOVSTR @SRLOC,@SRLEN,&LOC,&LEN
                                    1245      18.              SEGLD &CB,PARM=@SRCB
                                    1246      19.              LCALL SEGWORD
                                    1247      20.              MEND  ,
0                                   1249      22.              MACRO ,                       REGCH
                                    1250      23.     .********************************************************************
                                    1251      24.     .*   Check symbolic registers for equalness.
                                    1252      25.     .* The parameter string is a list of register pairs ie, (R2,SR)
                                    1253      26.     .* which are meant to match.  This will check on assumptions which
                                    1254      27.     .* could be changed by an unknowing change to a REGS statement.
                                    1255      28.     .********************************************************************
                                    1256      29.              REGCH
                                    1257      30.     &N       SETA  1
                                    1258      31.     .REGNEX  AIF   (L'&SYSLIST(&N,1) NE &SYSLIST(&N,2)).REGER
                                    1259      32.     .INCR    AIF   (&N GE N'&SYSLIST).REGX
                                    1260      33.     &N       SETA  &N+1
                                    1261      34.              AGO   .REGNEX
                                    1262      35.     .REGER   ANOP
                                    1263      36.      MNOTE  8,'&SYSLIST(&N,1) is not register &SYSLIST(&N,2)'
                                    1264      37.              AGO   .INCR
                                    1265      38.     .REGX    MEND
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page    6
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   1267      40.              COPY  SEGCBD
 000000                00000 00028  1268             =SEGCBD   RECORD BEGIN
                                    1276  1          =*
                                    1277  1          =* LAYOUT OF THE SEG CONTROL BLOCK
                                    1278  1          =*
 000000                             1279  1          =SEGADD     DS     A                 LOCATION OF BUFFER
 000004                             1280  1          =SEGWRT     DS     A                 LOCATION OF PROC ROUTINE
 000008                             1281  1          =SEGBLEN    DS     Y                 LENGTH OF BUFFER
 00000A                             1282  1          =SEGCNT     DS     H                 COUNT OF CHARS IN BUFFER
 00000C                             1283  1          =SEGMCNT    DS     H                 COUNT AT LAST MARK
 00000E                             1284  1          =SEGRCNT    DS     H                 COUNT AT LAST RECORD
 000010 00                          1285  1          =SEGFLG1    FLAG   ,                 State flags for processing rtn
 SEGFLG1.SEGFINIT  00 EQ            1289  1          =           FLAG   (SEGFINIT,0,EQ)   INITIALIZATION CALL
 SEGFLG1.SEGFEOR   01 EQ            1299  1          =           FLAG   (SEGFEOR,1,EQ)    SEGEndOfRecord CALL
 SEGFLG1.SEGFEOB   02 EQ            1309  1          =           FLAG   (SEGFEOB,2,EQ)    SEGEndOfBuffer CALL
 SEGFLG1.SEGFOVER  03 EQ            1319  1          =           FLAG   (SEGFOVER,3,EQ)   BUFFER OVERFLOW
 000011                             1329  1          =SEGFLG2    DS     X                 USER FLAGS
 000014                             1330  1          =SEGUSER    DS     5A                USER WORK
 000028                00028 00028  1331             =         END
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page    7
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   1341      42.              COPY  SEGPARM
 000000                00000 0000D  1342             =@SEG     RECORD BEGIN        Used for SEG,T,B,TB,EOR,EOB
 000000                             1350  1          =@SEGCB     DS    A             Address of the seg control block
 000004                             1351  1          =@SEGLOC    DS    A             Location of the text segment to be added
 000008                             1352  1          =@SEGLEN    DS    A             Length of the text segment to be added
 00000C 00                          1353  1          =@SEGTYPE   FLAG  ,
 @SEGTYPE.@SEGB    80 ONES          1357  1          =           FLAG  @SEGB         Add a blank after the segment
 @SEGTYPE.@SEGT    40 ONES          1362  1          =           FLAG  @SEGT         Trim trailing blanks from the segment
 @SEGTYPE.@SEGTB   C0 NZ            1367  1          =           FLAG  (@SEGTB,@SEGB+@SEGT)    Trim trailing, and add 1 blank
 @SEGTYPE.@SEGMK   20 ONES          1378  1          =           FLAG  @SEGMK        Mark the buffer after this segment
 @SEGTYPE.@SEGEOR  10 ONES          1383  1          =           FLAG  @SEGEOR       This is the end of a logical record
 @SEGTYPE.@SEGEOB  08 ONES          1388  1          =           FLAG  @SEGEOB       This is the last segment for the buffer
 00000D                0000D 0000D  1393             =         END   ,
-000000                00000 0000E  1403             =@SEGINIT RECORD BEGIN
 000000                             1411  1          =@SEGICB    DS    A
 000004                             1412  1          =@SEGIRTN   DS    A             Address of the processing routine
 000008                             1413  1          =@SEGILOC   DS    A             Location of the buffer
 00000C                             1414  1          =@SEGILEN   DS    Y             Length of the buffer
 00000E                0000E 0000E  1415             =         END   ,
-000000                00000 00008  1425             =@SEGCOL  RECORD BEGIN
 000000                             1433  1          =@SEGCCB    DS    A             Address of the control block
 000004                             1434  1          =@SEGCNUM   DS    A             Column number to go to
 000008                00008 00008  1435             =         END   ,
-000000                00000 00018  1445             =@SEGCORE RECORD BEGIN
 000000                             1453  1          =@SEGXCB    DS    A             Control block address
 000004                             1454  1          =@SEGXLOC   DS    A             Location of the core (MVS VA)
 000008                             1455  1          =@SEGXLEN   DS    A             Length of the core to dump
 00000C                             1456  1          =@SEGXSPA   DS    X             # blank lines between each dump line
 00000D 00                          1457  1          =@SEGXFLG   FLAG  ,
 @SEGXFLG.@SEGXF16 80 ONES          1461  1          =           FLAG  @SEGXF16      16 Bytes per line  (32 bytes per line)
 @SEGXFLG.@SEGXFAL 40 ONES          1466  1          =           FLAG  @SEGXFAL      Alpha (EBCDIC)     (no EBCDIC)
 @SEGXFLG.@SEGXFOF 20 ONES          1471  1          =           FLAG  @SEGXFOF      Print offsets      (Print Addresses)
 @SEGXFLG.@SEGXFID 10 ONES          1476  1          =           FLAG  @SEGXFID      Print the id       (Dont print it)
 @SEGXFLG.@SEGXFRL 08 ONES          1481  1          =           FLAG  @SEGXFRL      Print repeat lines (Print summary)
 000010                             1486  1          =@SEGXOFF   DS    A             Address to be 0 offset
 000014                             1487  1          =@SEGXID    DS    CL4           Control block id
 000018                00018 00018  1488             =         END   ,
-000000                00000 00004  1498             =@SEGRTN  RECORD BEGIN                  Parameters to pass to proc rtn
 000000                             1506  1          =@SEGRCB    DS    A                       Address of control block
 000004                00004 00004  1507             =         END   ,
-000000                00000 00008  1517             =@SEGSTK  RECORD BEGIN
 000000                             1525  1          =@SEGSCB    DS    A                       Address of seg control block
 000004                             1526  1          =@SEGSST    DS    A                       Start of stack (from RTCB)
 000008                00008 00008  1527             =         END   ,
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page    8
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   1537      44.              COPY  CONVPARM
 000000                00000 00009  1538             =@DTB     RECORD BEGIN                  Decimal to binary conversion
 000000                             1546  1          =@DTBLOC    DS    A                       String location
 000004                             1547  1          =@DTBLEN    DS    A                       String length
                                    1548  1          =@DTBMXLN   EQU   10,10,C'N'              10 digits (not including sign)
 000008 00                          1549  1          =@DTBFLG    FLAG  ,
 @DTBFLG.@DTBVALID 80 ONES          1553  1          =           FLAG  @DTBVALID               Is string valid?
 000009                             1558  1          =           DS    0SL2(@DTBLOC+4-@DTBLEN,@DTBLEN-@DTBLOC+4)
 000009                00009 00009  1559             =         END   ,
0000000                00000 00009  1569             =@XTB     RECORD BEGIN                  Hex to binary conversion
 000000                             1577  1          =@XTBLOC    DS    A                       Location of string
 000004                             1578  1          =@XTBLEN    DS    A                       Length of string
                                    1579  1          =@XTBMXLN   EQU   8,8,C'N'
 000008 00                          1580  1          =@XTBFLG    FLAG  ,
 @XTBFLG.@XTBVALID 80 ONES          1584  1          =           FLAG  @XTBVALID               Valid string specified
 000009                             1589  1          =           DS    0SL2(@XTBLOC+4-@XTBLEN,@XTBLEN-@XTBLOC+4)
 000009                00009 00009  1590             =         END   ,
0000000                00000 0000D  1600             =@STB     RECORD BEGIN                  Scaled to binary conversion
 000000                             1608  1          =@STBLOC    DS    A                       String location
 000004                             1609  1          =@STBLEN    DS    A                       | and length
                                    1610  1          =@STBMXLN   EQU   10+1,10+1,C'N'          10 digits, 1 point
                                    1611  1          =*                                      (not including sign)
 000008                             1612  1          =@STBSCAL   DS    A                       Scale factor
 00000C 00                          1613  1          =@STBFLG    FLAG  ,
 @STBFLG.@STBVALID 80 ONES          1617  1          =           FLAG  @STBVALID               Is string valid?
 00000D                             1622  1          =           DS    0SL2(@STBLOC+4-@STBLEN,@STBLEN-@STBLOC+4)
 00000D                0000D 0000D  1623             =         END   ,
0000000                00000 0000D  1633             =@BTD     RECORD BEGIN                  Binary to decimal conversion
 000000                             1641  1          =@BTDVAL    DS    F                       32 bit integer value
 000004                             1642  1          =@BTDLOC    DS    A                       Result location
 000008                             1643  1          =@BTDLEN    DS    A                       Result length
 00000C 00                          1644  1          =@BTDFLG    FLAG  ,
 @BTDFLG.@BTDCOMM  80 ONES          1648  1          =           FLAG  @BTDCOMM                Commas?
 @BTDFLG.@BTDUNSI  40 ONES          1653  1          =           FLAG  @BTDUNSI                Unsigned conversion?
 00000D                             1658  1          =           DS    0SL2(@BTDLOC+4-@BTDLEN,@BTDLEN-@BTDLOC+4)
 00000D                0000D 0000D  1659             =         END   ,
0000000                00000 0000C  1669             =@BTX     RECORD BEGIN                  Binary to hex converson
 000000                             1677  1          =@BTXVAL    DS    A                       Value to be converted
 000004                             1678  1          =@BTXLOC    DS    A                       Return area
 000008                             1679  1          =@BTXLEN    DS    A      Maximum length of result    (Positive)
                                    1680  1          =*                     Number of leading blanks    (Negative)
                                    1681  1          =*                     Return actual string length (Zero)
 00000C                             1682  1          =           DS    0SL2(@BTXLOC+4-@BTXLEN,@BTXLEN-@BTXLOC+4)
 00000C                0000C 0000C  1683             =         END   ,
0000000                00000 00010  1693             =@BTS     RECORD BEGIN                  Binary to scaled conversion
 000000                             1701  1          =@BTSLOC    DS    A                       Output loc
 000004                             1702  1          =@BTSLEN    DS    A                       Output length
 000008                             1703  1          =@BTSVAL    DS    A                       Scaled integer to convert
 00000C                             1704  1          =@BTSSCAL   DS    A                       Scale factor (# of dec digits)
 000010                             1705  1          =           DS    0SL2(@BTSLOC+4-@BTSLEN,@BTSLEN-@BTSLOC+4)
 000010                00010 00010  1706             =         END   ,
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page    9
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   1716      46.              COPY  HASHPARM
                                    1717             =*******************************************************************
                                    1718             =*                                                                 *
                                    1719             =*   HASHPARM - Hash routine parameters                            *
                                    1720             =*                                                                 *
                                    1721             =*******************************************************************
0000000                00000 0000D  1723             =@HASH    RECORD BEGIN
 000000                             1731  1          =@HSHSTR    DS    A                       String pointer
 000004                             1732  1          =@HSHLEN    DS    A                       Length of string
 000008                             1733  1          =@HSHVAL    DS    A                       Hash value (a prime number)
 00000C 00                          1734  1          =@HSHFL     FLAG  ,
 @HSHFL.@HSHBLNK   80 ONES          1738  1          =           FLAG  @HSHBLNK                Ignore trailing blanks
 00000D                0000D 0000D  1743             =         END   ,
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   10
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   1753      48.     *******************************************************************
                                    1754      49.     *                                                                 *
                                    1755      50.     *   SEGINIT -- Initialize a seg control block.                    *
                                    1756      51.     *                                                                 *
                                    1757      52.     *     Input - @SEGINIT                                            *
                                    1758      53.     *                                                                 *
                                    1759      54.     *    Output - none                                                *
                                    1760      55.     *                                                                 *
                                    1761      56.     *******************************************************************
-
 000016                             1763      58.     SEGINIT  PROC  @SEGINIT,SCOPE=GLOBAL
 000016 E2C5C7C9D5C9E340            1769             +
 00001E 0010/0000                   1770             +
 000022 900F D004/18AF       00004  1772             +
 USING  SEGINIT,R10
 000028 50D0 C000/18CD       00000  1787             +
 00002E 9680 C000      00000        1789             +
 USING  @SEGINIT-72,R12
 000032 41D0 C058            00058  1803             +
 000036 5870 C048            00000  1804      59.              L     RY,@SEGICB              Get address of the SEGCB
 USING  SEGCBD,R7                   1805      60.              WITH  (SEGCBD,RY),BEGIN       Addr to control block
 00003A                             1819  1   61.                CLEAR SEGCBD                  Clear the whole thing
 00003A D727 7000 7000 00000 00000  1825  1          +
 000040                             1826  1   62.                MOVPARM SEGADD,@SEGILOC       Save the buffer location
 000040 D203 7000 C050 00000 00008  1831  1          +
 000046                             1832  1   63.                MOVPARM SEGBLEN,@SEGILEN      | and the buffer length
 000046 D201 7008 C054 00008 0000C  1837  1          +
 00004C 58F0 C04C            00004  1838  1   64.                L     EPAR,@SEGIRTN           | processing rtn addr
 000050 12FF/4770 A038       0005A  1839  1   65.                IF    (EPAR,ZERO),'L EPAR,=A(SEGDUMMY)'
 000056 58F0 A806            00828  1854  1          +
 00005A 50F0 7004            00004  1859  1   66.                MOVPARM SEGWRT,(EPAR)
 00005E 9200 7010      00010        1870  1   67.                SET     SEGFINIT              | set exit routine code
 USING  @SEGRTN-72,R13              1876  1   68.                PSET    @SEGRTN               Set up processing rtn call
 000062 D703 D048 D048 00000 00000  1893  1          +
 000068 5070 D048            00000  1894  1   69.                MOVPARM @SEGRCB,(RY)          | to point to control block
 00006C 0DEF                        1905  1   70.                BASR  RAR,EPAR                Call the exit routine
 DROP   SEGCBD,R7                   1906      71.              END   ,                       OF Addr to control block
 00006E 981F C008            00008  1914      72.              PEND
 DROP   @SEGINIT-72,R12
 DROP   SEGINIT,R10
 000072 9680 C000/0B0E 00000        1929             +
 DROP   @SEGRTN-72,R13
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   11
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   1939      74.     *******************************************************************
                                    1940      75.     *                                                                 *
                                    1941      76.     *  SEGDUMMY - Default processing routine - do nothing.            *
                                    1942      77.     *                                                                 *
                                    1943      78.     *     Input - @SEGRTN                                             *
                                    1944      79.     *              appropriate minimal action taken                   *
                                    1945      80.     *                                                                 *
                                    1946      81.     *    Output - none                                                *
                                    1947      82.     *                                                                 *
                                    1948      83.     *******************************************************************
0000078                             1950      85.     SEGDUMMY PROC  @SEGRTN,SCOPE=LOCAL
 000078 E2C5C7C4E4D4D4E8            1955             +
 000080 0008/0000                   1956             +
 000084 900F D004/18AF       00004  1958             +
 USING  SEGDUMMY,R10
 00008A 50D0 C000/18CD       00000  1973             +
 000090 9680 C000      00000        1975             +
 USING  @SEGRTN-72,R12
 000094 41D0 C050            00050  1989             +
 000098 5870 C048            00000  1990      86.              L     RY,@SEGRCB
 USING  SEGCBD,R7                   1991      87.              WITH  (SEGCBD,RY)
                                    2004      88.     *
                                    2005      89.     *  Kill last character in overflow case
                                    2006      90.     *
 00009C 9503 7010      00010        2007      91.              IF    SEGFOVER,BEGIN          kill last character
 0000A0 4770 A02A            000AE  2017             +
 0000A4 4810 700A/0610       0000A  2022  1   92.                DECR  RS,SEGCNT
 0000AA 4010 700A            0000A  2026  1          +
 0000AE                             2027      93.              END   ,
                                    2031      94.     *
                                    2032      95.     *  On end-of-buffer call erase the buffer
                                    2033      96.     *
 0000AE A02E           000AE 000A2  2034      97.              ELSEIF SEGFEOB,BEGIN
 0000AE 47F0 A03C            000C0  2040             +
 0000B2 9502 7010      00010        2052             +
 0000B6 4770 A03C            000C0  2053             +
 0000BA                             2058  1   98.                CLEAR SEGCNT
 0000BA D701 700A 700A 0000A 0000A  2064  1          +
 0000C0                             2065      99.              END   ,
 0000C0 981F C008            00008  2069     100.              PEND  ,
 DROP   SEGCBD,R7
 DROP   @SEGRTN-72,R12
 DROP   SEGDUMMY,R10
 0000C4 9680 C000/0B0E 00000        2089             +
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   12
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   2096     102.     *******************************************************************
                                    2097     103.     *                                                                 *
                                    2098     104.     *       SEG - Add a text segment to a buffer.                     *
                                    2099     105.     *                                                                 *
                                    2100     106.     *     Input - @SEG                                                *
                                    2101     107.     *                                                                 *
                                    2102     108.     *    Output - none                                                *
                                    2103     109.     *                                                                 *
                                    2104     110.     *******************************************************************
0000000                00000 00001  2106     112.     #SEG     RECORD BEGIN
 000000 00                          2114  1  113.     #SEGF      FLAG  ,
 #SEGF.#SEGMORE    80 ONES          2118  1  114.                FLAG  #SEGMORE                More to seg on
 000001                00001 00001  2123     115.              END   ,
00000CA                             2133     117.     SEG      PROC  @SEG,#SEG,SCOPE=GLOBAL
 0000CA E2C5C74040404040            2139             +
 0000D2 0010/0008                   2140             +
 0000D6 900F D004/18AF       00004  2142             +
 USING  SEG,R10
 0000DC 50D0 C000/18CD       00000  2157             +
 0000E2 9680 C000      00000        2159             +
 USING  @SEG-72,R12
 AUSING (#SEG,@SEG+16)
 0000E6 41D0 C060            00060  2178             +
 0000EA 9680 C058      00000        2179     118.              SET   #SEGMORE                More to seg on
 0000EE 5870 C048            00000  2185     119.              L     RY,@SEGCB               Get the control block addr
 USING  SEGCBD,R7                   2186     120.              WITH  (SEGCBD,RY),BEGIN       Addr to control block
 0000F2 5820 C04C            00004  2200  1  121.                L     RA,@SEGLOC              Get the location of the data
 0000F6 5830 C050/1233       00008  2201  1  122.                LT    RB,@SEGLEN              And the length of the data
 0000FC 47D0 A056            0012C  2205  1  123.                IF    POS,BEGIN               Start segment
                                    2216  2  124.     *
                                    2217  2  125.     * Take care of any trimming that needs to be done
                                    2218  2  126.     *
 000100 9140 C054      0000C        2219  2  127.                  IF    @SEGT,BEGIN             Trim blanks off segment
 000104 47E0 A056            0012C  2229  2          +
 000108 4112 3000            00000  2234  3  128.                    LA    RS,@RB(RA)              Point 1 past end of string
 00010C 0610                        2235  3  129.                    DECR  RS                      Point at end of string
 00010E 1912/4750 A04C       00122  2237  3  130.                    WHILE ((RS,GE,RA),AND,(@RS,EQ,' ')),'DECR RS'
 000114 9540 1000      00000        2263  3          +
 000118 4770 A04C/0610       00122  2264  3          +
 00011E 47F0 A038            0010E  2275  3          +
 000122 1B12                        2277  3  131.                    SR    RS,RA                   Get the new length-1
 000124 4130 1001            00001  2278  3  132.                    LA    RB,@RS+1                Get the new length
 000128 94BF C054      0000C        2279  3  133.                    CLEAR @SEGT
 00012C                             2286  2  134.                  END   ,                       OF Trim blanks off segment
 00012C                             2290  1  135.                END   ,                       OF Start segment
                                    2294  1  136.     *
                                    2295  1  137.     * Now move the text into the buffer
                                    2296  1  138.     *
 00012C 1233/4720 A078       0014E  2297  1  139.                IF    (RB,~POS),BEGIN         No text lines
 000132 9180 C054      0000C        2311  2  140.                  IF    @SEGB,BEGIN             At least add a blank
 000136 47E0 A070            00146  2321  2          +
 00013A 4120 A786            0085C  2326  3  141.                    LA    RA,=C' '                Address of a blank
 00013E 4130 0001            00001  2327  3  142.                    LA    RB,1                    Length of the blank
 000142 947F C054      0000C        2328  3  143.                    CLEAR @SEGB                   Turn off the flag
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   13
0Current Usings:  (SEGCBD,R7) (SEG,R10) (@SEG-72,R12)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000146                             2335  2  144.                  END   ,                       OF At least add a blank
 000146 A074           00146 00138  2339  2  145.                  ELSE  'CLEAR #SEGMORE'        Nothing to seg
 000146 47F0 A078            0014E  2344  2          +
 00014A 947F C058      00000        2357  2          +
 00014E                             2362  1  146.                END   ,                       OF No text lines
 00014E 9180 C058      00000        2366  1  147.                WHILE #SEGMORE,BEGIN          More of segment to add
 000152 47E0 A0E0            001B6  2378  1          +
 000156 5840 7000            00000  2383  2  148.                  L     RJ,SEGADD               Get address of the buffer
 00015A 4A40 700A            0000A  2384  2  149.                  AH    RJ,SEGCNT               And get first free loc in buf
 00015E 4850 7008            00008  2385  2  150.                  LH    RK,SEGBLEN              Get max length
 000162 4B50 700A            0000A  2386  2  151.                  SH    RK,SEGCNT               And then length left
 000166 1953/47D0 A098       0016E  2387  2  152.                  CEIL  RK,RB                   Dont move more than we have
 00016C 1853                        2392  2          +
 00016E 4810 700A            0000A  2393  2  153.                  LH    RS,SEGCNT               Get the current count
 000172 1A15                        2394  2  154.                  AR    RS,RK                   Add in the amount we're moving
 000174 4010 700A            0000A  2395  2  155.                  STH   RS,SEGCNT               Update the count
 000178 0E42                        2396  2  156.                  MVCL  RJ,RA                   Move all we can
                                    2397  2  157.     *
                                    2398  2  158.     * We have moved all we can.  If it was not all that has been
                                    2399  2  159.     * requested, we must call the processing routine to clear some of
                                    2400  2  160.     * the data out of the buffer.  This will loop if the processing
                                    2401  2  161.     * routine does not remove at least one byte.
                                    2402  2  162.     *
 00017A 47B0 A0BC            00192  2403  2  163.                  IF    LT,BEGIN                More to move but no room
 00017E 9203 7010      00010        2414  3  164.                    SET   SEGFOVER                Set overflow state
 USING  @SEGRTN-72,R13              2420  3  165.                    PSET  @SEGRTN                 Set up to call routine
 000182 D703 D048 D048 00000 00000  2437  3          +
 000188 5070 D048            00000  2438  3  166.                    ST    RY,@SEGRCB              Tell him which SEGCB
 00018C 58F0 7004            00004  2439  3  167.                    L     EPAR,SEGWRT             Processing routine address
 000190 0DEF                        2440  3  168.                    BASR  RAR,EPAR                Go to it
 000192                             2441  2  169.                  END   ,
                                    2445  2  170.     *
                                    2446  2  171.     * Put in trailing blank, if requested.
                                    2447  2  172.     *
 000192 A0C0           00192 0017C  2448  2  173.                  ELSEIF @SEGB,BEGIN            Want the blank
 000192 47F0 A0D4            001AA  2454  2          +
 000196 9180 C054      0000C        2466  2          +
 00019A 47E0 A0D4            001AA  2467  2          +
 00019E 4120 A786            0085C  2472  3  174.                    LA    RA,=C' '                Address of a blank
 0001A2 4130 0001            00001  2473  3  175.                    LA    RB,1                    Length of the blank
 0001A6 947F C054      0000C        2474  3  176.                    CLEAR @SEGB                   Turn off the flag
 0001AA                             2481  2  177.                  END   ,
 0001AA A0D8           001AA 0019C  2485  2  178.                  ELSE  'CLEAR #SEGMORE'        No more to seg
 0001AA 47F0 A0DC            001B2  2490  2          +
 0001AE 947F C058      00000        2503  2          +
 0001B2 47F0 A078            0014E  2508  1  179.                END   ,                       OF More of segment to add
                                    2513  1  180.     *
                                    2514  1  181.     * Mark the buffer
                                    2515  1  182.     *
 0001B6 9120 C054      0000C        2516  1  183.                IF    @SEGMK,BEGIN
 0001BA 47E0 A0EE            001C4  2526  1          +
 0001BE D201 700C 700A 0000C 0000A  2531  2  184.                  MVC   SEGMCNT,SEGCNT          Save the count
 0001C4                             2532  1  185.                END   ,
                                    2536  1  186.     *
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   14
0Current Usings:  (SEGCBD,R7) (SEG,R10) (@SEG-72,R12) (@SEGRTN-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   2537  1  187.     * End of a logical record (end of line)
                                    2538  1  188.     *
 0001C4 9110 C054      0000C        2539  1  189.                IF    @SEGEOR,BEGIN
 0001C8 47E0 A110            001E6  2549  1          +
 0001CC 9201 7010      00010        2554  2  190.                  SET   SEGFEOR                 Notify the write routine
 0001D0                             2560  2  191.                  PSET  @SEGRTN                 Set up to call routine
 0001D0 D703 D048 D048 00000 00000  2570  2          +
 0001D6 5070 D048            00000  2571  2  192.                  ST    RY,@SEGRCB              Tell him which SEGCB
 0001DA 58F0 7004            00004  2572  2  193.                  L     EPAR,SEGWRT             Processing routine address
 0001DE 0DEF                        2573  2  194.                  BASR  RAR,EPAR                Go to it
 0001E0 D201 700E 700A 0000E 0000A  2574  2  195.                  MVC   SEGRCNT,SEGCNT          Save the record start position
 0001E6                             2575  1  196.                END   ,
                                    2579  1  197.     *
                                    2580  1  198.     * End of buffer.  Write the buffer out.
                                    2581  1  199.     *
 0001E6 9108 C054      0000C        2582  1  200.                IF    @SEGEOB,BEGIN
 0001EA 47E0 A132            00208  2592  1          +
 0001EE 9202 7010      00010        2597  2  201.                  SET   SEGFEOB                 Notify the write routine
 0001F2                             2603  2  202.                  PSET  @SEGRTN                 Set up to call routine
 0001F2 D703 D048 D048 00000 00000  2613  2          +
 0001F8 5070 D048            00000  2614  2  203.                  ST    RY,@SEGRCB              Tell him which SEGCB
 0001FC 58F0 7004            00004  2615  2  204.                  L     EPAR,SEGWRT             Processing routine address
 000200 0DEF                        2616  2  205.                  BASR  RAR,EPAR                Go to it
 000202 D201 700E 700A 0000E 0000A  2617  2  206.                  MVC   SEGRCNT,SEGCNT          Save the record start position
 000208                             2618  1  207.                END   ,
 DROP   SEGCBD,R7                   2622     208.              END   ,                       OF Addr to control block
 000208 981F C008            00008  2630     209.              PEND
 DROP   @SEG-72,R12
 DROP   SEG,R10
 00020C 9680 C000/0B0E 00000        2645             +
 DROP   @SEGRTN-72,R13
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   15
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   2655     211.     *******************************************************************
                                    2656     212.     *                                                                 *
                                    2657     213.     *    SEGCOL - Pad a buffer out to a particular column.            *
                                    2658     214.     *                                                                 *
                                    2659     215.     *     Input - @SEGCOL                                             *
                                    2660     216.     *                                                                 *
                                    2661     217.     *    Output - none                                                *
                                    2662     218.     *                                                                 *
                                    2663     219.     *******************************************************************
-
 000212                             2665     221.     SEGCOL   PROC  @SEGCOL,SCOPE=GLOBAL
 000212 E2C5C7C3D6D34040            2671             +
 00021A 0008/0000                   2672             +
 00021E 900F D004/18AF       00004  2674             +
 USING  SEGCOL,R10
 000224 50D0 C000/18CD       00000  2689             +
 00022A 9680 C000      00000        2691             +
 USING  @SEGCOL-72,R12
 00022E 41D0 C050            00050  2705             +
 000232 5870 C048            00000  2706     222.              L     RY,@SEGCCB              Get the seg control block
 USING  SEGCBD,R7                   2707     223.              WITH  (SEGCBD,RY),BEGIN       Addr to control block
 000236 5810 C04C            00004  2721  1  224.                L     RS,@SEGCNUM             Desired column number
 00023A 0610                        2722  1  225.                DECR  RS                      Col 1 is position 0
 00023C 4A10 700E            0000E  2724  1  226.                AH    RS,SEGRCNT              Relative to beginning of rec
 000240 4B10 700A            0000A  2725  1  227.                SH    RS,SEGCNT               Number of blanks to add
 000244 5910 A60E            0082C  2726  1  228.                FLOOR RS,1                    At least one blank
 000248 47B0 A032            00250  2735  1          +
 00024C 5810 A60E            0082C  2740  1          +
 000250 5910 A612            00830  2745  1  229.                CEIL  RS,L'BLANKS             Max blanks available
 000254 47D0 A03E            0025C  2754  1          +
 000258 5810 A612            00830  2759  1          +
 USING  @SEG-72,R13                 2764  1  230.                SEG   L:=A(BLANKS),(RS),.(RY)       Put blanks in buffer
 00025C D70C D048 D048 00000 00000  2782  1          +
 000262 5800 A616            00834  2791  1          +
 000266 5000 D04C            00004  2796  1          +
 00026A 5010 D050            00008  2806  1          +
 00026E 5070 D048            00000  2818  1          +
 000272 58F0 A61A/0DEF       00838  2821  1          +
 DROP   SEGCBD,R7                   2823     231.              END   ,                       OF Addr to control block
 000278 981F C008            00008  2831     232.              PEND  ,
 DROP   @SEGCOL-72,R12
 DROP   SEGCOL,R10
 00027C 9680 C000/0B0E 00000        2846             +
 DROP   @SEG-72,R13
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   16
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   2856     234.     *******************************************************************
                                    2857     235.     *                                                                 *
                                    2858     236.     *    SEGCLR - Re-initialize a seg control block.                  *
                                    2859     237.     *                                                                 *
                                    2860     238.     *     Input - @SEGINIT                                            *
                                    2861     239.     *                                                                 *
                                    2862     240.     *    Output - none                                                *
                                    2863     241.     *                                                                 *
                                    2864     242.     *******************************************************************
-
 000282                             2866     244.     SEGCLR   PROC  @SEGINIT,SCOPE=GLOBAL
 000282 E2C5C7C3D3D94040            2872             +
 00028A 0010/0000                   2873             +
 00028E 900F D004/18AF       00004  2875             +
 USING  SEGCLR,R10
 000294 50D0 C000/18CD       00000  2890             +
 00029A 9680 C000      00000        2892             +
 USING  @SEGINIT-72,R12
 00029E 41D0 C058            00058  2906             +
 0002A2 5870 C048            00000  2907     245.              L     RY,@SEGICB              Get control block address
 USING  SEGCBD,R7                   2908     246.              WITH  (SEGCBD,RY),BEGIN       Addr to control block
 0002A6                             2922  1  247.                CLEAR SEGCNT,SEGMCNT,SEGRCNT  Clear the counts
 0002A6 D701 700A 700A 0000A 0000A  2928  1          +
 0002AC D701 700C 700C 0000C 0000C  2933  1          +
 0002B2 D701 700E 700E 0000E 0000E  2938  1          +
 0002B8 9200 7010      00010        2939  1  248.                SET   SEGFINIT                Set function code for routine
 USING  @SEGRTN-72,R13              2945  1  249.                PSET  @SEGRTN                 Set up to call routine
 0002BC D703 D048 D048 00000 00000  2962  1          +
 0002C2 5070 D048            00000  2963  1  250.                ST    RY,@SEGRCB              Tell him which SEGCB
 0002C6 58F0 7004            00004  2964  1  251.                L     EPAR,SEGWRT             Processing routine address
 0002CA 0DEF                        2965  1  252.                BASR  RAR,EPAR                Go to it
 DROP   SEGCBD,R7                   2966     253.              END   ,                       OF Addr to control block
 0002CC 981F C008            00008  2974     254.              PEND  ,
 DROP   @SEGINIT-72,R12
 DROP   SEGCLR,R10
 0002D0 9680 C000/0B0E 00000        2989             +
 DROP   @SEGRTN-72,R13
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   17
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   2999     256.     *******************************************************************
                                    3000     257.     *                                                                 *
                                    3001     258.     *    SEGHEX - Add the data to the buffer after converting it to   *
                                    3002     259.     *             Hex.                                                *
                                    3003     260.     *                                                                 *
                                    3004     261.     *     Input - @SEG                                                *
                                    3005     262.     *                                                                 *
                                    3006     263.     *    Output - none                                                *
                                    3007     264.     *                                                                 *
                                    3008     265.     *******************************************************************
-
 000000                00000 00008  3010     267.     #SX      RECORD BEGIN                  Seg hex work area
 000000                             3018  1  268.     #SXBUF     DS    XL8
 000008                00008 00008  3019     269.              END   ,
-0002D6                             3029     271.     SEGHEX   PROC  @SEG,#SX,SCOPE=GLOBAL
 0002D6 E2C5C7C8C5E74040            3035             +
 0002DE 0010/0008                   3036             +
 0002E2 900F D004/18AF       00004  3038             +
 USING  SEGHEX,R10
 0002E8 50D0 C000/18CD       00000  3053             +
 0002EE 9680 C000      00000        3055             +
 USING  @SEG-72,R12
 AUSING (#SX,@SEG+16)
 0002F2 41D0 C060            00060  3074             +
 0002F6 5870 C048            00000  3075     272.              L     RY,@SEGCB               Get the SEGCB address
 USING  SEGCBD,R7                   3076     273.              WITH  (SEGCBD,RY),BEGIN       Addr to control block
 0002FA 5840 C04C            00004  3090  1  274.                L     RJ,@SEGLOC              Get the location of the data
 0002FE 5850 C050            00008  3091  1  275.                L     RK,@SEGLEN              And its length
                                    3092  1  276.     *
                                    3093  1  277.     * Loop, moving in 4 bytes of source at a pop
                                    3094  1  278.     *
 000302 1255/47D0 A07E       00360  3095  1  279.                WHILE (RK,POS),BEGIN
 000308 4120 0004            00004  3111  2  280.                  LA    RA,4                    Max to process at a time
 00030C 1925/47D0 A032       00314  3112  2  281.                  CEIL  RA,RK                   But not bigger than length
 000312 1825                        3117  2          +
 000314 1832                        3118  2  282.                  LR    RB,RA                   Multiply length by 2
 000316 8930 0001            00001  3119  2  283.                  SLL   RB,1                    |
 USING  @BTX-72,R13                 3120  2  284.                  BTX   @RJ,#SXBUF,8            Convert it
 00031A D70B D048 D048 00000 00000  3138  2          +
 000320 D203 D048 4000 00000 00000  3143  2          +
 000326 4100 C058            00000  3156  2          +
 00032A 5000 D04C            00004  3161  2          +
 00032E 4100 0008            00008  3173  2          +
 000332 5000 D050            00008  3178  2          +
 000336 58F0 A55A/0DEF       0083C  3181  2          +
 00033C 1A42                        3183  2  285.                  AR    RJ,RA                   Update the pointer
 00033E 1B52                        3184  2  286.                  SR    RK,RA                   And the length
                                    3185  2  287.     *
                                    3186  2  288.     * We have the data converted to hex.  Now put it into the buffer
                                    3187  2  289.     *
                                    3188  2  290.                  PUSH  USING
 DROP   @BTX-72,R13                 3189  2  291.                  SEG   #SXBUF,(RB),.(RY)       Seg the data in
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   18
0Current Usings:  (SEGCBD,R7) (SEGHEX,R10) (@SEG-72,R12) (@SEG-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0USING  @SEG-72,R13
 000340 D70C D048 D048 00000 00000  3210  2          +
 000346 4100 C058            00000  3223  2          +
 00034A 5000 D04C            00004  3228  2          +
 00034E 5030 D050            00008  3238  2          +
 000352 5070 D048            00000  3250  2          +
 000356 58F0 A556/0DEF       00838  3253  2          +
 DROP   @SEG-72,R13                 3255  2  292.                  POP   USING                   Restore the usings
 USING  @BTX-72,R13
 00035C 47F0 A020            00302  3298  1  293.                END   ,                       Continue until no more to do
 DROP   SEGCBD,R7                   3303     294.              END   ,                       OF Addr to control block
 000360 981F C008            00008  3311     295.              PEND  ,
 DROP   @SEG-72,R12
 DROP   SEGHEX,R10
 000364 9680 C000/0B0E 00000        3326             +
 DROP   @BTX-72,R13
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   19
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   3336     297.     *******************************************************************
                                    3337     298.     *                                                                 *
                                    3338     299.     *   SEGCORE - Dump core in a user specified format.               *
                                    3339     300.     *                                                                 *
                                    3340     301.     *     Input - @SEGCORE                                            *
                                    3341     302.     *                                                                 *
                                    3342     303.     *    Output - none                                                *
                                    3343     304.     *                                                                 *
                                    3344     305.     *******************************************************************
-
                                    3346     307.     *
                                    3347     308.     * Data used during the output
                                    3348     309.     *
 000000                00000 00069  3349     310.     #SC      RECORD BEGIN                  Seg core work area
 000000                             3357  1  311.     #SCBUF     DS    XL32                    Buffer for translation
 000020                             3358  1  312.     #SCPBUF    DS    XL32                    Prev buf contents (untrans)
 000040                             3359  1  313.     #SCADDR    DS    A                       Address of data left to move
 000044                             3360  1  314.     #SCLEN     DS    A                       Length of data left to move
 000048                             3361  1  315.     #SCOFF     DS    A                       Address of offset
 00004C                             3362  1  316.     #SCANUM    DS    A                       Number of alignment bytes
 000050                             3363  1  317.     #SCANUME   DS    A                       Ending alignment bytes
 000054                             3364  1  318.     #SCRBEG    DS    A                       Beginning repeat addr
 000058                             3365  1  319.     #SCREND    DS    A                       Ending repeat addr
 00005C                             3366  1  320.     #SCBUFL    DS    A                       Bytes/line
 000060                             3367  1  321.     #SCCURL    DS    A                       This line's length
 000064                             3368  1  322.     #SCPREL    DS    A                       Previous line's length
 000068 00                          3369  1  323.     #SCFLAGS   FLAG  ,
 #SCFLAGS.#SCFREP  80 ONES          3373  1  324.                FLAG  #SCFREP                 There is a repeat line
 000069                00069 00069  3378     325.              END   ,
-00036A                             3388     327.     SEGCORE  PROC   @SEGCORE,#SC,SCOPE=GLOBAL
 00036A E2C5C7C3D6D9C540            3394             +
 000372 0018/0070                   3395             +
 000376 900F D004/18AF       00004  3397             +
 USING  SEGCORE,R10
 00037C 50D0 C000/18CD       00000  3412             +
 000382 9680 C000      00000        3414             +
 USING  @SEGCORE-72,R12
 AUSING (#SC,@SEGCORE+24)
 000386 41D0 C0D0            000D0  3433             +
                                    3434     328.              SEGDEF @SEGXCB                Define control block's addr
                                    3435     329.     *
                                    3436     330.     * First, get us the data needed from the parms
                                    3437     331.     *
 00038A D203 C0A4 C050 00044 00008  3438     332.              MVC   #SCLEN,@SEGXLEN         Save the length
 000390 D203 C0A0 C04C 00040 00004  3439     333.              MVC   #SCADDR,@SEGXLOC        And the data location
                                    3440     334.     *
                                    3441     335.     * Get the alignment info
                                    3442     336.     *
 000396 947F C0C8      00068        3443     337.              CLEAR #SCFREP                 No repeats to start
 00039A                             3450     338.              CLEAR #SCPREL                 | and no initial length
 00039A D703 C0C4 C0C4 00064 00064  3456             +
 0003A0 9120 C055      0000D        3457     339.              IF    @SEGXFOF,BEGIN          Print offsets
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   20
0Current Usings:  (SEGCORE,R10) (@SEGCORE-72,R12)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
00003A4 47E0 A03A            003B0  3467             +
 0003A8 1B22                        3472  1  340.                CLEAR (RA)                    | aligned
 0003AA D203 C0A8 C058 00048 00010  3476  1  341.                MVC   #SCOFF,@SEGXOFF         | address to offset from
 0003B0                             3477     342.              END   ,                       OF Print offsets
 0003B0 A03E           003B0 003A6  3481     343.              ELSE  BEGIN                   Otherwise align on boundry
 0003B0 47F0 A048            003BE  3486             +
 0003B4 5820 C0A0            00040  3492  1  344.                L     RA,#SCADDR              | for boundry offset
 0003B8                             3493  1  345.                CLEAR #SCOFF                  | no offset
 0003B8 D703 C0A8 C0A8 00048 00048  3499  1          +
 0003BE                             3500     346.              END   ,                       OF align on boundry
 0003BE 9180 C055      0000D        3504     347.              IF    @SEGXF16,BEGIN          16 Bytes/line
 0003C2 47E0 A05A            003D0  3514             +
 0003C6 5830 A4CA            00840  3519  1  348.                L     RB,=A(X'0000000F')      Alignment value
 0003CA D203 C0BC A4CE 0005C 00844  3520  1  349.                MVC   #SCBUFL,=A(16)          | Buffer length
 0003D0 A05E           003D0 003C4  3521     350.              END   ELSE,BEGIN
 0003D0 47F0 A068            003DE  3530             +
 0003D4 5830 A4D2            00848  3536  1  351.                L     RB,=A(X'0000001F')      32 Byte alignment value
 0003D8 D203 C0BC A4D6 0005C 0084C  3537  1  352.                MVC   #SCBUFL,=A(32)          | Buffer length
 0003DE                             3538     353.              END   ,
                                    3542     354.
 0003DE 1423                        3543     355.              NR    RA,RB                   Starting print line
 0003E0 5020 C0AC            0004C  3544     356.              ST    RA,#SCANUM              Alignment number for 1st line
                                    3545     357.     *
                                    3546     358.     * Loop, printing each line.
                                    3547     359.     *
 0003E4 5820 C0A0            00040  3548     360.              L     RA,#SCADDR              Get the location
 0003E8 5830 C0A4/1233       00044  3549     361.     SCLOOP   WHILE ('LT RB,#SCLEN',POS),BEGIN       Still more to dump
 0003EE 47D0 A3F0            00766  3563             +
                                    3568  1  362.     *
                                    3569  1  363.     * Check to see if this line is a repeat line
                                    3570  1  364.     *
 0003F2 9108 C055      0000D        3571  1  365.     SCREPCHK   IF    (~@SEGXFRL),BEGIN       Check for repeats
 0003F6 4710 A18C            00502  3582  1          +
 0003FA 5930 C0BC            0005C  3587  2  366.                  CEIL  RB,#SCBUFL              Max size for the compare
 0003FE 47D0 A090            00406  3591  2          +
 000402 5830 C0BC            0005C  3592  2          +
                                    3593  2  367.   C              IF    ((RB,EQ,#SCBUFL),AND,(RB,EQ,#SCPREL),AND,
 000406 5930 C0BC            0005C        2  368.                        ('DEX RB,"CLC @RA(0),#SCPBUF"',EQ)),BEGIN
 00040A 4770 A0DA            00450  3607  2          +
 00040E 5930 C0C4            00064  3620  2          +
 000412 4770 A0DA/0630       00450  3621  2          +
 000418 4430 A4F8            0086E  3634  2          +
 00086E D500 2000 C080 00000 00020  3641  2          +
 00041C 4770 A0DA            00450  3649  2          +
                                    3654  3  369.     *
                                    3655  3  370.     * Line is a repeat, notify
                                    3656  3  371.     *
 000420 9180 C0C8      00068        3657  3  372.                    IF    ~#SCFREP,BEGIN          First line of repeat
 000424 4710 A0BA            00430  3667  3          +
 000428 5020 C0B4            00054  3672  4  373.                      ST    RA,#SCRBEG              Beginning addr of match
 00042C 9680 C0C8      00068        3673  4  374.                      SET   #SCFREP                 Show at least 1 repeat exists
 000430                             3679  3  375.                    END   ,                       OF First line of repeat
 000430 1E23                        3683  3  376.                    ALR   RA,RB                   Ending addr of match
 000432 5020 C0B8            00058  3684  3  377.                    ST    RA,#SCREND              | RB is decremented len
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   21
0Current Usings:  (SEGCORE,R10) (@SEGCORE-72,R12)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000436 5E20 A4B6            0082C  3685  3  378.                    INCR  RA                      Remaining loc/len
 00043A 5020 C0A0            00040  3688  3  379.                    ST    RA,#SCADDR              |
 00043E 5E30 A4B6            0082C  3689  3  380.                    INCR  RB                      | length
 000442 1333                        3692  3  381.                    LCR   RB,RB                   |
 000444 5E30 C0A4            00044  3693  3  382.                    AL    RB,#SCLEN               |
 000448 5030 C0A4            00044  3694  3  383.                    ST    RB,#SCLEN               |
 00044C 47F0 A072            003E8  3695  3  384.                    NEXT  SCLOOP
 000450                             3698  2  385.                  END   ,                       OF Line is the same
 000450                             3702  2  386.                  BEGIN ,                       Not the same
 000450 9180 C0C8      00068        3706  3  387.                    IF    #SCFREP,BEGIN           Repeat lines need msg first
 000454 47E0 A18C            00502  3716  3          +
 USING  @SEGCOL-72,R13              3721  4  388.                      SEGCOL  12
 000458 D707 D048 D048 00000 00000  3739  4          +
 00045E 4100 000C            0000C  3751  4          +
 000462 5000 D04C            00004  3756  4          +
 000466 D203 D048 C048 00000 00000  3763  4          +
 00046C 58F0 A4DA/0DEF       00850  3766  4          +
 DROP   @SEGCOL-72,R13              3768  4  389.                      SEGADDR #SCRBEG
 USING  @SAD-72,R13
 000472 D70B D048 D048 00000 00000  3789  4          +
 000478 D203 D050 C0B4 00008 00054  3795  4          +
 00047E 4100 C060            00000  3808  4          +
 000482 5000 D048            00000  3813  4          +
 000486 4100 C048            00000  3826  4          +
 00048A 5000 D04C            00004  3831  4          +
 00048E 41F0 A61C/0DEF       00992  3839  4          +
 DROP   @SAD-72,R13                 3841  4  390.                      SEG     '/'
 USING  @SEG-72,R13
 000494 D70C D048 D048 00000 00000  3862  4          +
 00049A 4100 A4E7            0085D  3871  4          +
 00049E 5000 D04C            00004  3876  4          +
 0004A2 4100 0001            00001  3888  4          +
 0004A6 5000 D050            00008  3893  4          +
 0004AA D203 D048 C048 00000 00000  3900  4          +
 0004B0 58F0 A4C2/0DEF       00838  3903  4          +
 DROP   @SEG-72,R13                 3905  4  391.                      SEGADDR #SCREND
 USING  @SAD-72,R13
 0004B6 D70B D048 D048 00000 00000  3926  4          +
 0004BC D203 D050 C0B8 00008 00058  3932  4          +
 0004C2 4100 C060            00000  3945  4          +
 0004C6 5000 D048            00000  3950  4          +
 0004CA 4100 C048            00000  3963  4          +
 0004CE 5000 D04C            00004  3968  4          +
 0004D2 41F0 A61C/0DEF       00992  3976  4          +
 DROP   @SAD-72,R13                 3978  4  392.                      SEGEOR  ' same as above.'
 USING  @SEG-72,R13
 0004D8 D70C D048 D048 00000 00000  4000  4          +
 0004DE 4100 A4E8            0085E  4009  4          +
 0004E2 5000 D04C            00004  4014  4          +
 0004E6 4100 000F            0000F  4026  4          +
 0004EA 5000 D050            00008  4031  4          +
 0004EE D203 D048 C048 00000 00000  4038  4          +
 0004F4 9610 D054      0000C        4044  4          +
 0004F8 58F0 A4C2/0DEF       00838  4047  4          +
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   22
0Current Usings:  (SEGCORE,R10) (@SEGCORE-72,R12) (@SEG-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
00004FE 947F C0C8      00068        4049  4  393.                      CLEAR   #SCFREP
 000502                             4056  3  394.                    END   ,                       OF Repeat lines need msg first
 000502                             4060  2  395.                  END   ,                       OF Not the same
 000502                             4064  1  396.                END   ,                       OF Check for repeats
                                    4068  1  397.     *
                                    4069  1  398.     * Put in the address or the offset
                                    4070  1  399.     *
 DROP   @SEG-72,R13                 4071  1  400.                SEGADDR #SCADDR
 USING  @SAD-72,R13
 000502 D70B D048 D048 00000 00000  4092  1          +
 000508 D203 D050 C0A0 00008 00040  4098  1          +
 00050E 4100 C060            00000  4111  1          +
 000512 5000 D048            00000  4116  1          +
 000516 4100 C048            00000  4129  1          +
 00051A 5000 D04C            00004  4134  1          +
 00051E 41F0 A61C/0DEF       00992  4142  1          +
 DROP   @SAD-72,R13                 4144  1  401.                SEG   BLANKS,2
 USING  @SEG-72,R13
 000524 D70C D048 D048 00000 00000  4165  1          +
 00052A 4100 AFC4            0133A  4178  1          +
 00052E 5000 D04C            00004  4183  1          +
 000532 4100 0002            00002  4195  1          +
 000536 5000 D050            00008  4200  1          +
 00053A D203 D048 C048 00000 00000  4207  1          +
 000540 58F0 A4C2/0DEF       00838  4210  1          +
                                    4212  1  402.
 000546 5830 C0A4            00044  4213  1  403.                L     RB,#SCLEN               This Line length
 00054A 5870 C0BC            0005C  4214  1  404.                L     RY,#SCBUFL              | buffer length
 00054E 1937/47D0 A1E0       00556  4215  1  405.                CEIL  RB,RY                   |
 000554 1837                        4220  1          +
 000556 5860 C0AC            0004C  4221  1  406.                L     RX,#SCANUM              Maximum # chars this line
 00055A 1F76                        4222  1  407.                SLR   RY,RX                   | buffer - alignment
 00055C 1937/47D0 A1EE       00564  4223  1  408.                CEIL  RB,RY                   |
 000562 1837                        4228  1          +
 000564 5030 C0C0            00060  4229  1  409.                ST    RB,#SCCURL              | Current length
 000568 1F73                        4230  1  410.                SLR   RY,RB                   End alignment chars
 00056A 5070 C0B0            00050  4231  1  411.                ST    RY,#SCANUME             |
 00056E 1266/4780 A27A       005F0  4232  1  412.                IF    (RX,NZ),BEGIN           Starting alignment
                                    4246  2  413.     *
                                    4247  2  414.     * If there is alignment to be done, do it.
                                    4248  2  415.     *
 000574 1856                        4249  2  416.                  LR    RK,RX                   2 chars/byte + 1 space/fwd
 000576 1B44                        4250  2  417.                  CLEAR (RJ)                    | |
 000578 5D40 A4DE            00854  4254  2  418.                  D     RJ,=A(4)                | | RK = # fullwords
 00057C 1876                        4255  2  419.                  LR    RY,RX                   | save byte count
 00057E 8970 0001            00001  4256  2  420.                  SLL   RY,1                    | 2 chars/byte
 000582 1E75                        4257  2  421.                  ALR   RY,RK                   | + fullword spaces
 000584                             4258  2  422.                  SEG   BLANKS,(RY)             |
 000584 D70C D048 D048 00000 00000  4269  2          +
 00058A 4100 AFC4            0133A  4282  2          +
 00058E 5000 D04C            00004  4287  2          +
 000592 5070 D050            00008  4297  2          +
 000596 D203 D048 C048 00000 00000  4304  2          +
 00059C 58F0 A4C2/0DEF       00838  4307  2          +
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   23
0Current Usings:  (SEGCORE,R10) (@SEGCORE-72,R12) (@SEG-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   4309  2  423.
 0005A2 1374                        4310  2  424.                  LCR   RY,RJ                   Num bytes to next fullword
 0005A4 5E70 A4DE            00854  4311  2  425.                  AL    RY,=A(4)                | 4-number of odd bytes
 0005A8 1277/4780 A27A       005F0  4312  2  426.                  IF    (RY,NZ),BEGIN           Format odd bytes
 0005AE                             4326  3  427.                    SEGHEX L:#SCADDR,(RY)         | format them
 0005AE D70C D048 D048 00000 00000  4337  3          +
 0005B4 D203 D04C C0A0 00004 00040  4343  3          +
 0005BA 5070 D050            00008  4353  3          +
 0005BE D203 D048 C048 00000 00000  4360  3          +
 0005C4 58F0 A4E2/0DEF       00858  4363  3          +
 0005CA                             4365  3  428.                    SEG   BLANKS,1
 0005CA D70C D048 D048 00000 00000  4376  3          +
 0005D0 4100 AFC4            0133A  4389  3          +
 0005D4 5000 D04C            00004  4394  3          +
 0005D8 4100 0001            00001  4406  3          +
 0005DC 5000 D050            00008  4411  3          +
 0005E0 D203 D048 C048 00000 00000  4418  3          +
 0005E6 58F0 A4C2/0DEF       00838  4421  3          +
 0005EC 1E27                        4423  3  429.                    ALR   RA,RY                   Remaining location
 0005EE 1F37                        4424  3  430.                    SLR   RB,RY                   | remaining length
 0005F0                             4425  2  431.                  END   ,                       OF Format odd bytes
 0005F0                             4429  1  432.                END   ,                       OF Starting alignment
                                    4433  1  433.     *
                                    4434  1  434.     * Put out hex characters
                                    4435  1  435.     *
 0005F0 4160 0004            00004  4436  1  436.                LA    RX,4                    Fullword at a time
 0005F4 1233/47D0 A2D4       0064A  4437  1  437.                WHILE (RB,POS),BEGIN          Still more in this line
 0005FA 1873                        4453  2  438.                  LR    RY,RB                   Maximum length
 0005FC 1976/47D0 A28E       00604  4454  2  439.                  CEIL  RY,RX                   |
 000602 1876                        4459  2          +
 000604                             4460  2  440.                  SEGHEX (RA),(RY)
 000604 D70C D048 D048 00000 00000  4471  2          +
 00060A 5020 D04C            00004  4482  2          +
 00060E 5070 D050            00008  4492  2          +
 000612 D203 D048 C048 00000 00000  4499  2          +
 000618 58F0 A4E2/0DEF       00858  4502  2          +
 00061E                             4504  2  441.                  SEG   BLANKS,1
 00061E D70C D048 D048 00000 00000  4515  2          +
 000624 4100 AFC4            0133A  4528  2          +
 000628 5000 D04C            00004  4533  2          +
 00062C 4100 0001            00001  4545  2          +
 000630 5000 D050            00008  4550  2          +
 000634 D203 D048 C048 00000 00000  4557  2          +
 00063A 58F0 A4C2/0DEF       00838  4560  2          +
 000640 4126 2000            00000  4562  2  442.                  LA    RA,@RA(RX)              Next loc
 000644 1F36                        4563  2  443.                  SLR   RB,RX                   | remaining len
 000646 47F0 A27E            005F4  4564  1  444.                END   ,                       OF Still more in this line
                                    4569  1  445.
 00064A 5860 C0B0/1266       00050  4570  1  446.                IF    ('LT RX,#SCANUME',POS),BEGIN     Ending alignment
 000650 47D0 A30A            00680  4581  1          +
 000654 1856                        4586  2  447.                  LR    RK,RX                   2 chars/byte + 1 space/fwd
 000656 1B44                        4587  2  448.                  CLEAR (RJ)                    | |
 000658 5D40 A4DE            00854  4591  2  449.                  D     RJ,=A(4)                | | RK = # fullwords
 00065C 8960 0001            00001  4592  2  450.                  SLL   RX,1                    | 2 chars/byte
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   24
0Current Usings:  (SEGCORE,R10) (@SEGCORE-72,R12) (@SEG-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000660 1E65                        4593  2  451.                  ALR   RX,RK                   | + fullword spaces
 000662                             4594  2  452.                  SEG   BLANKS,(RX)             |
 000662 D70C D048 D048 00000 00000  4605  2          +
 000668 4100 AFC4            0133A  4618  2          +
 00066C 5000 D04C            00004  4623  2          +
 000670 5060 D050            00008  4633  2          +
 000674 D203 D048 C048 00000 00000  4640  2          +
 00067A 58F0 A4C2/0DEF       00838  4643  2          +
 000680                             4645  1  453.                END   ,                       OF Ending alignment
                                    4649  1  454.
 000680 5820 C0A0            00040  4650  1  455.                L     RA,#SCADDR              This line's loc/len
 000684 5830 C0C0            00060  4651  1  456.                L     RB,#SCCURL              | and length of this line
 000688 5030 C0C4            00064  4652  1  457.                ST    RB,#SCPREL              | set as previous len
 00068C 0630/4430 A4FE       00874  4653  1  458.                DEX   RB,'MVC #SCPBUF(0),@RA' |  and data
 000874 D200 C080 2000 00020 00000  4664  1          +
                                    4672  1  459.     *
 000692 9140 C055      0000D        4673  1  460.                IF    @SEGXFAL,BEGIN          Put out alpha chars
 000696 47E0 A3B6            0072C  4683  1          +
 00069A 4160 0002            00002  4688  2  461.                  LA    RX,2                    Space for breathing
 00069E 5E60 C0AC            0004C  4689  2  462.                  AL    RX,#SCANUM              | + any alignment
 0006A2                             4690  2  463.                  SEG   BLANKS,(RX)             |
 0006A2 D70C D048 D048 00000 00000  4701  2          +
 0006A8 4100 AFC4            0133A  4714  2          +
 0006AC 5000 D04C            00004  4719  2          +
 0006B0 5060 D050            00008  4729  2          +
 0006B4 D203 D048 C048 00000 00000  4736  2          +
 0006BA 58F0 A4C2/0DEF       00838  4739  2          +
 0006C0                             4741  2  464.                  SEG   '|'
 0006C0 D70C D048 D048 00000 00000  4752  2          +
 0006C6 4100 A4F7            0086D  4761  2          +
 0006CA 5000 D04C            00004  4766  2          +
 0006CE 4100 0001            00001  4778  2          +
 0006D2 5000 D050            00008  4783  2          +
 0006D6 D203 D048 C048 00000 00000  4790  2          +
 0006DC 58F0 A4C2/0DEF       00838  4793  2          +
                                    4795  2  465.     *
                                    4796  2  466.     * Put out alpha characters
                                    4797  2  467.     *
 0006E2 4430 A504            0087A  4798  2  468.                  EX    RB,'MVC #SCBUF(0),@RA'
 00087A D200 C060 2000 00000 00000  4806  2          +
 0006E6 4430 A50A            00880  4814  2  469.                  EX    RB,'TR #SCBUF(0),BCDTBL'
 000880 DC00 C060 A510 00000 00886  4822  2          +
 0006EA                             4830  2  470.                  SEG   #SCBUF,L:#SCCURL
 0006EA D70C D048 D048 00000 00000  4841  2          +
 0006F0 4100 C060            00000  4854  2          +
 0006F4 5000 D04C            00004  4859  2          +
 0006F8 D203 D050 C0C0 00008 00060  4864  2          +
 0006FE D203 D048 C048 00000 00000  4871  2          +
 000704 58F0 A4C2/0DEF       00838  4874  2          +
 00070A                             4876  2  471.                  SEG   '|'
 00070A D70C D048 D048 00000 00000  4887  2          +
 000710 4100 A4F7            0086D  4896  2          +
 000714 5000 D04C            00004  4901  2          +
 000718 4100 0001            00001  4913  2          +
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   25
0Current Usings:  (SEGCORE,R10) (@SEGCORE-72,R12) (@SEG-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
000071C 5000 D050            00008  4918  2          +
 000720 D203 D048 C048 00000 00000  4925  2          +
 000726 58F0 A4C2/0DEF       00838  4928  2          +
 00072C                             4930  1  472.                END   ,                       OF Put out alpha chars
 00072C                             4934  1  473.                SEGEOR ,
 00072C D70C D048 D048 00000 00000  4946  1          +
 000732 D703 D050 D050 00008 00008  4954  1          +
 000738 D203 D048 C048 00000 00000  4961  1          +
 00073E 9610 D054      0000C        4967  1          +
 000742 58F0 A4C2/0DEF       00838  4970  1          +
 000748                             4972  1  474.                CLEAR #SCANUM                 Starting alignment done
 000748 D703 C0AC C0AC 0004C 0004C  4978  1          +
 00074E 5830 C0C0            00060  4979  1  475.                L     RB,#SCCURL              New loc/len
 000752 1E23                        4980  1  476.                ALR   RA,RB                   | new loc
 000754 5020 C0A0            00040  4981  1  477.                ST    RA,#SCADDR              |
 000758 1333                        4982  1  478.                LCR   RB,RB                   |
 00075A 5E30 C0A4            00044  4983  1  479.                AL    RB,#SCLEN               | new len
 00075E 5030 C0A4            00044  4984  1  480.                ST    RB,#SCLEN               |
 000762 47F0 A072            003E8  4985     481.              END   ,                       OF Still have more to dump
 000766 9180 C0C8      00068        4990     482.              IF      #SCFREP,BEGIN         Repeat lines need msg
 00076A 47E0 A4A2            00818  5000             +
 DROP   @SEG-72,R13                 5005  1  483.                SEGCOL  10
 USING  @SEGCOL-72,R13
 00076E D707 D048 D048 00000 00000  5026  1          +
 000774 4100 000A            0000A  5038  1          +
 000778 5000 D04C            00004  5043  1          +
 00077C D203 D048 C048 00000 00000  5050  1          +
 000782 58F0 A4DA/0DEF       00850  5053  1          +
 DROP   @SEGCOL-72,R13              5055  1  484.                SEGADDR #SCRBEG
 USING  @SAD-72,R13
 000788 D70B D048 D048 00000 00000  5076  1          +
 00078E D203 D050 C0B4 00008 00054  5082  1          +
 000794 4100 C060            00000  5095  1          +
 000798 5000 D048            00000  5100  1          +
 00079C 4100 C048            00000  5113  1          +
 0007A0 5000 D04C            00004  5118  1          +
 0007A4 41F0 A61C/0DEF       00992  5126  1          +
 DROP   @SAD-72,R13                 5128  1  485.                SEG     '/'
 USING  @SEG-72,R13
 0007AA D70C D048 D048 00000 00000  5149  1          +
 0007B0 4100 A4E7            0085D  5158  1          +
 0007B4 5000 D04C            00004  5163  1          +
 0007B8 4100 0001            00001  5175  1          +
 0007BC 5000 D050            00008  5180  1          +
 0007C0 D203 D048 C048 00000 00000  5187  1          +
 0007C6 58F0 A4C2/0DEF       00838  5190  1          +
 DROP   @SEG-72,R13                 5192  1  486.                SEGADDR #SCREND
 USING  @SAD-72,R13
 0007CC D70B D048 D048 00000 00000  5213  1          +
 0007D2 D203 D050 C0B8 00008 00058  5219  1          +
 0007D8 4100 C060            00000  5232  1          +
 0007DC 5000 D048            00000  5237  1          +
 0007E0 4100 C048            00000  5250  1          +
 0007E4 5000 D04C            00004  5255  1          +
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   26
0Current Usings:  (SEGCORE,R10) (@SEGCORE-72,R12) (@SAD-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
00007E8 41F0 A61C/0DEF       00992  5263  1          +
 DROP   @SAD-72,R13                 5265  1  487.                SEGEOR  ' same as above.'
 USING  @SEG-72,R13
 0007EE D70C D048 D048 00000 00000  5287  1          +
 0007F4 4100 A4E8            0085E  5296  1          +
 0007F8 5000 D04C            00004  5301  1          +
 0007FC 4100 000F            0000F  5313  1          +
 000800 5000 D050            00008  5318  1          +
 000804 D203 D048 C048 00000 00000  5325  1          +
 00080A 9610 D054      0000C        5331  1          +
 00080E 58F0 A4C2/0DEF       00838  5334  1          +
 000814 947F C0C8      00068        5336  1  488.                CLEAR   #SCFREP
 000818                             5343     489.              END   ,                       OF Repeat lines need msg
 000818 981F C008            00008  5347     490.              PEND  ,
 DROP   @SEGCORE-72,R12
 DROP   SEGCORE,R10
 00081C 9680 C000/0B0E 00000        5362             +
 DROP   @SEG-72,R13
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   27
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   5372     492.     *
                                    5373     493.     *  EBCDIC CONVERSION TABLE
                                    5374     494.     *
 000886                0086E 015A4  5375     495.              DATA  BEGIN
 000886 4B4B4B4B4B4B4B4B            5380  1  496.     BCDTBL     DC    256C'.'
 000986                00986 00947  5381  1  497.                ORG   BCDTBL+C'A'
 000947 C1C2C3C4C5C6C7C8            5382  1  498.                DC    C'ABCDEFGHI'
 000950                00950 00957  5383  1  499.                ORG   BCDTBL+C'J'
 000957 D1D2D3D4D5D6D7D8            5384  1  500.                DC    C'JKLMNOPQR'
 000960                00960 00968  5385  1  501.                ORG   BCDTBL+C'S'
 000968 E2E3E4E5E6E7E8E9            5386  1  502.                DC    C'STUVWXYZ'
 000970                00970 00907  5387  1  503.                ORG   BCDTBL+C'a'
 000907 8182838485868788            5388  1  504.                DC    C'abcdefghi'
 000910                00910 00917  5389  1  505.                ORG   BCDTBL+C'j'
 000917 9192939495969798            5390  1  506.                DC    C'jklmnopqr'
 000920                00920 00928  5391  1  507.                ORG   BCDTBL+C's'
 000928 A2A3A4A5A6A7A8A9            5392  1  508.                DC    C'stuvwxyz'
 000930                00930 00976  5393  1  509.                ORG   BCDTBL+C'0'
 000976 F0F1F2F3F4F5F6F7            5394  1  510.                DC    C'0123456789'
 000980                00980 008C6  5395  1  511.                ORG   BCDTBL+C' '
 0008C6 40                          5396  1  512.                DC    C' '
 0008C7                008C7 008D2  5397  1  513.                ORG   BCDTBL+C'<'
 0008D2 4C4D4E4F50                  5398  1  514.                DC    C'<(+|&&'
 0008D7                008D7 008E0  5399  1  515.                ORG   BCDTBL+C'!'
 0008E0 5A5B5C5D5E5F6061            5400  1  516.                DC    C'!$*);~-/'
 0008E8                008E8 008F1  5401  1  517.                ORG   BCDTBL+C','
 0008F1 6B6C6D6E6F                  5402  1  518.                DC    C',%_>?'
 0008F6                008F6 00900  5403  1  519.                ORG   BCDTBL+C':'
 000900 7A7B7C7D7E7F                5404  1  520.                DC    C':#@''="'
 000906                00906 00986  5405  1  521.                ORG   ,
 000822                00000 015A4  5406     522.              END   ,
 000828                             5412     523.              LTORG
 000828 00000084                    5414                             =A(SEGDUMMY)
 00082C 00000001                    5415                             =A(1)
 000830 00000100                    5416                             =A(L'BLANKS)
 000834 0000133A                    5417                             =A(BLANKS)
 000838 00000000                    5418                             =V(SEG)
 00083C 00000000                    5419                             =V(BTXBTX)
 000840 0000000F                    5420                             =A(X'0000000F')
 000844 00000010                    5421                             =A(16)
 000848 0000001F                    5422                             =A(X'0000001F')
 00084C 00000020                    5423                             =A(32)
 000850 00000000                    5424                             =V(SEGCOL)
 000854 00000004                    5425                             =A(4)
 000858 00000000                    5426                             =V(SEGHEX)
 00085C 40                          5427                             =C' '
 00085D 61                          5428                             =C'/'
 00085E 40A28194854081A2            5429                             =C' same as above.'
 00086D 4F             00986 015A4  5430                             =C'|'
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   28
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   5435     525.     *********************************************************************
                                    5436     526.     *  Format an address given the specified flags of the SEGCORE work  *
                                    5437     527.     *   area                                                            *
                                    5438     528.     *  Input:  @SEGADD                                                  *
                                    5439     529.     *  Output: none                                                     *
                                    5440     530.     *********************************************************************
0000000                00000 00008  5442     532.     #SAD     RECORD BEGIN
 000000                             5450  1  533.     #SADWORK   DS    CL8
                                    5451  1  534.     #SADOFF    EQU   #SADWORK+5,3
 000008                00008 00008  5452     535.              END   ,
0000000                00000 0000C  5462     537.     @SAD     RECORD BEGIN
 000000                             5470  1  538.     @SADLOC    DS    A                       Address of parent's local area
 000004                             5471  1  539.     @SADPARM   DS    A                       Address of parent's parm area
 000008                             5472  1  540.     @SADADDR   DS    A                       Actual address to print
 00000C                0000C 0000C  5473     541.              END   ,
0000986                             5483     543.     SEGADDR  PROC  @SAD,#SAD
 000986 E2C5C7C1C4C4D940            5488             +
 00098E 0010/0008                   5489             +
 000992 900F D004/18AF       00004  5491             +
 USING  SEGADDR,R10
 000998 50D0 C000/18CD       00000  5506             +
 00099E 9680 C000      00000        5508             +
 USING  @SAD-72,R12
 AUSING (#SAD,@SAD+16)
 0009A2 41D0 C060            00060  5527             +
 0009A6 5860 C048            00000  5528     544.              L     RX,@SADLOC              Address of parent local area
 USING  #SC,R6                      5529     545.              WITH  (#SC,RX),BEGIN          |
 0009AA 5870 C04C            00004  5543  1  546.                L     RY,@SADPARM             Address of parent parm area
 USING  @SEGCORE,R7                 5544  1  547.                WITH  (@SEGCORE,RY),BEGIN     |
                                    5558  2  548.                  SEGDEF @SEGXCB                Define control block's addr
                                    5559  2  549.
 0009AE 5820 C050            00008  5560  2  550.                  L     RA,@SADADDR             Address to print
 0009B2 5F20 6048            00048  5561  2  551.                  SL    RA,#SCOFF               |
 USING  @BTX-72,R13                 5562  2  552.                  BTX   (RA),#SADWORK,LA:L'#SADWORK
 0009B6 D70B D048 D048 00000 00000  5580  2          +
 0009BC 5020 D048            00000  5590  2          +
 0009C0 4100 C058            00000  5603  2          +
 0009C4 5000 D04C            00004  5608  2          +
 0009C8 4100 0008            00008  5620  2          +
 0009CC 5000 D050            00008  5625  2          +
 0009D0 58F0 A906/0DEF       01298  5628  2          +
 0009D6 9110 700D      0000D        5630  2  553.                  IF    @SEGXFID,BEGIN          Print the ID
 0009DA 47E0 A0B2            00A44  5640  2          +
 DROP   @BTX-72,R13                 5645  3  554.                    SEG   @SEGXID,4
 USING  @SEG-72,R13
 0009DE D70C D048 D048 00000 00000  5666  3          +
 0009E4 4100 7014            00014  5679  3          +
 0009E8 5000 D04C            00004  5684  3          +
 0009EC 4100 0004            00004  5696  3          +
 0009F0 5000 D050            00008  5701  3          +
 0009F4 D203 D048 7000 00000 00000  5708  3          +
 0009FA 58F0 A90A/0DEF       0129C  5711  3          +
 000A00                             5713  3  555.                    SEG   '+'
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   29
0Current Usings:  (#SC,R6) (@SEGCORE,R7) (SEGADDR,R10) (@SAD-72,R12) (@SEG-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000A00 D70C D048 D048 00000 00000  5724  3          +
 000A06 4100 A966            012F8  5733  3          +
 000A0A 5000 D04C            00004  5738  3          +
 000A0E 4100 0001            00001  5750  3          +
 000A12 5000 D050            00008  5755  3          +
 000A16 D203 D048 7000 00000 00000  5762  3          +
 000A1C 58F0 A90A/0DEF       0129C  5765  3          +
 000A22                             5767  3  556.                    SEG   #SADOFF                 Just put in the offset
 000A22 D70C D048 D048 00000 00000  5778  3          +
 000A28 4100 C05D            00005  5791  3          +
 000A2C 5000 D04C            00004  5796  3          +
 000A30 4100 0003            00003  5808  3          +
 000A34 5000 D050            00008  5813  3          +
 000A38 D203 D048 7000 00000 00000  5820  3          +
 000A3E 58F0 A90A/0DEF       0129C  5823  3          +
 000A44 A0B6           00A44 009DC  5825  2  557.                  END   ELSE,BEGIN
 000A44 47F0 A0D8            00A6A  5834  2          +
 000A48                             5840  3  558.                    SEG   #SADWORK                Move the whole address over
 000A48 D70C D048 D048 00000 00000  5851  3          +
 000A4E 4100 C058            00000  5864  3          +
 000A52 5000 D04C            00004  5869  3          +
 000A56 4100 0008            00008  5881  3          +
 000A5A 5000 D050            00008  5886  3          +
 000A5E D203 D048 7000 00000 00000  5893  3          +
 000A64 58F0 A90A/0DEF       0129C  5896  3          +
 000A6A                             5898  2  559.                  END   ,
 DROP   @SEGCORE,R7                 5902  1  560.                END   ,                       OF Address of parent parm area
 DROP   #SC,R6                      5910     561.              END   ,                       OF Address of parent local area
 000A6A 981F C008            00008  5918     562.              PEND  ,
 DROP   @SAD-72,R12
 DROP   SEGADDR,R10
 000A6E 9680 C000/0B0E 00000        5933             +
 DROP   @SEG-72,R13
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   30
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   5943     564.     *********************************************************************
                                    5944     565.     *                                                                   *
                                    5945     566.     *   Dump task stack                                                 *
                                    5946     567.     *                                                                   *
                                    5947     568.     *     Input - @SEGSTK                                               *
                                    5948     569.     *                                                                   *
                                    5949     570.     *     Output - none                                                 *
                                    5950     571.     *                                                                   *
                                    5951     572.     *********************************************************************
 000000                00000 0000C  5952     573.     #SEGSTK  RECORD BEGIN
 000000                             5960  1  574.     #SEGSENT   DS    CL12                    Entry information
                                    5961  1  575.     #SEGSNAM   EQU   #SEGSENT,8,C'X'         | name of routine
                                    5962  1  576.     #SEGSPAR   EQU   #SEGSENT+8,2,C'X'       | length of parameter area
                                    5963  1  577.     #SEGSWOR   EQU   #SEGSENT+10,2,C'X'      | length of local work area
 00000C                0000C 0000C  5964     578.              END   ,
0000000                00000 00048  5974     580.     FRAME    RECORD BEGIN                  Stack frame
 000000                             5982  1  581.     FRANEXT    DS    A                       Forward frame link
 000004                             5983  1  582.     FRAREGS    DS    16A                     Registers on entry
 000044                             5984  1  583.                DS    A                       - Unused -
 000048                             5985  1  584.     FRAPARM    DS    0A                      Start of parameters
 000048                00048 00048  5986     585.              END   ,
0000A74                             5996     587.     SEGSTK   PROC  @SEGSTK,#SEGSTK,SCOPE=GLOBAL
 000A74 E2C5C7E2E3D24040            6002             +
 000A7C 0008/0010                   6003             +
 000A80 900F D004/18AF       00004  6005             +
 USING  SEGSTK,R10
 000A86 50D0 C000/18CD       00000  6020             +
 000A8C 9680 C000      00000        6022             +
 USING  @SEGSTK-72,R12
 AUSING (#SEGSTK,@SEGSTK+8)
 000A90 41D0 C060            00060  6041             +
 000A94 5860 C04C            00004  6042     588.              L     RX,@SEGSST              First frame in task is a dummy
 USING  FRAME,R6                    6043     589.              WITH  (FRAME,RX)
 000A98                             6056     590.              LOOP  BEGIN
                                    6062  1  591.     *
                                    6063  1  592.     *  Address of routine name and lengths of parm areas
                                    6064  1  593.     *
 000A98 5820 6040            00040  6065  1  594.                L     RA,FRAREGS+(EPAR*4)     12 bytes before entry point
 000A9C 4B20 A870            012F0  6066  1  595.                SH    RA,=Y(L'#SEGSENT)       |
 000AA0 D20B C050 2000 00000 00000  6067  1  596.                MVC   #SEGSENT,@RA            |
                                    6068  1  597.
 USING  @SEG-72,R13                 6069  1  598.                SEG   'On entry to routine ',,@SEGSCB
 000AA6 D70C D048 D048 00000 00000  6087  1          +
 000AAC 4100 A820            012A0  6096  1          +
 000AB0 5000 D04C            00004  6101  1          +
 000AB4 4100 0014            00014  6113  1          +
 000AB8 5000 D050            00008  6118  1          +
 000ABC D203 D048 C048 00000 00000  6125  1          +
 000AC2 58F0 A81C/0DEF       0129C  6128  1          +
 000AC8                             6130  1  599.                SEGEOR #SEGSNAM
 000AC8 D70C D048 D048 00000 00000  6142  1          +
 000ACE 4100 C050            00000  6155  1          +
 000AD2 5000 D04C            00004  6160  1          +
 000AD6 4100 0008            00008  6172  1          +
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   31
0Current Usings:  (FRAME,R6) (SEGSTK,R10) (@SEGSTK-72,R12) (@SEG-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000ADA 5000 D050            00008  6177  1          +
 000ADE D203 D048 C048 00000 00000  6184  1          +
 000AE4 9610 D054      0000C        6190  1          +
 000AE8 58F0 A81C/0DEF       0129C  6193  1          +
 000AEE                             6195  1  600.                SEG   'Return address = '
 000AEE D70C D048 D048 00000 00000  6206  1          +
 000AF4 4100 A879            012F9  6215  1          +
 000AF8 5000 D04C            00004  6220  1          +
 000AFC 4100 0011            00011  6232  1          +
 000B00 5000 D050            00008  6237  1          +
 000B04 D203 D048 C048 00000 00000  6244  1          +
 000B0A 58F0 A81C/0DEF       0129C  6247  1          +
 000B10                             6249  1  601.                SEGHEX FRAREGS+(RAR*4),4
 000B10 D70C D048 D048 00000 00000  6260  1          +
 000B16 4100 603C            0003C  6273  1          +
 000B1A 5000 D04C            00004  6278  1          +
 000B1E 4100 0004            00004  6290  1          +
 000B22 5000 D050            00008  6295  1          +
 000B26 D203 D048 C048 00000 00000  6302  1          +
 000B2C 58F0 A834/0DEF       012B4  6305  1          +
 000B32                             6307  1  602.                SEGEOR ,
 000B32 D70C D048 D048 00000 00000  6319  1          +
 000B38 D703 D050 D050 00008 00008  6327  1          +
 000B3E D203 D048 C048 00000 00000  6334  1          +
 000B44 9610 D054      0000C        6340  1          +
 000B48 58F0 A81C/0DEF       0129C  6343  1          +
                                    6345  1  603.     *
                                    6346  1  604.     *  Format registers
                                    6347  1  605.     *
 000B4E                             6348  1  606.                SEG   'R0 -R3  '
 000B4E D70C D048 D048 00000 00000  6359  1          +
 000B54 4100 A7F8            01278  6368  1          +
 000B58 5000 D04C            00004  6373  1          +
 000B5C 4100 0008            00008  6385  1          +
 000B60 5000 D050            00008  6390  1          +
 000B64 D203 D048 C048 00000 00000  6397  1          +
 000B6A 58F0 A81C/0DEF       0129C  6400  1          +
 DROP   @SEG-72,R13                 6402  1  607.                SEGWORD FRAREGS+(R0*4),4*4
 USING  @SEGWORD-72,R13
 000B70 D70B D048 D048 00000 00000  6423  1          +
 000B76 4100 6004            00004  6436  1          +
 000B7A 5000 D04C            00004  6441  1          +
 000B7E 4100 0010            00010  6453  1          +
 000B82 5000 D050            00008  6458  1          +
 000B86 D203 D048 C048 00000 00000  6465  1          +
 000B8C 41F0 A332/0DEF       00DB2  6473  1          +
 DROP   @SEGWORD-72,R13             6475  1  608.                SEGEOR ,
 USING  @SEG-72,R13
 000B92 D70C D048 D048 00000 00000  6497  1          +
 000B98 D703 D050 D050 00008 00008  6505  1          +
 000B9E D203 D048 C048 00000 00000  6512  1          +
 000BA4 9610 D054      0000C        6518  1          +
 000BA8 58F0 A81C/0DEF       0129C  6521  1          +
 000BAE                             6523  1  609.                SEG   'R4 -R7  '
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   32
0Current Usings:  (FRAME,R6) (SEGSTK,R10) (@SEGSTK-72,R12) (@SEG-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000BAE D70C D048 D048 00000 00000  6534  1          +
 000BB4 4100 A800            01280  6543  1          +
 000BB8 5000 D04C            00004  6548  1          +
 000BBC 4100 0008            00008  6560  1          +
 000BC0 5000 D050            00008  6565  1          +
 000BC4 D203 D048 C048 00000 00000  6572  1          +
 000BCA 58F0 A81C/0DEF       0129C  6575  1          +
 DROP   @SEG-72,R13                 6577  1  610.                SEGWORD FRAREGS+(R4*4),4*4
 USING  @SEGWORD-72,R13
 000BD0 D70B D048 D048 00000 00000  6598  1          +
 000BD6 4100 6014            00014  6611  1          +
 000BDA 5000 D04C            00004  6616  1          +
 000BDE 4100 0010            00010  6628  1          +
 000BE2 5000 D050            00008  6633  1          +
 000BE6 D203 D048 C048 00000 00000  6640  1          +
 000BEC 41F0 A332/0DEF       00DB2  6648  1          +
 DROP   @SEGWORD-72,R13             6650  1  611.                SEGEOR ,
 USING  @SEG-72,R13
 000BF2 D70C D048 D048 00000 00000  6672  1          +
 000BF8 D703 D050 D050 00008 00008  6680  1          +
 000BFE D203 D048 C048 00000 00000  6687  1          +
 000C04 9610 D054      0000C        6693  1          +
 000C08 58F0 A81C/0DEF       0129C  6696  1          +
 000C0E                             6698  1  612.                SEG   'R8 -R11 '
 000C0E D70C D048 D048 00000 00000  6709  1          +
 000C14 4100 A808            01288  6718  1          +
 000C18 5000 D04C            00004  6723  1          +
 000C1C 4100 0008            00008  6735  1          +
 000C20 5000 D050            00008  6740  1          +
 000C24 D203 D048 C048 00000 00000  6747  1          +
 000C2A 58F0 A81C/0DEF       0129C  6750  1          +
 DROP   @SEG-72,R13                 6752  1  613.                SEGWORD FRAREGS+(R8*4),4*4
 USING  @SEGWORD-72,R13
 000C30 D70B D048 D048 00000 00000  6773  1          +
 000C36 4100 6024            00024  6786  1          +
 000C3A 5000 D04C            00004  6791  1          +
 000C3E 4100 0010            00010  6803  1          +
 000C42 5000 D050            00008  6808  1          +
 000C46 D203 D048 C048 00000 00000  6815  1          +
 000C4C 41F0 A332/0DEF       00DB2  6823  1          +
 DROP   @SEGWORD-72,R13             6825  1  614.                SEGEOR ,
 USING  @SEG-72,R13
 000C52 D70C D048 D048 00000 00000  6847  1          +
 000C58 D703 D050 D050 00008 00008  6855  1          +
 000C5E D203 D048 C048 00000 00000  6862  1          +
 000C64 9610 D054      0000C        6868  1          +
 000C68 58F0 A81C/0DEF       0129C  6871  1          +
 000C6E                             6873  1  615.                SEG   'R12-R15 '
 000C6E D70C D048 D048 00000 00000  6884  1          +
 000C74 4100 A810            01290  6893  1          +
 000C78 5000 D04C            00004  6898  1          +
 000C7C 4100 0008            00008  6910  1          +
 000C80 5000 D050            00008  6915  1          +
 000C84 D203 D048 C048 00000 00000  6922  1          +
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   33
0Current Usings:  (FRAME,R6) (SEGSTK,R10) (@SEGSTK-72,R12) (@SEG-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000C8A 58F0 A81C/0DEF       0129C  6925  1          +
 DROP   @SEG-72,R13                 6927  1  616.                SEGWORD FRAREGS+(R12*4),4*4
 USING  @SEGWORD-72,R13
 000C90 D70B D048 D048 00000 00000  6948  1          +
 000C96 4100 6034            00034  6961  1          +
 000C9A 5000 D04C            00004  6966  1          +
 000C9E 4100 0010            00010  6978  1          +
 000CA2 5000 D050            00008  6983  1          +
 000CA6 D203 D048 C048 00000 00000  6990  1          +
 000CAC 41F0 A332/0DEF       00DB2  6998  1          +
 DROP   @SEGWORD-72,R13             7000  1  617.                SEGEOR ,
 USING  @SEG-72,R13
 000CB2 D70C D048 D048 00000 00000  7022  1          +
 000CB8 D703 D050 D050 00008 00008  7030  1          +
 000CBE D203 D048 C048 00000 00000  7037  1          +
 000CC4 9610 D054      0000C        7043  1          +
 000CC8 58F0 A81C/0DEF       0129C  7046  1          +
                                    7048  1  618.     *
                                    7049  1  619.     *  Format parameter area
                                    7050  1  620.     *
 000CCE 4120 6048            00048  7051  1  621.                LA    RA,FRAPARM
 000CD2 4830 C058            00008  7052  1  622.                LF    RB,#SEGSPAR
 000CD6 1233/4780 A2A2       00D22  7057  1  623.                IF    (RB,NZ),BEGIN
 000CDC                             7071  2  624.                  SEGEOR ,
 000CDC D70C D048 D048 00000 00000  7083  2          +
 000CE2 D703 D050 D050 00008 00008  7091  2          +
 000CE8 D203 D048 C048 00000 00000  7098  2          +
 000CEE 9610 D054      0000C        7104  2          +
 000CF2 58F0 A81C/0DEF       0129C  7107  2          +
 DROP   @SEG-72,R13                 7109  2  625.                  SEGCORE (RA),(RB),ID=Parm
 USING  @SEGCORE-72,R13
 000CF8 D717 D048 D048 00000 00000  7130  2          +
 000CFE 5020 D04C            00004  7141  2          +
 000D02 5030 D050            00008  7151  2          +
 000D06 D203 D05C A838 00014 012B8  7157  2          +
 000D0C D203 D058 D04C 00010 00004  7162  2          +
 000D12 96F0 D055      0000D        7180  2          +
 000D16 D203 D048 C048 00000 00000  7187  2          +
 000D1C 58F0 A83C/0DEF       012BC  7190  2          +
 000D22                             7192  1  626.                END   ,
                                    7196  1  627.     *
                                    7197  1  628.     *  Format local work area
                                    7198  1  629.     *
 000D22 4123 2000            00000  7199  1  630.                LA    RA,@RA(RB)
 000D26 4830 C05A            0000A  7200  1  631.                LF    RB,#SEGSWOR
 000D2A 1233/4780 A2F6       00D76  7205  1  632.                IF    (RB,NZ),BEGIN
 DROP   @SEGCORE-72,R13             7219  2  633.                  SEGEOR ,
 USING  @SEG-72,R13
 000D30 D70C D048 D048 00000 00000  7241  2          +
 000D36 D703 D050 D050 00008 00008  7249  2          +
 000D3C D203 D048 C048 00000 00000  7256  2          +
 000D42 9610 D054      0000C        7262  2          +
 000D46 58F0 A81C/0DEF       0129C  7265  2          +
 DROP   @SEG-72,R13                 7267  2  634.                  SEGCORE (RA),(RB),ID=Work
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   34
0Current Usings:  (FRAME,R6) (SEGSTK,R10) (@SEGSTK-72,R12) (@SEGCORE-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0USING  @SEGCORE-72,R13
 000D4C D717 D048 D048 00000 00000  7288  2          +
 000D52 5020 D04C            00004  7299  2          +
 000D56 5030 D050            00008  7309  2          +
 000D5A D203 D05C A840 00014 012C0  7315  2          +
 000D60 D203 D058 D04C 00010 00004  7320  2          +
 000D66 96F0 D055      0000D        7338  2          +
 000D6A D203 D048 C048 00000 00000  7345  2          +
 000D70 58F0 A83C/0DEF       012BC  7348  2          +
 000D76                             7350  1  635.                END   ,
 DROP   @SEGCORE-72,R13             7354  1  636.                SEGEOR ,
 USING  @SEG-72,R13
 000D76 D70C D048 D048 00000 00000  7376  1          +
 000D7C D703 D050 D050 00008 00008  7384  1          +
 000D82 D203 D048 C048 00000 00000  7391  1          +
 000D88 9610 D054      0000C        7397  1          +
 000D8C 58F0 A81C/0DEF       0129C  7400  1          +
 000D92 5860 6000            00000  7402  1  637.                L     RX,FRANEXT              Forward frame link
 000D96 1266/4720 A018       00A98  7403     638.              UNTIL (RX,NP),END
 000D9C 981F C008            00008  7425     639.              PEND  ,
 DROP   FRAME,R6
 DROP   @SEGSTK-72,R12
 DROP   SEGSTK,R10
 000DA0 9680 C000/0B0E 00000        7445             +
 DROP   @SEG-72,R13
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   35
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   7455     641.     *********************************************************************
                                    7456     642.     *                                                                   *
                                    7457     643.     *  Add words to seg buffer, separated by blanks                     *
                                    7458     644.     *                                                                   *
                                    7459     645.     *    Input - @SEGWORD                                               *
                                    7460     646.     *                                                                   *
                                    7461     647.     *    Output - nothing                                               *
                                    7462     648.     *                                                                   *
                                    7463     649.     *********************************************************************
 000000                00000 0000C  7464     650.     @SEGWORD RECORD BEGIN
 000000                             7472  1  651.     @SRCB      DS    A                       Seg control Block
 000004                             7473  1  652.     @SRLOC     DS    A                       Location
 000008                             7474  1  653.     @SRLEN     DS    A                       Length
 00000C                0000C 0000C  7475     654.              END   ,
0000DA6                             7485     656.     SEGWORD  PROC  @SEGWORD
 000DA6 E2C5C7E6D6D9C440            7490             +
 000DAE 0010/0000                   7491             +
 000DB2 900F D004/18AF       00004  7493             +
 USING  SEGWORD,R10
 000DB8 50D0 C000/18CD       00000  7508             +
 000DBE 9680 C000      00000        7510             +
 USING  @SEGWORD-72,R12
 000DC2 41D0 C058            00058  7524             +
 000DC6 5820 C04C            00004  7525     657.              L     RA,@SRLOC
 000DCA 5830 C050            00008  7526     658.              L     RB,@SRLEN               Number of fullwords
 000DCE 4130 3003            00003  7527     659.              LA    RB,@RB+3                |
 000DD2 8830 0002            00002  7528     660.              SRL   RB,2                    |
 USING  @SEG-72,R13                 7529     661.     SRLOOP   SEGHEX (RA),4,@SRCB
 000DD6 D70C D048 D048 00000 00000  7548             +
 000DDC 5020 D04C            00004  7559             +
 000DE0 4100 0004            00004  7571             +
 000DE4 5000 D050            00008  7576             +
 000DE8 D203 D048 C048 00000 00000  7583             +
 000DEE 58F0 A502/0DEF       012B4  7586             +
 000DF4                             7588     662.              SEG   ' '
 000DF4 D70C D048 D048 00000 00000  7599             +
 000DFA 4100 A558            0130A  7608             +
 000DFE 5000 D04C            00004  7613             +
 000E02 4100 0001            00001  7625             +
 000E06 5000 D050            00008  7630             +
 000E0A D203 D048 C048 00000 00000  7637             +
 000E10 58F0 A4EA/0DEF       0129C  7640             +
 000E16 4120 2004            00004  7642     663.              LA    RA,@RA+4
 000E1A 4630 A024            00DD6  7643     664.              BCT   RB,SRLOOP
 000E1E 981F C008            00008  7644     665.              PEND  ,
 DROP   @SEGWORD-72,R12
 DROP   SEGWORD,R10
 000E22 9680 C000/0B0E 00000        7659             +
 DROP   @SEG-72,R13
 00130B                0130B 015A4  7668     666.              DATA  BEGIN
                                    7673  1  667.     *
                                    7674  1  668.     * CONSTANTS
                                    7675  1  669.     *
 00130B F0F1F2F3F4F5F6F7            7676  1  670.     HEXTBL     DC    C'0123456789ABCDEF'
                                    7677  1  671.
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   36
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
000131B                             7678  1  672.     EDMASK     DS    0CL15                   STANDARD EDIT MASK
 00131B 4040404020202020            7679  1  673.                DC    4C' ',9X'20',X'2120'
                                    7680  1  674.
 00132A                             7681  1  675.     EDMASKC    DS    0CL15                   EDIT MASK WITH COMMAS
 00132A 4020206B2020206B            7682  1  676.                DC    X'402020',C',',3X'20',C',',3X'20',C',',X'202120'
                                    7683  1  677.
 001339 00                                1
 00133A                             7684  1  678.     LENCHECK   DC    0S(L'EDMASK-L'EDMASKC,L'EDMASKC-L'EDMASK)
                                    7685  1  679.
 00133A 4040404040404040            7686  1  680.     BLANKS     DC    CL256' '
                                    7687  1  681.
 00143A                             7688  1  682.     BTSEDMSK   DS    0CL24                   EDIT MASK FOR SCALED INTEGERS
 00143A 2020202020202020            7689  1  683.                DC    14X'20',X'2120',C'.',7X'20'
                                    7690  1  684.
 001452 000002147483647C            7691  1  685.     MAXDEC     DC    PL8'2147483647'
 00145A 000002147483648D            7692  1  686.     MINDEC     DC    PL8'-2147483648'
                                    7693  1  687.     DECNEG     EQU   X'DF'                   Mask 1 zone bit, low byte neg
                                    7694  1  688.     *
                                    7695  1  689.     *  Digit test table
 001462 0404040404040404            7696  1  690.     DIGITTR    DC    256X'04'                Invalid characters
 001562                01562 01552  7697  1  691.                ORG   DIGITTR+C'0'
 001552 0000000000000000            7698  1  692.                DC    10X'00'                 Valid digits
 00155C                0155C 014AD  7699  1  693.                ORG   DIGITTR+C'.'
 0014AD 08                          7700  1  694.                DC    X'08'                   Decimal point
 0014AE                014AE 01562  7701  1  695.                ORG   ,
                                    7702  1  696.
 000E28                00986 015A4  7703     697.              END   ,
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   37
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   7710     699.     *******************************************************************
                                    7711     700.     *                                                                 *
                                    7712     701.     *    DTB -- Convert decimal string to an integer value            *
                                    7713     702.     *                                                                 *
                                    7714     703.     *                                                                 *
                                    7715     704.     *     Input - @DTB                                                *
                                    7716     705.     *                                                                 *
                                    7717     706.     *    Output - RVR contains value                                  *
                                    7718     707.     *                                                                 *
                                    7719     708.     *                                                                 *
                                    7720     709.     *******************************************************************
-
 000000                00000 00013  7722     711.     #DTB     RECORD BEGIN
 000000                             7730  1  712.     #DTBDEC    DS    D                       Double word conversion area
 000008                             7731  1  713.     #DTBSTR    DS    CL(L'@DTBMXLN)          String conversion area
 000012 00                          7732  1  714.     #DTBFLG    FLAG  ,
 #DTBFLG.#DTBNEG   80 ONES          7736  1  715.                FLAG  #DTBNEG                 Negative value
 000013                00013 00013  7741     716.              END   ,
0000E28                             7751     718.     DTBDTB   PROC  @DTB,#DTB,SCOPE=GLOBAL
 000E28 C4E3C2C4E3C24040            7757             +
 000E30 0010/0018                   7758             +
 000E34 900F D004/18AF       00004  7760             +
 USING  DTBDTB,R10
 000E3A 50D0 C000/18CD       00000  7775             +
 000E40 9680 C000      00000        7777             +
 USING  @DTB-72,R12
 AUSING (#DTB,@DTB+16)
 000E44 41D0 C070            00070  7796             +
 000E48                             7797     719.              CLEAR #DTB
 000E48 D712 C058 C058 00000 00000  7803             +
 000E4E 947F C050      00008        7804     720.              CLEAR @DTBVALID               Assume it will be invalid
 000E52 9867 C048            00000  7811     721.              LM    RX,RY,@DTBLOC           String location/length
 000E56 9560 6000      00000        7812     722.              IF    ('CLI @RX,C"-"',EQ),BEGIN
 000E5A 4770 A034            00E68  7820             +
 000E5E 9680 C06A      00012        7825  1  723.                SET   #DTBNEG                 NOTE NEGATIVE
 000E62 5E60 A490            012C4  7831  1  724.                INCR  RX
 000E66 0670                        7834  1  725.                DECR  RY
 000E68                             7836     726.              END   ,
 000E68 1277/47D0 A080       00EB4  7840     727.              IF    (RY,P),BEGIN            Start conversion
 000E6E 5970 A494            012C8  7854  1  728.                IF    (RY,GT,@DTBMXLN),EXIT   Overflow
 000E72 4720 A080            00EB4  7868  1          +
 000E76 0670/4470 A72E       01562  7874  1  729.                DEX   RY,'MVC #DTBSTR(0),@RX' Copy string to test/change
 001562 D200 C060 6000 00008 00000  7885  1          +
                                    7893  1  730.                REGCH (RA,2),(RS,1)
 000E7C 4470 A734            01568  7894  1  731.                EX    RY,'TRT #DTBSTR(0),DIGITTR'      Test digits
 001568 DD00 C060 A62E 00008 01462  7902  1          +
 000E80 4770 A080            00EB4  7910  1  732.                IF    NZ,EXIT                 Error, don't set valid flag
 000E84 9180 C06A      00012        7924  1  733.                IF    #DTBNEG,BEGIN           Make it negative
 000E88 47E0 A060            00E94  7934  1          +
 000E8C 4117 C060            00008  7939  2  734.                  LA    RS,#DTBSTR(RY)          | last digit addr
 000E90 94DF 1000      00000        7940  2  735.                  NI    @RS,DECNEG              |
 000E94                             7941  1  736.                END   ,                       OF Make it negative
 000E94 4470 A73A            0156E  7945  1  737.                EX    RY,'PACK #DTBDEC,#DTBSTR(0)'
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   38
0Current Usings:  (DTBDTB,R10) (@DTB-72,R12)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
000156E F270 C058 C060 00000 00008  7953  1          +
                                    7961  1  738.   C            IF    (('CP #DTBDEC,MINDEC',LT),OR,
 000E98                                   1  739.                      ('CP #DTBDEC,MAXDEC',GT)),EXIT           Overflow
 000E98 F977 C058 A626 00000 0145A  7970  1          +
 000E9E 4740 A080            00EB4  7973  1          +
 000EA2 F977 C058 A61E 00000 01452  7980  1          +
 000EA8 4720 A080            00EB4  7983  1          +
 000EAC 4F00 C058            00000  7989  1  740.                CVB   RVR,#DTBDEC
 000EB0 9680 C050      00008        7990  1  741.                SET   @DTBVALID               No conversion error/overflow
 000EB4                             7996     742.              END   ,                       OF Start conversion
 000EB4 981F C008            00008  8000     743.              PEND  ,
 DROP   @DTB-72,R12
 DROP   DTBDTB,R10
 000EB8 9680 C000/0B0E 00000        8015             +
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   39
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   8022     745.     *
                                    8023     746.     **  XTB -- Routine to convert hexadecimal strings.
                                    8024     747.     **
                                    8025     748.     **    Input:
                                    8026     749.     **      @XTB
                                    8027     750.     **
                                    8028     751.     **    Output:
                                    8029     752.     **      IF @XTBVALID  - RVR = 32 Bit binary value
                                    8030     753.     **
                                    8031     754.     **      IF ~@XTBVALID - Invalid hexadecimal string
                                    8032     755.     *
0000EBE                             8034     757.     XTBXTB   PROC  @XTB,SCOPE=GLOBAL
 000EBE E7E3C2E7E3C24040            8040             +
 000EC6 0010/0000                   8041             +
 000ECA 900F D004/18AF       00004  8043             +
 USING  XTBXTB,R10
 000ED0 50D0 C000/18CD       00000  8058             +
 000ED6 9680 C000      00000        8060             +
 USING  @XTB-72,R12
 000EDA 41D0 C058            00058  8074             +
 000EDE 947F C050      00008        8075     758.              CLEAR @XTBVALID               Assume invalid
 000EE2 1B00                        8082     759.              CLEAR RVR                     Init return value
 000EE4 9867 C048            00000  8086     760.              LM    RX,RY,@XTBLOC           Location/length of string
 000EE8 5970 C048            00000  8087     761.     XTBVALID IF    ((RY,LE,@XTBLOC),AND,(RY,POS)),BEGIN     Check length
 000EEC 4730 A070/1277       00F3A  8102             +
 000EF2 47D0 A070            00F3A  8113             +
 000EF6                             8118  1  762.     XTBL       LABEL ,
 000EF6 1F11/4310 6000       00000  8120  1  763.                LC    RS,@RX                  PICK UP DIGIT
 000EFC 95C1 6000      00000        8127  1  764.                IF    (('CLI @RX,C"A"',GE),AND,('CLI @RX,C"F"',LE)),BEGIN
 000F00 4750 A046            00F10  8137  1          +
 000F04 95C6 6000      00000        8146  1          +
 000F08 4730 A046            00F10  8147  1          +
 000F0C 5F10 A402            012CC  8152  2  765.                  SL    RS,=A(C'A'-10)          In range 10..15
 000F10                             8153  1  766.                END   ,
 000F10 A04A           00F10 00F02  8157  1  767.                ELSEIF (('CLI @RX,C"0"',GE),AND,('CLI @RX,C"9"',LE)),BEGIN
 000F0A A04A           00F0C 00F10  8163  1          +
 000F10 47F0 A05E            00F28  8165  1          +
 000F14 95F0 6000      00000        8177  1          +
 000F18 4750 A05E            00F28  8178  1          +
 000F1C 95F9 6000      00000        8187  1          +
 000F20 4730 A05E            00F28  8188  1          +
 000F24 5F10 A406            012D0  8193  2  768.                  SL    RS,=A(C'0')             In range 0..9
 000F28 A070           00F28 00F1A  8194  1  769.                END   ELSE,EXIT               Invalid digit
 000F22 A070           00F24 00F28  8203  1          +
 000F28 8900 0004            00004  8205  1  770.                SLL   RVR,4                   ADD NEW DIGIT IN
 000F2C 1601                        8206  1  771.                OR    RVR,RS                  |
 000F2E 4160 6001            00001  8207  1  772.                LA    RX,@RX+1                NEXT DIGIT
 000F32 4670 A02C            00EF6  8208  1  773.                BCT   RY,XTBL                 |
 000F36 9680 C050      00008        8209  1  774.                SET   @XTBVALID               Valid digit found
 000F3A                             8215     775.              END   ,                       OF Check length range
 000F3A 981F C008            00008  8219     776.              PEND  ,
 DROP   @XTB-72,R12
 DROP   XTBXTB,R10
 000F3E 9680 C000/0B0E 00000        8234             +
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   40
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   8241     778.     *
                                    8242     779.     **  STB -- Routine to convert scaled decimal strings.
                                    8243     780.     **
                                    8244     781.     **    Input:
                                    8245     782.     **      @STB
                                    8246     783.     **
                                    8247     784.     **    Output:
                                    8248     785.     **      IF @STBVALID  - RVR = binary scaled value
                                    8249     786.     **
                                    8250     787.     **      IF ~@STBVALID - Invalid decimal string
                                    8251     788.     *
0000000                00000 00018  8253     790.     #STB     RECORD BEGIN                  STB LOCAL WORK AREA
 000000                             8261  1  791.     #STBDEC    DS    D                       Decimal conversion area
 000008                             8262  1  792.     #STBSTR    DS    CL(L'@STBMXLN)          String conversion area
 000013 00                          8263  1  793.     #STBFLG    FLAG  ,
 #STBFLG.#STBNEG   80 ONES          8267  1  794.                FLAG  #STBNEG                 Is a negative number
 000014                             8272  1  795.     #STBSCAL   DS    A                       Number of fractional digits
 000018                00018 00018  8273     796.              END   ,                       OF STB LOCAL WORK AREA
0000F44                             8283     798.     STBSTB   PROC  @STB,#STB,SCOPE=GLOBAL  Scaled decimal conversion
 000F44 E2E3C2E2E3C24040            8289             +
 000F4C 0010/0018                   8290             +
 000F50 900F D004/18AF       00004  8292             +
 USING  STBSTB,R10
 000F56 50D0 C000/18CD       00000  8307             +
 000F5C 9680 C000      00000        8309             +
 USING  @STB-72,R12
 AUSING (#STB,@STB+16)
 000F60 41D0 C070            00070  8328             +
 000F64                             8329     799.              CLEAR #STB
 000F64 D717 C058 C058 00000 00000  8335             +
 000F6A 947F C054      0000C        8336     800.              CLEAR @STBVALID               Assume it will be invalid
 000F6E 9867 C048            00000  8343     801.              LM    RX,RY,@STBLOC           String location/length
 000F72 9560 6000      00000        8344     802.              IF    ('CLI  @RX,C"-"',EQ),BEGIN
 000F76 4770 A034            00F84  8352             +
 000F7A 9680 C06B      00013        8357  1  803.                SET   #STBNEG                 NOTE NEGATIVE
 000F7E 5E60 A374            012C4  8363  1  804.                INCR  RX
 000F82 0670                        8366  1  805.                DECR  RY
 000F84                             8368     806.              END   ,
 000F84 9067 C048            00000  8372     807.              STM   RX,RY,@STBLOC           |
 000F88 1277/47D0 A0D2       01022  8373     808.     STBCONV  IF    (RY,P),BEGIN            Start conversion
 000F8E 5970 A384            012D4  8388  1  809.                IF    (RY,GT,@STBMXLN),EXIT   Overflow of maximum length
 000F92 4720 A0D2            01022  8402  1          +
 000F96 0670/4470 A624       01574  8408  1  810.                DEX   RY,'MVC #STBSTR(0),@RX'
 001574 D200 C060 6000 00008 00000  8419  1          +
                                    8427  1  811.                REGCH (RA,2),(RS,1)           Hardware sez... must match
 000F9C 1B22                        8428  1  812.                CLEAR R2                      Function code will be ins here
 000F9E 4470 A62A            0157A  8432  1  813.                EX    RY,'TRT #STBSTR(0),DIGITTR'
 00157A DD00 C060 A512 00008 01462  8440  1          +
 000FA2 4780 A092            00FE2  8448  1  814.                IF    NZ,BEGIN                Not all digits
                                    8459  2  815.     *  TRT code is index for branch table
 000FA6 47F2 A056            00FA6  8460  2  816.     STBCHK       B     STBCHK(R2)
 000FAA 47F0 A0D2            01022  8461  2  817.                  EXIT  STBCONV                 Not valid (not decimal point)
                                    8464  2  818.     * Come here for decimal point (RY is decremented total length)
                                    8465  2  819.     * R1 is hardware set to the address of the '.'
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   41
0Current Usings:  (STBSTB,R10) (@STB-72,R12)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   8466  2  820.     * RK is used as the remaining string length
 000FAE 5070 C04C            00004  8467  2  821.                  ST    RY,@STBLEN              Total length is one less
 000FB2 47B0 A092            00FE2  8468  2  822.                  IF    LOW,BEGIN               More digits
 000FB6 4150 C060            00008  8479  3  823.                    LA    RK,#STBSTR              Find digits so far
 000FBA 1B51                        8480  3  824.                    SR    RK,R1                   | (-)Digits so far
 000FBC 1E57                        8481  3  825.                    ALR   RK,RY                   | RK = remaining len
 000FBE 0650/4450 A630       01580  8482  3  826.                    DEX   RK,'MVC @R1(0),@R1+1'   Shift out decimal point
 001580 D200 1000 1001 00000 00001  8493  3          +
                                    8501  3  827.     *  Check bounds for scaled decimal (can't be more that 10 digits
                                    8502  3  828.     *    plus decimal point)
 000FC4 1345                        8503  3  829.                    LCR   RJ,RK                   (-)fractional digits
 000FC6 0640                        8504  3  830.                    DECR  RJ                      |
 000FC8 5E40 C050            00008  8506  3  831.                    AL    RJ,@STBSCAL             | specified scale number
 000FCC 5040 C06C            00014  8507  3  832.                    ST    RJ,#STBSCAL             | number to really shift
 000FD0 1E47                        8508  3  833.                    ALR   RJ,RY                   | number of resulting digits
 000FD2 5940 A388            012D8  8509  3  834.                    IF    (RJ,GT,@STBMXLN-1),EXIT,STBCONV
 000FD6 4720 A0D2            01022  8523  3          +
 000FDA 4450 A636            01586  8529  3  835.                    EX    RK,'TRT @R1(0),DIGITTR' Test for validity
 001586 DD00 1000 A512 00000 01462  8537  3          +
 000FDE 4770 A0D2            01022  8545  3  836.                    IF    NZ,EXIT,STBCONV         Invalid digit or 2nd '.'
 000FE2                             8559  2  837.                  END   ,                       OF More digits
 000FE2                             8563  1  838.                END   ,                       OF not all digits
 000FE2 5870 C04C            00004  8567  1  839.                L     RY,@STBLEN              Length
 000FE6 0670                        8568  1  840.                DECR  RY                      | length - 1
 000FE8 9180 C06B      00013        8570  1  841.                IF    #STBNEG,BEGIN           Make it negative
 000FEC 47E0 A0A8            00FF8  8580  1          +
 000FF0 4117 C060            00008  8585  2  842.                  LA    RS,#STBSTR(RY)          | last digit addr
 000FF4 94DF 1000      00000        8586  2  843.                  NI    @RS,DECNEG              |
 000FF8                             8587  1  844.                END   ,                       OF Make it negative
 000FF8 4470 A63C            0158C  8591  1  845.                EX    RY,'PACK #STBDEC,#STBSTR(0)'
 00158C F270 C058 C060 00000 00008  8599  1          +
 000FFC 5810 C06C            00014  8607  1  846.                L     RS,#STBSCAL             Scale: power of 10 required
 001000 F075 C058 1000 00000 00000  8608  1  847.                SRP   #STBDEC,@RS,5           | scale it
                                    8609  1  848.   C            IF    (('CP #STBDEC,MINDEC',LT),OR,
 001006                                   1  849.                      ('CP #STBDEC,MAXDEC',GT)),EXIT           Overflow
 001006 F977 C058 A50A 00000 0145A  8618  1          +
 00100C 4740 A0D2            01022  8621  1          +
 001010 F977 C058 A502 00000 01452  8628  1          +
 001016 4720 A0D2            01022  8631  1          +
 00101A 4F00 C058            00000  8637  1  850.                CVB   RVR,#STBDEC             Convert it
 00101E 9680 C054      0000C        8638  1  851.                SET   @STBVALID               No conversion error/overflow
 001022                             8644     852.              END   ,                       OF Start conversion
 001022 981F C008            00008  8648     853.              PEND  ,
 DROP   @STB-72,R12
 DROP   STBSTB,R10
 001026 9680 C000/0B0E 00000        8663             +
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   42
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   8670     855.     *
                                    8671     856.     **  BTD  -- Routine to format integer strings.
                                    8672     857.     **  BTDC -- Routine to format integer strings with commas.
                                    8673     858.     **
                                    8674     859.     **    Input:
                                    8675     860.     **      @BTD
                                    8676     861.     **
                                    8677     862.     **    Output:
                                    8678     863.     **      If  @BTDVALID  - String is in specified output location
                                    8679     864.     **
                                    8680     865.     **      If ~@BTDVALID  - An invalid string was passed
                                    8681     866.     *
 000000                00000 00017  8682     867.     #BTD     RECORD BEGIN                  BTD LOCAL WORK AREA
 000000                             8690  1  868.     #BTDDEC    DS    D                       DECIMAL DOUBLE WORD
 000008                             8691  1  869.     #BTDEDIT   DS    CL(L'EDMASK)
 000017                00017 00017  8692     870.              END   ,                       OF BTD LOCAL WORK AREA
000102C                             8702     872.     BTDBTD   PROC  @BTD,#BTD,SCOPE=GLOBAL
 00102C C2E3C4C2E3C44040            8708             +
 001034 0010/0018                   8709             +
 001038 900F D004/18AF       00004  8711             +
 USING  BTDBTD,R10
 00103E 50D0 C000/18CD       00000  8726             +
 001044 9680 C000      00000        8728             +
 USING  @BTD-72,R12
 AUSING (#BTD,@BTD+16)
 001048 41D0 C070            00070  8747             +
 00104C 9180 C054      0000C        8748     873.              IF    @BTDCOMM,BEGIN
 001050 47E0 A022            0105A  8758             +
 001054 D20E C060 A2F2 00008 0132A  8763  1  874.                MVC   #BTDEDIT,EDMASKC        EDIT MASK WITH COMMAS
 00105A A026           0105A 01052  8764     875.              END   ELSE,BEGIN
 00105A 47F0 A02C            01064  8773             +
 00105E D20E C060 A2E3 00008 0131B  8779  1  876.                MVC   #BTDEDIT,EDMASK         USE STANDARD MASK
 001064                             8780     877.              END   ,
 001064 5860 C048            00000  8784     878.              L     RX,@BTDVAL              Put parm in register
 001068 9140 C054      0000C        8785     879.              IF    (@BTDUNSI,AND,(RX,NEG)),BEGIN  Unsigned
 00106C 47E0 A04C/1266       01084  8797             +
 001072 47B0 A04C            01084  8808             +
 001076 5460 A2A4            012DC  8813  1  880.                N     RX,=X'7FFFFFFF'         Remove sign
 00107A 4E60 C058            00000  8814  1  881.                CVD   RX,#BTDDEC              Convert to packed
 00107E FA75 C058 A2BA 00000 012F2  8815  1  882.                AP    #BTDDEC,=P'2147483648'  Add back unsign
 001084                             8816     883.              END   ,
 001084 A050           01084 0106E  8820     884.              ELSE  BEGIN
 001074 A050           01076 01084  8825             +
 001084 47F0 A054            0108C  8827             +
 001088 4E60 C058            00000  8833  1  885.                CVD   RX,#BTDDEC
 00108C                             8834     886.              END   ,
                                    8838     887.              REGCH (RS,1),(R1,1)           Should match!
 00108C 4110 C06E            00016  8839     888.              LA    R1,#BTDEDIT+L'#BTDEDIT-1  DEFAULT SIGNIFIGANCE
 001090 DF0E C060 C05A 00008 00002  8840     889.              EDMK  #BTDEDIT,#BTDDEC+2      CAN BE AT MOST 10 DIGITS
 001096 1266/47B0 A06A       010A2  8841     890.              IF    (RX,NEG),BEGIN          INSERT MINUS SIGN IF NEG.
 00109C 0610                        8855  1  891.                DECR  R1                      BACK UP ONE
 00109E 9260 1000      00000        8857  1  892.                MVI   @R1,C'-'                SHOVE IT IN
 0010A2                             8858     893.              END   ,
 0010A2 4130 C06F            00017  8862     894.              LA    RB,#BTDEDIT+L'#BTDEDIT  CALCULATE LENGTH OF RESULT
 0010A6 1F31                        8863     895.              SLR   RB,R1                   | IN RB
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   43
0Current Usings:  (BTDBTD,R10) (@BTD-72,R12)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
00010A8 5800 C050/1200       00008  8864     896.              IF    ('LT RVR,@BTDLEN',NP),BEGIN      NOT FIXED FIELD...
 0010AE 4720 A07E            010B6  8875             +
 0010B2 1300                        8880  1  897.                LCR   RVR,RVR                 | DESIRED NUMBER OF LEADING
 0010B4 1A03                        8881  1  898.                AR    RVR,RB                  | BLANKS
 0010B6                             8882     899.              END    ,
 0010B6 5900 A2A8            012E0  8886     900.              CEIL  RVR,L'#BTDEDIT          Limit length
 0010BA 47D0 A08A            010C2  8895             +
 0010BE 5800 A2A8            012E0  8900             +
 0010C2 4120 C06F            00017  8905     901.              LA    RA,#BTDEDIT+L'#BTDEDIT  Get source address
 0010C6 1B20                        8906     902.              SR    RA,RVR                  |
 0010C8 1830                        8907     903.              LR    RB,RVR                  Length for execute
 0010CA 5810 C04C            00004  8908     904.              L     RS,@BTDLOC
 0010CE 0630/4430 A55A       01592  8909     905.              DEX   RB,'MVC  @RS(0),@RA'    MOVE RESULT TO USER AREA
 001592 D200 1000 2000 00000 00000  8920             +
 0010D4 981F C008            00008  8928     906.              PEND  ,
 DROP   @BTD-72,R12
 DROP   BTDBTD,R10
 0010D8 9680 C000/0B0E 00000        8943             +
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   44
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   8950     908.     *
                                    8951     909.     **  BTX -- Routine to format hexadecimal strings.
                                    8952     910.     **
                                    8953     911.     **    Input: @BTX
                                    8954     912.     **
                                    8955     913.     **    Output: RVR = text length
                                    8956     914.     *
 000000                00000 0000C  8957     915.     #BTX     RECORD BEGIN                  BTX LOCAL WORK AREA
 000000                             8965  1  916.                DS    H                       (pad)
 000002                             8966  1  917.     #BTXHEXS   DS    CL8                     Hex conversion area
 00000A                             8967  1  918.                DS    H                       (pad)
 00000C                0000C 0000C  8968     919.              END   ,                       OF BTX LOCAL WORK AREA
00010DE                             8978     921.     BTXBTX   PROC  @BTX,#BTX,SCOPE=GLOBAL
 0010DE C2E3E7C2E3E74040            8984             +
 0010E6 0010/0010                   8985             +
 0010EA 900F D004/18AF       00004  8987             +
 USING  BTXBTX,R10
 0010F0 50D0 C000/18CD       00000  9002             +
 0010F6 9680 C000      00000        9004             +
 USING  @BTX-72,R12
 AUSING (#BTX,@BTX+16)
 0010FA 41D0 C068            00068  9023             +
 0010FE F384 C05A C048 00002 00000  9024     922.              UNPK  #BTXHEXS(9),@BTXVAL(5)  TO ZONED FORMAT (SKIP SIGN)
 001104 DC07 C05A A131 00002 0121B  9025     923.              TR    #BTXHEXS,HEXTBL-C'0'    TO HEX FORMAT
 00110A 5830 C050            00008  9026     924.              L     RB,@BTXLEN              LENGTH
 00110E 1233/4770 A04A       01134  9027     925.              IF    (RB,Z),BEGIN            NOT GIVEN CALCULATE IT
 001114 4120 C059            00001  9041  1  926.                LA    RA,#BTXHEXS-1
 001118 4130 0007            00007  9042  1  927.                LA    RB,7
 00111C 4120 2001            00001  9043  1  928.     BTXCHK0    LA    RA,@RA+1
 001120 95F0 2000      00000        9044  1  929.                CLI   @RA,C'0'                START OF NON-ZERO STUFF?
 001124 4770 A046            01130  9045  1  930.                BNE   BTXX                    YES, DONE
 001128 4630 A032            0111C  9046  1  931.                BCT   RB,BTXCHK0              KEEP LOOKING
 00112C 4120 2001            00001  9047  1  932.                LA    RA,@RA+1                POINT TO LAST DIGIT
 001130 4100 3001            00001  9048  1  933.     BTXX       LA    RVR,@RB+1               GET REAL LENGTH IN RVR
 001134 A04E           01134 01112  9049     934.              END   ELSE,BEGIN
 001134 47F0 A066            01150  9058             +
 001138 1033                        9064  1  935.                LPR   RB,RB                   Negatives not allowed
 00113A 5930 A1FA            012E4  9065  1  936.                CEIL  RB,L'#BTXHEXS           | or greater than this
 00113E 47D0 A05C            01146  9074  1          +
 001142 5830 A1FA            012E4  9079  1          +
 001146 1803                        9084  1  937.                LR    RVR,RB                  Return specified length
 001148 4120 C062            0000A  9085  1  938.                LA    RA,#BTXHEXS+L'#BTXHEXS  COMPUTE ADDR TO MOVE FROM
 00114C 1B23                        9086  1  939.                SR    RA,RB                   |
 00114E 0630                        9087  1  940.                DECR  RB
 001150                             9089     941.              END   ,
 001150 5810 C04C            00004  9093     942.              L     RS,@BTXLOC              MOVE TO USERS AREA
 001154 4430 A4AE            01598  9094     943.              EX    RB,'MVC @RS(0),@RA'
 001598 D200 1000 2000 00000 00000  9102             +
 001158 981F C008            00008  9110     944.              PEND  ,
 DROP   @BTX-72,R12
 DROP   BTXBTX,R10
 00115C 9680 C000/0B0E 00000        9125             +
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   45
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   9132     946.     *
                                    9133     947.     **  BTS -- Routine to format scaled decimal strings.
                                    9134     948.     **
                                    9135     949.     **    Input
                                    9136     950.     **      @BTS
                                    9137     951.     **
                                    9138     952.     **    On exit:
                                    9139     953.     **      R1,R0 - text loc, len
                                    9140     954.     *
 000000                00000 00019  9141     955.     #BTS     RECORD BEGIN                  BTS LOCAL WORK AREA
 000000                             9149  1  956.     #BTSDEC    DS    D                       DOUBLE WORD
 000008                             9150  1  957.     #BTSEDIT   DS    CL17
 000019                00019 00019  9151     958.              END   ,                       OF BTS LOCAL WORK AREA
0001162                             9161     960.     BTSBTS   PROC  @BTS,#BTS,SCOPE=GLOBAL  Scaled decimal strings
 001162 C2E3E2C2E3E24040            9167             +
 00116A 0010/0020                   9168             +
 00116E 900F D004/18AF       00004  9170             +
 USING  BTSBTS,R10
 001174 50D0 C000/18CD       00000  9185             +
 00117A 9680 C000      00000        9187             +
 USING  @BTS-72,R12
 AUSING (#BTS,@BTS+16)
 00117E 41D0 C078            00078  9206             +
 001182 5860 C050            00008  9207     961.              L     RX,@BTSVAL              Binary value
 001186 4E60 C058            00000  9208     962.              CVD   RX,#BTSDEC
 00118A 4120 0007            00007  9209     963.              LA    RA,X'07'                GET NUMBER
 00118E 5420 C054            0000C  9210     964.              N     RA,@BTSSCAL             | OF DIGITS
 001192 4132 A2CC            0143A  9211     965.              LA    RB,BTSEDMSK(RA)         GET START OF MASK TO USE
                                    9212     966.              REGCH (RS,1)
 001196 4110 C06F            00017  9213     967.              LA    R1,#BTSEDIT+15          DEFAULT STARTING POINT
 00119A 1B12                        9214     968.              SR    R1,RA                   MINUS OFFSET
 00119C D210 C060 3000 00008 00000  9215     969.              MVC   #BTSEDIT,@RB            GET MASK
 0011A2 9240 C060      00008        9216     970.              MVI   #BTSEDIT,C' '           FIRST BYTE IS PAD CHAR
 0011A6 DF10 C060 C058 00008 00000  9217     971.              EDMK  #BTSEDIT,#BTSDEC        EDIT NUMBER
 0011AC 1266/47B0 A04A       011B8  9218     972.              IF    (RX,NEG),'DECR R1; MVI @R1,C"-"'
 0011B2 0610/9260 1000 00000        9234             +
 0011B8 5800 C04C/1200       00004  9240     973.              IF    ('LT RVR,@BTSLEN',ZERO),BEGIN    USE AS NECESSARY
 0011BE 4770 A05A            011C8  9251             +
 0011C2 4100 C071            00019  9256  1  974.                LA    RVR,#BTSEDIT+L'#BTSEDIT R1 POINTS TO START,
 0011C6 1B01                        9257  1  975.                SR    RVR,R1                  GET LENGTH IN RVR
 0011C8                             9258     976.              END
 0011C8 A05E           011C8 011C0  9262     977.              ELSE  BEGIN
 0011C8 47F0 A072            011E0  9267             +
 0011CC 1000                        9273  1  978.                LPR   RVR,RVR                 No negatives
 0011CE 5900 A17A            012E8  9274  1  979.                CEIL  RVR,L'#BTSEDIT          | or ones too long
 0011D2 47D0 A06C            011DA  9283  1          +
 0011D6 5800 A17A            012E8  9288  1          +
 0011DA 4110 C071            00019  9293  1  980.                LA    R1,#BTSEDIT+L'#BTSEDIT  RVR HAS LENGTH,
 0011DE 1B10                        9294  1  981.                SR    R1,RVR                  GET START IN R1
 0011E0                             9295     982.              END   ,
 0011E0 1830                        9299     983.              LR    RB,RVR                  MOVE TO OUTPUT - LENGTH
 0011E2 5820 C048            00000  9300     984.              L     RA,@BTSLOC              |
 0011E6 0630/4430 A430       0159E  9301     985.              DEX   RB,'MVC @RA(0),@R1'    |
 00159E D200 2000 1000 00000 00000  9312             +
 0011EC 981F C008            00008  9320     986.              PEND  ,
1TEXTCONV (TEXT00) (09:45) (22MAR04) ORVYL's Text and Conversion Routines                                                   Page   46
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0DROP   @BTS-72,R12
 DROP   BTSBTS,R10
 0011F0 9680 C000/0B0E 00000        9335             +
1TEXTCONV (TEXT00) (09:45) (22MAR04) Hash Routine                                                                           Page   47
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   9343     989.     *******************************************************************
                                    9344     990.     *                                                                 *
                                    9345     991.     *   HASHIT  - Hash a string to a numeric value                    *
                                    9346     992.     *                                                                 *
                                    9347     993.     *     Input - @HASH                                               *
                                    9348     994.     *                                                                 *
                                    9349     995.     *    Output - RVR contains hash value                             *
                                    9350     996.     *                                                                 *
                                    9351     997.     *******************************************************************
-
 0011F6                             9353     999.     HASHIT   PROC  @HASH,SCOPE=GLOBAL
 0011F6 C8C1E2C8C9E34040            9359             +
 0011FE 0010/0000                   9360             +
 001202 900F D004/18AF       00004  9362             +
 USING  HASHIT,R10
 001208 50D0 C000/18CD       00000  9377             +
 00120E 9680 C000      00000        9379             +
 USING  @HASH-72,R12
 001212 41D0 C058            00058  9393             +
 001216 5820 C048            00000  9394    1000.              L     RA,@HSHSTR              STRING POINTER
 00121A 5830 C04C            00004  9395    1001.              L     RB,@HSHLEN              LENGTH
 00121E 0630                        9396    1002.              DECR  RB                      LAST CHARACTER
                                    9398    1003.     *
                                    9399    1004.     *  STRIP TRAILING BLANKS
                                    9400    1005.     *
 001220 9180 C054      0000C        9401    1006.              IF    @HSHBLNK,BEGIN          STRIP TRAILINB BLANKS
 001224 47E0 A034            01236  9411             +
 001228 9540 2000      00000        9416  1 1007.                UNTIL (@RA,NE,C' '),'DECR  RB'
 00122C 4770 A034/0630       01236  9432  1          +
 001232 47F0 A026            01228  9443  1          +
 001236                             9445    1008.              END   ,
 001236 1B00                        9449    1009.              CLEAR RVR
 001238 1B11                        9453    1010.              CLEAR RS
 00123A 1A32                        9457    1011.              AR    RB,RA                   END OF STRING + 1
1TEXTCONV (TEXT00) (09:45) (22MAR04) Hash Routine                                                                           Page   48
0Current Usings:  (HASHIT,R10) (@HASH-72,R12)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   9459    1013.     *
                                    9460    1014.     *  HASH STRING CHARACTER BY CHARACTER
                                    9461    1015.     *
 00123C 1923/47B0 A066       01268  9462    1016.              WHILE (RA,LT,RB),BEGIN
 001242 8910 0004            00004  9479  1 1017.                SLL   RS,4
 001246 4300 2000            00000  9480  1 1018.                IC    RVR,@RA                 GET NEXT CHARACTER
 00124A 1E10                        9481  1 1019.                ALR   RS,RVR                  ADD TO HASH VALUE
                                    9482  1 1020.     *
                                    9483  1 1021.     *  CAP VALUE AT 2**28
                                    9484  1 1022.     *
 00124C 58F0 A0EA            012EC  9485  1 1023.                L     R15,=X'F0000000'
 001250 14F1/4780 A05E       01260  9486  1 1024.                IF    ('NR  R15,RS',NZ),BEGIN   SHIFTED INTO HIGH NIBBLE
 001256 18EF                        9499  2 1025.                  LR    R14,R15
 001258 88E0 0018            00018  9500  2 1026.                  SRL   R14,24                  SHIFT HIGH BYTE TO LOW BYTE
 00125C 171E                        9501  2 1027.                  XR    RS,R14
 00125E 171F                        9502  2 1028.                  XR    RS,R15
 001260                             9503  1 1029.                END   ,
 001260 5E20 A0C2            012C4  9507  1 1030.                INCR  RA                      TO NEXT BYTE
 001264 47F0 A03A            0123C  9510    1031.              END   ,
                                    9515    1032.     *
                                    9516    1033.     *  CREATE HASH INDEX VALUE
                                    9517    1034.     *
 001268 1B00                        9518    1035.              CLEAR RVR
 00126A 5D00 C050            00008  9522    1036.              D     RVR,@HSHVAL             HASH INDEX VALUE IS IN RVR
 00126E 981F C008            00008  9523    1037.              PEND
 DROP   @HASH-72,R12
 DROP   HASHIT,R10
 001272 9680 C000/0B0E 00000        9538             +
 001278                             9544    1038.              END   .
 001278 D9F04060D9F34040            9547                             =C'R0 -R3  '
 001280 D9F44060D9F74040            9548                             =C'R4 -R7  '
 001288 D9F84060D9F1F140            9549                             =C'R8 -R11 '
 001290 D9F1F260D9F1F540            9550                             =C'R12-R15 '
 001298 00000000                    9551                             =V(BTXBTX)
 00129C 00000000                    9552                             =V(SEG)
 0012A0 D695408595A399A8            9553                             =C'On entry to routine '
 0012B4 00000000                    9554                             =V(SEGHEX)
 0012B8 D7819994                    9555                             =CL4'Parm'
 0012BC 00000000                    9556                             =V(SEGCORE)
 0012C0 E6969992                    9557                             =CL4'Work'
 0012C4 00000001                    9558                             =A(1)
 0012C8 0000000A                    9559                             =A(@DTBMXLN)
 0012CC 000000B7                    9560                             =A(C'A'-10)
 0012D0 000000F0                    9561                             =A(C'0')
 0012D4 0000000B                    9562                             =A(@STBMXLN)
 0012D8 0000000A                    9563                             =A(@STBMXLN-1)
 0012DC 7FFFFFFF                    9564                             =X'7FFFFFFF'
 0012E0 0000000F                    9565                             =A(L'#BTDEDIT)
 0012E4 00000008                    9566                             =A(L'#BTXHEXS)
 0012E8 00000011                    9567                             =A(L'#BTSEDIT)
 0012EC F0000000                    9568                             =X'F0000000'
 0012F0 000C                        9569                             =Y(L'#SEGSENT)
 0012F2 02147483648C                9570                             =P'2147483648'
 0012F8 4E                          9571                             =C'+'
1TEXTCONV (TEXT00) (09:45) (22MAR04) Hash Routine                                                                           Page   49
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.45
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
00012F9 D985A3A499954081            9572                             =C'Return address = '
 00130A 40             015A4 015A4  9573                             =C' '

1TEXTCONV (TEXT00) (09:45) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   50
-Symbol   Length   Value     Id    R Type   Defn References                                  HLASM R4.0  2004/03/22 09.45
0$$$@R0        1 00000000 FFFFFFFE     J     714 1010
 $$$@R1        1 00000000 FFFFFFFD     J     727 1022
 $$$@R10       1 00000000 FFFFFFF4     J     844 1142
 $$$@R11       1 00000000 FFFFFFF3     J     857 1154
 $$$@R12       1 00000000 FFFFFFF2     J     870 1166
 $$$@R13       1 00000000 FFFFFFF1     J     883 1178
 $$$@R14       1 00000000 FFFFFFF0     J     896 1190
 $$$@R15       1 00000000 FFFFFFEF     J     909 1202
 $$$@R2        1 00000000 FFFFFFFC     J     740 1034
 $$$@R3        1 00000000 FFFFFFFB     J     753 1046
 $$$@R4        1 00000000 FFFFFFFA     J     766 1058
 $$$@R5        1 00000000 FFFFFFF9     J     779 1070
 $$$@R6        1 00000000 FFFFFFF8     J     792 1082
 $$$@R7        1 00000000 FFFFFFF7     J     805 1094
 $$$@R8        1 00000000 FFFFFFF6     J     818 1106
 $$$@R9        1 00000000 FFFFFFF5     J     831 1118  1130
 $$$C1TEXTCONV
               1 00000986 00000001     J    5431 5433  5459  5480  5971  5993  7482  7707  7748  7891  7908  7959  8280
                                                 8425  8446  8499  8543  8605  8699  8926  8975  9108  9158  9318
 $$$C2TEXTCONV
               1 000015A4 00000001     J    9574 9576
 $$$D0TEXTCONV
               1 0000086E 00000001     J    1220 3636  4659  4801  4817  5376
 $$$D1TEXTCONV
               1 0000130B 00000001     J    5432 7669  7880  7897  7948  8414  8435  8488  8532  8594  8915  9097  9307
 $$$R#BTD      1 00000000 FFFFFFD6     J    8684 8698  8698
 $$$R#BTS      1 00000000 FFFFFFD4     J    9143 9157  9157
 $$$R#BTX      1 00000000 FFFFFFD5     J    8959 8974  8974
 $$$R#DTB      1 00000000 FFFFFFD8     J    7724 7747  7747
 $$$R#SAD      1 00000000 FFFFFFDD     J    5444 5458  5458
 $$$R#SC       1 00000000 FFFFFFDE     J    3351 3384  3384
 $$$R#SEG      1 00000000 FFFFFFE0     J    2108 2129  2129
 $$$R#SEGSTK
               1 00000000 FFFFFFDB     J    5954 5970  5970
 $$$R#STB      1 00000000 FFFFFFD7     J    8255 8279  8279
 $$$R#SX       1 00000000 FFFFFFDF     J    3012 3025  3025
 $$$R@BTD      1 00000000 FFFFFFE4     J    1635 1665  1665
 $$$R@BTS      1 00000000 FFFFFFE2     J    1695 1712  1712
 $$$R@BTX      1 00000000 FFFFFFE3     J    1671 1689  1689
 $$$R@DTB      1 00000000 FFFFFFE7     J    1540 1565  1565
 $$$R@HASH
               1 00000000 FFFFFFE1     J    1725 1749  1749
 $$$R@SAD      1 00000000 FFFFFFDC     J    5464 5479  5479
 $$$R@SEG      1 00000000 FFFFFFED     J    1344 1399  1399
 $$$R@SEGCOL
               1 00000000 FFFFFFEB     J    1427 1441  1441
 $$$R@SEGCORE
               1 00000000 FFFFFFEA     J    1447 1494  1494
 $$$R@SEGINIT
               1 00000000 FFFFFFEC     J    1405 1421  1421
 $$$R@SEGRTN
               1 00000000 FFFFFFE9     J    1500 1513  1513
 $$$R@SEGSTK
               1 00000000 FFFFFFE8     J    1519 1533  1533
 $$$R@SEGWORD
1TEXTCONV (TEXT00) (09:45) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   51
               1 00000000 FFFFFFD9     J    7466 7481  7481
 $$$R@STB      1 00000000 FFFFFFE5     J    1602 1629  1629
 $$$R@XTB      1 00000000 FFFFFFE6     J    1571 1596  1596
 $$$RFRAME
               1 00000000 FFFFFFDA     J    5976 5992  5992
 $$$RSEGCBD
               1 00000000 FFFFFFEE     J    1270 1337  1337
 $$$101        6 00001574 00000001     I    8420 8412X
 $$$102        6 00001574 00000001     I    8419 8420  8420
 $$$103        6 0000157A 00000001     I    8441 8433X
 $$$104        6 0000157A 00000001     I    8440 8441  8441
 $$$105F       2 00000FE2 00000001     H    8566 8454B
 $$$106F       2 00000FE2 00000001     H    8562 8474B
 $$$107        6 00001580 00000001     I    8494 8486X
 $$$108        6 00001580 00000001     I    8493 8494  8494
 $$$11F        2 0000012C 00000001     H    2293 2211B
 $$$110        6 00001586 00000001     I    8538 8530X
 $$$111        6 00001586 00000001     I    8537 8538  8538
 $$$113F       2 00000FF8 00000001     H    8590 8580B
 $$$114        6 0000158C 00000001     I    8600 8592X
 $$$115        6 0000158C 00000001     I    8599 8600  8600
 $$$119B       4 00001050 00000001     I    8758 8770
 $$$119F       2 0000105A 00000001     H    8767 8758B 8769
 $$$12F        2 0000012C 00000001     H    2289 2229B
 $$$120E       2 0000105E 00000001     H    8777 8771
 $$$120F       2 00001064 00000001     H    8783 8773B
 $$$121B       4 00001072 00000001     I    8808 8824
 $$$121F       2 00001084 00000001     H    8819 8797B 8808B 8821
 $$$122B       4 0000106C 00000001     I    8797 8822
 $$$123E       2 00001088 00000001     H    8831 8823  8825
 $$$123F       2 0000108C 00000001     H    8837 8827B
 $$$124F       2 000010A2 00000001     H    8861 8850B
 $$$125F       2 000010B6 00000001     H    8885 8875B
 $$$126F       2 000010C2 00000001     H    8904 8895B
 $$$127        6 00001592 00000001     I    8921 8913X
 $$$128        6 00001592 00000001     I    8920 8921  8921
 $$$13F        2 00000122 00000001     H    2276 2251B 2264B
 $$$13S        2 0000010E 00000001     H    2242 2275B
 $$$130B       4 00001110 00000001     I    9036 9055
 $$$130F       2 00001134 00000001     H    9052 9036B 9054
 $$$131E       2 00001138 00000001     H    9062 9056
 $$$131F       2 00001150 00000001     H    9092 9058B
 $$$132F       2 00001146 00000001     H    9083 9074B
 $$$133        6 00001598 00000001     I    9103 9095X
 $$$134        6 00001598 00000001     I    9102 9103  9103
 $$$136F       2 000011B8 00000001     H    9239 9227B
 $$$137B       4 000011BE 00000001     I    9251 9264
 $$$137F       2 000011C8 00000001     H    9261 9251B 9263
 $$$138E       2 000011CC 00000001     H    9271 9265
 $$$138F       2 000011E0 00000001     H    9298 9267B
 $$$139F       2 000011DA 00000001     H    9292 9283B
 $$$140        6 0000159E 00000001     I    9313 9305X
 $$$141        6 0000159E 00000001     I    9312 9313  9313
 $$$143F       2 00001236 00000001     H    9448 9411B
 $$$144F       2 00001236 00000001     H    9444 9432B
 $$$144S       2 00001228 00000001     H    9422 9443B
 $$$146F       2 00001268 00000001     H    9514 9474B
 $$$146S       2 0000123C 00000001     H    9467 9513B
 $$$148F       2 00001260 00000001     H    9506 9494B
1TEXTCONV (TEXT00) (09:45) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   52
 $$$16F        2 0000014E 00000001     H    2365 2306B
 $$$17B        4 00000136 00000001     I    2321 2341
 $$$17F        2 00000146 00000001     H    2338 2321B 2340
 $$$18E        2 0000014A 00000001     H    2348 2342
 $$$18F        2 0000014E 00000001     H    2361 2344B
 $$$19F        2 000001B6 00000001     H    2512 2378B
 $$$19S        2 0000014E 00000001     H    2371 2511B
 $$$21B        4 0000017A 00000001     I    2409 2451
 $$$21F        2 00000192 00000001     H    2444 2409B 2450
 $$$22B        4 0000019A 00000001     I    2467 2487
 $$$22E        2 00000196 00000001     H    2458 2452
 $$$22F        2 000001AA 00000001     H    2484 2454B 2467B 2486
 $$$24E        2 000001AE 00000001     H    2494 2488
 $$$24F        2 000001B2 00000001     H    2507 2490B
 $$$25F        2 000001C4 00000001     H    2535 2526B
 $$$26F        2 000001E6 00000001     H    2578 2549B
 $$$27F        2 00000208 00000001     H    2621 2592B
 $$$29F        2 00000250 00000001     H    2744 2735B
 $$$30F        2 0000025C 00000001     H    2763 2754B
 $$$33F        2 00000360 00000001     H    3302 3106B
 $$$33S        2 00000302 00000001     H    3100 3301B
 $$$36B        4 000003A4 00000001     I    3467 3483
 $$$36F        2 000003B0 00000001     H    3480 3467B 3482
 $$$37E        2 000003B4 00000001     H    3490 3484
 $$$37F        2 000003BE 00000001     H    3503 3486B
 $$$38B        4 000003C2 00000001     I    3514 3527
 $$$38F        2 000003D0 00000001     H    3524 3514B 3526
 $$$39E        2 000003D4 00000001     H    3534 3528
 $$$39F        2 000003DE 00000001     H    3541 3530B
 $$$40F        2 00000766 00000001     H    4989 3563B
 $$$40S        2 000003E8 00000001     H    3555 3697B 4988B
 $$$42F        2 00000502 00000001     H    4067 3582B
 $$$43F        2 00000450 00000001     H    3701 3607B 3621B 3649B
 $$$46         6 0000086E 00000001     I    3642 3634X
 $$$47         6 0000086E 00000001     I    3641 3642  3642
 $$$48F        2 00000430 00000001     H    3682 3667B
 $$$5F         2 0000005A 00000001     H    1858 1848B
 $$$50F        2 00000502 00000001     H    4059 3716B
 $$$51F        2 000005F0 00000001     H    4432 4241B
 $$$52F        2 000005F0 00000001     H    4428 4321B
 $$$53F        2 0000064A 00000001     H    4568 4448B
 $$$53S        2 000005F4 00000001     H    4442 4567B
 $$$55F        2 00000680 00000001     H    4648 4581B
 $$$56         6 00000874 00000001     I    4665 4657X
 $$$57         6 00000874 00000001     I    4664 4665  4665
 $$$58F        2 0000072C 00000001     H    4933 4683B
 $$$59         6 0000087A 00000001     I    4807 4799X
 $$$60         6 0000087A 00000001     I    4806 4807  4807
 $$$61         6 00000880 00000001     I    4823 4815X
 $$$62         6 00000880 00000001     I    4822 4823  4823
 $$$63F        2 00000818 00000001     H    5346 5000B
 $$$65B        4 000009DA 00000001     I    5640 5831
 $$$65F        2 00000A44 00000001     H    5828 5640B 5830
 $$$66E        2 00000A48 00000001     H    5838 5832
 $$$66F        2 00000A6A 00000001     H    5901 5834B
 $$$68S        2 00000A98 00000001     H    6060 7419B
 $$$69F        2 00000D22 00000001     H    7195 7066B
 $$$7B         4 000000A0 00000001     I    2017 2037
 $$$7F         2 000000AE 00000001     H    2030 2017B 2036
1TEXTCONV (TEXT00) (09:45) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   53
 $$$70F        2 00000D76 00000001     H    7353 7214B
 $$$75F        2 00000E68 00000001     H    7839 7820B
 $$$76F        2 00000EB4 00000001     H    7999 7849B 7868B 7918B 7973B 7983B
 $$$78         6 00001562 00000001     I    7886 7878X
 $$$79         6 00001562 00000001     I    7885 7886  7886
 $$$8E         2 000000B2 00000001     H    2044 2038
 $$$8F         2 000000C0 00000001     H    2068 2040B 2053B
 $$$80         6 00001568 00000001     I    7903 7895X
 $$$81         6 00001568 00000001     I    7902 7903  7903
 $$$83F        2 00000E94 00000001     H    7944 7934B
 $$$84         6 0000156E 00000001     I    7954 7946X
 $$$85         6 0000156E 00000001     I    7953 7954  7954
 $$$89F        2 00000F3A 00000001     H    8218 8102B 8113B 8201  8203
 $$$91B        4 00000F08 00000001     I    8147 8162
 $$$91F        2 00000F10 00000001     H    8156 8137B 8147B 8159
 $$$92B        4 00000F00 00000001     I    8137 8160
 $$$93B        4 00000F20 00000001     I    8188 8202
 $$$93E        2 00000F14 00000001     H    8169 8161  8163
 $$$93F        2 00000F28 00000001     H    8197 8165B 8178B 8188B 8199
 $$$95B        4 00000F18 00000001     I    8178 8200
 $$$98F        2 00000F84 00000001     H    8371 8352B
 $$$99F        2 00001022 00000001     H    8647 8383B 8402B 8463B 8523B 8553B 8621B 8631B
 #BTD         23 00000000 FFFFFFD6     J    8698 8745U
 #BTDDEC       8 00000000 FFFFFFD6     D    8690 8814M 8815M 8833M 8840
 #BTDEDIT     15 00000008 FFFFFFD6     C    8691 8763M 8779M 8839  8839  8840M 8862  8862  8905  8905  9565
 #BTS         25 00000000 FFFFFFD4     J    9157 9204U
 #BTSDEC       8 00000000 FFFFFFD4     D    9149 9208M 9217
 #BTSEDIT     17 00000008 FFFFFFD4     C    9150 9213  9215M 9216M 9217M 9256  9256  9293  9293  9567
 #BTX         12 00000000 FFFFFFD5     J    8974 9021U
 #BTXHEXS      8 00000002 FFFFFFD5     C    8966 9024M 9025M 9041  9085  9085  9566
 #DTB         19 00000000 FFFFFFD8     J    7747 7794U 7803M 7803
 #DTBDEC       8 00000000 FFFFFFD8     D    7730 7953M 7970  7980  7989
 #DTBFLG       1 00000012 FFFFFFD8     R    7734 7738
 #DTBNEG     128 00000012 FFFFFFD8         7738 7830M 7933
 #DTBSTR      10 00000008 FFFFFFD8     C    7731 7885M 7902  7939  7953
 #SAD          8 00000000 FFFFFFDD     J    5458 5525U
 #SADOFF       3 00000005 FFFFFFDD     U    5451 5791  5808
 #SADWORK      8 00000000 FFFFFFDD     C    5450 5451  5603  5620  5864  5881
 #SC         105 00000000 FFFFFFDE     J    3384 3431U 3808  3945  4111  5095  5232  5538U
 #SCADDR       4 00000040 FFFFFFDE     A    3359 3439M 3492  3548  3688M 4098  4343  4650  4981M
 #SCANUM       4 0000004C FFFFFFDE     A    3362 3544M 4221  4689  4978M 4978
 #SCANUME      4 00000050 FFFFFFDE     A    3363 4231M 4579
 #SCBUF       32 00000000 FFFFFFDE     X    3357 4806M 4822M 4854
 #SCBUFL       4 0000005C FFFFFFDE     A    3366 3520M 3537M 3590  3592  3606  4214
 #SCCURL       4 00000060 FFFFFFDE     A    3367 4229M 4651  4864  4979
 #SCFLAGS      1 00000068 FFFFFFDE     R    3371 3375
 #SCFREP     128 00000068 FFFFFFDE         3375 3449M 3666  3678M 3715  4055M 4999  5342M
 #SCLEN        4 00000044 FFFFFFDE     A    3360 3438M 3561  3693  3694M 4213  4983  4984M
 #SCOFF        4 00000048 FFFFFFDE     A    3361 3476M 3499M 3499  5561
 #SCPBUF      32 00000020 FFFFFFDE     X    3358 3641  4664M
 #SCPREL       4 00000064 FFFFFFDE     A    3368 3456M 3456  3620  4652M
 #SCRBEG       4 00000054 FFFFFFDE     A    3364 3672M 3795  5082
 #SCREND       4 00000058 FFFFFFDE     A    3365 3684M 3932  5219
 #SEG          1 00000000 FFFFFFE0     J    2129 2176U
 #SEGF         1 00000000 FFFFFFE0     R    2116 2120
 #SEGMORE    128 00000000 FFFFFFE0         2120 2184M 2357M 2377  2503M
 #SEGSENT     12 00000000 FFFFFFDB     C    5960 5961  5962  5963  6067M 9569
 #SEGSNAM      8 00000000 FFFFFFDB     X    5961 6155  6172
 #SEGSPAR      2 00000008 FFFFFFDB     X    5962 7056
1TEXTCONV (TEXT00) (09:45) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   54
 #SEGSTK      12 00000000 FFFFFFDB     J    5970 6039U
 #SEGSWOR      2 0000000A FFFFFFDB     X    5963 7204
 #STB         24 00000000 FFFFFFD7     J    8279 8326U 8335M 8335
 #STBDEC       8 00000000 FFFFFFD7     D    8261 8599M 8608M 8618  8628  8637
 #STBFLG       1 00000013 FFFFFFD7     R    8265 8269
 #STBNEG     128 00000013 FFFFFFD7         8269 8362M 8579
 #STBSCAL      4 00000014 FFFFFFD7     A    8272 8507M 8607
 #STBSTR      11 00000008 FFFFFFD7     C    8262 8419M 8440  8479  8585  8599
 #SX           8 00000000 FFFFFFDF     J    3025 3072U
 #SXBUF        8 00000000 FFFFFFDF     X    3018 3156  3223
 @BTD         13 00000000 FFFFFFE4     J    1665 8738U 8745U
 @BTDCOMM    128 0000000C FFFFFFE4         1650 8757
 @BTDFLG       1 0000000C FFFFFFE4     R    1646 1650  1655
 @BTDLEN       4 00000008 FFFFFFE4     A    1643 1658  1658  8873
 @BTDLOC       4 00000004 FFFFFFE4     A    1642 1658  1658  8908
 @BTDUNSI     64 0000000C FFFFFFE4         1655 8796
 @BTDVAL       4 00000000 FFFFFFE4     F    1641 8784
 @BTS         16 00000000 FFFFFFE2     J    1712 9197U 9204U
 @BTSLEN       4 00000004 FFFFFFE2     A    1702 1705  1705  9249
 @BTSLOC       4 00000000 FFFFFFE2     A    1701 1705  1705  9300
 @BTSSCAL      4 0000000C FFFFFFE2     A    1704 9210
 @BTSVAL       4 00000008 FFFFFFE2     A    1703 9207
 @BTX         12 00000000 FFFFFFE3     J    1689 3130U 3138M 3138  3270U 5572U 5580M 5580  9014U 9021U
 @BTXLEN       4 00000008 FFFFFFE3     A    1679 1682  1682  3178M 5625M 9026
 @BTXLOC       4 00000004 FFFFFFE3     A    1678 1682  1682  3161M 5608M 9093
 @BTXVAL       4 00000000 FFFFFFE3     A    1677 3143M 5590M 9024
 @DTB          9 00000000 FFFFFFE7     J    1565 7787U 7794U
 @DTBFLG       1 00000008 FFFFFFE7     R    1551 1555
 @DTBLEN       4 00000004 FFFFFFE7     A    1547 1558  1558
 @DTBLOC       4 00000000 FFFFFFE7     A    1546 1558  1558  7811
 @DTBMXLN     10 0000000A FFFFFFE7 A   N    1548 7731  9559
 @DTBVALID
             128 00000008 FFFFFFE7         1555 7810M 7995M
 @HASH        13 00000000 FFFFFFE1     J    1749 9389U
 @HSHBLNK    128 0000000C FFFFFFE1         1740 9410
 @HSHFL        1 0000000C FFFFFFE1     R    1736 1740
 @HSHLEN       4 00000004 FFFFFFE1     A    1732 9395
 @HSHSTR       4 00000000 FFFFFFE1     A    1731 9394
 @HSHVAL       4 00000008 FFFFFFE1     A    1733 9522
 @RA           0 00000000 FFFFFFFC     @    1035 3641  4562  4664  4806  6067  7199  7642  8920  9043  9044  9047  9102
                                                 9312M 9431  9480
 @RB           0 00000000 FFFFFFFB     @    1047 2234  7527  9048  9215
 @RJ           0 00000000 FFFFFFFA     @    1059 3143
 @RS           0 00000000 FFFFFFFD     @    1023 2263  2278  7940M 8586M 8608  8920M 9102M
 @RX           0 00000000 FFFFFFF8     @    1083 7819  7885  8125  8136  8146  8177  8187  8207  8351  8419
 @R0           0 00000000 FFFFFFFE     @     715  991U
 @R1           0 00000000 FFFFFFFD     @     728  987U 8126U 8493M 8493  8537  8857M 9235M 9312
 @R10          0 00000000 FFFFFFF4     @     845  951U 1925U 2085U 2641U 2842U 2985U 3322U 5358U 5929U 7441U 7655U 8011U
                                                 8230U 8659U 8939U 9121U 9331U 9534U
 @R11          0 00000000 FFFFFFF3     @     858  947U
 @R12          0 00000000 FFFFFFF2     @     871  943U 1920U 2080U 2636U 2837U 2980U 3317U 5353U 5924U 7436U 7650U 8006U
                                                 8225U 8654U 8934U 9116U 9326U 9529U
 @R13          0 00000000 FFFFFFF1     @     884  939U 1936U 2652U 2853U 2996U 3199U 3267U 3333U 3778U 3851U 3915U 3989U
                                                 4081U 4154U 5015U 5065U 5138U 5202U 5276U 5369U 5655U 5940U 6412U 6486U
                                                 6587U 6661U 6762U 6836U 6937U 7011U 7119U 7230U 7277U 7365U 7452U 7666U
 @R14          0 00000000 FFFFFFF0     @     897  935U
 @R15          0 00000000 FFFFFFEF     @     910  931U
 @R2           0 00000000 FFFFFFFC     @     741  983U
 @R3           0 00000000 FFFFFFFB     @     754  979U
1TEXTCONV (TEXT00) (09:45) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   55
 @R4           0 00000000 FFFFFFFA     @     767  975U
 @R5           0 00000000 FFFFFFF9     @     780  971U
 @R6           0 00000000 FFFFFFF8     @     793  967U 5916U 7431U
 @R7           0 00000000 FFFFFFF7     @     806  963U 1912U 2075U 2628U 2829U 2972U 3309U 5908U
 @R8           0 00000000 FFFFFFF6     @     819  959U
 @R9           0 00000000 FFFFFFF5     @     832  955U
 @SAD         12 00000000 FFFFFFDC     J    5479 3781U 3789M 3789  3918U 3926M 3926  4084U 4092M 4092  5068U 5076M 5076
                                                 5205U 5213M 5213  5518U 5525U
 @SADADDR      4 00000008 FFFFFFDC     A    5472 3795M 3932M 4098M 5082M 5219M 5560
 @SADLOC       4 00000000 FFFFFFDC     A    5470 3813M 3950M 4116M 5100M 5237M 5528
 @SADPARM      4 00000004 FFFFFFDC     A    5471 3831M 3968M 4134M 5118M 5255M 5543
 @SEG         13 00000000 FFFFFFED     J    1399 2169U 2176U 2774U 2782M 2782  3065U 3072U 3202U 3210M 3210  3854U 3862M
                                                 3862  3992U 4000M 4000  4157U 4165M 4165  4269M 4269  4337M 4337  4376M
                                                 4376  4471M 4471  4515M 4515  4605M 4605  4701M 4701  4752M 4752  4841M
                                                 4841  4887M 4887  4946M 4946  5141U 5149M 5149  5279U 5287M 5287  5658U
                                                 5666M 5666  5724M 5724  5778M 5778  5851M 5851  6079U 6087M 6087  6142M
                                                 6142  6206M 6206  6260M 6260  6319M 6319  6359M 6359  6489U 6497M 6497
                                                 6534M 6534  6664U 6672M 6672  6709M 6709  6839U 6847M 6847  6884M 6884
                                                 7014U 7022M 7022  7083M 7083  7233U 7241M 7241  7368U 7376M 7376  7540U
                                                 7548M 7548  7599M 7599
 @SEGB       128 0000000C FFFFFFED         1359 1374  1374  2320  2334M 2466  2480M
 @SEGCB        4 00000000 FFFFFFED     A    1350 2185  2818M 3075  3250M 3900M 4038M 4207M 4304M 4360M 4418M 4499M 4557M
                                                 4640M 4736M 4790M 4871M 4925M 4961M 5187M 5325M 5708M 5762M 5820M 5893M
                                                 6125M 6184M 6244M 6302M 6334M 6397M 6512M 6572M 6687M 6747M 6862M 6922M
                                                 7037M 7098M 7256M 7391M 7583M 7637M
 @SEGCCB       4 00000000 FFFFFFEB     A    1433 2706  3763M 5050M
 @SEGCNUM      4 00000004 FFFFFFEB     A    1434 2721  3756M 5043M
 @SEGCOL       8 00000000 FFFFFFEB     J    1441 2701U 3731U 3739M 3739  5018U 5026M 5026
 @SEGCORE     24 00000000 FFFFFFEA     J    1494 3424U 3431U 3826  3963  4129  5113  5250  5553U 7122U 7130M 7130  7280U
                                                 7288M 7288
 @SEGEOB       8 0000000C FFFFFFED         1390 2591
 @SEGEOR      16 0000000C FFFFFFED         1385 2548  4044M 4967M 5331M 6190M 6340M 6518M 6693M 6868M 7043M 7104M 7262M
                                                 7397M
 @SEGICB       4 00000000 FFFFFFEC     A    1411 1804  2907
 @SEGILEN      2 0000000C FFFFFFEC     Y    1414 1837
 @SEGILOC      4 00000008 FFFFFFEC     A    1413 1831
 @SEGINIT     14 00000000 FFFFFFEC     J    1421 1799U 2902U
 @SEGIRTN      4 00000004 FFFFFFEC     A    1412 1838
 @SEGLEN       4 00000008 FFFFFFED     A    1352 2203  2806M 3091  3238M 3893M 4031M 4200M 4297M 4353M 4411M 4492M 4550M
                                                 4633M 4729M 4783M 4864M 4918M 4954M 4954  5180M 5318M 5701M 5755M 5813M
                                                 5886M 6118M 6177M 6237M 6295M 6327M 6327  6390M 6505M 6505  6565M 6680M
                                                 6680  6740M 6855M 6855  6915M 7030M 7030  7091M 7091  7249M 7249  7384M
                                                 7384  7576M 7630M
 @SEGLOC       4 00000004 FFFFFFED     A    1351 2200  2796M 3090  3228M 3876M 4014M 4183M 4287M 4343M 4394M 4482M 4533M
                                                 4623M 4719M 4766M 4859M 4901M 5163M 5301M 5684M 5738M 5796M 5869M 6101M
                                                 6160M 6220M 6278M 6373M 6548M 6723M 6898M 7559M 7613M
 @SEGMK       32 0000000C FFFFFFED         1380 2525
 @SEGRCB       4 00000000 FFFFFFE9     A    1506 1904M 1990  2438M 2571M 2614M 2963M
 @SEGRTN       4 00000000 FFFFFFE9     J    1513 1885U 1893M 1893  1985U 2429U 2437M 2437  2570M 2570  2613M 2613  2954U
                                                 2962M 2962
 @SEGSCB       4 00000000 FFFFFFE8     A    1525 6125  6184  6244  6302  6334  6397  6465  6512  6572  6640  6687  6747
                                                 6815  6862  6922  6990  7037  7098  7187  7256  7345  7391
 @SEGSST       4 00000004 FFFFFFE8     A    1526 6042
 @SEGSTK       8 00000000 FFFFFFE8     J    1533 6032U 6039U
 @SEGT        64 0000000C FFFFFFED         1364 1374  1374  2228  2285M
 @SEGTYPE      1 0000000C FFFFFFED     R    1355 1359  1364  1375  1380  1385  1390
 @SEGWORD     12 00000000 FFFFFFD9     J    7481 6415U 6423M 6423  6590U 6598M 6598  6765U 6773M 6773  6940U 6948M 6948
                                                 7520U
 @SEGXCB       4 00000000 FFFFFFEA     A    1453 3763  3900  4038  4207  4304  4360  4418  4499  4557  4640  4736  4790
1TEXTCONV (TEXT00) (09:45) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   56
                                                 4871  4925  4961  5050  5187  5325  5708  5762  5820  5893  7187M 7345M
 @SEGXFAL     64 0000000D FFFFFFEA         1468 4682  7175  7175  7176  7176  7179  7179  7333  7333  7334  7334  7337
                                                 7337
 @SEGXFID     16 0000000D FFFFFFEA         1478 5639  7174  7174  7175  7175  7177  7177  7180M 7332  7332  7333  7333
                                                 7335  7335  7338M
 @SEGXFLG      1 0000000D FFFFFFEA     R    1459 1463  1468  1473  1478  1483
 @SEGXFOF     32 0000000D FFFFFFEA         1473 3466  7174  7174  7176  7176  7178  7178  7332  7332  7334  7334  7336
                                                 7336
 @SEGXFRL      8 0000000D FFFFFFEA         1483 3581
 @SEGXF16    128 0000000D FFFFFFEA         1463 3513  7177  7177  7178  7178  7179  7179  7335  7335  7336  7336  7337
                                                 7337
 @SEGXID       4 00000014 FFFFFFEA     C    1487 5679  7157M 7315M
 @SEGXLEN      4 00000008 FFFFFFEA     A    1455 3438
 @SEGXLOC      4 00000004 FFFFFFEA     A    1454 3439  7141M 7151M 7162  7299M 7309M 7320
 @SEGXOFF      4 00000010 FFFFFFEA     A    1486 3476  7162M 7320M
 @SRCB         4 00000000 FFFFFFD9     A    7472 6465M 6640M 6815M 6990M 7583  7637
 @SRLEN        4 00000008 FFFFFFD9     A    7474 6458M 6633M 6808M 6983M 7526
 @SRLOC        4 00000004 FFFFFFD9     A    7473 6441M 6616M 6791M 6966M 7525
 @STB         13 00000000 FFFFFFE5     J    1629 8319U 8326U
 @STBFLG       1 0000000C FFFFFFE5     R    1615 1619
 @STBLEN       4 00000004 FFFFFFE5     A    1609 1622  1622  8467M 8567
 @STBLOC       4 00000000 FFFFFFE5     A    1608 1622  1622  8343  8372M
 @STBMXLN     11 0000000B FFFFFFE5 A   N    1610 8262  9562  9563
 @STBSCAL      4 00000008 FFFFFFE5     A    1612 8506
 @STBVALID
             128 0000000C FFFFFFE5         1619 8342M 8643M
 @XTB          9 00000000 FFFFFFE6     J    1596 8070U
 @XTBFLG       1 00000008 FFFFFFE6     R    1582 1586
 @XTBLEN       4 00000004 FFFFFFE6     A    1578 1589  1589
 @XTBLOC       4 00000000 FFFFFFE6     A    1577 1589  1589  8086  8101
 @XTBVALID
             128 00000008 FFFFFFE6         1586 8081M 8214M
 BCDTBL        1 00000886 00000001     C    5380 4822  5381  5383  5385  5387  5389  5391  5393  5395  5397  5399  5401
                                                 5403
 BLANKS      256 0000133A 00000001     C    7686 4178  4282  4389  4528  4618  4714  5416  5417
 BR           10 0000000A FFFFFFFF A   #    1136 1773M 1783U 1959M 1969U 2143M 2153U 2675M 2685U 2876M 2886U 3039M 3049U
                                                 3398M 3408U 5492M 5502U 6006M 6016U 7494M 7504U 7761M 7771U 8044M 8054U
                                                 8293M 8303U 8712M 8722U 8988M 8998U 9171M 9181U 9363M 9373U
 BTDBTD        4 00001038 00000001     I    8711 8706  8722U
 BTSBTS        4 0000116E 00000001     I    9170 9165  9181U
 BTSEDMSK     24 0000143A 00000001     C    7688 9211
 BTXBTX        4 000010EA 00000001     I    8987 8982  8998U
 BTXBTX        1 00000000 00000003     T    5419 5419  9551
 BTXCHK0       4 0000111C 00000001     I    9043 9046B
 BTXX          4 00001130 00000001     I    9048 9045B
 DECNEG        1 000000DF 00000001 A   U    7693 7940  8586
 DIGITTR       1 00001462 00000001     X    7696 7697  7699  7902  8440  8537
 DTBDTB        4 00000E34 00000001     I    7760 7755  7771U
 EDMASK       15 0000131B 00000001     C    7678 7684  7684  8691  8779
 EDMASKC      15 0000132A 00000001     C    7681 7684  7684  8763
 EPAR         15 0000000F FFFFFFFF A   #    1196 1773  1838M 1847M 1847  1854M 1905B 1959  2143  2439M 2440B 2572M 2573B
                                                 2615M 2616B 2675  2821M 2822B 2876  2964M 2965B 3039  3181M 3182B 3253M
                                                 3254B 3398  3766M 3767B 3839M 3840B 3903M 3904B 3976M 3977B 4047M 4048B
                                                 4142M 4143B 4210M 4211B 4307M 4308B 4363M 4364B 4421M 4422B 4502M 4503B
                                                 4560M 4561B 4643M 4644B 4739M 4740B 4793M 4794B 4874M 4875B 4928M 4929B
                                                 4970M 4971B 5053M 5054B 5126M 5127B 5190M 5191B 5263M 5264B 5334M 5335B
                                                 5492  5628M 5629B 5711M 5712B 5765M 5766B 5823M 5824B 5896M 5897B 6006
                                                 6065  6128M 6129B 6193M 6194B 6247M 6248B 6305M 6306B 6343M 6344B 6400M
                                                 6401B 6473M 6474B 6521M 6522B 6575M 6576B 6648M 6649B 6696M 6697B 6750M
1TEXTCONV (TEXT00) (09:45) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   57
                                                 6751B 6823M 6824B 6871M 6872B 6925M 6926B 6998M 6999B 7046M 7047B 7107M
                                                 7108B 7190M 7191B 7265M 7266B 7348M 7349B 7400M 7401B 7494  7586M 7587B
                                                 7640M 7641B 7761  8044  8293  8712  8988  9171  9363
 FRAME        72 00000000 FFFFFFDA     J    5992 6052U
 FRANEXT       4 00000000 FFFFFFDA     A    5982 7402
 FRAPARM       4 00000048 FFFFFFDA     A    5985 7051
 FRAREGS       4 00000004 FFFFFFDA     A    5983 6065  6273  6436  6611  6786  6961
 HASHIT        4 00001202 00000001     I    9362 9357  9373U
 HEXTBL       16 0000130B 00000001     C    7676 9025
 HIBAL         1 00000000 FFFFFFFF     J     700  716   729   742   755   768   781   794   807   820   833   846   859
                                                  872   885   898   911  1012  1024  1036  1048  1060  1072  1084  1096
                                                 1108  1120  1132  1144  1156  1168  1180  1192  1204
 MAXDEC        8 00001452 00000001     P    7691 7980  8628
 MINDEC        8 0000145A 00000001     P    7692 7970  8618
 RA            2 00000002 FFFFFFFF A   #    1028 2200M 2234  2250  2277  2326M 2396M 2472M 3111M 3115  3117M 3118  3183
                                                 3184  3475M 3475  3492M 3543M 3544  3548M 3672  3683M 3684  3687M 3688
                                                 4423M 4562M 4650M 4980M 4981  5560M 5561M 6065M 6066M 7051M 7199M 7525M
                                                 7642M 8905M 8906M 9041M 9043M 9047M 9085M 9086M 9209M 9210M 9211  9214
                                                 9300M 9394M 9457  9473  9509M
 RAR          14 0000000E FFFFFFFF A   #    1184 1905M 1930B 2090B 2440M 2573M 2616M 2646B 2822M 2847B 2965M 2990B 3182M
                                                 3254M 3327B 3767M 3840M 3904M 3977M 4048M 4143M 4211M 4308M 4364M 4422M
                                                 4503M 4561M 4644M 4740M 4794M 4875M 4929M 4971M 5054M 5127M 5191M 5264M
                                                 5335M 5363B 5629M 5712M 5766M 5824M 5897M 5934B 6129M 6194M 6248M 6273
                                                 6306M 6344M 6401M 6474M 6522M 6576M 6649M 6697M 6751M 6824M 6872M 6926M
                                                 6999M 7047M 7108M 7191M 7266M 7349M 7401M 7446B 7587M 7641M 7660B 8016B
                                                 8235B 8664B 8944B 9126B 9336B 9539B
 RB            3 00000003 FFFFFFFF A   #    1040 2203M 2204M 2204  2278M 2305M 2305  2327M 2390  2392  2473M 3118M 3119M
                                                 3519M 3536M 3543  3561M 3562M 3562  3590  3592M 3606  3620  3632M 3634
                                                 3683  3691M 3692M 3692  3693M 3694  4213M 4218  4220M 4226  4228M 4229
                                                 4230  4424M 4447M 4447  4453  4563M 4651M 4652  4655M 4657  4799  4815
                                                 4979M 4980  4982M 4982  4983M 4984  7065M 7065  7199  7213M 7213  7526M
                                                 7527M 7528M 7643M 8862M 8863M 8881  8907M 8911M 8913  9026M 9035M 9035
                                                 9042M 9046M 9064M 9064  9067  9079M 9084  9086  9088M 9095  9211M 9299M
                                                 9303M 9305  9395M 9397M 9439M 9457M 9473
 RJ            4 00000004 FFFFFFFF A   #    1052 2383M 2384M 2396M 3090M 3183M 4253M 4253  4254M 4310  4590M 4590  4591M
                                                 8503M 8505M 8506M 8507  8508M 8520
 RK            5 00000005 FFFFFFFF A   #    1064 2385M 2386M 2390  2392M 2394  3091M 3105M 3105  3115  3117  3184M 4249M
                                                 4257  4586M 4593  8479M 8480M 8481M 8484M 8486  8503  8530
 RS            1 00000001 FFFFFFFF A   #    1016 2024M 2025M 2026  2234M 2236M 2250  2271M 2277M 2393M 2394M 2395  2721M
                                                 2723M 2724M 2725M 2728  2740M 2747  2759M 7939M 8125M 8152M 8193M 8206
                                                 8585M 8607M 8908M 9093M 9456M 9456  9479M 9481M 9493  9501M 9502M
 RVR           0 00000000 FFFFFFFF A   #    1004 2791M 3156M 3173M 3223M 3751M 3808M 3826M 3871M 3888M 3945M 3963M 4009M
                                                 4026M 4111M 4129M 4178M 4195M 4282M 4389M 4406M 4528M 4545M 4618M 4714M
                                                 4761M 4778M 4854M 4896M 4913M 5038M 5095M 5113M 5158M 5175M 5232M 5250M
                                                 5296M 5313M 5603M 5620M 5679M 5696M 5733M 5750M 5791M 5808M 5864M 5881M
                                                 6096M 6113M 6155M 6172M 6215M 6232M 6273M 6290M 6368M 6385M 6436M 6453M
                                                 6543M 6560M 6611M 6628M 6718M 6735M 6786M 6803M 6893M 6910M 6961M 6978M
                                                 7571M 7608M 7625M 7989M 8085M 8085  8205M 8206M 8637M 8873M 8874M 8874
                                                 8880M 8880  8881M 8888  8900M 8906  8907  9048M 9084M 9249M 9250M 9250
                                                 9256M 9257M 9273M 9273  9276  9288M 9294  9299  9452M 9452  9480M 9481
                                                 9521M 9521  9522M
 RX            6 00000006 FFFFFFFF A   #    1076 4221M 4222  4240M 4240  4249  4255  4436M 4457  4459  4562  4563  4579M
                                                 4580M 4580  4586  4592M 4593M 4688M 4689M 5528M 5538U 6042M 6052U 7402M
                                                 7416M 7416  7811M 7833M 8086M 8207M 8343M 8365M 8372  8784M 8807M 8807
                                                 8813M 8814  8833  8849M 8849  9207M 9208  9226M 9226
 RY            7 00000007 FFFFFFFF A   #    1088 1804M 1814U 1990M 2000U 2185M 2195U 2438  2571  2614  2706M 2716U 2907M
                                                 2917U 2963  3075M 3085U 4214M 4218  4220  4222M 4226  4228  4230M 4231
                                                 4255M 4256M 4257M 4310M 4311M 4320M 4320  4423  4424  4453M 4457  4459M
                                                 5543M 5553U 7811M 7835M 7848M 7848  7865  7876M 7878  7895  7939  7946
1TEXTCONV (TEXT00) (09:45) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   58
                                                 8086M 8101  8112M 8112  8208M 8343M 8367M 8372  8382M 8382  8399  8410M
                                                 8412  8433  8467  8481  8508  8567M 8569M 8585  8592
 R0            0 00000000 FFFFFFFF A   #     708 1772  1958  2142  2674  2875  3038  3397  5491  6005  6436  7493  7760
                                                 8043  8292  8711  8987  9170  9362
 R1            1 00000001 FFFFFFFF A   #     721 1928M 2088M 2644M 2845M 2988M 3325M 5361M 5932M 7444M 7658M 8014M 8233M
                                                 8480  8662M 8839M 8856M 8863  8942M 9124M 9213M 9214M 9234M 9257  9293M
                                                 9294M 9334M 9537M
 R12          12 0000000C FFFFFFFF A   #     864 6961
 R14          14 0000000E FFFFFFFF A   #     890 9499M 9500M 9501
 R15          15 0000000F FFFFFFFF A   #     903 1772  1928M 1958  2088M 2142  2644M 2674  2845M 2875  2988M 3038  3325M
                                                 3397  5361M 5491  5932M 6005  7444M 7493  7658M 7760  8014M 8043  8233M
                                                 8292  8662M 8711  8942M 8987  9124M 9170  9334M 9362  9485M 9493M 9499
                                                 9502  9537M
 R2            2 00000002 FFFFFFFF A   #     734 8431M 8431  8460B
 R4            4 00000004 FFFFFFFF A   #     760 6611
 R8            8 00000008 FFFFFFFF A   #     812 6786
 SEG           4 000000D6 00000001     I    2142 2137  2153U
 SEG           1 00000000 00000002     T    5418 5418  9552
 SEGADD        4 00000000 FFFFFFEE     A    1279 1831M 2383
 SEGADDR       4 00000992 00000001     I    5491 3839  3976  4142  5126  5263  5502U
 SEGBLEN       2 00000008 FFFFFFEE     Y    1281 1837M 2385
 SEGCBD       40 00000000 FFFFFFEE     J    1337 1814U 1825M 1825  2000U 2195U 2716U 2917U 3085U
 SEGCLR        4 0000028E 00000001     I    2875 2870  2886U
 SEGCNT        2 0000000A FFFFFFEE     H    1282 2024  2026M 2064M 2064  2384  2386  2393  2395M 2531  2574  2617  2725
                                                 2928M 2928
 SEGCOL        4 0000021E 00000001     I    2674 2669  2685U
 SEGCOL        1 00000000 00000004     T    5424 5424
 SEGCORE       4 00000376 00000001     I    3397 3392  3408U
 SEGCORE       1 00000000 00000006     T    9556 9556
 SEGDUMMY      4 00000084 00000001     I    1958 1969U 5414
 SEGFEOB       2 00000010 FFFFFFEE         1316 2052  2602M
 SEGFEOR       1 00000010 FFFFFFEE         1306 2559M
 SEGFINIT      0 00000010 FFFFFFEE         1296 1875M 2944M
 SEGFLG1       1 00000010 FFFFFFEE     R    1287 1296  1306  1316  1326
 SEGFOVER      3 00000010 FFFFFFEE         1326 2016  2419M
 SEGHEX        4 000002E2 00000001     I    3038 3033  3049U
 SEGHEX        1 00000000 00000005     T    5426 5426  9554
 SEGINIT       4 00000022 00000001     I    1772 1767  1783U
 SEGMCNT       2 0000000C FFFFFFEE     H    1283 2531M 2933M 2933
 SEGRCNT       2 0000000E FFFFFFEE     H    1284 2574M 2617M 2724  2938M 2938
 SEGSTK        4 00000A80 00000001     I    6005 6000  6016U
 SEGWORD       4 00000DB2 00000001     I    7493 6473  6648  6823  6998  7504U
 SEGWRT        4 00000004 FFFFFFEE     A    1280 1869M 2439  2572  2615  2964
 SPR          13 0000000D FFFFFFFF A   #    1172 1772  1787  1788  1803M 1885U 1958  1973  1974  1989M 2142  2157  2158
                                                 2178M 2429U 2674  2689  2690  2705M 2774U 2875  2890  2891  2906M 2954U
                                                 3038  3053  3054  3074M 3130U 3202U 3397  3412  3413  3433M 3731U 3781U
                                                 3854U 3918U 3992U 4084U 4157U 5018U 5068U 5141U 5205U 5279U 5491  5506
                                                 5507  5527M 5572U 5658U 6005  6020  6021  6041M 6079U 6415U 6489U 6590U
                                                 6664U 6765U 6839U 6940U 7014U 7122U 7233U 7280U 7368U 7493  7508  7509
                                                 7524M 7540U 7760  7775  7776  7796M 8043  8058  8059  8074M 8292  8307
                                                 8308  8328M 8711  8726  8727  8747M 8987  9002  9003  9023M 9170  9185
                                                 9186  9206M 9362  9377  9378  9393M
 SRLOOP        2 00000DD6 00000001     H    7532 7643B
 STBCHK        4 00000FA6 00000001     I    8460 8460B
 STBSTB        4 00000F50 00000001     I    8292 8287  8303U
 TEXTCONV      1 00000000 00000001     J    1219 1216  1217  1221  1338  1400  1422  1442  1495  1514  1534  1566  1597
                                                 1630  1666  1690  1713  1750  2130  3026  3385  3647  4670  4812  4828
                                                 5410
 TEXT00        1 00000000 00000001     R    1228 1226
1TEXTCONV (TEXT00) (09:45) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   59
 WAR          12 0000000C FFFFFFFF A   #    1160 1787  1788M 1789  1799U 1803  1928  1929  1973  1974M 1975  1985U 1989
                                                 2088  2089  2157  2158M 2159  2169U 2178  2644  2645  2689  2690M 2691
                                                 2701U 2705  2845  2846  2890  2891M 2892  2902U 2906  2988  2989  3053
                                                 3054M 3055  3065U 3074  3325  3326  3412  3413M 3414  3424U 3433  5361
                                                 5362  5506  5507M 5508  5518U 5527  5932  5933  6020  6021M 6022  6032U
                                                 6041  7444  7445  7508  7509M 7510  7520U 7524  7658  7659  7775  7776M
                                                 7777  7787U 7796  8014  8015  8058  8059M 8060  8070U 8074  8233  8234
                                                 8307  8308M 8309  8319U 8328  8662  8663  8726  8727M 8728  8738U 8747
                                                 8942  8943  9002  9003M 9004  9014U 9023  9124  9125  9185  9186M 9187
                                                 9197U 9206  9334  9335  9377  9378M 9379  9389U 9393  9537  9538
 XTBL          2 00000EF6 00000001     H    8119 8208B
 XTBXTB        4 00000ECA 00000001     I    8043 8038  8054U
 =A(@DTBMXLN)
               4 000012C8 00000001     A    9559 7865
 =A(@STBMXLN)
               4 000012D4 00000001     A    9562 8399
 =A(@STBMXLN-1)
               4 000012D8 00000001     A    9563 8520
 =A(BLANKS)
               4 00000834 00000001     A    5417 2791
 =A(C'A'-10)
               4 000012CC 00000001     A    9560 8152
 =A(C'0')      4 000012D0 00000001     A    9561 8193
 =A(L'#BTDEDIT)
               4 000012E0 00000001     A    9565 8888  8900
 =A(L'#BTSEDIT)
               4 000012E8 00000001     A    9567 9276  9288
 =A(L'#BTXHEXS)
               4 000012E4 00000001     A    9566 9067  9079
 =A(L'BLANKS)
               4 00000830 00000001     A    5416 2747  2759
 =A(SEGDUMMY)
               4 00000828 00000001     A    5414 1854
 =A(X'0000000F')
               4 00000840 00000001     A    5420 3519
 =A(X'0000001F')
               4 00000848 00000001     A    5422 3536
 =A(1)         4 0000082C 00000001     A    5415 2728  2740  3687  3691
 =A(1)         4 000012C4 00000001     A    9558 7833  8365  9509
 =A(16)        4 00000844 00000001     A    5421 3520
 =A(32)        4 0000084C 00000001     A    5423 3537
 =A(4)         4 00000854 00000001     A    5425 4254  4311  4591
 =C' '         1 0000085C 00000001     C    5427 2326  2472
 =C' '         1 0000130A 00000001     C    9573 7608
 =C' same as above.'
              15 0000085E 00000001     C    5429 4009  5296
 =C'+'         1 000012F8 00000001     C    9571 5733
 =C'|'         1 0000086D 00000001     C    5430 4761  4896
 =C'/'         1 0000085D 00000001     C    5428 3871  5158
 =C'On entry to routine '
              20 000012A0 00000001     C    9553 6096
 =C'Return address = '
              17 000012F9 00000001     C    9572 6215
 =C'R0 -R3  '
               8 00001278 00000001     C    9547 6368
 =C'R12-R15 '
               8 00001290 00000001     C    9550 6893
 =C'R4 -R7  '
               8 00001280 00000001     C    9548 6543
1TEXTCONV (TEXT00) (09:45) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   60
 =C'R8 -R11 '
               8 00001288 00000001     C    9549 6718
 =CL4'Parm'
               4 000012B8 00000001     C    9555 7157
 =CL4'Work'
               4 000012C0 00000001     C    9557 7315
 =P'2147483648'
               6 000012F2 00000001     P    9570 8815
 =V(BTXBTX)
               4 0000083C 00000001     V    5419 3181
 =V(BTXBTX)
               4 00001298 00000001     V    9551 5628
 =V(SEG)       4 00000838 00000001     V    5418 2821  3253  3903  4047  4210  4307  4421  4560  4643  4739  4793  4874
                                                 4928  4970  5190  5334
 =V(SEG)       4 0000129C 00000001     V    9552 5711  5765  5823  5896  6128  6193  6247  6343  6400  6521  6575  6696
                                                 6750  6871  6925  7046  7107  7265  7400  7640
 =V(SEGCOL)
               4 00000850 00000001     V    5424 3766  5053
 =V(SEGCORE)
               4 000012BC 00000001     V    9556 7190  7348
 =V(SEGHEX)
               4 00000858 00000001     V    5426 4363  4502
 =V(SEGHEX)
               4 000012B4 00000001     V    9554 6305  7586
 =X'F0000000'
               4 000012EC 00000001     X    9568 9485
 =X'7FFFFFFF'
               4 000012DC 00000001     X    9564 8813
 =Y(L'#SEGSENT)
               2 000012F0 00000001     Y    9569 6066

1TEXTCONV (TEXT00) (09:45) (22MAR04) Macro and Copy Code Source Summary                                                     Page   61
- Con Source                                        Volume    Members                        HLASM R4.0  2004/03/22 09.45
0     PRIMARY INPUT                                           CSECT    DROP     END      EX       LTORG    POP
                                                              PRINT    PUSH     REGCH    SEGADDR  SEGWORD  START
                                                              USING
   L2 WYL.GG.ORV.MACLIB                             SYSB02    $LKPARM  BTX      CONVPARM HASHPARM HEADER   LCALL
                                                              MODULE   MOVPARM  MOVSTR   PEND     PMOV     PROC     PSET
                                                              REG      SEG      SEGCBD   SEGCOL   SEGCORE  SEGDEF
                                                              SEGEOR   SEGHEX   SEGLD    SEGPARM  SPLEVEL  VCALL
   L3 WYL.GG.SYS.MACLIB                             SYSB05    $BC      $BFLKUP  $BV      $CCLKUP  $CRS     $CSS     $L
                                                              $LA      $LBLAD   $LEXP    $LOR     $REL     $RGLKUP
                                                              $USLKUP  AUSING   BEGIN    CEIL     CLEAR    CSECT    DATA
                                                              DECR     DEFCC    DEX      DROP     ELSE     ELSEIF   END
                                                              EX       EXIT     FLAG     FLOOR    GEN      HIBAL
                                                              IDENT    IF       INCR     LABEL    LC       LF       LOOP
                                                              LT       LTORG    NEXT     POP      PRINT    PUSH
                                                              RECORD   REGS     SET      START    STF      UNTIL
                                                              USING    WHILE    WITH

1         (TEXT00) (09:45) (22MAR04) General Purpose Register Cross Reference                                               Page   62
- Register  References (M=modified, B=branch, U=USING, D=DROP, N=index)                      HLASM R4.0  2004/03/22 09.45
0    0(0)     991U  992D 1772  1958  2142  2674  2791M 2796  2875  3038  3156M 3161  3173M 3178  3223M 3228  3397  3751M
             3756  3808M 3813  3826M 3831  3871M 3876  3888M 3893  3945M 3950  3963M 3968  4009M 4014  4026M 4031  4111M
             4116  4129M 4134  4178M 4183  4195M 4200  4282M 4287  4389M 4394  4406M 4411  4528M 4533  4545M 4550  4618M
             4623  4714M 4719  4761M 4766  4778M 4783  4854M 4859  4896M 4901  4913M 4918  5038M 5043  5095M 5100  5113M
             5118  5158M 5163  5175M 5180  5232M 5237  5250M 5255  5296M 5301  5313M 5318  5491  5603M 5608  5620M 5625
             5679M 5684  5696M 5701  5733M 5738  5750M 5755  5791M 5796  5808M 5813  5864M 5869  5881M 5886  6005  6096M
             6101  6113M 6118  6155M 6160  6172M 6177  6215M 6220  6232M 6237  6273M 6278  6290M 6295  6368M 6373  6385M
             6390  6436M 6441  6453M 6458  6543M 6548  6560M 6565  6611M 6616  6628M 6633  6718M 6723  6735M 6740  6786M
             6791  6803M 6808  6893M 6898  6910M 6915  6961M 6966  6978M 6983  7493  7571M 7576  7608M 7613  7625M 7630
             7760  7989M 8043  8085M 8085  8205M 8206M 8292  8637M 8711  8873M 8874M 8874  8880M 8880  8881M 8888  8900M
             8906  8907  8987  9048M 9084M 9170  9249M 9250M 9250  9256M 9257M 9273M 9273  9276  9288M 9294  9299  9362
             9452M 9452  9480M 9481  9521M 9521  9522M
     1(1)     987U 1772  1928M 1958  2024M 2025M 2026  2088M 2142  2234M 2236M 2250  2271M 2277M 2393M 2394M 2395  2644M
             2674  2721M 2723M 2724M 2725M 2728  2740M 2747  2759M 2806  2845M 2875  2988M 3038  3325M 3397  5361M 5491
             5932M 6005  7444M 7493  7658M 7760  7902M 7939M 8014M 8043  8122D 8124M 8124  8125M 8126U 8152M 8193M 8206
             8233M 8292  8440M 8480  8537M 8585M 8607M 8662M 8711  8839M 8840M 8856M 8863  8908M 8942M 8987  9093M 9124M
             9170  9213M 9214M 9217M 9234M 9257  9293M 9294M 9334M 9362  9456M 9456  9479M 9481M 9493  9501M 9502M 9522M
             9537M
     2(2)     983U 1772  1928M 1958  2088M 2142  2200M 2234N 2250  2277  2326M 2396M 2472M 2644M 2674  2845M 2875  2988M
             3038  3111M 3115  3117M 3118  3183  3184  3325M 3397  3475M 3475  3492M 3543M 3544  3548M 3672  3683M 3684
             3687M 3688  4423M 4482  4562M 4650M 4980M 4981  5361M 5491  5560M 5561M 5590  5932M 6005  6065M 6066M 7051M
             7141  7199M 7299  7444M 7493  7525M 7559  7642M 7658M 7760  7902M 8014M 8043  8233M 8292  8431M 8431  8440M
             8460N 8537M 8662M 8711  8905M 8906M 8942M 8987  9041M 9043M 9047M 9085M 9086M 9124M 9170  9209M 9210M 9211N
             9214  9300M 9334M 9362  9394M 9457  9473  9509M 9537M
     3(3)     979U 1772  1928M 1958  2088M 2142  2203M 2204M 2204  2278M 2305M 2305  2327M 2390  2392  2396M 2473M 2644M
             2674  2845M 2875  2988M 3038  3118M 3119M 3238  3325M 3397  3519M 3536M 3543  3561M 3562M 3562  3590  3592M
             3606  3620  3632M 3634  3683  3691M 3692M 3692  3693M 3694  4213M 4218  4220M 4226  4228M 4229  4230  4424M
             4447M 4447  4453  4563M 4651M 4652  4655M 4657  4799  4815  4979M 4980  4982M 4982  4983M 4984  5361M 5491
             5932M 6005  7056M 7065M 7065  7151  7199N 7204M 7213M 7213  7309  7444M 7493  7526M 7527M 7528M 7643M 7658M
             7760  8014M 8043  8233M 8292  8662M 8711  8862M 8863M 8881  8907M 8911M 8913  8942M 8987  9026M 9035M 9035
             9042M 9046M 9064M 9064  9067  9079M 9084  9086  9088M 9095  9124M 9170  9211M 9299M 9303M 9305  9334M 9362
             9395M 9397M 9439M 9457M 9473  9537M
     4(4)     975U 1772  1928M 1958  2088M 2142  2383M 2384M 2396M 2644M 2674  2845M 2875  2988M 3038  3090M 3183M 3325M
             3397  4253M 4253  4254M 4310  4590M 4590  4591M 5361M 5491  5932M 6005  7444M 7493  7658M 7760  8014M 8043
             8233M 8292  8503M 8505M 8506M 8507  8508M 8520  8662M 8711  8942M 8987  9124M 9170  9334M 9362  9537M
     5(5)     971U 1772  1928M 1958  2088M 2142  2385M 2386M 2390  2392M 2394  2396M 2644M 2674  2845M 2875  2988M 3038
             3091M 3105M 3105  3115  3117  3184M 3325M 3397  4249M 4254M 4257  4586M 4591M 4593  5361M 5491  5932M 6005
             7444M 7493  7658M 7760  8014M 8043  8233M 8292  8479M 8480M 8481M 8484M 8486  8503  8530  8662M 8711  8942M
             8987  9124M 9170  9334M 9362  9537M
     6(6)     967U 1772  1928M 1958  2088M 2142  2644M 2674  2845M 2875  2988M 3038  3325M 3397  4221M 4222  4240M 4240
             4249  4255  4436M 4457  4459  4562N 4563  4579M 4580M 4580  4586  4592M 4593M 4633  4688M 4689M 4729  5361M
             5491  5528M 5538U 5916U 5932M 6005  6042M 6052U 7402M 7416M 7416  7431U 7444M 7493  7658M 7760  7811M 7833M
             8014M 8043  8086M 8207M 8233M 8292  8343M 8365M 8372  8662M 8711  8784M 8807M 8807  8813M 8814  8833  8849M
             8849  8942M 8987  9124M 9170  9207M 9208  9226M 9226  9334M 9362  9537M
     7(7)     963U 1772  1804M 1814U 1904  1912U 1928M 1958  1990M 2000U 2075U 2088M 2142  2185M 2195U 2438  2571  2614
             2628U 2644M 2674  2706M 2716U 2818  2829U 2845M 2875  2907M 2917U 2963  2972U 2988M 3038  3075M 3085U 3250
             3309U 3325M 3397  4214M 4218  4220  4222M 4226  4228  4230M 4231  4255M 4256M 4257M 4297  4310M 4311M 4320M
             4320  4353  4423  4424  4453M 4457  4459M 4492  5361M 5491  5543M 5553U 5908U 5932M 6005  7444M 7493  7658M
             7760  7811M 7835M 7848M 7848  7865  7876M 7878  7895  7939N 7946  8014M 8043  8086M 8101  8112M 8112  8208M
             8233M 8292  8343M 8367M 8372  8382M 8382  8399  8410M 8412  8433  8467  8481  8508  8567M 8569M 8585N 8592
             8662M 8711  8942M 8987  9124M 9170  9334M 9362  9537M
     8(8)     959U 1772  1928M 1958  2088M 2142  2644M 2674  2845M 2875  2988M 3038  3325M 3397  5361M 5491  5932M 6005
             7444M 7493  7658M 7760  8014M 8043  8233M 8292  8662M 8711  8942M 8987  9124M 9170  9334M 9362  9537M
     9(9)     955U 1772  1928M 1958  2088M 2142  2644M 2674  2845M 2875  2988M 3038  3325M 3397  5361M 5491  5932M 6005
             7444M 7493  7658M 7760  8014M 8043  8233M 8292  8662M 8711  8942M 8987  9124M 9170  9334M 9362  9537M
1         (TEXT00) (09:45) (22MAR04) General Purpose Register Cross Reference                                               Page   63
    10(A)     951U 1772  1773M 1783U 1925U 1928M 1958  1959M 1969U 2085U 2088M 2142  2143M 2153U 2641U 2644M 2674  2675M
             2685U 2842U 2845M 2875  2876M 2886U 2985U 2988M 3038  3039M 3049U 3322U 3325M 3397  3398M 3408U 5358U 5361M
             5491  5492M 5502U 5929U 5932M 6005  6006M 6016U 7441U 7444M 7493  7494M 7504U 7655U 7658M 7760  7761M 7771U
             8011U 8014M 8043  8044M 8054U 8230U 8233M 8292  8293M 8303U 8659U 8662M 8711  8712M 8722U 8939U 8942M 8987
             8988M 8998U 9121U 9124M 9170  9171M 9181U 9331U 9334M 9362  9363M 9373U 9534U 9537M
    11(B)     947U 1772  1928M 1958  2088M 2142  2644M 2674  2845M 2875  2988M 3038  3325M 3397  5361M 5491  5932M 6005
             7444M 7493  7658M 7760  8014M 8043  8233M 8292  8662M 8711  8942M 8987  9124M 9170  9334M 9362  9537M
    12(C)     943U 1772  1787  1788M 1789  1799U 1803  1920U 1928M 1928  1929  1958  1973  1974M 1975  1985U 1989  2080U
             2088M 2088  2089  2142  2157  2158M 2159  2169U 2178  2636U 2644M 2644  2645  2674  2689  2690M 2691  2701U
             2705  2837U 2845M 2845  2846  2875  2890  2891M 2892  2902U 2906  2980U 2988M 2988  2989  3038  3053  3054M
             3055  3065U 3074  3317U 3325M 3325  3326  3397  3412  3413M 3414  3424U 3433  5353U 5361M 5361  5362  5491
             5506  5507M 5508  5518U 5527  5924U 5932M 5932  5933  6005  6020  6021M 6022  6032U 6041  7436U 7444M 7444
             7445  7493  7508  7509M 7510  7520U 7524  7650U 7658M 7658  7659  7760  7775  7776M 7777  7787U 7796  8006U
             8014M 8014  8015  8043  8058  8059M 8060  8070U 8074  8225U 8233M 8233  8234  8292  8307  8308M 8309  8319U
             8328  8654U 8662M 8662  8663  8711  8726  8727M 8728  8738U 8747  8934U 8942M 8942  8943  8987  9002  9003M
             9004  9014U 9023  9116U 9124M 9124  9125  9170  9185  9186M 9187  9197U 9206  9326U 9334M 9334  9335  9362
             9377  9378M 9379  9389U 9393  9529U 9537M 9537  9538
    13(D)     939U 1772  1772  1787  1788  1803M 1885U 1928M 1936U 1958  1958  1973  1974  1989M 2088M 2142  2142  2157
             2158  2178M 2429U 2644M 2652U 2674  2674  2689  2690  2705M 2774U 2845M 2853U 2875  2875  2890  2891  2906M
             2954U 2988M 2996U 3038  3038  3053  3054  3074M 3130U 3199U 3202U 3267U 3270U 3325M 3333U 3397  3397  3412
             3413  3433M 3731U 3778U 3781U 3851U 3854U 3915U 3918U 3989U 3992U 4081U 4084U 4154U 4157U 5015U 5018U 5065U
             5068U 5138U 5141U 5202U 5205U 5276U 5279U 5361M 5369U 5491  5491  5506  5507  5527M 5572U 5655U 5658U 5932M
             5940U 6005  6005  6020  6021  6041M 6079U 6412U 6415U 6486U 6489U 6587U 6590U 6661U 6664U 6762U 6765U 6836U
             6839U 6937U 6940U 7011U 7014U 7119U 7122U 7230U 7233U 7277U 7280U 7365U 7368U 7444M 7452U 7493  7493  7508
             7509  7524M 7540U 7658M 7666U 7760  7760  7775  7776  7796M 8014M 8043  8043  8058  8059  8074M 8233M 8292
             8292  8307  8308  8328M 8662M 8711  8711  8726  8727  8747M 8942M 8987  8987  9002  9003  9023M 9124M 9170
             9170  9185  9186  9206M 9334M 9362  9362  9377  9378  9393M 9537M
    14(E)     935U 1772  1905M 1928M 1930B 1958  2088M 2090B 2142  2440M 2573M 2616M 2644M 2646B 2674  2822M 2845M 2847B
             2875  2965M 2988M 2990B 3038  3182M 3254M 3325M 3327B 3397  3767M 3840M 3904M 3977M 4048M 4143M 4211M 4308M
             4364M 4422M 4503M 4561M 4644M 4740M 4794M 4875M 4929M 4971M 5054M 5127M 5191M 5264M 5335M 5361M 5363B 5491
             5629M 5712M 5766M 5824M 5897M 5932M 5934B 6005  6129M 6194M 6248M 6306M 6344M 6401M 6474M 6522M 6576M 6649M
             6697M 6751M 6824M 6872M 6926M 6999M 7047M 7108M 7191M 7266M 7349M 7401M 7444M 7446B 7493  7587M 7641M 7658M
             7660B 7760  8014M 8016B 8043  8233M 8235B 8292  8662M 8664B 8711  8942M 8944B 8987  9124M 9126B 9170  9334M
             9336B 9362  9499M 9500M 9501  9537M 9539B
    15(F)     931U 1772  1773  1838M 1847M 1847  1854M 1869  1905B 1928M 1958  1959  2088M 2142  2143  2439M 2440B 2572M
             2573B 2615M 2616B 2644M 2674  2675  2821M 2822B 2845M 2875  2876  2964M 2965B 2988M 3038  3039  3181M 3182B
             3253M 3254B 3325M 3397  3398  3766M 3767B 3839M 3840B 3903M 3904B 3976M 3977B 4047M 4048B 4142M 4143B 4210M
             4211B 4307M 4308B 4363M 4364B 4421M 4422B 4502M 4503B 4560M 4561B 4643M 4644B 4739M 4740B 4793M 4794B 4874M
             4875B 4928M 4929B 4970M 4971B 5053M 5054B 5126M 5127B 5190M 5191B 5263M 5264B 5334M 5335B 5361M 5491  5492
             5628M 5629B 5711M 5712B 5765M 5766B 5823M 5824B 5896M 5897B 5932M 6005  6006  6128M 6129B 6193M 6194B 6247M
             6248B 6305M 6306B 6343M 6344B 6400M 6401B 6473M 6474B 6521M 6522B 6575M 6576B 6648M 6649B 6696M 6697B 6750M
             6751B 6823M 6824B 6871M 6872B 6925M 6926B 6998M 6999B 7046M 7047B 7107M 7108B 7190M 7191B 7265M 7266B 7348M
             7349B 7400M 7401B 7444M 7493  7494  7586M 7587B 7640M 7641B 7658M 7760  7761  8014M 8043  8044  8233M 8292
             8293  8662M 8711  8712  8942M 8987  8988  9124M 9170  9171  9334M 9362  9363  9485M 9493M 9499  9502  9537M

1TEXTCONV (TEXT00) (09:45) (22MAR04) Diagnostic Cross Reference and Assembler Summary                                       Page   64
-                                                                                            HLASM R4.0  2004/03/22 09.45
0     No Statements Flagged in this Assembly
 HIGH LEVEL ASSEMBLER, 5696-234, RELEASE 4.0, PTF UQ57391
0SYSTEM: OS/390 02.10.00            JOBNAME: PJG#CONV    STEPNAME: ASM        PROCSTEP: (NOPROC)
0Datasets Allocated for this Assembly
  Con DDname   Dataset Name                                 Volume  Member
   P1 SYSIN    SYS04082.T094512.RA000.PJG#CONV.INPUT.H01    SCR101
   L1 SYSLIB   SYS3.DUMMYMAC                                SYSB02
   L2          WYL.GG.ORV.MACLIB                            SYSB02
   L3          WYL.GG.SYS.MACLIB                            SYSB05
      SYSLIN   WYL.GG.PJG.OBJ                               SYSB05  TEXTCONV
      SYSPRINT SYS04082.T094512.RA000.PJG#CONV.PRINT.H01    SCR100
      SYSTERM  GG$PJG.PJG#CONV.JOB05965.D0000103.?

    7812K allocated to Buffer Pool,         1397K would be required for this to be an In-Storage Assembly
    1038 Primary Input Records Read         3974 Library Records Read                  0 Work File Reads
       0 ASMAOPT Records Read               4799 Primary Print Records Written         0 Work File Writes
     171 Punch Records Written                 0 ADATA Records Written
0Assembly Start Time: 09.45.14 Stop Time: 09.45.20 Processor Time: 00.00.02.0551
 Return Code 000
