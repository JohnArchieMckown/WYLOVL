1                        J E S 2  J O B  L O G  --  S Y S T E M  S Y S B  --  N O D E  R L G
0
 09.41.50 JOB05947 ---- MONDAY,    22 MAR 2004 ----
 09.41.50 JOB05947  ICH70001I GG$PJG   LAST ACCESS AT 09:41:43 ON MONDAY, MARCH 22, 2004
 09.41.50 JOB05947  $HASP373 PJG#MSG  STARTED - INIT 3    - CLASS E - SYS SYSB
 09.41.50 JOB05947  ***  HCMD      STEP $$QUIET
 09.41.50 JOB05947  PURGE * Q=OUTPUT MULTIPLE
 09.41.50 JOB05947  JOB PJG#MSG NOT IN OUTPUT QUEUE
 09.41.51 JOB05947  PJG#MSG .$$QUIET .         RC=0008 TapeIO=0000 DiskIO=0000 CPU=  .01s Elapsed=10.60s
 09.41.52 JOB05947  PJG#MSG .$CND    .         RC=Zero TapeIO=0000 DiskIO=0003 CPU=  .01s Elapsed=11.89s
 09.41.52 JOB05947  PJG#MSG .$UNP    .         RC=Zero TapeIO=0000 DiskIO=0017 CPU=  .05s Elapsed=12.16s
 09.41.58 JOB05947  PJG#MSG .ASM     .         RC=Zero TapeIO=0000 DiskIO=0329 CPU= 1.80s Elapsed=12.42s
 09.41.59 JOB05947  PJG#MSG .$EDIT   .         RC=Zero TapeIO=0000 DiskIO=0092 CPU=  .37s Elapsed=18.43s
 09.41.59 JOB05947  PJG#MSG  Ended.  Name=Module: MSGSERV                Total CPU= 2.24s Elapsed=10.60s
 09.41.59 JOB05947
 09.41.59 JOB05947  Execution charges   Priority=Standard   Block=Day
 09.41.59 JOB05947
 09.41.59 JOB05947  CPU Usage          41.06          $25.45   Standard Processing Unit Equivalent
 09.41.59 JOB05947                                   =======
 09.41.59 JOB05947                                    $25.45   Total Job execution charge
 09.41.59 JOB05947
 09.41.59 JOB05947  See back separator page for print charges
 09.41.59 JOB05947
 09.42.00 JOB05947  $HASP395 PJG#MSG  ENDED  ASM=0
1        1 //PJG#MSG  JOB PJG$GG,'Module: MSGSERV',TIME=1,MSGCLASS=C               JOB05947
           /*JOBPARM HOLD=OUTPUT,LINES=50,CHARS=TN15,NOTIFY=YES
         2 //       EXEC PURGEOLD
         3 XXPURGEOLD PROC
           XX*
           XX* This proc is maintained by Jim Stosick
           XX*
         4 XX$$QUIET  EXEC PGM=HCMDX,PARM='PURGE * Q=OUTPUT MULTIPLE',
           XX         ACCT=(PURGEOLD,SYS3)
         5 //$CND   EXEC PGM=BILBO,REGION=512K,PARM='RECS=100'
         6 //STEPLIB  DD DSN=WYL.GG.ORV.LINKLIB,DISP=SHR
         7 //SYSPRINT DD SYSOUT=$
         8 //SYSUT1   DD DSN=WYL.GG.PJG.OBJ,DISP=OLD
         9 //SYSUT2   DD DSN=WYL.GG.PJG.OBJ,DISP=OLD
        10 //SYSIN    DD DUMMY
        11 //$UNP   EXEC PGM=WUNPRESS,PARM='NUM'
        12 //SYSPRINT DD SYSOUT=$
        13 //SYSUT1   DD DSN=WYL.GG.ORV.SOURCE(MSGSERV),DISP=SHR
        14 //SYSUT2   DD DSN=&&INPUT,DISP=(,PASS),UNIT=SYSDA,
           //            SPACE=(TRK,(25,25),RLSE),DCB=CARD
        15 //ASM    EXEC PGM=ASMA90,REGION=8M,COND=(0,NE,$UNP),
           //            PARM=('SYSPARM(MSGSERV),TERM,LANG(EN),OBJ',
           //          'LC(32500),XREF(SHORT),NODECK,NORLD,NODX,NOUS')
           //*STEPLIB  DD DSN=SYS1.SASMMOD1,DISP=SHR
        16 //SYSLIB   DD DSN=SYS3.DUMMYMAC,DISP=SHR,DCB=BLKSIZE=27920
        17 //         DD DSN=WYL.GG.ORV.MACLIB,DISP=SHR
        18 //         DD DSN=WYL.GG.SYS.MACLIB,DISP=SHR
        19 //         DD DSN=SYS1.MACLIB,DISP=SHR
        20 //SYSUT1   DD DSN=&&SYSUT1,UNIT=VIO,DISP=(,DELETE),
           //            SPACE=(4088,(500,250),,CONTIG,ROUND)
        21 //SYSTERM  DD SYSOUT=$
        22 //SYSPRINT DD DSN=&&PRINT,UNIT=SYSDA,DISP=(,PASS),
           //            SPACE=(6650,(250,250),RLSE),
           //            DCB=(BLKSIZE=6650,LRECL=133,RECFM=FB)
        23 //SYSLIN   DD DSN=WYL.GG.PJG.OBJ(MSGSERV),DISP=OLD
        24 //SYSUDUMP DD SYSOUT=A
        25 //SYSIN    DD DSN=&&INPUT,DISP=(OLD,DELETE)
        26 //$EDIT  EXEC PGM=ASMEDIT,REGION=1M,
           //            COND=EVEN,PARM='STMT,DATA'
        27 //STEPLIB  DD DSN=WYL.GG.SYS.LINKLIB,DISP=SHR
        28 //ASMOUT   DD DSN=&&PRINT,DISP=(OLD,DELETE)
        29 //SYSPRINT DD SYSOUT=A
        30 //SYSUDUMP DD SYSOUT=A
1 STMT NO. MESSAGE
         2 IEFC001I PROCEDURE PURGEOLD WAS EXPANDED USING SYSTEM LIBRARY SYS3.BETAPROC
        14 IGD01010I STORCLAS= TEMP STORGROUP =
        14 IGD01010I STORGRP=VIO ASSIGNED.
        20 IGD01010I STORCLAS= TEMP STORGROUP =
        20 IGD01010I STORGRP=VIO ASSIGNED.
        22 IGD01010I STORCLAS= TEMP STORGROUP =
        22 IGD01010I STORGRP=VIO ASSIGNED.
 ICH70001I GG$PJG   LAST ACCESS AT 09:41:43 ON MONDAY, MARCH 22, 2004
 IEF142I PJG#MSG $$QUIET - STEP WAS EXECUTED - COND CODE 0008
 *********************************************************************************
 *   PJG#MSG /$$QUIET /                    Return Code      0008                 *
 *   Region used      260K (16K user + 244K system)                              *
 *   Extended region  9352K (4K user + 9348K system)                             *
 *                                                                               *
 *   Paging              In      Out                                             *
 *   Private <-> Aux      0        0       CPU time (TCB)   00:00:00.01          *
 *   Private <-> Exp      0        0       CPU time (SRB)   00:00:00.00          *
 *   VIO                  0        0       Elapsed time    920:46:02.36          *
 *   Common               0      ---                                             *
 *                                                                               *
 *                                                                               *
 *   CPU Usage          0.18         $0.11  Standard Processing Unit Equivalent  *
 *                                   $0.11  Total Step execution charge          *
 *                                                                               *
 *    I/O count  DDname   Type Addr           I/O count  DDname   Type Addr      *
 *                         *** No I/O for this step ***                          *
 *********************************************************************************
 IEF373I STEP/$$QUIET /START 2004082.0941
 IEF374I STEP/$$QUIET /STOP  2004082.0941 CPU    0MIN 00.01SEC SRB    0MIN 00.00SEC VIRT    16K SYS   244K EXT       4K SYS    9348K
 IEF236I ALLOC. FOR PJG#MSG $CND
 IEF237I 0401 ALLOCATED TO STEPLIB
 IEF237I JES2 ALLOCATED TO SYSPRINT
 IEF237I 04DC ALLOCATED TO SYSUT1
 IEF237I 04DC ALLOCATED TO SYSUT2
 IEF237I DMY  ALLOCATED TO SYSIN
 IEF142I PJG#MSG $CND - STEP WAS EXECUTED - COND CODE 0000
 IEF285I   WYL.GG.ORV.LINKLIB                           KEPT
 IEF285I   VOL SER NOS= SYSB01.
 IEF285I   GG$PJG.PJG#MSG.JOB05947.D0000101.?           SYSOUT
 IEF285I   WYL.GG.PJG.OBJ                               KEPT
 IEF285I   VOL SER NOS= SYSB05.
 IEF285I   WYL.GG.PJG.OBJ                               KEPT
 IEF285I   VOL SER NOS= SYSB05.
 *********************************************************************************
 *   PJG#MSG /$CND    /                    Return Code      Zero                 *
 *   Region used      280K (16K user + 264K system)                              *
 *   Extended region  9392K (4K user + 9388K system)                             *
 *                                                                               *
 *   Paging              In      Out                                             *
 *   Private <-> Aux      0        0       CPU time (TCB)   00:00:00.01          *
 *   Private <-> Exp      0        0       CPU time (SRB)   00:00:00.00          *
 *   VIO                  0        0       Elapsed time    920:46:01.07          *
 *   Common               0      ---                                             *
 *                                                                               *
 *                                                                               *
 *   CPU Usage          0.18         $0.11  Standard Processing Unit Equivalent  *
 *                                   $0.11  Total Step execution charge          *
 *                                                                               *
 *    I/O count  DDname   Type Addr           I/O count  DDname   Type Addr      *
 *            3  STEPLIB  Disk 0401                   0  SYSPRINT      ----      *
 *            0  SYSUT1   Disk 04DC                   0  SYSUT2   Disk 04DC      *
 *            0  SYSIN         ----                                              *
 *********************************************************************************
 IEF373I STEP/$CND    /START 2004082.0941
 IEF374I STEP/$CND    /STOP  2004082.0941 CPU    0MIN 00.01SEC SRB    0MIN 00.00SEC VIRT    16K SYS   264K EXT       4K SYS    9388K
 IEF236I ALLOC. FOR PJG#MSG $UNP
 IEF237I JES2 ALLOCATED TO SYSPRINT
 IEF237I 0402 ALLOCATED TO SYSUT1
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT2  )
         DSN (SYS04082.T094150.RA000.PJG#MSG.INPUT.H01    )
         STORCLAS (TEMP) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= SCR101
 IEF142I PJG#MSG $UNP - STEP WAS EXECUTED - COND CODE 0000
 IEF285I   GG$PJG.PJG#MSG.JOB05947.D0000102.?           SYSOUT
 IEF285I   WYL.GG.ORV.SOURCE                            KEPT
 IEF285I   VOL SER NOS= SYSB02.
 IGD106I SYS04082.T094150.RA000.PJG#MSG.INPUT.H01     PASSED,    DDNAME=SYSUT2
 *********************************************************************************
 *   PJG#MSG /$UNP    /                    Return Code      Zero                 *
 *   Region used      380K (108K user + 272K system)                             *
 *   Extended region  9468K (4K user + 9464K system)                             *
 *                                                                               *
 *   Paging              In      Out                                             *
 *   Private <-> Aux      0        0       CPU time (TCB)   00:00:00.05          *
 *   Private <-> Exp      0        0       CPU time (SRB)   00:00:00.00          *
 *   VIO                  0        0       Elapsed time    920:46:00.80          *
 *   Common               0      ---                                             *
 *                                                                               *
 *                                                                               *
 *   CPU Usage          0.93         $0.57  Standard Processing Unit Equivalent  *
 *                                   $0.57  Total Step execution charge          *
 *                                                                               *
 *    I/O count  DDname   Type Addr           I/O count  DDname   Type Addr      *
 *            0  SYSPRINT      ----                   3  SYSUT1   Disk 0402      *
 *           14  SYSUT2   Disk 04E3                                              *
 *********************************************************************************
 IEF373I STEP/$UNP    /START 2004082.0941
 IEF374I STEP/$UNP    /STOP  2004082.0941 CPU    0MIN 00.05SEC SRB    0MIN 00.00SEC VIRT   108K SYS   272K EXT       4K SYS    9464K
 IEF236I ALLOC. FOR PJG#MSG ASM
 IEF237I 0402 ALLOCATED TO SYSLIB
 IEF237I 0402 ALLOCATED TO
 IEF237I 04DC ALLOCATED TO
 IEF237I 04A0 ALLOCATED TO
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT1  )
         DSN (SYS04082.T094150.RA000.PJG#MSG.SYSUT1.H01   )
         STORCLAS (TEMP) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= VIO
 IEF237I JES2 ALLOCATED TO SYSTERM
 IGD101I SMS ALLOCATED TO DDNAME (SYSPRINT)
         DSN (SYS04082.T094150.RA000.PJG#MSG.PRINT.H01    )
         STORCLAS (TEMP) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= SCR100
 IEF237I 04DC ALLOCATED TO SYSLIN
 IEF237I JES2 ALLOCATED TO SYSUDUMP
 IGD103I SMS ALLOCATED TO DDNAME SYSIN
 IEF142I PJG#MSG ASM - STEP WAS EXECUTED - COND CODE 0000
 IEF285I   SYS3.DUMMYMAC                                KEPT
 IEF285I   VOL SER NOS= SYSB02.
 IEF285I   WYL.GG.ORV.MACLIB                            KEPT
 IEF285I   VOL SER NOS= SYSB02.
 IEF285I   WYL.GG.SYS.MACLIB                            KEPT
 IEF285I   VOL SER NOS= SYSB05.
 IEF285I   SYS1.MACLIB                                  KEPT
 IEF285I   VOL SER NOS= MVSBR9.
 IGD105I SYS04082.T094150.RA000.PJG#MSG.SYSUT1.H01    DELETED,   DDNAME=SYSUT1
 IEF285I   GG$PJG.PJG#MSG.JOB05947.D0000103.?           SYSOUT
 IGD106I SYS04082.T094150.RA000.PJG#MSG.PRINT.H01     PASSED,    DDNAME=SYSPRINT
 IEF285I   WYL.GG.PJG.OBJ                               KEPT
 IEF285I   VOL SER NOS= SYSB05.
 IEF285I   GG$PJG.PJG#MSG.JOB05947.D0000104.?           SYSOUT
 IGD105I SYS04082.T094150.RA000.PJG#MSG.INPUT.H01     DELETED,   DDNAME=SYSIN
 *********************************************************************************
 *   PJG#MSG /ASM     /                    Return Code      Zero                 *
 *   Region used      8484K (8192K user + 292K system)                           *
 *   Extended region  9952K (412K user + 9540K system)                           *
 *                                                                               *
 *   Paging              In      Out                                             *
 *   Private <-> Aux      0        0       CPU time (TCB)   00:00:01.76          *
 *   Private <-> Exp      0        0       CPU time (SRB)   00:00:00.04          *
 *   VIO                  0        0       Elapsed time    920:46:00.54          *
 *   Common               0      ---                                             *
 *                                                                               *
 *                                                                               *
 *   CPU Usage         33.00        $20.46  Standard Processing Unit Equivalent  *
 *                                  $20.46  Total Step execution charge          *
 *                                                                               *
 *    I/O count  DDname   Type Addr           I/O count  DDname   Type Addr      *
 *           67  SYSLIB   Disk 0402                   0  SYSLIB   Disk 0402      *
 *          120  SYSLIB   Disk 04DC                  35  SYSLIB   Disk 04A0      *
 *            0  SYSUT1   VIO  ----                   0  SYSTERM       ----      *
 *           89  SYSPRINT Disk 038B                   3  SYSLIN   Disk 04DC      *
 *            0  SYSUDUMP      ----                  15  SYSIN    Disk 04E3      *
 *********************************************************************************
 IEF373I STEP/ASM     /START 2004082.0941
 IEF374I STEP/ASM     /STOP  2004082.0941 CPU    0MIN 01.76SEC SRB    0MIN 00.04SEC VIRT  8192K SYS   292K EXT     412K SYS    9540K
 IEF236I ALLOC. FOR PJG#MSG $EDIT
 IEF237I 0402 ALLOCATED TO STEPLIB
 IGD103I SMS ALLOCATED TO DDNAME ASMOUT
 IEF237I JES2 ALLOCATED TO SYSPRINT
 IEF237I JES2 ALLOCATED TO SYSUDUMP
 IEF142I PJG#MSG $EDIT - STEP WAS EXECUTED - COND CODE 0000
 IEF285I   WYL.GG.SYS.LINKLIB                           KEPT
 IEF285I   VOL SER NOS= SYSB02.
 IGD105I SYS04082.T094150.RA000.PJG#MSG.PRINT.H01     DELETED,   DDNAME=ASMOUT
 IEF285I   GG$PJG.PJG#MSG.JOB05947.D0000105.?           SYSOUT
 IEF285I   GG$PJG.PJG#MSG.JOB05947.D0000106.?           SYSOUT
 *********************************************************************************
 *   PJG#MSG /$EDIT   /                    Return Code      Zero                 *
 *   Region used      388K (116K user + 272K system)                             *
 *   Extended region  9472K (4K user + 9468K system)                             *
 *                                                                               *
 *   Paging              In      Out                                             *
 *   Private <-> Aux      0        0       CPU time (TCB)   00:00:00.36          *
 *   Private <-> Exp      0        0       CPU time (SRB)   00:00:00.01          *
 *   VIO                  0        0       Elapsed time    920:45:54.53          *
 *   Common               0      ---                                             *
 *                                                                               *
 *                                                                               *
 *   CPU Usage          6.75         $4.18  Standard Processing Unit Equivalent  *
 *                                   $4.18  Total Step execution charge          *
 *                                                                               *
 *    I/O count  DDname   Type Addr           I/O count  DDname   Type Addr      *
 *            2  STEPLIB  Disk 0402                  90  ASMOUT   Disk 038B      *
 *            0  SYSPRINT      ----                   0  SYSUDUMP      ----      *
 *********************************************************************************
 IEF373I STEP/$EDIT   /START 2004082.0941
 IEF374I STEP/$EDIT   /STOP  2004082.0941 CPU    0MIN 00.36SEC SRB    0MIN 00.01SEC VIRT   116K SYS   272K EXT       4K SYS    9468K
 *********************************************************************************
 *                                                                               *
 *                      S t a n f o r d   U n i v e r s i t y                    *
 *                                                                               *
 *                              *** Job Summary ***                              *
 *                                                                               *
 *   System Id      SYSB                   Input time     09:38:23  Mar 22, 2004 *
 *                                                                               *
 *   System Release SP6.1.0                Start time     09:41:50  Mar 22, 2004 *
 *                                                                               *
 *   Job name       PJG#MSG                Stop  time     00:00:00  Mar 22, 2004 *
 *                                                                               *
 *   Account        PJG$GG                 Elapsed time  920:46:02.36            *
 *                                                                               *
 *   User Name      Module: MSGSERV        CPU time       00:00:02.19            *
 *                                                                               *
 *   Job class      E                      SRB Time       00:00:00.05            *
 *                                                                               *
 *********************************************************************************
 IEF375I  JOB/PJG#MSG /START 2004082.0941
 IEF376I  JOB/PJG#MSG /STOP  2004082.0942 CPU    0MIN 02.19SEC SRB    0MIN 00.05SEC
1Data set successfully converted from EDIT to FB format
1Assembler Done MSGSERV No Statements Flagged
1         High Level Assembler Option Summary                   (PTF UQ57391)                                               Page    1
-                                                                                            HLASM R4.0  2004/03/22 09.41
0  No Overriding ASMAOPT Parameters
   Overriding Parameters-  SYSPARM(MSGSERV),TERM,LANG(EN),OBJ,LC(32500),XREF(SHORT),NODECK,NORLD,NODX,NOUS
   No Process Statements


   Options for this Assembly
0  NOADATA
     ALIGN
   NOASA
     BATCH
     CODEPAGE(047C)
   NOCOMPAT
   NODBCS
 3 NODECK
 3 NODXREF
     ESD
   NOEXIT
     FLAG(0,ALIGN,CONT,NOIMPLEN,NOPAGE0,PUSH,RECORD,NOSUBSTR,USING0)
   NOFOLD
   NOGOFF
   NOINFO
 3   LANGUAGE(EN)
   NOLIBMAC
 3   LINECOUNT(32500)
     LIST(121)
     MXREF(SOURCE)
 3   OBJECT
     OPTABLE(UNI,NOLIST)
   NOPCONTROL
   NOPESTOP
   NOPROFILE
   NORA2
   NORENT
 3 NORLD
     RXREF
     SIZE(MAX)
 3   SYSPARM(MSGSERV)
 3   TERM(WIDE)
   NOTEST
     THREAD
   NOTRANSLATE
 3 NOUSING
 3   XREF(SHORT)

   No Overriding DD Names

1MSGSERV  External Symbol Dictionary                                                                                        Page    2
-Symbol   Type   Id     Address  Length     LD ID  Flags Alias-of                            HLASM R4.0  2004/03/22 09.41
0MSGSERV   SD 00000001 00000000 00000DB4             06
 MSGS00    LD          00000000           00000001
 LOCKCRE   LD          00000022           00000001
 LOCKOB    LD          000000F6           00000001
 LOCKREL   LD          00000196           00000001
 LOCKINIT  LD          0000024A           00000001
 MSGINIT   LD          000002A2           00000001
 MSGATTS   LD          0000030A           00000001
 MSGATTR   LD          000003E2           00000001
 MSGGBUF   LD          0000057C           00000001
 MSGSEND   LD          00000644           00000001
 MSGRECV   LD          00000860           00000001
 MSGCAN    LD          00000A1A           00000001
 MSGFREE   LD          00000BCE           00000001
 POOLGET   ER 00000002
 FPOST     ER 00000003
 FWAIT     ER 00000004
 LOCKCRE   ER 00000005
 LOCKOB    ER 00000006
 LOCKREL   ER 00000007
 MEMFREE   ER 00000008
 MEMGET    ER 00000009

1MSGSERV  ORVYL'S Message Services                                                                                          Page    3
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement                    (Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                      2       2.              COPY  HEADER
                                       3             =*********************************************************************
                                       4             =*                                                                   *
                                       5             =*                                                                   *
                                       6             =*                          M P - O R V Y L                          *
                                       7             =*                                                                   *
                                       8             =*       ORVYL - Release 5.0 - Class I - Stanford Proprietary        *
                                       9             =*                                                                   *
                                      10             =*                                                                   *
                                      11             =*********************************************************************
-
-                                     13             =         SPLEVEL SET=2
                                      16             =         HIBAL ASSOC=YES
-
                                     998             =*
                                     999             =* REGISTER CONVENTIONS (USE ONLY THE SYMBOLS)
                                    1000             =*
                                    1001             =*                     CLASS  USAGE
                                    1002             =*                     -----  -----------------------------
                                    1003             =RVR      REG   0        1    RETURN VALUE REGISTER
                                    1015             =RS       REG   1        *    SCRATCH
                                    1027             =RA       REG   2        *    SCRATCH
                                    1039             =RB       REG   3        *    SCRATCH
                                    1051             =RJ       REG   4        *    SCRATCH
                                    1063             =RK       REG   5        *    SCRATCH
                                    1075             =RX       REG   6        *    SCRATCH
                                    1087             =RY       REG   7        *    SCRATCH
                                    1099             =RM       REG   8        *    SCRATCH
                                    1111             =RN       REG   9        *    SCRATCH (In Guest)
                                    1123             =RTCBR    REG   9        -    POINTER TO THE RTCB (In Host)
                                    1135             =BR       REG   10       -    FIRST BASE REGISTER
                                    1147             =BRR      REG   11       -    SECOND BASE REGISTER
                                    1159             =WAR      REG   12       -    WORK AREA POINTER
                                    1171             =SPR      REG   13       -    STACK TOP POINTER
                                    1183             =RAR      REG   14       1    RETURN ADDRESS REGISTER
                                    1195             =EPAR     REG   15       1    ENTRY POINT ADDRESS
                                    1207             =*
                                    1208             =*      CLASS   MEANING
                                    1209             =*      -----   --------------------------------------------------
                                    1210             =*        *     Register may be freely used for scratch
                                    1211             =*        -     Register may not be used
                                    1212             =*        1     Available but may change on subroutine calls
                                    1213             =*
1MSGSERV  ORVYL'S Message Services                                                                                          Page    4
0D-Loc  Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+_____  ______ ____    _____ _____  ____ __ ______    ______ _________
0000000                00000 00DB4  1215       3.     MSGSERV  MODULE
                                    1225             +*
                                    1226    02-IDENT +         ENTRY MSGS00
                                    1227             +
 000000 14D4E2C7E2F0F06B            1228    02-IDENT +MSGS00   DC    AL1(20),C'MSGS00,22MAR04,09:41'
                                    1229             +*
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page    5
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   1232       5.              COPY  RTCB
                                    1233             =*******************************************************************
                                    1234             =*                                                                 *
                                    1235             =*      RTCB --  Information about each functional task.           *
                                    1236             =*                                                                 *
                                    1237             =*******************************************************************
0000000                00000 000B0  1239             =RTCB     RECORD    BEGIN
 000000 D9E3C3C2                    1247  1          =           DC    CL4'RTCB'     Control block id
                                    1248  1          =*
                                    1249  1          =* Global information
                                    1250  1          =*
 000004                             1251  1          =RTCBCBAT   DS    A             Address of the CBAT
                                    1252  1          =*
                                    1253  1          =* Task managment info
                                    1254  1          =*
 000008                             1255  1          =RTCBNEXT   DS    A             Chain of all RTCBs in the system
 00000C                             1256  1          =RTCBNAME   DS    CL8           Name of this task
 000014                             1257  1          =RTCBTCB    DS    A             Address of the MVS TCB for this task
 000018                             1258  1          =RTCBSTK    DS    A             Address of the stack for this task
 00001C                             1259  1          =RTCBMSV    DS    A             Address of MVS save area
 000020                             1260  1          =RTCBTECB   DS    A             End of task ECB
 000024                             1261  1          =RTCBESTA   DS    A             ESTAE data block
 000028                             1262  1          =           DS    2A            available
                                    1263  1          =*
                                    1264  1          =* Lock managment info
                                    1265  1          =*
 000030                             1266  1          =RTCBLKWT   DS    A             Address of the lock we're waiting for
 000034                             1267  1          =           DS    4A            available
                                    1268  1          =*
                                    1269  1          =* Message channel management info
                                    1270  1          =*
 000044                             1271  1          =RTCBMCBP   DS    A             Chain of xCCBs owned by this task
 000048                             1272  1          =           DS    4A            available
                                    1273  1          =*
                                    1274  1          =* Timer management info
                                    1275  1          =*
 000058                             1276  1          =RTCBTIMR   DS    D             Current logical timer value
 000060                             1277  1          =RTCBCPU    DS    D             Total CPU time for the task
 000068                             1278  1          =RTCBCPT    DS    D             Current cpu timer value
 000070                             1279  1          =           DS    4A            available
                                    1280  1          =*
                                    1281  1          =* Trace managment info
                                    1282  1          =*
 000080                             1283  1          =RTCBTRTC   DS    A             Loc of current (avail) trace entry
 000084                             1284  1          =RTCBTRTF   DS    A             Loc of start of trace table
 000088                             1285  1          =RTCBTRTL   DS    A             Loc of end of trace table (+1)
 00008C                             1286  1          =           DS    4A            available
                                    1287  1          =*
                                    1288  1          =* Memory management info
                                    1289  1          =*
 00009C                             1290  1          =RTCBMEM    DS    A             Addr of memory CT
 0000A0                             1291  1          =           DS    2A            available
                                    1292  1          =*
                                    1293  1          =* Memory management info
                                    1294  1          =*
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page    6
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
00000A8                             1295  1          =RTCBIOT    DS    A             Addr of I/O Services table
                                    1296  1          =*
                                    1297  1          =* Hiperspace management info
                                    1298  1          =*
 0000AC                             1299  1          =RTCBBUFR   DS    A             MVPG and HSPSERV Buffer for this TCB
 0000B0                000B0 000B0  1300             =         END   ,
 USING  RTCB,R9                     1309       6.              USING RTCB,RTCBR
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page    7
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   1319       8.              COPY  CBAT
                                    1320             =*******************************************************************
                                    1321             =*                                                                 *
                                    1322             =*      CBAT --  Table of addresses of control blocks for various  *
                                    1323             =*               services and functions.  This is pointed at by    *
                                    1324             =*               every RTCB, so services can find their roots.     *
                                    1325             =*                                                                 *
                                    1326             =*******************************************************************
0000000                00000 00090  1328             =CBAT     RECORD    BEGIN
 000000 C3C2C1E3                    1336  1          =           DC    CL4'CBAT'     Control block id
                                    1337  1          =*
                                    1338  1          =* Task Services info
                                    1339  1          =*
 000004                             1340  1          =CBATTASK   DS    A             Address of the task services CT
 000008                             1341  1          =           DS    4A            available
                                    1342  1          =*
                                    1343  1          =* Lock managment info
                                    1344  1          =*
 000018                             1345  1          =CBATLOCK   DS    A             Address of the lock manager CT
 00001C                             1346  1          =           DS    4A            available
                                    1347  1          =*
                                    1348  1          =* Message channel management info
                                    1349  1          =*
 00002C                             1350  1          =CBATMSGS   DS    A             Address of message manager CT
 000030                             1351  1          =           DS    4A            available
                                    1352  1          =*
                                    1353  1          =* Memory management info
                                    1354  1          =*
 000040                             1355  1          =CBATMEM    DS    A             Address of memory CT
 000044                             1356  1          =           DS    4A            available
                                    1357  1          =*
                                    1358  1          =* I/O service management info
                                    1359  1          =*
 000054                             1360  1          =CBATIOCT   DS    A             Address of I/O service CT
 000058                             1361  1          =           DS    4A            available
                                    1362  1          =*
                                    1363  1          =* Parameter initialization parameters
                                    1364  1          =*
 000068                             1365  1          =CBATPARM   DS    A             Address of parameter CT
 00006C                             1366  1          =           DS    4A            available
                                    1367  1          =*
                                    1368  1          =* Termination and Console command info
                                    1369  1          =*
 00007C                             1370  1          =CBATTMCB   DS    A             Address of the termination CT
 000080                             1371  1          =           DS    4A            available
 000090                00090 00090  1372             =         END   ,
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page    8
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   1382      10.              COPY  LOCKPARM      GET LOCK PARMS
                                    1383             =*******************************************************************
                                    1384             =*                                                                 *
                                    1385             =*    LOCKPARM - Lock routine calling parms                        *
                                    1386             =*                                                                 *
                                    1387             =*******************************************************************
0000000                00000 00011  1389             =@LOCKCRE RECORD BEGIN
 000000                             1397  1          =@LOCKNAM   DS    CL16          Name of the lock
 000010 00                          1398  1          =@LOCKFL    FLAG  ,
 @LOCKFL.@LFSPIN   80 ONES          1402  1          =           FLAG  @LFSPIN       Spin type lock
 000011                00011 00011  1407             =         END   ,
                                    1416             =*
 000000                00000 00004  1417             =@LOCKS   RECORD BEGIN
 000000                             1425  1          =@LOCKID    DS    A             Lock id
 000004                00004 00004  1426             =         END   ,
                                    1435      11.              COPY  MSGPARM       GET MSG PARMS
 000000                00000 0000C  1436             =@MSGATT  RECORD BEGIN
 000000                             1444  1          =@MSGCNAM   DS    CL8           Name of the message channel
 000008                             1445  1          =@MSGCECB   DS    A             Address of an ECB for channel activity
 00000C                0000C 0000C  1446             =         END   ,
0000000                00000 00008  1456             =@MSGGBUF RECORD BEGIN
 000000                             1464  1          =@MSGGCHN   DS    A             Channel id where the buffer belongs
 000004                             1465  1          =@MSGGLEN   DS    A             Length of the buffer
 000008                00008 00008  1466             =         END   ,
0000000                00000 00014  1476             =@MSGSEND RECORD BEGIN
 000000                             1484  1          =@MSGSCHN   DS    A             Channel id on which to send this buffer
 000004                             1485  1          =@MSGSBUF   DS    A             Location of the buffer to send
 000008                             1486  1          =@MSGSSEQ   DS    A             Unique message sequence number
 00000C                             1487  1          =@MSGSVAL   DS    A             Value associated with the buffer
 000010                             1488  1          =@MSGSPRI   DS    A             Priority of the message
 000014                00014 00014  1489             =         END   ,
0000000                00000 00014  1499             =@MSGRECV RECORD BEGIN
 000000                             1507  1          =@MSGRCHN   DS    A             Channel id from which to get the buffer
 000004                             1508  1          =@MSGRLEN   DS    A             Length of the buffer
 000008                             1509  1          =@MSGRSEQ   DS    A             Unique message sequence number
 00000C                             1510  1          =@MSGRVAL   DS    A             Value associated with buffer (Reply)
 000010                             1511  1          =@MSGRPRI   DS    A             Priority of the message
 000014                00014 00014  1512             =         END   ,
0000000                00000 00008  1522             =@MSGFREE RECORD BEGIN
 000000                             1530  1          =@MSGFCHN   DS    A             Channel id
 000004                             1531  1          =@MSGFBUF   DS    A             Buffer pointer
 000008                00008 00008  1532             =         END   ,
0000000                00000 00008  1542             =@MSGCAN  RECORD BEGIN
 000000                             1550  1          =@MSGCCHN   DS    A             Channel id
 000004                             1551  1          =@MSGCSEQ   DS    A             Sequence number of message to cancel
 000008                00008 00008  1552             =         END   ,
                                    1561      12.              COPY  POOLPARM      GET OS MEMORY PARMS
                                    1562             =*******************************************************************
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page    9
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   1563             =*                                                                 *
                                    1564             =*       POOLPARM -- OS Memory routine calling parms               *
                                    1565             =*                                                                 *
                                    1566             =*******************************************************************
0000000                00000 0000C  1568             =@MEMORY  RECORD BEGIN
 000000                             1576  1          =@MEMDATA   DS    X                       Reserved
 000001                             1577  1          =@MEMKEY    DS    X                       Storage key
                                    1578  1          =
 000002 00                          1579  1          =@MEMPOOL   FLAG   ,                      Type of memory request
 @MEMPOOL.MEMTSYS  80 ONES          1583  1          =           FLAG  (MEMTSYS,X'80')         System pool
 @MEMPOOL.MEMTA16M 10 ONES          1592  1          =           FLAG  (MEMTA16M,X'10')        Above 16 Meg line
 @MEMPOOL.MEMTGLOB 08 ONES          1601  1          =           FLAG  (MEMTGLOB,X'08')        Global subpool
 @MEMPOOL.MEMTFIX  04 ONES          1610  1          =           FLAG  (MEMTFIX,X'04')         Fixed
 @MEMPOOL.MEMTPAGE 02 ONES          1619  1          =           FLAG  (MEMTPAGE,X'02')        Page boundary
 @MEMPOOL.MEMTDEF  01 ONES          1628  1          =           FLAG  (MEMTDEF,X'01')         Default subpool
                                    1637  1          =
 000003 00                          1638  1          =@MEMCODE   FLAG  ,                       MVS codes
 @MEMCODE.MEMCANYR 40 ONES          1642  1          =           FLAG  (MEMCANYR,X'40')        Frame may be above 16m real
 @MEMCODE.MEMCANYV 30 ONES          1651  1          =           FLAG  (MEMCANYV,X'30')        Virtual may be above 16m
 @MEMCODE.MEMCBLOV 10 ONES          1660  1          =           FLAG  (MEMCBLOV,X'10')        Virtual must be below 16m
 @MEMCODE.MEMCRESV 30 OFF           1669  1          =           FLAG  (MEMCRESV,X'30',OFF)    Location determined by rmode
 @MEMCODE.MEMCVAR  08 ONES          1679  1          =           FLAG  (MEMCVAR,X'08')         Variable type request
 @MEMCODE.MEMCPGB  04 ONES          1688  1          =           FLAG  (MEMCPGB,X'04')         Page boundary alignment
 @MEMCODE.MEMCUNC  02 ONES          1697  1          =           FLAG  (MEMCUNC,X'02')         Unconditional type request
 @MEMCODE.MEMCFREE 01 ONES          1706  1          =           FLAG  (MEMCFREE,X'01')        Freemain request
                                    1715  1          =
 000004                             1716  1          =@MEMLEN    DS    A                       Length of area
 000008                             1717  1          =@MEMLOC    DS    A                       Location of area
 00000C                0000C 0000C  1718             =         END   ,
-                                   1728      14.              COPY  MEMPARM       GET ORVYL MEMORY PARMS
                                    1729             =*******************************************************************
                                    1730             =*                                                                 *
                                    1731             =*            Memory service initialization parameters             *
                                    1732             =*                                                                 *
                                    1733             =*******************************************************************
0000000                00000 00002  1735             =@MEMINIT RECORD BEGIN                           MEMORY INIT RECORD
 000000 00                          1743  1          =@MIFLAG    FLAG  ,                                Specification flags
 @MIFLAG.MIGLOBAL  80 ONES          1747  1          =           FLAG  MIGLOBAL                         | INIT GLOBAL POOL
                                    1752  1          =*-----------------------------------------------
                                    1753  1          =*  From here on need not be specified on call
                                    1754  1          =*-----------------------------------------------
 000001 00                          1755  1          =@MIWFLAG   FLAG  ,                                Work flags
                                    1759  1          =*   Pool type is determined by the bit values in the pool index
                                    1760  1          =*  offset
 @MIWFLAG.MIWPAGE  04 ONES          1761  1          =           FLAG  (MIWPAGE,X'04')                  | page boundary
 @MIWFLAG.MIWFIX   08 ONES          1770  1          =           FLAG  (MIWFIX,X'08')                   | fixed memory
 @MIWFLAG.MIWA16M  10 ONES          1779  1          =           FLAG  (MIWA16M,X'10')                  | above 16M
 000002                00002 00002  1788             =         END   ,                                OF MEMORY INIT RECORD
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   10
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0
                                    1798             =*******************************************************************
                                    1799             =*                                                                 *
                                    1800             =*              Memory service allocation parameters               *
                                    1801             =*                                                                 *
                                    1802             =*******************************************************************
0000000                00000 0000A  1804             =@MEMGET  RECORD BEGIN
 000000                             1812  1          =@MGLL      DS    D                                Location/Length
 000008                00008 00000  1813  1          =           ORG   @MGLL
 000000                             1814  1          =@MGLOC     DS    A                                Location (return)
 000004                             1815  1          =@MGLEN     DS    A                                Length of request
 000008                00008 00008  1816  1          =           ORG   ,
 000008 0000                        1817  1          =@MGTYPE    DC    H'0'                             Request type - offset
                                    1818  1          =*   TYPES A16M, FIX, & PAG form an index into a control table for
                                    1819  1          =* a specified pool.  ie. a pool above the 16M line, unfixed and
                                    1820  1          =* double word boundary has an @MGTYPE value of X'10' = 16.
 00000A                0000A 00009  1821  1          =           ORG   @MGTYPE+1
 000009 00                          1822  1          =@MGFTYPE   FLAG  ,
 @MGFTYPE.MGA16M   10 ONES          1826  1          =           FLAG  (MGA16M,X'10')                   Above 16M line
 @MGFTYPE.MGFIX    08 ONES          1835  1          =           FLAG  (MGFIX,X'08')                    Fixed pool
 @MGFTYPE.MGPAG    04 ONES          1844  1          =           FLAG  (MGPAG,X'04')                    Page boundary
 @MGFTYPE.MGGLOB   02 ONES          1853  1          =           FLAG  (MGGLOB,X'02')                   Global pool
 @MGFTYPE.MGBEST   01 ONES          1862  1          =           FLAG  (MGBEST,X'01')                   Best fit
 00000A                0000A 0000A  1871  1          =           ORG   ,
 00000A                0000A 0000A  1872             =         END   ,
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   11
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   1882             =*******************************************************************
                                    1883             =*                                                                 *
                                    1884             =*               Memory service release parameters                 *
                                    1885             =*                                                                 *
                                    1886             =*******************************************************************
0000000                00000 0000A  1888             =@MEMFREE RECORD BEGIN                           PARAMETERS
 000000                             1896  1          =@MFLL      DS    D                                Location/Length
 000008                00008 00000  1897  1          =           ORG   @MFLL
 000000                             1898  1          =@MFLOC     DS    A                                Location
 000004                             1899  1          =@MFLEN     DS    A                                Length
 000008                00008 00008  1900  1          =           ORG   ,
 000008 0000                        1901  1          =@MFTYPE    DC    H'0'                             Request type - offset
 00000A                0000A 00009  1902  1          =           ORG   @MFTYPE+1
 000009 00                          1903  1          =@MFFTYPE   FLAG  ,
                                    1907  1          =*   TYPES A16M, FIX, & PAG form an index into a control table for
                                    1908  1          =* a specified pool.  ie. a pool above the 16M line, unfixed and
                                    1909  1          =* double word boundary has an @MGTYPE value of X'10' = 16.
 @MFFTYPE.MFA16M   10 ONES          1910  1          =           FLAG  (MFA16M,X'10')                   Above 16M line
 @MFFTYPE.MFFIX    08 ONES          1919  1          =           FLAG  (MFFIX,X'08')                    Fixed pool
 @MFFTYPE.MFPAG    04 ONES          1928  1          =           FLAG  (MFPAG,X'04')                    Page boundary
 @MFFTYPE.MFGLOB   02 ONES          1937  1          =           FLAG  (MFGLOB,X'02')                   Global pool
 00000A                0000A 0000A  1946  1          =           ORG   ,
 00000A                0000A 0000A  1947             =         END   ,
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   12
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   1957      16.              COPY  POSTPARM
                                    1958             =*******************************************************************
                                    1959             =*                                                                 *
                                    1960             =*      POSTPARM -- Post ecb parameter list                        *
                                    1961             =*                                                                 *
                                    1962             =*******************************************************************
0000000                00000 00004  1964             =@FPOST   RECORD BEGIN
 000000                             1972  1          =@FPSTECB   DS    A                       ECB address
 000004                00004 00004  1973             =         END   ,
                                    1982      17.              COPY  WAITPARM
                                    1983             =*******************************************************************
                                    1984             =*                                                                 *
                                    1985             =*      WAITPARM -- Wait ecb parameter list                        *
                                    1986             =*                                                                 *
                                    1987             =*******************************************************************
0000000                00000 00004  1989             =@FWAIT   RECORD BEGIN
 000000                             1997  1          =@FWTECB    DS    A                       ECB address
 000004                00004 00004  1998             =         END   ,
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   13
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000000                00000 0000C  2008      19.     LOCKCT   RECORD BEGIN
                                    2016  1   20.     *
                                    2017  1   21.     * Lock manager CT -- Pointed to by everyone's RTCB
                                    2018  1   22.     *
 000000                             2019  1   23.                DS    CL4'LKCT'
 000004                             2020  1   24.     LOCKHEAD   DS    A             Pointer to the chain of locks
 000008                             2021  1   25.     LOCKECNT   DS    A             Number of lock elements/lock
 00000C                0000C 0000C  2022      26.              END   ,
-000000                00000 00034  2032      28.     LOCKCB   RECORD BEGIN
                                    2040  1   29.     *
                                    2041  1   30.     * Lock Control Block
                                    2042  1   31.     *
 000000 D3D6C3D2                    2043  1   32.                DC    CL4'LOCK'     Control block id
 000004                             2044  1   33.     LOCKNAME   DS    CL16          Name of this lock
 000014                             2045  1   34.     LOCKCHN    DS    A             Pointer to LOCKCB chain
 000018                             2046  1   35.                DS    0D
 000018                             2047  1   36.     LOCKFREE   DS    A             Queue of free LQE's
 00001C                             2048  1   37.                DS    A             Control word for free queue
 000020                             2049  1   38.     LOCKPLUM   DS    A             Pointer to the 'plum' LQE
 000024                             2050  1   39.     LOCKOWNR   DS    A             Lock owner's LQE address
 000028                             2051  1   40.     LOCKECHN   DS    A             Chain of all LQE's for this lock
 00002C                             2052  1   41.     LOCKWCNT   DS    A             Count of waits
 000030                             2053  1   42.     LOCKRCNT   DS    A             Count of requests
 000034                00034 00034  2054      43.              END   ,
-000000                00000 00018  2064      45.     LQE      RECORD BEGIN
                                    2072  1   46.     *
                                    2073  1   47.     * Lock Queue Element
                                    2074  1   48.     *
 000000 D3D8C540                    2075  1   49.                DC    CL4'LQE'      Control block id
 000004                             2076  1   50.     LQENEXT    DS    A             Next on free queue/Element to post
 000008                             2077  1   51.     LQECHAIN   DS    A             Chain of all LQES for a lock
 00000C                             2078  1   52.     LQELOCK    DS    A             Pointer to the LOCKCB for the lock
 000010                             2079  1   53.     LQERTCB    DS    A             Owner RTCB/Zero if free
 000014                             2080  1   54.     LQEECB     DS    A             Syncronization word
 000018                00018 00018  2081      55.              END   ,
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   14
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000000                00000 0000C  2091      57.     MCCT     RECORD BEGIN
                                    2099  1   58.     *
                                    2100  1   59.     * Message manager CT
                                    2101  1   60.     *
 000000 D4C3C3E3                    2102  1   61.                DC    CL4'MCCT'
 000004                             2103  1   62.     MCCTMCCB   DS    A             Chain of all MCCB's in the system
 000008                             2104  1   63.     MCCTLOCK   DS    A             Lock of MCCT (including MCCB chain)
 00000C                0000C 0000C  2105      64.              END   ,
0000000                00000 0002C  2115      66.     MCCB     RECORD BEGIN
                                    2123  1   67.     *
                                    2124  1   68.     * Message Channel Control Block.  Contains info on one message
                                    2125  1   69.     * channel.
                                    2126  1   70.     *
 000000 D4C3C3C2                    2127  1   71.                DC    CL4'MCCB'     Control block id
 000004                             2128  1   72.     MCCBNEXT   DS    A             Chain of MCCBs in the system
 000008                             2129  1   73.     MCCBNAME   DS    CL8           Channel name
 000010                             2130  1   74.     MCCBMBCT   DS    A             Max number of buffers per requestor
 000014                             2131  1   75.     MCCBSERV   DS    A             Chain of servers attached (SCCBs)
 000018                             2132  1   76.     MCCBRQST   DS    A             Chain of requestors attached (RCCB's)
 00001C                             2133  1   77.     MCCBQLCK   DS    A             Lock for this channel's message queue
 000020                             2134  1   78.     MCCBMLCK   DS    A             Lock for the MCCB other than message Q
 000024                             2135  1   79.     MCCBMBH    DS    A             Head of list of msgs for servers
 000028                             2136  1   80.     MCCBSEQ    DS    A             Message sequence numbers
 00002C                0002C 0002C  2137      81.              END   ,
0000000                00000 00024  2147      83.     SCCB     RECORD BEGIN
                                    2155  1   84.     *
                                    2156  1   85.     * Server Channel Control Block.  Contains info about each server
                                    2157  1   86.     * attached to a message channel.
                                    2158  1   87.     *
 000000 E2C3C3C2                    2159  1   88.                DC    CL4'SCCB'     Control block id
 000004                             2160  1   89.     SCCBNEXT   DS    A             Chain of the SCCB's off the MCCB
 000008                             2161  1   90.     SCCBLOCK   DS    A             Lock for this end of the channel
 00000C                             2162  1   91.     SCCBMCCB   DS    A             Address of the MCCB
 000010                             2163  1   92.     SCCBRTCB   DS    A             Address of the RTCB
 000014                             2164  1   93.     SCCBECB    DS    A             ECB for this end of the channel
 000018                             2165  1   94.     SCCBCANH   DS    A             Head of chain of cancel requests
 00001C                             2166  1   95.     SCCBCANT   DS    A             Tail of chain of cancel requests
 000020                             2167  1   96.     SCCBNRCV   DS    A             Count of buffers received here
 000024                00024 00024  2168      97.              END   ,
0000000                00000 0002C  2178      99.     RCCB     RECORD BEGIN
                                    2186  1  100.     *
                                    2187  1  101.     * Requestor Channel Control Block. Contains info about each
                                    2188  1  102.     * requestor attached to a message channel.
                                    2189  1  103.     *
 000000 D9C3C3C2                    2190  1  104.                DC    CL4'RCCB'     Control block id
 000004                             2191  1  105.     RCCBNEXT   DS    A             Chain of the RCCB's off the MCCB
 000008                             2192  1  106.     RCCBMCCB   DS    A             Address of the MCCB
 00000C                             2193  1  107.     RCCBRTCB   DS    A             Address of the RTCB
 000010                             2194  1  108.     RCCBLOCK   DS    A             Address of lock
 000014                             2195  1  109.     RCCBMBH    DS    A             Pointer to first in list of messages
 000018                             2196  1  110.     RCCBMBT    DS    A             Pointer to the last in msg list
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   15
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
000001C                             2197  1  111.     RCCBMBCH   DS    A             Chain of all messages originating here
 000020                             2198  1  112.     RCCBMBCT   DS    A             Count of additional messages allowed
 000024                             2199  1  113.     RCCBECB    DS    A             ECB for this end of the channel
 000028                             2200  1  114.     RCCBNREQ   DS    A             Count of messages sent
 00002C                0002C 0002C  2201     115.              END   ,
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   16
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000000                00000 00028  2211     117.     MSGBUF   RECORD BEGIN
                                    2219  1  118.     *
                                    2220  1  119.     * This dsect describes the header on a message buffer.  This header
                                    2221  1  120.     * contains information to enable the message manager to transmit
                                    2222  1  121.     * information reliably between tasks.
                                    2223  1  122.     *
 000000 D4E2C7C2                    2224  1  123.                DC    CL4'MSGB'     Control block id
 000004                             2225  1  124.     MSGBNEXT   DS    A             Next MSGB in Receive/reply chain
 000008                             2226  1  125.     MSGBCHN    DS    A             Next MSGB for this requestor
 00000C                             2227  1  126.     MSGBPEND   DS    A             Pointer to last MSGB at this priority
 000010                             2228  1  127.     MSGBRCCB   DS    A             Pointer to the owning RCCB
 000014                             2229  1  128.     MSGBSCCB   DS    A             Pointer to the SCCB of processing server
 000018 00                          2230  1  129.     MSGBFLGS   FLAG  ,                    Flags
 MSGBFLGS.MSGBCAN  80 ONES          2234  1  130.                FLAG  MSGBCAN                 Message has been cancelled
                                    2239  1  131.
 000019 00                          2240  1  132.     MSGBSTAT   FLAG  ,                    Status
 MSGBSTAT.MSGBALOC 00 EQ            2244  1  133.                FLAG  (MSGBALOC,0,EQ)         Allocated
 MSGBSTAT.MSGBSENT 01 EQ            2254  1  134.                FLAG  (MSGBSENT,1,EQ)         Waiting for a server
 MSGBSTAT.MSGBRCVD 02 EQ            2264  1  135.                FLAG  (MSGBRCVD,2,EQ)         Being processed by server
 MSGBSTAT.MSGBREPL 03 EQ            2274  1  136.                FLAG  (MSGBREPL,3,EQ)         Reply for requestor
 MSGBSTAT.MSGBDONE 04 EQ            2284  1  137.                FLAG  (MSGBDONE,4,EQ)         Being processed by requestor
 00001A                             2294  1  138.     MSGBLEN    DS    H
 00001C                             2295  1  139.     MSGBPRIO   DS    A             Priority of this message
 000020                             2296  1  140.     MSGBRVAL   DS    A             Value set by reqestor
 000024                             2297  1  141.     MSGBSEQ    DS    A             Sequence number of this message
 000028                             2298  1  142.     MSGBDATA   DS    0D            Start of the user data
 000028                00028 00028  2299     143.              END   ,
0000000                00000 00010  2309     145.     CANREQ   RECORD BEGIN
                                    2317  1  146.     *
                                    2318  1  147.     * Message cancel request.  These are queued up for the server to
                                    2319  1  148.     * indicate to him that he should cancel a previously received
                                    2320  1  149.     * request.
                                    2321  1  150.     *
 000000                             2322  1  151.                DS    CL4'CANR'
 000004                             2323  1  152.     CANRNEXT   DS    A             Next cancel request in the chain
 000008                             2324  1  153.     CANRSEQ    DS    A             Sequence number of the msg to cancel
 00000C                             2325  1  154.     CANRBUF    DS    A             Address of the buffer
 000010                00010 00010  2326     155.              END   ,
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   17
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   2336     157.     *******************************************************************
                                    2337     158.     *                                                                 *
                                    2338     159.     *   LOCKCRE - Create a lock.                                      *
                                    2339     160.     *                                                                 *
                                    2340     161.     *     Input - @LOCKCRE                                            *
                                    2341     162.     *                                                                 *
                                    2342     163.     *    Output - Returns a 32 bit lock id.                           *
                                    2343     164.     *                                                                 *
                                    2344     165.     *******************************************************************
-
 000016                             2346     167.     LOCKCRE  PROC  @LOCKCRE,SCOPE=GLOBAL
 000016 D3D6C3D2C3D9C540            2352             +
 00001E 0018/0000                   2353             +
 000022 900F D004/18AF       00004  2355             +
 USING  LOCKCRE,R10
 000028 50D0 C000/18CD       00000  2370             +
 00002E 9680 C000      00000        2372             +
 USING  @LOCKCRE-72,R12
 000032 41D0 C060            00060  2386             +
 000036 5870 9004            00004  2387     168.              L     RY,RTCBCBAT             Get the CBAT address
 00003A 5870 7018            00018  2388     169.              WITH  (CBAT,RY),'L RY,CBATLOCK'    Get the LOCKCT
 USING  CBAT,R7
 DROP   CBAT,R7
 USING  LOCKCT,R7                   2412     170.              USING LOCKCT,RY               address it
 USING  @MEMORY-72,R13              2421     171.              POOLGET L'LOCKCB,TYPE=GLOBAL  Get space for the lock
 00003E D70B D048 D048 00000 00000  2439             +
 000044 4100 0034            00034  2447             +
 000048 5000 D04C            00004  2448             +
 00004C 9218 D04A      00002        2458             +
 000050 58F0 AD2E/0DEF       00D50  2461             +
 000056 1850                        2463     172.              LR    RK,RVR
 USING  LOCKCB,R5                   2464     173.              USING LOCKCB,RK               and address it
 000058 D203 5000 AD32 00000 00D54  2473     174.              MVC   LOCKCB(4),=C'LOCK'      Move in the cb id
 00005E D20F 5004 C048 00004 00000  2474     175.              MVC   LOCKNAME,@LOCKNAM       save the name
                                    2475     176.     *
                                    2476     177.     * Now allocate all the elements for the lock
                                    2477     178.     *
 000064 5830 7008            00008  2478     179.              L     RB,LOCKECNT             Number of LQE's to get
 000068 4120 5020            00020  2479     180.              LA    RA,LOCKECHN-LQECHAIN+LQE
 USING  LQE,R2                      2480     181.              USING LQE,RA
 00006C                             2489     182.     LQEGET   POOLGET L'LQE,TYPE=GLOBAL     Get memory for it
 00006C D70B D048 D048 00000 00000  2500             +
 000072 4100 0018            00018  2509             +
 000076 5000 D04C            00004  2510             +
 00007A 9218 D04A      00002        2520             +
 00007E 58F0 AD2E/0DEF       00D50  2523             +
 000084 5000 2008            00008  2525     183.              ST    RVR,LQECHAIN            Link up all LQE's
 000088 1820                        2526     184.              LR    RA,RVR                  Address the new one
 00008A D203 2000 AD36 00000 00D58  2527     185.              MVC   LQE(4),=CL4'LQE'        Move in the ID
 000090 5050 200C            0000C  2528     186.              ST    RK,LQELOCK              Save ptr to LOCKCB
 000094 4630 A050            00072  2529     187.              BCT   RB,LQEGET               Continue till we get em all
                                    2530     188.     *
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   18
0Current Usings:  (LQE,R2) (LOCKCB,R5) (LOCKCT,R7) (RTCB,R9) (LOCKCRE,R10) (@LOCKCRE-72,R12) (@MEMORY-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   2531     189.     * Have them all allocated.  Put one as the current and free the rest
                                    2532     190.     *
 000098 5820 5028            00028  2533     191.              L     RA,LOCKECHN             Get first on the list
 DROP   @MEMORY-72,R13              2534     192.              FPOST LQEECB                  Signal the ECB
 USING  @FPOST-72,R13
 00009C D703 D048 D048 00000 00000  2555             +
 0000A2 41E0 2014            00014  2562             +
 0000A6 50E0 D048            00000  2563             +
 0000AA 58F0 AD3A/0DEF       00D5C  2566             +
 0000B0 5020 5020            00020  2568     193.              ST    RA,LOCKPLUM             Save as the current
 0000B4 D203 5018 2008 00018 00008  2569     194.              MVC   LOCKFREE,LQECHAIN       Rest of chain is free
 0000BA 5820 2008/1222       00008  2570     195.              WHILE ('LT RA,LQECHAIN',NZ),'MVC LQENEXT,LQECHAIN'
 0000C0 4780 A0AC            000CE  2583             +
 0000C4 D203 2004 2008 00004 00008  2589             +
 0000CA 47F0 A098            000BA  2593             +
                                    2595     196.     *
                                    2596     197.     * Now all the elements are in place, put it on the chain
                                    2597     198.     *
 0000CE 5840 7004            00004  2598     199.     QLOCK    L     RJ,LOCKHEAD             Get head of the queue
 0000D2 5040 5014            00014  2599     200.              ST    RJ,LOCKCHN              Make this point to queue
 0000D6 BA45 7004            00004  2600     201.              CS    RJ,RK,LOCKHEAD          Make header point to this
 0000DA 4770 A0AC            000CE  2601     202.              IF    NZ,QLOCK
                                    2615     203.     *
                                    2616     204.     * Time to return to the user
                                    2617     205.     *
 0000DE 1805                        2618     206.              LR    RVR,RK                  Get the lock id (address)
 0000E0 981F C008            00008  2619     207.              PEND
 DROP   @LOCKCRE-72,R12
 DROP   LOCKCRE,R10
 0000E4 9680 C000/0B0E 00000        2634             +
 DROP   @FPOST-72,R13
 DROP   LQE,R2                      2643     208.              DROP  RA,RK,RY
 DROP   LOCKCB,R5
 DROP   LOCKCT,R7
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   19
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   2663     210.     *******************************************************************
                                    2664     211.     *                                                                 *
                                    2665     212.     *   LOCKOB  - Obtain a lock.                                      *
                                    2666     213.     *                                                                 *
                                    2667     214.     *     Input - @LOCKS                                              *
                                    2668     215.     *                                                                 *
                                    2669     216.     *    Output - None                                                *
                                    2670     217.     *                                                                 *
                                    2671     218.     *******************************************************************
-
 0000EA                             2673     220.     LOCKOB   PROC  @LOCKS,SCOPE=GLOBAL
 0000EA D3D6C3D2D6C24040            2679             +
 0000F2 0008/0000                   2680             +
 0000F6 900F D004/18AF       00004  2682             +
 USING  LOCKOB,R10
 0000FC 50D0 C000/18CD       00000  2697             +
 000102 9680 C000      00000        2699             +
 USING  @LOCKS-72,R12
 000106 41D0 C050            00050  2713             +
 00010A 5870 C048            00000  2714     221.              L     RY,@LOCKID              Get the lock id
 USING  LOCKCB,R7                   2715     222.              USING LOCKCB,RY
 00010E                             2724     223.              IF    (LOCKCB,NE,'LOCK'),'KAPUT LOCKCB'
 00010E D503 AC5E 7000 00D54 00000  2735             +
 000114 4780 A032            00128  2736             +
 000118 4110 0001            00001  2749  1          +
 00011C 4100 0080            00080  2750  1          +
 000120 8900 0018/1610       00018  2751  1          +
 000126 0A0D                        2753             +
                                    2758     224.     *
                                    2759     225.     * First get an element off the free queue
                                    2760     226.     *
 000128 9823 7018            00018  2761     227.              LM    RA,RB,LOCKFREE          Get first free and control
 00012C 5840 2004            00004  2762     228.     GETFE    WITH  (LQE,RA),'L RJ,LQENEXT' Next in the queue
 USING  LQE,R2
 DROP   LQE,R2
 000130 4150 0001            00001  2787     229.              LA    RK,1
 000134 1A53                        2788     230.              AR    RK,RB                   Update the control word
 000136 BB24 7018            00018  2789     231.              CDS   RA,RJ,LOCKFREE          Do the actual removal
 00013A 4770 A036            0012C  2790     232.              IF    NZ,GETFE
                                    2804     233.     *
                                    2805     234.     * Exchange the free one we just got with the 'plum'
                                    2806     235.     *
 00013E 5830 7020            00020  2807     236.              L     RB,LOCKPLUM             Get the current plum
 000142 BA32 7020            00020  2808     237.     NEWPLUM  CS    RB,RA,LOCKPLUM          And replace with our free
 000146 4770 A04C            00142  2809     238.              IF    NZ,NEWPLUM
                                    2823     239.     *
                                    2824     240.     * Now we update our element
                                    2825     241.     *
 USING  LQE,R3                      2826     242.              USING LQE,RB                  Address it
 00014A 5020 3004            00004  2835     243.              ST    RA,LQENEXT              Address of who we must signal
 00014E 5090 3010            00010  2836     244.              ST    RTCBR,LQERTCB           Mark it as belonging to us
                                    2837     245.     *
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   20
0Current Usings:  (LQE,R3) (LOCKCB,R7) (RTCB,R9) (LOCKOB,R10) (@LOCKS-72,R12)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   2838     246.     * Wait for the lock
                                    2839     247.     *
 000152 5070 9030            00030  2840     248.              ST    RY,RTCBLKWT             Save info in the RTCB
 USING  @FWAIT-72,R13               2841     249.              FWAIT LA:LQEECB               Wait for it
 000156 D703 D048 D048 00000 00000  2859             +
 00015C 41E0 3014            00014  2863             +
 000160 50E0 D048            00000  2864             +
 000164 58F0 AC6A/0DEF       00D60  2867             +
 00016A                             2869     250.              CLEAR RTCBLKWT                Maintain info in in the RTCB
 00016A D703 9030 9030 00030 00030  2875             +
 000170 4110 0001            00001  2876     251.              INCR  RS,LOCKRCNT             Count the request
 000174 5E10 7030            00030  2880             +
 000178 5010 7030            00030  2881             +
                                    2882     252.     *
                                    2883     253.     * When we we get the lock, mark the LOCKCB then return to the user
                                    2884     254.     *
 00017C 5030 7024            00024  2885     255.              ST    RB,LOCKOWNR             Mark us as the owner
 000180 981F C008            00008  2886     256.              PEND                          Return to caller, lock held
 DROP   @LOCKS-72,R12
 DROP   LOCKOB,R10
 000184 9680 C000/0B0E 00000        2901             +
 DROP   @FWAIT-72,R13
 DROP   LQE,R3                      2910     257.              DROP  RB,RY
 DROP   LOCKCB,R7
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   21
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   2924     259.     *******************************************************************
                                    2925     260.     *                                                                 *
                                    2926     261.     *   LOCKREL - Release a lock.                                     *
                                    2927     262.     *                                                                 *
                                    2928     263.     *     Input - @LOCKS                                              *
                                    2929     264.     *                                                                 *
                                    2930     265.     *    Output - none                                                *
                                    2931     266.     *                                                                 *
                                    2932     267.     *******************************************************************
-
 00018A                             2934     269.     LOCKREL  PROC  @LOCKS,SCOPE=GLOBAL
 00018A D3D6C3D2D9C5D340            2940             +
 000192 0008/0000                   2941             +
 000196 900F D004/18AF       00004  2943             +
 USING  LOCKREL,R10
 00019C 50D0 C000/18CD       00000  2958             +
 0001A2 9680 C000      00000        2960             +
 USING  @LOCKS-72,R12
 0001A6 41D0 C050            00050  2974             +
                                    2975     270.     *
                                    2976     271.     * Get and validity check the parm and calling circumstances
                                    2977     272.     *
 0001AA 5870 C048            00000  2978     273.              L     RY,@LOCKID              GET THE LOCK IDENTITY
 USING  LOCKCB,R7                   2979     274.              USING LOCKCB,RY
 0001AE 5820 7024/1222       00024  2988     275.              LT    RA,LOCKOWNR             GET LQE ID OF OWNER
 0001B4 4770 A032            001C8  2992     276.              IF    Z,'KAPUT BADTID'
 0001B8 4110 0001            00001  3011  1          +
 0001BC 4100 0080            00080  3012  1          +
 0001C0 8900 0018/1610       00018  3013  1          +
 0001C6 0A0D                        3015             +
 0001C8                             3020     277.              IF    (@RA,NE,'LQE '),'KAPUT BADTID'
 0001C8 D503 ABCE 2000 00D64 00000  3030             +
 0001CE 4780 A04C            001E2  3031             +
 0001D2 4110 0001            00001  3044  1          +
 0001D6 4100 0080            00080  3045  1          +
 0001DA 8900 0018/1610       00018  3046  1          +
 0001E0 0A0D                        3048             +
 USING  LQE,R2                      3053     278.              USING LQE,RA
 0001E2 5990 2010            00010  3062     279.              IF    (RTCBR,NE,LQERTCB),'KAPUT BADOWNR'
 0001E6 4780 A064            001FA  3074             +
 0001EA 4110 0001            00001  3087  1          +
 0001EE 4100 0080            00080  3088  1          +
 0001F2 8900 0018/1610       00018  3089  1          +
 0001F8 0A0D                        3091             +
                                    3096     280.     *
                                    3097     281.     * Clean up info
                                    3098     282.     *
 0001FA                             3099     283.              CLEAR LOCKOWNR                We no longer own this
 0001FA D703 7024 7024 00024 00024  3105             +
 000200 5860 2004            00004  3106     284.              L     RX,LQENEXT              Get the fellow we must signal
 000204                             3107     285.              CLEAR LQERTCB                 We don't own this either
 000204 D703 2010 2010 00010 00010  3113             +
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   22
0Current Usings:  (LQE,R2) (LOCKCB,R7) (RTCB,R9) (LOCKREL,R10) (@LOCKS-72,R12)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   3114     286.     *
                                    3115     287.     * Free our element
                                    3116     288.     *
 00020A 9845 7018            00018  3117     289.     FRLQE    LM    RJ,RK,LOCKFREE          First on the free chain
 00020E 5040 2004            00004  3118     290.              ST    RJ,LQENEXT              Update pointer
 000212 4130 0001            00001  3119     291.              LA    RB,1
 000216 1A35                        3120     292.              AR    RB,RK                   Update the control field
 000218 BB42 7018            00018  3121     293.              CDS   RJ,RA,LOCKFREE          Free the LQE
 00021C 4770 A074            0020A  3122     294.              IF    NZ,FRLQE                Keep on trying
 DROP   LQE,R2                      3136     295.              DROP  RA
                                    3143     296.     *
                                    3144     297.     * Signal the next fellow
                                    3145     298.     *
 USING  LQE,R6                      3146     299.              USING LQE,RX                  Point at the next entry
 USING  @FPOST-72,R13               3155     300.              FPOST LQEECB                  Wake up the next chap.
 000220 D703 D048 D048 00000 00000  3173             +
 000226 41E0 6014            00014  3180             +
 00022A 50E0 D048            00000  3181             +
 00022E 58F0 ABC6/0DEF       00D5C  3184             +
 000234 981F C008            00008  3186     301.              PEND  ,                       Return to caller
 DROP   @LOCKS-72,R12
 DROP   LOCKREL,R10
 000238 9680 C000/0B0E 00000        3201             +
 DROP   @FPOST-72,R13
 DROP   LQE,R6                      3210     302.              DROP  RX,RY
 DROP   LOCKCB,R7
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   23
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   3224     304.     *******************************************************************
                                    3225     305.     *                                                                 *
                                    3226     306.     *   LOCKINIT - Initialize the Lock Manager                        *
                                    3227     307.     *                                                                 *
                                    3228     308.     *     Input - Init parm pointer                                   *
                                    3229     309.     *                                                                 *
                                    3230     310.     *    Output - none                                                *
                                    3231     311.     *                                                                 *
                                    3232     312.     *******************************************************************
-
 00023E                             3234     314.     LOCKINIT PROC  SCOPE=GLOBAL
 00023E D3D6C3D2C9D5C9E3            3240             +
 000246 0000/0000                   3241             +
 00024A 900F D004/18AF       00004  3243             +
 USING  LOCKINIT,R10
 000250 50D0 C000/18CD       00000  3258             +
 000256 9680 C000      00000        3260             +
 00025A 41D0 C048            00048  3261             +
                                    3262     315.     *
                                    3263     316.     * First thing we do is allocate the lockct
                                    3264     317.     *
 USING  @MEMORY-72,R13              3265     318.              POOLGET L'LOCKCT,TYPE=GLOBAL  Get the storage
 00025E D70B D048 D048 00000 00000  3283             +
 000264 4100 000C            0000C  3291             +
 000268 5000 D04C            00004  3292             +
 00026C 9218 D04A      00002        3302             +
 000270 58F0 AB06/0DEF       00D50  3305             +
 000276 1870                        3307     319.              LR    RY,RVR                  Get its address
 USING  LOCKCT,R7                   3308     320.              USING LOCKCT,RY
 000278 D203 7000 AB1E 00000 00D68  3317     321.              MVC   LOCKCT(4),=CL4'LKCT'    Control block id
 00027E D203 7008 AB22 00008 00D6C  3318     322.              MVC   LOCKECNT,=A(40)         Default number of Elements
                                    3319     323.     *
                                    3320     324.     * GET PARMS
                                    3321     325.     *
 000284 5810 9004            00004  3322     326.              L     RS,RTCBCBAT             Get the CBAT address
 USING  CBAT,R1                     3323     327.              WITH  (CBAT,RS),BEGIN
 000288 5070 1018            00018  3337  1  328.                ST    RY,CBATLOCK             Save our roots
 DROP   CBAT,R1                     3338     329.              END   ,
 00028C 981F C008            00008  3346     330.              PEND  ,
 DROP   LOCKINIT,R10
 000290 9680 C000/0B0E 00000        3356             +
 DROP   @MEMORY-72,R13
 DROP   LOCKCT,R7                   3365     331.              DROP  RY
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   24
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   3373     333.     *******************************************************************
                                    3374     334.     *                                                                 *
                                    3375     335.     *   MSGINIT - Initializes the Message manager                     *
                                    3376     336.     *                                                                 *
                                    3377     337.     *     Input - Init parm pointer                                   *
                                    3378     338.     *                                                                 *
                                    3379     339.     *    Output - none                                                *
                                    3380     340.     *                                                                 *
                                    3381     341.     *******************************************************************
-
 000296                             3383     343.     MSGINIT  PROC  SCOPE=GLOBAL
 000296 D4E2C7C9D5C9E340            3389             +
 00029E 0000/0000                   3390             +
 0002A2 900F D004/18AF       00004  3392             +
 USING  MSGINIT,R10
 0002A8 50D0 C000/18CD       00000  3407             +
 0002AE 9680 C000      00000        3409             +
 0002B2 41D0 C048            00048  3410             +
                                    3411     344.     *
                                    3412     345.     * First thing, allocate the message channel CT
                                    3413     346.     *
 USING  @MEMORY-72,R13              3414     347.              POOLGET L'MCCT,TYPE=GLOBAL    Get the memory
 0002B6 D70B D048 D048 00000 00000  3432             +
 0002BC 4100 000C            0000C  3440             +
 0002C0 5000 D04C            00004  3441             +
 0002C4 9218 D04A      00002        3451             +
 0002C8 58F0 AAAE/0DEF       00D50  3454             +
 0002CE 1870                        3456     348.              LR    RY,RVR
 USING  MCCT,R7                     3457     349.              USING MCCT,RY                 Address it
 0002D0 D203 7000 AACE 00000 00D70  3466     350.              MVC   MCCT(4),=CL4'MCCT'      Move in the block id
                                    3467     351.     *
                                    3468     352.     * We have to have a lock for the queue of MCCB's
                                    3469     353.     *
 DROP   @MEMORY-72,R13              3470     354.              PSET  @LOCKCRE                Address the parm area
 USING  @LOCKCRE-72,R13
 0002D6 D710 D048 D048 00000 00000  3490             +
 0002DC D20F D048 AA8E 00000 00D30  3491     355.              MVC   @LOCKNAM,=CL16'MCCT Mods'
 0002E2 58F0 AAD2/0DEF       00D74  3492     356.              VCALL LOCKCRE
 0002E8 5000 7008            00008  3496     357.              ST    RVR,MCCTLOCK            Save the lock id
                                    3497     358.     *
                                    3498     359.     * Save the address of the MCCT
                                    3499     360.     *
 0002EC 5810 9004            00004  3500     361.              L     RS,RTCBCBAT             Get the address of the CBAT
 USING  CBAT,R1                     3501     362.              WITH  (CBAT,RS),BEGIN
 0002F0 5070 102C            0002C  3515  1  363.                ST    RY,CBATMSGS             Save the MCCT address
 DROP   CBAT,R1                     3516     364.              END   ,
 0002F4 981F C008            00008  3524     365.              PEND  ,
 DROP   MSGINIT,R10
 0002F8 9680 C000/0B0E 00000        3534             +
 DROP   @LOCKCRE-72,R13
 DROP   MCCT,R7                     3543     366.              DROP  RY
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   25
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   3551     368.     *******************************************************************
                                    3552     369.     *                                                                 *
                                    3553     370.     *   MSGATTS - Attach a message channel as a server.               *
                                    3554     371.     *                                                                 *
                                    3555     372.     *     input - @MSGATTS                                            *
                                    3556     373.     *                                                                 *
                                    3557     374.     *    Output - Returns message channel id pointer (addr of SSCB)   *
                                    3558     375.     *                                                                 *
                                    3559     376.     *******************************************************************
-
 0002FE                             3561     378.     MSGATTS  PROC  @MSGATT,SCOPE=GLOBAL
 0002FE D4E2C7C1E3E3E240            3567             +
 000306 0010/0000                   3568             +
 00030A 900F D004/18AF       00004  3570             +
 USING  MSGATTS,R10
 000310 50D0 C000/18CD       00000  3585             +
 000316 9680 C000      00000        3587             +
 USING  @MSGATT-72,R12
 00031A 41D0 C058            00058  3601             +
                                    3602     379.     *
                                    3603     380.     * Find the Corresponding MCCB
                                    3604     381.     *
 USING  @FMCCB-72,R13               3605     382.              PSET  @FMCCB
 00031E D707 D048 D048 00000 00000  3622             +
 000324 D207 D048 C048 00000 00000  3623     383.              MVC   FMCCBNAM,@MSGCNAM       move in the name
 00032A 41F0 A198/0DEF       004A2  3624     384.              LCALL FMCCB                   Find/create an MCCB
 000330 1870                        3633     385.              LR    RY,RVR                  Get its address
 USING  MCCB,R7                     3634     386.              USING MCCB,RY                 And address it
                                    3643     387.     *
                                    3644     388.     * Allocate an SCCB and initialize it
                                    3645     389.     *
 DROP   @FMCCB-72,R13               3646     390.              POOLGET L'SCCB,TYPE=GLOBAL    Get the memory
 USING  @MEMORY-72,R13
 000332 D70B D048 D048 00000 00000  3667             +
 000338 4100 0024            00024  3675             +
 00033C 5000 D04C            00004  3676             +
 000340 9218 D04A      00002        3686             +
 000344 58F0 AA46/0DEF       00D50  3689             +
 00034A 1860                        3691     391.              LR    RX,RVR
 USING  SCCB,R6                     3692     392.              USING SCCB,RX
 00034C D203 6000 AA6E 00000 00D78  3701     393.              MVC   SCCB(4),=CL4'SCCB'
 000352 5070 600C            0000C  3702     394.              ST    RY,SCCBMCCB             Save the pointer to channel
 000356 5090 6010            00010  3703     395.              ST    RTCBR,SCCBRTCB          And to the owner
                                    3704     396.     *
                                    3705     397.     * Get the SCCB lock
                                    3706     398.     *
 DROP   @MEMORY-72,R13              3707     399.              PSET  @LOCKCRE
 USING  @LOCKCRE-72,R13
 00035A D710 D048 D048 00000 00000  3727             +
 000360 D207 D048 7008 00000 00008  3728     400.              MVC   @LOCKNAM(8),MCCBNAME    Use channel name
 000366 D207 D050 900C 00008 0000C  3729     401.              MVC   @LOCKNAM+8(8),RTCBNAME  and the task name
 00036C 58F0 AA6A/0DEF       00D74  3730     402.              VCALL LOCKCRE
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   26
0Current Usings:  (SCCB,R6) (MCCB,R7) (RTCB,R9) (MSGATTS,R10) (@MSGATT-72,R12) (@LOCKCRE-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000372 5000 6008            00008  3734     403.              ST    RVR,SCCBLOCK            Save the lock id
 000376 4100 6014            00014  3735     404.              LA    RVR,SCCBCANH-CANRNEXT+CANREQ      Empty queue value
 00037A 5000 601C            0001C  3736     405.              ST    RVR,SCCBCANT            Saved in the tail pointer
                                    3737     406.     *
                                    3738     407.     * Update the info in the MCCB
                                    3739     408.     *
 00037E 5800 7020            00020  3740     409.              LOCKOB MCCBMLCK               Get a lock on the mccb
 DROP   @LOCKCRE-72,R13
 USING  @LOCKS-72,R13
 000382 5000 D048            00000  3759             +
 000386 58F0 AA72/0DEF       00D7C  3762             +
                                    3764     410.
 00038C D203 6004 7014 00004 00014  3765     411.              MVC   SCCBNEXT,MCCBSERV       Make this point at the chain
 000392 5060 7014            00014  3766     412.              ST    RX,MCCBSERV             And the head point at this
                                    3767     413.     *
                                    3768     414.     * If there are any buffers queued, this guy missed out on his
                                    3769     415.     * post, so set him up with his ECB posted to start.
                                    3770     416.     *
 000396                             3771     417.              IF    (MCCBMBH,NZ),BEGIN
 000396 D603 7024 7024 00024 00024  3781             +
 00039C 4780 A0AA            003B4  3782             +
 DROP   @LOCKS-72,R13               3787  1  418.                FPOST SCCBECB
 USING  @FPOST-72,R13
 0003A0 D703 D048 D048 00000 00000  3808  1          +
 0003A6 41E0 6014            00014  3815  1          +
 0003AA 50E0 D048            00000  3816  1          +
 0003AE 58F0 AA52/0DEF       00D5C  3819  1          +
 0003B4                             3821     419.              END   ,
                                    3825     420.
 0003B4 5800 7020            00020  3826     421.              LOCKRL MCCBMLCK               Release the lock
 DROP   @FPOST-72,R13
 USING  @LOCKS-72,R13
 0003B8 5000 D048            00000  3845             +
 0003BC 58F0 AA76/0DEF       00D80  3848             +
                                    3850     422.     *
                                    3851     423.     * Return to the caller
                                    3852     424.     *
 0003C2 4100 6014            00014  3853     425.              LA    RVR,SCCBECB             Get the ecb for this side
 0003C6 5000 C050            00008  3854     426.              ST    RVR,@MSGCECB            Tell the caller where it is
 0003CA 1806                        3855     427.              LR    RVR,RX                  Give him the SCCB address
 0003CC 981F C008            00008  3856     428.              PEND  ,
 DROP   @MSGATT-72,R12
 DROP   MSGATTS,R10
 0003D0 9680 C000/0B0E 00000        3871             +
 DROP   @LOCKS-72,R13
 DROP   SCCB,R6                     3880     429.              DROP  RX,RY
 DROP   MCCB,R7
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   27
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   3894     431.     *******************************************************************
                                    3895     432.     *                                                                 *
                                    3896     433.     *   MSGATTR - Attach a message channel as a requestor.            *
                                    3897     434.     *                                                                 *
                                    3898     435.     *     input - @MSGATTR                                            *
                                    3899     436.     *                                                                 *
                                    3900     437.     *    Output - Returns message channel id pointer (addr of RCCB)   *
                                    3901     438.     *                                                                 *
                                    3902     439.     *******************************************************************
-
 0003D6                             3904     441.     MSGATTR  PROC  @MSGATT,SCOPE=GLOBAL
 0003D6 D4E2C7C1E3E3D940            3910             +
 0003DE 0010/0000                   3911             +
 0003E2 900F D004/18AF       00004  3913             +
 USING  MSGATTR,R10
 0003E8 50D0 C000/18CD       00000  3928             +
 0003EE 9680 C000      00000        3930             +
 USING  @MSGATT-72,R12
 0003F2 41D0 C058            00058  3944             +
                                    3945     442.     *
                                    3946     443.     * Find the Corresponding MCCB
                                    3947     444.     *
 USING  @FMCCB-72,R13               3948     445.              PSET  @FMCCB
 0003F6 D707 D048 D048 00000 00000  3965             +
 0003FC D207 D048 C048 00000 00000  3966     446.              MVC   FMCCBNAM,@MSGCNAM       move in the name
 000402 41F0 A0C0/0DEF       004A2  3967     447.              LCALL FMCCB                   Find/create an MCCB
 000408 1870                        3976     448.              LR    RY,RVR                  Get its address
 USING  MCCB,R7                     3977     449.              USING MCCB,RY                 And address it
                                    3986     450.     *
                                    3987     451.     * Allocate an RCCB and initialize it
                                    3988     452.     *
 DROP   @FMCCB-72,R13               3989     453.              POOLGET L'RCCB,TYPE=GLOBAL    Get the memory
 USING  @MEMORY-72,R13
 00040A D70B D048 D048 00000 00000  4010             +
 000410 4100 002C            0002C  4018             +
 000414 5000 D04C            00004  4019             +
 000418 9218 D04A      00002        4029             +
 00041C 58F0 A96E/0DEF       00D50  4032             +
 000422 1860                        4034     454.              LR    RX,RVR
 USING  RCCB,R6                     4035     455.              USING RCCB,RX
 000424 D203 6000 A9A2 00000 00D84  4044     456.              MVC   RCCB(4),=CL4'RCCB'
 00042A 5070 6008            00008  4045     457.              ST    RY,RCCBMCCB             Save the pointer to channel
 00042E 5090 600C            0000C  4046     458.              ST    RTCBR,RCCBRTCB          And to the owner
 000432 D203 6020 7010 00020 00010  4047     459.              MVC   RCCBMBCT,MCCBMBCT       Initial number of buffers
                                    4048     460.     *
                                    4049     461.     * We need a lock for this control block.
                                    4050     462.     *
 DROP   @MEMORY-72,R13              4051     463.              PSET  @LOCKCRE
 USING  @LOCKCRE-72,R13
 000438 D710 D048 D048 00000 00000  4071             +
 00043E D207 D048 7008 00000 00008  4072     464.              MVC   @LOCKNAM(8),MCCBNAME    Use the channel name
 000444 D207 D050 900C 00008 0000C  4073     465.              MVC   @LOCKNAM+8(8),RTCBNAME  And the task name
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   28
0Current Usings:  (RCCB,R6) (MCCB,R7) (RTCB,R9) (MSGATTR,R10) (@MSGATT-72,R12) (@LOCKCRE-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
000044A 58F0 A992/0DEF       00D74  4074     466.              VCALL LOCKCRE                 Create the lock
 000450 5000 6010            00010  4078     467.              ST    RVR,RCCBLOCK            Save the lock id
 000454 4100 6010            00010  4079     468.              LA    RVR,RCCBMBH-MSGBNEXT+MSGBUF       Empty queue value
 000458 5000 6018            00018  4080     469.              ST    RVR,RCCBMBT             Saved in the tail pointer
                                    4081     470.     *
                                    4082     471.     * Update the info in the MCCB
                                    4083     472.     *
 00045C 5800 7020            00020  4084     473.              LOCKOB MCCBMLCK               Get a lock on the mccb
 DROP   @LOCKCRE-72,R13
 USING  @LOCKS-72,R13
 000460 5000 D048            00000  4103             +
 000464 58F0 A99A/0DEF       00D7C  4106             +
                                    4108     474.
 00046A D203 6004 7018 00004 00018  4109     475.              MVC   RCCBNEXT,MCCBRQST       Make this point at the chain
 000470 5060 7018            00018  4110     476.              ST    RX,MCCBRQST             And the head point at this
                                    4111     477.
 000474 5800 7020            00020  4112     478.              LOCKRL MCCBMLCK               Release the lock
 000478 5000 D048            00000  4121             +
 00047C 58F0 A99E/0DEF       00D80  4124             +
                                    4126     479.     *
                                    4127     480.     * Return to the caller
                                    4128     481.     *
 000482 4100 6024            00024  4129     482.              LA    RVR,RCCBECB             Get the ecb address
 000486 5000 C050            00008  4130     483.              ST    RVR,@MSGCECB            Return it to the caller
 00048A 1806                        4131     484.              LR    RVR,RX                  Give him the RCCB address
 00048C 981F C008            00008  4132     485.              PEND  ,
 DROP   @MSGATT-72,R12
 DROP   MSGATTR,R10
 000490 9680 C000/0B0E 00000        4147             +
 DROP   @LOCKS-72,R13
 DROP   RCCB,R6                     4156     486.              DROP  RX,RY
 DROP   MCCB,R7
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   29
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   4170     488.     *******************************************************************
                                    4171     489.     *                                                                 *
                                    4172     490.     *   FMCCB   - Finds an MCCB and creates one if no match is found  *
                                    4173     491.     *                                                                 *
                                    4174     492.     *     Input - @FMCCB                                              *
                                    4175     493.     *                                                                 *
                                    4176     494.     *    Output - Returns pointer the MCCB.                           *
                                    4177     495.     *                                                                 *
                                    4178     496.     *******************************************************************
-
 000000                00000 00008  4180     498.     @FMCCB   RECORD BEGIN
 000000                             4188  1  499.     FMCCBNAM   DS    CL8           Name of the message channel
 000008                00008 00008  4189     500.              END   ,
-000496                             4199     502.     FMCCB    PROC  @FMCCB
 000496 C6D4C3C3C2404040            4204             +
 00049E 0008/0000                   4205             +
 0004A2 900F D004/18AF       00004  4207             +
 USING  FMCCB,R10
 0004A8 50D0 C000/18CD       00000  4222             +
 0004AE 9680 C000      00000        4224             +
 USING  @FMCCB-72,R12
 0004B2 41D0 C050            00050  4238             +
                                    4239     503.     *
                                    4240     504.     * First get the address of the MCCT, then lock it.
                                    4241     505.     *
 0004B6 5870 9004            00004  4242     506.              L     RY,RTCBCBAT             Get the CBAT address
 0004BA 5870 702C            0002C  4243     507.              WITH  (CBAT,RY),'L RY,CBATMSGS'    Get MCCT Address
 USING  CBAT,R7
 DROP   CBAT,R7
 USING  MCCT,R7                     4267     508.              USING MCCT,RY                 Address it
 0004BE 5800 7008            00008  4276     509.              LOCKOB MCCTLOCK               Lock that baby up
 USING  @LOCKS-72,R13
 0004C2 5000 D048            00000  4292             +
 0004C6 58F0 A8DA/0DEF       00D7C  4295             +
                                    4297     510.     *
                                    4298     511.     * Search for a match
                                    4299     512.     *
 USING  MCCB,R2                     4300     513.              USING MCCB,RA
 0004CC 5820 7004            00004  4309     514.              L     RA,MCCTMCCB             Point at the chain
 0004D0 1222/4780 A046       004E8  4310     515.              WHILE (RA,NZ),BEGIN
 0004D6 D507 2008 C048 00008 00000  4326  1  516.                CLC   MCCBNAME,FMCCBNAM       This the one we want?
 0004DC 4780 A0B4            00556  4327  1  517.                IF    EQ,FNDMCCB              Yep.
 0004E0 5820 2004            00004  4341  1  518.                L     RA,MCCBNEXT             Point at the next in chain
 0004E4 47F0 A02E            004D0  4342     519.              END   ,
                                    4347     520.     *
                                    4348     521.     * If we get here it means that the MCCB was not found...time to
                                    4349     522.     * allocate one.
                                    4350     523.     *
 DROP   @LOCKS-72,R13               4351     524.              POOLGET L'MCCB,TYPE=GLOBAL    Get the memory
 USING  @MEMORY-72,R13
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   30
0Current Usings:  (MCCB,R2) (MCCT,R7) (RTCB,R9) (FMCCB,R10) (@FMCCB-72,R12) (@MEMORY-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
00004E8 D70B D048 D048 00000 00000  4372             +
 0004EE 4100 002C            0002C  4380             +
 0004F2 5000 D04C            00004  4381             +
 0004F6 9218 D04A      00002        4391             +
 0004FA 58F0 A8AE/0DEF       00D50  4394             +
 000500 1820                        4396     525.              LR    RA,RVR                  Get the address
 000502 D203 2000 A8E6 00000 00D88  4397     526.              MVC   MCCB(4),=CL4'MCCB'      Identify the control block
 000508 D207 2008 C048 00008 00000  4398     527.              MVC   MCCBNAME,FMCCBNAM       Save the
 00050E D203 2010 A8EA 00010 00D8C  4399     528.              MVC   MCCBMBCT,=A(1000)       **temp** Default # buffers
                                    4400     529.     *
                                    4401     530.     * Get a lock for this MCCB
                                    4402     531.     *
 DROP   @MEMORY-72,R13              4403     532.              PSET  @LOCKCRE
 USING  @LOCKCRE-72,R13
 000514 D710 D048 D048 00000 00000  4423             +
 00051A D207 D048 C048 00000 00000  4424     533.              MVC   @LOCKNAM(8),FMCCBNAM    Channel name
 000520 D207 D050 A89E 00008 00D40  4425     534.              MVC   @LOCKNAM+8(8),=CL8'--MCCB--'
 000526 58F0 A8D2/0DEF       00D74  4426     535.              VCALL LOCKCRE
 00052C 5000 2020            00020  4430     536.              ST    RVR,MCCBMLCK            Save the lock id
                                    4431     537.     *
                                    4432     538.     * And one for the message queue
                                    4433     539.     *
 000530                             4434     540.              PSET  @LOCKCRE
 000530 D710 D048 D048 00000 00000  4444             +
 000536 D207 D048 C048 00000 00000  4445     541.              MVC   @LOCKNAM(8),FMCCBNAM    Channel name
 00053C D207 D050 A8A6 00008 00D48  4446     542.              MVC   @LOCKNAM+8(8),=CL8'--MSGQ--'
 000542 58F0 A8D2/0DEF       00D74  4447     543.              VCALL LOCKCRE
 000548 5000 201C            0001C  4451     544.              ST    RVR,MCCBQLCK            Save the lock id
                                    4452     545.
 00054C D203 2004 7004 00004 00004  4453     546.              MVC   MCCBNEXT,MCCTMCCB       move in the head of the chain
 000552 5020 7004            00004  4454     547.              ST    RA,MCCTMCCB             Make this one the head
                                    4455     548.     *
                                    4456     549.     * MCCB is all set
                                    4457     550.     *
 000556                             4458     551.     FNDMCCB  LABEL ,
 000556 5800 7008            00008  4460     552.              LOCKRL MCCTLOCK               Free the MCCT lock
 DROP   @LOCKCRE-72,R13
 USING  @LOCKS-72,R13
 00055A 5000 D048            00000  4479             +
 00055E 58F0 A8DE/0DEF       00D80  4482             +
                                    4484     553.     *
                                    4485     554.     * Return to the caller
                                    4486     555.     *
 000564 1802                        4487     556.              LR    RVR,RA                  Address of the MCCB
 000566 981F C008            00008  4488     557.              PEND  ,
 DROP   @FMCCB-72,R12
 DROP   FMCCB,R10
 00056A 9680 C000/0B0E 00000        4503             +
 DROP   @LOCKS-72,R13
 DROP   MCCB,R2                     4512     558.              DROP  RA,RY
 DROP   MCCT,R7
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   31
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   4526     560.     *******************************************************************
                                    4527     561.     *                                                                 *
                                    4528     562.     *   MSGGBUF - Get a message buffer.                               *
                                    4529     563.     *                                                                 *
                                    4530     564.     *     Input - @MSGGBUF                                            *
                                    4531     565.     *                                                                 *
                                    4532     566.     *    Output - Returns a pointer to the buffer.                    *
                                    4533     567.     *                                                                 *
                                    4534     568.     *******************************************************************
-
 000570                             4536     570.     MSGGBUF  PROC  @MSGGBUF,SCOPE=GLOBAL
 000570 D4E2C7C7C2E4C640            4542             +
 000578 0008/0000                   4543             +
 00057C 900F D004/18AF       00004  4545             +
 USING  MSGGBUF,R10
 000582 50D0 C000/18CD       00000  4560             +
 000588 9680 C000      00000        4562             +
 USING  @MSGGBUF-72,R12
 00058C 41D0 C050            00050  4576             +
 000590 5870 C048            00000  4577     571.              L     RY,@MSGGCHN             Get the channel id (CCB addr)
 USING  RCCB,R7                     4578     572.              USING RCCB,RY                 Should be a requestor
 000594                             4587     573.              IF    (RCCB,NE,'RCCB'),'KAPUT BADCHID'  Must be good CB
 000594 D503 A814 7000 00D90 00000  4598             +
 00059A 4780 A032            005AE  4599             +
 00059E 4110 0001            00001  4612  1          +
 0005A2 4100 0080            00080  4613  1          +
 0005A6 8900 0018/1610       00018  4614  1          +
 0005AC 0A0D                        4616             +
 0005AE 5990 700C            0000C  4621     574.              IF    (RTCBR,NE,RCCBRTCB),'KAPUT BADCH' Must belong to him
 0005B2 4780 A04A            005C6  4633             +
 0005B6 4110 0001            00001  4646  1          +
 0005BA 4100 0080            00080  4647  1          +
 0005BE 8900 0018/1610       00018  4648  1          +
 0005C4 0A0D                        4650             +
                                    4655     575.     *
                                    4656     576.     * Allocate a buffer from dynamic memory
                                    4657     577.     *
 0005C6 5820 C04C            00004  4658     578.              L     RA,@MSGGLEN             Get length of the buffer
 0005CA 4100 0028            00028  4659     579.              LA    RVR,L'MSGBUF            Length of the header
 0005CE 1A02                        4660     580.              AR    RVR,RA                  Add to get total length
                                    4661     581.     *        MEMGET (RS),TYPE=GLOBAL       Get a dynamic buffer
 0005D0 47F0 A05C/00         005D8  4662     582.     MSBUFOB  STORAGE OBTAIN,LENGTH=(RVR),SP=8,RELATED=MSBUFREL
 0005D5 00/08/02/1800               4668             +
 0005DA 58F0 A058            005D4  4673             +
 0005DE 58E0 0010            00010  4674             +
 0005E2 58EE 0304            00304  4675             +
 0005E6 58EE 00A0            000A0  4676             +
 0005EA B218 E000      00000        4677             +
 0005EE 1861                        4678     583.              LR    RX,RS                   Get its address
 USING  MSGBUF,R6                   4679     584.              USING MSGBUF,RX               Address it
 0005F0                             4688     585.              CLEAR MSGBUF
 0005F0 D727 6000 6000 00000 00000  4694             +
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   32
0Current Usings:  (MSGBUF,R6) (RCCB,R7) (RTCB,R9) (MSGGBUF,R10) (@MSGGBUF-72,R12)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   4695     586.     *
                                    4696     587.     * Initialize the header
                                    4697     588.     *
 0005F6 D203 6000 A818 00000 00D94  4698     589.              MVC   MSGBUF(4),=CL4'MSGB'    Save a block id
 0005FC 4020 601A            0001A  4699     590.              STH   RA,MSGBLEN              Save the length (user area)
 000600 5070 6010            00010  4700     591.              ST    RY,MSGBRCCB             Pointer to the owner
                                    4701     592.     *
                                    4702     593.     * Put the message on the RCCB queue
                                    4703     594.     *
 000604 5800 7010            00010  4704     595.              LOCKOB RCCBLOCK               Get the lock
 USING  @LOCKS-72,R13
 000608 5000 D048            00000  4720             +
 00060C 58F0 A800/0DEF       00D7C  4723             +
 000612 D203 6008 701C 00008 0001C  4725     596.              MVC   MSGBCHN,RCCBMBCH        Point this one at the chain
 000618 5060 701C            0001C  4726     597.              ST    RX,RCCBMBCH             And the head at this one
 00061C 5800 7010            00010  4727     598.              LOCKRL RCCBLOCK               Release the lock now
 000620 5000 D048            00000  4736             +
 000624 58F0 A804/0DEF       00D80  4739             +
                                    4741     599.     *
                                    4742     600.     * Return the start of the data area to the user
                                    4743     601.     *
 00062A 4100 6028            00028  4744     602.              LA    RVR,MSGBDATA            Get offset of the user data
 00062E 981F C008            00008  4745     603.              PEND  ,
 DROP   @MSGGBUF-72,R12
 DROP   MSGGBUF,R10
 000632 9680 C000/0B0E 00000        4760             +
 DROP   @LOCKS-72,R13
 DROP   MSGBUF,R6                   4769     604.              DROP  RX,RY
 DROP   RCCB,R7
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   33
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   4783     606.     *******************************************************************
                                    4784     607.     *                                                                 *
                                    4785     608.     *   MSGSEND - Send a message/reply.                               *
                                    4786     609.     *                                                                 *
                                    4787     610.     *     Input - @MSGSEND                                            *
                                    4788     611.     *                                                                 *
                                    4789     612.     *    Output - none                                                *
                                    4790     613.     *                                                                 *
                                    4791     614.     *******************************************************************
-
 000638                             4793     616.     MSGSEND  PROC  @MSGSEND,SCOPE=GLOBAL
 000638 D4E2C7E2C5D5C440            4799             +
 000640 0018/0000                   4800             +
 000644 900F D004/18AF       00004  4802             +
 USING  MSGSEND,R10
 00064A 50D0 C000/18CD       00000  4817             +
 000650 9680 C000      00000        4819             +
 USING  @MSGSEND-72,R12
 000654 41D0 C060            00060  4833             +
                                    4834     617.     *
                                    4835     618.     * Get and validate the message buffer
                                    4836     619.     *
 000658 5860 C04C            00004  4837     620.              L     RX,@MSGSBUF             Get the buffer location
 00065C 5B60 A754            00D98  4838     621.              S     RX,=A(L'MSGBUF)         Get the true offset
 USING  MSGBUF,R6                   4839     622.              USING MSGBUF,RX               Address it
 000660                             4848     623.              IF    (MSGBUF,NE,'MSGB'),'KAPUT BADMBUF'
 000660 D503 A758 6000 00D9C 00000  4859             +
 000666 4780 A036            0067A  4860             +
 00066A 4110 0001            00001  4873  1          +
 00066E 4100 0080            00080  4874  1          +
 000672 8900 0018/1610       00018  4875  1          +
 000678 0A0D                        4877             +
                                    4882     624.     *
                                    4883     625.     * Get the channel designator and determine whether this is a send
                                    4884     626.     * message or send reply.  Then do the work.
                                    4885     627.     *
 00067A 5870 C048            00000  4886     628.              L     RY,@MSGSCHN             Get (RCCB/SCCB) address
 00067E                             4887     629.              IF    (@RY,EQ,'RCCB'),BEGIN   This is a Send Message
 00067E D503 A74C 7000 00D90 00000  4897             +
 000684 4770 A152            00796  4898             +
 USING  RCCB,R7                     4903  1  630.                WITH  (RCCB,RY)
                                    4916  1  631.     *
                                    4917  1  632.     * validate the state of the message and that it belongs on this
                                    4918  1  633.     * channel.
                                    4919  1  634.     *
 000688 5970 6010            00010  4920  1  635.                IF    (RY,NE,MSGBRCCB),'KAPUT BADMCH'
 00068C 4780 A05C            006A0  4932  1          +
 000690 4110 0001            00001  4945  2          +
 000694 4100 0080            00080  4946  2          +
 000698 8900 0018/1610       00018  4947  2          +
 00069E 0A0D                        4949  1          +
 0006A0 9500 6019      00019        4954  1  636.                IF    (~MSGBALOC,AND,~MSGBDONE),'KAPUT MSGSTATE'
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   34
0Current Usings:  (MSGBUF,R6) (RCCB,R7) (RTCB,R9) (MSGSEND,R10) (@MSGSEND-72,R12)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
00006A4 4780 A07C            006C0  4966  1          +
 0006A8 9504 6019      00019        4977  1          +
 0006AC 4780 A07C            006C0  4978  1          +
 0006B0 4110 0001            00001  4991  2          +
 0006B4 4100 0080            00080  4992  2          +
 0006B8 8900 0018/1610       00018  4993  2          +
 0006BE 0A0D                        4995  1          +
                                    5000  1  637.     *
                                    5001  1  638.     * Looks like everything is ok for the send...
                                    5002  1  639.     *
 0006C0 4130 0001            00001  5003  1  640.                INCR  RB,RCCBNREQ             Count the request
 0006C4 5E30 7028            00028  5007  1          +
 0006C8 5030 7028            00028  5008  1          +
 0006CC 9201 6019      00019        5009  1  641.                SET   MSGBSENT                Set the new state
 0006D0 D203 6020 C054 00020 0000C  5015  1  642.                MVC   MSGBRVAL,@MSGSVAL       Move in the Requestor value
 0006D6 D203 601C C058 0001C 00010  5016  1  643.                MVC   MSGBPRIO,@MSGSPRI       And also the priority
 0006DC 5870 7008            00008  5017  1  644.                L     RY,RCCBMCCB             Get the MCCB Address
 DROP   RCCB,R7                     5018  1  645.                WITH  (MCCB,RY)
 USING  MCCB,R7
 0006E0 5800 701C            0001C  5034  1  646.                LOCKOB MCCBQLCK               Obtain the lock
 USING  @LOCKS-72,R13
 0006E4 5000 D048            00000  5050  1          +
 0006E8 58F0 A738/0DEF       00D7C  5053  1          +
                                    5055  1  647.     *
                                    5056  1  648.     * Get the serial number
                                    5057  1  649.     *
 0006EE 4140 0001            00001  5058  1  650.                INCR  RJ,MCCBSEQ              Update the number
 0006F2 5E40 7028            00028  5062  1          +
 0006F6 5040 7028            00028  5063  1          +
 0006FA 5040 6024            00024  5064  1  651.                ST    RJ,MSGBSEQ              Save it in the buffer
 0006FE 5040 C050            00008  5065  1  652.                ST    RJ,@MSGSSEQ             And in the return parms
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   35
0Current Usings:  (MSGBUF,R6) (MCCB,R7) (RTCB,R9) (MSGSEND,R10) (@MSGSEND-72,R12) (@LOCKS-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   5067  1  654.     *
                                    5068  1  655.     * Queue it to the MCCB
                                    5069  1  656.     *
                                    5070  1  657.     * Add the buffer to the chain in priority order.  Each buffer
                                    5071  1  658.     * has a pointer to the next one in the queue (MSGBNEXT).  The
                                    5072  1  659.     * first buffer with a given priority level has a pointer to
                                    5073  1  660.     * the last buffer in the queue with the same priority level
                                    5074  1  661.     * (MSGBPEND).  If there is only one buffer in the queue with a
                                    5075  1  662.     * given priority, this pointer will point to its own buffer.
                                    5076  1  663.     * These pointers are used to get to the correct point in the
                                    5077  1  664.     * queue as quickly as possible.  The following code is a bit
                                    5078  1  665.     * tricky.  RX always points to the buffer we wish to add to
                                    5079  1  666.     * the queue.  RA points at the buffer we will insert after,
                                    5080  1  667.     * assuming all the tests go correctly.  RB points to the
                                    5081  1  668.     * buffer after RA's.  This buffer is the one we test to see
                                    5082  1  669.     * whether to insert our buffer after RA's.
                                    5083  1  670.     *
                                    5084  1  671.     *
                                    5085  1  672.     * Assume that this buffer is the only one at its priority
                                    5086  1  673.     *
 000702 5060 600C            0000C  5087  1  674.                ST    RX,MSGBPEND
 000706 5810 601C            0001C  5088  1  675.                L     RS,MSGBPRIO             Get the priority of ours
                                    5089  1  676.     *
                                    5090  1  677.     * Start at the queue head pointer.  Imitate a buffer address
                                    5091  1  678.     *
 00070A 4120 7020            00020  5092  1  679.                LA    RA,MCCBMBH-MSGBNEXT+MSGBUF  Fake message address
                                    5093  1  680.     *
                                    5094  1  681.     * Loop until we find the end of the chain or the right spot
                                    5095  1  682.     *
                                    5096  1  683.     *   We have a trial insertion spot...(RA).  Check it out.
                                    5097  1  684.     *
 00070E 5830 2004/1233       00004  5098  1  685.     PQLOOP     WITH  (MSGBUF,RA),'LT RB,MSGBNEXT'      Following buffer
 DROP   MSGBUF,R6
 USING  MSGBUF,R2
 USING  MSGBUF,R6
 DROP   MSGBUF,R2
 000714 4780 A0F0            00734  5143  1  686.                IF    Z,PUTONQ                At the end of our rope
 DROP   MSGBUF,R6                   5157  1  687.                WITH  (MSGBUF,RB),BEGIN
 USING  MSGBUF,R3
                                    5179  2  688.     *
                                    5180  2  689.     *   Compare the test buffer (RB) priority with ours (in RS)
                                    5181  2  690.     *
 000718 5910 301C            0001C  5182  2  691.                  C     RS,MSGBPRIO
 00071C 4780 A0E8            0072C  5183  2  692.                  IF    EQ,RITPRIO              Have the general vicinity
                                    5197  2  693.     *
                                    5198  2  694.     *   If our buffer has a higher priority, we found the spot
                                    5199  2  695.     *
 000720 4720 A0F0            00734  5200  2  696.                  IF    GT,PUTONQ               Found its spot
                                    5214  2  697.     *
                                    5215  2  698.     *   If our buffer is of lower priority, we skip to the end of all
                                    5216  2  699.     *   those buffers with the same priority as RB's
                                    5217  2  700.     *
 000724 5820 300C            0000C  5218  2  701.                  L     RA,MSGBPEND             Try a new insert point
 000728 47F0 A0CA            0070E  5219  2  702.                  B     PQLOOP
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   36
0Current Usings:  (MSGBUF,R3) (MCCB,R7) (RTCB,R9) (MSGSEND,R10) (@MSGSEND-72,R12) (@LOCKS-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   5220  2  703.     *
                                    5221  2  704.     *   If our buffer is of the same priority, we skip to the end of
                                    5222  2  705.     *   those buffers with the same priority and insert it.  We must
                                    5223  2  706.     *   also update the pointer to the last buffer of the priority
                                    5224  2  707.     *   level.
                                    5225  2  708.     *
 00072C 5820 300C            0000C  5226  2  709.     RITPRIO      L     RA,MSGBPEND             Get last at this prio
 000730 5060 300C            0000C  5227  2  710.                  ST    RX,MSGBPEND             This is the new last one
 USING  MSGBUF,R6                   5228  1  711.                END   ,
 DROP   MSGBUF,R3
                                    5245  1  712.     *
                                    5246  1  713.     * We now insert the buffer after the one pointed to by RA
                                    5247  1  714.     *
 000734 D203 6004 2004 00004 00004  5248  1  715.     PUTONQ     MVC   MSGBNEXT,MSGBNEXT-MSGBUF(RA) Point ours at the queue
 00073A 5062 0004            00004  5249  1  716.                ST    RX,MSGBNEXT-MSGBUF(RA)       And the queue at ours
 00073E 5800 701C            0001C  5250  1  717.                LOCKRL MCCBQLCK
 000742 5000 D048            00000  5259  1          +
 000746 58F0 A73C/0DEF       00D80  5262  1          +
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   37
0Current Usings:  (MSGBUF,R6) (MCCB,R7) (RTCB,R9) (MSGSEND,R10) (@MSGSEND-72,R12) (@LOCKS-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   5265  1  719.     *
                                    5266  1  720.     * Now all the servers must be posted
                                    5267  1  721.     *
 00074C 5800 7020            00020  5268  1  722.                LOCKOB MCCBMLCK
 000750 5000 D048            00000  5277  1          +
 000754 58F0 A738/0DEF       00D7C  5280  1          +
 00075A 5830 7014            00014  5282  1  723.                L     RB,MCCBSERV             Get first in list
 00075E 1233/4780 A142       00786  5283  1  724.                WHILE (RB,NZ),BEGIN
 USING  SCCB,R3                     5299  2  725.                  WITH  (SCCB,RB)
 DROP   @LOCKS-72,R13               5312  2  726.                  FPOST SCCBECB                 Wake this fellow up
 USING  @FPOST-72,R13
 000764 D703 D048 D048 00000 00000  5333  2          +
 00076A 41E0 3014            00014  5340  2          +
 00076E 50E0 D048            00000  5341  2          +
 000772 58F0 A718/0DEF       00D5C  5344  2          +
 000778 1200/4770 A142       00786  5346  2  727.                  IF    (RVR,NZ),EXIT           POST issued, no need to go on
 00077E 5830 3004            00004  5363  2  728.                  L     RB,SCCBNEXT             Point to the next server
 000782 47F0 A11A            0075E  5364  1  729.                END   ,
 DROP   SCCB,R3
 000786 5800 7020            00020  5374  1  730.                LOCKRL MCCBMLCK               Release the lock now
 DROP   @FPOST-72,R13
 USING  @LOCKS-72,R13
 00078A 5000 D048            00000  5393  1          +
 00078E 58F0 A73C/0DEF       00D80  5396  1          +
 000794 1804                        5398  1  731.                LR    RVR,RJ                  Return the Sequence number
 DROP   MCCB,R7                     5399     732.              END   ,
 USING  RCCB,R7
 DROP   RCCB,R7
 000796 A156           00796 00686  5420     733.              ELSEIF (@RY,EQ,'SCCB'),BEGIN  This is a send reply
 000796 47F0 A1F2            00836  5426             +
 00079A D503 A75C 7000 00DA0 00000  5439             +
 0007A0 4770 A1F2            00836  5440             +
 USING  SCCB,R7                     5445  1  734.                WITH  (SCCB,RY)
                                    5458  1  735.     *
                                    5459  1  736.     * Check to see whether the msg is on the right channel
                                    5460  1  737.     *
 0007A4 5970 6014            00014  5461  1  738.                IF    (RY,NE,MSGBSCCB),'KAPUT BADCHAN' Not his
 0007A8 4780 A178            007BC  5473  1          +
 0007AC 4110 0001            00001  5486  2          +
 0007B0 4100 0080            00080  5487  2          +
 0007B4 8900 0018/1610       00018  5488  2          +
 0007BA 0A0D                        5490  1          +
 0007BC 5990 7010            00010  5495  1  739.                IF    (RTCBR,NE,SCCBRTCB),'KAPUT BADCHAN' ditto
 0007C0 4780 A190            007D4  5507  1          +
 0007C4 4110 0001            00001  5520  2          +
 0007C8 4100 0080            00080  5521  2          +
 0007CC 8900 0018/1610       00018  5522  2          +
 0007D2 0A0D                        5524  1          +
 0007D4 5820 6010            00010  5529  1  740.                L     RA,MSGBRCCB             Get the owner's RCCB
 USING  RCCB,R2                     5530  1  741.                WITH  (RCCB,RA)
                                    5543  1  742.     *
                                    5544  1  743.     * Check the state of the message buffer
                                    5545  1  744.     *
 0007D8 9502 6019      00019        5546  1  745.                IF    ~MSGBRCVD,'KAPUT MSGSTATE'        No good.
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   38
0Current Usings:  (RCCB,R2) (MSGBUF,R6) (SCCB,R7) (RTCB,R9) (MSGSEND,R10) (@MSGSEND-72,R12) (@LOCKS-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
00007DC 4780 A1AC            007F0  5556  1          +
 0007E0 4110 0001            00001  5569  2          +
 0007E4 4100 0080            00080  5570  2          +
 0007E8 8900 0018/1610       00018  5571  2          +
 0007EE 0A0D                        5573  1          +
                                    5578  1  746.     *
                                    5579  1  747.     * Queue it to the one who sent it
                                    5580  1  748.     *
 0007F0 5800 2010            00010  5581  1  749.                LOCKOB RCCBLOCK               Lock up the RCCB
 0007F4 5000 D048            00000  5590  1          +
 0007F8 58F0 A738/0DEF       00D7C  5593  1          +
 0007FE 9203 6019      00019        5595  1  750.                SET   MSGBREPL                Set the new state
 000802                             5601  1  751.                CLEAR MSGBNEXT
 000802 D703 6004 6004 00004 00004  5607  1          +
 000808 5810 2018            00018  5608  1  752.                L     RS,RCCBMBT              Address of last reply
 00080C 5060 1004            00004  5609  1  753.                WITH  (MSGBUF,RS),'ST RX,MSGBNEXT'  Add it to the queue
 DROP   MSGBUF,R6
 USING  MSGBUF,R1
 USING  MSGBUF,R6
 DROP   MSGBUF,R1
 000810 5060 2018            00018  5650  1  754.                ST    RX,RCCBMBT              Last one is now this one
 000814 5800 2010            00010  5651  1  755.                LOCKRL RCCBLOCK               Unlock the RCCB
 000818 5000 D048            00000  5660  1          +
 00081C 58F0 A73C/0DEF       00D80  5663  1          +
 DROP   @LOCKS-72,R13               5665  1  756.                FPOST RCCBECB                 Wake him up
 USING  @FPOST-72,R13
 000822 D703 D048 D048 00000 00000  5686  1          +
 000828 41E0 2024            00024  5693  1          +
 00082C 50E0 D048            00000  5694  1          +
 000830 58F0 A718/0DEF       00D5C  5697  1          +
 000836 A1F6           00836 007A2  5699     757.              END   ELSE,'KAPUT BADCHAN'    Bad channel passed
 DROP   RCCB,R2
 DROP   SCCB,R7
 000836 47F0 A206            0084A  5718             +
 00083A 4110 0001            00001  5732  1          +
 00083E 4100 0080            00080  5733  1          +
 000842 8900 0018/1610       00018  5734  1          +
 000848 0A0D                        5736             +
                                    5741     758.     *
                                    5742     759.     * OK. Return to the caller. The check is in the mail.
                                    5743     760.     *
 00084A 981F C008            00008  5744     761.              PEND
 DROP   @MSGSEND-72,R12
 DROP   MSGSEND,R10
 00084E 9680 C000/0B0E 00000        5759             +
 DROP   @FPOST-72,R13
 DROP   MSGBUF,R6                   5768     762.              DROP RX
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   39
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   5776     764.     *******************************************************************
                                    5777     765.     *                                                                 *
                                    5778     766.     *   MSGRECV - Receive a message/reply.                            *
                                    5779     767.     *                                                                 *
                                    5780     768.     *     Input - @MSGRECV                                            *
                                    5781     769.     *                                                                 *
                                    5782     770.     *    Output - none                                                *
                                    5783     771.     *                                                                 *
                                    5784     772.     *******************************************************************
-
 000854                             5786     774.     MSGRECV  PROC  @MSGRECV,SCOPE=GLOBAL
 000854 D4E2C7D9C5C3E540            5792             +
 00085C 0018/0000                   5793             +
 000860 900F D004/18AF       00004  5795             +
 USING  MSGRECV,R10
 000866 50D0 C000/18CD       00000  5810             +
 00086C 9680 C000      00000        5812             +
 USING  @MSGRECV-72,R12
 000870 41D0 C060            00060  5826             +
                                    5827     775.     *
                                    5828     776.     * Verify the information passed to us
                                    5829     777.     *
 000874 5870 C048            00000  5830     778.              L     RY,@MSGRCHN             Get the channel pointer
 000878                             5831     779.              IF    (@RY,EQ,'SCCB'),BEGIN   It is a server channel
 000878 D503 A540 7000 00DA0 00000  5841             +
 00087E 4770 A124            00984  5842             +
 USING  SCCB,R7                     5847  1  780.                WITH  (SCCB,RY)
                                    5860  1  781.     *
                                    5861  1  782.     * Make sure this belongs to him
                                    5862  1  783.     *
 000882 5990 7010            00010  5863  1  784.                IF    (RTCBR,NE,SCCBRTCB),'KAPUT BADCHAN'
 000886 4780 A03A            0089A  5875  1          +
 00088A 4110 0001            00001  5888  2          +
 00088E 4100 0080            00080  5889  2          +
 000892 8900 0018/1610       00018  5890  2          +
 000898 0A0D                        5892  1          +
                                    5897  1  785.     *
                                    5898  1  786.     * Check to see if there is a cancel request waiting for him.
                                    5899  1  787.     *
 00089A                             5900  1  788.                IF    (SCCBCANH,NZ),BEGIN     Cancel request waiting
 00089A D603 7018 7018 00018 00018  5910  1          +
 0008A0 4780 A0A0            00900  5911  1          +
 0008A4 5800 7008            00008  5916  2  789.                  LOCKOB SCCBLOCK               Lock up the cancel chain
 USING  @LOCKS-72,R13
 0008A8 5000 D048            00000  5932  2          +
 0008AC 58F0 A51C/0DEF       00D7C  5935  2          +
 0008B2 5810 7018            00018  5937  2  790.                  L     RS,SCCBCANH             Get the address of the first
 USING  CANREQ,R1                   5938  2  791.                  WITH  (CANREQ,RS)
 0008B6 D203 7018 1004 00018 00004  5951  2  792.                  MVC   SCCBCANH,CANRNEXT       Remove this entry
 0008BC 5910 701C            0001C  5952  2  793.                  IF    (RS,EQ,SCCBCANT),BEGIN  Last one in queue
 0008C0 4770 A06C            008CC  5964  2          +
 0008C4 4100 7014            00014  5969  3  794.                    LA    RVR,SCCBCANH-CANRNEXT+CANREQ      Empty queue value
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   40
0Current Usings:  (CANREQ,R1) (SCCB,R7) (RTCB,R9) (MSGRECV,R10) (@MSGRECV-72,R12) (@LOCKS-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
00008C8 5000 701C            0001C  5970  3  795.                    ST    RVR,SCCBCANT            Save it in the tail
 0008CC                             5971  2  796.                  END   ,
 0008CC 5800 7008            00008  5975  2  797.                  LOCKRL SCCBLOCK
 0008D0 5000 D048            00000  5984  2          +
 0008D4 58F0 A520/0DEF       00D80  5987  2          +
                                    5989  2  798.     *
                                    5990  2  799.     * Move info into the return area
                                    5991  2  800.     *
 0008DA D203 C050 1008 00008 00008  5992  2  801.                  MVC   @MSGRSEQ,CANRSEQ        Move the sequence number in
 DROP   @LOCKS-72,R13               5993  2  802.                  MEMFREE L'CANREQ,A=(RS),TYPE=GLOBAL    Free the request
 USING  @MEMFREE-72,R13
 0008E0 D709 D048 D048 00000 00000  6015  2          +
 0008E6 4100 0010            00010  6022  2          +
 0008EA 5000 D04C            00004  6023  2          +
 0008EE 5010 D048            00000  6024  2          +
 0008F2 9212 D051      00009        6034  2          +
 0008F6 58F0 A544/0DEF       00DA4  6037  2          +
 0008FC 5800 A548            00DA8  6039  2  803.                  L     RVR,=A(-1)              Indicate cancel request
 000900 A0A4           00900 008A2  6040  1  804.                END   ELSE,BEGIN
 DROP   CANREQ,R1
 000900 47F0 A124            00984  6054  1          +
                                    6060  2  805.     *
                                    6061  2  806.     * No cancel requests... see if there are any messages waiting
                                    6062  2  807.     *
 000904 5850 700C            0000C  6063  2  808.                  L     RK,SCCBMCCB             Get a pointer to the main
 USING  MCCB,R5                     6064  2  809.                  WITH  (MCCB,RK)
 000908 5800 501C            0001C  6077  2  810.                  LOCKOB MCCBQLCK               Lock up the msg queue
 DROP   @MEMFREE-72,R13
 USING  @LOCKS-72,R13
 00090C 5000 D048            00000  6096  2          +
 000910 58F0 A51C/0DEF       00D7C  6099  2          +
 000916 5840 5024/1244       00024  6101  2  811.                  LT    RJ,MCCBMBH              Get addr of message
 00091C 4770 A0D0            00930  6105  2  812.                  IF    Z,BEGIN                 No buffers queued
 000920 5800 501C            0001C  6116  3  813.                    LOCKRL MCCBQLCK               Release the lock
 000924 5000 D048            00000  6125  3          +
 000928 58F0 A520/0DEF       00D80  6128  3          +
 00092E 1B00                        6130  3  814.                    CLEAR RVR                     Make the address zero
 000930 A0D4           00930 0091E  6134  2  815.                  END   ELSE,BEGIN
 000930 47F0 A124            00984  6143  2          +
 USING  MSGBUF,R4                   6149  3  816.                    WITH  (MSGBUF,RJ)
                                    6162  3  817.     *
                                    6163  3  818.     * Remove the buffer from the queue
                                    6164  3  819.     *
 000934 5810 4004            00004  6165  3  820.                    L     RS,MSGBNEXT             Address of the next one
 000938 5940 400C            0000C  6166  3  821.                    IF    (RJ,NE,MSGBPEND),BEGIN  More at this priority level
 00093C 4780 A0E6            00946  6178  3          +
 000940 D203 100C 400C 0000C 0000C  6183  4  822.                      MVC   MSGBPEND-MSGBUF(,RS),MSGBPEND     Move pointer to next
 000946                             6184  3  823.                    END   ,
 000946 5010 5024            00024  6188  3  824.                    ST    RS,MCCBMBH              Update the queue header
                                    6189  3  825.     *
                                    6190  3  826.     * We have the new buffer...update the info and return it to the
                                    6191  3  827.     * caller.
                                    6192  3  828.     *
 00094A 5070 4014            00014  6193  3  829.                    ST    RY,MSGBSCCB             Save the address of the server
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   41
0Current Usings:  (MSGBUF,R4) (MCCB,R5) (SCCB,R7) (RTCB,R9) (MSGRECV,R10) (@MSGRECV-72,R12) (@LOCKS-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
000094E 9202 4019      00019        6194  3  830.                    SET   MSGBRCVD                Set the status of the buffer
 000952 5800 501C            0001C  6200  3  831.                    LOCKRL MCCBQLCK               Free up the message queue
 000956 5000 D048            00000  6209  3          +
 00095A 58F0 A520/0DEF       00D80  6212  3          +
 000960 D203 C050 4024 00008 00024  6214  3  832.                    MVC   @MSGRSEQ,MSGBSEQ        Tell the caller the seqence #
 000966 D203 C058 401C 00010 0001C  6215  3  833.                    MVC   @MSGRPRI,MSGBPRIO       Tell him about the priority
 00096C 4810 401A            0001A  6216  3  834.                    LH    RS,MSGBLEN              Get the user data length
 000970 5010 C04C            00004  6217  3  835.                    ST    RS,@MSGRLEN             And tell the caller what it is
 000974 4100 4028            00028  6218  3  836.                    LA    RVR,MSGBDATA            Address of the user data
 000978 4110 0001            00001  6219  3  837.                    INCR  RS,SCCBNRCV             Count received buffers
 00097C 5E10 7020            00020  6223  3          +
 000980 5010 7020            00020  6224  3          +
 DROP   MSGBUF,R4                   6225  2  838.                  END   ,
 DROP   MCCB,R5                     6234  1  839.                END   ,
 DROP   SCCB,R7                     6243     840.              END   ,
 000984 A128           00984 00880  6252     841.              ELSEIF (@RY,EQ,'RCCB'),BEGIN  Requestor...so its a reply
 000984 47F0 A190            009F0  6258             +
 000988 D503 A530 7000 00D90 00000  6271             +
 00098E 4770 A190            009F0  6272             +
 USING  RCCB,R7                     6277  1  842.                WITH  (RCCB,RY)
                                    6290  1  843.     *
                                    6291  1  844.     * Check to see if any replies are queued.
                                    6292  1  845.     *
 000992 5820 7014/1222       00014  6293  1  846.                LT    RA,RCCBMBH              Get address of first buffer
 000998 4770 A13E/1B00       0099E  6297  1  847.                IF    Z,'CLEAR RVR'           No replies queued
 00099E A142           0099E 0099A  6317  1  848.                ELSE  BEGIN                   Some replies queued
 00099E 47F0 A190            009F0  6322  1          +
 0009A2 5800 7010            00010  6328  2  849.                  LOCKOB RCCBLOCK               Get exclusive access
 0009A6 5000 D048            00000  6337  2          +
 0009AA 58F0 A51C/0DEF       00D7C  6340  2          +
 USING  MSGBUF,R2                   6342  2  850.                  WITH  (MSGBUF,RA),BEGIN
 0009B0 D203 7014 2004 00014 00004  6356  3  851.                    MVC   RCCBMBH,MSGBNEXT        Update the chain
 0009B6 5920 7018            00018  6357  3  852.                    IF    (RA,EQ,RCCBMBT),BEGIN   That was the last one
 0009BA 4770 A166            009C6  6369  3          +
 0009BE 4100 7010            00010  6374  4  853.                      LA    RVR,RCCBMBH-MSGBNEXT+MSGBUF       Empty q value
 0009C2 5000 7018            00018  6375  4  854.                      ST    RVR,RCCBMBT             Saved in the tail pointer
 0009C6                             6376  3  855.                    END   ,
 0009C6 5800 7010            00010  6380  3  856.                    LOCKRL RCCBLOCK               Free the lock
 0009CA 5000 D048            00000  6389  3          +
 0009CE 58F0 A520/0DEF       00D80  6392  3          +
 0009D4 9204 2019      00019        6394  3  857.                    SET   MSGBDONE                Set the buffer state
 0009D8 D203 C050 2024 00008 00024  6400  3  858.                    MVC   @MSGRSEQ,MSGBSEQ        Tell caller about the seq #
 0009DE D203 C054 2020 0000C 00020  6401  3  859.                    MVC   @MSGRVAL,MSGBRVAL       And value set on send
 0009E4 4810 201A            0001A  6402  3  860.                    LH    RS,MSGBLEN              Get the user data length
 0009E8 5010 C04C            00004  6403  3  861.                    ST    RS,@MSGRLEN             Save the length
 0009EC 4100 2028            00028  6404  3  862.                    LA    RVR,MSGBDATA            And the buffer address
 DROP   MSGBUF,R2                   6405  2  863.                  END   ,
 0009F0                             6413  1  864.                END   ,
 0009F0 A194           009F0 00990  6417     865.              END   ELSE,'KAPUT BADCHAN'
 DROP   RCCB,R7
 0009F0 47F0 A1A4            00A04  6431             +
 0009F4 4110 0001            00001  6445  1          +
 0009F8 4100 0080            00080  6446  1          +
 0009FC 8900 0018/1610       00018  6447  1          +
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   42
0Current Usings:  (RTCB,R9) (MSGRECV,R10) (@MSGRECV-72,R12) (@LOCKS-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000A02 0A0D                        6449             +
 000A04 981F C008            00008  6454     866.              PEND  ,
 DROP   @MSGRECV-72,R12
 DROP   MSGRECV,R10
 000A08 9680 C000/0B0E 00000        6469             +
 DROP   @LOCKS-72,R13
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   43
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   6479     868.     *******************************************************************
                                    6480     869.     *                                                                 *
                                    6481     870.     *    MSGCAN - Cancel a message previously sent.                   *
                                    6482     871.     *                                                                 *
                                    6483     872.     *     Input - @MSGCAN                                             *
                                    6484     873.     *                                                                 *
                                    6485     874.     *    Output - None                                                *
                                    6486     875.     *                                                                 *
                                    6487     876.     *******************************************************************
-
 000A0E                             6489     878.     MSGCAN   PROC  @MSGCAN,SCOPE=GLOBAL
 000A0E D4E2C7C3C1D54040            6495             +
 000A16 0008/0000                   6496             +
 000A1A 900F D004/18AF       00004  6498             +
 USING  MSGCAN,R10
 000A20 50D0 C000/18CD       00000  6513             +
 000A26 9680 C000      00000        6515             +
 USING  @MSGCAN-72,R12
 000A2A 41D0 C050            00050  6529             +
                                    6530     879.     *
                                    6531     880.     * Check out the parms
                                    6532     881.     *
 000A2E 5870 C048            00000  6533     882.              L     RY,@MSGCCHN             Get the channel block ptr
 000A32                             6534     883.              IF    (@RY,NE,'RCCB'),'KAPUT BADCHAN'
 000A32 D503 A376 7000 00D90 00000  6544             +
 000A38 4780 A032            00A4C  6545             +
 000A3C 4110 0001            00001  6558  1          +
 000A40 4100 0080            00080  6559  1          +
 000A44 8900 0018/1610       00018  6560  1          +
 000A4A 0A0D                        6562             +
 USING  RCCB,R7                     6567     884.              USING RCCB,RY
 000A4C 5990 700C            0000C  6576     885.              IF    (RTCBR,NE,RCCBRTCB),'KAPUT BADCHAN'
 000A50 4780 A04A            00A64  6588             +
 000A54 4110 0001            00001  6601  1          +
 000A58 4100 0080            00080  6602  1          +
 000A5C 8900 0018/1610       00018  6603  1          +
 000A62 0A0D                        6605             +
                                    6610     886.     *
                                    6611     887.     * See if we can find the buffer on the chain
                                    6612     888.     *
 000A64 5840 C04C            00004  6613     889.              L     RJ,@MSGCSEQ             Sequence number to cancel
 000A68 5800 7010            00010  6614     890.              LOCKOB RCCBLOCK               Lock up the chain
 USING  @LOCKS-72,R13
 000A6C 5000 D048            00000  6630             +
 000A70 58F0 A362/0DEF       00D7C  6633             +
                                    6635     891.     *
                                    6636     892.     * Loop through all buffers allocated by this task
                                    6637     893.     *
 000A76 5830 701C/1233       0001C  6638     894.              LT    RB,RCCBMBCH             Get first buffer ptr
 000A7C 4780 A078            00A92  6642     895.              WHILE NZ,BEGIN                'till the end of the chain
 USING  MSGBUF,R3                   6655  1  896.                WITH  (MSGBUF,RB)
 000A80 5940 3024            00024  6668  1  897.                IF    (RJ,EQ,MSGBSEQ),CANFND  Found the one we seek
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   44
0Current Usings:  (MSGBUF,R3) (RCCB,R7) (RTCB,R9) (MSGCAN,R10) (@MSGCAN-72,R12) (@LOCKS-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000A84 4780 A08A            00AA4  6682  1          +
 000A88 5830 3008/1233       00008  6688  1  898.                LT    RB,MSGBCHN              Address of the next buf
 000A8E 47F0 A062            00A7C  6692     899.              END   ,
 DROP   MSGBUF,R3
                                    6702     900.     *
                                    6703     901.     * No matching buffer was found... skip the processing step
                                    6704     902.     *
 000A92 5800 7010            00010  6705     903.              LOCKRL RCCBLOCK               Release the lock
 000A96 5000 D048            00000  6714             +
 000A9A 58F0 A366/0DEF       00D80  6717             +
 000AA0 47F0 A19E            00BB8  6719     904.              B     CANDONE                 And skip the rest
                                    6720     905.     *
                                    6721     906.     * The message was found.  Check on its status and do the right
                                    6722     907.     * thing based on what it is.
                                    6723     908.     *
 USING  MSGBUF,R3                   6724     909.     CANFND   WITH  (MSGBUF,RB),BEGIN       Set up the addressing
 000AA4 9501 3019      00019        6739  1  910.                IF    MSGBSENT,BEGIN          Queued for receiver
 000AA8 4770 A130            00B4A  6749  1          +
                                    6754  2  911.     *
                                    6755  2  912.     * It appears the the message has not yet been received.  Get the
                                    6756  2  913.     * lock on the MCCB and check it again.
                                    6757  2  914.     *
 000AAC 5840 7008            00008  6758  2  915.                  L     RJ,RCCBMCCB             Get location of the MCCB
 USING  MCCB,R4                     6759  2  916.                  WITH  (MCCB,RJ)
 000AB0 5800 401C            0001C  6772  2  917.                  LOCKOB MCCBQLCK               Lock it up
 000AB4 5000 D048            00000  6781  2          +
 000AB8 58F0 A362/0DEF       00D7C  6784  2          +
 000ABE 9501 3019      00019        6786  2  918.                  IF    ~MSGBSENT,BEGIN         Things have changed
 000AC2 4780 A0BE            00AD8  6796  2          +
 000AC6 5800 401C            0001C  6801  3  919.                    LOCKRL MCCBQLCK               release the lock
 000ACA 5000 D048            00000  6810  3          +
 000ACE 58F0 A366/0DEF       00D80  6813  3          +
 000AD4 47F0 A134            00B4E  6815  3  920.                    B     CANST1                  Try for another case
 000AD8                             6816  2  921.                  END   ,
                                    6820  2  922.     *
                                    6821  2  923.     * It has truly not yet been received.  Move the message to the
                                    6822  2  924.     * reply queue of the requestor.  First find the spot.
                                    6823  2  925.     *
 000AD8 4120 4020            00020  6824  2  926.                  LA    RA,MCCBMBH-MSGBNEXT+MSGBUF        Dummy first one
 DROP   MSGBUF,R3                   6825  2  927.                  WITH  (MSGBUF,RA),BEGIN
 USING  MSGBUF,R2
 000ADC 1853                        6847  3  928.                    LR    RK,RB                   Dummy first in prio chain
 000ADE 5930 2004            00004  6848  3  929.                    WHILE (RB,NE,MSGBNEXT),BEGIN
 000AE2 4780 A0DE            00AF8  6862  3          +
 000AE6 5820 2004            00004  6867  4  930.                      L     RA,MSGBNEXT                       Get the next one
 000AEA 5930 200C            0000C  6868  4  931.                      IF    (RB,EQ,MSGBPEND),'LR RK,RA' First of prio chain
 000AEE 4770 A0DA/1852       00AF4  6880  4          +
 000AF4 47F0 A0C4            00ADE  6891  3  932.                    END   ,
 USING  MSGBUF,R3                   6896  2  933.                  END   ,
 DROP   MSGBUF,R2
                                    6913  2  934.     *
                                    6914  2  935.     * Found the buffer in front of the one to be removed...it is pointed
                                    6915  2  936.     * to by RA.
                                    6916  2  937.     *
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   45
0Current Usings:  (MSGBUF,R3) (MCCB,R4) (RCCB,R7) (RTCB,R9) (MSGCAN,R10) (@MSGCAN-72,R12) (@LOCKS-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000AF8 5810 3004            00004  6917  2  938.                  L     RS,MSGBNEXT             Address of the buffer after
 000AFC 5930 300C            0000C  6918  2  939.                  IF    (RB,NE,MSGBPEND),BEGIN  Must fix up the prio chain
 000B00 4780 A0F0            00B0A  6930  2          +
 000B04 D203 100C 300C 0000C 0000C  6935  3  940.                    MVC   MSGBPEND-MSGBUF(,RS),MSGBPEND     Do the fixup
 000B0A                             6936  2  941.                  END   ,
 000B0A 5020 500C            0000C  6940  2  942.                  ST    RA,MSGBPEND-MSGBUF(,RK) Make first prio point to prev
 000B0E 5010 2004            00004  6941  2  943.                  ST    RS,MSGBNEXT-MSGBUF(,RA) Remove the element
 000B12 5800 401C            0001C  6942  2  944.                  LOCKRL MCCBQLCK
 000B16 5000 D048            00000  6951  2          +
 000B1A 58F0 A366/0DEF       00D80  6954  2          +
                                    6956  2  945.     *
                                    6957  2  946.     * Then queue it on the requestor's reply queue
                                    6958  2  947.     *
 000B20                             6959  2  948.                  CLEAR MSGBNEXT                This one is the last
 000B20 D703 3004 3004 00004 00004  6965  2          +
 000B26 9203 3019      00019        6966  2  949.                  SET   MSGBREPL                It is now a reply
 000B2A 5820 7018            00018  6972  2  950.                  L     RA,RCCBMBT              Address of last buffer
 000B2E 5030 2004            00004  6973  2  951.                  WITH  (MSGBUF,RA),'ST RB,MSGBNEXT'
 DROP   MSGBUF,R3
 USING  MSGBUF,R2
 USING  MSGBUF,R3
 DROP   MSGBUF,R2
 000B32 5030 7018            00018  7014  2  952.                  ST    RB,RCCBMBT              This buffer is now the last
 DROP   @LOCKS-72,R13               7015  2  953.                  FPOST RCCBECB                 Post the ecb
 USING  @FPOST-72,R13
 000B36 D703 D048 D048 00000 00000  7036  2          +
 000B3C 41E0 7024            00024  7043  2          +
 000B40 50E0 D048            00000  7044  2          +
 000B44 58F0 A342/0DEF       00D5C  7047  2          +
 DROP   MCCB,R4                     7049  1  954.                END   ,
 000B4A A134           00B4A 00AAA  7058  1  955.     CANST1     ELSEIF MSGBRCVD,BEGIN         It has been received.
 000B4A 47F0 A190            00BAA  7064  1          +
 000B4E 9502 3019      00019        7077  1          +
 000B52 4770 A190            00BAA  7078  1          +
                                    7083  2  956.     *
                                    7084  2  957.     * Since the message has been received by a server, a cancel
                                    7085  2  958.     * request must be formatted and queued to the proper server. Since
                                    7086  2  959.     * we currently hold the lock on the RCCB, the server won't be able
                                    7087  2  960.     * to free or reply to the message until we are done.
                                    7088  2  961.     *
 DROP   @FPOST-72,R13               7089  2  962.                  MEMGET L'CANREQ,TYPE=GLOBAL
 USING  @MEMGET-72,R13
 000B56 D709 D048 D048 00000 00000  7111  2          +
 000B5C 4100 0010            00010  7118  2          +
 000B60 5000 D04C            00004  7119  2          +
 000B64 9213 D051      00009        7133  2          +
 000B68 58F0 A392/0DEF       00DAC  7136  2          +
 000B6E 1850                        7138  2  963.                  LR    RK,RVR
 USING  CANREQ,R5                   7139  2  964.                  WITH  (CANREQ,RK)
 000B70 D203 5000 A396 00000 00DB0  7152  2  965.                  MVC   CANREQ(4),=C'CANR'
 000B76 5030 500C            0000C  7153  2  966.                  ST    RB,CANRBUF              Save the buffer address
 000B7A 5040 5008            00008  7154  2  967.                  ST    RJ,CANRSEQ              And the sequence number
 000B7E 5860 3014            00014  7155  2  968.                  L     RX,MSGBSCCB             Get the SCCB of the processor
 USING  SCCB,R6                     7156  2  969.                  WITH  (SCCB,RX)
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   46
0Current Usings:  (MSGBUF,R3) (CANREQ,R5) (SCCB,R6) (RCCB,R7) (RTCB,R9) (MSGCAN,R10) (@MSGCAN-72,R12) (@LOCKS-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000B82 5800 6008            00008  7169  2  970.                  LOCKOB SCCBLOCK               Lock up the Cancel queue
 DROP   @MEMGET-72,R13
 USING  @LOCKS-72,R13
 000B86 5000 D048            00000  7188  2          +
 000B8A 58F0 A362/0DEF       00D7C  7191  2          +
 000B90 5810 601C            0001C  7193  2  971.                  L     RS,SCCBCANT             Get end ptr
 000B94 5050 1004            00004  7194  2  972.                  WITH  (CANREQ,RS),'ST RK,CANRNEXT'
 DROP   CANREQ,R5
 USING  CANREQ,R1
 USING  CANREQ,R5
 DROP   CANREQ,R1
 000B98 5050 601C            0001C  7235  2  973.                  ST    RK,SCCBCANT             It is the last one now
 000B9C 5800 6008            00008  7236  2  974.                  LOCKRL SCCBLOCK
 000BA0 5000 D048            00000  7245  2          +
 000BA4 58F0 A366/0DEF       00D80  7248  2          +
 DROP   SCCB,R6                     7250  1  975.                END   ,
 DROP   CANREQ,R5
                                    7264  1  976.     *
                                    7265  1  977.     * Any other cases, we don't do anything cause it is either not yet
                                    7266  1  978.     * sent or has already been processed and the reply is waiting.
                                    7267  1  979.     *
 000BAA 5800 7010            00010  7268  1  980.                LOCKRL RCCBLOCK               Free lock on this side
 000BAE 5000 D048            00000  7277  1          +
 000BB2 58F0 A366/0DEF       00D80  7280  1          +
 DROP   MSGBUF,R3                   7282     981.              END   ,
 000BB8 981F C008            00008  7290     982.     CANDONE  PEND  ,
 DROP   @MSGCAN-72,R12
 DROP   MSGCAN,R10
 000BBC 9680 C000/0B0E 00000        7306             +
 DROP   @LOCKS-72,R13
 DROP   RCCB,R7                     7315     983.              DROP  RY
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   47
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0                                   7323     985.     *******************************************************************
                                    7324     986.     *                                                                 *
                                    7325     987.     *   MSGFREE - Free a previously allocated message buffer.         *
                                    7326     988.     *                                                                 *
                                    7327     989.     *     Input - @MSGFREE                                            *
                                    7328     990.     *                                                                 *
                                    7329     991.     *    Output - None                                                *
                                    7330     992.     *                                                                 *
                                    7331     993.     *******************************************************************
-
 000BC2                             7333     995.     MSGFREE  PROC  @MSGFREE,SCOPE=GLOBAL
 000BC2 D4E2C7C6D9C5C540            7339             +
 000BCA 0008/0000                   7340             +
 000BCE 900F D004/18AF       00004  7342             +
 USING  MSGFREE,R10
 000BD4 50D0 C000/18CD       00000  7357             +
 000BDA 9680 C000      00000        7359             +
 USING  @MSGFREE-72,R12
 000BDE 41D0 C050            00050  7373             +
 000BE2 5860 C04C            00004  7374     996.              L     RX,@MSGFBUF             Address of buffer to free
 000BE6 5B60 A1CA            00D98  7375     997.              S     RX,=A(L'MSGBUF)         Get address of the header
 USING  MSGBUF,R6                   7376     998.              USING MSGBUF,RX
 000BEA                             7385     999.              IF    (MSGBUF,NE,'MSGB'),'KAPUT BADBUF'
 000BEA D503 A1CE 6000 00D9C 00000  7396             +
 000BF0 4780 A036            00C04  7397             +
 000BF4 4110 0001            00001  7410  1          +
 000BF8 4100 0080            00080  7411  1          +
 000BFC 8900 0018/1610       00018  7412  1          +
 000C02 0A0D                        7414             +
 000C04 5870 C048            00000  7419    1000.              L     RY,@MSGFCHN             And of the channel
                                    7420    1001.     *
                                    7421    1002.     * Validate the information passed to us
                                    7422    1003.     *
 000C08                             7423    1004.              IF    (@RY,EQ,'RCCB'),BEGIN   Requestor
 000C08 D503 A1C2 7000 00D90 00000  7433             +
 000C0E 4770 A094            00C62  7434             +
 USING  RCCB,R7                     7439  1 1005.                WITH  (RCCB,RY)
 000C12 5990 700C            0000C  7452  1 1006.                IF    (RTCBR,NE,RCCBRTCB),'KAPUT BADCHAN'
 000C16 4780 A05C            00C2A  7464  1          +
 000C1A 4110 0001            00001  7477  2          +
 000C1E 4100 0080            00080  7478  2          +
 000C22 8900 0018/1610       00018  7479  2          +
 000C28 0A0D                        7481  1          +
 000C2A 5970 6010            00010  7486  1 1007.                IF    (RY,NE,MSGBRCCB),'KAPUT BADCHAN'
 000C2E 4780 A074            00C42  7498  1          +
 000C32 4110 0001            00001  7511  2          +
 000C36 4100 0080            00080  7512  2          +
 000C3A 8900 0018/1610       00018  7513  2          +
 000C40 0A0D                        7515  1          +
 000C42 9500 6019      00019        7520  1 1008.                IF    (~MSGBALOC,AND,~MSGBDONE),'KAPUT MSGSTATE'
 000C46 4780 A094            00C62  7532  1          +
 000C4A 9504 6019      00019        7543  1          +
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   48
0Current Usings:  (MSGBUF,R6) (RCCB,R7) (RTCB,R9) (MSGFREE,R10) (@MSGFREE-72,R12)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000C4E 4780 A094            00C62  7544  1          +
 000C52 4110 0001            00001  7557  2          +
 000C56 4100 0080            00080  7558  2          +
 000C5A 8900 0018/1610       00018  7559  2          +
 000C60 0A0D                        7561  1          +
 DROP   RCCB,R7                     7566    1009.              END   ,
 000C62 A098           00C62 00C10  7575    1010.              ELSEIF (@RY,EQ,'SCCB'),BEGIN  Server doing it
 000C62 47F0 A0EE            00CBC  7581             +
 000C66 D503 A1D2 7000 00DA0 00000  7594             +
 000C6C 4770 A0EE            00CBC  7595             +
 USING  SCCB,R7                     7600  1 1011.                WITH  (SCCB,RY)
 000C70 5990 7010            00010  7613  1 1012.                IF    (RTCBR,NE,SCCBRTCB),'KAPUT BADCHAN'
 000C74 4780 A0BA            00C88  7625  1          +
 000C78 4110 0001            00001  7638  2          +
 000C7C 4100 0080            00080  7639  2          +
 000C80 8900 0018/1610       00018  7640  2          +
 000C86 0A0D                        7642  1          +
 000C88 5970 6014            00014  7647  1 1013.                IF    (RY,NE,MSGBSCCB),'KAPUT BADCHAN'
 000C8C 4780 A0D2            00CA0  7659  1          +
 000C90 4110 0001            00001  7672  2          +
 000C94 4100 0080            00080  7673  2          +
 000C98 8900 0018/1610       00018  7674  2          +
 000C9E 0A0D                        7676  1          +
 000CA0 9502 6019      00019        7681  1 1014.                IF    ~MSGBRCVD,'KAPUT MSGSTATE'
 000CA4 4780 A0EA            00CB8  7691  1          +
 000CA8 4110 0001            00001  7704  2          +
 000CAC 4100 0080            00080  7705  2          +
 000CB0 8900 0018/1610       00018  7706  2          +
 000CB6 0A0D                        7708  1          +
 000CB8 5870 6010            00010  7713  1 1015.                L     RY,MSGBRCCB                       Point at the owner
 DROP   SCCB,R7                     7714    1016.              END   ,
                                    7723    1017.     *
                                    7724    1018.     * At this point RY points to the RCCB, RX to the message and the
                                    7725    1019.     * state and validity has been verified.
                                    7726    1020.     *   Now it is time to remove the message.
                                    7727    1021.     *
 USING  RCCB,R7                     7728    1022.              USING RCCB,RY
 000CBC 5800 7010            00010  7737    1023.              LOCKOB RCCBLOCK               Lock up the chain
 USING  @LOCKS-72,R13
 000CC0 5000 D048            00000  7753             +
 000CC4 58F0 A1AE/0DEF       00D7C  7756             +
 000CCA 4120 701C            0001C  7758    1024.              LA    RA,RCCBMBCH             Addr of pointer
 000CCE 5830 2000            00000  7759    1025.              L     RB,@RA                  Addr of first buffer
 000CD2 1963/4780 A116       00CE4  7760    1026.              WHILE (RX,NE,RB),BEGIN
 DROP   MSGBUF,R6                   7777  1 1027.                WITH  (MSGBUF,RB)
 USING  MSGBUF,R3
 000CD8 4120 3008            00008  7798  1 1028.                LA    RA,MSGBCHN              Addr of the next pointer
 000CDC 5830 3008            00008  7799  1 1029.                L     RB,MSGBCHN              And the addr of the buffer
 000CE0 47F0 A104            00CD2  7800    1030.              END   ,
 USING  MSGBUF,R6
 DROP   MSGBUF,R3
                                    7819    1031.     *
                                    7820    1032.     * Found it...remove it.
                                    7821    1033.     *
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   49
0Current Usings:  (MSGBUF,R6) (RCCB,R7) (RTCB,R9) (MSGFREE,R10) (@MSGFREE-72,R12) (@LOCKS-72,R13)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0000CE4 D203 2000 6008 00000 00008  7822    1034.              MVC   @RA(4),MSGBCHN          Remove it from the queue
 000CEA 5800 7010            00010  7823    1035.              LOCKRL RCCBLOCK
 000CEE 5000 D048            00000  7832             +
 000CF2 58F0 A1B2/0DEF       00D80  7835             +
 000CF8 4120 0028            00028  7837    1036.              LA    RA,L'MSGBUF             Get the length of the header
 000CFC 4A20 601A            0001A  7838    1037.              AH    RA,MSGBLEN              Add user length = total len
                                    7839    1038.     *        MEMFREE (RA),A=(RB),TYPE=GLOBAL        Free the memory
                                    7840    1039.   C MSBUFREL STORAGE RELEASE,ADDR=(RB),LENGTH=(RA),
 000D00 47F0 A13A/00         00D08          1040.                    SP=8,RELATED=MSBUFOB
 000D05 00/08/03/1802               7846             +
 000D0A 1813/58F0 A136       00D04  7851             +
 000D10 58E0 0010            00010  7853             +
 000D14 58EE 0304            00304  7854             +
 000D18 58EE 00CC            000CC  7855             +
 000D1C B218 E000      00000        7856             +
                                    7857    1041.     *
                                    7858    1042.     * All done... Return to the user.
                                    7859    1043.     *
 000D20 981F C008            00008  7860    1044.              PEND
 DROP   @MSGFREE-72,R12
 DROP   MSGFREE,R10
 000D24 9680 C000/0B0E 00000        7875             +
 DROP   @LOCKS-72,R13
 DROP   MSGBUF,R6                   7884    1045.              DROP  RX,RY
 DROP   RCCB,R7
 000D30                             7897    1046.              END   .
 000D30 D4C3C3E340D49684            7900                             =CL16'MCCT Mods'
 000D40 6060D4C3C3C26060            7901                             =CL8'--MCCB--'
 000D48 6060D4E2C7D86060            7902                             =CL8'--MSGQ--'
 000D50 00000000                    7903                             =V(POOLGET)
 000D54 D3D6C3D2                    7904                             =C'LOCK'
 000D58 D3D8C540                    7905                             =CL4'LQE'
 000D5C 00000000                    7906                             =V(FPOST)
 000D60 00000000                    7907                             =V(FWAIT)
 000D64 D3D8C540                    7908                             =C'LQE '
 000D68 D3D2C3E3                    7909                             =CL4'LKCT'
 000D6C 00000028                    7910                             =A(40)
 000D70 D4C3C3E3                    7911                             =CL4'MCCT'
 000D74 00000000                    7912                             =V(LOCKCRE)
 000D78 E2C3C3C2                    7913                             =CL4'SCCB'
 000D7C 00000000                    7914                             =V(LOCKOB)
 000D80 00000000                    7915                             =V(LOCKREL)
 000D84 D9C3C3C2                    7916                             =CL4'RCCB'
 000D88 D4C3C3C2                    7917                             =CL4'MCCB'
 000D8C 000003E8                    7918                             =A(1000)
 000D90 D9C3C3C2                    7919                             =C'RCCB'
 000D94 D4E2C7C2                    7920                             =CL4'MSGB'
 000D98 00000028                    7921                             =A(L'MSGBUF)
 000D9C D4E2C7C2                    7922                             =C'MSGB'
 000DA0 E2C3C3C2                    7923                             =C'SCCB'
 000DA4 00000000                    7924                             =V(MEMFREE)
 000DA8 FFFFFFFF                    7925                             =A(-1)
 000DAC 00000000                    7926                             =V(MEMGET)
 000DB0 C3C1D5D9       00DB4 00DB4  7927                             =C'CANR'
1MSGSERV  (MSGS00) (09:41) (22MAR04) ORVYL'S Message Services                                                               Page   50
0Current Usings:  (RTCB,R9)
0Loc    Object Code    Addr1 Addr2  Stmt Lv Lineno    Source Statement           (Hibal 5, Asmedit 3.3)  HLASM R4.0  2004/03/22 09.41
+___    ______ ____    _____ _____  ____ __ ______    ______ _________
0
1MSGSERV  (MSGS00) (09:41) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   51
-Symbol   Length   Value     Id    R Type   Defn References                                  HLASM R4.0  2004/03/22 09.41
0$$$@R0        1 00000000 FFFFFFFE     J     714 1010
 $$$@R1        1 00000000 FFFFFFFD     J     727 1022
 $$$@R10       1 00000000 FFFFFFF4     J     844 1142
 $$$@R11       1 00000000 FFFFFFF3     J     857 1154
 $$$@R12       1 00000000 FFFFFFF2     J     870 1166
 $$$@R13       1 00000000 FFFFFFF1     J     883 1178
 $$$@R14       1 00000000 FFFFFFF0     J     896 1190
 $$$@R15       1 00000000 FFFFFFEF     J     909 1202
 $$$@R2        1 00000000 FFFFFFFC     J     740 1034
 $$$@R3        1 00000000 FFFFFFFB     J     753 1046
 $$$@R4        1 00000000 FFFFFFFA     J     766 1058
 $$$@R5        1 00000000 FFFFFFF9     J     779 1070
 $$$@R6        1 00000000 FFFFFFF8     J     792 1082
 $$$@R7        1 00000000 FFFFFFF7     J     805 1094
 $$$@R8        1 00000000 FFFFFFF6     J     818 1106
 $$$@R9        1 00000000 FFFFFFF5     J     831 1118  1130
 $$$C1MSGSERV
               1 00000DB4 00000001     J    7928 7930
 $$$R@FMCCB
               1 00000000 FFFFFFD5     J    4182 4195  4195
 $$$R@FPOST
               1 00000000 FFFFFFE0     J    1966 1979  1979
 $$$R@FWAIT
               1 00000000 FFFFFFDF     J    1991 2004  2004
 $$$R@LOCKCRE
               1 00000000 FFFFFFEC     J    1391 1413  1413
 $$$R@LOCKS
               1 00000000 FFFFFFEB     J    1419 1432  1432
 $$$R@MEMFREE
               1 00000000 FFFFFFE1     J    1890 1953  1953
 $$$R@MEMGET
               1 00000000 FFFFFFE2     J    1806 1878  1878
 $$$R@MEMINIT
               1 00000000 FFFFFFE3     J    1737 1794  1794
 $$$R@MEMORY
               1 00000000 FFFFFFE4     J    1570 1724  1724
 $$$R@MSGATT
               1 00000000 FFFFFFEA     J    1438 1452  1452
 $$$R@MSGCAN
               1 00000000 FFFFFFE5     J    1544 1558  1558
 $$$R@MSGFREE
               1 00000000 FFFFFFE6     J    1524 1538  1538
 $$$R@MSGGBUF
               1 00000000 FFFFFFE9     J    1458 1472  1472
 $$$R@MSGRECV
               1 00000000 FFFFFFE7     J    1501 1518  1518
 $$$R@MSGSEND
               1 00000000 FFFFFFE8     J    1478 1495  1495
 $$$RCANREQ
               1 00000000 FFFFFFD6     J    2311 2332  2332
 $$$RCBAT      1 00000000 FFFFFFED     J    1330 1378  1378
 $$$RLOCKCB
               1 00000000 FFFFFFDD     J    2034 2060  2060
 $$$RLOCKCT
               1 00000000 FFFFFFDE     J    2010 2028  2028
1MSGSERV  (MSGS00) (09:41) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   52
 $$$RLQE       1 00000000 FFFFFFDC     J    2066 2087  2087
 $$$RMCCB      1 00000000 FFFFFFDA     J    2117 2143  2143
 $$$RMCCT      1 00000000 FFFFFFDB     J    2093 2111  2111
 $$$RMSGBUF
               1 00000000 FFFFFFD7     J    2213 2305  2305
 $$$RRCCB      1 00000000 FFFFFFD8     J    2180 2207  2207
 $$$RRTCB      1 00000000 FFFFFFEE     J    1241 1306  1306
 $$$RSCCB      1 00000000 FFFFFFD9     J    2149 2174  2174
 $$$100F       2 00000B0A 00000001     H    6939 6930B
 $$$101E       2 00000B4E 00000001     H    7069 7062
 $$$101F       2 00000BAA 00000001     H    7263 7064B 7078B
 $$$104F       2 00000C04 00000001     H    7418 7397B
 $$$105B       4 00000C0E 00000001     I    7434 7578
 $$$105F       2 00000C62 00000001     H    7574 7434B 7577
 $$$106F       2 00000C2A 00000001     H    7485 7464B
 $$$107F       2 00000C42 00000001     H    7519 7498B
 $$$108F       2 00000C62 00000001     H    7565 7532B 7544B
 $$$110E       2 00000C66 00000001     H    7585 7579
 $$$110F       2 00000CBC 00000001     H    7722 7581B 7595B
 $$$112F       2 00000C88 00000001     H    7646 7625B
 $$$113F       2 00000CA0 00000001     H    7680 7659B
 $$$114F       2 00000CB8 00000001     H    7712 7691B
 $$$115F       2 00000CE4 00000001     H    7818 7772B
 $$$115S       2 00000CD2 00000001     H    7765 7817B
 $$$32F        2 000000CE 00000001     H    2594 2583B
 $$$32S        2 000000BA 00000001     H    2575 2593B
 $$$36F        2 00000128 00000001     H    2757 2736B
 $$$40F        2 000001C8 00000001     H    3019 2998B
 $$$41F        2 000001E2 00000001     H    3052 3031B
 $$$42F        2 000001FA 00000001     H    3095 3074B
 $$$47F        2 000003B4 00000001     H    3824 3782B
 $$$50F        2 000004E8 00000001     H    4346 4321B
 $$$50S        2 000004D0 00000001     H    4315 4345B
 $$$54F        2 000005AE 00000001     H    4620 4599B
 $$$55F        2 000005C6 00000001     H    4654 4633B
 $$$57F        2 0000067A 00000001     H    4881 4860B
 $$$58B        4 00000684 00000001     I    4898 5423
 $$$58F        2 00000796 00000001     H    5419 4898B 5422
 $$$59F        2 000006A0 00000001     H    4953 4932B
 $$$60F        2 000006C0 00000001     H    4999 4966B 4978B
 $$$65F        2 00000786 00000001     H    5373 5294B 5357B
 $$$65S        2 0000075E 00000001     H    5288 5372B
 $$$68B        4 000007A0 00000001     I    5440 5715
 $$$68E        2 0000079A 00000001     H    5430 5424
 $$$68F        2 00000836 00000001     H    5712 5426B 5440B 5714
 $$$70F        2 000007BC 00000001     H    5494 5473B
 $$$71F        2 000007D4 00000001     H    5528 5507B
 $$$72F        2 000007F0 00000001     H    5577 5556B
 $$$73E        2 0000083A 00000001     H    5722 5716
 $$$73F        2 0000084A 00000001     H    5740 5718B
 $$$75B        4 0000087E 00000001     I    5842 6255
 $$$75F        2 00000984 00000001     H    6251 5842B 6254
 $$$76F        2 0000089A 00000001     H    5896 5875B
 $$$77B        4 000008A0 00000001     I    5911 6051
 $$$77F        2 00000900 00000001     H    6048 5911B 6050
 $$$78F        2 000008CC 00000001     H    5974 5964B
 $$$79E        2 00000904 00000001     H    6058 6052
 $$$79F        2 00000984 00000001     H    6242 6054B
 $$$80B        4 0000091C 00000001     I    6111 6140
1MSGSERV  (MSGS00) (09:41) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   53
 $$$80F        2 00000930 00000001     H    6137 6111B 6139
 $$$81E        2 00000934 00000001     H    6147 6141
 $$$81F        2 00000984 00000001     H    6233 6143B
 $$$82F        2 00000946 00000001     H    6187 6178B
 $$$83B        4 0000098E 00000001     I    6272 6428
 $$$83E        2 00000988 00000001     H    6262 6256
 $$$83F        2 000009F0 00000001     H    6425 6258B 6272B 6427
 $$$85B        4 00000998 00000001     I    6303 6319
 $$$85F        2 0000099E 00000001     H    6316 6303B 6318
 $$$86E        2 000009A2 00000001     H    6326 6320
 $$$86F        2 000009F0 00000001     H    6416 6322B
 $$$87F        2 000009C6 00000001     H    6379 6369B
 $$$88E        2 000009F4 00000001     H    6435 6429
 $$$88F        2 00000A04 00000001     H    6453 6431B
 $$$90F        2 00000A4C 00000001     H    6566 6545B
 $$$91F        2 00000A64 00000001     H    6609 6588B
 $$$92F        2 00000A92 00000001     H    6701 6650B
 $$$92S        2 00000A7C 00000001     H    6647 6700B
 $$$95B        4 00000AA8 00000001     I    6749 7061
 $$$95F        2 00000B4A 00000001     H    7057 6749B 7060
 $$$96F        2 00000AD8 00000001     H    6819 6796B
 $$$97F        2 00000AF8 00000001     H    6895 6862B
 $$$97S        2 00000ADE 00000001     H    6853 6894B
 $$$99F        2 00000AF4 00000001     H    6890 6880B
 @FMCCB        8 00000000 FFFFFFD5     J    4195 3614U 3622M 3622  3957U 3965M 3965  4234U
 @FPOST        4 00000000 FFFFFFE0     J    1979 2547U 2555M 2555  3165U 3173M 3173  3800U 3808M 3808  5325U 5333M 5333
                                                 5678U 5686M 5686  7028U 7036M 7036
 @FPSTECB      4 00000000 FFFFFFE0     A    1972 2563M 3181M 3816M 5341M 5694M 7044M
 @FWAIT        4 00000000 FFFFFFDF     J    2004 2851U 2859M 2859
 @FWTECB       4 00000000 FFFFFFDF     A    1997 2864M
 @LOCKCRE     17 00000000 FFFFFFEC     J    1413 2382U 3482U 3490M 3490  3719U 3727M 3727  4063U 4071M 4071  4415U 4423M
                                                 4423  4444M 4444
 @LOCKFL       1 00000010 FFFFFFEC     R    1400 1404
 @LOCKID       4 00000000 FFFFFFEB     A    1425 2714  2978  3759M 3845M 4103M 4121M 4292M 4479M 4720M 4736M 5050M 5259M
                                                 5277M 5393M 5590M 5660M 5932M 5984M 6096M 6125M 6209M 6337M 6389M 6630M
                                                 6714M 6781M 6810M 6951M 7188M 7245M 7277M 7753M 7832M
 @LOCKNAM     16 00000000 FFFFFFEC     C    1397 2474  3491M 3728M 3729M 4072M 4073M 4424M 4425M 4445M 4446M
 @LOCKS        4 00000000 FFFFFFEB     J    1432 2709U 2970U 3753U 3839U 4097U 4286U 4473U 4714U 5044U 5387U 5926U 6090U
                                                 6624U 7182U 7747U
 @MEMCODE      1 00000003 FFFFFFE4     R    1640 1648  1657  1666  1676  1685  1694  1703  1712
 @MEMFREE     10 00000000 FFFFFFE1     J    1953 6007U 6015M 6015
 @MEMGET      10 00000000 FFFFFFE2     J    1878 7103U 7111M 7111
 @MEMLEN       4 00000004 FFFFFFE4     A    1716 2448M 2510M 3292M 3441M 3676M 4019M 4381M
 @MEMORY      12 00000000 FFFFFFE4     J    1724 2431U 2439M 2439  2500M 2500  3275U 3283M 3283  3424U 3432M 3432  3659U
                                                 3667M 3667  4002U 4010M 4010  4364U 4372M 4372
 @MEMPOOL      1 00000002 FFFFFFE4     R    1581 1589  1598  1607  1616  1625  1634
 @MFFTYPE      1 00000009 FFFFFFE1     R    1905 1916  1925  1934  1943
 @MFLEN        4 00000004 FFFFFFE1     A    1899 6023M
 @MFLL         8 00000000 FFFFFFE1     D    1896 1897
 @MFLOC        4 00000000 FFFFFFE1     A    1898 6024M
 @MFTYPE       2 00000008 FFFFFFE1     H    1901 1902
 @MGFTYPE      1 00000009 FFFFFFE2     R    1824 1832  1841  1850  1859  1868
 @MGLEN        4 00000004 FFFFFFE2     A    1815 7119M
 @MGLL         8 00000000 FFFFFFE2     D    1812 1813
 @MGTYPE       2 00000008 FFFFFFE2     H    1817 1821
 @MIFLAG       1 00000000 FFFFFFE3     R    1745 1749
 @MIWFLAG      1 00000001 FFFFFFE3     R    1757 1767  1776  1785
 @MSGATT      12 00000000 FFFFFFEA     J    1452 3597U 3940U
 @MSGCAN       8 00000000 FFFFFFE5     J    1558 6525U
1MSGSERV  (MSGS00) (09:41) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   54
 @MSGCCHN      4 00000000 FFFFFFE5     A    1550 6533
 @MSGCECB      4 00000008 FFFFFFEA     A    1445 3854M 4130M
 @MSGCNAM      8 00000000 FFFFFFEA     C    1444 3623  3966
 @MSGCSEQ      4 00000004 FFFFFFE5     A    1551 6613
 @MSGFBUF      4 00000004 FFFFFFE6     A    1531 7374
 @MSGFCHN      4 00000000 FFFFFFE6     A    1530 7419
 @MSGFREE      8 00000000 FFFFFFE6     J    1538 7369U
 @MSGGBUF      8 00000000 FFFFFFE9     J    1472 4572U
 @MSGGCHN      4 00000000 FFFFFFE9     A    1464 4577
 @MSGGLEN      4 00000004 FFFFFFE9     A    1465 4658
 @MSGRCHN      4 00000000 FFFFFFE7     A    1507 5830
 @MSGRECV     20 00000000 FFFFFFE7     J    1518 5822U
 @MSGRLEN      4 00000004 FFFFFFE7     A    1508 6217M 6403M
 @MSGRPRI      4 00000010 FFFFFFE7     A    1511 6215M
 @MSGRSEQ      4 00000008 FFFFFFE7     A    1509 5992M 6214M 6400M
 @MSGRVAL      4 0000000C FFFFFFE7     A    1510 6401M
 @MSGSBUF      4 00000004 FFFFFFE8     A    1485 4837
 @MSGSCHN      4 00000000 FFFFFFE8     A    1484 4886
 @MSGSEND     20 00000000 FFFFFFE8     J    1495 4829U
 @MSGSPRI      4 00000010 FFFFFFE8     A    1488 5016
 @MSGSSEQ      4 00000008 FFFFFFE8     A    1486 5065M
 @MSGSVAL      4 0000000C FFFFFFE8     A    1487 5015
 @RA           0 00000000 FFFFFFFC     @    1035 3030  7759  7822M
 @RY           0 00000000 FFFFFFF7     @    1095 4897  5439  5841  6271  6544  7433  7594
 @R0           0 00000000 FFFFFFFE     @     715  991U
 @R1           0 00000000 FFFFFFFD     @     728  987U 3344U 3522U 5648U 6045U 7233U
 @R10          0 00000000 FFFFFFF4     @     845  951U 2630U 2897U 3197U 3352U 3530U 3867U 4143U 4499U 4756U 5755U 6465U
                                                 7302U 7871U
 @R11          0 00000000 FFFFFFF3     @     858  947U
 @R12          0 00000000 FFFFFFF2     @     871  943U 2625U 2892U 3192U 3862U 4138U 4494U 4751U 5750U 6460U 7297U 7866U
 @R13          0 00000000 FFFFFFF1     @     884  939U 2544U 2641U 2908U 3208U 3363U 3479U 3541U 3656U 3716U 3750U 3797U
                                                 3836U 3878U 3999U 4060U 4094U 4154U 4361U 4412U 4470U 4510U 4767U 5322U
                                                 5384U 5675U 5766U 6004U 6087U 6476U 7025U 7100U 7179U 7313U 7882U
 @R14          0 00000000 FFFFFFF0     @     897  935U
 @R15          0 00000000 FFFFFFEF     @     910  931U
 @R2           0 00000000 FFFFFFFC     @     741  983U 2648U 2785U 3141U 4517U 5141U 5704U 6411U 6911U 7012U
 @R3           0 00000000 FFFFFFFB     @     754  979U 2915U 5243U 5369U 6697U 6839U 6987U 7288U 7814U
 @R4           0 00000000 FFFFFFFA     @     767  975U 6230U 7054U
 @R5           0 00000000 FFFFFFF9     @     780  971U 2654U 6239U 7208U 7260U
 @R6           0 00000000 FFFFFFF8     @     793  967U 3215U 3885U 4161U 4774U 5112U 5171U 5623U 5773U 7255U 7791U 7889U
 @R7           0 00000000 FFFFFFF7     @     806  963U 2410U 2660U 2921U 3221U 3370U 3548U 3891U 4167U 4265U 4523U 4780U
                                                 5027U 5408U 5416U 5709U 6248U 6422U 7320U 7571U 7719U 7895U
 @R8           0 00000000 FFFFFFF6     @     819  959U
 @R9           0 00000000 FFFFFFF5     @     832  955U
 BR           10 0000000A FFFFFFFF A   #    1136 2356M 2366U 2683M 2693U 2944M 2954U 3244M 3254U 3393M 3403U 3571M 3581U
                                                 3914M 3924U 4208M 4218U 4546M 4556U 4803M 4813U 5796M 5806U 6499M 6509U
                                                 7343M 7353U
 CANDONE       2 00000BB8 00000001     H    7293 6719B
 CANFND        2 00000AA4 00000001     H    6737 6682B
 CANRBUF       4 0000000C FFFFFFD6     A    2325 7153M
 CANREQ       16 00000000 FFFFFFD6     J    2332 3735  5947U 5969  6022  7118  7148U 7152M 7211U 7228U
 CANRNEXT      4 00000004 FFFFFFD6     A    2323 3735  5951  5969  7217M
 CANRSEQ       4 00000008 FFFFFFD6     A    2324 5992  7154M
 CANST1        2 00000B4E 00000001     H    7066 6815B
 CBAT        144 00000000 FFFFFFED     J    1378 2397U 3332U 3510U 4252U
 CBATLOCK      4 00000018 FFFFFFED     A    1345 2403  3337M
 CBATMSGS      4 0000002C FFFFFFED     A    1350 3515M 4258
 EPAR         15 0000000F FFFFFFFF A   #    1196 2356  2461M 2462B 2523M 2524B 2566M 2567B 2683  2867M 2868B 2944  3184M
                                                 3185B 3244  3305M 3306B 3393  3454M 3455B 3494M 3495B 3571  3631M 3632B
1MSGSERV  (MSGS00) (09:41) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   55
                                                 3689M 3690B 3732M 3733B 3762M 3763B 3819M 3820B 3848M 3849B 3914  3974M
                                                 3975B 4032M 4033B 4076M 4077B 4106M 4107B 4124M 4125B 4208  4295M 4296B
                                                 4394M 4395B 4428M 4429B 4449M 4450B 4482M 4483B 4546  4723M 4724B 4739M
                                                 4740B 4803  5053M 5054B 5262M 5263B 5280M 5281B 5344M 5345B 5396M 5397B
                                                 5593M 5594B 5663M 5664B 5697M 5698B 5796  5935M 5936B 5987M 5988B 6037M
                                                 6038B 6099M 6100B 6128M 6129B 6212M 6213B 6340M 6341B 6392M 6393B 6499
                                                 6633M 6634B 6717M 6718B 6784M 6785B 6813M 6814B 6954M 6955B 7047M 7048B
                                                 7136M 7137B 7191M 7192B 7248M 7249B 7280M 7281B 7343  7756M 7757B 7835M
                                                 7836B
 FMCCB         4 000004A2 00000001     I    4207 3631  3974  4218U
 FMCCBNAM      8 00000000 FFFFFFD5     C    4188 3623M 3966M 4326  4398  4424  4445
 FNDMCCB       2 00000556 00000001     H    4459 4335B
 FPOST         1 00000000 00000003     T    7906 7906
 FRLQE         4 0000020A 00000001     I    3117 3130B
 FWAIT         1 00000000 00000004     T    7907 7907
 GETFE         2 0000012C 00000001     H    2775 2798B
 HIBAL         1 00000000 FFFFFFFF     J     700  716   729   742   755   768   781   794   807   820   833   846   859
                                                  872   885   898   911  1012  1024  1036  1048  1060  1072  1084  1096
                                                 1108  1120  1132  1144  1156  1168  1180  1192  1204
 IHB1886B      4 000005D8 00000001     F    4671 4666B
 IHB1886F      1 000005D4 00000001     B    4667 4673
 IHB3791B      4 00000D08 00000001     F    7849 7844B
 IHB3791F      1 00000D04 00000001     B    7845 7852
 LOCKCB       52 00000000 FFFFFFDD     J    2060 2447  2471U 2473M 2722U 2735  2986U
 LOCKCHN       4 00000014 FFFFFFDD     A    2045 2599M
 LOCKCRE       4 00000022 00000001     I    2355 2350  2366U
 LOCKCRE       1 00000000 00000005     T    7912 7912
 LOCKCT       12 00000000 FFFFFFDE     J    2028 2419U 3291  3315U 3317M
 LOCKECHN      4 00000028 FFFFFFDD     A    2051 2479  2533
 LOCKECNT      4 00000008 FFFFFFDE     A    2021 2478  3318M
 LOCKFREE      4 00000018 FFFFFFDD     A    2047 2569M 2761  2789M 3117  3121M
 LOCKHEAD      4 00000004 FFFFFFDE     A    2020 2598  2600M
 LOCKINIT      4 0000024A 00000001     I    3243 3238  3254U
 LOCKNAME     16 00000004 FFFFFFDD     C    2044 2474M
 LOCKOB        4 000000F6 00000001     I    2682 2677  2693U
 LOCKOB        1 00000000 00000006     T    7914 7914
 LOCKOWNR      4 00000024 FFFFFFDD     A    2050 2885M 2990  3105M 3105
 LOCKPLUM      4 00000020 FFFFFFDD     A    2049 2568M 2807  2808M
 LOCKRCNT      4 00000030 FFFFFFDD     A    2053 2880  2881M
 LOCKREL       4 00000196 00000001     I    2943 2938  2954U
 LOCKREL       1 00000000 00000007     T    7915 7915
 LQE          24 00000000 FFFFFFDC     J    2087 2479  2487U 2509  2527M 2771U 2833U 3060U 3153U
 LQECHAIN      4 00000008 FFFFFFDC     A    2077 2479  2525M 2569  2581  2589
 LQEECB        4 00000014 FFFFFFDC     A    2080 2562  2863  3180
 LQEGET        2 00000072 00000001     H    2502 2529B
 LQELOCK       4 0000000C FFFFFFDC     A    2078 2528M
 LQENEXT       4 00000004 FFFFFFDC     A    2076 2589M 2778  2835M 3106  3118M
 LQERTCB       4 00000010 FFFFFFDC     A    2079 2836M 3073  3113M 3113
 MCCB         44 00000000 FFFFFFDA     J    2143 3641U 3984U 4307U 4380  4397M 5030U 6073U 6768U
 MCCBMBCT      4 00000010 FFFFFFDA     A    2130 4047  4399M
 MCCBMBH       4 00000024 FFFFFFDA     A    2135 3781M 3781  5092  6103  6188M 6824
 MCCBMLCK      4 00000020 FFFFFFDA     A    2134 3758  3844  4102  4120  4430M 5276  5392
 MCCBNAME      8 00000008 FFFFFFDA     C    2129 3728  4072  4326  4398M
 MCCBNEXT      4 00000004 FFFFFFDA     A    2128 4341  4453M
 MCCBQLCK      4 0000001C FFFFFFDA     A    2133 4451M 5049  5258  6095  6124  6208  6780  6809  6950
 MCCBRQST      4 00000018 FFFFFFDA     A    2132 4109  4110M
 MCCBSEQ       4 00000028 FFFFFFDA     A    2136 5062  5063M
 MCCBSERV      4 00000014 FFFFFFDA     A    2131 3765  3766M 5282
 MCCT         12 00000000 FFFFFFDB     J    2111 3440  3464U 3466M 4274U
1MSGSERV  (MSGS00) (09:41) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   56
 MCCTLOCK      4 00000008 FFFFFFDB     A    2104 3496M 4291  4478
 MCCTMCCB      4 00000004 FFFFFFDB     A    2103 4309  4453  4454M
 MEMFREE       1 00000000 00000008     T    7924 7924
 MEMGET        1 00000000 00000009     T    7926 7926
 MEMTA16M     16 00000002 FFFFFFE4         1598 2457  2457  2458M 2519  2519  2520M 3301  3301  3302M 3450  3450  3451M
                                                 3685  3685  3686M 4028  4028  4029M 4390  4390  4391M
 MEMTGLOB      8 00000002 FFFFFFE4         1607 2457  2457  2519  2519  3301  3301  3450  3450  3685  3685  4028  4028
                                                 4390  4390
 MFA16M       16 00000009 FFFFFFE1         1916 6033  6033  6034M
 MFGLOB        2 00000009 FFFFFFE1         1943 6033  6033
 MGA16M       16 00000009 FFFFFFE2         1832 7130  7130  7131  7131  7133M
 MGBEST        1 00000009 FFFFFFE2         1868 7131  7131  7132  7132
 MGGLOB        2 00000009 FFFFFFE2         1859 7130  7130  7132  7132
 MSGATTR       4 000003E2 00000001     I    3913 3908  3924U
 MSGATTS       4 0000030A 00000001     I    3570 3565  3581U
 MSGBALOC      0 00000019 FFFFFFD7         2251 4965  7531
 MSGBCHN       4 00000008 FFFFFFD7     A    2226 4725M 6690  7798  7799  7822
 MSGBDATA      8 00000028 FFFFFFD7     D    2298 4744  6218  6404
 MSGBDONE      4 00000019 FFFFFFD7         2291 4977  6399M 7543
 MSGBFLGS      1 00000018 FFFFFFD7     R    2232 2236
 MSGBLEN       2 0000001A FFFFFFD7     H    2294 4699M 6216  6402  7838
 MSGBNEXT      4 00000004 FFFFFFD7     A    2225 4079  5092  5124  5248M 5248  5249M 5607M 5607  5632M 6165  6356  6374
                                                 6824  6861  6867  6917  6941M 6965M 6965  6996M
 MSGBPEND      4 0000000C FFFFFFD7     A    2227 5087M 5218  5226  5227M 6177  6183M 6183  6879  6929  6935M 6935  6940M
 MSGBPRIO      4 0000001C FFFFFFD7     A    2295 5016M 5088  5182  6215
 MSGBRCCB      4 00000010 FFFFFFD7     A    2228 4700M 4931  5529  7497  7713
 MSGBRCVD      2 00000019 FFFFFFD7         2271 5555  6199M 7077  7690
 MSGBREPL      3 00000019 FFFFFFD7         2281 5600M 6971M
 MSGBRVAL      4 00000020 FFFFFFD7     A    2296 5015M 6401
 MSGBSCCB      4 00000014 FFFFFFD7     A    2229 5472  6193M 7155  7658
 MSGBSENT      1 00000019 FFFFFFD7         2261 5014M 6748  6795
 MSGBSEQ       4 00000024 FFFFFFD7     A    2297 5064M 6214  6400  6679
 MSGBSTAT      1 00000019 FFFFFFD7     R    2242 2251  2261  2271  2281  2291
 MSGBUF       40 00000000 FFFFFFD7     J    2305 4079  4659  4686U 4694M 4694  4698M 4846U 4859  5092  5115U 5136U 5174U
                                                 5238U 5248  5249M 5626U 5643U 6158U 6183M 6351U 6374  6664U 6733U 6824
                                                 6842U 6906U 6935M 6940M 6941M 6990U 7007U 7383U 7396  7794U 7809U 7837
                                                 7921
 MSGCAN        4 00000A1A 00000001     I    6498 6493  6509U
 MSGFREE       4 00000BCE 00000001     I    7342 7337  7353U
 MSGGBUF       4 0000057C 00000001     I    4545 4540  4556U
 MSGINIT       4 000002A2 00000001     I    3392 3387  3403U
 MSGRECV       4 00000860 00000001     I    5795 5790  5806U
 MSGSEND       4 00000644 00000001     I    4802 4797  4813U
 MSGSERV       1 00000000 00000001     J    1219 1216  1217  1221  1307  1379  1414  1433  1453  1473  1496  1519  1539
                                                 1559  1725  1795  1879  1954  1980  2005  2029  2061  2088  2112  2144
                                                 2175  2208  2306  2333  4196
 MSGS00        1 00000000 00000001     R    1228 1226
 NEWPLUM       4 00000142 00000001     I    2808 2817B
 POOLGET       1 00000000 00000002     T    7903 7903
 PQLOOP        2 0000070E 00000001     H    5119 5219B
 PUTONQ        6 00000734 00000001     I    5248 5151B 5208B
 QLOCK         4 000000CE 00000001     I    2598 2609B
 RA            2 00000002 FFFFFFFF A   #    1028 2479M 2487U 2526M 2533M 2568  2581M 2582M 2582  2761M 2771U 2789M 2808
                                                 2835  2990M 2991M 2991  3060U 3121  4307U 4309M 4320M 4320  4341M 4396M
                                                 4454  4487  4658M 4660  4699  5092M 5115U 5218M 5226M 5248  5249  5529M
                                                 5539U 6295M 6296M 6296  6351U 6368  6824M 6842U 6867M 6886  6940  6941
                                                 6972M 6990U 7758M 7798M 7837M 7838M 7850
 RAR          14 0000000E FFFFFFFF A   #    1184 2462M 2524M 2562M 2563  2567M 2635B 2863M 2864  2868M 2902B 3180M 3181
                                                 3185M 3202B 3306M 3357B 3455M 3495M 3535B 3632M 3690M 3733M 3763M 3815M
1MSGSERV  (MSGS00) (09:41) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   57
                                                 3816  3820M 3849M 3872B 3975M 4033M 4077M 4107M 4125M 4148B 4296M 4395M
                                                 4429M 4450M 4483M 4504B 4724M 4740M 4761B 5054M 5263M 5281M 5340M 5341
                                                 5345M 5397M 5594M 5664M 5693M 5694  5698M 5760B 5936M 5988M 6038M 6100M
                                                 6129M 6213M 6341M 6393M 6470B 6634M 6718M 6785M 6814M 6955M 7043M 7044
                                                 7048M 7137M 7192M 7249M 7281M 7307B 7757M 7836M 7876B
 RB            3 00000003 FFFFFFFF A   #    1040 2478M 2529M 2761M 2788  2807M 2808M 2833U 2885  3119M 3120M 5006M 5007M
                                                 5008  5124M 5125M 5125  5174U 5282M 5293M 5293  5308U 5363M 6640M 6641M
                                                 6641  6664U 6690M 6691M 6691  6733U 6847  6861  6879  6929  6996  7014
                                                 7153  7759M 7771  7794U 7799M 7851
 RCCB         44 00000000 FFFFFFD8     J    2207 4018  4042U 4044M 4585U 4598  4912U 5411U 5539U 6286U 6574U 7448U 7735U
 RCCBECB       4 00000024 FFFFFFD8     A    2199 4129  5693  7043
 RCCBLOCK      4 00000010 FFFFFFD8     A    2194 4078M 4719  4735  5589  5659  6336  6388  6629  6713  7276  7752  7831
 RCCBMBCH      4 0000001C FFFFFFD8     A    2197 4725  4726M 6640  7758
 RCCBMBCT      4 00000020 FFFFFFD8     A    2198 4047M
 RCCBMBH       4 00000014 FFFFFFD8     A    2195 4079  6295  6356M 6374
 RCCBMBT       4 00000018 FFFFFFD8     A    2196 4080M 5608  5650M 6368  6375M 6972  7014M
 RCCBMCCB      4 00000008 FFFFFFD8     A    2192 4045M 5017  6758
 RCCBNEXT      4 00000004 FFFFFFD8     A    2191 4109M
 RCCBNREQ      4 00000028 FFFFFFD8     A    2200 5007  5008M
 RCCBRTCB      4 0000000C FFFFFFD8     A    2193 4046M 4632  6587  7463
 RITPRIO       4 0000072C 00000001     I    5226 5191B
 RJ            4 00000004 FFFFFFFF A   #    1052 2598M 2599  2600M 2778M 2789  3117M 3118  3121M 5061M 5062M 5063  5064
                                                 5065  5398  6103M 6104M 6104  6158U 6177  6613M 6679  6758M 6768U 7154
 RK            5 00000005 FFFFFFFF A   #    1064 2463M 2471U 2528  2600  2618  2787M 2788M 3117M 3120  6063M 6073U 6847M
                                                 6886M 6940  7138M 7148U 7217  7235
 RS            1 00000001 FFFFFFFF A   #    1016 2879M 2880M 2881  3322M 3332U 3500M 3510U 4678  5088M 5182  5608M 5626U
                                                 5937M 5947U 5963  6024  6165M 6183  6188  6216M 6217  6222M 6223M 6224
                                                 6402M 6403  6917M 6935  6941  7193M 7211U
 RTCB        176 00000000 FFFFFFEE     J    1306 1316U
 RTCBCBAT      4 00000004 FFFFFFEE     A    1251 2387  3322  3500  4242
 RTCBLKWT      4 00000030 FFFFFFEE     A    1266 2840M 2875M 2875
 RTCBNAME      8 0000000C FFFFFFEE     C    1256 3729  4073
 RTCBR         9 00000009 FFFFFFFF A   #    1124 1316U 2836  3073  3703  4046  4632  5506  5874  6587  7463  7624
 RVR           0 00000000 FFFFFFFF A   #    1004 2463  2525  2526  2618M 3307  3456  3496  3633  3691  3734  3735M 3736
                                                 3758M 3759  3844M 3845  3853M 3854  3855M 3976  4034  4078  4079M 4080
                                                 4102M 4103  4120M 4121  4129M 4130  4131M 4291M 4292  4396  4430  4451
                                                 4478M 4479  4487M 4659M 4660M 4672  4719M 4720  4735M 4736  4744M 5049M
                                                 5050  5258M 5259  5276M 5277  5354M 5354  5392M 5393  5398M 5589M 5590
                                                 5659M 5660  5931M 5932  5969M 5970  5983M 5984  6022M 6023  6039M 6095M
                                                 6096  6124M 6125  6133M 6133  6208M 6209  6218M 6312M 6312  6336M 6337
                                                 6374M 6375  6388M 6389  6404M 6629M 6630  6713M 6714  6780M 6781  6809M
                                                 6810  6950M 6951  7118M 7119  7138  7187M 7188  7244M 7245  7276M 7277
                                                 7752M 7753  7831M 7832
 RX            6 00000006 FFFFFFFF A   #    1076 3106M 3153U 3691M 3699U 3766  3855  4034M 4042U 4110  4131  4678M 4686U
                                                 4726  4837M 4838M 4846U 5087  5227  5249  5632  5650  7155M 7165U 7374M
                                                 7375M 7383U 7771
 RY            7 00000007 FFFFFFFF A   #    1088 2387M 2397U 2403M 2419U 2714M 2722U 2840  2978M 2986U 3307M 3315U 3337
                                                 3456M 3464U 3515  3633M 3641U 3702  3976M 3984U 4045  4242M 4252U 4258M
                                                 4274U 4577M 4585U 4700  4886M 4912U 4931  5017M 5030U 5454U 5472  5830M
                                                 5856U 6193  6286U 6533M 6574U 7419M 7448U 7497  7609U 7658  7713M 7735U
 R0            0 00000000 FFFFFFFF A   #     708 2355  2447M 2448  2509M 2510  2682  2943  3243  3291M 3292  3392  3440M
                                                 3441  3570  3675M 3676  3913  4018M 4019  4207  4380M 4381  4545  4802
                                                 5795  6498  7342
 R1            1 00000001 FFFFFFFF A   #     721 2633M 2900M 3200M 3355M 3533M 3870M 4146M 4502M 4759M 5758M 6468M 7305M
                                                 7874M
 R15          15 0000000F FFFFFFFF A   #     903 2355  2633M 2682  2900M 2943  3200M 3243  3355M 3392  3533M 3570  3870M
                                                 3913  4146M 4207  4502M 4545  4759M 4802  5758M 5795  6468M 6498  7305M
                                                 7342  7874M
 SCCB         36 00000000 FFFFFFD9     J    2174 3675  3699U 3701M 5308U 5454U 5856U 7165U 7609U
1MSGSERV  (MSGS00) (09:41) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   58
 SCCBCANH      4 00000018 FFFFFFD9     A    2165 3735  5910M 5910  5937  5951M 5969
 SCCBCANT      4 0000001C FFFFFFD9     A    2166 3736M 5963  5970M 7193  7235M
 SCCBECB       4 00000014 FFFFFFD9     A    2164 3815  3853  5340
 SCCBLOCK      4 00000008 FFFFFFD9     A    2161 3734M 5931  5983  7187  7244
 SCCBMCCB      4 0000000C FFFFFFD9     A    2162 3702M 6063
 SCCBNEXT      4 00000004 FFFFFFD9     A    2160 3765M 5363
 SCCBNRCV      4 00000020 FFFFFFD9     A    2167 6223  6224M
 SCCBRTCB      4 00000010 FFFFFFD9     A    2163 3703M 5506  5874  7624
 SPR          13 0000000D FFFFFFFF A   #    1172 2355  2370  2371  2386M 2431U 2547U 2682  2697  2698  2713M 2851U 2943
                                                 2958  2959  2974M 3165U 3243  3258  3259  3261M 3275U 3392  3407  3408
                                                 3410M 3424U 3482U 3570  3585  3586  3601M 3614U 3659U 3719U 3753U 3800U
                                                 3839U 3913  3928  3929  3944M 3957U 4002U 4063U 4097U 4207  4222  4223
                                                 4238M 4286U 4364U 4415U 4473U 4545  4560  4561  4576M 4714U 4802  4817
                                                 4818  4833M 5044U 5325U 5387U 5678U 5795  5810  5811  5826M 5926U 6007U
                                                 6090U 6498  6513  6514  6529M 6624U 7028U 7103U 7182U 7342  7357  7358
                                                 7373M 7747U
 WAR          12 0000000C FFFFFFFF A   #    1160 2370  2371M 2372  2382U 2386  2633  2634  2697  2698M 2699  2709U 2713
                                                 2900  2901  2958  2959M 2960  2970U 2974  3200  3201  3258  3259M 3260
                                                 3261  3355  3356  3407  3408M 3409  3410  3533  3534  3585  3586M 3587
                                                 3597U 3601  3870  3871  3928  3929M 3930  3940U 3944  4146  4147  4222
                                                 4223M 4224  4234U 4238  4502  4503  4560  4561M 4562  4572U 4576  4759
                                                 4760  4817  4818M 4819  4829U 4833  5758  5759  5810  5811M 5812  5822U
                                                 5826  6468  6469  6513  6514M 6515  6525U 6529  7305  7306  7357  7358M
                                                 7359  7369U 7373  7874  7875
 =A(-1)        4 00000DA8 00000001     A    7925 6039
 =A(L'MSGBUF)
               4 00000D98 00000001     A    7921 4838  7375
 =A(1000)      4 00000D8C 00000001     A    7918 4399
 =A(40)        4 00000D6C 00000001     A    7910 3318
 =C'CANR'      4 00000DB0 00000001     C    7927 7152
 =C'LOCK'      4 00000D54 00000001     C    7904 2473  2735
 =C'LQE '      4 00000D64 00000001     C    7908 3030
 =C'MSGB'      4 00000D9C 00000001     C    7922 4859  7396
 =C'RCCB'      4 00000D90 00000001     C    7919 4598  4897  6271  6544  7433
 =C'SCCB'      4 00000DA0 00000001     C    7923 5439  5841  7594
 =CL16'MCCT Mods'
              16 00000D30 00000001     C    7900 3491
 =CL4'LKCT'
               4 00000D68 00000001     C    7909 3317
 =CL4'LQE'
               4 00000D58 00000001     C    7905 2527
 =CL4'MCCB'
               4 00000D88 00000001     C    7917 4397
 =CL4'MCCT'
               4 00000D70 00000001     C    7911 3466
 =CL4'MSGB'
               4 00000D94 00000001     C    7920 4698
 =CL4'RCCB'
               4 00000D84 00000001     C    7916 4044
 =CL4'SCCB'
               4 00000D78 00000001     C    7913 3701
 =CL8'--MCCB--'
               8 00000D40 00000001     C    7901 4425
 =CL8'--MSGQ--'
               8 00000D48 00000001     C    7902 4446
 =V(FPOST)
               4 00000D5C 00000001     V    7906 2566  3184  3819  5344  5697  7047
 =V(FWAIT)
               4 00000D60 00000001     V    7907 2867
1MSGSERV  (MSGS00) (09:41) (22MAR04) Ordinary Symbol and Literal Cross Reference                                            Page   59
 =V(LOCKCRE)
               4 00000D74 00000001     V    7912 3494  3732  4076  4428  4449
 =V(LOCKOB)
               4 00000D7C 00000001     V    7914 3762  4106  4295  4723  5053  5280  5593  5935  6099  6340  6633  6784
                                                 7191  7756
 =V(LOCKREL)
               4 00000D80 00000001     V    7915 3848  4124  4482  4739  5262  5396  5663  5987  6128  6212  6392  6717
                                                 6813  6954  7248  7280  7835
 =V(MEMFREE)
               4 00000DA4 00000001     V    7924 6037
 =V(MEMGET)
               4 00000DAC 00000001     V    7926 7136
 =V(POOLGET)
               4 00000D50 00000001     V    7903 2461  2523  3305  3454  3689  4032  4394

1MSGSERV  (MSGS00) (09:41) (22MAR04) Macro and Copy Code Source Summary                                                     Page   60
- Con Source                                        Volume    Members                        HLASM R4.0  2004/03/22 09.41
0     PRIMARY INPUT                                           CSECT    DROP     END      EX       LTORG    POP
                                                              PRINT    PUSH     START    USING
   L2 WYL.GG.ORV.MACLIB                             SYSB02    CBAT     FPOST    FWAIT    HEADER   KAPUT    LCALL
                                                              LOCKOB   LOCKPARM LOCKRL   MEMFREE  MEMGET   MEMPARM
                                                              MODULE   MSGPARM  PEND     POOLGET  POOLPARM POSTPARM PROC
                                                              PSET     REG      RTCB     SPLEVEL  VCALL    WAITPARM
   L3 WYL.GG.SYS.MACLIB                             SYSB05    $BC      $BFLKUP  $BV      $CCLKUP  $CRS     $CSS     $L
                                                              $LA      $LBLAD   $LEXP    $LOR     $REL     $RGLKUP
                                                              $USLKUP  BEGIN    CLEAR    CSECT    DEFCC    DROP     ELSE
                                                              ELSEIF   END      EX       FLAG     GEN      HIBAL
                                                              IDENT    IF       INCR     LABEL    LT       LTORG    POP
                                                              PRINT    PUSH     RECORD   REGS     SET      START
                                                              USING    WHILE    WITH
   L4 SYS1.MACLIB                                   MVSBR9    ABEND    IHBINNRR STORAGE  SYSSTATE

1         (MSGS00) (09:41) (22MAR04) General Purpose Register Cross Reference                                               Page   61
- Register  References (M=modified, B=branch, U=USING, D=DROP, N=index)                      HLASM R4.0  2004/03/22 09.41
0    0(0)     991U  992D 2355  2447M 2448  2463  2509M 2510  2525  2526  2618M 2682  2750M 2751M 2752  2943  3012M 3013M
             3014  3045M 3046M 3047  3088M 3089M 3090  3243  3291M 3292  3307  3392  3440M 3441  3456  3496  3570  3633
             3675M 3676  3691  3734  3735M 3736  3758M 3759  3844M 3845  3853M 3854  3855M 3913  3976  4018M 4019  4034
             4078  4079M 4080  4102M 4103  4120M 4121  4129M 4130  4131M 4207  4291M 4292  4380M 4381  4396  4430  4451
             4478M 4479  4487M 4545  4613M 4614M 4615  4647M 4648M 4649  4659M 4660M 4672M 4672  4719M 4720  4735M 4736
             4744M 4802  4874M 4875M 4876  4946M 4947M 4948  4992M 4993M 4994  5049M 5050  5258M 5259  5276M 5277  5354M
             5354  5392M 5393  5398M 5487M 5488M 5489  5521M 5522M 5523  5570M 5571M 5572  5589M 5590  5659M 5660  5733M
             5734M 5735  5795  5889M 5890M 5891  5931M 5932  5969M 5970  5983M 5984  6022M 6023  6039M 6095M 6096  6124M
             6125  6133M 6133  6208M 6209  6218M 6312M 6312  6336M 6337  6374M 6375  6388M 6389  6404M 6446M 6447M 6448
             6498  6559M 6560M 6561  6602M 6603M 6604  6629M 6630  6713M 6714  6780M 6781  6809M 6810  6950M 6951  7118M
             7119  7138  7187M 7188  7244M 7245  7276M 7277  7342  7411M 7412M 7413  7478M 7479M 7480  7512M 7513M 7514
             7558M 7559M 7560  7639M 7640M 7641  7673M 7674M 7675  7705M 7706M 7707  7752M 7753  7831M 7832  7850M
     1(1)     987U 2355  2633M 2682  2749M 2752M 2879M 2880M 2881  2900M 2943  3011M 3014M 3044M 3047M 3087M 3090M 3200M
             3243  3322M 3332U 3344U 3355M 3392  3500M 3510U 3522U 3533M 3570  3870M 3913  4146M 4207  4502M 4545  4612M
             4615M 4646M 4649M 4678  4759M 4802  4873M 4876M 4945M 4948M 4991M 4994M 5088M 5182  5486M 5489M 5520M 5523M
             5569M 5572M 5608M 5626U 5648U 5732M 5735M 5758M 5795  5888M 5891M 5937M 5947U 5963  6024  6045U 6165M 6183
             6188  6216M 6217  6222M 6223M 6224  6402M 6403  6445M 6448M 6468M 6498  6558M 6561M 6601M 6604M 6917M 6935
             6941  7193M 7211U 7233U 7305M 7342  7410M 7413M 7477M 7480M 7511M 7514M 7557M 7560M 7638M 7641M 7672M 7675M
             7704M 7707M 7851M 7874M
     2(2)     983U 2355  2479M 2487U 2526M 2533M 2568  2581M 2582M 2582  2633M 2648U 2682  2761M 2789M 2808  2835  2900M
             2943  2990M 2991M 2991  3060U 3121  3141U 3200M 3243  3355M 3392  3533M 3570  3870M 3913  4146M 4207  4307U
             4309M 4320M 4320  4341M 4396M 4454  4487  4502M 4517U 4545  4658M 4660  4699  4759M 4802  5092M 5115U 5141U
             5218M 5226M 5248  5249N 5529M 5539U 5704U 5758M 5795  6295M 6296M 6296  6351U 6368  6411U 6468M 6498  6824M
             6842U 6867M 6886  6911U 6940  6941  6972M 6990U 7012U 7305M 7342  7758M 7798M 7837M 7838M 7850  7874M
     3(3)     979U 2355  2478M 2529M 2633M 2682  2761M 2788  2789M 2807M 2808M 2833U 2885  2900M 2915U 2943  3119M 3120M
             3121  3200M 3243  3355M 3392  3533M 3570  3870M 3913  4146M 4207  4502M 4545  4677M 4759M 4802  5006M 5007M
             5008  5124M 5125M 5125  5174U 5243U 5282M 5293M 5293  5308U 5363M 5369U 5758M 5795  6468M 6498  6640M 6641M
             6641  6664U 6690M 6691M 6691  6697U 6733U 6839U 6847  6861  6879  6906U 6929  6987U 6996  7007U 7014  7153
             7288U 7305M 7342  7759M 7771  7794U 7799M 7814U 7851  7856M 7874M
     4(4)     975U 2355  2598M 2599  2600M 2633M 2682  2778M 2789  2900M 2943  3117M 3118  3121M 3200M 3243  3355M 3392
             3533M 3570  3870M 3913  4146M 4207  4502M 4545  4677M 4759M 4802  5061M 5062M 5063  5064  5065  5398  5758M
             5795  6103M 6104M 6104  6158U 6177  6230U 6468M 6498  6613M 6679  6758M 6768U 7054U 7154  7305M 7342  7856M
             7874M
     5(5)     971U 2355  2463M 2471U 2528  2600  2618  2633M 2654U 2682  2787M 2788M 2789  2900M 2943  3117M 3120  3121M
             3200M 3243  3355M 3392  3533M 3570  3870M 3913  4146M 4207  4502M 4545  4759M 4802  5758M 5795  6063M 6073U
             6239U 6468M 6498  6847M 6886M 6940  7138M 7148U 7208U 7217  7228U 7235  7260U 7305M 7342  7874M
     6(6)     967U 2355  2633M 2682  2900M 2943  3106M 3153U 3200M 3215U 3243  3355M 3392  3533M 3570  3691M 3699U 3766
             3855  3870M 3885U 3913  4034M 4042U 4110  4131  4146M 4161U 4207  4502M 4545  4678M 4686U 4726  4759M 4774U
             4802  4837M 4838M 4846U 5087  5112U 5136U 5171U 5227  5238U 5249  5623U 5632  5643U 5650  5758M 5773U 5795
             6468M 6498  7155M 7165U 7255U 7305M 7342  7374M 7375M 7383U 7771  7791U 7809U 7874M 7889U
     7(7)     963U 2355  2387M 2397U 2403M 2410U 2419U 2633M 2660U 2682  2714M 2722U 2840  2900M 2921U 2943  2978M 2986U
             3200M 3221U 3243  3307M 3315U 3337  3355M 3370U 3392  3456M 3464U 3515  3533M 3548U 3570  3633M 3641U 3702
             3870M 3891U 3913  3976M 3984U 4045  4146M 4167U 4207  4242M 4252U 4258M 4265U 4274U 4502M 4523U 4545  4577M
             4585U 4700  4759M 4780U 4802  4886M 4912U 4931  5017M 5027U 5030U 5408U 5411U 5416U 5454U 5472  5709U 5758M
             5795  5830M 5856U 6193  6248U 6286U 6422U 6468M 6498  6533M 6574U 7305M 7320U 7342  7419M 7448U 7497  7571U
             7609U 7658  7713M 7719U 7735U 7874M 7895U
     8(8)     959U 2355  2633M 2682  2900M 2943  3200M 3243  3355M 3392  3533M 3570  3870M 3913  4146M 4207  4502M 4545
             4759M 4802  5758M 5795  6468M 6498  7305M 7342  7874M
     9(9)     955U 1316U 2355  2633M 2682  2836  2900M 2943  3073  3200M 3243  3355M 3392  3533M 3570  3703  3870M 3913
             4046  4146M 4207  4502M 4545  4632  4759M 4802  5506  5758M 5795  5874  6468M 6498  6587  7305M 7342  7463
             7624  7874M
    10(A)     951U 2355  2356M 2366U 2630U 2633M 2682  2683M 2693U 2897U 2900M 2943  2944M 2954U 3197U 3200M 3243  3244M
             3254U 3352U 3355M 3392  3393M 3403U 3530U 3533M 3570  3571M 3581U 3867U 3870M 3913  3914M 3924U 4143U 4146M
             4207  4208M 4218U 4499U 4502M 4545  4546M 4556U 4756U 4759M 4802  4803M 4813U 5755U 5758M 5795  5796M 5806U
             6465U 6468M 6498  6499M 6509U 7302U 7305M 7342  7343M 7353U 7871U 7874M
1         (MSGS00) (09:41) (22MAR04) General Purpose Register Cross Reference                                               Page   62
    11(B)     947U 2355  2633M 2682  2900M 2943  3200M 3243  3355M 3392  3533M 3570  3870M 3913  4146M 4207  4502M 4545
             4759M 4802  5758M 5795  6468M 6498  7305M 7342  7874M
    12(C)     943U 2355  2370  2371M 2372  2382U 2386  2625U 2633M 2633  2634  2682  2697  2698M 2699  2709U 2713  2892U
             2900M 2900  2901  2943  2958  2959M 2960  2970U 2974  3192U 3200M 3200  3201  3243  3258  3259M 3260  3261
             3355M 3355  3356  3392  3407  3408M 3409  3410  3533M 3533  3534  3570  3585  3586M 3587  3597U 3601  3862U
             3870M 3870  3871  3913  3928  3929M 3930  3940U 3944  4138U 4146M 4146  4147  4207  4222  4223M 4224  4234U
             4238  4494U 4502M 4502  4503  4545  4560  4561M 4562  4572U 4576  4751U 4759M 4759  4760  4802  4817  4818M
             4819  4829U 4833  5750U 5758M 5758  5759  5795  5810  5811M 5812  5822U 5826  6460U 6468M 6468  6469  6498
             6513  6514M 6515  6525U 6529  7297U 7305M 7305  7306  7342  7357  7358M 7359  7369U 7373  7866U 7874M 7874
             7875
    13(D)     939U 2355  2355  2370  2371  2386M 2431U 2544U 2547U 2633M 2641U 2682  2682  2697  2698  2713M 2851U 2900M
             2908U 2943  2943  2958  2959  2974M 3165U 3200M 3208U 3243  3243  3258  3259  3261M 3275U 3355M 3363U 3392
             3392  3407  3408  3410M 3424U 3479U 3482U 3533M 3541U 3570  3570  3585  3586  3601M 3614U 3656U 3659U 3716U
             3719U 3750U 3753U 3797U 3800U 3836U 3839U 3870M 3878U 3913  3913  3928  3929  3944M 3957U 3999U 4002U 4060U
             4063U 4094U 4097U 4146M 4154U 4207  4207  4222  4223  4238M 4286U 4361U 4364U 4412U 4415U 4470U 4473U 4502M
             4510U 4545  4545  4560  4561  4576M 4714U 4759M 4767U 4802  4802  4817  4818  4833M 5044U 5322U 5325U 5384U
             5387U 5675U 5678U 5758M 5766U 5795  5795  5810  5811  5826M 5926U 6004U 6007U 6087U 6090U 6468M 6476U 6498
             6498  6513  6514  6529M 6624U 7025U 7028U 7100U 7103U 7179U 7182U 7305M 7313U 7342  7342  7357  7358  7373M
             7747U 7874M 7882U
    14(E)     935U 2355  2462M 2524M 2562M 2563  2567M 2633M 2635B 2682  2863M 2864  2868M 2900M 2902B 2943  3180M 3181
             3185M 3200M 3202B 3243  3306M 3355M 3357B 3392  3455M 3495M 3533M 3535B 3570  3632M 3690M 3733M 3763M 3815M
             3816  3820M 3849M 3870M 3872B 3913  3975M 4033M 4077M 4107M 4125M 4146M 4148B 4207  4296M 4395M 4429M 4450M
             4483M 4502M 4504B 4545  4674M 4675M 4675N 4676M 4676N 4677  4677M 4724M 4740M 4759M 4761B 4802  5054M 5263M
             5281M 5340M 5341  5345M 5397M 5594M 5664M 5693M 5694  5698M 5758M 5760B 5795  5936M 5988M 6038M 6100M 6129M
             6213M 6341M 6393M 6468M 6470B 6498  6634M 6718M 6785M 6814M 6955M 7043M 7044  7048M 7137M 7192M 7249M 7281M
             7305M 7307B 7342  7757M 7836M 7853M 7854M 7854N 7855M 7855N 7856  7856M 7874M 7876B
    15(F)     931U 2355  2356  2461M 2462B 2523M 2524B 2566M 2567B 2633M 2682  2683  2867M 2868B 2900M 2943  2944  3184M
             3185B 3200M 3243  3244  3305M 3306B 3355M 3392  3393  3454M 3455B 3494M 3495B 3533M 3570  3571  3631M 3632B
             3689M 3690B 3732M 3733B 3762M 3763B 3819M 3820B 3848M 3849B 3870M 3913  3914  3974M 3975B 4032M 4033B 4076M
             4077B 4106M 4107B 4124M 4125B 4146M 4207  4208  4295M 4296B 4394M 4395B 4428M 4429B 4449M 4450B 4482M 4483B
             4502M 4545  4546  4673M 4723M 4724B 4739M 4740B 4759M 4802  4803  5053M 5054B 5262M 5263B 5280M 5281B 5344M
             5345B 5396M 5397B 5593M 5594B 5663M 5664B 5697M 5698B 5758M 5795  5796  5935M 5936B 5987M 5988B 6037M 6038B
             6099M 6100B 6128M 6129B 6212M 6213B 6340M 6341B 6392M 6393B 6468M 6498  6499  6633M 6634B 6717M 6718B 6784M
             6785B 6813M 6814B 6954M 6955B 7047M 7048B 7136M 7137B 7191M 7192B 7248M 7249B 7280M 7281B 7305M 7342  7343
             7756M 7757B 7835M 7836B 7852M 7874M

1MSGSERV  (MSGS00) (09:41) (22MAR04) Diagnostic Cross Reference and Assembler Summary                                       Page   63
-                                                                                            HLASM R4.0  2004/03/22 09.41
0     No Statements Flagged in this Assembly
 HIGH LEVEL ASSEMBLER, 5696-234, RELEASE 4.0, PTF UQ57391
0SYSTEM: OS/390 02.10.00            JOBNAME: PJG#MSG     STEPNAME: ASM        PROCSTEP: (NOPROC)
0Datasets Allocated for this Assembly
  Con DDname   Dataset Name                                 Volume  Member
   P1 SYSIN    SYS04082.T094150.RA000.PJG#MSG.INPUT.H01     SCR101
   L1 SYSLIB   SYS3.DUMMYMAC                                SYSB02
   L2          WYL.GG.ORV.MACLIB                            SYSB02
   L3          WYL.GG.SYS.MACLIB                            SYSB05
   L4          SYS1.MACLIB                                  MVSBR9
      SYSLIN   WYL.GG.PJG.OBJ                               SYSB05  MSGSERV
      SYSPRINT SYS04082.T094150.RA000.PJG#MSG.PRINT.H01     SCR100
      SYSTERM  GG$PJG.PJG#MSG.JOB05947.D0000103.?

    7812K allocated to Buffer Pool,         1333K would be required for this to be an In-Storage Assembly
    1046 Primary Input Records Read         6006 Library Records Read                  0 Work File Reads
       0 ASMAOPT Records Read               4429 Primary Print Records Written         0 Work File Writes
      88 Punch Records Written                 0 ADATA Records Written
0Assembly Start Time: 09.41.52 Stop Time: 09.41.58 Processor Time: 00.00.01.6791
 Return Code 000
