options:  unnum  cc  ind 6  form bond  flash memo  fcb mem6
                                             Date: February 9, 1984

 To:       Distribution

 From:     Rich Levitt

 Subject:  Version 2 of SUZAN SVC (Revised)



 The SUZAN SVC has been changed to operate in 31 bit mode under
 MVS/XA.  Rather than try to fit these changes into the current
 structure, I have implemented a second path within the SVC.  The
 SVC supports both "Version 1" mode, which is the current mechanism,
 or "Version 2" mode, which is the new mechanism.  The particular
 mode being used does not have any effect on determining a path
 connection and path partner's do not need to be concerned about the
 mode being used by the other.  This dual mode version has now been
 installed on all three CPU's.  Though both modes will continue to be
 available, it would be preferable for any new programs to use the
 Version 2 facilities.

 Version 1 remains as is, completely unchanged.  All addresses are
 assumed to be AMODE 24 (24 bits), regardless of the AMODE of the
 caller under MVS/XA.

 The following describes the differences between Version 1 and
 Version 2:

    1.  There is a new expansion of the PATH macro which is generated
        by adding the parameter "VERSION=2" to the macro call.  If
        VERSION=2 is specified only the new format of request calls
        may be used.

    2.  Under MVS/SP all addresses are always interpreted as 24
        bits.  Under MVS/XA, the AMODE of the caller, at the time of
        each individual call, will determine whether addresses are
        interpreted as 24 bit or 31 bit.  The mode of the ECB and
        flag byte addresses, contained in the PATH block, will be
        determined by the AMODE of the caller at the time that the
        path is opened.  Thus, if the the caller is in AMODE 31 at
        the time of the OPEN call, those addresses will treated as 31
        bit addresses; if the caller is in AMODE 24 at the time of
        the OPEN call, those addresses would be treated as 24 bits.
        This is done regardless of the caller's or partner's AMODE
        in future calls.

    3.  The data and length returned by a "GET" (receive-move) no
        longer contains an RDW.  Likewise, the buffer pointer and
        length returned from a "LOCATE" (receive) request does not
        include an RDW.  Buffers for a "SEND" request, however, may
        still contain RDW's.

    4.  The concept of controller/controllee has been dropped. From
        now on we're all treated as equals.

    5.  PCW's have been dropped.  The SVC is called with a function
        code.  This means that only one function may be processed per
        SVC call.

    6.  Return codes have been slightly changed and expanded.  The
        new return codes are described in the expansion of the
        PATH macro if Version 2 is specified.

    7.  A SEND operation may include buffer segments which have a
        length of zero, however the total length of data to be sent
        may not be zero.

    8.  A new macro ("SCOM") has been created to make request calls.
        The macro has the following form:

                 SCOM  function,parameter,path-address


 The following describes the function codes and parameters for the
 new Version 2 mode.

   Function           Parameter

    OPEN              Pointer to list of PATH addresses, each entry
                      is 4 bytes long.  The end of the list is
                      signified by turning on the high-order bit.

    CLOSE             Zero.  Causes current path to be terminated.

    SEND              Pointer to list of buffer addresses and
                      lengths, each entry is 8 bytes long.  The end
                      of the list is signified by turning on the
                      high-order bit.  If a length field is zero it
                      is assumed that the buffer is preceded by an
                      RDW (which contains the length of the buffer
                      plus the length of the RDW).

    GET               Pointer to list of buffer addresses and
    (Receive)         lengths, each entry is 8 bytes long.  The
                      end of the list is signified by turning on
                      the high-order bit.  Upon return, register 1
                      contains the total buffer length.

    LOCATE            Pointer to 8 byte area which will contain the
    (Receive)         address and length of the buffer.  If zero is
                      specified, the buffer address will be returned
                      in register 1 and the length in register 0.
                      When the caller is done with the buffer, it
                      must be explicitly freed (see below).

    FREELOC           Parameter same as described above.  Causes
                      buffer from immediately preceeding RECEIVE-
                      LOCATE to be FREEd, then does a RECEIVE-
                      LOCATE as described above.

    FREE              Buffer pointer as supplied by LOCATE.  If
                      zero, all LOCATE'd buffers will be freed.

    POST              Zero.  Causes partner to be POST'ed with
                      Discretionary post indication.


    INFO              Pointer to list of buffer addresses and
                      lengths, each entry is 8 bytes long.  The end
                      of the list is signified by turning on the
                      high-order bit.  As much of the following
                      information as will fit is placed into the
                      buffer area(s):

                          Partner's ASCB Address (4 Bytes)
                          Partner's Buffer Size (4 Bytes)
                          Partner's Path Name (8 Bytes)
                          Input Transaction Chain Pointer (4 Bytes)
