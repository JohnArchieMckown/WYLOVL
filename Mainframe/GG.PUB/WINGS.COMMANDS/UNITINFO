;
;  Wings - Show UCB information
;
xproc () begin

   declare number  x.pathno
   declare string  open_str
   declare string  open_opt
   declare string  msg  helpdsn
   declare string  rc
   declare boolean dump
   helpdsn='WYL.GG.PUB.WINGS.COMMANDS(HELPUI)'

   on error cmd 'pcall err_routine'
   on attn  cmd 'pcall err_routine'

   msg = 'yourtag=&(fpath) noheader wait=5'
   syscall path_open(x.pathno, msg, rc)
   if (rc ne 'OK') begin
      syscall path_close(x.pathno)
      if  (rc eq 'TIMEOUT') begin
         comm Path did not open, check FPATH value'
      end
      else begin
         comm Path error on open = &(rc)
      end
      xreturn
   end

   open_str = sub('UNIT_INFO:',1,16)
   open_opt = parm_string
   if(abb('DUMP',upp(scan_token(open_opt)),3)) begin   ; DUMP
      open_opt = scan_skip(open_opt)             ; strip DUMP
      dump = true
      end
   if(abb('HELP',upp(scan_token(open_opt)),3)) begin   ; HELP
      try list from &(helpdsn) unn
      xreturn
      end
   msg = open_str || open_opt

   syscall path_write(x.pathno, ' ', msg, rc)
   if (rc ne 'OK') begin
      syscall path_close(x.pathno)
      comm Path write error - &(rc)
      xreturn
   end

   pcall getdata(msg)
   while (sub(msg,1,16) eq sub('DATA:',1,16)) begin
      msg = substr(msg,17)
      if (dump) putend &(msg)
      else wri msg
      pcall getdata(msg)
   end                             ;  (while)

   syscall path_close(x.pathno)

end

proc getdata(msg) begin
   declare string rc
   syscall path_read(x.pathno, ' ', msg, rc)
   if (rc ne 'OK') begin
      syscall path_close(x.pathno)
      comm path read error = &(rc)
      xreturn
   end
   return (msg)
end

proc err_routine() begin

   syscall path_close(x.pathno)
   xreturn

end
