//IEAVMXIT JOB gg.mvs,'Asm IEAVMXIT',TIME=(,15)
//*JOBPARM LINES=10,forms=gbar,duplex=yes
//HIASMCL PROC
//ASM     EXEC PGM=IEV90,REGION=2048K,COND=(0,NE),
//             PARM=(,'LINECNT=32500','XREF(SHORT)',TERM)
//STEPLIB  DD  DSN=SYS2.ASMH.SLACV29.LINKLIB,DISP=SHR
//SYSLIB   DD  DSN=WYL.GG.SYS.MACLIB,DISP=SHR,DCB=BLKSIZE=8000
//         DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.MODGEN,DISP=SHR
//SYSUT1   DD  DSN=&&SYSUT1,UNIT=VIO,DISP=(NEW,DELETE),
//             SPACE=(1024,(500,250),,CONTIG,ROUND)
//SYSTERM  DD  SYSOUT=C
//SYSPRINT DD  DSN=&&PRINT,UNIT=VIO,DISP=(NEW,PASS),
//             SPACE=(6171,(250,250),RLSE),
//             DCB=(BLKSIZE=6171,LRECL=121,RECFM=FBA)
//SYSLIN   DD  DSN=&&LOADSET,UNIT=SYSDA,SPACE=(3120,(40,10),RLSE),
//             DISP=(NEW,PASS),DCB=(LRECL=80,BLKSIZE=3120,RECFM=FB)
//*
//$EDIT  EXEC  PGM=ASMEDIT,COND=EVEN,REGION=64K
//ASMOUT   DD  DSN=&&PRINT,DISP=(OLD,DELETE)
//STEPLIB  DD  DSN=WYL.GG.SYS.LINKLIB,DISP=SHR
//SYSPRINT DD  SYSOUT=$
//*
//LKED    EXEC PGM=HEWL,
//             PARM=(LET,LIST,MAP,RENT,REUS),COND=(5,LT,ASM)
//SYSLIN   DD  DSN=*.ASM.SYSLIN,DISP=(OLD,PASS)
//         DD  DDNAME=SYSIN
//SYSLMOD  DD  DSN=&&GOSET(MAIN),SPACE=(6447,(25,5,1),RLSE),
//             UNIT=DISK,DISP=(NEW,CATLG)
//SYSPRINT DD  SYSOUT=$
//SYSUT1   DD  DSN=&&SYSUT1,UNIT=SYSDA,SPACE=(3120,(120,10),,,ROUND)
//        PEND
//*
//COMPILE EXEC HIASMCL
//ASM.SYSIN DD  *
MXIT     TITLE 'IEAVMXIT - WTO/WTOR MODIFICATION EXIT'
********************************************************************
*                                                                  *
*               STANFORD UNIVERSITY - I.T.S. SYSTEMS               *
*                                                                  *
********************************************************************
*                                                                  *
*   IEAVMXIT   GENERAL MPF WTO/WTOR USER EXIT ROUTINE              *
*                                                                  *
********************************************************************
*                                                                  *
*                                                                  *
*   THE FOLLOWING MESSAGE ID'S ARE PROCESSED IN THIS MPF GENERAL   *
*   USER EXIT.                                                     *
*                                                                  *
*   MSG-ID     MODIFICIATIONS                                      *
*   --------   ------------------------------------------------    *
*                                                                  *
*   AMS001D    REPLY 'S' AUTOMATICALLY FOR IPL SCHEDULED.          *
*                                                                  *
*   AMS002D    REPLY 'OK' AUTOMATICALLY FOR IPL REASON.            *
*                                                                  *
*   AMS003D    REPLY 'OK' AUTOMATICALLY FOR CANCEL REASON.         *
*                                                                  *
*   AMS010I    CHANGE DESCRIPTOR CODE TO 2 (IMMEDIATE ACTION).     *
*                                                                  *
*   IEA911E    START COPYDUMP TO COPY SYS1.DUMPXX AFTER DAR DUMP.  *
*                                                                  *
*   IEC501E    MODIFY THE DESCRIPTOR CODE FROM CRITICAL EVENTUAL   *
*              ACTION, (CODE 11), TO EVENTUAL OPERATOR ACTION      *
*              REQUIRED, (CODE 3).                                 *
*                                                                  *
*   IOS001I    CHANGE THE DESCRIPTOR CODE FROM 4 TO 2 FOR THOSE    *
*                                                                  *
*   IEC543D    REPLY "M" TO REQUEST TO MODIFY LABEL TYPE OF        *
*              CURRENTLY MOUNTED TAPE VOLUME                       *
*                                                                  *
*   IEC704A    REPLY "M" TO REQUEST TO REWRITE VOLUME LABEL        *
*                                                                  *
*              MESSAGES DEALING WITH DIRECT ACCESS STORAGE         *
*              DEVICES.                                            *
*                                                                  *
*                                                                  *
*                                                                  *
********************************************************************
         SPACE 3
         HIBAL ,
         SPACE 2
IEAVMXIT CSECT ,                   DEFINE CONTROL SECTION
IEAVMXIT AMODE 31                  SET 31 BIT ADDRESSING
IEAVMXIT RMODE ANY                 SET ANY RESIDENCY
         EJECT ,
********************************************************************
*                                                                  *
*  DEFINE SYSTEM MAPPING MACROS                                    *
*                                                                  *
********************************************************************
         SPACE 2
*GEN
         PRINT NOGEN               SUPPRESS MACRO EXPANSION
         IEZVX100 ,                WTO COMMUNICATION AREA
         IEFUCBOB ,                UNIT CONTROL BLOCK
         CVT   DSECT=YES           COMMUNICATIONS VECTOR TABLE
         IECDIOCM ,                I/O COMMUNICATIONS AREA
         PRINT GEN                 ENABLE MACRO EXPANSION
*NOGEN
IEAVMXIT CSECT ,                   RESUME CONTROL SECTION
         SPACE 2
TMNTMSG  RECORD BEGIN
TMNTID   DC    CL3'TLM'            MESSAGE HEADER ID
TMNTKEY  DC    CL1'F'              MESSAGE NUMBER
         DC    C' '
TMNTMSID DC    CL7'IEC705I'        MVS/XA WTO MESSAGE ID
         DC    C' '
TMNTVSN  DC    CL6'VOLSER'         TAPE VOLUME SERIAL
         DC    CL1','
TMNTUNIT DC    CL3'550'            TAPE UNIT ADDRESS
         DC    CL233' '            SILLY FILLER FOR TLMSQMGR
         END   ,
         EJECT ,
********************************************************************
*                                                                  *
*   DEFINE DYNAMIC WORK AREA FOR IEAVMXIT ROUTINE                  *
*                                                                  *
********************************************************************
         SPACE 2
VMWRK    RECORD BEGIN              DEFINE WORK AREA FORMAT
VMSAVE   DC    18A(0)              DEFINE SAVE AREA
VMIOS    DC    16A(0)              WORK AREA FOR IOSLOOK MACRO
MGCR     IEZMGCR DSECT=NO          MGCR PARM LIST
         ORG   MGCRTEXT
WTORCMD  DS    CL6                 REPLY COMMAND
WTORMID  DS    CL2                 REPLY ID
WTORMSG  DS    CL3                 REPLY RESPONSE
         DC    0D'0'
TMNTAREA DS    CL(L'TMNTMSG)       BUILD AREA FOR TLMS TRANSACTION
         END   ,
         SPACE 3
         DATA  BEGIN               DEFINE VMXIT DATA AREA
         SPACE ,
MSGTBLE  DC    0A(0)               DEFINE MESSAGE TABLE
******   DC    A(X'00000000'+WREPLYU),CL8'AHL125A'   ****** PJ, you
******               got no business putting this in ******
         DC    A(X'00000000'+AMS001D),CL8'AMS001D'
         DC    A(X'00000000'+AMS002D),CL8'AMS002D'
         DC    A(X'00000000'+AMS002D),CL8'AMS003D'
         DC    A(X'00000000'+AMS010I),CL8'AMS010I'
         DC    A(X'00000000'+IEA911E),CL8'IEA911E'
         DC    A(X'00000000'+GENTMNT),CL8'IEC501A'
         DC    A(X'00000000'+IEC501E),CL8'IEC501E'
         DC    A(X'00000000'+IEC534D),CL8'IEC534D'
         DC    A(X'00000000'+IEC704A),CL8'IEC704A'
         DC    A(X'00000000'+IEC705I),CL8'IEC705I'
         DC    A(X'00000000'+GENTMNT),CL8'IEF233A'
         DC    A(X'00000000'+GENTMNT),CL8'IEF233D'
         DC    A(X'00000000'+IKT010D),CL8'IKT010D'
         DC    A(X'00000000'+WREPLYU),CL8'IKT012D'
         DC    A(X'00000000'+IOS001I),CL8'IOS000I'
         DC    A(X'80000000'+IOS001I),CL8'IOS001I'
         SPACE ,
AMSRTXTS DC    CL10'REPLY xx,S'    REPLY SCHEDULED IPL
AMSRTXTR DC    CL11'REPLY xx,OK'   REPLY IPL OR CANCEL REASON
IECREPLM DC    CL10'REPLY xx,M'    REPLY TO REJECT TAPE VOLUME
REPLYSIC DC    CL12'REPLY xx,SIC'  REPLY 'SIC' TO IKT010D
REPLYUTX DC    CL10'REPLY xx,U'    REPLY 'U' TEXT
IEASTART DC    CL20'S OPSRDR,NAME=DUMPxx' START IPCS COPY
         SPACE ,
         END   ,
         EJECT ,
********************************************************************
*                                                                  *
*  IEAVMXIT MAIN ENTRY POINT                                       *
*                                                                  *
********************************************************************
         SPACE 2
         STM   R14,R12,@R13+12     SAVE CALLING REGISTERS
         LR    R12,R15               SET EXIT ROUTINE BASE
         L     R11,@R1                 SET ADDRESS OF CTXT
         CLEAR R10                       INDICATE NO DYNAMIC MEMORY
         SPACE ,
         USING IEAVMXIT,R12        DECLARE BASE REGISTER
         USING CTXT,R11              DECLARE BASE TO CTXT
         USING VMWRK,R10               DECLARE BASE TO WORK AREA
         SPACE ,
         EJECT ,
*
*  SCAN MESSAGE TABLE FOR ANY APPROPRIATE ACTION ROUTINE
*
         SPACE ,
         LA    R3,MSGTBLE          ADDRESS OF MESSAGE TABLE
         L     R2,CTXTTXPJ         ADDRESS OF MAJOR TEXT AREA
         WITH  (CTXTATTR,R2),BEGIN ADDRESSABILITY TO TEXT AREA
         LOOP  BEGIN               LOOK FOR SPECIFIC ENTRY
         CLC   CTXTTMSG(8),@R3+4   FOUND MESSAGE IDENTIFIER
         IF    LT,EXIT             NO POSSIBLE FURTHER MATCH
         IF    E,BEGIN             YES -- ENTER MESSAGE PROCESSOR
         BAS   R9,GETSAVE          ACQUIRE DYNAMIC WORK AREAS
         L     R9,@R3              LOAD ADDRESS OF ROUTINE
         BASR  R9,R9               ENTER PROCESSING ROUTINE
         END   ,
         TM    @R3,X'80'           TEST FOR LAST MESSAGE
         LA    R3,@R3+12           BUMP TABLE POINTER
         UNTIL O,END               LOOK FOR NEXT MESSAGE
         END   ,
         SPACE 2
VMRET    LABEL ,                   RETURN TO SYSTEM
         IF    (R10,NZ),BEGIN      RELEASE DYNAMIC WORK AREA
         L     R13,@R13+4          RESET CALLED SAVE AREA ADDRESS
         FREEMAIN RU,LV=L'VMWRK,A=(R10),SP=230  RELEASE MEMORY
         END   ,
         LM    R14,R12,@R13+12     RESTORE CALLING REGISTERS
         BR    R14                   RETURN TO CALLER
         EJECT ,
********************************************************************
*                                                                  *
*  WREPLYU     GENERAL REPLY 'U' ROUTINE                           *
*                                                                  *
*        CALLED FOR IKT012D   TSO SHUTDOWN                         *
*                   AHL125A   GTF OPTION PROMPT                    *
*                                                                  *
********************************************************************
         SPACE 2
WREPLYU  LABEL ,
         XC    MGCRPL(MGCRLTH),MGCRPL  CLEAR PARM LIST
         MVC   MGCRTEXT(L'REPLYUTX),REPLYUTX  MOVE IN REPLY TEXT
         MVC   WTORMID,CTXTRPID    INSERT REPLY ID
         LA    R1,(MGCRTEXT-MGCRPL)+L'REPLYUTX  GET MGCRPL LEN
         STC   R1,MGCRLGTH         SAVE IN MGCRPL
         SR    R0,R0               CLEAR REG ZERO
         MGCR  MGCRPL              ISSUE WTOR REPLY
         B     VMRET               EXIT
         EJECT ,
********************************************************************
*                                                                  *
*  IKT010D     MESSAGE PROCESSOR ROUTINE                           *
*                                                                  *
*        REPLY 'SIC' TO TSO SHUTDOWN MESSAGE                       *
*                                                                  *
********************************************************************
         SPACE 2
IKT010D  LABEL ,
         XC    MGCRPL(MGCRLTH),MGCRPL  CLEAR PARM LIST
         MVC   MGCRTEXT(L'REPLYSIC),REPLYSIC  MOVE IN REPLY TEXT
         MVC   WTORMID,CTXTRPID    INSERT REPLY ID
         LA    R1,(MGCRTEXT-MGCRPL)+L'REPLYSIC  GET MGCRPL LEN
         STC   R1,MGCRLGTH         SAVE IN MGCRPL
         SR    R0,R0               CLEAR REG ZERO
         MGCR  MGCRPL              ISSUE WTOR REPLY
         B     VMRET               EXIT
         EJECT ,
********************************************************************
*                                                                  *
*  AMS001D     MESSAGE PROCESSOR ROUTINE                           *
*                                                                  *
*        REPLY 'S' AUTOMATICALLY FOR IPL SCHEDULED                 *
*                                                                  *
********************************************************************
         SPACE 2
AMS001D  LABEL ,
         OI    CTXTRFB2,CTXTRHCO   SUPPRESS THE MESSAGE
         XC    MGCRPL(MGCRLTH),MGCRPL  CLEAR PARM LIST
         MVC   MGCRTEXT(L'AMSRTXTS),AMSRTXTS  MOVE IN REPLY TEXT
         MVC   WTORMID,CTXTRPID    INSERT REPLY ID
         LA    R1,(MGCRTEXT-MGCRPL)+L'AMSRTXTS  GET MGCRPL LEN
         STC   R1,MGCRLGTH         SAVE IN MGCRPL
         SR    R0,R0               CLEAR REG ZERO
         MGCR  MGCRPL              ISSUE WTOR REPLY
         B     VMRET               EXIT AMS001D REPLY
         EJECT ,
********************************************************************
*                                                                  *
*  AMS002D     MESSAGE PROCESSOR ROUTINE                           *
*  AMS003D     MESSAGE PROCESSOR ROUTINE                           *
*                                                                  *
*        REPLY 'OK' AUTOMATICALLY FOR IPL OR CANCEL REASON         *
*                                                                  *
********************************************************************
         SPACE 2
AMS002D  LABEL ,
         OI    CTXTRFB2,CTXTRHCO   SUPPRESS THE MESSAGE
         XC    MGCRPL(MGCRLTH),MGCRPL  CLEAR PARM LIST
         MVC   MGCRTEXT(L'AMSRTXTR),AMSRTXTR  MOVE IN REASON TEXT
         MVC   WTORMID,CTXTRPID    INSERT REPLY ID
         LA    R1,(MGCRTEXT-MGCRPL)+L'AMSRTXTR  GET MGCRPL LEN
         STC   R1,MGCRLGTH         SAVE IN MGCRPL
         SR    R0,R0               CLEAR REG ZERO
         MGCR  MGCRPL              ISSUE WTOR REPLY
         B     VMRET               EXIT AMS002D AND AMS003D REPLY
         EJECT ,
********************************************************************
*                                                                  *
*  AMS010I     MESSAGE PROCESSOR ROUTINE                           *
*                                                                  *
*        CHANGE DESCRIPTOR CODE TO 2 (IMMEDIATE ACTION)            *
*                                                                  *
********************************************************************
         SPACE 2
AMS010I  LABEL ,
         OI    CTXTRFB1,CTXTRCDC   REQUEST CHANGE TO DESCRIPTOR
         L     R2,CTXTDCP          ADDRESS OF DESCRIPTOR CODES
         WITH  (CTXTDESC,R2),BEGIN
         MVI   CTXTDC1,CTXTDC02    SET IMMEDIATE ACTION
         MVI   CTXTDC2,X'00'       CLEAR REMAINING DESCRIPTORS
         END   ,
         B     VMRET               EXIT AMS010I MODIFICATION
         EJECT ,
********************************************************************
*                                                                  *
*  IEA911E     MESSAGE PROCESSOR ROUTINE                           *
*                                                                  *
*        ISSUE A START COMMAND FOR COPYDUMP TO COPY AN SVC DUMP    *
*        TO A GDG AND PERFORM PRELIMINARY ANALYSIS                 *
*                                                                  *
********************************************************************
         SPACE 2
IEA911E  LABEL ,
         WITH  (CTXTATTR,R2),BEGIN ADDRESSABILITY TO TEXT AREA
           CLC   =C'SYS1.DUMP',CTXTTMSG+25 DO SOME VERIFYING
           IF    E,BEGIN
             XC    MGCRPL(MGCRLTH),MGCRPL  CLEAR PARM LIST
             MVC   MGCRTEXT(L'IEASTART),IEASTART  MOVE IN COMMAND
             MVC   MGCRTEXT+18(2),CTXTTMSG+34  UPDATE DUMP DSN
             LA    R1,(MGCRTEXT-MGCRPL)+L'IEASTART  GET MGCRPL LEN
             STC   R1,MGCRLGTH         SAVE IN MGCRPL
             SR    R0,R0               CLEAR REG ZERO
             MGCR  MGCRPL              ISSUE WTOR REPLY
           END   ,
         END   ,
         B     VMRET               EXIT IEA911E REPLY
         EJECT ,
********************************************************************
*                                                                  *
*  IEC501E     MESSAGE PROCESSOR ROUTINE                           *
*                                                                  *
*        MODIFY DESCRIPTOR CODE FROM 11 BACK TO CODE 3, (EVENTUAL  *
*        ACTION REQUIRED).                                         *
*                                                                  *
********************************************************************
         SPACE 2
IEC501E  LABEL ,
         OI    CTXTRFB1,CTXTRCDC   REQUEST CHANGE TO DESCRIPTOR
         L     R2,CTXTDCP          ADDRESS OF DESCRIPTOR CODES
         WITH  (CTXTDESC,R2),BEGIN
         MVI   CTXTDC1,CTXTDC03    SET EVENTUAL ACTION REQUIRED
         MVI   CTXTDC2,X'00'       CLEAR DESCRIPTOR CODE 11
         END   ,
         B     GENTMNT             EXIT IEC501E MODIFICATION
********************************************************************
*                                                                  *
*  IEC534D AND IEC704A PROCESSOR ROUTINE                           *
*                                                                  *
*        REPLY 'M' AUTOMATICALLY FOR TAPE VOLUME REJECTION         *
*                                                                  *
********************************************************************
         SPACE 2
IEC534D  LABEL ,
IEC704A  LABEL ,
         XC    MGCRPL(MGCRLTH),MGCRPL  CLEAR PARM LIST
         MVC   MGCRTEXT(L'IECREPLM),IECREPLM  MOVE IN REPLY TEXT
         MVC   WTORMID,CTXTRPID    INSERT REPLY ID
         LA    R1,(MGCRTEXT-MGCRPL)+L'AMSRTXTS  GET MGCRPL LEN
         STC   R1,MGCRLGTH         SAVE IN MGCRPL
         SR    R0,R0               CLEAR REG ZERO
         MGCR  MGCRPL              ISSUE WTOR REPLY
         B     VMRET               EXIT AMS001D REPLY
         EJECT ,
         EJECT ,
********************************************************************
*                                                                  *
*  IEC705I     MESSAGE PROCESSOR ROUTINE                           *
*                                                                  *
*        PASS MOUNT REQUEST ON TO TLMS FOR ADDING A SLOT NUMBER    *
*        LOCATION                                                  *
*                                                                  *
********************************************************************
         SPACE 2
IEC705I  LABEL ,
         L     R2,CTXTTXPJ         ADDRESS OF MAJOR TEXT AREA
         WITH  (CTXTATTR,R2),BEGIN ADDRESSABILITY TO TEXT AREA
         LA    R3,TMNTAREA         ADDRESS OF TRANSACTION AREA
         USING TMNTMSG,R3          ADDRESSABILITY TO TRANSACTION
         MVI   TMNTMSG,C' '        BLANK PROPOGATE AREA
         MVC   TMNTMSG+1(L'TMNTMSG-1),TMNTMSG
         MVC   TMNTID,=C'TLM'      SET MESSAGE HEADER
         MVI   TMNTKEY,C'F'
         MVC   TMNTMSID,CTXTTMSG       SET WTO MESSAGE ID
         MVC   TMNTVSN,CTXTTMSG+20     SET VOLUME SERIAL
         MVC   TMNTUNIT,CTXTTMSG+16    SET TAPE UNIT
         LA    R0,2                PUT TO TLMS QUEUE
         LR    R1,R3               SET ADDRESS OF TRANSACTION
         SVC   238                 INFORM TLMS OF DRIVE STATUS
         DROP  R3                  RELEASE TRANSACTION AREA
         END   ,
         B     VMRET               EXIT MODIFICATION
         EJECT ,
********************************************************************
*                                                                  *
*  IEF233A     MESSAGE PROCESSOR ROUTINE                           *
*                                                                  *
*        PASS MOUNT REQUEST ON TO TLMS FOR ADDING A SLOT NUMBER    *
*        LOCATION                                                  *
*                                                                  *
********************************************************************
         SPACE 2
GENTMNT  LABEL ,
         L     R2,CTXTTXPJ         ADDRESS OF MAJOR TEXT AREA
         WITH  (CTXTATTR,R2),BEGIN ADDRESSABILITY TO TEXT AREA
         LA    R3,TMNTAREA         ADDRESS OF TRANSACTION AREA
         USING TMNTMSG,R3          ADDRESSABILITY TO TRANSACTION
         MVI   TMNTMSG,C' '        BLANK PROPOGATE AREA
         MVC   TMNTMSG+1(L'TMNTMSG-1),TMNTMSG
         MVC   TMNTID,=C'TLM'      SET MESSAGE HEADER
         MVI   TMNTKEY,C'F'        SET MESSAGE ID
         MVC   TMNTMSID,CTXTTMSG       SET WTO MESSAGE ID
         MVC   TMNTVSN,CTXTTMSG+14     SET VOLUME SERIAL
         MVC   TMNTUNIT,CTXTTMSG+10    SET TAPE UNIT
         LA    R0,2                PUT TO TLMS QUEUE
         LR    R1,R3               SET ADDRESS OF TRANSACTION
         SVC   238                 INFORM TLMS OF DRIVE STATUS
         DROP  R3                  RELEASE TRANSACTION AREA
         END   ,
         B     VMRET               EXIT MODIFICATION
         EJECT ,
********************************************************************
*                                                                  *
*  IOS001I     MESSAGE PROCESSOR ROUTINE                           *
*                                                                  *
*        MODIFY DESCRIPTOR CODE FROM 4 TO 2 FOR THOSE MESSAGES     *
*        DEALING WITH DIRECT ACCESS DEVICES.                       *
*                                                                  *
********************************************************************
         SPACE 2
IOS001I  LABEL ,
         L     R2,CTXTTXPJ         ADDRESS OF MAJOR TEXT AREA
         WITH  (CTXTATTR,R2),BEGIN ADDRESSABILITY TO TEXT AREA
         LA    R3,3                SET FOR THREE DIGITS TO CONVERT
         LA    R4,CTXTTMSG+8       POINT TO "DDD" PART OF IOS001I
         CLEAR R0                  ZERO ACCUMULATOR REGISTER
         LOOP  BEGIN               CONVERT UCB ADDRESS
         LC    R15,@R4             SET DIGIT INTO REGISTER
         N     R15,=A(15)          JUST LEAVE RIGHT NIBBLE
         CLI   @R4,C'0'            IN RANGE FROM A-F (?)
         IF    LT,'A R15,=A(9)'    YES, ADJUST NIBBLE
         SLL   R0,4                SHIFT ACCUMULATOR OVER
         ALR   R0,R15              ADD IN CONVERTED NIBBLE
         LA    R4,@R4+1            INCREMENT MESSAGE POINTER
         S     R3,=A(1)            DECREMENT COUNT
         UNTIL Z,END               GET NEXT DIGIT
         END   ,
         SPACE ,
         BAS   R9,GETUCB           RETURN UCB ADDRESS
         IF    (R15,Z),BEGIN       FOUND VALID UCB ADDRESS
         LR    R3,R0               COPY ADDRESS OF UCB
         WITH  (UCBOB,R3),BEGIN    ADDRESSABILITY TO UCB
         IF    UCBTBYT3.UCB3DACC,BEGIN       MODIFIY DESCRIPTOR
         OI    CTXTRFB1,CTXTRCDC   REQUEST CHANGE TO DESCRIPTOR
         L     R2,CTXTDCP          ADDRESS OF DESCRIPTOR CODES
         WITH  (CTXTDESC,R2),BEGIN
         MVI   CTXTDC1,CTXTDC02    SET IMMEDIATE ACTION REQUIRED
         MVI   CTXTDC2,X'00'       CLEAR ANY OTHER DESCRIPTORS
         END   ,
         END   ,
         END   ,
         END   ,
         B     VMRET               EXIT IOS001I MODIFICATION
         EJECT ,
********************************************************************
*                                                                  *
*  OBTAIN UCB ADDRESS                                              *
*                                                                  *
*        R0 CONTAINS RIGHT JUSTIFIED UCB DEVICE ADDRESS            *
*                                                                  *
*        ON RETURN R0 CONTAINS THE UCB ADDRESS                     *
*                                                                  *
********************************************************************
         SPACE ,
GETUCB   LABEL ,
         LR    R8,R13              DON'T STEP ON MY SAVE AREA!
         LA    R13,VMIOS           WORK AREA FOR IOSLOOK ROUTINE
         IOSLOOK UCB=(R0),DEV=(R0) OBTAIN UCB ADDRESS
         LR    R13,R8              RESTORE SAVE AREA POINTER
         BR    R9                  RETURN TO CALLER
         EJECT ,
********************************************************************
*                                                                  *
*  MESSAGE PERTAINS TO THIS MODULE, OBTAIN DYNAMIC WORK            *
*  AREA MEMORY AND LINK SAVE AREA POINTERS                         *
*                                                                  *
********************************************************************
         SPACE 2
GETSAVE  LABEL ,                   GET DYNAMIC MEMORY
         GETMAIN RC,LV=L'VMWRK,SP=230,LOC=BELOW  REQ DYNAMIC MEMORY
*                                  (MUST BE BELOW FOR MGCR)
         IF    (R15,NZ),VMRET      RETURN ON INSUFFICIENT MEMORY
         LR    R10,R1              SET ADDRESS OF WORK AREA
         SPACE ,
         LA    R15,VMSAVE          ADDRESS OF OUR SAVE AREA
         ST    R15,@R13+8            CHAIN BACK SAVE AREA
         ST    R13,@R15+4              CHAIN FORWARD SAVE AREA
         LR    R13,R15                   RESET SAVE AREA POINTER
         BR    R9                          RETURN TO CALLER
         EJECT ,
*
*  DEFINE FINAL LITERAL POOL
*
         DROP  ,                   RELEASE ALL ADDRESSABILITY
         SPACE 2
         LTORG ,                   GENERATE LITERAL POOL
         END   .
//*LKED.SYSLMOD DD  DSN=SYS2.XA.RESLIB,DISP=SHR,VOL=,
//*             UNIT=DISK,SPACE=,DCB=
//LKED.SYSLMOD DD  DSN=SYS1.LINKLIST.SYSA,DISP=SHR,
//             UNIT=DISK,SPACE=,DCB=
//LKED.SYSIN DD  *
   NAME IEAVMXIT(R)
