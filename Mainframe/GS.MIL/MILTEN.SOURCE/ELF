ELF      TITLE 'MILTEN''S ELF Interface'                                        
*******************************************************************             
*                                                                 *             
*     MILTEN/370 - Release IV - Class I - Stanford Proprietary    *             
*                                                                 *             
*******************************************************************             
         HIBAL                                                                  
*box                                                                            
*                                                                               
*  Things to do (2/4/88):                                                       
*                                                                               
*  -  Make IACCHK state driven so that an IAC sequence split across             
*     TCPDATA packets will still work correctly.                                
*                                                                               
*  -  Add support for IAC sub-options (skip IAC SB ... IAC SE).                 
*                                                                               
*  -  Support long lines; add a PDB completion flag that says 'more             
*     data waiting' or something.  Server SMTP would use this for               
*     lines of data much longer than a Wylbur line.  We need                    
*     something like wrap/split.                                                
*                                                                               
*  -  Complete the implementation of the ELF protocol.                          
*                                                                               
*  -  A read which ends with BREAK should return the data if                    
*     TRANSPARENT mode.                                                         
*                                                                               
*                                                                               
*  Major revisions:                                                             
*                                                                               
*     8/10/90  Niz  Add ELF reconnect protocol and scanning for                 
*                   initial parameters.  The reconnect changes                  
*                   work with the new Samson/MacSamson, and the                 
*                   ELF parameters are passed by the new ELF.                   
*                                                                               
*     8/13/90  Niz  Add SET/SHOW ELF commands.                                  
*                                                                               
MILELF   CSECT                                                                  
ELF      IDENT 2047                10:16:23 02/16/02  (SLP)                     
         REGS  ,,FSR,,,,,,BR,SCBR,PIBR,(FEBR,LSR),CVR,SPR,RAR                   
*                                                                               
         PUSH  DSECTS                                                           
*                                                                               
CVDSECT  DSECT                                                                  
         COPY  CV                                                               
*                                                                               
PDB      RECORD 'PDB'                                                           
*                                                                               
         COPY  FDB                                                              
*                                                                               
SCB      RECORD BEGIN                                                           
         COPY  SCB                                                              
         END                                                                    
*                                                                               
SCANCB   RECORD 'SCANCB'                                                        
*                                                                               
SEGCB    RECORD 'SEGCB'                                                         
*                                                                               
         POP   DSECTS                                                           
         EJECT                                                                  
         COPY  SUBPOOLS                                                         
         EJECT                                                                  
*box                                                                            
*                                                                               
*    User Path control block.                                                   
*                                                                               
*      MUST BE EXACTLY THE SAME AS MPATH!                                       
*                                                                               
UPATH    RECORD BEGIN                                                           
UPAT     MILPATH                                                                
         END                                                                    
         EJECT                                                                  
FEB      RECORD BEGIN                                                           
         COPY  FEB                                                              
*****  DEVICE DEPENDENT LINE                                                    
FEBTFLG1 FLAG                                                                   
         FLAG  FEBFCTRL            - Segging "control" information              
         FLAG  FEBFASC             - Translate seg data to ASCII                
*                                                                               
FEBPLAST DS    H                   Last port number assigned                    
*                                                                               
         DS    0D                                                               
FEBUPATH DS    XL(L'UPATH)         Room for UPATH                               
*                                                                               
*push,nogen                                                                     
FEBUSG   SEGCB ,                   SEGCB for path writes                        
*pop                                                                            
*                                                                               
FEBAPATH DS    CL8                 Amelia's pathname (YOURTAG=)                 
FEBSOCKH DS    A                   Socket listen queue head                     
FEBFLOWH DS    F                   Flow control: high water mark                
FEBFLOWL DS    F                   Flow control: low water mark                 
*                                                                               
FEBRCP   DC    2A(0)               Return code string len, loc                  
*                                                                               
FEBAMY#E DS    F                   Number of Suzan errors                       
FEBAMY#F DS    F                   Number of full queue conditions              
*                                                                               
FEBAMYQH DS    A                   Amelia full queue head ptr                   
FEBAMYQT DS    A                   Amelia full queue tail ptr                   
         END                                                                    
         EJECT                                                                  
*box                                                                            
*                                                                               
*  External front-end packet header                                             
*                                                                               
HDR      RECORD BEGIN                                                           
HDRID    DS    CL4'ELF0'           Self identification ID                       
*                                                                               
HDRTYPE  DS    C                   >=from MILTEN; <=to MILTEN                   
HDRCMD   DS    C                   Command code                                 
HDRFRD   EQU   C'R',,C'N'          - Terminal read                              
HDRFWR   EQU   C'W',,C'N'          - Terminal write                             
HDRFHALT EQU   C'H',,C'N'          - Halt the last operation                    
HDRFINFO EQU   C'I',,C'N'          - Session info (set terminal)                
HDRFSOS  EQU   C'S',,C'N'          - Start a session                            
HDRFEOS  EQU   C'E',,C'N'          - End a session                              
*                                                                               
HDRCPL   DS    C                   Completion code                              
HDRRNORM EQU   C' ',,C'N'          - Normal completion                          
HDRRATTN EQU   C'A',,C'N'          - Attn completion                            
HDRRHALT EQU   C'H',,C'N'          - Ended because of halt                      
HDRRERR  EQU   C'E',,C'N'          - Ended with error                           
*                                                                               
HDRBLANK DS    C                   Blank (reserved)                             
HDRXL    EQU   HDRID,*-HDRID,C'X'  (Parts of HDR to translate)                  
*                                                                               
HDROFLG  FLAG                                                                   
         FLAG  HDRFDISP            - Display mode I/O                           
         FLAG  HDRFSTIB            - Suppress trailing input blanks             
         FLAG  HDRFRUND            - Rundown mode (for reads)                   
         FLAG  HDRFTAH             - Typeahead mode                             
         FLAG  HDRFUPL             - Uplow                                      
         FLAG  HDRFTRAN            - Transparent I/O                            
         FLAG  HDRFBACK            - Back                                       
         FLAG  HDRFNWA             - No write attentions                        
*                                                                               
HDROFLG2 FLAG                                                                   
         FLAG  HDRFNECH            - Noecho                                     
         FLAG  HDRFNST             - No stars on read attn                      
         FLAG  HDRFSLOW            - Slow (no tabs)                             
         FLAG  HDRFXON             - Send XON char for reads                    
         FLAG  HDRFFILT            - Filter input ctrl chars                    
         FLAG  HDRFNLF             - No read LF on CR                           
         FLAG  HDRFHALF            - Half duplex terminal (noecho)              
         FLAG  HDRFNMOD            - No model terminal translation              
*                                                                               
HDROFLG3 FLAG                                                                   
         FLAG  HDRFVFAST           - View fast mode                             
         FLAG  HDRFBUFIO           - Buffered (transparent) I/O                 
*                                                                               
HDROFLG4 FLAG                                                                   
*                                                                               
HDRRSV   DS    F                   Reserved (zeros)                             
*                                                                               
HDRINMAX DS    H                   Max input data length (for READ)             
*                                                                               
HDRLEN   DS    H                   Length of data that follows                  
*                                                                               
HDRTEXT  EQU   *                   Text (if any) starts here                    
         END                                                                    
         EJECT                                                                  
*box                                                                            
*                                                                               
*  Socket Information Entry                                                     
*                                                                               
SOCK     RECORD BEGIN                                                           
SOCKID   DS    CL4'SOCK'           Self identification                          
SOCKLINK DS    A                   Next SOCK ptr (or zero)                      
*                                                                               
SOCKPROTO FLAG                                                                  
         FLAG  (SOCKPELF,1,EQ)        - ELF protocol                            
         FLAG  (SOCKPRECONNECT,2,EQ)  - RECONNECT protocol                      
         FLAG  (SOCKPTELNET,3,EQ)     - TELNET protcol                          
*                                                                               
SOCKFLAG FLAG                                                                   
         FLAG  SOCKFIAC            - Use IAC sequences                          
         FLAG  SOCKFLISTEN         - We are listening to this socket            
         FLAG  SOCKFTRACE          - Trace session I/Os                         
         FLAG  SOCKFKEEP           - Keep after logoff (for debugging)          
*                                                                               
         DS    XL3                 Reserved                                     
*                                                                               
SOCKNO   DS    F                   Socket number to listen on                   
SOCKMAX  DS    F                   Max number of sessions to allow              
SOCKFLOH DS    F                   Flow control: high water mark                
SOCKFLOL DS    F                   Flow control: low water mark                 
SOCKSYS  DS    CL8                 Initial subsystem name (or zeros)            
SOCKACCT DS    CL(L'SCBACCT)       Session account (uuugg)                      
SOCKCMD  DS    CL200               First command to execute                     
*                                                                               
SOCKMSGL DS    H                   Initial message text length                  
SOCKMSGP DS    A                   Message text ptr                             
         END                                                                    
         EJECT                                                                  
*box                                                                            
*                                                                               
*  Special control byte values.                                                 
*                                                                               
$CTRLC   EQU   X'03',,C'N'         Ctrl-C (treated as break)                    
$LF      EQU   X'0A',,C'N'         Line-feed                                    
$CR      EQU   X'0D',,C'N'         Carriage return                              
*                                                                               
$SE      EQU   X'F0',,C'N'         240: End of subparms                         
$NOP     EQU   X'F1',,C'N'         241: No operation                            
$DM      EQU   X'F2',,C'N'         242: Data mark                               
$BRK     EQU   X'F3',,C'N'         243: Break                                   
$IP      EQU   X'F4',,C'N'         244: Interrupt process                       
$ABORT   EQU   X'F5',,C'N'         245: Abort output                            
$AYT     EQU   X'F6',,C'N'         246: Are you there                           
$EC      EQU   X'F7',,C'N'         247: Erase character                         
$EL      EQU   X'F8',,C'N'         248: Erase line                              
$GA      EQU   X'F9',,C'N'         249: Go ahead                                
$SB      EQU   X'FA',,C'N'         250: Start of subparms                       
$WILL    EQU   X'FB',,C'N'         251: Will                                    
$WONT    EQU   X'FC',,C'N'         252: Won't                                   
$DO      EQU   X'FD',,C'N'         253: Do                                      
$DONT    EQU   X'FE',,C'N'         254: Don't                                   
$IAC     EQU   X'FF',,C'N'         255: I am a control byte                     
*                                                                               
$BINARY  EQU   0,,C'N'             Transmit-binary                              
$ECHO    EQU   1,,C'N'             Echo                                         
$SGA     EQU   3,,C'N'             Suppress go ahead                            
$SENDLC  EQU   23,,C'N'            Send Location                                
*                                                                               
$RECON   EQU   180,,C'N'           Reconnect (IAC SB option)                    
$SBCONN  EQU   0,,C'N'             Connect (IAC SB RECONNECT option)            
*                                                                               
$CRLF    EQU   1000,,C'N'          Our internal code for CR/LF                  
$STOP    EQU   1001,,C'N'          Our internal code for "stop!"                
         EJECT                                                                  
PINFO    RECORD BEGIN                                                           
PINFTABS DS    CL(L'SCBTABS)       Current tab stops (one byte ea)              
PINFWID  DS    H                   Screen width                                 
PINFHEI  DS    H                   Screen height                                
         END                                                                    
         SPACE 2                                                                
PIB      RECORD BEGIN                                                           
         COPY  PIB                                                              
*-                                                                              
*-       DEVICE DEPENDENT LINE                                                  
*-                                                                              
PIBPROTO FLAG                                                                   
         FLAG  (PIBPELF,1,EQ)        - ELF protocol                             
         FLAG  (PIBPRECONNECT,2,EQ)  - RECONNECT protocol                       
         FLAG  (PIBPTELNET,3,EQ)     - TELNET protcol                           
*                                                                               
PIBAFLG1 FLAG                                                                   
         FLAG  PIBFCLOSING         - TCP connection is closing                  
         FLAG  PIBFREAD            - Subsystem waiting for read data            
         FLAG  PIBFREOF            - Read end of file received                  
         FLAG  PIBFHALT            - Halt operation in progress                 
         FLAG  PIBFIAC             - Send TELNET IAC sequences                  
*                                                                               
PIBAFLG2 FLAG                                                                   
         FLAG  PIBFDSTOP           - Stop sending data to Amelia                
         FLAG  PIBFPCOMP           - Write completion pending                   
         FLAG  PIBFINSTOP          - Stop buffering data from Amelia            
         FLAG  PIBFTRAN            - Currently in transparent mode              
         FLAG  PIBFNOECHO          - Currently in noecho mode                   
         FLAG  PIBFCR              - Last input character was a CR              
*                                                                               
PIBINSTATE FLAG ,                  Input steam state:                           
         FLAG  (PIBINFDATA,0,EQ)     - Expecting input data                     
         FLAG  (PIBINFIAC,1,EQ)      - Expecting IAC option                     
         FLAG  (PIBINFIACWILL,2,EQ)  - Expecting IAC WILL option                
         FLAG  (PIBINFIACWONT,3,EQ)  - Expecting IAC WONT option                
         FLAG  (PIBINFIACDO,4,EQ)    - Expecting IAC DO   option                
         FLAG  (PIBINFIACDONT,5,EQ)  - Expecting IAC DONT option                
*                                                                               
PIBTTYPE DS    CL8                 Terminal type if avail (from ELF)            
*                                                                               
PIBTCLS  DS    CL8                 Terminal class                               
*                                                                               
PIBXACCT DS    CL5                 Session account when we sent info            
*                                                                               
PIBOTCLS DS    CL8                 Saved terminal type                          
PIBOINFO DS    XL(L'PINFO)         Saved PINFO                                  
*                                                                               
PIBRMSG# EQU   15,,C'N'            15 seconds before message                    
PIBRLGF# EQU   30,,C'N'            30 seconds before disconnect                 
PIBTIMERID DS  F                   Timer ID                                     
PIBTICKCUR DS  F                   Current tick count (in seconds)              
PIBTICKMSG DS  F                   Write a msg after this many ticks            
PIBTICKLGF DS  F                   Disconnect after this many ticks             
*                                                                               
PIBSOCKP DS    F                   Our SOCK ptr                                 
*                                                                               
PIBFLOWH DS    F                   Flow control: high water mark                
PIBFLOWL DS    F                   Flow control: low water mark                 
PIBAID   DS    F                   Amelia's TCP connection ID                   
*                                                                               
PIBRIP   DS    F                   Remote host IP address (ELF ip)              
PIBTELIP DS    F                   User's IP address                            
*                                                                               
PIBINX#  EQU   64,,C'N'            "Chunk" size (must be power of 2)            
PIBINMX# EQU   31*1024,,C'N'       Can't handle more than this                  
PIBINHI# EQU   10*1024,,C'N'       Stop buffering more data                     
PIBINLO# EQU   5*1024,,C'N'        Start buffering data again                   
*push,nogen                                                                     
PIBINSG  SEGCB                                                                  
         SEGDEF DUMMY              (Safety)                                     
*pop                                                                            
*                                                                               
PIBEHDR  DS    XL(L'HDR)           Input ELF header                             
         END                                                                    
         EJECT                                                                  
TTRC#    EQU   120                 No. of trace entries                         
TTRCP#   EQU   15                  No. of PIBTRC entries                        
         SPACE 2                                                                
         COPY  ELFTRC                                                           
         EJECT                                                                  
*box                                                                            
*                                                                               
*        ELF Information Block                                                  
*                                                                               
EIB      RECORD BEGIN                                                           
EIBID    DS    CL4'EIB'            Self identification                          
EIBLINK  DS    A                   Next EIB ptr (or zero)                       
*                                                                               
EIBNAME  DS    CL16                ELF name                                     
EIBADDRF DS    CL16                EBCDIC formatted IP address                  
EIBADDR  DS    F                   ELF IP address (binary)                      
EIBPORT  DS    F                   Port number (0=same as us)                   
EIBSIP   DS    F                   Subnet IP address (0=all)                    
EIBSMASK DS    F                   Subnet mask                                  
EIBCUR   DS    F                   Current number of sessions                   
EIBMAX   DS    F                   Maximum number of sessions                   
EIBBIAS  DS    F                   Number to add to EIBCUR for load             
EIBLIMIT DS    F                   Max number of sessions allowed               
EIBFLAG  FLAG                                                                   
         FLAG  EIBFDOWN            - This ELF is down                           
         FLAG  EIBFSTOPPED         - This ELF is stopped                        
EIBINFO  EQU   EIBNAME,*-EIBNAME,C'X'                                           
         END                                                                    
         EJECT                                                                  
*box                                                                            
*                                                                               
*        AMYQ -- Buffered transaction for when Amelia's Suzan                   
*          buffer is full.                                                      
*                                                                               
AMYQ     RECORD BEGIN                                                           
AMYQID   DS    CL4                 Control block ID                             
AMYQLINK DS    A                   Next AMYQ entry (or zero)                    
AMYQDLEN DS    F                   Length of data which follows                 
AMYQHDR  EQU   AMYQID,*-AMYQID,C'X'                                             
*                                                                               
AMYQDATA DS    0X                  Message for Amelia goes here                 
         END                                                                    
         TITLE 'ELF Interface'                                                  
*box                                                                            
*                                                                               
*  ELFDEF -- Routine to process ELF FEB definition.                             
*                                                                               
*    On entry:                                                                  
*       R15 - SCANCB ptr                                                        
*                                                                               
*    On exit, R15 (and CC):                                                     
*      0 - ok, R1 - new FEB ptr                                                 
*      4 - error, R1,R0 - msg loc, len                                          
*                                                                               
ELFDEF   XPROC                                                                  
         LR    R7,R15                                                           
         WITH  (SCANCB,R7)                                                      
*                                                                               
         SEGDEF CVWSG                                                           
*                                                                               
         SCAN  ,SCANCB             Scan for front-end name                      
         IF    NEG,'SETMSG "invalid string."; LA R15,4; EXIT ELFDEF'            
*-                                                                              
*-       Allocate and initialize Telnet front-end block.                        
*-                                                                              
         LA    R0,L'FEB            Length of a ELF FEB                          
         VCALL GETFEB                                                           
         LR    FEBR,R1                                                          
         WITH  FEB                                                              
         MVI   FEBTYPE,FEBTELF                                                  
         MVC   FEBNAME,SCNKW       Front-end name                               
         MVC   FEBINFO,CVBLANKS    No special info                              
         MVC   FEBPMAX,CVMAXSES    Maximum number of sessions                   
         MVC   FEBAPATH,=CL8'AMELIA'  Path YOURTAG                              
*-                                                                              
*-       Scan for DEFINE ELF options.                                           
*-                                                                              
         SCAN  TDEFPRT,SCANCB                                                   
*                                                                               
         IF    (FEBFLOWH,Z),'MVC FEBFLOWH,=F"4096"'  Flow control               
         IF    ((FEBFLOWL,Z),OR,(FEBFLOWL,GE,FEBFLOWH)),BEGIN                   
         L     R15,FEBFLOWH        High flow                                    
         SRL   R15,2               1/4th                                        
         ST    R15,FEBFLOWL        Set low flow                                 
         END                                                                    
*-                                                                              
*-       Allocate front-end trace table.                                        
*-                                                                              
         LA    R0,L'TTRC           Length of trace entry                        
         LA    R1,TTRC#            No. of entries                               
         LA    R15,FEBTRCP                                                      
         VCALL GETTRC              Get trace table                              
*                                                                               
         LA    R1,FEB              Return newly created FEB ptr                 
         CLEAR R15                 A-ok                                         
         EXIT                                                                   
         EJECT                                                                  
*-                                                                              
*-       DEFINE ELF Options.                                                    
*-                                                                              
TDEFPRT  SCKW  PORTS,DEFPORTS,(A,P,PI),99999                                    
         SCKW  PATHNAME,DEFPATH,(A,P)                                           
         SCKW  FLOWHIGH,DEFFHIGH,(A,P,I),999999                                 
         SCKW  FLOWLOW,DEFFLOW,(A,P,I),999999                                   
         SCKW  ,V(DEFPRT),PUSH     (No return)                                  
*                                                                               
DEFPORTS MVC   FEBPMAX,SCNVAL+2                                                 
         BR    RAR                                                              
*                                                                               
DEFPATH  MVC   FEBAPATH,SCNKW                                                   
         BR    RAR                                                              
*                                                                               
DEFFHIGH MVC   FEBFLOWH,SCNVAL                                                  
         BR    RAR                                                              
*                                                                               
DEFFLOW  MVC   FEBFLOWL,SCNVAL                                                  
         BR    RAR                                                              
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ELFPORT -- Routine to process ELF port definition.                           
*    This is a little different than other front-end PORT                       
*    statements in that it does not build a PIB control block.                  
*                                                                               
*    The telnet PORT statement defines a TCP socket number to                   
*    listen to, and what to do when we get a connection on that                 
*    socket number.                                                             
*                                                                               
*    On entry:                                                                  
*      R1 - FEB ptr                                                             
*      R15 - SCANCB ptr                                                         
*                                                                               
TPORTWA  RECORD BEGIN                                                           
TPORTSG  DS    XL(L'SEGCB)         Working seg buffer                           
TPORTBUF DS    CL3000              Working msg text area                        
         END                                                                    
*-                                                                              
ELFPORT  XPROC TPORTWA                                                          
         LR    R7,R15                                                           
         WITH  (SCANCB,R7)                                                      
         LR    FEBR,R1                                                          
         WITH  FEB                                                              
*                                                                               
         SEGDEF CVWSG                                                           
*-                                                                              
*-       Get TCP socket number.                                                 
*-                                                                              
         SCAN  ,SCANCB                                                          
         IF    NP,BEGIN                                                         
         SETMSG 'Missing TCP socket number'                                     
         LA    R15,4                                                            
         B     TPOREXIT                                                         
         END                                                                    
*                                                                               
         DTB   (R1),(R0)           Convert socket number to binary              
         IF    NZ,BEGIN            Bad numerics...                              
         SETMSG 'Bad numeric socket value'                                      
         LA    R15,4                                                            
         B     TPOREXIT                                                         
         END                                                                    
         LR    R2,R15              Save numeric socket number                   
*                                                                               
         LA    R0,L'SOCK                                                        
         LA    R1,SOCKSUBP                                                      
         VCALL NGETCORE            Get SOCK control block                       
         LR    R5,R1                                                            
         WITH  (SOCK,R5)                                                        
         CLEAR SOCK                                                             
         MVC   SOCKID,=CL4'SOCK'   Set self identification                      
         ST    R2,SOCKNO           Save socket number                           
         MVC   SOCKFLOH,FEBFLOWH   Save flow control...                         
         MVC   SOCKFLOL,FEBFLOWL   ...numbers                                   
*-                                                                              
*-       Save Telnet PORT options in SOCK entry.                                
*-                                                                              
         SCAN  TPORTPRT,SCANCB                                                  
         IF    NEG,'SEGWR "Invalid string"'                                     
*-                                                                              
*-       Accept one or more "msg" lines from SYSIN following                    
*-         our current PORT definition.                                         
*-                                                                              
         SEGINIT TPORTBUF,,TPORTSG                                              
         WHILE ('VCALL GETSIN',Z),BEGIN  Get next line of SYSIN...              
         SCINIT (R1),(R0),SCANCB                                                
         SCAN  ,SCANCB             Pick off first word                          
*                                                                               
         WITH  (SCANCB,R15),BEGIN  (Scanner returns R15=SCANCB)                 
         IF    (SCNKW,NE,'MSG '),BEGIN  Not for us...                           
         VCALL UNGETSIN            We don't want this line                      
         B     TPORTSSV                                                         
         END                                                                    
         END                                                                    
*                                                                               
         SCTELL SCANCB             Get remainder of line                        
         LA    R1,@R1+1                                                         
         DECR  R0                                                               
         SEG   (R1),(R0)           Line of text                                 
         SEGCR                                                                  
         END                                                                    
*                                                                               
         SEGDEF CVWSG              Back to regular SEG buffer                   
*                                                                               
TPORTSSV LT    R2,TPORTSG+(SEGCBLENF-SEGCB)  Get text length                    
         IF    POS,BEGIN           We have some text...                         
         LR    R0,R2                                                            
         XPUSH R2                                                               
         LA    R1,SMSGSUBP                                                      
         VCALL NGETCORE            Get memory to save the text                  
         XPOP  R2                                                               
         ST    R1,SOCKMSGP         Save text ptr                                
         MOVEL @R1,TPORTBUF,(R2)   Save text                                    
         STH   R2,SOCKMSGL         Save text length                             
         END                                                                    
*                                                                               
         IF    (SOCKFLOH,Z),'MVC SOCKFLOH,=F"4096"'  Flow control               
         IF    ((SOCKFLOL,Z),OR,(SOCKFLOL,GE,SOCKFLOH)),BEGIN                   
         L     R15,SOCKFLOH        High flow                                    
         SRL   R15,2               1/4th                                        
         ST    R15,SOCKFLOL        Set low flow                                 
         END                                                                    
*-                                                                              
*-       Tidy up the SOCK entry.                                                
*-                                                                              
         IF    (SOCKCMD,EQ,CVBLANKS),'CLEAR SOCKCMD'  No command                
*-                                                                              
*-       Make sure a protocol (TELNET, ELF) has been defined.                   
*-                                                                              
         IF    (SOCKPROTO,Z),BEGIN  No definition...                            
         SEG   'Port '                                                          
         SEGDC L:SOCKNO                                                         
         SETMSG ' definition is incomplete.'                                    
         LA    R15,4                                                            
         B     TPOREXIT                                                         
         END                                                                    
*-                                                                              
*-       Add this SOCK entry to the end of our FEB SOCK queue.                  
*-                                                                              
         LA    R3,FEBSOCKH-(SOCKLINK-SOCK)  Dummy first entry                   
         WITH  (SOCK,R3),BEGIN                                                  
         WHILE ('LR R2,R3; LT R3,SOCKLINK',NZ),''  Find last SOCK               
         END                                                                    
*                                                                               
         ST    R5,SOCKLINK-SOCK(,R2)  Set prev SOCK to point to us              
*                                                                               
         CLEAR R1,R15              A-ok                                         
         B     TPOREXIT                                                         
         EJECT                                                                  
*-                                                                              
*-       PORT options.                                                          
*-                                                                              
TPORTPRT SCKW  SYSTEM,TPORTSYS,(A,P)                                            
         SCKW  ACCOUNT,TPORTACC,(A,P)                                           
         SCKW  ACCT,TPORTACC,(A,P)                                              
         SCKW  COMMAND,TPORTCMD,(A,P)                                           
         SCKW  CMD,TPORTCMD,(A,P)                                               
         SCKW  MAXIMUM,TPORTMAX,(A,P,PI),99999                                  
         SCKW  TELNET,TPORTTEL,A                                                
         SCKW  RECONNEC,TPORTRC,A                                               
         SCKW  ELF,TPORTELF                                                     
         SCKW  FLOWHIGH,TPORTHI,(A,P,I),999999                                  
         SCKW  FLOWLOW,TPORTLOW,(A,P,I),999999                                  
         SCKW  TRACE,TPORTTRC,A                                                 
         SCKW  KEEP,TPORTKP,A                                                   
         SCKW  IAC,TPORTIAC                                                     
         SCKW  NOIAC,TPORTNOI,A                                                 
         SCKW  ,TPORTERR                                                        
*                                                                               
TPORTSYS LPROC R15                                                              
         MVC   SOCKSYS,CVBLANKS                                                 
         CEIL  R0,L'SOCKSYS                                                     
         LR    R15,R0                                                           
         MOVE  R15,SOCKSYS,@R1     Save default subsystem name                  
         PEND                                                                   
*                                                                               
TPORTACC IF    (R0,NE,6),TPORTERR                                               
         IF    (@R1+2,NE,'.'),TPORTERR                                          
         MVC   SOCKACCT(3),@R1+3   uuu                                          
         MVC   SOCKACCT+3(2),@R1   gg                                           
         BR    RAR                                                              
*                                                                               
TPORTCMD LPROC R15                                                              
         SET   SOCKPTELNET         TELNET protocol                              
         CLEAR SOCKFIAC            No IAC sequences                             
         VCALL DEQUOTE             Dequote string if quoted                     
         MVC   SOCKCMD,CVBLANKS    Pre-blank command field                      
         CEIL  R0,L'SOCKCMD                                                     
         LR    R15,R0                                                           
         MOVE  R15,SOCKCMD,@R1     Save first command                           
         PEND                                                                   
*                                                                               
TPORTMAX MVC   SOCKMAX,@R15        Save maximum number of sessions              
         BR    RAR                                                              
*                                                                               
TPORTTEL SET   SOCKPTELNET         TELNET protocol                              
         SET   SOCKFIAC            Using IAC sequences                          
         BR    RAR                                                              
*                                                                               
TPORTRC  SET   SOCKPRECONNECT      RECONNECT protocol                           
         BR    RAR                                                              
*                                                                               
TPORTELF SET   SOCKPELF            ELF protocol                                 
         BR    RAR                                                              
*                                                                               
TPORTTRC SET   SOCKFTRACE                                                       
         BR    RAR                                                              
*                                                                               
TPORTKP  SET   SOCKFKEEP                                                        
         BR    RAR                                                              
*                                                                               
TPORTIAC SET   SOCKFIAC                                                         
         BR    RAR                                                              
*                                                                               
TPORTNOI CLEAR SOCKFIAC                                                         
         BR    RAR                                                              
*                                                                               
TPORTHI  MVC   SOCKFLOH,SCNVAL                                                  
         BR    RAR                                                              
*                                                                               
TPORTLOW MVC   SOCKFLOL,SCNVAL                                                  
         BR    RAR                                                              
*                                                                               
TPORTERR SEG   (R1),(R0)                                                        
         SETMSG ' is an invalid ELF PORT option'                                
         LA    R15,4                                                            
         B     TPOREXIT                                                         
*                                                                               
TPOREXIT PEND                                                                   
*                                                                               
         SEGDEF DUMMY              (Neatness)                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ELFFIN -- Routine to finish building ELF front-end.                          
*                                                                               
*    On entry:                                                                  
*       R1 - FEB ptr                                                            
*                                                                               
ELFFIN   XPROC                                                                  
         LR    FEBR,R1                                                          
         WITH  FEB                                                              
*-                                                                              
*-       Initialize UPATH data area (but do not open path to                    
*-         Amelia).                                                             
*-                                                                              
         LA    R1,FEBUPATH         UPATH in FEB                                 
         VCALL PATHINIT            Initialize path info                         
*                                                                               
         LA    R2,FEBUPATH                                                      
         WITH  (UPATH,R2),BEGIN                                                 
         MVC   UPATMY,FEBNAME      MYTAG (our front-end name)                   
         SET   UPATMFL.UPATMNAM    Specific YOURTAG specified                   
         MVC   UPATYOU,FEBAPATH    YOURTAG (usually AMELIA)                     
         END                                                                    
*-                                                                              
*-       Allocate path write buffer.                                            
*-                                                                              
         L     R0,=A(CVBUFLEN)     Milten's buffer size (+ slop)                
         LA    R1,PWRTSUBP                                                      
         VCALL NGETCORE            Get SEG write buffer                         
         SEGINIT (R1),(R0),FEBUSG,RTN=AMYSEG                                    
*                                                                               
         SET   FEBFCLS+FEBFDOWN    Closed & down                                
         PEND                                                                   
         EJECT                                                                  
ELFWA    RECORD BEGIN                                                           
ELFCUR   DS    XL(L'CVCUR)         Saved context (for failsoft)                 
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  ELFOPEN -- Routine to open a TCP path and listen on                          
*    the requested sockets (Telnet, etc).                                       
*                                                                               
*    On entry:                                                                  
*      R1 - FEB ptr                                                             
*                                                                               
*    On exit, R15 (and cc):                                                     
*       0 - ok                                                                  
*      12 - can't open                                                          
*                                                                               
ELFOPEN  PROC  ELFWA                                                            
         LR    FEBR,R1                                                          
         WITH  FEB                                                              
         FAIL  (FEB,NE,'FEB'),'Bad FEB ptr.'                                    
*                                                                               
         MVC   ELFCUR,CVCUR        Save current ptrs                            
         CLEAR CVCUR                                                            
         ST    FEBR,CVCURFEB       Set current--for failure recovery            
*                                                                               
         IF    FEBFDET,'LA R15,12; B ELFOXIT'  Scram if detached                
*-                                                                              
*-       If the front-end is closed then re-open it.                            
*-                                                                              
         IF    FEBFCLS*FEBFDOWN,BEGIN  Reopen...                                
         INCR  R15,FEBUC           Kick update count                            
*                                                                               
         MVC   FEBINFO,=CL(L'FEBINFO)'Opening'                                  
         VCALL LOCALTOD            Get local time                               
         STM   R0,R1,FEBMCLCK                                                   
*                                                                               
         CLEAR FEBMSG                                                           
*-                                                                              
*-       Open network path to Amelia.                                           
*-                                                                              
         LA    R1,FEBUPATH                                                      
         VCALL PATHOPEN            Open Amelia path                             
         IF    NZ,BEGIN            Path did not open...                         
         MVC   FEBMSG,=CL(L'FEBMSG)'Amelia path did not open.'                  
         B     ELFOXIT                                                          
         END                                                                    
*                                                                               
         CLEAR FEBFCLS+FEBFDOWN    Up and running                               
         SET   FEBFOPEN            Opened                                       
         END                                                                    
*-                                                                              
*-       If the path is already open then start the listens.                    
*-                                                                              
         LA    R1,FEB                                                           
         ACALL ELFSTART            Start listening on sockets                   
*                                                                               
         CLEAR R15                 A-ok return code                             
ELFOXIT  MVC   CVCUR,ELFCUR        Restore failsoft ptrs                        
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ELFCLOSE -- Routine to close ELF front-end.                                  
*                                                                               
*    On entry:                                                                  
*      R1 - FEB ptr                                                             
*                                                                               
ELFCLOSE PROC  ELFWA                                                            
         CLEAR ELFWA                                                            
*                                                                               
         LR    FEBR,R1                                                          
         WITH  FEB                                                              
         FAIL  (FEB,NE,'FEB'),'Bad FEB ptr.'                                    
*                                                                               
         MVC   ELFCUR,CVCUR                                                     
         CLEAR CVCUR                                                            
         ST    FEBR,CVCURFEB       Set current (for failsoft)                   
*                                                                               
         VCALL LOCALTOD            Current time                                 
         STM   R0,R1,FEBMCLCK                                                   
*-                                                                              
*-       Disconnect any sessions.                                               
*-                                                                              
         L     R7,FEBPATP                                                       
         CLEAR R6                                                               
         WHILE (R6,LT,FEBPMAX),BEGIN  Disconnect current sessions...            
         LR    R15,R6                                                           
         SLL   R15,2               PAT offset                                   
         LT    PIBR,@R7(R15)                                                    
         IF    NZ,BEGIN                                                         
         WITH  PIB                                                              
         INCR  R15,PIBUC                                                        
         LT    R1,PIBSCBP                                                       
         IF    NZ,'VCALL DISCSESS'  Disconnect session                          
         SET   PIBFSTOP,PIBFDOWN   Stopped                                      
*-                                                                              
*-       Reduce user count by one on this ELF.                                  
*-                                                                              
         IF    PIBPELF,BEGIN       Adjust ELF user count...                     
         LH    R0,=H'-1'           Reduce count by one                          
         L     R1,PIBRIP           ELF's IP address                             
         ACALL COUNTEIB            Do it                                        
         END                                                                    
*-                                                                              
*-       Free port control blocks.                                              
*-                                                                              
         LT    R1,PIBINSGLOC                                                    
         IF    NZ,'CLEAR PIBINSGLOC; VCALL FREECORE'  Free inp buf              
*                                                                               
         LT    R15,PIBTIMERID                                                   
         IF    NZ,'CLEAR PIBTIMERID; VCALL TIMERDQ'  Dequeue timer              
*                                                                               
         LA    R1,PIB                                                           
         VCALL FREEPIB             Free the port block                          
         END                                                                    
*                                                                               
         LA    R6,@R6+1                                                         
         END                                                                    
*-                                                                              
*-       Close the path to Amelia.                                              
*-                                                                              
         LA    R1,FEBUPATH                                                      
         VCALL PATHCLS             Close path                                   
         LA    R5,FEBUPATH                                                      
         WITH  (UPATH,R5),BEGIN                                                 
         CLEAR UPATFOPENED         Path is no longer open                       
         CLEAR UPATSFLG            Reset Suzan post byte                        
         END                                                                    
*-                                                                              
*-       Free pending send message queue.                                       
*-                                                                              
         L     R5,FEBAMYQH         Get queue head                               
         CLEAR FEBAMYQH,FEBAMYQT   Reset queue ptrs first                       
*                                                                               
         WHILE (R5,NZ),BEGIN       Go through queue...                          
         WITH  (AMYQ,R5)                                                        
*                                                                               
         IF    (AMYQID,NE,'AMYQ'),EXIT  Bad ID, can't free                      
         MVC   AMYQID,=C'FREQ'     Change ID                                    
*                                                                               
         LA    R1,AMYQ                                                          
         L     R5,AMYQLINK         Get next AMYQ entry                          
         VCALL FREECORE            Release entry                                
         END                                                                    
*-                                                                              
*-       Reset socket information.                                              
*-                                                                              
         LA    R3,FEBSOCKH-(SOCKLINK-SOCK)  Dummy first link                    
         WITH  (SOCK,R3),BEGIN                                                  
         WHILE ('LT R3,SOCKLINK',NZ),BEGIN                                      
         CLEAR SOCKFLISTEN         Not listening now                            
         END                                                                    
         END                                                                    
*-                                                                              
*-       Tidy up front-end information.                                         
*-                                                                              
         CLEAR FEBSCUR             Indicate no sessions active                  
*                                                                               
         SET   FEBFCLS+FEBFDOWN    Closed                                       
         CLEAR FEBFOPEN            Not opened                                   
*                                                                               
         MVC   CVCUR,ELFCUR        Restore current                              
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ELFSTART -- Local routine to start accepting new sessions.                   
*                                                                               
ELFSTART PROC  ELFWA                                                            
         CLEAR ELFWA                                                            
*                                                                               
         WITH  FEB                 (Entry assumption)                           
         MVC   ELFCUR,CVCUR                                                     
         CLEAR CVCUR                                                            
         ST    FEBR,CVCURFEB       Set current (for failsoft)                   
*                                                                               
         LA    R5,FEBUPATH                                                      
         WITH  (UPATH,R5)                                                       
         IF    ^UPATFOPENED,ELFSXIT  Path not open, forget it                   
*                                                                               
         SEGCLR FEBUSG                                                          
*-                                                                              
*-       Start listening on all our sockets.                                    
*-                                                                              
         LA    R3,FEBSOCKH-(SOCKLINK-SOCK)  Dummy first link                    
         WITH  (SOCK,R3),BEGIN                                                  
         WHILE ('LT R3,SOCKLINK',NZ),BEGIN                                      
         IF    ^SOCKFLISTEN,BEGIN  Not listening on this socket...              
         SET   SOCKFLISTEN         We are listening now                         
         SET   FEBFCTRL            Segging control info                         
         SEG   LA:=CL16'TCP_LISTEN:',16                                         
         SEG   'LPORT='                                                         
         SEGDC L:SOCKNO            Listen on this socket number                 
         SEG   ' MAX='                                                          
         SEGDC L:SOCKMAX           Maximum number of connections                
         SEG   ' FLOWL='                                                        
         SEGDC L:SOCKFLOL                                                       
         SEG   ' FLOWH='                                                        
         SEGDC L:SOCKFLOH                                                       
         SEGWR                                                                  
         CLEAR FEBFCTRL            Reset                                        
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
ELFSXIT  MVC   CVCUR,ELFCUR        Restore current                              
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ELFSTOP -- Local routine to stop accepting new sessions.                     
*                                                                               
ELFSTOP  PROC  ELFWA                                                            
         CLEAR ELFWA                                                            
*                                                                               
         WITH  FEB                 (Entry assumption)                           
*                                                                               
         MVC   ELFCUR,CVCUR                                                     
         CLEAR CVCUR                                                            
         ST    FEBR,CVCURFEB       Set current (for failsoft)                   
*-                                                                              
*-       Stop listening on all our sockets.                                     
*-                                                                              
         LA    R3,FEBSOCKH-(SOCKLINK-SOCK)  Dummy first link                    
         WITH  (SOCK,R3),BEGIN                                                  
         WHILE ('LT R3,SOCKLINK',NZ),BEGIN                                      
         IF    SOCKFLISTEN,BEGIN   We were listening...                         
         CLEAR SOCKFLISTEN         Not listening any more                       
         SET   FEBFCTRL            Segging control info                         
         SEG   LA:=CL16'TCP_END_LISTEN:',16                                     
         SEG   SOCKNO              Socket number                                
         SEGWR                                                                  
         CLEAR FEBFCTRL            Reset                                        
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
         MVC   CVCUR,ELFCUR        Restore current                              
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ELFCNTL -- Routine to perform an ELF control operation.                      
*                                                                               
*    On entry:                                                                  
*      R0 - control number                                                      
*      R1 - FEB ptr                                                             
*      R15- PDB ptr                                                             
*                                                                               
*    On exit, R15 (and CC):                                                     
*      -8 - bad control number                                                  
*      -4 - bad format                                                          
*       0 - ok (PDB has return data)                                            
*      12 - error                                                               
*                                                                               
ELFCNTL  XPROC                                                                  
         LR    FEBR,R1                                                          
         WITH  FEB                                                              
         FAIL  (FEB,NE,'FEB'),'Bad FEB ptr.'                                    
         LR    R7,R15                                                           
         WITH  (PDB,R7)                                                         
*                                                                               
         LA    R6,PDBTEXT                                                       
         WITH  (FDB,R6)                                                         
*                                                                               
         LR    RAR,R0                                                           
         IF    (RAR,GE,100),BEGIN  Priv'd control...                            
         IF    (RAR,GT,TCTLPMAX),'LA RAR,100'                                   
         SH    RAR,=H'100'                                                      
         SLL   RAR,2                                                            
         L     RAR,TCTLPTBL(RAR)   Processing routine                           
         BR    RAR                                                              
         END                                                                    
*                                                                               
         IF    (RAR,LGT,TCTLMAX),'CLEAR RAR'                                    
         SLL   RAR,2                                                            
         L     RAR,TCTLTBL(RAR)    Processing routine                           
         BR    RAR                                                              
         EJECT                                                                  
TCTLTBL  DC    A(TCTL0)                                                         
         DC    A(TCTL1)            1:   sense Telnet front-end info             
         DC    A(TCTL2)            2:   sense Telnet port info                  
TCTLMAX  EQU   (*-TCTLTBL-4)/4,,C'N'                                            
*                                                                               
         DS    0S(TCTLMAX-FDBCMAX,FDBCMAX-TCTLMAX)                              
         SPACE 2                                                                
TCTLPTBL DC    A(TCTL0)                                                         
         DC    A(TCTL101)          101: set Telnet front-end                    
         DC    A(TCTL102)          102: set Telnet port                         
TCTLPMAX EQU   (*-TCTLPTBL-4)/4+100,,C'N'                                       
*                                                                               
         DS    0S(TCTLPMAX-FDBPMAX,FDBPMAX-TCTLPMAX)                            
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  CONTROL 0:   bad control number                                              
*                                                                               
TCTL0    LH    R15,=H'-8'                                                       
         B     TCTLEXIT                                                         
*                                                                               
TCTLBF   LH    R15,=H'-4'                                                       
         B     TCTLEXIT                                                         
*                                                                               
TCTLRC12 LA    R15,12                                                           
         B     TCTLEXIT                                                         
*                                                                               
TCTLOK   CLEAR R15                                                              
         B     TCTLEXIT                                                         
         EJECT                                                                  
*box                                                                            
*                                                                               
*  CONTROL 1:   sense Telnet front-end info                                     
*                                                                               
         SPACE 2                                                                
TCTL1    IF    (PDBWC,NE,L'FDBT1),TCTLBF  Bad parms                             
         CLEAR FDBF1                                                            
         MVC   FDBFFTNO,=AL2(TTRC#)  No. of entries                             
         MVC   FDBFFLEN,=AL2(L'TTRC)  Size of an entry                          
         LA    R2,FDBFFTRC                                                      
         LM    R3,R5,FEBTRCP+4     R3=next,R4=first,R5=end                      
         LOOP  BEGIN                                                            
         S     R3,FEBTRCP          Back up                                      
         IF    (R3,LT,R4),'LR R3,R5; S R3,FEBTRCP'  Last                        
         MVC   @R2(L'TTRC),@R3     Copy trace entry                             
         LA    R2,@R2+L'TTRC       Next entry                                   
         UNTIL ('C R3,FEBTRCP+4',EQ)                                            
         END                                                                    
         MVC   PDBLENG,=AL2(L'PDBHDR+L'FDBF1+TTRC#*L'TTRC)                      
         B     TCTLOK                                                           
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  CONTROL 2:   sense Telnet port info                                          
*                                                                               
TCTL2    IF    (PDBWC,NE,L'FDBT2),TCTLBF  Bad parms                             
         LH    R15,FDBT2P          Port no.                                     
         IF    (R15,LGE,FEBPMAX),TCTLRC12  Out of bounds                        
         SLL   R15,2                                                            
         L     PIBR,FEBPATP                                                     
         LT    PIBR,@PIBR(R15)     PIB ptr                                      
         BZ    TCTLRC12                                                         
         CLEAR FDBF2                                                            
         WITH  PIB,BEGIN                                                        
         MVC   FDBFPTNO,=AL2(TTRCP#)  No. of trace entries                      
         MVC   FDBFPLEN,=AL2(L'TTRCP)  Length of a trace entry                  
*                                                                               
         LA    R2,FDBFPTRC                                                      
         LM    R3,R5,PIBTRCP+4     R3=next,R4=first,R5=end                      
         LOOP  BEGIN                                                            
         S     R3,PIBTRCP          Back up                                      
         IF    (R3,LT,R4),'LR R3,R5; S R3,PIBTRCP'  Last                        
         MVC   @R2(L'TTRCP),@R3    Copy trace entry                             
         LA    R2,@R2+L'TTRCP      Next entry                                   
         UNTIL ('C R3,PIBTRCP+4',EQ)                                            
         END                                                                    
         END                                                                    
         MVC   PDBLENG,=AL2(L'PDBHDR+L'FDBF2+TTRCP#*L'TTRCP)                    
         B     TCTLOK                                                           
         EJECT                                                                  
*box                                                                            
*                                                                               
*  CONTROL 101: set Telnet front-end                                            
*                                                                               
TCTL101  IF    (PDBWC,NE,L'FDBT101),TCTLBF  Bad parms                           
*                                                                               
         IF    FDBTFOPN+FDBTFSTR,BEGIN  Open or start...                        
         LA    R1,FEB                                                           
         ACALL ELFOPEN             Open fe, if not already open                 
         B     TCTLEXIT                                                         
         END                                                                    
*                                                                               
         IF    FDBTFSTP,BEGIN      Stop...                                      
         ACALL ELFSTOP                                                          
         B     TCTLOK                                                           
         END                                                                    
*                                                                               
         IF    FDBTFCLS,BEGIN      Close...                                     
         MVC   FEBMSG,=CL(L'FEBMSG)'Closed by gg.uuu'                           
         L     R15,CVCURSCB                                                     
         WITH  (SCB,R15),BEGIN                                                  
         MVC   FEBMSG+10(2),SCBGRP                                              
         MVC   FEBMSG+13(3),SCBUSER                                             
         IF    SCBTCONS,'MVC FEBMSG+10(20),SCBNAME'                             
         END                                                                    
*                                                                               
         LA    R1,FEB                                                           
         ACALL ELFCLOSE            Close front-end                              
         B     TCTLOK                                                           
         END                                                                    
*                                                                               
         B     TCTLBF                                                           
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  CONTROL 102: set Telnet port                                                 
*                                                                               
TCTL102  IF    (PDBWC,NE,L'FDBT102),TCTLBF  bad parms                           
         B     TCTLRC12            Can't start/stop individual port             
*                                                                               
*                                                                               
TCTLEXIT PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ELFUPD -- Routine to check SCB updates.                                      
*                                                                               
*    On entry:                                                                  
*      R1 - SCB ptr                                                             
*                                                                               
ELFUPD   XPROC                                                                  
         LR    SCBR,R1                                                          
         WITH  SCB                                                              
         LT    PIBR,SCBPIBP                                                     
         IF    Z,EXIT              No PIB, forget it                            
         WITH  PIB                                                              
         FAIL  (PIB,NE,'PIB'),'Bad PIB ptr.'                                    
         LT    FEBR,PIBFEBP                                                     
         IF    Z,EXIT              No FEB, forget it                            
         WITH  FEB                                                              
         FAIL  (FEB,NE,'FEB'),'Bad FEB ptr.'                                    
*-                                                                              
*-       Replace the IPADR field (don't allow user to set it).                  
*-                                                                              
         MVC   SCBIPADR,PIBTELIP                                                
*-                                                                              
*-       Don't allow session to be flagged as supporting model                  
*-         terminal if it is a direct connection.  This to force                
*-         Spires to reject full screen operations.                             
*-                                                                              
         IF    ^PIBPELF,'CLEAR SCBFMOD'  Not a model terminal                   
*-                                                                              
*-       Send Amelia information about the TCP connection as soon               
*-         as the user logs on (and SCBACCT is set).                            
*-                                                                              
         IF    (SCBACCT,NE,PIBXACCT),BEGIN  Account has changed...              
         SEGCLR FEBUSG                                                          
         SET   FEBFCTRL            Segging control info                         
         SEG   LA:=CL16'TCP_INFO:',16                                           
         SEG   PIBAID              Amelia's connection ID                       
         SEG   'Line '                                                          
         SEGDC LH:SCBNO                                                         
         IF    (SCBACCT,NZ),BEGIN  Give account if logged on...                 
         SEG   ' '                                                              
         SEG   SCBGRP                                                           
         SEG   '.'                                                              
         SEG   SCBUSER                                                          
         END                                                                    
         SEGWR                                                                  
         CLEAR FEBFCTRL            Reset                                        
*                                                                               
         MVC   PIBXACCT,SCBACCT    Save Info account for comparison             
         END                                                                    
*                                                                               
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ELFDO -- Routine to do ELF terminal I/O.                                     
*                                                                               
*    On entry:                                                                  
*       R1 - SCB ptr                                                            
*       R15 - PDB ptr                                                           
*                                                                               
ELFDO    XPROC                                                                  
         LR    SCBR,R1                                                          
         WITH  SCB                                                              
         L     PIBR,SCBPIBP                                                     
         WITH  PIB                                                              
         L     FEBR,PIBFEBP                                                     
         WITH  FEB                                                              
         LR    R7,R15                                                           
         WITH  (PDB,R7)                                                         
*                                                                               
         SEGDEF FEBUSG                                                          
*                                                                               
         XTRACE FEBTRCP,TERMDO                                                  
         WITH  (TTRC,R15),BEGIN                                                 
         MVC   TTRCPNAM,PIBNAME                                                 
         MVC   TTRCSID,SCBID                                                    
         MVC   TTRCSACC,SCBACCT                                                 
         MVC   TTRCCMD,SCBCMD                                                   
         MVC   TTRCTLEN,PDBLENG                                                 
         MVC   TTRCTEXT,PDBTEXT                                                 
         END                                                                    
*                                                                               
         XTRACE PIBTRCP                                                         
         WITH  (TTRCP,R15),BEGIN                                                
         MVI   TTRCPTYP,C'T'       T = TOAMY                                    
         MVC   TTRCPCMD,SCBCMD                                                  
         CLEAR TTRCPCPL                                                         
         MVC   TTRCPLEN,PDBLENG                                                 
         END                                                                    
*-                                                                              
*-       Handle adding page/pause prompt.                                       
*-                                                                              
         IF    SCBTFPP,BEGIN       Page/pause read...                           
         LH    R15,PDBOUTCT                                                     
         LA    R1,PDBTEXT(R15)                                                  
         MVC   @R1(2),=C': '       Page/pause prompt                            
         LA    R15,@R15+2          Kick data count                              
         STH   R15,PDBOUTCT                                                     
*                                                                               
         SET   PDBMODB.MODBNLF     No LF on read CR                             
         SET   SCBMODB.MODBNLF     Ditto                                        
         END                                                                    
*                                                                               
         INCR  R15,PIBNIO          Count the I/O                                
*-                                                                              
*-       Handle terminal I/O request.                                           
*-                                                                              
         IF    PIBPELF,'LCALL IOELF'  ELF style I/O                             
         ELSEIF PIBPTELNET,'LCALL IOTELNET'  Telnet style I/O                   
         ELSEIF PIBPRECONNECT,'LCALL IORCON'  Reconnect I/O                     
         ELSE  'FAIL "ELF driver error."'                                       
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  IOTELNET -- Routine to do telnet style terminal I/O.                         
*                                                                               
IOTELNET PROC                                                                   
         WITH  FEB,PIB,SCB,(PDB,R7)                                             
*                                                                               
         SEGDEF FEBUSG                                                          
*-                                                                              
*-       Start of new synchronous operation.                                    
*-                                                                              
         IF    (PDBCMD,NE,FMILASYN),BEGIN  New synchronous...                   
         CLEAR PIBFHALT            Reset previous I/O flags                     
         END                                                                    
*-                                                                              
*-       Terminal read/write.                                                   
*-                                                                              
         IF    ((PDBCMD,EQ,TMILWRIT),OR,(PDBCMD,EQ,TMILREAD)),BEGIN             
*-                                                                              
*-       Reject display mode I/O requests.                                      
*-                                                                              
         IF    PDBMODC.MODCDSPL,BEGIN Display mode I/O request...               
         L     R5,CVPDBP                                                        
         WITH  (PDB,R5)                                                         
         MVC   PDBLENG,=AL2(L'PDBHDR)  Standard PDB length                      
         CLEAR PDBOPT                                                           
         MVC   PDBCMD,SCBCMD       Set operation code                           
         SET   PDBCPLB.CPLBILT     Can't do it                                  
         SET   PDBCPLA.CPLAATTN    Mark with ATTN too                           
         B     DTELPDB                                                          
         END                                                                    
*-                                                                              
*-       Set appropriate telnet data mode.                                      
*-                                                                              
         IF    PIBFIAC,BEGIN       Do Telnet IACs...                            
         IF    PDBMODD.MODDTRAN,BEGIN  Transparent...                           
         IF    PIBFTRAN,EXIT       Already in transparent mode                  
         SET   PIBFTRAN            Entering transparent mode now                
*11/91:  SEG   =AL1($IAC,$WILL,$SGA,$IAC,$DO,$SGA),6                            
*12/91:  SEG   =AL1($IAC,$WILL,$BINARY,$IAC,$DO,$BINARY),6                      
         END                                                                    
*                                                                               
         ELSE  BEGIN               Not transparent...                           
         IF    ^PIBFTRAN,EXIT      Already in text mode                         
         CLEAR PIBFTRAN            Exiting transparent mode now                 
*12/91:  SEG   =AL1($IAC,$WONT,$BINARY,$IAC,$DONT,$BINARY),6                    
*11/91:  SEG   =AL1($IAC,$WONT,$SGA,$IAC,$DONT,$SGA),6                          
         END                                                                    
*                                                                               
         IF    PDBMODC.MODCNECH,BEGIN  No echo...                               
         IF    PIBFNOECHO,EXIT     Already in noecho more                       
         SET   PIBFNOECHO          Entering noecho mode                         
         SEG   =AL1($IAC,$WILL,$ECHO),3                                         
         END                                                                    
*                                                                               
         ELSE  BEGIN               Echo...                                      
         IF    ^PIBFNOECHO,EXIT    Already in echo mode                         
         CLEAR PIBFNOECHO          Exiting noecho mode now                      
         SEG   =AL1($IAC,$WONT,$ECHO),3                                         
         END                                                                    
*                                                                               
         END                                                                    
*-                                                                              
*-       Send out the write data.                                               
*-                                                                              
         IF    (PDBOUTCT,NZ),BEGIN  We have something to write...               
         SETMSG LA:PDBTEXT,LH:PDBOUTCT                                          
         LA    R15,FEBUSG                                                       
         ACALL OUTPROC             Do any output reformatting                   
*                                                                               
         INCR  R15,PIBNIO          Port I/O count                               
         END                                                                    
*                                                                               
         IF    (FEBUSGLENF,NZ),'SEGWR'                                          
*-                                                                              
*-       Read data from terminal.                                               
*-                                                                              
         IF    (PDBCMD,EQ,TMILREAD),BEGIN  Read completion...                   
         IF    PDBMODD.MODDNTYP,'CLEAR PIBINSGLENF,PIBINSGMRKF'                 
* !!!!!!! must check for PIBFINSTOP set above !!!!!!                            
*                                                                               
         SET   PIBFREAD            Waiting for read data                        
         IF    (PIBINSGLOC,NZ),BEGIN   We already have input...                 
         ACALL READCHK             Check out the input data                     
         END                                                                    
         B     DTELEXIT                                                         
         END                                                                    
*-                                                                              
*-       Write data completion.                                                 
*-                                                                              
         IF    PIBFDSTOP,BEGIN     We should stop sending data...               
         SET   PIBFPCOMP           Pending write I/O completion                 
         B     DTELEXIT                                                         
         END                                                                    
*                                                                               
         B     DTELCOMP            Send write I/O completion                    
         END                                                                    
*-                                                                              
*-       Halt current operation.                                                
*-                                                                              
         IF    (PDBCMD,EQ,TMILBRK),BEGIN  Halt request...                       
         IF    ^PIBFREAD,DTELEXIT  Not doing a read, forget it                  
         IF    ^SCBMODD.MODDTRAN,BEGIN  Not transparent...                      
         IF    SCBMODB.MODBNNLA,EXIT  NOSTARS also means no "###"s              
         SET   FEBFASC             Convert to ASCII                             
         SEG   X'2F'               bell                                         
         SEG   '###'                                                            
         SEG   X'0D25'             cr,lf                                        
         SEGWR                                                                  
         CLEAR FEBFASC             Reset                                        
         END                                                                    
*                                                                               
         SET   PIBFHALT            Halt current operation                       
         ACALL READCHK             Complete read now                            
         END                                                                    
*-                                                                              
*-       End of terminal session.                                               
*-                                                                              
         IF    (PDBCMD,EQ,TMILEOS),BEGIN  End of session...                     
*-                                                                              
*-       Tell Amelia to close this TCP connection.                              
*-                                                                              
         SEGCLR FEBUSG                                                          
         SET   FEBFCTRL            Segging control info                         
         SEG   LA:=CL16'TCP_EOF:',16                                            
         SEG   PIBAID              Amelia connection ID                         
         SEGWR                                                                  
         CLEAR FEBFCTRL            Reset                                        
*                                                                               
         SET   FEBFCTRL            Segging control info                         
         SEG   LA:=CL16'TCP_CLOSE:',16                                          
         SEG   PIBAID              Amelia connection ID                         
         SEGWR                                                                  
         CLEAR FEBFCTRL            Reset                                        
*                                                                               
         SET   PIBFCLOSING         We are closing the connection                
*                                                                               
         FAIL  (SCBR,NE,PIBSCBP),'Bad SCB ptr.'                                 
         LR    R1,SCBR                                                          
         CLEAR SCBR,PIBSCBP                                                     
         VCALL FREESCB             Free the session block                       
*                                                                               
         B     DTELEXIT                                                         
*-                                                                              
*-       Send operation completed PDB back to subsystem.                        
*-                                                                              
DTELCOMP L     R5,CVPDBP                                                        
         WITH  (PDB,R5)                                                         
         MVC   PDBLENG,=AL2(L'PDBHDR)  Standard PDB length                      
         CLEAR PDBOPT                                                           
         MVC   PDBCMD,SCBCMD       Set operation code                           
*                                                                               
DTELPDB  LABEL ,                                                                
         XTRACE FEBTRCP,TERMCMP1   Trace completion                             
         WITH  (TTRC,R15),BEGIN                                                 
         MVC   TTRCPNAM,PIBNAME                                                 
         MVC   TTRCSID,SCBID                                                    
         MVC   TTRCSACC,SCBACCT                                                 
         MVC   TTRCCMD,PDBCMD                                                   
         MVC   TTRCCPL,PDBCPL                                                   
         MVC   TTRCTLEN,PDBLENG                                                 
         MVC   TTRCTEXT,PDBTEXT                                                 
         END                                                                    
*                                                                               
         XTRACE PIBTRCP                                                         
         WITH  (TTRCP,R15),BEGIN                                                
         MVI   TTRCPTYP,C'F'       F = FROMAMY                                  
         MVC   TTRCPCMD,PDBCMD                                                  
         MVC   TTRCPCPL,PDBCPL                                                  
         MVC   TTRCPLEN,PDBLENG                                                 
         END                                                                    
*                                                                               
         LA    R1,SCB                                                           
         LA    R15,PDB                                                          
         VCALL SUBSEND             Send completion                              
         END                                                                    
*                                                                               
DTELEXIT PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  IORCON -- Routine to do reconnect style terminal I/O.                        
*                                                                               
*    This should never happen because we never start a subsystem                
*    session for reconnect requests.                                            
*                                                                               
IORCON   PROC                                                                   
         FAIL  'ELF reconnect logic error.'                                     
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  IOELF -- Routine to do ELF style terminal I/O.                               
*                                                                               
IOELF    PROC  HDR                                                              
         WITH  FEB,PIB,SCB,(PDB,R7)                                             
*                                                                               
         SEGDEF FEBUSG                                                          
*-                                                                              
*-       Send any new ELF information.                                          
*-                                                                              
         LCALL ELFINFO             Send new ELF info (if necessary)             
*-                                                                              
*-       Build ELF terminal I/O header.                                         
*-                                                                              
         CLEAR HDR                                                              
         MVC   HDRID,=C'ELF0'      Set identification                           
         MVI   HDRTYPE,C'>'        We are sending a command                     
*                                                                               
         IF    (PDBCMD,EQ,TMILWRIT),'MVI HDRCMD,HDRFWR'                         
         ELSEIF (PDBCMD,EQ,TMILREAD),'MVI HDRCMD,HDRFRD'                        
         ELSEIF (PDBCMD,EQ,TMILBRK),'MVI HDRCMD,HDRFHALT'                       
         ELSEIF (PDBCMD,EQ,TMILEOS),'MVI HDRCMD,HDRFEOS'                        
         ELSE  BEGIN                                                            
         FAIL  'Bad ELF command'                                                
         END                                                                    
*                                                                               
         MVI   HDRCPL,C' '                                                      
         MVI   HDRBLANK,C' '                                                    
*                                                                               
         IF    PDBMODC.MODCDSPL,'SET HDRFDISP'  Display mode I/O                
         IF    PDBMODD.MODDNMOD,'SET HDRFNMOD'  Nomodel                         
         IF    PDBMODB.MODBDWAT,'SET HDRFNWA'   No write attn                   
         IF    PDBMODD.MODDTRAN,'SET HDRFTRAN'  Transparent I/O                 
         IF    PDBMODB.MODBSLOL,'SET HDRFSLOW'  Slow (no tabs)                  
*                                                                               
         IF    ^SCBFNTYP,BEGIN     Global typeahead mode...                     
         IF    PDBMODD.MODDNTYP,EXIT  Local override of no typeahead            
         SET   HDRFTAH             Typeahead mode                               
         END                                                                    
*                                                                               
         IF    SCBFVFAST,'SET HDRFVFAST'        Set VFast mode                  
*                                                                               
         IF    (PDBCMD,EQ,TMILREAD),BEGIN  It's a terminal read...              
         IF    SCBFNECH,'SET HDRFHALF'          Half duplex                     
         IF    PDBMODC.MODCNECH,'SET HDRFNECH'  Noecho                          
         IF    PDBMODB.MODBNNLA,'SET HDRFNST'   No read attn stars              
         IF    PDBMODB.MODBNLF,'SET HDRFNLF'    No read LF on CR                
         IF    PDBMODB.MODBUPLO,'SET HDRFUPL'   Uplow                           
         IF    PDBMODC.MODCSTIB,'SET HDRFSTIB'  Suppress trail blanks           
         IF    ^PDBMODD.MODDNFLT,'SET HDRFFILT' Filter ctrl chars               
         IF    PDBMODD.MODDXON,'SET HDRFXON'    Send XON for read               
         IF    PDBMODD.MODDRUND,'SET HDRFRUND'  Count rundown mode              
         IF    SCBFBACK,'SET HDRFBACK'          Back                            
         IF    PDBMODA.MODABUF,'SET HDRFBUFIO'  Buffered I/O                    
*                                                                               
         MVC   HDRINMAX,PDBINCT    Max input count for read                     
         END                                                                    
*-                                                                              
*-       Write ELF header.                                                      
*-                                                                              
         SEG   HDR                 Add header to output                         
*-                                                                              
         SEG   PDBTEXT,LH:PDBOUTCT  Add text as-is                              
*-                                                                              
*-       This is a little sneaky:  Go back in to the seg buffer                 
*-         and fill in the ELF "hdrlen" based on the actual size                
*-         of the buffer.                                                       
*-                                                                              
         L     R15,FEBUSGLENF      Total seg buffer length                      
         SH    R15,=AL2(16+4+L'HDR)  Deduct ELF hdr length                      
         IF    NP,'CLEAR R15'                                                   
*                                                                               
         L     R1,FEBUSGLOC        Start of seg buffer                          
         LA    R1,@R1+16+4         Skip past "TCP_DATA:" and id                 
         WITH  (HDR,R1),'STH R15,HDRLEN'  Set correct length                    
*                                                                               
         SEGWR ,                   Send ELF packet                              
*-                                                                              
*-       If we just sent the logoff packet then free the session                
*-         and close the TCP connection.                                        
*-                                                                              
         IF    (PDBCMD,EQ,TMILEOS),BEGIN  End of session...                     
         LR    R1,SCBR                                                          
         CLEAR SCBR,PIBSCBP                                                     
         VCALL FREESCB             Free session control block                   
*                                                                               
         SET   FEBFCTRL            Sending control info                         
         SEG   LA:=CL16'TCP_EOF:',16                                            
         SEG   PIBAID              Amelia connection ID                         
         SEGWR                                                                  
         CLEAR FEBFCTRL            Reset                                        
*                                                                               
         SET   FEBFCTRL            Sending control info                         
         SEG   LA:=CL16'TCP_CLOSE:',16                                          
         SEG   PIBAID              Amelia connection ID                         
         SEGWR                                                                  
         CLEAR FEBFCTRL            Reset                                        
*                                                                               
         SET   PIBFCLOSING         This port is now closing                     
         END                                                                    
*                                                                               
         PEND                                                                   
*-                                                                              
*-       Stop on EBCDIC NL TRT table.                                           
*-                                                                              
NLTRT    DC    XL256'00'                                                        
         ORG   NLTRT+X'15'         EBCDIC NL                                    
         DC    X'15'                                                            
         ORG                                                                    
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ELFINFO -- Local routine to send updated ELF information if                  
*    necessary.                                                                 
*                                                                               
ELFINFO  PROC                                                                   
         WITH  FEB,PIB,SCB         Entry assumption                             
*                                                                               
         SEGDEF FEBUSG                                                          
*-                                                                              
*-       Only send new ELF information if something has changed.                
*-                                                                              
         PUSH  L'PINFO,PTR=R7                                                   
         WITH  (PINFO,R7)                                                       
         CLEAR PINFO                                                            
         MVC   PINFTABS,SCBTABS    Tab stops                                    
*                                                                               
         LTH   R15,SCBWID          Screen width                                 
         IF    NP,'LA R15,80'      Set universal default                        
         STH   R15,PINFWID         Save it                                      
*                                                                               
         LTH   R15,SCBHEI          Screen height                                
         IF    NP,'LA R15,24'      Set universal default                        
         STH   R15,PINFHEI         Save it                                      
*                                                                               
         IF    ((SCBTCLS,NE,PIBOTCLS),                                 *        
               OR,(PINFO,NE,PIBOINFO)),BEGIN  Something's new...                
         MVC   PIBOTCLS,SCBTCLS    Save current terminal type                   
         MVC   PIBOINFO,PINFO      Save current PINFO                           
*                                                                               
         PUSH  L'HDR,PTR=R6                                                     
         WITH  (HDR,R6),BEGIN                                                   
         CLEAR HDR                                                              
         MVC   HDRID,=C'ELF0'      Set identification                           
         MVI   HDRTYPE,C'>'        We are sending a command                     
         MVI   HDRCMD,HDRFINFO     Send ELF info                                
         MVC   HDRLEN,=AL2(L'PIBOTCLS+L'PIBOINFO)  Data length                  
*                                                                               
         MVI   HDRCPL,C' '                                                      
         MVI   HDRBLANK,C' '                                                    
*                                                                               
         SEG   HDR                 ELF header                                   
         POP   L'HDR                                                            
         END                                                                    
*                                                                               
         SEG   PIBOTCLS            Terminal type                                
*                                                                               
         SEG   PIBOINFO            PINFO (binary info)                          
*                                                                               
         SEGWR                                                                  
         END                                                                    
*                                                                               
         POP   L'PINFO             Restore stack ptr                            
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ELFPOST -- Routine to process posts from telnet path.                        
*                                                                               
*    On entry:                                                                  
*      R1 - FEB ptr                                                             
*                                                                               
TPWA     RECORD BEGIN                                                           
TPXPTRS  DS    2F                  Packet length, location ptrs                 
*                                                                               
TPID     DS    CL16                Packet identification                        
TPWORD1  DS    F                   Word 1 parameter                             
TPWORD2  DS    F                   Word 2 parameter                             
TPWORD3  DS    F                   Word 3 parameter                             
TPWORD4  DS    F                   Word 4 parameter                             
TPWORD5  DS    F                   Word 5 parameter                             
TPWORD6  DS    F                   Word 6 parameter                             
         DS    XL16                Extra stuff (possibly header)                
TPHDR    EQU   TPID,*-TPID,C'X'                                                 
*                                                                               
TPSEGCB  DS    XL(L'SEGCB)         Working SEGCB control block                  
*                                                                               
TPWATEMP DS    4F                  Temp area                                    
         END                                                                    
*-                                                                              
*-       Performance modification:  Quick check to see if there                 
*-         is anything for us to do before doing anything else.                 
*-                                                                              
         ENTRY ELFPOST                                                          
ELFPOST  TM    @R1+(FEBUPATH-FEB)+(UPATSFLG-UPATH),UPATFNI+UPATFOPN+UPA*        
               TFCLS+UPATFFQE      Anything for us to do?                       
         BZR   RAR                 No, scram                                    
*                                                                               
         XPROC                                                                  
         PUSH  L'TPWA,PTR=R7       TPWA used by subroutines too                 
         WITH  (TPWA,R7)                                                        
         CLEAR TPWA                                                             
*                                                                               
         LR    FEBR,R1                                                          
         WITH  FEB                                                              
*                                                                               
         LA    R5,FEBUPATH                                                      
         WITH  (UPATH,R5)                                                       
         FAIL  (UPATH,NE,'PATH'),'Bad ELF UPATH ptr.'                           
*-                                                                              
*-       Process Amelia path opening.                                           
*-                                                                              
         IF    UPATSFLG.UPATFOPN,BEGIN  Path is open...                         
         CLEAR UPATSFLG.UPATFOPN,MODE=LOCKED,REF=UPATH                          
*-                                                                              
*-       If path just opened then get partner's job name.                       
*-                                                                              
         IF    ^UPATFOPENED,BEGIN       Just opened...                          
         MVC   FEBINFO,=CL(L'FEBINFO)'Opened'                                   
         SET   UPATFOPENED         Our path is open now                         
         LA    R1,TPWATEMP+8       Build SCOM calling                           
         ST    R1,TPWATEMP           sequence to sense                          
         MVC   TPWATEMP+4(4),=A(4)     partner's ASCB address                   
         OI    TPWATEMP,X'80'                                                   
         SCOM  INFO,TPWATEMP,UPATMGC  Sense ASCB address                        
         IF    (R15,Z),BEGIN       We got the info...                           
         L     R1,TPWATEMP+8       Get ASCB address                             
         L     R2,172(R1)          Get ASCBJBNI field                           
         IF    (R2,Z),'L R2,176(R1)'  or ASCBJBNS field                         
         IF    (R2,NZ),BEGIN                                                    
         MVC   FEBINFO(8),@R2      Set job name in status msg                   
         END                                                                    
         END                                                                    
*-                                                                              
*-       Tell Amelia what TCP socket(s) we are willing to listen on.            
*-                                                                              
         ACALL ELFSTART            Start listening                              
*                                                                               
         END                                                                    
         END                                                                    
*-                                                                              
*-       Send any locally buffered messages to Amelia.                          
*-                                                                              
         IF    UPATSFLG.UPATFFQE,BEGIN  Full queue emptied...                   
         ACALL AMYSENDQ            Send messages (reset FFQE)                   
         END                                                                    
*-                                                                              
*-       Process any new data from Amelia path.                                 
*-                                                                              
         LA    R4,8                Max number of requests                       
         WHILE (R4,POS),BEGIN      Process requests...                          
         LA    R1,UPATH                                                         
         VCALL PATHREAD            Get any new info                             
         BNZ   TPDONE              No new info, scram                           
         STM   R0,R1,TPXPTRS       Save packet ptrs                             
*                                                                               
         INCR  R15,FEBNIO          Total front-end I/O count                    
*-                                                                              
*-       Trace incoming data.                                                   
*-                                                                              
         XTRACE FEBTRCP,IOREAD                                                  
         WITH  (TTRC,R15),BEGIN                                                 
         LM    R0,R1,TPXPTRS       Get packet ptrs                              
         STH   R0,TTRCILEN         Data length                                  
         LR    R2,R0                                                            
         CEIL  R2,L'TTRCITOT                                                    
         MOVE  R2,TTRCITOT,@R1     Save first part of data                      
         END                                                                    
*                                                                               
         LM    R0,R1,TPXPTRS       Get packet ptrs again                        
         LR    R15,R0                                                           
         CEIL  R15,L'TPHDR                                                      
         MOVE  R15,TPHDR,@R1       Save header information                      
*                                                                               
         IF    (TPID,EQ,'TCP_CONNECT:'),BEGIN  New session...                   
         ACALL TCPCONN             Handle new TCP connection                    
         END                                                                    
*                                                                               
         ELSEIF  (TPID,EQ,'TCP_DATA:'),BEGIN  Data...                           
         ACALL TCPDATA             Handle incoming TCP data                     
         END                                                                    
*                                                                               
         ELSEIF  ((TPID,EQ,'TCP_STOP:'),OR,                            *        
               (TPID,EQ,'TCP_START:')),BEGIN                                    
         ACALL TCPFLOW             Handle flow control                          
         END                                                                    
*                                                                               
         ELSEIF  (TPID,EQ,'TCP_EOF:'),BEGIN                                     
         ACALL TCPEOF              End of file                                  
         END                                                                    
*                                                                               
         ELSEIF  (TPID,EQ,'TCP_ABORT:'),BEGIN                                   
         ACALL TCPABORT            Abort TCP connection                         
         END                                                                    
*                                                                               
         ELSEIF  (TPID,EQ,'TCP_CLOSE:'),BEGIN                                   
         ACALL TCPCLOSE            Close TCP connection                         
         END                                                                    
*-                                                                              
*-       BAD PACKET                                                             
*-                                                                              
         ELSE  BEGIN                                                            
* !!!!!  FAIL  'BAD PACKET TYPE.'                                               
         END                                                                    
*                                                                               
         DECR  R4                  We've processed a request                    
         END                                                                    
*-                                                                              
*-       After processing a number of requests, we will mark the                
*-       main ECB as posted and return to the dispatcher.                       
*-       Eventually we'll get called again to finish up (this gives             
*-       other front-end drivers a chance to do things).                        
*-                                                                              
         MVI   CVECB,X'40'         Milten ECB stays posted                      
         B     TPEXIT                                                           
*-                                                                              
*-       Check for Amelia path closing.                                         
*-                                                                              
TPDONE   IF    UPATSFLG.UPATFCLS,BEGIN  Path closed...                          
         LA    R1,FEB                                                           
         ACALL ELFCLOSE            Close front-end                              
*                                                                               
         LA    R1,FEB                                                           
         ACALL ELFOPEN             Open it up again                             
         END                                                                    
*                                                                               
TPEXIT   POP   L'TPWA                                                           
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  TCPCONN -- Routine to process a new TCP connection.                          
*                                                                               
*    On entry:                                                                  
*      R1,R0 - packet location, length                                          
*      R15 - working header area                                                
*                                                                               
TCPCONN  PROC                                                                   
         WITH  FEB,(TPWA,R7)       (Entry assumptions)                          
*-                                                                              
*-       Find our SOCK entry for the socket number we are connecting            
*-         to so we know what to do.                                            
*-                                                                              
         LA    R6,FEBSOCKH-(SOCKLINK-SOCK)  Dummy first link                    
         WITH  (SOCK,R6)                                                        
         WHILE ('LT R6,SOCKLINK',NZ),BEGIN  Go through queue...                 
         IF    (SOCKNO,EQ,TPWORD4),TCONSOCK  Got our SOCK entry                 
         END                                                                    
*-                                                                              
*-       Reject the TCP connection.                                             
*-                                                                              
         SEGDEF FEBUSG                                                          
TCONABRT SET   FEBFCTRL            Segging control sequence                     
         SEG   LA:=CL16'TCP_REJECT:',16                                         
         SEG   TPWORD2             Amelia connection ID                         
         SEGWR                                                                  
         CLEAR FEBFCTRL            Reset                                        
         EXIT  TCPCONN             All done                                     
*-                                                                              
*-       Get front-end port number.                                             
*-                                                                              
TCONSOCK LH    R4,FEBPLAST         Last port number assigned                    
         LOOP  BEGIN                                                            
         LA    R4,@R4+1            Next port number                             
         IF    (R4,GT,FEBPMAX),'CLEAR R4'  Wrap around                          
         IF    (R4,EQ,FEBPLAST),TCONABRT  All ports in use, abort               
         LR    R5,R4                                                            
         SLL   R5,2                Times 4 for word offset                      
         AL    R5,FEBPATP          Addr of PIB ptr in address table             
         LT    R15,@R5             Zero if this port is available               
         UNTIL Z                                                                
         END                                                                    
*-                                                                              
*-       Allocate and initialize port block.                                    
*-                                                                              
         LA    R0,L'PIB                                                         
         VCALL GETPIB              Get a new port                               
         LR    PIBR,R1                                                          
         WITH  PIB                                                              
         ST    PIBR,@R5            Save PIB ptr in PAT                          
         ST    FEBR,PIBFEBP        Save FEB ptr                                 
         ST    R6,PIBSOCKP         Save SOCK ptr                                
         MVI   PIBXACCT,X'FF'      Force TCP_INFO (see ELFUPD)                  
         MVC   PIBAID,TPWORD2      Save Amelia connection ID                    
         MVC   PIBDFSYS,SOCKSYS    Set initial subsystem name                   
         IF    (SOCKACCT,NZ),'SET PIBFPS'  Logon as pseudo session              
         IF    SOCKPELF,'SET PIBPELF'  Set appropriate protocol...              
         IF    SOCKPTELNET,'SET PIBPTELNET'                                     
         IF    SOCKPRECONNECT,'SET PIBPRECONNECT'                               
         IF    SOCKFIAC,'SET PIBFIAC'  Use TELNET IACs                          
         IF    SOCKFTRACE,'SET PIBFSESTRC'                                      
         IF    SOCKFKEEP,'SET PIBFSESKEEP'                                      
         IF    ^PIBPELF,'SET PIBFDUMB'  Dumb front-end port                     
         STH   R4,PIBNO            Save our port number                         
         LR    R15,R4                                                           
         A     R15,=A(100000)      Force leading zeros for BTD below            
         MVC   PIBNAME,CVBLANKS                                                 
         BTD   PIBNAME,5,(R15)     Port number                                  
*                                                                               
         STH   R4,FEBPLAST         Save last port number assigned               
*-                                                                              
*-       Set port location field to the remote host's IP address.               
*-                                                                              
         MVC   PIBRIP,TPWORD5      Remote IP address (binary form)              
         MVC   PIBTELIP,PIBRIP     Initialize TELNET ip address                 
         CLEAR PIBINFO             No special port info                         
         MVC   PIBLOC,CVBLANKS                                                  
         SEGINIT PIBLOC,,TPSEGCB                                                
         SEGDC LC:PIBRIP           Format IP address "x.x.x.x"...               
         SEG   '.'                                                              
         SEGDC LC:PIBRIP+1                                                      
         SEG   '.'                                                              
         SEGDC LC:PIBRIP+2                                                      
         SEG   '.'                                                              
         SEGDC LC:PIBRIP+3                                                      
*                                                                               
         IF    FEBFLEAS,'SET PIBFLEAS'  Like FEB, like PIB                      
         IF    FEBFRLIN,'SET PIBFRLIN'                                          
         IF    FEBFRLIN,'SET PIBFPTID'  preset term id                          
*                                                                               
         ACALL SETIPINF            Set flags based on IP addr                   
*                                                                               
         LA    R0,L'TTRCP          Length of a trace entry                      
         LA    R1,TTRCP#           No. of trace entries                         
         LA    R15,PIBTRCP                                                      
         VCALL GETTRC                                                           
*-                                                                              
*-       Accept the TCP connection.                                             
*-                                                                              
         SEGDEF FEBUSG                                                          
         SET   FEBFCTRL            Segging control sequence                     
         SEG   LA:=CL16'TCP_ACCEPT:',16                                         
         SEG   PIBAID              Amelia connection ID                         
         SEG   X'0000'             High order zeros of Milten ID                
         SEG   PIBNO               Milten ID                                    
         SEGWR                                                                  
         CLEAR FEBFCTRL            Reset                                        
*-                                                                              
*-       ELF protocol initialization.                                           
*-                                                                              
         IF    PIBPELF,BEGIN       ELF specific initialization...               
         LA    R0,1                Add one to current count                     
         L     R1,PIBRIP           ELF's IP address                             
         ACALL COUNTEIB            Add one to ELF user count                    
*                                                                               
         B     TCONEXIT            All done                                     
         END                                                                    
*-                                                                              
*-       Reconnect protocol initialization.                                     
*-                                                                              
         IF    PIBPRECONNECT,BEGIN  Reconnect protocol...                       
         L     R0,=A(RCONTIMR)     Reconnect timer routine                      
         LA    R1,PIB              Our PIB is the entry parm                    
         LA    R15,100             1 second interval                            
         VCALL TIMERQ              Queue a timer routine                        
         ST    R15,PIBTIMERID      Save our timer ID                            
         CLEAR PIBTICKCUR          Reset current tick count                     
         MVC   PIBTICKMSG,=A(PIBRMSG#)  Write info message timeout              
         MVC   PIBTICKLGF,=A(PIBRLGF#)  Force disconnect timeout                
*                                                                               
         SEG   =AL1($IAC,$DO,$RECON),3  Do reconnect                            
         SEGWR                                                                  
         SET   PIBINFDATA          Reset input telnet stream state              
         B     TCONEXIT            That's it                                    
         END                                                                    
*-                                                                              
*-       Telnet protocol initialization.                                        
*-                                                                              
         IF    PIBFIAC,BEGIN       Send TELNET IAC sequences..                  
         SEG   TCONCTRL            Send initial IAC information                 
         SEGWR                                                                  
         INCR  R15,PIBNIO          Port I/O count                               
         END                                                                    
*-                                                                              
*-       Allocate a new session.                                                
*-                                                                              
         LA    R1,PIB                                                           
         LA    R0,L'SCB                                                         
         VCALL GETSCB              Get a session                                
         LR    SCBR,R1                                                          
         WITH  SCB                                                              
         SET   SCBFFILT                                                         
         MVC   SCBWID,=H'80'       Width                                        
         MVC   SCBTCLS,PIBTCLS     Set terminal class                           
         MVC   SCBTINFO,=X'8188'   Ttype info is faked                          
         MVC   SCBIPADR,PIBTELIP   Copy in IP address                           
*-                                                                              
*-       Set session defaults (including the logged on account                  
*-         and pseudo-session flags).                                           
*-                                                                              
         IF    (SOCKACCT,NZ),BEGIN  Pre-logged...                               
         MVC   SCBACCT,SOCKACCT    Set account                                  
         SET   SCBSFNAT+SCBSFNAR+SCBSFPS  Pseudo session                        
         SET   SCBFQUIET           Quiet terminal I/O mode                      
*                                                                               
         LA    R1,SCB                                                           
         VCALL INCRSES             Count the new session                        
         END                                                                    
*-                                                                              
*-       Start up the new session.                                              
*-         (The first command for Wylbur to execute can be                      
*-         passed as a parameter.)                                              
*-                                                                              
         L     R5,CVPDBP                                                        
         WITH  (PDB,R5)                                                         
         CLEAR PDBHDR              Build default PDB for subsys                 
         MVC   PDBLENG,=AL2(L'PDBHDR)  Standard size, no parms                  
*                                                                               
         IF    (SOCKCMD,NZ),BEGIN  Do this command...                           
         SEGINIT PDBTEXT,512,TPSEGCB                                            
         SEGT  SOCKCMD             Add first command to execute                 
         LA    R15,L'PDBHDR        Standard PDB size                            
         A     R15,TPSEGCB+(SEGCBLENF-SEGCB)  Add in length of cmd              
         STH   R15,PDBLENG         Set total PDB length                         
         END                                                                    
*                                                                               
         LA    R1,SCB                                                           
         LA    R15,PDB                                                          
         VCALL SUBSTART            Send signon to subsystem                     
*-                                                                              
*-       Finally, write out any initial message text.                           
*-                                                                              
         IF    (SOCKMSGL,NZ),BEGIN  We have an initial message...               
         SEGCLR FEBUSG                                                          
*                                                                               
         SETMSG L:SOCKMSGP,LH:SOCKMSGL  Message text (if any)                   
         LA    R15,FEBUSG                                                       
         ACALL OUTPROC             Convert to ASCII and then SEG                
         SEGWR                                                                  
*                                                                               
         INCR  R15,PIBNIO          Port I/O count                               
         END                                                                    
*                                                                               
TCONEXIT PEND                                                                   
         SPACE 2                                                                
*-                                                                              
*-       Initial telnet control sequences.                                      
*-                                                                              
TCONCX   DC    AL1($IAC,$WONT,$ECHO)  We won't echo input chars                 
         DC    AL1($IAC,$DONT,$ECHO)  Don't echo our output chars               
         DC    AL1($IAC,$WONT,$SGA)                                             
         DC    AL1($IAC,$DONT,$SGA)   Use GAs to force "line mode"              
TCONCTRL EQU   TCONCX,*-TCONCX,C'X'                                             
         EJECT                                                                  
*box                                                                            
*                                                                               
*  TCPDATA -- Routine to handle data from an existing TCP                       
*    connection.                                                                
*                                                                               
*    On entry:                                                                  
*      R1,R0 - packet location, length                                          
*      R15 - header                                                             
*                                                                               
TCPDATA  PROC                                                                   
         WITH  FEB,(TPWA,R7)       (Entry assumptions)                          
*                                                                               
         L     R15,TPWORD1         Our id                                       
         FAIL  (R15,LGT,FEBPMAX),'Bad TCP_DATA id'                              
         SLL   R15,2                                                            
         A     R15,FEBPATP                                                      
         L     PIBR,@R15                                                        
         WITH  PIB                                                              
*                                                                               
         IF    (PIB,NE,'PIB'),BEGIN  Synchronization error...                   
         WTO   'TCPDATA error'                                                  
         EXIT  TCPDATA                                                          
         END                                                                    
*                                                                               
         FAIL  (PIB,NE,'PIB'),'Bad port'                                        
*                                                                               
         IF    PIBFCLOSING,TDATEXIT  Ignore if closing                          
*                                                                               
         INCR  R15,PIBNIO          Port I/O count                               
*                                                                               
         LM    R0,R1,TPXPTRS       Get packet ptrs                              
         LA    R1,@R1+L'TPID+4     Skip past header...                          
         SH    R0,=AL2(L'TPID+4)   Keep length accurate                         
         IF    NEG,'CLEAR R0'                                                   
*-                                                                              
*-       Handle terminal input data.                                            
*-                                                                              
         IF    PIBPELF,'LCALL ELFDATA'  ELF style I/O                           
         ELSEIF PIBPTELNET,'LCALL TELDATA'  Telnet style I/O                    
         ELSEIF PIBPRECONNECT,'LCALL RCONDATA'  Reconnect I/O                   
         ELSE  'FAIL "ELF driver error."'                                       
*                                                                               
TDATEXIT PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  TCPCLOSE -- Local routine to handle the closing of the TCP                   
*    connection.  We send Amelia a TCP_CLOSE and when Amelia                    
*    responds with a TCP_CLOSE then the connection can be freed.                
*                                                                               
TCPCLOSE PROC                                                                   
         WITH  FEB,(TPWA,R7)       (Entry assumptions)                          
*                                                                               
         L     R15,TPWORD1         Our id                                       
         FAIL  (R15,LGT,FEBPMAX),'Bad TCP_DATA id'                              
         SLL   R15,2                                                            
         A     R15,FEBPATP                                                      
         L     PIBR,@R15           Get PIB ptr                                  
         WITH  PIB                                                              
         FAIL  (PIB,NE,'PIB'),'Bad port'                                        
*-                                                                              
*-       This must be a response to our TCP_CLOSE; when we get                  
*-         this response we can free up the control blocks.                     
*-                                                                              
         FAIL  ^PIBFCLOSING,'TCPCLOSE logic error #1.'                          
         FAIL  (PIBSCBP,NZ),'TCPCLOSE logic error #2.'                          
*-                                                                              
*-       Reduce user count by one on this ELF.                                  
*-                                                                              
         IF    PIBPELF,BEGIN       Adjust ELF user count...                     
         LH    R0,=H'-1'           Reduce count by one                          
         L     R1,PIBRIP           ELF's IP address                             
         ACALL COUNTEIB            Do it                                        
         END                                                                    
*-                                                                              
*-       Free user control blocks.                                              
*-                                                                              
         LT    R1,PIBINSGLOC                                                    
         IF    NZ,'CLEAR PIBINSGLOC; VCALL FREECORE'  Free inp buf              
*                                                                               
         LT    R15,PIBTIMERID                                                   
         IF    NZ,'CLEAR PIBTIMERID; VCALL TIMERDQ'  Dequeue timer              
*                                                                               
         LA    R1,PIB                                                           
         VCALL FREEPIB             Free the port block                          
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  TCPFLOW -- Local routine to handle Amelia flow control requests.             
*    If we get a TCP_STOP request then we simply set a flag here;               
*    when we get the next I/O request we will process it but not                
*    send the completion back to the subsystem.  Then, when we get              
*    a TCP_START request we will send the I/O completion back to the            
*    subsystem (presumably the subsystem will then send us more                 
*    data).                                                                     
*                                                                               
TCPFLOW  PROC                                                                   
         WITH  FEB,(TPWA,R7)       (Entry assumptions)                          
*                                                                               
         L     R15,TPWORD1         Our id                                       
         FAIL  (R15,LGT,FEBPMAX),'Bad TCP_DATA id'                              
         SLL   R15,2                                                            
         A     R15,FEBPATP                                                      
         L     PIBR,@R15                                                        
         WITH  PIB                                                              
         FAIL  (PIB,NE,'PIB'),'Bad port'                                        
*-                                                                              
*-       TCP_STOP:   Stop sending data to Amelia.                               
*-                                                                              
         IF    (TPID,EQ,'TCP_STOP:'),BEGIN  Stop...                             
         SET   PIBFDSTOP           Stop sending data                            
         END                                                                    
*-                                                                              
*-       TCP_START:  OK to send data to Amelia again.                           
*-                                                                              
         ELSE  BEGIN               Start...                                     
         CLEAR PIBFDSTOP           Start sending data again                     
*                                                                               
         LT    SCBR,PIBSCBP        Get session                                  
         IF    Z,EXIT              No session, scram                            
*                                                                               
         WITH  SCB                                                              
         FAIL  (SCB,NE,'SCB'),'Bad SCB'                                         
*                                                                               
         IF    PIBFPCOMP,BEGIN     Post I/O completion...                       
         L     R5,CVPDBP                                                        
         WITH  (PDB,R5)                                                         
         MVC   PDBLENG,=AL2(L'PDBHDR)  Standard PDB length                      
         CLEAR PDBOPT                                                           
         MVC   PDBCMD,SCBCMD       Set operation code                           
         CLEAR PIBFPCOMP                                                        
*                                                                               
         XTRACE FEBTRCP,TERMCMP2   Trace completion                             
         WITH  (TTRC,R15),BEGIN                                                 
         MVC   TTRCPNAM,PIBNAME                                                 
         MVC   TTRCSID,SCBID                                                    
         MVC   TTRCSACC,SCBACCT                                                 
         MVC   TTRCCMD,PDBCMD                                                   
         MVC   TTRCCPL,PDBCPL                                                   
         MVC   TTRCTLEN,PDBLENG                                                 
         MVC   TTRCTEXT,PDBTEXT                                                 
         END                                                                    
*                                                                               
         XTRACE PIBTRCP                                                         
         WITH  (TTRCP,R15),BEGIN                                                
         MVI   TTRCPTYP,C'F'       F = FROMAMY                                  
         MVC   TTRCPCMD,PDBCMD                                                  
         MVC   TTRCPCPL,PDBCPL                                                  
         MVC   TTRCPLEN,PDBLENG                                                 
         END                                                                    
*                                                                               
         LA    R1,SCB                                                           
         LA    R15,PDB                                                          
         VCALL SUBSEND             Send completion                              
         END                                                                    
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  TCPEOF -- Local routine to handle an end of file on a TCP                    
*    connection.                                                                
*                                                                               
TCPEOF   PROC                                                                   
         WITH  FEB,(TPWA,R7)       (Entry assumptions)                          
*                                                                               
         L     R15,TPWORD1         Our id                                       
         FAIL  (R15,LGT,FEBPMAX),'Bad TCP_DATA id'                              
         SLL   R15,2                                                            
         A     R15,FEBPATP                                                      
         L     PIBR,@R15           Get PIB ptr                                  
         WITH  PIB                                                              
         FAIL  (PIB,NE,'PIB'),'Bad port'                                        
*                                                                               
         IF    PIBFCLOSING,TEOFEXIT  Ignore if already closing                  
*-                                                                              
*-       Handle end of file on input data stream.                               
*-                                                                              
         IF    PIBPELF,'LCALL ELFEOF'  ELF protocol                             
         ELSEIF PIBPTELNET,'LCALL TELEOF'  Telnet protocol                      
         ELSEIF PIBPRECONNECT,'LCALL RCONEOF'  Reconnect protocol               
         ELSE  'FAIL "ELF driver error."'                                       
*                                                                               
TEOFEXIT PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  TCPABORT -- Local routine to handle an aborted TCP connection.               
*    We have to free up the session, and then send a TCP_CLOSE.                 
*                                                                               
TCPABORT PROC                                                                   
         WITH  FEB,(TPWA,R7)       (Entry assumptions)                          
*                                                                               
         L     R15,TPWORD1         Our id                                       
         FAIL  (R15,LGT,FEBPMAX),'Bad TCP_DATA id'                              
         SLL   R15,2                                                            
         A     R15,FEBPATP                                                      
         L     PIBR,@R15           Get PIB ptr                                  
         WITH  PIB                                                              
         FAIL  (PIB,NE,'PIB'),'Bad port'                                        
*-                                                                              
*-       Disconnect session.                                                    
*-         Subsystem will eventually logoff the session.                        
*-                                                                              
         LT    R1,PIBSCBP                                                       
         IF    NZ,'VCALL DISCSESS'  Disconnect session                          
*-                                                                              
*-       Send TCP_CLOSE to get rid of this connection.                          
*-                                                                              
         IF    ^PIBFCLOSING,BEGIN  Not already closing...                       
         SEGDEF FEBUSG                                                          
         SET   FEBFCTRL            Segging control info                         
         SEG   LA:=CL16'TCP_CLOSE:',16                                          
         SEG   PIBAID              Amelia connection ID                         
         SEGWR                                                                  
         CLEAR FEBFCTRL            Reset                                        
*                                                                               
         SET   PIBFCLOSING         Connection is going away                     
         END                                                                    
*                                                                               
         PEND                                                                   
*                                                                               
         SEGDEF DUMMY              (Safety)                                     
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  TELDATA -- Routine to handle new telnet style input data.                    
*                                                                               
*    On entry:                                                                  
*      R1,R0 - new data loc, len                                                
*                                                                               
TELDATA  PROC                                                                   
         WITH  FEB,PIB             (Entry assumption)                           
*-                                                                              
*-       Buffer input data.                                                     
*-         (If we have not already buffered too much).                          
*-                                                                              
         LR    R5,R1               Packet ptrs                                  
         LR    R4,R0                                                            
*-                                                                              
*-       Allocate a buffer large enough for input data plus a bit.              
*-                                                                              
         L     R15,PIBINSGLENF     Current buffer length                        
         AR    R15,R4              New total length                             
*                                                                               
         IF    (R15,GT,PIBINSGMAXF),BEGIN  Need a bigger buffer...              
         LA    R0,@R15+PIBINX#     New buffer length                            
         N     R0,=A(-PIBINX#)     Quantize to PIBINX# bytes                    
         LA    R1,TELISUBP                                                      
         LR    R2,RAR                                                           
         VCALL NGETCORE            Get the new buffer                           
         ST    R0,PIBINSGMAXF      New total length                             
         LR    R2,R1               New data ptr                                 
*-                                                                              
*-       Copy data from old buffer in to the new buffer.                        
*-                                                                              
         IF    (PIBINSGLOC,NZ),BEGIN   We had an old buffer...                  
         MOVEL @R2,L:PIBINSGLOC,L:PIBINSGLENF  Move old buf data                
*                                                                               
         L     R1,PIBINSGLOC                                                    
         VCALL FREECORE            Free old data buffer                         
         END                                                                    
*                                                                               
         ST    R2,PIBINSGLOC       New buffer ptr                               
         END                                                                    
*-                                                                              
*-       Process imbedded Telnet control sequences.                             
*-                                                                              
         SETMSG (R5),(R4)           New data                                    
         LA    R15,PIBINSG         Add new data to this seg buffer              
         ACALL IACCHK              Handle telnet control sequences              
*-                                                                              
*-       If we have buffered a lot of data then tell Amelia to                  
*-         stop sending us new stuff for a while until we catch up.             
*-                                                                              
         IF    (PIBINSGLENF,GE,PIBINHI#),BEGIN  We have lots...                 
*        FAIL  (PIBINSGLENF,GE,PIBINMX#),'Too much input telnet data'           
         IF    PIBFINSTOP,EXIT     We are already stopped, scram                
         SET   PIBFINSTOP          We will stop getting new data                
*                                                                               
         SEGCLR FEBUSG                                                          
         SET   FEBFCTRL            Segging control info                         
         SEG   LA:=CL16'TCP_STOP:',16                                           
         SEG   PIBAID              Amelia connection ID                         
         SEGWR                                                                  
         CLEAR FEBFCTRL            Reset                                        
         END                                                                    
*-                                                                              
*-       Check to see if we can now complete the terminal read.                 
*-                                                                              
         IF    PIBFREAD,BEGIN      Waiting for read data...                     
         ACALL READCHK             See if this completes read                   
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  TELEOF -- Local routine to handle end of file on a Telnet                    
*    connection.                                                                
*                                                                               
TELEOF   PROC                                                                   
         WITH  PIB                 Entry assumption                             
*                                                                               
         SET   PIBFREOF            End of file on input stream                  
*-                                                                              
*-       See if we can terminate read with end of file.                         
*-                                                                              
         IF    PIBFREAD,'ACALL READCHK'                                         
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  RCONDATA -- Routine to handle new input data for a reconnect                 
*    session.                                                                   
*                                                                               
*    On entry:                                                                  
*      R1,R0 - new data loc, len                                                
*                                                                               
RCONDATA PROC                                                                   
         WITH  FEB,PIB             (Entry assumption)                           
         SEGDEF FEBUSG             Default seg buffer                           
*-                                                                              
*-       Process the input data looking for "IAC WILL RECONNECT"                
*-         response to our initial "IAC DO RECONNECT".  We ignore               
*-         everything else.                                                     
*-                                                                              
         LR    R5,R1               Packet ptrs                                  
         LR    R4,R0                                                            
*                                                                               
         WHILE (R4,POS),BEGIN      Process input data...                        
*-                                                                              
*-       Check for first byte of IAC sequence.                                  
*-                                                                              
         IF    PIBINFDATA,BEGIN    We don't have IAC yet...                     
         IF    (@R5,EQ,$IAC),'SET PIBINFIAC'  We got an IAC                     
         B     RCDNEXT                                                          
         END                                                                    
*-                                                                              
*-       Check for IAC sequence option.                                         
*-                                                                              
         IF    PIBINFIAC,BEGIN     We have an IAC...                            
         IF    (@R5,EQ,$WILL),'SET PIBINFIACWILL'                               
         ELSEIF (@R5,EQ,$WONT),'SET PIBINFIACWONT'                              
         ELSEIF (@R5,EQ,$DO),'SET PIBINFIACDO'                                  
         ELSEIF (@R5,EQ,$DONT),'SET PIBINFIACDONT'                              
         ELSEIF (@R5,EQ,X'FF'),'SET PIBINFDATA'                                 
         ELSE  'SET PIBINFDATA'    Unknown option                               
         B     RCDNEXT                                                          
         END                                                                    
*-                                                                              
*-       IAC WILL sequence.                                                     
*-                                                                              
         IF    PIBINFIACWILL,BEGIN  IAC WILL sequence...                        
*-                                                                              
*-       IAC WILL RECONNECT sequence.                                           
*-                                                                              
         IF    (@R5,EQ,$RECON),BEGIN  Will reconnect...                         
         MVC   PIBTICKMSG,=F'-1'   No message any more                          
         L     R15,PIBTICKCUR                                                   
         LA    R15,@R15+10                                                      
         ST    R15,PIBTICKLGF      10 seconds before we close                   
*                                                                               
         L     R1,PIBRIP           Remote IP address                            
         ACALL BESTEIB             Get best ELF for us                          
         IF    Z,BEGIN             No ELFs at all...                            
         SET   FEBFASC                                                          
         SEG   'No ELF front-ends are currently available.'                     
         SEG   '  Please try again later.'                                      
         SEG   X'0D25'             CR,LF (EBCDIC)                               
         CLEAR FEBFASC                                                          
         END                                                                    
*                                                                               
         ELSE  BEGIN               Use best ELF...                              
         LR    R3,R15                                                           
         WITH  (EIB,R3)                                                         
         SEG   =AL1($IAC,$SB,$RECON,$SBCONN),4                                  
         SET   FEBFASC                                                          
         SEGT  EIBADDRF            EBCDIC formatted IP address                  
         SEG   ','                                                              
         LT    R2,EIBPORT          TCP port number                              
         IF    NZ,BEGIN            We have a specific port...                   
         SEGDC (R2)                Port number                                  
         END                                                                    
         ELSE  BEGIN               Use our port number...                       
         L     R2,PIBSOCKP                                                      
         WITH  (SOCK,R2),'SEGDC L:SOCKNO'  Our socket number                    
         END                                                                    
         CLEAR FEBFASC                                                          
         SEG   =AL1($IAC,$SE),2                                                 
         END                                                                    
         END                                                                    
*                                                                               
         SET   PIBINFDATA          OK, so they will do something                
         B     RCDNEXT                                                          
         END                                                                    
*-                                                                              
*-       IAC WONT sequence.                                                     
*-                                                                              
         IF    PIBINFIACWONT,BEGIN  IAC WONT sequence...                        
*-                                                                              
*-       IAC WONT RECONNECT sequence.                                           
*-                                                                              
         IF    (@R5,EQ,$RECON),BEGIN  Won't reconnect...                        
         CLEAR PIBTICKMSG          Force the message to be displayed            
         L     R15,PIBTICKCUR                                                   
         LA    R15,@R15+15                                                      
         ST    R15,PIBTICKLGF      15 seconds before we close                   
         END                                                                    
*                                                                               
         SET   PIBINFDATA          OK, so they won't do something               
         B     RCDNEXT                                                          
         END                                                                    
*-                                                                              
*-       IAC DO sequence.                                                       
*-         We will reject anything they ask us to do, unless it's               
*-         something common like ECHO or SGA -- which we don't care             
*-         about one way or the other.                                          
*-                                                                              
         IF    PIBINFIACDO,BEGIN   IAC DO sequence...                           
         IF    (@R5,NE,$ECHO),BEGIN  Some unusual IAC DO sequence...            
         IF    (@R5,EQ,$SGA),EXIT  Don't complain about DO SGA                  
*                                                                               
         SEG   =AL1($IAC,$WONT),2                                               
         SEG   @R5,1                                                            
         END                                                                    
*                                                                               
         SET   PIBINFDATA                                                       
         B     RCDNEXT                                                          
         END                                                                    
*-                                                                              
*-       IAC DONT sequence.                                                     
*-                                                                              
         IF    PIBINFIACDONT,BEGIN  IAC DONT sequence...                        
         SET   PIBINFDATA          Accept demand                                
         B     RCDNEXT                                                          
         END                                                                    
*-                                                                              
*-       Next character in input stream.                                        
*-                                                                              
RCDNEXT  LA    R5,@R5+1            Next character                               
         DECR  R4                                                               
         END                                                                    
*                                                                               
         SEGWR                                                                  
*                                                                               
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
*                                                                               
         SEGDEF DUMMY              (Neatness)                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  RCONEOF -- Local routine to handle end of file on a                          
*    re-connect session.                                                        
*                                                                               
RCONEOF  PROC                                                                   
         WITH  FEB,PIB             Entry assumption                             
*-                                                                              
*-       Tell Amelia to close this TCP connection.                              
*-                                                                              
         SEGCLR FEBUSG                                                          
         SET   FEBFCTRL            Segging control info                         
         SEG   LA:=CL16'TCP_EOF:',16                                            
         SEG   PIBAID              Amelia connection ID                         
         SEGWR                                                                  
         CLEAR FEBFCTRL            Reset                                        
*                                                                               
         SET   FEBFCTRL            Segging control info                         
         SEG   LA:=CL16'TCP_CLOSE:',16                                          
         SEG   PIBAID              Amelia connection ID                         
         SEGWR                                                                  
         CLEAR FEBFCTRL            Reset                                        
*                                                                               
         SET   PIBFCLOSING         We are closing the connection                
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  RCONTIMR -- Routine to handle reconnect protocol timeouts.                   
*    (Entered as a timer exit routine from the dispatcher.)                     
*                                                                               
RTMWA    RECORD BEGIN                                                           
RTMCUR   DS    XL(L'CVCUR)         Saved failsoft information                   
         END                                                                    
*-                                                                              
RCONTIMR PROC  RTMWA                                                            
         LR    PIBR,R1                                                          
         WITH  PIB                                                              
         FAIL  (PIB,NE,'PIB'),'Bad PIB ptr.'                                    
         L     FEBR,PIBFEBP        Get FEB ptr                                  
         WITH  FEB                                                              
*                                                                               
         SEGCLR FEBUSG             Default seg buffer                           
*                                                                               
         MVC   RTMCUR,CVCUR        Save current failsoft info                   
         ST    FEBR,CVCURFEB       Save current fe                              
         ST    PIBR,CVCURPIB       Save current port                            
*                                                                               
         CLEAR PIBTIMERID          Reset our timer ID                           
         INCR  R5,PIBTICKCUR       Count one more second                        
*                                                                               
         IF    PIBFCLOSING,RCTMEXIT  Closing, forget it                         
*-                                                                              
*-       Write out an information message when the automatic                    
*-         reconnect doesn't work.                                              
*-                                                                              
         IF    (R5,LGT,PIBTICKMSG),BEGIN  Time for a message...                 
         L     R6,PIBSOCKP         Our SOCK ptr                                 
         WITH  (SOCK,R6)                                                        
         FAIL  (SOCK,NE,'SOCK'),'Bad SOCK ptr.'                                 
*                                                                               
         IF    (SOCKMSGL,NZ),BEGIN  Write out any messages now...               
         SEGCLR FEBUSG                                                          
         SET   FEBFASC                                                          
         SEG   L:SOCKMSGP,LH:SOCKMSGL  Message text (if any)                    
         SEG   X'0D25'             CR,LF (EBCDIC)                               
         CLEAR FEBFASC                                                          
         SEGWR                                                                  
         END                                                                    
*                                                                               
         MVC   PIBTICKMSG,=F'-1'   Never again                                  
         B     RCTMREST            Restart timer and scram                      
         END                                                                    
*-                                                                              
*-       Time to disconnect this guy.                                           
*-                                                                              
         IF    (R5,LGT,PIBTICKLGF),BEGIN  Time to disconnect...                 
         LT    R1,PIBSCBP                                                       
         IF    NZ,'VCALL DISCSESS'  Disconnect session                          
*                                                                               
         SET   FEBFCTRL            Segging control sequence                     
         SEG   LA:=CL16'TCP_ABORT:',16                                          
         SEG   PIBAID              Amelia connection ID                         
         SEGWR                                                                  
         CLEAR FEBFCTRL            Reset                                        
*                                                                               
         SET   FEBFCTRL            Segging control sequence                     
         SEG   LA:=CL16'TCP_CLOSE:',16                                          
         SEG   PIBAID              Amelia connection ID                         
         SEGWR                                                                  
         CLEAR FEBFCTRL            Reset                                        
*                                                                               
         SET   PIBFCLOSING         Connection is closing                        
         END                                                                    
*-                                                                              
*-       Restart timer.                                                         
*-                                                                              
RCTMREST L     R0,=A(RCONTIMR)                                                  
         LA    R1,PIB                                                           
         LA    R15,100             1 second interval                            
         VCALL TIMERQ                                                           
         ST    R15,PIBTIMERID      Save our timer ID                            
*                                                                               
RCTMEXIT MVC   CVCUR,RTMCUR        Restore failsoft info                        
         PEND                                                                   
*                                                                               
         SEGDEF DUMMY              (Neatness)                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ELFDATA -- Routine to handle new ELF style input data.                       
*                                                                               
*    On entry:                                                                  
*      R1,R0 - new data loc, len                                                
*                                                                               
ELFDATA  PROC  ,                                                                
         WITH  FEB,PIB             (Entry assumption)                           
*-                                                                              
*-       Buffer input data.                                                     
*-         (If we have not already buffered too much).                          
*-                                                                              
         LR    R5,R1               Packet ptrs                                  
         LR    R4,R0                                                            
*-                                                                              
*-       Allocate a buffer large enough for input data plus a bit.              
*-                                                                              
         L     R15,PIBINSGLENF     Current buffer length                        
         AR    R15,R4              New total length                             
*                                                                               
         IF    (R15,GT,PIBINSGMAXF),BEGIN  Need a bigger buffer...              
         LA    R0,@R15+PIBINX#     New buffer length                            
         N     R0,=A(-PIBINX#)     Quantize to PIBINX# bytes                    
         LA    R1,EPIBSUBP                                                      
         LR    R2,RAR                                                           
         VCALL NGETCORE            Get the new buffer                           
         ST    R0,PIBINSGMAXF      New total length                             
         LR    R2,R1               New data ptr                                 
*-                                                                              
*-       Copy data from old buffer in to the new buffer.                        
*-                                                                              
         IF    (PIBINSGLOC,NZ),BEGIN   We had an old buffer...                  
         MOVEL @R2,L:PIBINSGLOC,L:PIBINSGLENF  Move old buf data                
*                                                                               
         L     R1,PIBINSGLOC                                                    
         VCALL FREECORE            Free old data buffer                         
         END                                                                    
*                                                                               
         ST    R2,PIBINSGLOC       New buffer ptr                               
         END                                                                    
*                                                                               
         SEG   (R5),(R4),.PIBINSG  Add new data to buffer                       
*-                                                                              
*-       Check out the ELF header.                                              
*-                                                                              
         WHILE (PIBINSGLENF,GE,L'HDR),BEGIN  Do while headers...                
         L     R5,PIBINSGLOC                                                    
         WITH  (HDR,R5)                                                         
*                                                                               
         IF    (HDRID,NE,'ELF0'),'LCALL ELFERROR; B ELFDEXIT'                   
*                                                                               
         LA    R2,L'HDR                                                         
         AH    R2,HDRLEN           Total header length                          
*-                                                                              
*-       We have a complete ELF packet, process it and then                     
*-         delete it from our buffer.                                           
*-                                                                              
         IF    (PIBINSGLENF,LT,R2),ELFDEXIT  Not complete, scram                
*                                                                               
         LA    R1,HDR                                                           
         LCALL ELFPROC             Process input ELF transaction                
         BNZ   ELFDEXIT            Something bad happened, scram                
*                                                                               
         IF    (R2,GE,PIBINSGLENF),BEGIN  Everything processed...               
         LT    R1,PIBINSGLOC                                                    
         FAIL  Z,'Telnet ELFDATA buffer problem.'                               
         VCALL FREECORE            Free input buffer                            
         CLEAR PIBINSGLENF,PIBINSGMAXF,PIBINSGLOC                               
         END                                                                    
*                                                                               
         ELSE  BEGIN               Move residual read text up...                
         L     R6,PIBINSGLOC       Start of buffer                              
         L     R5,PIBINSGLENF      Data length                                  
         SR    R5,R2               Deduct data we are deleting                  
         AR    R2,R6               Data we want to keep starts here             
         MOVEL @R6,@R2,(R5)        Move data over (delete old text)             
         ST    R5,PIBINSGLENF      Save updated data length                     
         END                                                                    
         END                                                                    
*                                                                               
ELFDEXIT PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ELFPROC -- Routine to process an incoming ELF packet.                        
*                                                                               
*    On entry:                                                                  
*      R1 - HDR with data                                                       
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - processed OK                                                         
*      4 - error (careful--the PIB will be freed on return)                     
*                                                                               
ELFPROC  PROC                                                                   
         WITH  FEB,PIB             (Entry assumptions)                          
         L     SCBR,PIBSCBP                                                     
         WITH  SCB                                                              
*                                                                               
         LR    R6,R1                                                            
         WITH  (HDR,R6)                                                         
*                                                                               
         L     R7,CVPDBP                                                        
         WITH  (PDB,R7)                                                         
         CLEAR PDBHDR                                                           
*                                                                               
*-                                                                              
*-       Must be a response.                                                    
*-                                                                              
*CHAZBUG!IF    (HDRTYPE,NE,'<'),'LCALL ELFERROR; B ELFPEXIT'                    
*-                                                                              
*-       Allocate a new session.                                                
*-                                                                              
         IF    (SCBR,Z),BEGIN      No session yet...                            
         IF    (HDRCMD,NE,HDRFSOS),'LCALL ELFERROR; B ELFPEXIT'                 
         LA    R1,PIB                                                           
         LA    R0,L'SCB                                                         
         VCALL GETSCB              Get a session                                
         LR    SCBR,R1                                                          
         WITH  SCB                                                              
         END                                                                    
*-                                                                              
*-       Check out header command code.                                         
*-                                                                              
         IF    (HDRCMD,EQ,HDRFRD),'MVI PDBCMD,FMILREAD'                         
         ELSEIF (HDRCMD,EQ,HDRFWR),'MVI PDBCMD,FMILWRIT'                        
         ELSEIF (HDRCMD,EQ,HDRFSOS),'MVI PDBCMD,FMILSOS'                        
         ELSEIF (HDRCMD,EQ,HDRFHALT),BEGIN                                      
         MVI   PDBCMD,FMILASYN     Asynchronous status                          
         SET   PDBCPLB.CPLBIA      Idle attn                                    
         END                                                                    
         ELSE  'LCALL ELFERROR; B ELFPEXIT'                                     
*                                                                               
         IF    (HDRCPL,EQ,HDRRATTN),'SET PDBCPLA.CPLAATTN'                      
         ELSEIF (HDRCPL,EQ,HDRRHALT),'SET PDBCPLA.CPLABRK'                      
         ELSEIF (HDRCPL,EQ,HDRRERR),'SET PDBCPLA.CPLAIOE'                       
*                                                                               
         LH    R2,HDRLEN                                                        
         MOVEL PDBTEXT,HDRTEXT,(R2)  Move data in to PDB                        
         STH   R2,PDBRC            Save input text count                        
*                                                                               
         IF    (HDRCMD,EQ,HDRFSOS),BEGIN  Start of session...                   
         LA    R15,PDB                                                          
         ACALL ELFSPARM            Process ELF signon parms                     
*                                                                               
         SET   SCBFFILT                                                         
         MVC   SCBWID,=H'80'       Width                                        
         MVC   SCBTINFO,=X'8188'   Ttype info is faked                          
         MVC   SCBTTYPE,PIBTTYPE   Preset terminal type                         
         MVC   SCBIPADR,PIBTELIP   Copy in IP address                           
         END                                                                    
*                                                                               
         LA    R2,L'PDBHDR                                                      
         AH    R2,PDBRC                                                         
         STH   R2,PDBLENG          Total PDB length                             
*-                                                                              
*-       Send response text to subsystem.                                       
*-                                                                              
         XTRACE FEBTRCP,TERMRCMP   Trace read completion                        
         WITH  (TTRC,R15),BEGIN                                                 
         MVC   TTRCPNAM,PIBNAME                                                 
         MVC   TTRCSID,SCBID                                                    
         MVC   TTRCSACC,SCBACCT                                                 
         MVC   TTRCCMD,PDBCMD                                                   
         MVC   TTRCTLEN,PDBLENG                                                 
         MVC   TTRCTEXT,PDBTEXT                                                 
         END                                                                    
*                                                                               
         XTRACE PIBTRCP                                                         
         WITH  (TTRCP,R15),BEGIN                                                
         MVI   TTRCPTYP,C'F'       F = FROMAMY                                  
         MVC   TTRCPCMD,PDBCMD                                                  
         MVC   TTRCPCPL,PDBCPL                                                  
         MVC   TTRCPLEN,PDBLENG                                                 
         END                                                                    
*                                                                               
         LA    R1,SCB                                                           
         LA    R15,PDB                                                          
         IF    (PDBCMD,EQ,FMILSOS),'VCALL SUBSTART'                             
         ELSE  'VCALL SUBSEND'                                                  
*                                                                               
         CLEAR R15                 A-ok                                         
ELFPEXIT PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ELFEOF -- Local routine to handle an end of file on an ELF                   
*    connection.                                                                
*                                                                               
ELFEOF   PROC                                                                   
         WITH  FEB,PIB             Entry assumption                             
*-                                                                              
*-       Disconnect session.                                                    
*-         Subsystem will eventually logoff the session.                        
*-                                                                              
         LT    R1,PIBSCBP                                                       
         IF    NZ,'VCALL DISCSESS'  Disconnect session                          
*-                                                                              
*-       Tell Amelia that this connection is history.                           
*-                                                                              
         IF    ^PIBFCLOSING,BEGIN  Only send one close...                       
         SEGDEF FEBUSG                                                          
         SET   FEBFCTRL            Segging control sequence                     
         SEG   LA:=CL16'TCP_CLOSE:',16                                          
         SEG   PIBAID              Amelia connection ID                         
         SEGWR                                                                  
         CLEAR FEBFCTRL            Reset                                        
*                                                                               
         SET   PIBFCLOSING         Connection is going away                     
         END                                                                    
*                                                                               
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ELFERROR -- Routine to handle an ELF protocol error; right                   
*    now this means closing the connection.                                     
*                                                                               
*    On exit, R15 (and cc):                                                     
*      4 - port has been freed (ELFPROC returns this RC)                        
*                                                                               
ELFERROR PROC                                                                   
         WITH  FEB,PIB             (Entry assumptions)                          
*-                                                                              
*-       Disconnect session.                                                    
*-         Subsystem will eventually logoff the session.                        
*-                                                                              
         LT    R1,PIBSCBP                                                       
         IF    NZ,'VCALL DISCSESS'  Disconnect session                          
*-                                                                              
*-       Tell Amelia that this connection is history.                           
*-                                                                              
         SEGDEF FEBUSG                                                          
         SET   FEBFCTRL            Segging control sequence                     
         SEG   LA:=CL16'TCP_ABORT:',16                                          
         SEG   PIBAID              Amelia connection ID                         
         SEGWR                                                                  
         CLEAR FEBFCTRL            Reset                                        
*                                                                               
         SET   FEBFCTRL            Segging control sequence                     
         SEG   LA:=CL16'TCP_CLOSE:',16                                          
         SEG   PIBAID              Amelia connection ID                         
         SEGWR                                                                  
         CLEAR FEBFCTRL            Reset                                        
*                                                                               
         SET   PIBFCLOSING         Connection is closing                        
*                                                                               
         LA    R15,4               Return "port freed" rc                       
         PEND                                                                   
*                                                                               
         SEGDEF DUMMY              (Safety)                                     
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ELFSPARM -- Routine to process the start of session parameters               
*    sent by the ELF.                                                           
*                                                                               
*    On entry:                                                                  
*      R15 - PDB ptr (with parameters in PDBTEXT, len in PDBRC)                 
*                                                                               
*    On exit:                                                                   
*      The parameter line is left untouched in the PDB and then                 
*      passed on to Wylbur.                                                     
*                                                                               
ESPWA    RECORD BEGIN                                                           
ESPSCNCB DS    XL(L'SCNCB)         Working SCANCB                               
ESPSG    SEGCB ,                   Working SEGCB                                
*                                                                               
ESPPLEN# EQU   64                  Generic parameter length                     
ESPWELF  DS    CL(ESPPLEN#)        ELF hostname                                 
ESPWELFA DS    CL(ESPPLEN#)        ELF IP address                               
ESPWPID  DS    CL(ESPPLEN#)        ELF process id                               
ESPWTEL  DS    CL(ESPPLEN#)        TELNET hostname                              
ESPWTELA DS    CL(ESPPLEN#)        TELNET host IP address                       
ESPWACCT DS    CL8                 Account                                      
ESPWPASS DS    CL8                 Password                                     
ESPWSYS  DS    CL8                 Initial subsystem name                       
ESPWTTYP DS    CL8                 Terminal type                                
*                                                                               
ESPWORK  DS    CL(ESPPLEN#)        Working hostname area                        
         END                                                                    
*-                                                                              
ELFSPARM PROC  ESPWA                                                            
         CLEAR ESPWA                                                            
*                                                                               
         WITH  FEB,PIB             Entry assumption                             
*                                                                               
         LR    R7,R15                                                           
         WITH  (PDB,R7)                                                         
*                                                                               
         LA    R6,ESPSCNCB                                                      
         WITH  (SCANCB,R6)                                                      
*-                                                                              
*-       Scan ELF signon parameters.                                            
*-                                                                              
         IF    (PDBRC,GT,6),BEGIN  Possibly elf parms...                        
         SETMSG PDBTEXT,LH:PDBRC    ELF parameters                              
         IF    (@R1,NE,'login:'),EXIT                                           
         LA    R1,@R1+6            Skip past "login:"                           
         SH    R0,=H'6'                                                         
*                                                                               
         ST    R1,CVTOKLOC         Save string addr                             
         STH   R0,CVTOKLEN         Save string length                           
ELFSLOOP WHILE ('VCALL SCANTOK',Z),BEGIN  Go through tokens...                  
*-                                                                              
*-       ELF_HOSTADDR=ip-address                                                
*-                                                                              
         IF    (CVTOKUPP,EQ,'ELF_HOSTADDR '),BEGIN                              
         VCALL SCANTOK             Next token                                   
         MVC   ESPWELFA,CVBLANKS   Pre-blank                                    
         LR    R15,R0                                                           
         CEIL  R15,L'ESPWELFA                                                   
         MOVE  R15,ESPWELFA,@R1    Save parameter                               
         B     ELFSLOOP                                                         
         END                                                                    
*-                                                                              
*-       ELF_HOSTNAME=hostname                                                  
*-                                                                              
         IF    (CVTOKUPP,EQ,'ELF_HOSTNAME '),BEGIN                              
         VCALL SCANTOK             Next token                                   
         MVC   ESPWELF,CVBLANKS    Pre-blank                                    
         LR    R15,R0                                                           
         CEIL  R15,L'ESPWELF                                                    
         MOVE  R15,ESPWELF,@R1     Save parameter                               
         IF    ((ESPWELF,GE,'a'),AND,(ESPWELF,LE,'z')),BEGIN                    
         OI    ESPWELF,C' '        Capitalize first letter                      
         END                                                                    
         B     ELFSLOOP                                                         
         END                                                                    
*-                                                                              
*-       PID=process-number                                                     
*-                                                                              
         IF    (CVTOKUPP,EQ,'PID '),BEGIN                                       
         VCALL SCANTOK             Next token                                   
         MVC   ESPWPID,CVBLANKS    Pre-blank                                    
         LR    R15,R0                                                           
         CEIL  R15,L'ESPWPID                                                    
         MOVE  R15,ESPWPID,@R1     Save parameter                               
         B     ELFSLOOP                                                         
         END                                                                    
*-                                                                              
*-       TELNET_HOSTADDR=ip-address                                             
*-                                                                              
         IF    (CVTOKUPP,EQ,'TELNET_HOSTADDR '),BEGIN                           
         VCALL SCANTOK             Next token                                   
         MVC   ESPWTELA,CVBLANKS   Pre-blank                                    
         LR    R15,R0                                                           
         CEIL  R15,L'ESPWTELA                                                   
         MOVE  R15,ESPWTELA,@R1    Save parameter                               
         B     ELFSLOOP                                                         
         END                                                                    
*-                                                                              
*-       TELNET_HOSTNAME=hostname                                               
*-                                                                              
         IF    (CVTOKUPP,EQ,'TELNET_HOSTNAME '),BEGIN                           
         VCALL SCANTOK             Next token                                   
         MVC   ESPWTEL,CVBLANKS    Pre-blank                                    
         LR    R15,R0                                                           
         CEIL  R15,L'ESPWTEL                                                    
         MOVE  R15,ESPWTEL,@R1     Save parameter                               
         IF    ((ESPWTEL,GE,'a'),AND,(ESPWTEL,LE,'z')),BEGIN                    
         OI    ESPWTEL,C' '        Capitalize first letter                      
         END                                                                    
         B     ELFSLOOP                                                         
         END                                                                    
*-                                                                              
*-       AUTH_IDENTITY=string                                                   
*-                                                                              
         IF    (CVTOKUPP,EQ,'AUTH_IDENTITY '),BEGIN                             
         VCALL SCANTOK             Next token                                   
         B     ELFSLOOP                                                         
         END                                                                    
*-                                                                              
*-       AUTH_METHOD=string                                                     
*-                                                                              
         IF    (CVTOKUPP,EQ,'AUTH_METHOD '),BEGIN                               
         VCALL SCANTOK             Next token                                   
         B     ELFSLOOP                                                         
         END                                                                    
*-                                                                              
*-       ACCOUNT=account                                                        
*-                                                                              
         IF    (CVTOKUPP,EQ,'ACCOUNT '),BEGIN                                   
         VCALL SCANTOK             Get parameter                                
         MVC   ESPWACCT,CVTOKUPP                                                
         B     ELFSLOOP                                                         
         END                                                                    
*-                                                                              
*-       XACCOUNT=account                                                       
*-                                                                              
         IF    (CVTOKUPP,EQ,'XACCOUNT '),BEGIN                                  
         VCALL SCANTOK             Get parameter                                
*         MVC   ESPWACCT,CVTOKUPP                                               
         B     ELFSLOOP                                                         
         END                                                                    
*-                                                                              
*-       PASSWORD=password                                                      
*-                                                                              
         IF    (CVTOKUPP,EQ,'PASSWORD '),BEGIN                                  
         VCALL SCANTOK             Get parameter                                
         MVC   ESPWPASS,CVTOKUPP                                                
         B     ELFSLOOP                                                         
         END                                                                    
*-                                                                              
*-       SYSTEM=subsys                                                          
*-                                                                              
         IF    (CVTOKUPP,EQ,'SYSTEM '),BEGIN                                    
         VCALL SCANTOK             Get parameter                                
         MVC   ESPWSYS,CVTOKUPP                                                 
         B     ELFSLOOP                                                         
         END                                                                    
*-                                                                              
*-       TERMTYPE=termtype.                                                     
*-                                                                              
         IF    (CVTOKUPP,EQ,'TERMTYPE '),BEGIN                                  
         VCALL SCANTOK             Get parameter                                
         MVC   ESPWTTYP,CVTOKUPP                                                
         B     ELFSLOOP                                                         
         END                                                                    
         END                                                                    
*-                                                                              
*-       Get TELNET host IP address in binary.                                  
*-                                                                              
         IF    (ESPWTELA,NZ),BEGIN                                              
         SETMSG ESPWTELA                                                        
         VCALL LRTRIM                                                           
         ACALL CNVTIP              Convert IP addr to binary                    
         IF    NZ,'ST R15,PIBTELIP'  Save IP address                            
         END                                                                    
*-                                                                              
*-       Remove ".STANFORD.EDU" suffix from ELF and TELNET                      
*-         host names if possible.                                              
*-                                                                              
         IF    (ESPWELF,NZ),BEGIN  We have an ELF hostname...                   
         MVC   ESPWORK,ESPWELF     Copy                                         
         OC    ESPWORK,CVBLANKS    Convert copy to caps                         
         SETMSG ESPWORK                                                         
         VCALL RTRIM               Trim trailing blanks                         
         IF    (R0,GE,L'NAMESFX),BEGIN  Check for local suffix...               
         LR    R2,R1                                                            
         AR    R2,R0                                                            
         SH    R2,=AL2(L'NAMESFX)                                               
         IF    (@R2,NE,NAMESFX),EXIT  Not a local hostname, scram               
         SR    R2,R1               Offset into suffix                           
         LA    R2,ESPWELF(R2)                                                   
         MVC   @R2(L'NAMESFX),CVBLANKS  Blank out local suffix                  
         END                                                                    
*                                                                               
         MVC   ESPWORK,ESPWELF     Copy                                         
         OC    ESPWORK,CVBLANKS    Convert copy to caps                         
         SETMSG ESPWORK                                                         
         VCALL RTRIM               Trim trailing blanks                         
         IF    (R0,GE,L'DYNSFX),BEGIN  Check for screwy suffix...               
         LR    R2,R1                                                            
         AR    R2,R0                                                            
         SH    R2,=AL2(L'DYNSFX)                                                
         IF    (@R2,NE,DYNSFX),EXIT  No screwy suffix, scram                    
         SR    R2,R1               Offset into suffix                           
         LA    R2,ESPWELF(R2)                                                   
         MVC   @R2(L'DYNSFX),CVBLANKS  Blank out local suffix                   
         END                                                                    
         END                                                                    
*                                                                               
         IF    (ESPWTEL,NZ),BEGIN  We have a telnet hostname...                 
         MVC   ESPWORK,ESPWTEL     Copy                                         
         OC    ESPWORK,CVBLANKS    Convert copy to caps                         
         SETMSG ESPWORK                                                         
         VCALL RTRIM               Trim trailing blanks                         
         IF    (R0,GE,L'NAMESFX),BEGIN  Check for local suffix...               
         LR    R2,R1                                                            
         AR    R2,R0                                                            
         SH    R2,=AL2(L'NAMESFX)                                               
         IF    (@R2,NE,NAMESFX),EXIT  Not a local hostname, scram               
         SR    R2,R1               Offset into suffix                           
         LA    R2,ESPWTEL(R2)                                                   
         MVC   @R2(L'NAMESFX),CVBLANKS  Blank out local suffix                  
         END                                                                    
*                                                                               
         MVC   ESPWORK,ESPWTEL     Copy                                         
         OC    ESPWORK,CVBLANKS    Convert copy to caps                         
         SETMSG ESPWORK                                                         
         VCALL RTRIM               Trim trailing blanks                         
         IF    (R0,GE,L'DYNSFX),BEGIN  Check for screwy suffix...               
         LR    R2,R1                                                            
         AR    R2,R0                                                            
         SH    R2,=AL2(L'DYNSFX)                                                
         IF    (@R2,NE,DYNSFX),EXIT  No screwy suffix, scram                    
         SR    R2,R1               Offset into suffix                           
         LA    R2,ESPWTEL(R2)                                                   
         MVC   @R2(L'DYNSFX),CVBLANKS  Blank out local suffix                   
         END                                                                    
         END                                                                    
*-                                                                              
*-       Format PIBINFO field as "elf-pid".                                     
*-                                                                              
         IF    (ESPWELF,NZ),BEGIN  We have an elf name...                       
         MVC   PIBINFO,CVBLANKS    Pre-blank                                    
         SEGINIT PIBINFO,,ESPSG                                                 
         SEGT  ESPWELF             Elf name                                     
         SEG   '-'                                                              
         SETMSG ESPWPID                                                         
         VCALL RTRIM                                                            
         LA    R2,5                                                             
         SR    R2,R0                                                            
         IF    POS,BEGIN                                                        
         LA    R1,=C'00000'                                                     
         SEG   (R1),(R2)          Add leading zeros                             
         END                                                                    
         SEGT  ESPWPID             Process id                                   
         SEGDEF DUMMY                                                           
*                                                                               
         CLEAR PIBLOC              Assume no location information               
         END                                                                    
*-                                                                              
*-       Save hostname (or host address) of person doing the telnet.            
*-                                                                              
         LA    R2,ESPWTELA         Assume we have their IP address              
         IF    (ESPWTEL,NZ),'LA R2,ESPWTEL'  We have their hostname             
         IF    (@R2,NE,X'00'),BEGIN  We have something...                       
         IF    (ESPWELF,EQ,ESPWTEL),EXIT  Local ELF, forget it                  
         MVC   PIBLOC,CVBLANKS    Pre-blank                                     
         LA    R15,L'ESPWTEL                                                    
         CEIL  R15,L'PIBLOC                                                     
         MOVE  R15,PIBLOC,@R2     Save TELNET hostname                          
         END                                                                    
*                                                                               
         IF    (ESPWTTYP,NZ),'MVC PIBTTYPE,ESPWTTYP'  Set term type             
*                                                                               
         IF    (ESPWSYS,NZ),'MVC PIBDFSYS,ESPWSYS'  Set default sys             
*                                                                               
         ACALL SETIPINF            Set flags based on their IP addr             
         END                                                                    
*                                                                               
         PEND                                                                   
*                                                                               
NAMESFX  DC    C'.STANFORD.EDU'    Hostname suffix which is local               
DYNSFX   DC    C'-DYNAMIC'         Kinetics "-dynamic" suffix                   
         SEGDEF DUMMY              (Neatness)                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*   SETIPINF -- Routine to set special information based on the                 
*      remote host's IP address.                                                
*                                                                               
*      On entry:                                                                
*                                                                               
*                                                                               
SETIPINF PROC                                                                   
         WITH  PIB                 (Entry assumption)                           
*-                                                                              
*-       RLG modification to set SMF port type based on where the               
*-         connection came from.                                                
*-                                                                              
         IF    (PIBTELIP,EQ,RLGIP),'MVI PIBTETYP,C"T"'                          
         PEND                                                                   
*                                                                               
RLGIP    DS    0A                                                               
         DC    AL1(36,54,0,120)    *** RLG-IXGATE1 Sprintnet gateway            
         EJECT                                                                  
*box                                                                            
*                                                                               
*  IACCHK -- Local routine to process Telnet IAC control sequences              
*    in the input data stream.  This routine processes all IAC                  
*    sequences, and SEGs the user data using the SEGCB ptr the                  
*    caller provides.                                                           
*                                                                               
*    On entry:                                                                  
*      R1,R0 - data location, length                                            
*      R15 - output SEGCB ptr                                                   
*                                                                               
*    On exit:                                                                   
*      User data has been SEG'd                                                 
*                                                                               
IACWA    RECORD BEGIN                                                           
IACPLOC  DS    A                   Data location on entry                       
IACSUBST DS    A                   Start of subnegotiation                      
IACPLINE DS    CL235               Working line buffer                          
         END                                                                    
*-                                                                              
IACCHK   PROC  (R2,LSR),IACWA                                                   
         WITH  FEB,PIB             (Entry assumptions)                          
*                                                                               
         ST    R1,IACPLOC          Save original data ptr                       
         CLEAR IACSUBST            Not in subnegotiation yet                    
*                                                                               
         LR    R7,R15              SEGCB ptr                                    
         SEGDEF (R7)                                                            
*                                                                               
         LR    R6,R1               Input ptr                                    
         LTR   R5,R0               Input length                                 
         BNP   ICHKDONE            Nothing new to look at, scram                
*                                                                               
         LT    SCBR,PIBSCBP        SCB ptr                                      
         BZ    ICHKDONE            No session, forget this                      
         WITH  SCB                                                              
*                                                                               
         IF    ^PIBFIAC,BEGIN      Don't do any IAC processing...               
         SEG   (R1),(R0)           Copy input to direct to output               
         B     ICHKDONE                                                         
         END                                                                    
*-                                                                              
*-       Look for telnet control sequences in the data stream.                  
*-                                                                              
IACLOOP  WHILE (R5,POS),BEGIN      Look for control sequences...                
         LR    R15,R5                                                           
         CEIL  R15,256                                                          
         LA    R1,@R6(R15)                                                      
         CLEAR R2                                                               
         DEX   R15,'TRT @R6(0),IACTRT'  Look for IAC character                  
         LR    R3,R1                                                            
         SR    R3,R6               Length to skip                               
*                                                                               
* Don't add the information if we're in a subnegotiation,                       
* since it's not actual data intended for the user.                             
*                                                                               
         LT    R0,IACSUBST                                                      
         IF    (R0,Z),BEGIN                                                     
         SEG   (R6),(R3)           Add text to caller's buffer                  
         END                                                                    
*                                                                               
         AR    R6,R3               Skip past data characters                    
         SR    R5,R3               Keep length accurate                         
         BNP   ICHKDONE            Nothing left, scram                          
*-                                                                              
*-       Treat Control-C in input data as idle attention if no read.            
*-         Note that Control-C as an idle attention also clears the             
*-         typeahead input queue.                                               
*-                                                                              
         IF    (R2,EQ,$CTRLC),BEGIN  CTRL-C...                                  
         IF    PIBFREAD,BEGIN      Skip CTRL-C here if doing read...            
         SEG   =AL1($CTRLC),1      Add CTRL-C to input data                     
         END                                                                    
*                                                                               
         ELSE  BEGIN               Do idle attn if no read...                   
         SEGCLR ,                  Zap previous input characters                
         LCALL IDLEATTN            Send idle attention to subsystem             
         END                                                                    
*                                                                               
         LA    R6,@R6+1            Skip past the CTRL-C                         
         DECR  R5                                                               
         END                                                                    
*-                                                                              
*-       Start of "IAC" telnet control sequence.                                
*-                                                                              
         ELSEIF (R2,EQ,X'FF'),BEGIN  IAC telnet control sequence...             
         IF    (R5,LT,2),ICHKDONE  Not enough for a sequence                    
         LC    R2,@R6+1            Opcode after IAC                             
         SH    R2,=AL2(239)        Valid opcodes are 240-255                    
         IF    NEG,'CLEAR R2'                                                   
*                                                                               
         LA    R6,@R6+2            Skip past IAC sequence                       
         SH    R5,=H'2'                                                         
*                                                                               
         SLL   R2,2                Times 4                                      
         L     RAR,IACTABLE(R2)                                                 
         BR    RAR                 Go do telnet control function                
         END                                                                    
         END                                                                    
*                                                                               
         B     ICHKDONE                                                         
         SPACE 2                                                                
*-                                                                              
*-       Bad IAC control sequence.                                              
*-                                                                              
IACERROR B     IACLOOP             Skip past bad IAC byte                       
         SPACE 2                                                                
*-                                                                              
*-       No operation.                                                          
*-                                                                              
IACNOP   B     IACLOOP                                                          
         SPACE 2                                                                
*-                                                                              
*-       Sub-negotiation                                                        
*-                                                                              
IACSUB   IF    (R5,LT,3),ICHKDONE  Incomplete sequence, scram                   
         ST    R6,IACSUBST         Save start address                           
         B     IACLOOP                                                          
*-                                                                              
*-       End of sub-negotiation                                                 
*-                                                                              
IACSBE   LT    R1,IACSUBST         Point to sequence start                      
         IF    (R1,NZ),BEGIN                                                    
         LC    R2,@R1              Get subnegotiation type                      
*                                                                               
         IF    (R2,EQ,$SENDLC),BEGIN                                            
         LA    R1,@R1+1                                                         
         LA    R2,0(,R6)                                                        
         DECR  R2                  Point to IAC SE                              
         DECR  R2                                                               
         SR    R2,R1               Get IP string length                         
         IF    (R2,GT,1),BEGIN     Should be > 1                                
         MVC   PIBTETYP,@R1        Copy over the SMF code                       
         DECR  R2                                                               
         INCR  R1                  Point to IP address part                     
         IF    (R2,GT),BEGIN                                                    
         MVC   PIBLOC,CVBLANKS    Pre-blank                                     
         LR    R15,R2                                                           
         CEIL  R15,L'PIBLOC                                                     
         LR    R2,R15              Save this                                    
         MOVE  R15,PIBLOC,@R1     Save location string                          
         LR    R0,R2               Get back truncated length                    
         LA    R1,PIBLOC                                                        
         VCALL TOEBCDIC            Translate location data                      
         LA    R1,PIBTETYP         Translate the SMF type code                  
         LA    R0,L'PIBTETYP                                                    
         VCALL TOEBCDIC            I know - it's just one char.                 
         LT    R15,PIBSCBP                                                      
         IF    (R15,NZ),BEGIN                                                   
         WITH  (SCB,R15),' MVC SCBTETYP,PIBTETYP'                               
         END                                                                    
         END                                                                    
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
         CLEAR IACSUBST                                                         
         B     IACLOOP                                                          
*-                                                                              
*-       Break/Interrupt process.                                               
*-                                                                              
IACBREAK IF    PIBFREAD,BEGIN      Doing read now...                            
         SEG   =AL1($CTRLC),1      Add CTRL-C to input data                     
         END                                                                    
*                                                                               
         ELSE  BEGIN               Do idle attn if no read...                   
         SEGCLR ,                  Zap typeahead queue                          
         LCALL IDLEATTN            Send idle attention to subsystem             
         END                                                                    
*                                                                               
         B     IACLOOP                                                          
         SPACE 2                                                                
*-                                                                              
*-       Remote is asking "Are you there?".                                     
*-                                                                              
IACAYT   LA    R1,IACPLINE                                                      
         MVC   @R1(14),=C'(We are here!)'                                       
         L     R2,CVASCTBL                                                      
         TR    @R1(14),@R2         Convert to ASCII                             
         SEG   (R1),14,.FEBUSG     Add it to output                             
         B     IACLOOP                                                          
         SPACE 2                                                                
*-                                                                              
*-       Erase character.                                                       
*-                                                                              
IACEC    SEG   X'08'               ASCII backspace character                    
         B     IACLOOP                                                          
         SPACE 2                                                                
*-                                                                              
*-       Erase line.                                                            
*-                                                                              
IACEL    SEG   X'18'               ASCII CTRL-X character                       
         B     IACLOOP                                                          
         SPACE 2                                                                
*-                                                                              
*-       Remote host is telling us that it will do something.                   
*-                                                                              
IACWILL  IF    (R5,NP),ICHKDONE    Incomplete sequence, scram                   
*                                                                               
         LC    R2,@R6                                                           
         IF    (R2,EQ,$SENDLC),BEGIN                                            
         SEG   =AL1($IAC,$DO,$SENDLC),3,.FEBUSG  Do it                          
         END                                                                    
         LA    R6,@R6+1            Skip past the IAC WILL opcode                
         DECR  R5                                                               
         B     IACLOOP                                                          
         SPACE 2                                                                
*-                                                                              
*-       Remote host is telling us that it won't do something.                  
*-                                                                              
IACWONT  IF    (R5,NP),ICHKDONE    Incomplete sequence, scram                   
*                                                                               
         LA    R6,@R6+1            Skip past the IAC WONT opcode                
         DECR  R5                                                               
         B     IACLOOP                                                          
         SPACE 2                                                                
*-                                                                              
*-       Remote host is demanding that we do something.                         
*-                                                                              
IACDO    IF    (R5,NP),ICHKDONE    Incomplete sequence, scram                   
         LC    R2,@R6              Do "opcode"                                  
*                                                                               
         IF    (R2,EQ,$BINARY),'SET PIBFTRAN'  We are in binary mode            
*                                                                               
         ELSEIF  (R2,EQ,$ECHO),''  We will accept DO ECHO request               
*                                                                               
         ELSE  BEGIN               Anything else...                             
         SEG   =AL1($IAC,$WONT),2,.FEBUSG  Won't                                
         SEG   @R6,1,.FEBUSG       Whatever                                     
         END                                                                    
*                                                                               
         LA    R6,@R6+1                                                         
         DECR  R5                                                               
         B     IACLOOP                                                          
         SPACE 2                                                                
*-                                                                              
*-       Remote host is demanding that we stop doing something.                 
*-                                                                              
IACDONT  IF    (R5,NP),ICHKDONE    Incomplete sequence, scram                   
         LA    R6,@R6+1                                                         
         DECR  R5                                                               
         B     IACLOOP                                                          
         SPACE 2                                                                
*-                                                                              
*-       Data byte of 255.                                                      
*-                                                                              
IAC255   LT    R0,IACSUBST         Don't seg if subnegotiation                  
         IF    (R0,Z),BEGIN                                                     
         SEG   X'FF'               Data byte of X'FF'                           
         END                                                                    
         B     IACLOOP                                                          
*                                                                               
ICHKDONE IF    (FEBUSGLENF,NZ),BEGIN  Force output out now...                   
         SEGWR ,,.FEBUSG                                                        
         END                                                                    
*                                                                               
         PEND                                                                   
*                                                                               
         SEGDEF DUMMY              (Safety)                                     
         EJECT                                                                  
*-                                                                              
*-       Telnet data control sequences                                          
*-                                                                              
IACTRT   DC    256X'00'            Non-zero for telnet control chars            
         ORG   IACTRT+$CTRLC                                                    
         DC    AL1($CTRLC)         Control-C                                    
         ORG   IACTRT+$CTRLC+128                                                
         DC    AL1($CTRLC)         Control-C (with parity on)                   
         ORG   IACTRT+X'FF'                                                     
         DC    X'FF'               IAC                                          
         ORG                                                                    
*                                                                               
*                                                                               
IACTABLE DC    A(IACERROR)                                                      
         DC    A(IACSBE)      240: End of subnegotiation parms                  
         DC    A(IACNOP)      241: No operation                                 
         DC    A(IACNOP)      242: Data mark                                    
         DC    A(IACBREAK)    243: Break                                        
         DC    A(IACBREAK)    244: Interrupt process                            
         DC    A(IACBREAK)    245: Abort output                                 
         DC    A(IACAYT)      246: Are you there                                
         DC    A(IACEC)       247: Erase character                              
         DC    A(IACEL)       248: Erase line                                   
         DC    A(IACNOP)      249: The "go ahead" signal                        
         DC    A(IACSUB)      250: Sub-option follows                           
         DC    A(IACWILL)     251: He will do the following option              
         DC    A(IACWONT)     252: He wont do the following option              
         DC    A(IACDO)       253: He wants us to do  " "    "  "               
         DC    A(IACDONT)     254: He wants us to stop doing "  "               
         DC    A(IAC255)      255: Data byte of 255                             
         EJECT                                                                  
*box                                                                            
*                                                                               
*  IACDEL -- Local routine to delete the number of characters                   
*    specified from the current position in the input buffer.                   
*                                                                               
*    On entry:                                                                  
*      R15 - number of bytes to remove from buffer                              
*      R6,R5 - current remaining buffer location, length                        
*                                                                               
*    On exit:                                                                   
*      R6,R5 - updated remaining buffer location, length                        
*                                                                               
IACDEL   PROC  (R7,LSR)                                                         
*                                                                               
         IF    (R15,LGE,R5),BEGIN  Deleting rest of buffer...                   
         AR    R6,R5               Kick buffer ptr                              
         CLEAR R5                  Nothing left in buffer                       
         END                                                                    
*                                                                               
         ELSE  BEGIN               Move buffer over...                          
         SR    R5,R15              Deduct chars to be deleted                   
*                                                                               
         LR    R14,R6              Dest ptr                                     
         LA    R0,@R6(R15)         Source ptr                                   
         LR    R15,R5              Len                                          
         LR    R1,R5               (ditto)                                      
         MVCL  R14,R0              Move text over to delete chars               
         END                                                                    
*                                                                               
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  READCHK -- Local routine to see if we can now complete the                   
*    terminal read in progress.                                                 
*                                                                               
*    If the read has completed then we will send the response data              
*    back to the subsystem and will reset read mode.                            
*                                                                               
RCHKWA   RECORD BEGIN                                                           
RCHKFLAG FLAG                                                                   
         FLAG  RCHKFTERM           - Must send what we have                     
         END                                                                    
*-                                                                              
READCHK  PROC  RCHKWA                                                           
         WITH  FEB,PIB             (Entry assumptions)                          
         CLEAR RCHKWA                                                           
*                                                                               
         FAIL  ^PIBFREAD,'Bad telnet READCHK call.'                             
*                                                                               
         SEGDEF FEBUSG                                                          
*                                                                               
         L     SCBR,PIBSCBP                                                     
         WITH  SCB                                                              
*                                                                               
         LT    R6,PIBINSGLOC       Input buffer ptr                             
         BZ    RCHKEND             Nothing, go check for eof                    
         L     R5,PIBINSGLENF      Input buffer length                          
*                                                                               
         COMMENT                   If transparent rundown                       
         COMMENT                   do no data processing                        
         IF    (SCBMODD.MODDTRAN,AND,SCBMODD.MODDRUND),BEGIN                    
         IF    (R5,GE,SCBINCT),BEGIN                                            
         COMMENT ASSUMPTION        IF MRK NOT ZERO, BOMB                        
         IF    (PIBINSGMRKF,NZ),' CLEAR R9'                                     
         LH    R15,SCBINCT                                                      
         ST    R15,PIBINSGMRKF                                                  
         LA    R2,$STOP            STOP READ, NO STOP CHAR NEEDED               
         B     RCHKSEND                                                         
         END                                                                    
         ELSE  BEGIN                                                            
         B     RCHKEND                                                          
         END                                                                    
         END                                                                    
*-                                                                              
*-       If the last data character processed was a CR then we                  
*-         we need to check if next character is a LF.  If it is                
*-         then the LF is ignored.                                              
*-                                                                              
         IF    (PIBFCR,AND,(R5,POS)),BEGIN  Check for LF...                     
         FAIL  (PIBINSGMRKF,NZ),'READCHK logic error'                           
         IF    ((@R6,EQ,X'0A'),OR,(@R6,EQ,X'8A')),BEGIN  LF...                  
         MOVEL @R6,@R6+1,(R5)      Delete the line-feed                         
         DECR  R5                  Reduce data length accordingly               
         ST    R5,PIBINSGLENF      Save new length                              
         END                                                                    
*                                                                               
         CLEAR PIBFCR                                                           
         END                                                                    
*-                                                                              
*-       The read has been halted, so we must send whatever we have.            
*-                                                                              
         IF    PIBFHALT,'SET RCHKFTERM'  Halting, send what we have             
*-                                                                              
*-       A TRANSPARENT read ends on either a terminating character              
*-         or when the read count is exhaused.                                  
*-                                                                              
         IF    SCBMODD.MODDTRAN,BEGIN  Stop when we get too much...             
         IF    (R5,GE,SCBINCT),BEGIN  Too much...                               
         LH    R5,SCBINCT          Don't take too much                          
         SET   RCHKFTERM           We have to send this                         
         END                                                                    
         END                                                                    
*                                                                               
         A     R6,PIBINSGMRKF      Skip past characters...                      
         S     R5,PIBINSGMRKF      ...already scanned                           
*-                                                                              
*-       Look for ending character.                                             
*-                                                                              
         LOOP  BEGIN               Look for ending character...                 
         LTR   R15,R5              Length of data remaining                     
         IF    NP,BEGIN            Nothing left...                              
         IF    RCHKFTERM,'LA R2,$STOP; B RCHKSEND'  Send it                     
         B     RCHKEND             Scram                                        
         END                                                                    
*                                                                               
         CEIL  R15,256                                                          
         LA    R1,@R6(R15)                                                      
         CLEAR R2                  Pre-clear; TRT sets low byte                 
         LA    R3,READTRT          Normal ending characters                     
         IF    SCBMODA.MODADRAT,'LA R3,READTRTD'  Ctrl-C is data                
         DEX   R15,'TRT @R6(0),@R3'   Look for ending character                 
         LR    R4,R1                                                            
         SR    R4,R6               Length to skip                               
         IF    POS,BEGIN           We have some data bytes...                   
         CLEAR PIBFCR              Data invalidates CR/LF check                 
*-                                                                              
*-       If necessary, we do the character echoing here.                        
*-         Normally we request that the remote host do the echoing,             
*-         but some hosts won't.                                                
*-                                                                              
*NEVER   IF    (PIBFNOECHO,AND,^SCBMODC.MODCNECH),BEGIN                         
*NEVER   SEG   (R6),(R4)           Echo the data ourselves                      
*NEVER   END                                                                    
         END                                                                    
*                                                                               
         L     R3,PIBINSGMRKF                                                   
         AR    R3,R4                                                            
         ST    R3,PIBINSGMRKF      New read position index                      
*                                                                               
         AR    R6,R4               Skip past data characters                    
         SR    R5,R4               Keep length accurate                         
         IF    NP,BEGIN            Nothing left...                              
         IF    RCHKFTERM,'LA R2,$STOP; B RCHKSEND'  Send it                     
         B     RCHKEND             Scram                                        
         END                                                                    
*-                                                                              
*-       The line can either end with "CRLF" or just "LF", we                   
*-         need to do a little special processing here to avoid                 
*-         treating "CRLF" as two line terminators.                             
*-                                                                              
         IF    (R2,EQ,$CR),BEGIN   Stopped on CR...                             
         IF    (R5,GT,1),BEGIN     Check for LF following CR...                 
         IF    ((@R6+1,EQ,X'0A'),OR,(@R6+1,EQ,X'8A')),'LA R2,$CRLF'             
         END                                                                    
*                                                                               
         ELSE  'SET PIBFCR'        Must check next byte for LF                  
         END                                                                    
*                                                                               
         ELSE  'CLEAR PIBFCR'      Reset CR found flag                          
*                                                                               
         IF    (R2,NZ),EXIT        We have a terminating character              
         END                                                                    
*-                                                                              
*-       If we are doing the echoing then we must also echo a                   
*-         CR/LF for ending characters.                                         
*-                                                                              
         IF    ^SCBMODD.MODDTRAN,BEGIN  Write ending chars...                   
         IF    (R2,EQ,$CTRLC),BEGIN  Ended with BREAK...                        
         IF    SCBMODB.MODBNNLA,EXIT  Skip if NOSTARS                           
         SEG   X'2A2A2A0D0A'       Famous "***<cr><lf>"                         
         END                                                                    
*                                                                               
         ELSE  BEGIN               Ended with CR...                             
         IF    PIBFNOECHO,BEGIN    We need to do the CR...                      
         SEG   =AL1($CR,$LF),2                                                  
         END                                                                    
         END                                                                    
         END                                                                    
*-                                                                              
*-       End the read on the ending character and send the                      
*-         data to the subsystem now.                                           
*-                                                                              
RCHKSEND L     R4,CVPDBP                                                        
         WITH  (PDB,R4),BEGIN                                                   
         CLEAR PDBHDR                                                           
         MVI   PDBCMD,FMILREAD     Read completion                              
         IF    (R2,EQ,$CTRLC),'SET PDBCPLA.CPLAATTN'  Attn                      
         IF    PIBFHALT,BEGIN      Ended with break...                          
         SET   PDBCPLA.CPLABRK     Set I/O completion status                    
         CLEAR PIBFHALT            Reset                                        
         END                                                                    
*                                                                               
         SETMSG L:PIBINSGLOC,L:PIBINSGMRKF  Input data                          
*                                                                               
         L     R15,PIBINSGMRKF     Number of characters we processed            
         IF    (R2,EQ,$CRLF),'LA R15,@R15+2'  Skip CR/LF chars                  
         ELSEIF (R2,NE,$STOP),'LA R15,@R15+1'  Skip ending char                 
*                                                                               
         IF    SCBMODD.MODDTRAN,BEGIN  Transparent...                           
         IF    SCBMODA.MODABUF,BEGIN  Return a full buffer...                   
         L     R15,PIBINSGLENF     Accept the full buffer                       
         CEIL  R15,SCBINCT         But not more than asked for                  
         END                                                                    
*                                                                               
         LR    R0,R15              Process any data characters                  
         END                                                                    
*                                                                               
         ST    R15,PIBINSGMRKF     Update length of processed buffer            
*                                                                               
         LA    R15,PDBTEXT         Put translated text here                     
         ACALL INPROC              Process input text                           
         LA    R15,L'PDBHDR                                                     
         AR    R15,R0              Total response PDB length                    
         STH   R15,PDBLENG                                                      
*-                                                                              
*-       Remove read text from input queue.                                     
*-                                                                              
         L     R15,PIBINSGMRKF     Number of characters we processed            
*                                                                               
         IF    (R15,GE,PIBINSGLENF),BEGIN  No more input left...                
         LT    R1,PIBINSGLOC                                                    
         FAIL  Z,'Telnet READCHK buffer problem.'                               
         VCALL FREECORE            Free input buffer                            
         CLEAR R3,PIBINSGLENF,PIBINSGMRKF,PIBINSGMAXF,PIBINSGLOC                
         END                                                                    
*                                                                               
         ELSE  BEGIN               Move residual read text up...                
         L     R6,PIBINSGLOC       Start of buffer                              
         LR    R2,R6                                                            
         AR    R2,R15              Data we want to keep starts here             
         L     R5,PIBINSGLENF      Data length                                  
         SR    R5,R15              Deduct data we are deleting                  
         MOVEL @R6,@R2,(R5)        Move data over (delete old text)             
         ST    R5,PIBINSGLENF      Save updated data length                     
         CLEAR PIBINSGMRKF         Reset read scan index                        
         END                                                                    
*-                                                                              
*-       If we have reduced our buffered data enough then tell                  
*-         Amelia to start sending again.                                       
*-                                                                              
         IF    PIBFINSTOP,BEGIN    We told Amelia to stop...                    
         IF    (PIBINSGLENF,GT,PIBINLO#),EXIT  Still too much, scram            
         CLEAR PIBFINSTOP          We are no longer stopped                     
*                                                                               
         SEGCLR FEBUSG                                                          
         SET   FEBFCTRL            Segging control info                         
         SEG   LA:=CL16'TCP_START:',16                                          
         SEG   PIBAID              Amelia connection ID                         
         SEGWR                                                                  
         CLEAR FEBFCTRL            Reset                                        
         END                                                                    
*                                                                               
         B     RCHKCOMP                                                         
         END                                                                    
*-                                                                              
*-       Check for halt (we only get here if there is                           
*-         no read data).                                                       
*-                                                                              
RCHKEND  IF    PIBFREAD*PIBFHALT,BEGIN  Read and halting...                     
         L     R4,CVPDBP                                                        
         WITH  (PDB,R4)                                                         
         MVC   PDBLENG,=AL2(L'PDBHDR)  Standard PDB length                      
         CLEAR PDBOPT                                                           
         MVC   PDBCMD,SCBCMD       Set operation code                           
         SET   PDBCPLA.CPLABRK     Read ended by break                          
*-                                                                              
*-       Send read response text to subsystem.                                  
*-                                                                              
RCHKCOMP CLEAR PIBFREAD            No read pending now                          
*                                                                               
         L     R4,CVPDBP           Response PDB already built                   
         WITH  (PDB,R4)                                                         
*                                                                               
         XTRACE FEBTRCP,TERMRCMP   Trace read completion                        
         WITH  (TTRC,R15),BEGIN                                                 
         MVC   TTRCPNAM,PIBNAME                                                 
         MVC   TTRCSID,SCBID                                                    
         MVC   TTRCSACC,SCBACCT                                                 
         MVC   TTRCCMD,SCBCMD                                                   
         MVC   TTRCTLEN,PDBLENG                                                 
         MVC   TTRCTEXT,PDBTEXT                                                 
         END                                                                    
*                                                                               
         XTRACE PIBTRCP                                                         
         WITH  (TTRCP,R15),BEGIN                                                
         MVI   TTRCPTYP,C'F'       F = FROMAMY                                  
         MVC   TTRCPCMD,PDBCMD                                                  
         MVC   TTRCPCPL,PDBCPL                                                  
         MVC   TTRCPLEN,PDBLENG                                                 
         END                                                                    
*                                                                               
         LA    R1,SCB                                                           
         LA    R15,PDB                                                          
         VCALL SUBSEND             Send completion                              
         END                                                                    
*-                                                                              
*-       Check for read still pending with no new data and end                  
*-         of file.                                                             
*-                                                                              
         IF    PIBFREAD*PIBFREOF,BEGIN  Read and eof pending...                 
         IF    (PIBINSGMRKF,LT,PIBINSGLENF),EXIT  Still more, scram             
*                                                                               
         LA    R1,SCB                                                           
         VCALL KILLSESS            Send in logoff request now                   
         END                                                                    
*-                                                                              
*-       Write out any characters we are echoing.                               
*-                                                                              
         IF    (FEBUSGLENF,NZ),BEGIN  Write out buffer...                       
         SEGWR                                                                  
         END                                                                    
*                                                                               
         PEND                                                                   
*                                                                               
         SEGDEF  DUMMY             (Safety)                                     
         SPACE 2                                                                
*-                                                                              
*-       Read ending character tables.                                          
*-                                                                              
READTRT  DC    256X'00'            Non-zero for ending chars                    
         ORG   READTRT+$CTRLC                                                   
         DC    AL1($CTRLC)         Control-C                                    
         ORG   READTRT+$CTRLC+128                                               
         DC    AL1($CTRLC)         Control-C (with parity on)                   
         ORG   READTRT+$LF                                                      
         DC    AL1($LF)            LF                                           
         ORG   READTRT+$LF+128                                                  
         DC    AL1($LF)            LF (with parity on)                          
         ORG   READTRT+$CR                                                      
         DC    AL1($CR)            CR                                           
         ORG   READTRT+$CR+128                                                  
         DC    AL1($CR)            CR (with parity on)                          
         ORG                                                                    
*                                                                               
READTRTD DC    256X'00'            Non-zero for ending chars                    
         ORG   READTRTD+$LF                                                     
         DC    AL1($LF)            LF                                           
         ORG   READTRTD+$LF+128                                                 
         DC    AL1($LF)            LF (with parity on)                          
         ORG   READTRTD+$CR                                                     
         DC    AL1($CR)            CR                                           
         ORG   READTRTD+$CR+128                                                 
         DC    AL1($CR)            CR (with parity on)                          
         ORG                                                                    
*                                                                               
         SEGDEF DUMMY              (Safety)                                     
         EJECT                                                                  
*box                                                                            
*                                                                               
*  IDLEATTN -- Local routine to send idle attention to subsytem.                
*                                                                               
IDLEATTN PROC                                                                   
         WITH  FEB,PIB             (Entry assumptions)                          
*                                                                               
         LT    SCBR,PIBSCBP        Get SCB ptr                                  
         IF    NZ,BEGIN            We have a session...                         
         WITH  SCB                                                              
         L     R3,CVPDBP                                                        
         WITH  (PDB,R3)                                                         
         CLEAR PDBHDR                                                           
         MVC   PDBLENG,=AL2(L'PDBHDR)                                           
         MVI   PDBCMD,FMILASYN     Asynchronous response                        
         SET   PDBCPLB.CPLBIA      Idle attention                               
*                                                                               
         XTRACE FEBTRCP,TERMCMP3   Trace completion                             
         WITH  (TTRC,R15),BEGIN                                                 
         MVC   TTRCPNAM,PIBNAME                                                 
         MVC   TTRCSID,SCBID                                                    
         MVC   TTRCSACC,SCBACCT                                                 
         MVC   TTRCCMD,PDBCMD                                                   
         MVC   TTRCCPL,PDBCPL                                                   
         MVC   TTRCTLEN,PDBLENG                                                 
         MVC   TTRCTEXT,PDBTEXT                                                 
         END                                                                    
*                                                                               
         XTRACE PIBTRCP                                                         
         WITH  (TTRCP,R15),BEGIN                                                
         MVI   TTRCPTYP,C'F'       F = FROMAMY                                  
         MVC   TTRCPCMD,PDBCMD                                                  
         MVC   TTRCPCPL,PDBCPL                                                  
         MVC   TTRCPLEN,PDBLENG                                                 
         END                                                                    
*                                                                               
         LA    R1,SCB                                                           
         LA    R15,PDB                                                          
         VCALL SUBSEND             Send PDB to subsystem                        
         END                                                                    
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ELFCMD -- Routine to process Telnet commands; the scanner                    
*    is all set up to scan the command.                                         
*                                                                               
*    On entry:                                                                  
*      R1 - FEB ptr                                                             
*      R15- SEGCB ptr                                                           
*                                                                               
ELFCMD   XPROC                                                                  
         LR    FEBR,R1                                                          
         WITH  FEB                                                              
         LR    R7,R15              Segcb ptr                                    
         WITH  (SEGCB,R7)                                                       
         SEGDEF (R7)                                                            
*                                                                               
         ACALL ELFFMT              !!! Temporary !!!                            
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ELFFMT -- Routine to do control block formatting.                            
*                                                                               
*    On entry:                                                                  
*      R1 - FEB ptr                                                             
*      R15- SEGCB ptr                                                           
*                                                                               
ELFFMT   XPROC                                                                  
         LR    FEBR,R1                                                          
         WITH  FEB                                                              
         LR    R7,R15              SEGCB ptr                                    
         WITH  (SEGCB,R7)                                                       
         SEGDEF (R7)                                                            
*                                                                               
         SEGHX (FEBR),8                                                         
         SEG   '  '                                                             
         SEGTB FEBNAME                                                          
         SEG   'front-end, '                                                    
         SEGDC LH:FEBPMAX                                                       
         SEGB  ' ports '                                                        
         IF    ^FEBFOPEN,'SEGB "** Not open **"'                                
         IF    (FEB,NE,'FEB'),'SEGB "** Invalid **"'                            
         SEGWR                                                                  
*                                                                               
         L     R5,FEBPATP          Start                                        
         LH    R6,FEBPMAX                                                       
         SLL   R6,2                                                             
         AR    R6,R5               End                                          
         WHILE (R5,LT,R6),BEGIN                                                 
         IF    ('LT PIBR,@R5',NZ),BEGIN                                         
         WITH  PIB                                                              
         SEGCOL 3                                                               
         SEGHX (PIBR),8                                                         
         SEG   ' Port '                                                         
         LR    R15,R5                                                           
         S     R15,FEBPATP                                                      
         SRL   R15,2                                                            
         SEGDC (R15)                                                            
         SEGB                                                                   
         SEGB  PIBNAME                                                          
*                                                                               
         IF    ('LT SCBR,PIBSCBP',NZ),BEGIN                                     
         WITH  SCB                                                              
         SEGB  'Session:'                                                       
         SEG   SCBGRP                                                           
         SEG   '.'                                                              
         SEG   SCBUSER                                                          
         IF    ('L2 R2,SCBANO',NZ),'SEG "#"; SEGDC (R2)'                        
         END                                                                    
         SEGWR                                                                  
*                                                                               
         SEG   CVBLANKS,10                                                      
         SEG   'Input buf='                                                     
         SEGHX L:PIBINSGLOC,8                                                   
         SEG   ', len='                                                         
         SEGDC L:PIBINSGLENF                                                    
         SEG   ', read mark='                                                   
         SEGDC L:PIBINSGMRKF                                                    
         SEG   ', max='                                                         
         SEGDC L:PIBINSGMAXF                                                    
         SEGWR                                                                  
*                                                                               
         IF    ('LT R2,PIBINSGLOC',NZ),BEGIN                                    
         SEG   CVBLANKS,10                                                      
         SEG   'Buffer contents='                                               
         SEGHX L:@R2,8                                                          
         SEG   ' '                                                              
         SEGHX L:@R2+4,8                                                        
         SEG   ' '                                                              
         SEGHX L:@R2+8,8                                                        
         SEGWR                                                                  
         END                                                                    
         END                                                                    
*                                                                               
         LA    R5,@R5+4                                                         
         END                                                                    
         SEGWR ' '                                                              
         SEGWR ' '                                                              
*-                                                                              
*-       Display trace table.                                                   
*-                                                                              
         SEGWR 'Trace:'                                                         
         MVC   SEGCBINDF,=F'25'                                                 
         LM    R4,R6,FEBTRCP+4     R4=next, R5=first, R6=end                    
         LOOP  BEGIN                                                            
         S     R4,FEBTRCP          Back up                                      
         IF    (R4,LT,R5),'LR R4,R6; S R4,FEBTRCP'  last                        
         WITH  (TTRC,R4)                                                        
         IF    (TTRCCLCK,Z),EXIT   All done                                     
         LM    R0,R1,TTRCCLCK                                                   
         PUSH  32,PTR=R15          L'hh:mm:ss.hh                                
         VCALL FMTTIME                                                          
         SEGB  (R1),(R0)                                                        
         POP   32                                                               
         SETMSG TTRCPNAM            Port name                                   
         IF    (TTRCPNAM,Z),'LA R1,CVBLANKS'  No port--use blanks               
         SEGB  (R1),(R0)                                                        
         SEGB  TTRCNAME            Trace name                                   
*                                                                               
         IF    (TTRCNAME,EQ,'TERM'),BEGIN                                       
         IF    (TTRCSACC,Z),'SEG "------"'                                      
         ELSE  BEGIN                                                            
         SEG   TTRCSACC+3,2                                                     
         SEG   '.'                                                              
         SEG   TTRCSACC,3                                                       
         END                                                                    
         SEG   ','                                                              
         SEGDC L:TTRCSID                                                        
         SEGB                                                                   
         IF    (TTRCCMD,EQ,TMILWRIT),'SEG "WRITE:"'                             
         ELSEIF (TTRCCMD,EQ,TMILREAD),'SEG "READ:"'                             
         ELSE  'SEG "CMD="; SEGHX IC:TTRCCMD,2'                                 
         SEGB                                                                   
         LH    R2,TTRCTLEN                                                      
         SH    R2,=AL2(L'PDBHDR)                                                
         IF    ^NEG,BEGIN                                                       
         SEG   'Length='                                                        
         SEGDC (R2)                                                             
         IF    (R2,POS),BEGIN                                                   
         SEG   ', Text='                                                        
         CEIL  R2,L'TTRCTEXT                                                    
         SEGT  TTRCTEXT,(R2)                                                    
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
         IF    (TTRCNAME,EQ,'IO'),BEGIN                                         
         SEG   'Length='                                                        
         SEGDC LH:TTRCILEN         Total packet length                          
         SEG   ', '                                                             
         SEG   TTRCIHDR            Header text                                  
         SEGWR                                                                  
         SEG   CVBLANKS,8                                                       
         SEGHX L4:TTRCIREM,8                                                    
         SEG   ' '                                                              
         SEGHX L4:TTRCIREM+4,8                                                  
         SEG   ' '                                                              
         SEGHX L4:TTRCIREM+8,8                                                  
         SEG   ' '                                                              
         SEGHX L4:TTRCIREM+12,8                                                 
         END                                                                    
*                                                                               
         IF    (TTRCNAME,EQ,'SETMSG'),BEGIN                                     
         SEG   '"'                                                              
         SEGT  TTRCMSG             Message text                                 
         END                                                                    
*                                                                               
         SEGWR                                                                  
*                                                                               
         UNTIL ('C R4,FEBTRCP+4',EQ)                                            
         END                                                                    
         CLEAR SEGCBINDF           Reset indentation                            
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ELFERR -- Routine to do error recovery.                                      
*                                                                               
*    On entry:                                                                  
*      R1 - FEB ptr                                                             
*                                                                               
*    On exit, R15 (and CC):                                                     
*      0 - attempt retry                                                        
*      4 - no retry, shutdown MILTEN                                            
*                                                                               
ELFERR   XPROC                                                                  
         LR    FEBR,R1                                                          
         WITH  FEB                                                              
*                                                                               
         CLEAR CVCUR                                                            
*                                                                               
         LA    R1,FEB                                                           
         ACALL ELFCLOSE            Release front-end                            
         CLEAR R15                 Retry rc                                     
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ELFDIE -- Routine to do final cleanup.  It is entered when                   
*    MILTEN is terminating.                                                     
*                                                                               
*    On entry:                                                                  
*      R0 - 0: normal, 4: error                                                 
*      R1 - FEB ptr                                                             
*                                                                               
ELFDIE   XPROC                                                                  
*-                                                                              
*-       Nothing to do, simply return.                                          
*-                                                                              
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SETELF -- SET ELF command.                                                   
*                                                                               
*    On entry:                                                                  
*       R1  - SCANCB ptr                                                        
*       R15 - SEGCB ptr                                                         
*                                                                               
*    On exit, R15 (and cc):                                                     
*       0 - command OK                                                          
*       4 - command error                                                       
*                                                                               
SETEWA   RECORD BEGIN                                                           
SETEFLAG FLAG                                                                   
         FLAG  SETEFCREATE         - CREATE new EIB                             
         FLAG  SETEFDELETE         - DELETE existing EIB                        
*                                                                               
SETEPTR  DS    A                   Old EIB ptr (if it exists)                   
*                                                                               
SETEEIB  DS    XL(L'EIB)           Working ELF information block                
SETESC   SEGCB ,                   Working SEGCB                                
         END                                                                    
*-                                                                              
SETELF   XPROC SETEWA                                                           
         CLEAR SETEWA                                                           
*                                                                               
         LR    R11,R15                                                          
         WITH  (SEGCB,R11)                                                      
         SEGDEF SEGCB                                                           
*                                                                               
         LR    R10,R1                                                           
         WITH  (SCANCB,R10)                                                     
*                                                                               
         LA    R7,SETEEIB          Our EIB                                      
         WITH  (EIB,R7)                                                         
*-                                                                              
*-       Scan ELF name.                                                         
*-                                                                              
         SCAN  ,SCANCB                                                          
         BNP   STEERR                                                           
         MVC   EIBNAME,CVBLANKS                                                 
         LR    R2,R0                                                            
         CEIL  R2,L'EIBNAME                                                     
         MOVE  R2,EIBNAME,@R1      Save ELF name                                
*                                                                               
         LA    R1,EIBNAME                                                       
         ACALL GETEIB              Lookup EIB ptr                               
         IF    NZ,BEGIN            Found it...                                  
         ST    R15,SETEPTR         Save old EIB ptr                             
         MVC   EIB,@R15            Use old EIB as template                      
         END                                                                    
*-                                                                              
*-       Scan ELF options.                                                      
*-                                                                              
         SCAN  STELFPRT,SCANCB                                                  
*-                                                                              
*-       Create a new ELF information block.                                    
*-                                                                              
         IF    SETEFCREATE,BEGIN   Create...                                    
         IF    (SETEPTR,NZ),BEGIN                                               
         SEGT  EIBNAME                                                          
         SEG   ' already exists.'                                               
         SEGWR                                                                  
         B     SETEERR                                                          
         END                                                                    
*                                                                               
         IF    (EIBADDR,Z),BEGIN   No IP address...                             
         SEG   'Missing IP=n.n.n.n for '                                        
         SEGT  EIBNAME                                                          
         B     SETEERR                                                          
         END                                                                    
*                                                                               
         IF    (EIBSIP,NZ),BEGIN   Subnet specified...                          
         IF    (EIBSMASK,NZ),EXIT  Mask also specified, good                    
         SEG   'SUBNET=n.n.n.n specifed without MASK=n.n.n.n'                   
         SEG   ' for '                                                          
         SEGT  EIBNAME                                                          
         B     SETEERR                                                          
         END                                                                    
*                                                                               
         MVC   EIBADDRF,CVBLANKS   EBCDIC formatted IP address                  
         SEGINIT EIBADDRF,,.SETESC                                              
         SEGDC LC:EIBADDR,,.SETESC                                              
         SEG   '.',,.SETESC                                                     
         SEGDC LC:EIBADDR+1,,.SETESC                                            
         SEG   '.',,.SETESC                                                     
         SEGDC LC:EIBADDR+2,,.SETESC                                            
         SEG   '.',,.SETESC                                                     
         SEGDC LC:EIBADDR+3,,.SETESC                                            
*                                                                               
         LA    R1,EIB                                                           
         ACALL CREEIB              Create a new EIB                             
         B     SETEOK                                                           
         END                                                                    
*-                                                                              
*-       Old EIB must already exist.                                            
*-                                                                              
         IF    (SETEPTR,Z),BEGIN   Doesn't exist...                             
         SEGT  EIBNAME                                                          
         SEG   ' does not exist.'                                               
         B     SETEERR                                                          
         END                                                                    
*-                                                                              
*-       Delete existing ELF information block.                                 
*-                                                                              
         IF    SETEFDELETE,BEGIN   Delete...                                    
         L     R15,SETEPTR                                                      
         ACALL DELEIB              Delete EIB                                   
         B     SETEOK                                                           
         END                                                                    
*-                                                                              
*-       Modify existing ELF information block.                                 
*-                                                                              
         L     R15,SETEPTR                                                      
         MVC   @R15+EIBINFO-EIB(L'EIBINFO),EIBINFO  Update EIB                  
*                                                                               
SETEERR  LA    R15,4               Error                                        
         B     SETEEXIT                                                         
*                                                                               
SETEOK   CLEAR R15                 A-ok                                         
         B     SETEEXIT                                                         
*-                                                                              
*-       SET ELF Options.                                                       
*-                                                                              
STELFPRT SCKW  CREATE,STECRE,A                                                  
         SCKW  DELETE,STEDEL,A                                                  
         SCKW  UP,STEUP                                                         
         SCKW  DOWN,STEDOWN,A                                                   
         SCKW  START,STESTART,A                                                 
         SCKW  STOP,STESTOP,A                                                   
         SCKW  IP,STEIP,(A,P)                                                   
         SCKW  PORT,STEPORT,(A,P,I)                                             
         SCKW  SUBNET,STESUBN,(A,P)                                             
         SCKW  NOSUBNET,CLRSUBN,A                                               
         SCKW  SUBMASK,STESUBM,(A,P)                                            
         SCKW  COUNT,STECOUNT,(A,P,I)                                           
         SCKW  BIAS,STEBIAS,(A,P,I)                                             
         SCKW  LIMIT,STELIMIT,(A,P,I)                                           
         SCKW  ,STEINV                                                          
*-                                                                              
STECRE   SET   SETEFCREATE                                                      
         BR    RAR                                                              
*                                                                               
STEDEL   SET   SETEFDELETE                                                      
         BR    RAR                                                              
*                                                                               
STEIP    LABEL                                                                  
         PUSH  (RAR,R15)                                                        
         ACALL CNVTIP              Convert IP address to binary                 
         ST    R15,EIBADDR         Save IP address                              
         POP   (RAR,R15)                                                        
         IF    (EIBADDR,Z),'SEGWR "Invalid IP address."; B STEERR'              
         BR    RAR                                                              
*                                                                               
STEPORT  MVC   EIBPORT,SCNVAL                                                   
         BR    RAR                                                              
*                                                                               
STESUBN  LABEL                                                                  
         PUSH  (RAR,R15)                                                        
         ACALL CNVTIP              Convert IP address to binary                 
         ST    R15,EIBSIP          Save IP address                              
         POP   (RAR,R15)                                                        
         IF    (EIBSIP,Z),'SEGWR "Invalid IP address."; B STEERR'               
         BR    RAR                                                              
*                                                                               
CLRSUBN  LABEL                                                                  
         CLEAR EIBSIP                                                           
         CLEAR EIBSMASK                                                         
         BR    RAR                                                              
*                                                                               
STESUBM  LABEL                                                                  
         PUSH  (RAR,R15)                                                        
         ACALL CNVTIP              Convert IP address to binary                 
         ST    R15,EIBSMASK        Save IP mask                                 
         POP   (RAR,R15)                                                        
         IF    (EIBSMASK,Z),'SEGWR "Invalid IP address."; B STEERR'             
         BR    RAR                                                              
*                                                                               
STEUP    CLEAR EIBFDOWN                                                         
         BR    RAR                                                              
*                                                                               
STEDOWN  SET   EIBFDOWN                                                         
         BR    RAR                                                              
*                                                                               
STESTART CLEAR EIBFSTOPPED                                                      
         BR    RAR                                                              
*                                                                               
STESTOP  SET   EIBFSTOPPED                                                      
         BR    RAR                                                              
*                                                                               
STECOUNT MVC   EIBCUR,SCNVAL                                                    
         IF    (EIBCUR,GT,EIBMAX),'MVC EIBMAX,EIBCUR'  New max                  
         BR    RAR                                                              
*                                                                               
STEBIAS  MVC   EIBBIAS,SCNVAL                                                   
         BR    RAR                                                              
*                                                                               
STELIMIT MVC   EIBLIMIT,SCNVAL                                                  
         BR    RAR                                                              
*                                                                               
STEINV   SEG   (R1),(R0)                                                        
         SEG   ': unrecognized SET ELF option.'                                 
         SEGWR                                                                  
STEERR   LA    R15,4                                                            
*                                                                               
SETEEXIT PEND                                                                   
*                                                                               
         SEGDEF DUMMY              (Neatness)                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SHOWELF -- SHOW ELF command.                                                 
*                                                                               
*    On entry:                                                                  
*       R1  - SCANCB ptr                                                        
*       R15 - SEGCB ptr                                                         
*                                                                               
*    On exit, R15 (and cc):                                                     
*       0 - command OK                                                          
*       4 - command error                                                       
*                                                                               
SHOWELF  XPROC                                                                  
         LR    R11,R15                                                          
         WITH  (SEGCB,R11)                                                      
         SEGDEF SEGCB                                                           
*                                                                               
         LR    R10,R1                                                           
         WITH  (SCANCB,R10)                                                     
*                                                                               
         SCAN  SHELFPRT,SCANCB                                                  
*                                                                               
         LA    R7,CVEIBQH-(EIBLINK-EIB)  Dummy queue head                       
         LOOP  BEGIN                                                            
         WITH  (EIB,R7)                                                         
         WHILE ('LT R7,EIBLINK',NZ)                                             
         SEG   '  '                                                             
         SEGTB EIBNAME             ELF name                                     
*                                                                               
         SETMSG EIBNAME                                                         
         VCALL RTRIM                                                            
         IF    (R0,LE,6),BEGIN     Add IP address if room...                    
         SEG   '('                                                              
         SEGT  EIBADDRF            IP address                                   
         SEG   ')'                                                              
         END                                                                    
*                                                                               
         SEGCOL 23                 Keep alignment                               
*                                                                               
         SEGDC L:EIBCUR,5                                                       
         SEG   ' users'                                                         
*                                                                               
         SEGDC L:EIBMAX,6                                                       
         SEG   ' max'                                                           
*                                                                               
         IF    (EIBSIP,NZ),BEGIN   Serving only this subnet...                  
         SEG   ' (Subnet='                                                      
         SEGDC LC:EIBSIP                                                        
         SEG   '.'                                                              
         IF    (EIBSMASK+1,EQ,X'00'),'SEG "x"'                                  
         ELSE  'SEGDC LC:EIBSIP+1'                                              
         SEG   '.'                                                              
         IF    (EIBSMASK+2,EQ,X'00'),'SEG "x"'                                  
         ELSE  'SEGDC LC:EIBSIP+2'                                              
         SEG   '.'                                                              
         IF    (EIBSMASK+3,EQ,X'00'),'SEG "x"'                                  
         ELSE  'SEGDC LC:EIBSIP+3'                                              
         SEG   ')'                                                              
         END                                                                    
*                                                                               
         IF    (EIBBIAS,NZ),BEGIN                                               
         SEG   ' (Bias='                                                        
         SEGDC L:EIBBIAS                                                        
         SEG   ')'                                                              
         END                                                                    
*                                                                               
         IF    (EIBLIMIT,NZ),BEGIN                                              
         SEG   ' (Limit='                                                       
         SEGDC L:EIBLIMIT                                                       
         SEG   ')'                                                              
         END                                                                    
*                                                                               
         IF    EIBFDOWN,'SEG " (Down)"'                                         
         IF    EIBFSTOPPED,'SEG " (Stopped)"'                                   
         SEGWR                                                                  
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
         B     SHOEEXIT                                                         
*-                                                                              
*-       SHOW ELF Options.                                                      
*-                                                                              
SHELFPRT SCKW  BEST,SHEBEST,(A,P,PI)                                            
         SCKW  ,SHEINV                                                          
*                                                                               
SHEBEST  SEG   'Testing BESTEIB...'                                             
         L     R5,SCNVAL           Loop count                                   
         WHILE (R5,POS),BEGIN      Try it "n" times...                          
         L     R1,SHEBRIP                                                       
         ACALL BESTEIB             Get best ELF                                 
         LR    R4,R15                                                           
         IF    (R15,Z),'SEG "No ELF available."'                                
         ELSE  BEGIN                                                            
         WITH  (EIB,R4)                                                         
         SEGHX (R4),8                                                           
         SEG   ' '                                                              
         SEGT  EIBNAME                                                          
         SEG   ' -- '                                                           
         SEGT  EIBADDRF                                                         
         END                                                                    
*                                                                               
         SEGWR                                                                  
*                                                                               
         DECR  R5                                                               
         END                                                                    
         SEGWR 'Done.'                                                          
         CLEAR R15                                                              
         B     SHOEEXIT                                                         
SHEBRIP  DC    0F'0',AL1(36,95,0,195)  Sample remote IP addr                    
*                                                                               
SHEINV   SEG   (R1),(R0)                                                        
         SEG   ': unrecognized SHOW ELF option.'                                
         SEGWR                                                                  
SHEERR   LA    R15,4                                                            
*                                                                               
SHOEEXIT PEND                                                                   
*                                                                               
         SEGDEF DUMMY              (Neatness)                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  GETEIB -- Routine to get the ELF information block (EIB)                     
*    address, given the ELF name.                                               
*                                                                               
*    On entry:                                                                  
*      R1 - ELF name (must be L'EIBNAME long)                                   
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - not found                                                            
*      nz- EIB ptr                                                              
*                                                                               
GETEIB   PROC                                                                   
         LR    R6,R1               Save ELF name                                
*                                                                               
         LA    R15,CVEIBQH-(EIBLINK-EIB)  Dummy first link                      
         LOOP  BEGIN                                                            
         WITH  (EIB,R15)                                                        
         WHILE ('LT R15,EIBLINK',NZ)                                            
         IF    (EIBNAME,EQ,@R6),EXIT  We found it                               
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  COUNTEIB -- Routine to adjust the count of logged on users on                
*    the ELF with the IP address specified.                                     
*                                                                               
*    On entry:                                                                  
*      R0 - signed amount to adjust count by (usually 1 or -1)                  
*      R1 - IP address of ELF                                                   
*                                                                               
COUNTEIB PROC                                                                   
         LR    R6,R1               Save ELF IP address                          
         LR    R5,R0               Save adjustment value                        
*-                                                                              
*-       Find an ELF information block (EIB) for this ELF.                      
*-                                                                              
         LA    R4,CVEIBQH-(EIBLINK-EIB)  Dummy first link                       
         LOOP  BEGIN                                                            
         WITH  (EIB,R4)                                                         
         WHILE ('LT R4,EIBLINK',NZ)                                             
         IF    (R6,EQ,EIBADDR),EXIT  We found it                                
         END                                                                    
*-                                                                              
*-       Update user count if we found an EIB.                                  
*-                                                                              
         IF    (R4,NZ),BEGIN       We found a matching EIB...                   
         WITH  (EIB,R4)                                                         
         A     R5,EIBCUR           Make signed adjustment to count              
         IF    (R5,NEG),'CLEAR R5'  Be reasonable                               
         ST    R5,EIBCUR           Save it                                      
         IF    (R5,GT,EIBMAX),'ST R5,EIBMAX'  New max                           
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  BESTEIB -- Routine to find the best ELF to use.  This routine                
*    is passed the IP address of the requestor, to allow for ELFs               
*    which only want to provide service for certain IP addresses.               
*                                                                               
*    On entry:                                                                  
*      R1 - my IP address                                                       
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - no ELFs available                                                    
*      nz- EIB ptr                                                              
*                                                                               
FEIBWA   RECORD BEGIN                                                           
FEIBRIP  DS    F                   Requestor's IP address                       
*                                                                               
FEIBGCNT DS    F                   Lowest count so far for general              
FEIBGPTR DS    F                   General EIB with lowest count                
*                                                                               
FEIBSCNT DS    F                   Lowest count so far for subnet               
FEIBSPTR DS    F                   Subnet EIB with lowest count                 
         END                                                                    
*-                                                                              
BESTEIB  PROC  FEIBWA                                                           
         CLEAR FEIBWA                                                           
         ST    R1,FEIBRIP          Save requestee's IP address                  
         MVC   FEIBGCNT,=F'9999999'  Initialize with large number               
         MVC   FEIBSCNT,=F'9999999'  Initialize with large number               
*                                                                               
         IF    (CVEIBQC,Z),'MVC CVEIBQC,CVEIBQT'  Set last assigned             
*                                                                               
         LT    R5,CVEIBQC          Get last assigned EIB                        
         BZ    FEIBDONE            No ELFs, scram                               
*-                                                                              
*-       Loop through list of available ELFs and find the one                   
*-         with the fewest users on it.                                         
*-                                                                              
         LOOP  BEGIN                                                            
         WITH  (EIB,R5)                                                         
         LT    R5,EIBLINK          Get next EIB                                 
         IF    Z,'L R5,CVEIBQH'    Wrap around                                  
*                                                                               
         IF    (EIBFDOWN,OR,EIBFSTOPPED),FEIBNEXT  Not this one                 
*-                                                                              
*-       ELF for only a specific subnet.                                        
*-                                                                              
         IF    (EIBSIP,NZ),BEGIN   ELF for only a specific subnet...            
         L     R2,FEIBRIP          Our remote IP address                        
         N     R2,EIBSMASK         Mask out unwanted bits                       
         IF    (R2,NE,EIBSIP),FEIBNEXT  Can't use this one                      
         L     R15,EIBCUR          Current number of users                      
         A     R15,EIBBIAS         Plus "bias"                                  
         IF    ((EIBLIMIT,NZ),AND,(R15,LGT,EIBLIMIT)),FEIBNEXT                  
         IF    (R15,LLT,FEIBSCNT),BEGIN  Found a better ELF...                  
         ST    R15,FEIBSCNT        Save lowest user count                       
         ST    R5,FEIBSPTR         Save best ELF for this subnet ptr            
         END                                                                    
         END                                                                    
*-                                                                              
*-       General purpose ELF.                                                   
*-                                                                              
         ELSE  BEGIN               General purpose ELF...                       
         L     R15,EIBCUR          Current number of users                      
         A     R15,EIBBIAS         Plus "bias"                                  
         IF    ((EIBLIMIT,NZ),AND,(R15,LGT,EIBLIMIT)),FEIBNEXT                  
         IF    (R15,LLT,FEIBGCNT),BEGIN  Found a better ELF...                  
         ST    R15,FEIBGCNT        Save lowest user count                       
         ST    R5,FEIBGPTR         Save best ELF for this subnet ptr            
         END                                                                    
         END                                                                    
*                                                                               
FEIBNEXT IF    (R5,EQ,CVEIBQC),EXIT  We've looked at all of them now            
         END                                                                    
*                                                                               
FEIBDONE LT    R15,FEIBSPTR        Best ELF for this subnet ptr                 
         IF    Z,BEGIN             No subnet match...                           
         L     R15,FEIBGPTR        Get best general ELF ptr                     
         IF    (R15,NZ),'ST R15,CVEIBQC'  Save last used EIB ptr                
         END                                                                    
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  CREEIB -- Routine to make a new EIB and add it to the queue.                 
*    The caller should have already checked to make sure that an                
*    EIB with the same name doesn't already exist.                              
*                                                                               
*    On entry:                                                                  
*      R1 - EIB to be created                                                   
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok                                                                   
*                                                                               
CREEIB   PROC                                                                   
         LR    R6,R1               Save EIB ptr                                 
         WITH  (EIB,R6)                                                         
*                                                                               
         LA    R0,L'EIB                                                         
         LA    R1,EIBSUBP                                                       
         LR    R2,RAR                                                           
         VCALL NGETCORE            Get new EIB                                  
         MVC   @R1(L'EIB),EIB      Copy in EIB                                  
         LR    R6,R1               Use new copy                                 
         MVC   EIBID,=C'EIB '      Set ID                                       
         CLEAR EIBLINK                                                          
*                                                                               
         LT    R5,CVEIBQT          Get last EIB                                 
         IF    Z,BEGIN             Nothing on the queue...                      
         ST    R6,CVEIBQH                                                       
         ST    R6,CVEIBQT                                                       
         END                                                                    
*                                                                               
         ELSE  BEGIN               Add us to the end of the queue...            
         ST    R6,EIBLINK-EIB(,R5)  Link us to old tail                         
         ST    R6,CVEIBQT          We are the new tail                          
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  DELEIB -- Routine to remove an existing EIB from the queue                   
*    and then free it.                                                          
*                                                                               
*    On entry:                                                                  
*      R15 - EIB to be deleted                                                  
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok                                                                   
*      4 - not found                                                            
*                                                                               
DELEIB   PROC                                                                   
         LR    R6,R15              Save EIB ptr                                 
*-                                                                              
*-       Find the matching EIB.                                                 
*-                                                                              
         CLEAR R4                  Previous EIB                                 
         LA    R5,CVEIBQH-(EIBLINK-EIB)  Dummy first link                       
         LOOP  BEGIN                                                            
         WITH  (EIB,R5)                                                         
         WHILE ('LT R5,EIBLINK',NZ)                                             
         IF    (R5,EQ,R6),EXIT                                                  
*                                                                               
         LR    R4,R5               Save previous EIB ptr                        
         END                                                                    
*-                                                                              
*-       Remove the EIB from the queue.                                         
*-                                                                              
         LA    R15,4               Preset bad rc                                
*                                                                               
         IF    (R5,NZ),BEGIN       We found it...                               
         IF    (R5,EQ,CVEIBQC),'CLEAR CVEIBQC'  No current                      
*                                                                               
         WITH  (EIB,R5)                                                         
         IF    (R4,Z),BEGIN        No entries before us...                      
         MVC   CVEIBQH,EIBLINK     Move in the new queue head                   
         IF    (CVEIBQH,Z),'CLEAR CVEIBQT'  Nothing in the queue                
         END                                                                    
*                                                                               
         ELSE  BEGIN               We are not the first entry...                
         MVC   EIBLINK-EIB(4,R4),EIBLINK  Dequeue us                            
         IF    (R5,EQ,CVEIBQT),'ST R4,CVEIBQT'  Save new queue tail             
         END                                                                    
*-                                                                              
*-       Now free the EIB.                                                      
*-                                                                              
         MVC   EIBID,=C'XEIB'                                                   
         LA    R1,EIB                                                           
         VCALL FREECORE            Free EIB                                     
         CLEAR R15                 A-ok                                         
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  CNVTIP - Routine to convert a printable IP address to binary.                
*                                                                               
*        On entry:  R0,R1 = length and pointer to IP address                    
*                                                                               
*        On exit:   CC=Z   Not valid IP address                                 
*                   CC=NZ  IP address returned in R15                           
*                                                                               
CNVTIP   PROC                                                                   
         IF    (@R1,EQ,'['),BEGIN  Check for [addr]                             
         LR    R15,R1                                                           
         AR    R15,R0                                                           
         DECR  R15                                                              
         IF    (@R15,EQ,']'),BEGIN                                              
         INCR  R1                                                               
         DECR  R0                                                               
         DECR  R0                                                               
         END                                                                    
         END                                                                    
*                                                                               
         LR    R2,R1               Copy parm address                            
         LR    R3,R0               Copy parm length                             
         AR    R3,R1               Get parm end address                         
         CLEAR R4                  Clear loop counter                           
         CLEAR R5                  Init result register                         
         WHILE (R2,LT,R3),BEGIN                                                 
         LR    R1,R2               Copy parm pointer                            
         WHILE ((R2,LT,R3),AND,(@R2,NE,'.')),'INCR R2' Find delimiter           
         LR    R0,R2               Compute                                      
         SR    R0,R1                 subparm length                             
         IF    Z,'CLEAR R15; EXIT CNVTIP'                                       
         DTB   (R1),(R0)           Convert                                      
         IF    (M,OR,(R15,GT,255)),'CLEAR R15; EXIT CNVTIP'                     
         SLL   R5,8                Shift address over                           
         OR    R5,R15              Move next byte into result                   
         INCR  R2                  Step pointer past delimiter                  
         INCR  R4                  Incr loop counter                            
         END                                                                    
         IF    ((R2,LT,R3),OR,(R4,NE,4)),BEGIN  If invalid parm,                
         CLEAR R5                             Return null result                
         END                                                                    
         LR    R15,R5                 Copy result                               
         PEND                                                                   
         EJECT                                                                  
INWA     RECORD BEGIN                                                           
INPOS    DS    H                   Cursor position                              
         DS    H                   Reserved                                     
*                                                                               
INPTRS   DS    2A                  Read text len, loc                           
*                                                                               
INSG     SEGCB                                                                  
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  INPROC -- Routine to process read text.                                      
*                                                                               
*    On entry:                                                                  
*      R1,R0 - text loc, len (in ASCII)                                         
*      R15   - work buffer ptr                                                  
*                                                                               
*     On exit:                                                                  
*      R1,R0 - new text loc, len (in EBCDIC)                                    
*                                                                               
INPROC   PROC  INWA                                                             
         WITH  SCB,(PDB,R7)        (Entry assumptions)                          
         L     PIBR,SCBPIBP                                                     
         WITH  PIB                                                              
*                                                                               
         CLEAR INWA                                                             
         STM   R0,R1,INPTRS        Save ptrs                                    
         MVC   INPOS,SCBOPOS       Start at last output pos                     
         SEGINIT (R15),4000,INSG                                                
*-                                                                              
*-       Handle transparent input (no translations needed).                     
*-                                                                              
         IF    SCBMODD.MODDTRAN,BEGIN                                           
         LM    R0,R1,INPTRS                                                     
         SEG   (R1),(R0)           Just what came in                            
         EXIT  INPROC                                                           
         END                                                                    
*-                                                                              
*-       First translate input from ASCII to EBCDIC.                            
*-                                                                              
         LM    R5,R6,INPTRS                                                     
         L     R4,CVEB7TBL         Translate 7-bit ASCII to EBCDIC              
*                                                                               
         WHILE (R5,POS),BEGIN                                                   
         LR    R15,R5                                                           
         CEIL  R15,256                                                          
         DEX   R15,'TR @R6(0),@R4'                                              
         LA    R6,@R15+1(R6)                                                    
         SR    R5,R15                                                           
         DECR  R5                                                               
         END                                                                    
*                                                                               
         SEGCOL 250+1              Fudge area for backspaces                    
*                                                                               
         LM    R5,R6,INPTRS                                                     
INLOOP   WHILE (R5,POS),BEGIN                                                   
         LR    R15,R5                                                           
         CEIL  R15,256                                                          
         LA    R1,@R6(R15)                                                      
         CLEAR R2                                                               
         DEX   R15,'TRT @R6(0),INTBL'                                           
         SR    R1,R6               Length processed                             
         LR    R0,R1                                                            
         AH    R1,INPOS                                                         
         STH   R1,INPOS            Kick cursor position                         
         LR    R1,R6               Start of text                                
         AR    R6,R0               Update...                                    
         SR    R5,R0               ...ptrs                                      
         SEG   (R1),(R0)           Seg text up to special char                  
*                                                                               
         IF    (R2,NZ),BEGIN       Process special character...                 
         SETMSG (R6),1              Special character                           
         LA    R6,@R6+1            Skip past...                                 
         DECR  R5                  ...the special character                     
         LT    RAR,INVECT(R2)                                                   
         IF    NZ,'BALR RAR,RAR'   Go process it                                
         END                                                                    
         END                                                                    
*                                                                               
         SETMSG L:INSGLOC,L:INSGLENF                                            
         SH    R0,=H'250'                                                       
         IF    POS,BEGIN                                                        
         MOVEL (R1),@R1+250,(R0),REG2=R2  Delete fudge area                     
         END                                                                    
         FLOOR R0,0                                                             
         B     INPREXIT                                                         
         SPACE 2                                                                
*-                                                                              
*-       TRT table for special input characters.                                
*-                                                                              
IN       TBL   (X'00',X'01',X'02',X'03'),INCTRL              (Ctrl)             
         TBL   X'05',INHT                                    HT                 
         TBL   X'07',INDEL                                   DEL                
         TBL   (X'0B',X'0C',X'0D',X'0E',X'0F'),INCTRL        (Ctrl)             
         TBL   (X'10',X'11',X'12',X'13'),INCTRL              (Ctrl)             
         TBL   X'16',INBS                                    BS                 
         TBL   X'18',INCAN                                   Ctrl-X             
         TBL   (X'19',X'1C',X'1D',X'1E',X'1F'),INCTRL        (Ctrl)             
         TBL   (X'25',X'26',X'27',X'2D',X'2E',X'2F'),INCTRL  (Ctrl)             
         TBL   (X'32',X'37',X'3C'),INCTRL                    (Ctrl)             
         TBL   X'3D',INCAN                                   Ctrl-U             
         TBL   X'3F',INCTRL                                  (Ctrl)             
         TBL                                                                    
         SPACE 2                                                                
INCTRL   SEG   (R1),(R0)                                                        
         B     INLOOP                                                           
*                                                                               
INBS     IF    ^SCBFBACK,BEGIN     Regular mode...                              
         IF    (INSGLENF,NZ),'DECR R15,INSGLENF'                                
         IF    (INPOS,NZ),'DECR R15,INPOS'                                      
         END                                                                    
         ELSE  BEGIN               Enter backspace as data...                   
         SEG   (R1),(R0)                                                        
         IF    (INPOS,NZ),'DECR R15,INPOS'                                      
         END                                                                    
         B     INLOOP                                                           
*                                                                               
INDEL    IF    (INSGLENF,NZ),'DECR R15,INSGLENF'                                
         IF    (INPOS,NZ),'DECR R15,INPOS'                                      
         B     INLOOP                                                           
*                                                                               
INCAN    SEGCLR ,                  Reset all input                              
         SEGCOL 250+1              Fudge area for backspaces                    
         CLEAR INPOS               Reset position too                           
         B     INLOOP                                                           
*                                                                               
INHT     LA    R4,SCBTABS                                                       
         CLEAR R3                                                               
         WHILE (R3,LT,16),BEGIN                                                 
         LC    R0,SCBTABS(R3)                                                   
         IF    (R0,Z),EXIT                                                      
         DECR  R0                  Rel to zero, not one                         
         IF    (R0,GT,INPOS),BEGIN                                              
         LH    R15,INPOS                                                        
         STH   R0,INPOS                                                         
         SR    R0,R15                                                           
         SEG   CVBLANKS,(R0)                                                    
         B     INLOOP                                                           
         END                                                                    
         LA    R4,@R4+1                                                         
         LA    R3,@R3+1                                                         
         END                                                                    
         SET   PDBCPLA.CPLAUST     Unset tabs                                   
         SEG   X'05'               Add tab char                                 
         B     INLOOP                                                           
*                                                                               
*                                                                               
INPREXIT PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  OUTPROC -- Routine to process write text.                                    
*                                                                               
*    On entry:                                                                  
*      R1,R0 - input text loc, len (in EBCDIC)                                  
*      R15 - SEGCB ptr                                                          
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok                                                                   
*                                                                               
OUTPROC  PROC                                                                   
         WITH  SCB                  (Entry assumption)                          
         L     PIBR,SCBPIBP                                                     
         WITH  PIB                                                              
         L     FEBR,PIBFEBP                                                     
         WITH  FEB                                                              
*                                                                               
         LR    R7,R1               Text loc                                     
         LR    R6,R0               ... and length                               
         LR    R5,R15              SEGCB ptr                                    
         SEGDEF (R5)                                                            
*-                                                                              
*-       Process special characters in output data.                             
*-                                                                              
         IF    ^SCBMODD.MODDTRAN,'SET FEBFASC'  Convert to ASCII                
*                                                                               
OUTLOOP  WHILE (R6,POS),BEGIN                                                   
         LR    R15,R6                                                           
         CEIL  R15,256                                                          
         LA    R1,@R7(R15)                                                      
         CLEAR R2                                                               
         DEX   R15,'TRT @R7(0),OUTTBL'                                          
         LR    R0,R1                                                            
         SR    R0,R7               Len processed                                
         LR    R1,R7               Start of text                                
         AR    R7,R0               Update                                       
         SR    R6,R0               ... ptrs                                     
         SEG   (R1),(R0)           Seg text up to special char                  
*                                                                               
         IF    (R2,NZ),BEGIN       Process special character...                 
         SETMSG (R7),1              Special character                           
         LA    R7,@R7+1            Skip past...                                 
         DECR  R6                  ...the special character                     
         LT    RAR,OUTVECT(R2)                                                  
         IF    NZ,'BASR RAR,RAR'   Go process it                                
         END                                                                    
         END                                                                    
*                                                                               
         IF    (SCBCMD,EQ,TMILREAD),BEGIN  Terminal read...                     
         IF    SCBMODD.MODDTRAN,EXIT  Don't if TRANSPARENT                      
         IF    SCBFXON,'SEG X"11"'  Xon                                         
         END                                                                    
*                                                                               
         B     OUTPEXIT                                                         
         SPACE 2                                                                
*-                                                                              
*-       TRT table for special output characters.                               
*-                                                                              
OUT      TBL   X'15',OUTNL         NL                                           
         TBL   X'FF',OUTIAC        Telnet "IAC" conflict                        
         TBL                                                                    
         SPACE 2                                                                
OUTNL    IF    ^SCBMODD.MODDTRAN,'SETMSG X"0D25"'  CR,LF                        
         SEG   (R1),(R0)                                                        
         B     OUTLOOP                                                          
*                                                                               
OUTIAC   IF    PIBFIAC,'SETMSG X"FFFF"'  Send "IAC FF" for FF                   
         SEG   (R1),(R0)                                                        
         B     OUTLOOP                                                          
*                                                                               
*                                                                               
OUTPEXIT CLEAR FEBFASC             Reset                                        
         PEND                                                                   
*                                                                               
         SEGDEF DUMMY              (Safety)                                     
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*   AMYSEG -- Seg processing routine to handle writing                          
*     data across the Suzan path.                                               
*                                                                               
*     On entry:                                                                 
*       R15 - SEGCB ptr                                                         
*                                                                               
PSGWA    RECORD BEGIN                                                           
PSGDATAA DS    A                   SCOM parm: address                           
PSGDATAL DS    F                   SCOM parm: length                            
         END                                                                    
*-                                                                              
AMYSEG   PROC  PSGWA                                                            
         CLEAR PSGWA                                                            
*                                                                               
         WITH  FEB                 (Entry assumption)                           
         FAIL  (FEB,NE,'FEB'),'Bad FEB ptr.'                                    
*                                                                               
         LR    R5,R15                                                           
         WITH  (SEGCB,R5)                                                       
*-                                                                              
*-       SEG                                                                    
*-                                                                              
         IF    SEGCBSEG,BEGIN      Adding text to buffer...                     
*-                                                                              
*-       If it's not control data then add the TCP_WRITE prefix.                
*-                                                                              
         IF    ((SEGCBLENF,Z),AND,^FEBFCTRL),BEGIN  Add prefix...               
         WITH  PIB                 (Entry assumption)                           
         FAIL  (PIB,NE,'PIB'),'Bad PIB ptr.'                                    
*                                                                               
         L     R2,SEGCBLOC         Start of buffer                              
         MVC   @R2(16),=CL16'TCP_WRITE:'  Add TCP_WRITE                         
         MVC   @R2+16(4),PIBAID    And Amelia connection ID                     
         MVC   SEGCBLENF,=F'20'    Set buffer length                            
         END                                                                    
*-                                                                              
*-       If it's EBCDIC data then translate it to ASCII.                        
*-                                                                              
         IF    FEBFASC,BEGIN       Translate to ASCII...                        
         FAIL  (R0,LGT,CVBUFLEN),'TCP/TELNET data error.'                       
         LR    R2,R0               Save text length                             
         MOVEL L:CVWKBUFP,@R1,(R2)  Copy text                                   
         LR    R0,R2               Restore R0 as length                         
*                                                                               
         L     R4,CVASCTBL         EBCDIC to ASCII translate table              
         L     R3,CVWKBUFP         Start of buffer...                           
         WHILE (R2,GT,256),BEGIN   Translate 256 bytes at a time...             
         TR    @R3(256),@R4                                                     
         LA    R3,@R3+256                                                       
         SH    R2,=H'256'                                                       
         END                                                                    
         TDEX  R2,'TR @R3(0),@R4'     Translate remaining text                  
*                                                                               
         SETMSG L:CVWKBUFP,(R0)                                                 
         END                                                                    
         END                                                                    
*-                                                                              
*-       SEGWR/SEGCR (or overflow).                                             
*-                                                                              
         ELSEIF (SEGCBWR,OR,SEGCBCR,OR,SEGCBOVF),BEGIN  SEGWR...                
         LTR   R2,R0               Current buffer length                        
         IF    NP,EXIT             Nothing to write, scram                      
*                                                                               
         ST    R1,PSGDATAA         Seg data ptrs                                
         ST    R0,PSGDATAL                                                      
         SET   PSGDATAA.X'80'      Send end of parms bit                        
*                                                                               
         LA    R3,FEBUPATH         Amelia path                                  
         WITH  (UPATH,R3),BEGIN                                                 
         FAIL  (UPATH,NE,'PATH'),'Bad ELF UPATH ptr.'                           
*                                                                               
         IF    (FEBAMYQH,NZ),BEGIN  We already have a buffer Q...               
         ACALL AMYSENDQ            Send pending messages                        
         IF    (FEBAMYQH,Z),EXIT   Everything was sent, fine                    
         B     ASGQ                Put new message at end of queue              
         END                                                                    
*                                                                               
         XTRACE FEBTRCP,IOWRITE                                                 
         WITH  (TTRC,R15),BEGIN                                                 
         MVC   TTRCILEN,PSGDATAL+2  Data length                                 
         L2    R2,TTRCILEN                                                      
         CEIL  R2,L'TTRCITOT                                                    
         L     R1,PSGDATAA                                                      
         MOVE  R2,TTRCITOT,@R1     Save first part of data                      
         END                                                                    
*-                                                                              
*-       Send message to Amelia.                                                
*-                                                                              
         SCOM  SEND,PSGDATAA,L:UPATMGC  Send message data                       
*-                                                                              
*-       If Amelia's buffer queue is full (rare), then we will                  
*-         buffer the message ourselves until the full queue                    
*-         empties.                                                             
*-                                                                              
         IF    (R15,EQ,UPATRBAF),BEGIN  Buffer full...                          
ASGQ     INCR  R0,FEBAMY#F         Count full queue condition                   
*                                                                               
         L     R0,PSGDATAL         Message data                                 
         AH    R0,=AL2(L'AMYQHDR)  Room for AMYQ entry header                   
         LA    R1,AMYQSUBP                                                      
         LR    R2,RAR                                                           
         VCALL NGETCORE            Get a buffer                                 
         LR    R2,R1                                                            
         WITH  (AMYQ,R2)                                                        
         MVC   AMYQ(4),=C'AMYQ'    Set control block id                         
         CLEAR AMYQLINK            No forward link                              
         MVC   AMYQDLEN,PSGDATAL   Save data length                             
         MOVEL AMYQDATA,L:PSGDATAA,L:PSGDATAL  Copy transaction data            
*                                                                               
         LT    R15,FEBAMYQT        Get last entry                               
         IF    Z,BEGIN             Nothing on the queue...                      
         ST    R2,FEBAMYQH         We are the queue head                        
         ST    R2,FEBAMYQT         ... and the queue tail                       
         END                                                                    
*                                                                               
         ELSE  BEGIN               Add us to the end of the queue...            
         ST    R2,AMYQLINK-AMYQ(,R15)  Link our entry to the end                
         ST    R2,FEBAMYQT         We are the new queue tail                    
         END                                                                    
*                                                                               
         CLEAR R15                 It's a "normal" return code now              
         END                                                                    
*-                                                                              
*-       Suzan path error (e.g., path closed).                                  
*-                                                                              
         IF    (R15,NZ),BEGIN      Suzan path error...                          
         INCR  R0,FEBAMY#E         Count Suzan path errors                      
*                                                                               
         VCALL PATHRC              Get return code string                       
*                                                                               
         IF    (FEBRCP,Z),BEGIN    Only set it the first time...                
         STM   R0,R1,FEBRCP        Save return code string ptrs                 
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
         INCR  R15,FEBNIO          Total front-end I/O count                    
         LCR   R0,R2               For overflow: nbytes processed               
         END                                                                    
*-                                                                              
*-       Post processing (set return code only).                                
*-                                                                              
         ELSEIF SEGCBSPP,BEGIN     Post processing...                           
         CLEAR R0                  Assume A-ok                                  
         IF    (FEBRCP,NZ),'LA R0,4'  Trouble                                   
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  AMYSENDQ -- Local routine to send the queue of pending messages              
*    to Amelia.                                                                 
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - nothing left on the pending queue                                    
*      4 - data still remains                                                   
*                                                                               
ASQWA    RECORD BEGIN                                                           
ASQDATAA DS    A                   SCOM parm: address                           
ASQDATAL DS    F                   SCOM parm: length                            
         END                                                                    
*-                                                                              
AMYSENDQ PROC  ASQWA                                                            
         WITH  FEB                 (Entry assumption)                           
*                                                                               
         LA    R6,FEBUPATH         Amelia path                                  
         WITH  (UPATH,R6)                                                       
         FAIL  (UPATH,NE,'PATH'),'Bad ELF UPATH ptr.'                           
*-                                                                              
*-       Send all messages on our buffer queue.                                 
*-                                                                              
         WHILE ('LT R5,FEBAMYQH',NZ),BEGIN  First entry on our Q...             
         WITH  (AMYQ,R5)                                                        
         FAIL  (AMYQID,NE,'AMYQ'),'Bad AMYQ ptr.'                               
*                                                                               
         LA    R1,AMYQDATA         Start of data                                
         ST    R1,ASQDATAA         Save it                                      
         SET   ASQDATAA.X'80'      Send end of parms bit                        
         MVC   ASQDATAL,AMYQDLEN   Save data length                             
*                                                                               
         XTRACE FEBTRCP,IORETRY                                                 
         WITH  (TTRC,R15),BEGIN                                                 
         MVC   TTRCILEN,ASQDATAL+2 Data length                                  
         L2    R2,TTRCILEN                                                      
         CEIL  R2,L'TTRCITOT                                                    
         L     R1,ASQDATAA                                                      
         MOVE  R2,TTRCITOT,@R1     Save data                                    
         END                                                                    
*-                                                                              
*-       Send message to Amelia.                                                
*-                                                                              
         SCOM  SEND,ASQDATAA,L:UPATMGC  Send message data                       
         IF    (R15,EQ,UPATRBAF),EXIT  Scram                                    
         IF    (R15,NZ),BEGIN      Suzan path error...                          
         INCR  R0,FEBAMY#E         Count Suzan path errors                      
         END                                                                    
*                                                                               
         MVC   FEBAMYQH,AMYQLINK   Remove us from the queue                     
         IF    (FEBAMYQH,Z),'CLEAR FEBAMYQT'  Nothing on the queue              
*                                                                               
         MVC   AMYQID,=C'OLDQ'     Change ID                                    
         LA    R1,AMYQ                                                          
         VCALL FREECORE            Release entry                                
         END                                                                    
*-                                                                              
*-       If there is nothing on our buffer, then reset the full                 
*-         queue empty bit and return RC=0.                                     
*-                                                                              
         LA    R15,4               Assume data still on queue                   
*                                                                               
         IF    (FEBAMYQH,Z),BEGIN  Nothing on queue...                          
         CLEAR UPATSFLG.UPATFFQE,MODE=LOCKED,REF=UPATH  Clear flag              
         CLEAR R15                 A-ok return code                             
         END                                                                    
*                                                                               
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         END   .                                                                
