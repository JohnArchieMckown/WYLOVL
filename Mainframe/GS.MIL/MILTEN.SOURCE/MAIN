MAIN     TITLE 'MILTEN'                                                         
*******************************************************************             
*                                                                 *             
*     MILTEN/370 - Release VI - Class I - Stanford Proprietary    *             
*                                                                 *             
*******************************************************************             
         HIBAL                                                                  
**                                                                              
**  MILTEN/IV.  MILTEN has been re-written in this version.  Most               
**    things (sessions, subsystem blocks, etc.) are now dynamically             
**    built.  The dispatcher is based on queues.  A major change is             
**    that all command processing is now done by the subsystem.                 
**    MILTEN provides the necessary information by responding to                
**    "control" requests from the subsystem.  The ALCB is provided              
**    for compatability only, and is not used by MILTEN.                        
**                                                                              
**                                                  9/79, Jim Nisbet            
**                                                                              
**                                                                              
**  MILTEN/V.  This is the MVS/SP version of MILTEN.  Some things               
**    have been cleaned up since MILTEN/IV.  The teleprocessing I/O             
**    now uses the STARTIO interface instead of EXCP.  MILTEN's                 
**    "failsoft" recovery has been extended, dumps now use sysout               
**    spinoff to produce the dump when the error occurs.                        
**    In addition, MVS failure recovery routines (FRRs) allow                   
**    failsoft recovery to now work for IOS exit routines                       
**    (appendages).                                                             
**                                                                              
**                                                  4/82, Jim Nisbet            
**                                                                              
**                                                                              
**  MILTEN/VI.  This is the MVS-XA version of MILTEN.  Not all that             
**    much needed to be changed to allow MILTEN to run under MVS-XA.            
**    This version will either run under MVS-370 or MVS-XA.                     
**                                                                              
**                                                  4/83, Jim Nisbet            
**                                                                              
**  Removed support for all MILTEN front end modules except the ELF.            
**                                                                              
**                                                  10/97, Mike Durket          
**                                                                              
         SPACE 2                                                                
         GBLA  &LINESZ,&BUFRSZ     (see SYSDEFN macro)                          
*                                                                               
         SYSDEFN                                                                
         SPACE 2                                                                
MILMAIN  CSECT                                                                  
START    DS    CL4                 (for CVSTART--see CV expansion)              
*                                                                               
MAIN     IDENT 2047                10:16:23 02/16/02  (SLP)                     
*                                                                               
         REGS  ,,FSR,,,,,,BR,SCBR,PIBR,(FEBR,LSR),CVR,SPR,RAR                   
*                                                                               
         PUSH  DSECTS                                                           
         IHAPSA                                                                 
*                                                                               
         IHAFRRS                                                                
*                                                                               
         CVT   DSECT=YES                                                        
*                                                                               
USERCVT  RECORD 'USERCVT'                                                       
*                                                                               
         IEESMCA                                                                
*                                                                               
TIOT     DSECT                                                                  
         IEFTIOT1                                                               
*                                                                               
         IHASDWA                                                                
*                                                                               
         IHAASCB                                                                
*                                                                               
         IKJTCB                                                                 
*                                                                               
         IHASRB                                                                 
*                                                                               
         IECDIOCM                                                               
*                                                                               
         IECDIOSB                                                               
IOSBSIZE EQU   IOSEND-IOSB                                                      
*                                                                               
         DCBD  DSORG=PS                                                         
DCB      EQU   IHADCB,4,C'F'                                                    
*                                                                               
         COPY  PINFO                                                            
*                                                                               
KWR      RECORD 'KWR'              (Needed for priv bit defn's only)            
*                                                                               
SCANCB   RECORD 'SCANCB'                                                        
*                                                                               
SEGCB    RECORD 'SEGCB'                                                         
*                                                                               
         POP   DSECTS                                                           
         EJECT                                                                  
         COPY  DEVTRC                                                           
         EJECT                                                                  
         COPY  TQE                                                              
         EJECT                                                                  
UPATH    RECORD BEGIN                                                           
UPAT     MILPATH                                                                
         END                                                                    
         EJECT                                                                  
         COPY  SUB                                                              
         EJECT                                                                  
FEB      RECORD BEGIN                                                           
         COPY  FEB                                                              
         END                                                                    
         EJECT                                                                  
PIB      RECORD BEGIN                                                           
         COPY  PIB                                                              
         END                                                                    
         EJECT                                                                  
         COPY  XLE                                                              
         EJECT                                                                  
SCB      RECORD BEGIN                                                           
         COPY  SCB                                                              
         END                                                                    
*                                                                               
         COPY  STRC                                                             
         EJECT                                                                  
SIN      RECORD BEGIN                                                           
         COPY  SIN                                                              
         END                                                                    
         EJECT                                                                  
         COPY  SUBPOOLS                                                         
         TITLE 'Control Blocks'                                                 
         ORG   START                                                            
*                                                                               
         ENTRY CV                                                               
         COPY  CV                                                               
         TITLE 'Initialization'                                                 
         ENTRY MILTEN              OS entry point                               
MILTEN   BASE                                                                   
         L     CVR,=V(CV)          Set global ptr                               
         MVC   CVPARMP,@R1         Addr of parm                                 
         ST    R14,CVOSRA          OS return address                            
*                                                                               
         L     R6,CVTPTR                                                        
         WITH  (CVT,R6),BEGIN                                                   
         IF    CVTDCB.X'80','SET CVFXA'  MVS/XA mode                            
*                                                                               
         L     R2,CVTTCBP                                                       
         L     R15,@R2+4           Our TCB ptr                                  
         ST    R15,CVTCBP          Save ptr                                     
         WITH  (TCB,R15),BEGIN                                                  
         MVC   CVKEY,TCBPKF        Save our protect key                         
         L     R1,TCBTIO           TIOT ptr                                     
         END                                                                    
         MVC   CVMJOBNM,@R1        Jobname                                      
         L     R15,@R2+12          Our ASCB ptr                                 
         ST    R15,CVASCBP                                                      
         WITH  (ASCB,R15),'MVC CVASCBID,ASCBASID'  save asid                    
         END                                                                    
*                                                                               
         PRIVCHK ,                 System privs required                        
*-                                                                              
*-   The I/O pages MILTEN gets must be fixed and never swapped.  The            
*-    following "SYSEVENT TRANSWAP" causes a single swap-out/swap-in            
*-    now and then all current and future pages will not be swapped.            
*-       Thanks to Barry Benight for figuring this out.                         
*-                                                                              
         CLEAR R1                  Zero means no ECB on SYSEVENT                
         SYSEVENT TRANSWAP         Ensure non-swappable fixed pages             
*                                                                               
         MODESET MODE=SUP          ********                                     
         LA    R15,@R13+7                                                       
         N     R15,=A(-8)          Doubleword alignment needed                  
         STIDP @R15                Get CPU serial number                        
         SET   CVFALP              Assume primary CPU                           
         IF    (@R15+2,EQ,X'02290580'),'SET CVFRLG'  their CPU                  
         MODESET MODE=PROB         ********                                     
*                                                                               
         IF    (CVMJOBNM,NE,'MILTEN'),'SET CVFTEST'                             
*                                                                               
         LT    R1,=V(MILVERS)                                                   
         IF    NZ,'MVC CVMVERS,@R1'  version text                               
*                                                                               
         GETMAIN R,LV=32768        Stack page                                   
         ST    R1,CVSTKP                                                        
         STKINIT (R1),32768        Set up stack                                 
*                                                                               
         VCALL AMODE31             Can switch to 31 bit mode now                
*                                                                               
         L     R0,=A(CVBUFLEN)                                                  
         GETMAIN R,LV=(0)                                                       
         ST    R1,CVPDBP           PDB work area                                
*                                                                               
         L     R0,=A(CVBUFLEN)                                                  
         GETMAIN R,LV=(0)                                                       
         ST    R1,CVWKBUFP         General work buffer                          
*                                                                               
         VCALL COREINIT            Init memory management routines              
*                                                                               
         LA    R15,CVFEBQH-(FEBLINK-FEB)                                        
         ST    R15,CVFEBQT         Dummy queue tail                             
*                                                                               
         LA    R15,CVSUBQH-(SUBLINK-SUB)                                        
         ST    R15,CVSUBQT         Dummy queue tail                             
*-                                                                              
*-       Set up the WTO task.                                                   
*-                                                                              
         L     R1,=V(WTO)          Entry point (in CONS)                        
         IDENTIFY EP=WTO,ENTRY=(1)                                              
         ATTACH EP=WTO,DPMOD=+2,ETXR=WTOFAIL,SHSPV=WTOQSUBP                     
         ST    R1,CVWTOTCB                                                      
*                                                                               
         SEGDEF CVWSG              Wto seg routines                             
         MVC   CVWSGRTN,=V(WTOSEG)  Processing routine                          
*                                                                               
         B     MILINIT                                                          
*                                                                               
         QLTORG                                                                 
*                                                                               
         DROP  BR                                                               
         EJECT                                                                  
MILINIT  BASE                                                                   
*                                                                               
         L     R15,CVPARMP         OS parm ptr                                  
         SCINIT @R15+2,LH:@R15,CVSCNCB                                          
         SCAN  PARMPRT,CVSCNCB                                                  
         IF    NZ,'SEGWR "Parm error"'                                          
*                                                                               
         MVC   CVMNAME,=CL8'TESTMIL'                                            
         IF    ^CVFTEST,'MVC CVMNAME,=CL8"MILTEN"'                              
         MODESET MODE=SUP          In good hands, trust me                      
*-                                                                              
*-       Set up dump formatter.                                                 
*-                                                                              
         VCALL MUDINIT                                                          
*                                                                               
*-                                                                              
*-       Open and then process SYSIN file.                                      
*-                                                                              
*-         (This code processes PORTS, TABLE and SYSIN ddnames.)                
*-                                                                              
NTPOPEN  OPEN  (SYSINDCB,(INPUT))                                               
         IF    SYSINDCB+(DCBOFLGS-DCB).DCBOFOPN,BEGIN  Process...               
         LA    R4,SYSINDCB         SYSIN DCB ptr                                
         CLEAR R2,R3               Preset (not in a buffer yet)                 
         STM   R2,R4,INPTRS        Save buffer ptrs                             
*                                                                               
INLOOP   WHILE ('ACALL GETSIN',Z),BEGIN  Get next line from SYSIN               
         SCINIT (R1),(R0),CVSCNCB  Set up for scanner                           
         SCAN  INITPRT,CVSCNCB     Scan it                                      
         BNZ   INITSERR                                                         
         END                                                                    
         END                                                                    
*-                                                                              
*-       Go back and process TABLE DDNAME (the same as SYSIN).                  
*-                                                                              
         IF    (SYSDDNAM,EQ,=CL8'PORTS'),BEGIN                                  
         MVC   SYSDDNAM,=CL8'TABLE'                                             
         B     NTPOPEN                                                          
         END                                                                    
*-                                                                              
*-       Go back and process SYSIN DDNAME (the same as SYSIN).                  
*-                                                                              
         IF    (SYSDDNAM,EQ,=CL8'TABLE'),BEGIN                                  
         MVC   SYSDDNAM,=CL8'SYSIN'                                             
         B     NTPOPEN                                                          
         END                                                                    
         EJECT                                                                  
*-                                                                              
*-       Initialize session address table.                                      
*-                                                                              
         LH    R3,CVMAXSES         Max no. of sessions                          
         SLL   R3,2                Times 4                                      
         GETMAIN R,LV=(R3)                                                      
         ST    R1,CVSATP                                                        
         LR    R2,R1               For MVCL...                                  
         CLEAR R1                                                               
         MVCL  R2,R0               Init SAT to zeros                            
*                                                                               
         ACALL SINTALLO            Init sess info table in CSA too              
*-                                                                              
*-       Establish subsystem interface.                                         
*-                                                                              
         VCALL SUBFIN                                                           
*-                                                                              
*-       Initialize command processor.                                          
*-                                                                              
         VCALL MCOMINIT            Initialize command processor                 
*-                                                                              
*-       Make sure we have a console FEB.                                       
*-                                                                              
         LA    FEBR,CVFEBQH-(FEBLINK-FEB)  dummy first entry                    
         WITH  FEB,BEGIN                                                        
         WHILE ('LT FEBR,FEBLINK',NZ),BEGIN                                     
         IF    (FEBTYPE,EQ,FEBTCONS),GOTCONS                                    
         END                                                                    
         END                                                                    
         SCINIT 0,0,CVSCNCB                                                     
         IF    ('LT RAR,=V(CONSDEF)',NZ),BEGIN                                  
         BALR  RAR,RAR                                                          
         IF    NZ,EXIT                                                          
         LR    FEBR,R1                                                          
         WITH  FEB                                                              
         LTH   R3,FEBPMAX          Max no of ports                              
         IF    Z,'LH R3,CVMAXSES; STH R3,FEBPMAX'  Global max                   
         SLL   R3,2                Times 4                                      
         LR    R0,R3                                                            
         LA    R1,PATSUBP                                                       
         LA    R2,*+4                                                           
         VCALL NGETCORE                                                         
         ST    R1,FEBPATP          Save pat ptr                                 
         LR    R2,R1               For mvcl...                                  
         CLEAR R1                                                               
         MVCL  R2,R0               Init pat to zeros                            
*                                                                               
         L     R15,CVFEBQT                                                      
         WITH  (FEB,R15),'ST FEBR,FEBLINK; ST FEBR,CVFEBQT'  link up            
         END                                                                    
*-                                                                              
*-       Add a virtual FEB to the queue.                                        
*-                                                                              
GOTCONS  VCALL VIRTDEF             Get a virtual FEB                            
         IF    Z,BEGIN             Add to FEB queue...                          
         L     R15,CVFEBQT                                                      
         WITH  (FEB,R15),'ST R1,FEBLINK; ST R1,CVFEBQT'  link up                
         END                                                                    
*-                                                                              
*-       Open FEBs.                                                             
*-                                                                              
         LA    FEBR,CVFEBQH-(FEBLINK-FEB)  dummy first entry                    
         WITH  FEB,BEGIN                                                        
         WHILE ('LT FEBR,FEBLINK',NZ),BEGIN                                     
*                                                                               
         LA    R1,FEB                                                           
         LC    RAR,FEBTYPE         Device type                                  
         IF    (RAR,GT,FEBTMAX),'CLEAR RAR'                                     
         SLL   RAR,2                                                            
         LT    RAR,FINFE(RAR)      Appropriate routine                          
         IF    (RAR,NZ),'BALR RAR,RAR'  open FEB                                
         END                                                                    
         END                                                                    
*                                                                               
         ACALL FININIT             Do final initialization chores               
*                                                                               
         SEGWR 'Ready'                                                          
*                                                                               
         IF    (CVRCLOC,Z),BEGIN                                                
         SEGWR 'No reserve memory -- larger region needed'                      
         END                                                                    
*                                                                               
         MVI   CVECB,X'40'         Work to do                                   
         ACALL DISPATCH            Go to dispatcher                             
         DC    H'0'                (no return)                                  
*                                                                               
INPTRS   DS    3A                  Sysin buffer ptrs                            
         EJECT                                                                  
*box                                                                            
*                                                                               
*   parm options                                                                
*                                                                               
PARMPRT  SCKW  TEST,PTEST,A                                                     
         SCKW  PROD,PPROD,A                                                     
         SCKW  SYSA,PALPHA                                                      
         SCKW  SYSB,PRLG                                                        
         SCKW  SYSC,PALPHA                                                      
         SCKW  ALPHA,PALPHA,A                                                   
         SCKW  RLG,PRLG,A                                                       
         SCKW  RETRY,PRETRY,A                                                   
         SCKW  NORETRY,PNORETRY,A                                               
         SCKW  STAE,PSTAE,A                                                     
         SCKW  NOSTAE,PNOSTAE,A                                                 
         SCKW  DUMP,PDUMP,A                                                     
         SCKW  NODUMP,PNODUMP,A                                                 
         SCKW  ,BADP                                                            
*-                                                                              
PTEST    SET   CVFTEST                                                          
         BR    RAR                                                              
*                                                                               
PPROD    CLEAR CVFTEST                                                          
         BR    RAR                                                              
*                                                                               
PALPHA   SET   CVFALP                                                           
         BR    RAR                                                              
*                                                                               
PRLG     SET   CVFRLG                                                           
         BR    RAR                                                              
*                                                                               
PRETRY   CLEAR CVFNORET                                                         
         BR    RAR                                                              
*                                                                               
PNORETRY SET   CVFNORET                                                         
         BR    RAR                                                              
*                                                                               
PSTAE    CLEAR CVFNSTAE                                                         
         BR    RAR                                                              
*                                                                               
PNOSTAE  SET   CVFNSTAE                                                         
         BR    RAR                                                              
*                                                                               
PDUMP    SET   CVFDUMP                                                          
         BR    RAR                                                              
*                                                                               
PNODUMP  CLEAR CVFDUMP                                                          
         BR    RAR                                                              
*                                                                               
BADP     LR    R2,RAR                                                           
         LR    R3,R15                                                           
         SEG   (R1),(R0)                                                        
         SEGWR ': Invalid parm'                                                 
         LR    R15,R3                                                           
         BR    R2                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*        SYSIN options.                                                         
*                                                                               
INITPRT  SCKW  TABLE,ITABLE,(A,P)                                               
         SCKW  IN,ITEXT                                                         
         SCKW  OUT,ITEXT                                                        
         SCKW  DEFINE,IDEFINE,A                                                 
         SCKW  PORT,IPORT,A                                                     
         SCKW  COMMAND,ICMD,A                                                   
         SCKW  CMD,ICMD,A                                                       
         SCKW  ,INITBAD                                                         
         SPACE 2                                                                
*box                                                                            
*                                                                               
*        Execute a MILTEN command.                                              
*                                                                               
ICMD     LABEL                                                                  
         SCTELL CVSCNCB            Get remainder of line                        
         LA    R1,@R1+1                                                         
         DECR  R0                                                               
*                                                                               
         LA    R15,CVWSG           Display responses as WTOs                    
         LA    R2,1                Priv'd user                                  
         VCALL COMMAND             Execute this command                         
         B     INLOOP                                                           
*box                                                                            
*                                                                               
*        TABLE                                                                  
*                                                                               
ITABLE   BZ    INITMISS                                                         
         CLEAR XLSTART,XLTYPE                                                   
         LA    R5,CVXLTBL                                                       
         LA    R6,CVXLTBE                                                       
         CLEAR R4                                                               
         WHILE (R5,LT,R6),BEGIN                                                 
         IF    (CVSCNKW,EQ,@R5),BEGIN                                           
         SEG   (R1),(R0)                                                        
         SETMSG ': already defined.'                                            
         B     INITERR                                                          
         END                                                                    
         IF    ((R4,Z),AND,('C R4,@R5+8',EQ)),'LR R4,R5'                        
         LA    R5,@R5+12                                                        
         END                                                                    
         IF    (R4,Z),BEGIN                                                     
         SEG   (R1),(R0)                                                        
         SETMSG ': no room.'                                                    
         B     INITERR                                                          
         END                                                                    
         MVC   @R4(8),CVSCNKW                                                   
         LA    R0,L'XLE                                                         
         LA    R1,ITBLSUBP                                                      
*  No ID is specified because the                                               
*  subpool number is so specific.                                               
         VCALL NGETCORE                                                         
         ST    R1,@R4+8                                                         
         ST    R1,XLSTART                                                       
         LR    R0,R1                                                            
         LA    R1,L'XLE                                                         
         CLEAR R15                                                              
         MVCL  R0,R14              Zero xle                                     
*                                                                               
         B     INLOOP                                                           
         EJECT                                                                  
*box                                                                            
*                                                                               
*        IN/OUT (TABLE sub-options).                                            
*                                                                               
ITEXT    IF    (XLSTART,Z),'SETMSG "No preceding table."; B INITERR'            
         L     R6,XLCUR                                                         
         IF    (XLTYPE,NE,CVSCNKW),BEGIN                                        
         MVC   XLTYPE,CVSCNKW                                                   
         L     R6,XLSTART                                                       
         IF    (XLTYPE,EQ,'O'),'LA R6,@R6+512'                                  
         LA    R15,@R6+256                                                      
         ST    R15,XLEND                                                        
         END                                                                    
         SCAN  ,CVSCNCB                                                         
         BZ    INITMISS                                                         
         LR    R5,R1                                                            
         LR    R4,R0                                                            
         N     R0,=F'1'                                                         
         IF    NZ,'SETMSG "Not even no of digits."; B INITERR'                  
         WHILE (R4,POS),BEGIN                                                   
         IF    (R6,GE,XLEND),BEGIN                                              
         SEG   (R5),(R4)                                                        
         SETMSG ': too long (>256).'                                            
         B     INITERR                                                          
         END                                                                    
         XTB   (R5),2                                                           
         IF    Z,'STC R15,@R6'                                                  
         ELSE  BEGIN                                                            
         IF    (@R5,EQ,'..'),BEGIN  No-change char...                           
         LR    R15,R6                                                           
         S     R15,XLSTART         Offset                                       
         IF    (XLTYPE,EQ,'O'),'SH R15,=H"512"'                                 
         STC   R15,@R6                                                          
         B     ITXN                                                             
         END                                                                    
         IF    (@R5,EQ,'##'),BEGIN  Invalid char...                             
         MVI   @R6,C'#'                                                         
         IF    (XLTYPE,EQ,'I'),'MVI @R6+256,XLEFINV'  Invalid char              
         B     ITXN                                                             
         END                                                                    
         IF    (@R5,EQ,'**'),BEGIN  Ignore char...                              
         MVI   @R6,0               (Neatness)                                   
         MVI   @R6+256,XLEFIGN                                                  
         B     ITXN                                                             
         END                                                                    
         SEG   (R5),2                                                           
         SEGWR ': invalid hex digits.'                                          
         END                                                                    
ITXN     LA    R6,@R6+1                                                         
         ST    R6,XLCUR                                                         
         LA    R5,@R5+2                                                         
         SH    R4,=H'2'                                                         
         END                                                                    
         B     INLOOP                                                           
*                                                                               
XLSTART  DC    A(0)                                                             
XLCUR    DC    A(0)                                                             
XLEND    DC    A(0)                                                             
XLTYPE   DC    C'*'                                                             
         EJECT                                                                  
*box                                                                            
*                                                                               
*        DEFINE options.                                                        
*                                                                               
IDEFINE  CLEAR IFEBP                                                            
         SCAN  FEPRT,CVSCNCB                                                    
         B     INITMISS                                                         
*                                                                               
FEPRT    SCKW  CONSOLE,IDEFCONS,A                                               
*         SCKW  ASYNC,IDEFASYN,A                                                
*         SCKW  PDP,IDEFPDP                                                     
*         SCKW  VTAM,IDEFVTAM,A                                                 
*         SCKW  NSC,IDEFNSC                                                     
         SCKW  ELF,IDEFELF                                                      
*         SCKW  ALF,IDEFALF                                                     
*         SCKW  ECU,IDEFECU                                                     
         SCKW  ,IDEFERR                                                         
*-                                                                              
IDEFCONS L     RAR,=V(CONSDEF)                                                  
         MVC   IPORTRTN,=V(CONSPORT)                                            
         B     IDEF                                                             
*                                                                               
*IDEFASYN L     RAR,=V(ASYNDEF)                                                 
*         MVC   IPORTRTN,=V(ASYNPORT)                                           
*         B     IDEF                                                            
*                                                                               
*IDEFPDP  L     RAR,=V(PDPDEF)                                                  
*         MVC   IPORTRTN,=V(PDPPORT)                                            
*         B     IDEF                                                            
*                                                                               
*IDEFVTAM L     RAR,=V(VTAMDEF)                                                 
*         MVC   IPORTRTN,=V(VTAMPORT)                                           
*         B     IDEF                                                            
*                                                                               
*IDEFNSC  L     RAR,=V(NSCDEF)                                                  
*         MVC   IPORTRTN,=V(NSCPORT)                                            
*         B     IDEF                                                            
*                                                                               
IDEFELF  L     RAR,=V(ELFDEF)                                                   
         MVC   IPORTRTN,=V(ELFPORT)                                             
         B     IDEF                                                             
*                                                                               
*IDEFALF  L     RAR,=V(ALFDEF)                                                  
*         MVC   IPORTRTN,=V(ALFPORT)                                            
*         B     IDEF                                                            
*                                                                               
*IDEFECU  L     RAR,=V(ECUDEF)                                                  
*         MVC   IPORTRTN,=V(ECUPORT)                                            
*         B     IDEF                                                            
*                                                                               
IDEFERR  SEG   (R1),(R0)                                                        
         SETMSG ': invalid front-end type.'                                     
         B     INITERR                                                          
*                                                                               
IDEF     IF    (RAR,NZ),BEGIN                                                   
         BALR  RAR,RAR                                                          
         BNZ   INITERR                                                          
         LR    FEBR,R1                                                          
         WITH  FEB                                                              
         LTH   R3,FEBPMAX          Max no of ports                              
         IF    Z,'LH R3,CVMAXSES; STH R3,FEBPMAX'  Global max                   
         SLL   R3,2                Times 4                                      
         LR    R0,R3                                                            
         LA    R1,PATSUBP                                                       
         LA    R2,*+4                                                           
         VCALL NGETCORE                                                         
         ST    R1,FEBPATP          Save PAT ptr                                 
         LR    R2,R1               For MVCL....                                 
         CLEAR R1                                                               
         MVCL  R2,R0               Init PAT to zeros                            
*                                                                               
         ST    FEBR,IFEBP                                                       
         L     R15,CVFEBQT                                                      
         WITH  (FEB,R15),'ST FEBR,FEBLINK; ST FEBR,CVFEBQT'                     
         END                                                                    
         B     INLOOP                                                           
         EJECT                                                                  
*box                                                                            
*                                                                               
*        PORT options.                                                          
*                                                                               
IPORT    IF    ('LT FEBR,IFEBP',NZ),BEGIN                                       
         WITH  FEB                                                              
         LR    R1,FEBR                                                          
         IF    ('LT RAR,IPORTRTN',Z),EXIT                                       
         BALR  RAR,RAR                                                          
         BNZ   INITERR                                                          
         LTR   PIBR,R1                                                          
         WITH  PIB                                                              
         IF    Z,EXIT                                                           
         ST    FEBR,PIBFEBP                                                     
         LH    R15,PIBNO                                                        
         IF    (R15,LGE,FEBPMAX),BEGIN                                          
         LA    R1,PIB                                                           
         ACALL FREEPIB                                                          
         SEGTB PIBNAME                                                          
         SETMSG 'is out of bounds (not enough ports).'                          
         B     INITERR                                                          
         END                                                                    
         SLL   R15,2                                                            
         A     R15,FEBPATP                                                      
         IF    ('OC @R15(4),@R15',NZ),BEGIN                                     
         SEGTB PIBNAME                                                          
         SETMSG 'is already defined.'                                           
         B     INITERR                                                          
         END                                                                    
         ST    PIBR,@R15                                                        
         END                                                                    
         B     INLOOP                                                           
*                                                                               
IFEBP    DC    A(0)                                                             
IPORTRTN DC    A(0)                                                             
         EJECT                                                                  
*-                                                                              
*-       Local error messages.                                                  
*-                                                                              
INITSERR SETMSG 'invalid syntax.'                                               
         B     INITERR                                                          
*                                                                               
INITMISS SETMSG 'missing operand.'                                              
         B     INITERR                                                          
*                                                                               
INITBAD  SEGT  CVSCNKW                                                          
         SETMSG ': invalid.'                                                    
         B     INITERR                                                          
*                                                                               
INITERR  SEG   (R1),(R0)                                                        
         IF    (LINENO,NE,-1),BEGIN                                             
         SEGB  ', line'                                                         
         BTR   CVWORK,(0,3),L:LINENO                                            
         LR    R15,R1                                                           
         AR    R15,R0                                                           
         DECR  R15                                                              
         WHILE (@R15,EQ,'0'),'MVI @R15,C" "; DECR R15'                          
         SEGT  (R1),(R0)                                                        
         END                                                                    
         SEGWR                                                                  
         B     INLOOP                                                           
*                                                                               
         DROP  BR                                                               
*-                                                                              
*-       Scan subroutines.                                                      
*-                                                                              
         USING FEB                 (scan assumption)                            
         SPACE 2                                                                
         ENTRY DEFPRT                                                           
*                                                                               
DEFPRT   SCKW  LEASED,DLEASE,A                                                  
         SCKW  RLIN,DRLIN,A                                                     
         SCKW  ATTACHED,DATTACH,A                                               
         SCKW  DETACHED,DDETACH,A                                               
         SCKW  NOTIME,DNOTIME,(A,P,I),9999                                      
         SCKW  ,INITSKIP                                                        
*                                                                               
DLEASE   SET   FEBFLEAS                                                         
         SCRTN (R15)                                                            
*                                                                               
DRLIN    SET   FEBFRLIN+FEBFLEAS                                                
         SCRTN (R15)                                                            
*                                                                               
DATTACH  CLEAR FEBFDET                                                          
         SCRTN (R15)                                                            
*                                                                               
DDETACH  SET   FEBFDET                                                          
         SCRTN (R15)                                                            
*                                                                               
DNOTIME  MVC   FEBTMLIM,SCNVAL+2-SCNCB(R15)  Save NOTIME limit                  
         SCRTN (R15)                                                            
         EJECT                                                                  
         USING PIB                 (scan assumption)                            
*-                                                                              
         ENTRY PORTPRT                                                          
*                                                                               
PORTPRT  SCKW  DIAL,PDIAL,A                                                     
         SCKW  SUNET,PSUNET,A                                                   
         SCKW  GANDALF,PGANDALF,A                                               
         SCKW  DIRECT,PDIR,A                                                    
         SCKW  LEASED,PLEASE,A                                                  
         SCKW  TELENET,PTEL,A                                                   
         SCKW  TYMNET,PTYM,A                                                    
         SCKW  RLIN,PRLIN,A                                                     
         SCKW  TRACE,PTRACE,A                                                   
         SCKW  KEEP,PKEEP,A                                                     
         SCKW  OPERATOR,POPER,A                                                 
         SCKW  DUMMY,PDUMMY,A                                                   
         SCKW  ATTACHED,PATTACH,A                                               
         SCKW  DETACHED,PDETACH,A                                               
         SCKW  ID,PTID,(A,P)                                                    
         SCKW  SYSTEM,PDFSYS,(A,P)                                              
         SCKW  SMFTYPE,PSMFTYPE,(A,P)                                           
         SCKW  LOCATION,PLOC,(A,P)                                              
         SCKW  SESSION,PSES,(A,P)                                               
         SCKW  ,PCHK                                                            
*                                                                               
PDIAL    SET   PIBFDIAL                                                         
         SCRTN (R15)                                                            
*                                                                               
PSUNET   SET   PIBFSUN                                                          
         SCRTN (R15)                                                            
*                                                                               
PGANDALF SET   PIBFGAND                                                         
         SCRTN (R15)                                                            
*                                                                               
PDIR     SET   PIBFDIR                                                          
         SCRTN (R15)                                                            
*                                                                               
PLEASE   SET   PIBFLEAS                                                         
         SCRTN (R15)                                                            
*                                                                               
PTEL     SET   PIBFTEL                                                          
         SCRTN (R15)                                                            
*                                                                               
PTYM     SET   PIBFTYM                                                          
         SCRTN (R15)                                                            
*                                                                               
PRLIN    SET   PIBFRLIN+PIBFLEAS                                                
         SCRTN (R15)                                                            
*                                                                               
PTRACE   SET   PIBFSESTRC                                                       
         SCRTN (R15)                                                            
*                                                                               
PKEEP    SET   PIBFSESKEEP                                                      
         SCRTN (R15)                                                            
*                                                                               
POPER    SET   PIBFOP                                                           
         SCRTN (R15)                                                            
*                                                                               
PDUMMY   SET   PIBFDUM+PIBFDET                                                  
         SCRTN (R15)                                                            
*                                                                               
PATTACH  CLEAR PIBFDET                                                          
         SCRTN (R15)                                                            
*                                                                               
PDETACH  SET   PIBFDET                                                          
         SCRTN (R15)                                                            
*                                                                               
PSMFTYPE MVC   PIBTETYP,@R1        Save SMF connection type char                
         SCRTN (R15)                                                            
*                                                                               
PDFSYS   PROC  (R15,LSR)                                                        
         MVC   PIBDFSYS,CVBLANKS                                                
         CEIL  R0,L'PIBDFSYS                                                    
         LR    R15,R0                                                           
         MOVE  R15,PIBDFSYS,@R1                                                 
         PEND                                                                   
*                                                                               
PTID     PROC  (R15,LSR)                                                        
         SET   PIBFPTID            Terminal id is pre-assigned                  
         MVC   PIBTID,CVBLANKS                                                  
         CEIL  R0,L'PIBTID                                                      
         LR    R15,R0                                                           
         MOVE  R15,PIBTID,@R1                                                   
         PEND                                                                   
*                                                                               
PLOC     PROC (R15,LSR)                                                         
         MVC   PIBLOC,CVBLANKS                                                  
         VCALL DEQUOTE                                                          
         CEIL  R0,L'PIBLOC                                                      
         LR    R15,R0                                                           
         MOVE  R15,PIBLOC,@R1                                                   
         PEND                                                                   
*                                                                               
PCHK     PROC (R15,LSR)                                                         
         VCALL DEQUOTE                                                          
         IF    NEG,'LCALL INITSKIP; EXIT PCHK'  not quoted                      
         MVC   PIBINFO,CVBLANKS                                                 
         LR    R15,R0                                                           
         CEIL  R15,L'PIBINFO                                                    
         MOVE  R15,PIBINFO,@R1                                                  
         PEND                                                                   
*                                                                               
PSES     PROC  (R15,LSR)                                                        
         IF    ((R0,NE,6),OR,(@R1,EQ,'.')),'LCALL INITSKIP; EXIT PSES'          
         MVC   PIBDFACT(3),@R1+3   Uuu                                          
         MVC   PIBDFACT+3(2),@R1   Gg                                           
         PEND                                                                   
*                                                                               
         DROP  PIB,FEB                                                          
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*        Error messages.                                                        
*                                                                               
INITSKIP PROC  (R15,LSR)                                                        
         SEGT  CVSCNKW                                                          
         SEG  ': ignored'                                                       
         IF    (LINENO,NE,-1),BEGIN                                             
         SEGB  ', line'                                                         
         BTR   CVWORK,(0,3),L:LINENO                                            
         LR    R15,R1                                                           
         AR    R15,R0                                                           
         DECR  R15                                                              
         WHILE (@R15,EQ,'0'),'MVI @R15,C" "; DECR R15'                          
         SEGT  (R1),(R0)                                                        
         END                                                                    
         SEGWR                                                                  
         PEND                                                                   
         EJECT                                                                  
*-                                                                              
*-       Entered asynchronously if the WTO subtask abends.                      
*-                                                                              
WTOFAIL  WITH  (WTOFAIL,R15),'ABEND 2,DUMP'  Curtains                           
*-                                                                              
*-       Entered asynchronously if the I/O halt subtask abends.                 
*-                                                                              
IOHFAIL  WITH  (IOHFAIL,R15),'ABEND 3,DUMP'  Curtains                           
*-                                                                              
*-       Front-end check vector table.                                          
*-                                                                              
FINFE    DC    A(0)                                                             
         DC    V(CONSFIN)          FEBTCONS                                     
*         DC    V(ASYNFIN)          FEBTASYN                                    
         DC    A(0)                NO FEBTASYN                                  
*         DC    V(PDPFIN)           FEBTPDP                                     
         DC    A(0)                NO FEBTPDP                                   
*         DC    V(VTAMFIN)          FEBTVTAM                                    
         DC    A(0)                NO FEBTVTAM - Yeah!!!                        
         DC    V(VIRTFIN)          FEBTVIRT                                     
*         DC    V(NSCFIN)           FEBTNSC                                     
         DC    A(0)                NO FEBTNSC                                   
         DC    V(ELFFIN)           FEBTELF                                      
*         DC    V(ALFFIN)           FEBTALF                                     
         DC    A(0)                NO FEBTALF                                   
*         DC    V(ECUFIN)           FEBTECU                                     
         DC    A(0)                NO FEBTECU                                   
FINFEMAX EQU   (*-FINFE-4)/4,,C'N'                                              
         DS    0S(FINFEMAX-FEBTMAX,FEBTMAX-FINFEMAX)                            
         EJECT                                                                  
*box                                                                            
*                                                                               
*  GETSIN -- Routine to get the next line from SYSIN.                           
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok; R1,R0 - line loc, len                                            
*      4 - end of file                                                          
*                                                                               
GETSIN   XPROC                                                                  
         LM    R2,R4,INPTRS        Get buffer ptrs                              
         WITH  (DCB,R4)                                                         
*                                                                               
         IF    ^SYSINDCB+(DCBOFLGS-DCB).DCBOFOPN,INEND  Not open                
*-                                                                              
*-       Return the same line again if the "unget" flag is set.                 
*-                                                                              
         IF    (UNGETFLG,NZ),BEGIN  Return the same line again...               
         CLEAR UNGETFLG            Reset unget flag                             
         SETMSG LINE,LH:LINELEN     Line text                                   
         CLEAR R15                 A-ok                                         
         EXIT  GETSIN                                                           
         END                                                                    
*                                                                               
GSINLP   IF    (R2,NP),BEGIN       Get next buffer...                           
         GET   SYSINDCB            Get next buffer/record                       
         LR    R3,R1                                                            
         IF    DCBRECFM.DCBRECU,BEGIN  WYLBUR edit format...                    
         LH    R2,@R1              Record length                                
         CEIL  R2,DCBLRECL         Keep us honest                               
         SH    R2,=H'2'            Don't include record len hw                  
         BNP   GSINLP                                                           
         LA    R3,@R3+2                                                         
         END                                                                    
         END                                                                    
*                                                                               
         IF    DCBRECFM.DCBRECU,BEGIN  Unpress line...                          
         LR    R15,R3              Pressed line ptr                             
         LA    R1,LINE                                                          
         ACALL UNPRESS             Unpress line                                 
         ST    R15,LINENO          Save WYLBUR lineno                           
         LC    R15,@R3+4           Len byte                                     
         LA    R15,@R15+5          Total pressed line len                       
         AR    R3,R15                                                           
         SR    R2,R15                                                           
         END                                                                    
*                                                                               
         ELSE  BEGIN               Fixed or variable...                         
         LH    R0,DCBLRECL                                                      
         IF    ((R0,EQ,80),AND,(@R3+76,EQ,'.')),'LA R0,72' no lineno            
         CEIL  R0,L'LINE                                                        
         LR    R15,R0                                                           
         MOVE  R15,LINE,@R3                                                     
         SETMSG LINE,(R0)                                                       
         END                                                                    
*                                                                               
         STM   R2,R4,INPTRS        Save buffer ptrs                             
         STH   R0,LINELEN          Save line length                             
         CLEAR R15                 Good RC                                      
         EXIT                                                                   
*-                                                                              
*-       End of file on SYSIN.                                                  
*-                                                                              
INEOF    CLOSE (SYSINDCB)                                                       
         FREEPOOL SYSINDCB                                                      
INEND    CLEAR R0,R1               No text ptrs                                 
         LA    R15,4               Return end of file                           
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  UNGETSIN -- Routine to put the last line returned by GETSIN                  
*    back in the input queue.  This allows a routine to                         
*    call GETSIN to look at the next SYSIN line and then call                   
*    UNGETSIN if the line is not for that routine.                              
*                                                                               
UNGETSIN XPROC                                                                  
         MVI   UNGETFLG,X'FF'      Return the last line again                   
         PEND                                                                   
         EJECT                                                                  
*-                                                                              
*-       SYSIN DCB.                                                             
*-                                                                              
SYSINDCB DCB   DDNAME=PORTS,DSORG=PS,MACRF=GL,EXLST=INEX,EODAD=INEOF            
SYSDDNAM EQU   SYSINDCB+DCBDDNAM-DCB,8,C'C'                                     
*                                                                               
LINENO   DC    F'-1'               WYLBUR lineno                                
LINELEN  DC    H'0'                Line length                                  
LINE     DC    CL(&LINESZ)' '      Saved line area                              
UNGETFLG DC    X'00'               Non-zero if "unget" is pending               
*                                                                               
INEX     DC    0F'0',X'85',AL3(SYSINOP)                                         
*                                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SYSINOP -- OS open exit routine for SYSIN ddcard.                            
*                                                                               
*    On entry:                                                                  
*      R1 - DCB ptr                                                             
*      R15- base                                                                
*                                                                               
SYSINOP  LABEL                                                                  
         WITH  (DCB,R1),(*,R15),BEGIN                                           
         SET   DCBOFLGS.DCBOFPPC   Allow concat of unlike attributes            
         IF    (DCBBUFNO,Z),'MVI DCBBUFNO,2'  bufno=2 default                   
         IF    (DCBBLKSI,Z),BEGIN  No blksize...                                
         MVC   DCBBLKSI,DCBLRECL   Blksize = lrecl                              
         IF    (DCBBLKSI,Z),'MVC DCBBLKSI,=AL2(&BUFRSZ)'  Default               
         END                                                                    
         BR    RAR                                                              
         END                                                                    
*                                                                               
         QLTORG                                                                 
         TITLE 'Final initialization'                                           
*box                                                                            
*                                                                               
*  FININIT -- Do final initialization.                                          
*                                                                               
FININIT  PROC                                                                   
         VCALL SESTIMER            Set up session timeout timer                 
*                                                                               
         ACALL TERMCNT             Init active user count                       
         VCALL LOCALTOD            Save starting time                           
         ST    R0,CVMCLCK          (High word only)                             
*                                                                               
         VCALL SERVINIT            Initialize milserv SVC interface             
*                                                                               
         IF    ^CVFTEST,BEGIN      Production version...                        
         L     R7,CVTPTR                                                        
         WITH  (CVT,R7)                                                         
         LT    R6,CVTUSER          SCIP CVT ptr                                 
         IF    Z,EXIT              None, scram                                  
         WITH  (USERCVT,R6)                                                     
         IF    (USERCVT,NE,'SCIP'),EXIT  not ours, scram                        
         ACALL KEYZERO             ********                                     
         SET   USEHSPFL.HSPFMIL    MILTEN is up                                 
         MVC   USEMASCB,CVASCBP    Set MILTEN ASCB ptr                          
         CLEAR USEMGINP            No "global info table" (future)              
         MVC   USEMILNM,CVMJOBNM   Set MILTEN jobname (used by JES)             
         MVC   USEMSITP,CVSITP     Set session info table ptr                   
         LH    R15,CVMAXSES        Maximum number of sessions                   
         ST    R15,USEMNSIN        This is how many entries we have             
         ACALL KEYNZERO            ********                                     
         END                                                                    
         PEND                                                                   
         QLTORG                                                                 
         TITLE 'Subroutines'                                                    
*box                                                                            
*                                                                               
*  INCRSES -- Routine to increment active user count.                           
*                                                                               
*    On entry:                                                                  
*      R1 - SCB ptr (for session just logging on)                               
*                                                                               
INCRSES  XPROC                                                                  
         LR    SCBR,R1                                                          
         WITH  SCB                                                              
         FAIL  (SCB,NE,'SCB'),'Bad SCB ptr'                                     
*                                                                               
         LT    PIBR,SCBPIBP                                                     
         IF    NZ,BEGIN                                                         
         WITH  PIB                                                              
         L     FEBR,PIBFEBP                                                     
         WITH  FEB                                                              
         INCR  R15,PIBNSES                                                      
         INCR  R15,FEBNSES                                                      
*                                                                               
         INCR  R15,FEBSCUR                                                      
         IF    (R15,GE,FEBSMAX),BEGIN                                           
         STH   R15,FEBSMAX                                                      
         MVC   FEBSMCLK,SCBLCLCK                                                
         END                                                                    
         END                                                                    
*                                                                               
         INCR  R15,CVMTLSES        Count total no. of sessions                  
*                                                                               
         IF    ^SCBSFPS,BEGIN      Only count real users...                     
         INCR  R15,CVMCRSES                                                     
         IF    (R15,GE,CVMMXSES),BEGIN  Max so far...                           
         STH   R15,CVMMXSES                                                     
         MVC   CVMCKSES,SCBLCLCK   Clock at max                                 
         END                                                                    
         LCALL TERMCNT             Update count                                 
         END                                                                    
         PEND                                                                   
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  DECRSES -- Routine to decrement active user count.                           
*                                                                               
*    On entry:                                                                  
*      R1 - SCB ptr (for session just logging off)                              
*                                                                               
DECRSES  XPROC                                                                  
         LR    SCBR,R1                                                          
         WITH  SCB                                                              
         FAIL  (SCB,NE,'SCB'),'Bad SCB ptr'                                     
*                                                                               
         IF    (SCBACCT,Z),EXIT    Ignore if no account                         
         LT    PIBR,SCBPIBP                                                     
         IF    NZ,BEGIN                                                         
         WITH  PIB                                                              
         L     FEBR,PIBFEBP                                                     
         WITH  FEB                                                              
         DECR  R15,FEBSCUR                                                      
         END                                                                    
*                                                                               
         IF    SCBSFPS,EXIT                                                     
         DECR  R15,CVMCRSES        Decr user count                              
         LCALL TERMCNT             Update count                                 
         PEND                                                                   
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  TERMCNT -- Local routine to update the active user count in                  
*    the SCIP (User) CVT.  CVMCRSES has the current count.                      
*                                                                               
TERMCNT  PROC                                                                   
         IF    CVFTEST,EXIT        Only if prod. MILTEN                         
*                                                                               
         L     R7,CVTPTR                                                        
         WITH  (CVT,R7)                                                         
         LT    R6,CVTUSER                                                       
         IF    Z,EXIT              No user CVT, scram                           
         WITH  (USERCVT,R6)                                                     
         IF    (USERCVT,NE,'SCIP'),EXIT  Not ours, scram                        
*                                                                               
         ACALL KEYZERO             ********                                     
         MVC   USEMILCT,CVMCRSES   Update current session count                 
         ACALL KEYNZERO            ********                                     
         PEND                                                                   
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  GETTRC -- Routine to get trace table.                                        
*                                                                               
*    On entry:                                                                  
*      R0 - length of trace table entry                                         
*      R1 - no. of entries                                                      
*      R15- trace ptrs (-> len,cur,first,end)                                   
*                                                                               
*    On exit:                                                                   
*      R1,R0 - trace table start, total len                                     
*                                                                               
GETTRC   XPROC                                                                  
         LR    R7,R15                                                           
         AH    R0,=H'7'                                                         
         N     R0,=F'-8'           Doubleword boundry                           
         ST    R0,@R7              Save entry len                               
         LR    R15,R0                                                           
         MR    R0,R15              Len of table in r1                           
         LR    R5,R1               Save len                                     
         LR    R0,R1                                                            
         LA    R1,TRCSUBPL                                                      
         LR    R2,RAR                                                           
         VCALL NGETCORE                                                         
         LR    R6,R1               Save starting loc                            
         LR    R0,R1               R0 & r1 = start                              
         LA    R2,@R1(R5)          R2 = end                                     
         STM   R0,R2,@R7+4         Save ptrs                                    
         LR    R1,R5               Len                                          
         CLEAR R3                                                               
         MVCL  R0,R2               Zero trace table                             
         SETMSG (R6),(R5)                                                       
         PEND                                                                   
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FREETRC -- Routine to free trace table.                                      
*                                                                               
*    On entry:                                                                  
*      R15 - trace ptrs (-> len,cur,first,end)                                  
*                                                                               
FREETRC  XPROC                                                                  
         L     R1,@R15+8           Start                                        
         CLEAR (@R15,16)           Reset                                        
         VCALL FREECORE                                                         
         PEND                                                                   
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  TIMERQ -- Routine to queue timer entry.                                      
*                                                                               
*    On entry:                                                                  
*      R15- timer interval in .01 sec                                           
*      R0 - exit routine addr                                                   
*      R1 - parm ptr                                                            
*                                                                               
*    On exit:                                                                   
*      R15- timer id for dequeue (TQE addr)                                     
*                                                                               
TIMERQ   XPROC                                                                  
         LR    R3,R15                                                           
         FLOOR R3,0                                                             
         LR    R4,R0                                                            
         LR    R5,R1                                                            
*                                                                               
         LA    R0,L'TQE                                                         
         LA    R1,TQESUBPL                                                      
         LR    R2,RAR                                                           
         VCALL NGETCORE                                                         
         LR    R7,R1                                                            
         WITH  (TQE,R7)                                                         
         CLEAR TQE                                                              
         MVC   TQE(4),=CL4'TQE'                                                 
         M     R2,=F'40960000'     Convert to tod clock units                   
         STCK  @R13                                                             
         ADL   R2,@R13                                                          
         STM   R2,R3,TQECLCK       Tod clock at expiration                      
         STM   R4,R5,TQERTN        Exit routine addr, parm ptr                  
*                                                                               
         LA    R15,CVTQEQH-(TQELINK-TQE)  Dummy first entry                     
         LR    R2,R15                                                           
         LOOP  BEGIN                                                            
         LR    R6,R15              Save prev ptr                                
         WITH  (TQE,R15)                                                        
         WHILE ('LT R15,TQELINK',NZ)                                            
         CLC   TQECLCK,TQECLCK-TQE(R7)  Add entry before this one?              
         IF    GT,EXIT             Yes                                          
         END                                                                    
         ST    R6,TQEBACK          Our back ptr                                 
         IF    (R15,NZ),'ST R7,TQEBACK-TQE(R15)'  fix back                      
         MVC   TQELINK,TQELINK-TQE(R6)  our forward ptr                         
         ST    R7,TQELINK-TQE(R6)  Link up new tqe                              
*                                                                               
         IF    (R6,EQ,R2),BEGIN    Set a new timer...                           
         TTIMER CANCEL                                                          
         STCK  @R13                                                             
         LM    R2,R3,TQECLCK                                                    
         SDL   R2,@R13                                                          
         D     R2,=F'40960000'     Convert to .01 sec                           
         IF    (R2,NZ),'INCR R3'   To next .01 sec                              
         IF    (R3,NP),'LA R3,1'                                                
         SET   CVFTIMER                                                         
         ST    R3,CVWORK                                                        
         L     R0,=A(TIMREXIT)                                                  
         STIMER REAL,(0),BINTVL=CVWORK                                          
         END                                                                    
*                                                                               
         LR    R15,R7              Timer id                                     
         PEND                                                                   
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  TIMERDQ -- Routine to dequeue timer entry.                                   
*                                                                               
*    On entry:                                                                  
*      R15 - timer id (TQE addr)                                                
*                                                                               
TIMERDQ  XPROC                                                                  
         LR    R7,R15                                                           
         WITH  (TQE,R7)                                                         
         FAIL  (TQE,NE,'TQE'),'Bad TQE ptr'                                     
*                                                                               
         LM    R5,R6,TQELINK       Forward, back ptrs                           
         IF    (R5,NZ),'ST R6,TQEBACK-TQE(R5)'  Fix their back ptr              
         ST    R5,TQELINK-TQE(R6)  Dequeue & re-link                            
*                                                                               
         MVC   TQE(4),=C'OTQE'                                                  
         LA    R1,TQE                                                           
         VCALL FREECORE            Release entry                                
*                                                                               
         LA    R15,CVTQEQH-(TQELINK-TQE)  Dummy first entry                     
         IF    (R6,EQ,R15),BEGIN   First entry dequeued...                      
         TTIMER CANCEL                                                          
         IF    (R5,Z),EXIT         No more timers                               
*                                                                               
         WITH  (TQE,R5)                                                         
         STCK  @R13                                                             
         LM    R2,R3,TQECLCK                                                    
         SDL   R2,@R13                                                          
         D     R2,=F'40960000'     Convert to .01 sec                           
         IF    (R2,NZ),'INCR R3'   To next .01 sec                              
         IF    (R3,NP),'LA R3,1'                                                
         SET   CVFTIMER                                                         
         ST    R3,CVWORK                                                        
         L     R0,=A(TIMREXIT)                                                  
         STIMER REAL,(0),BINTVL=CVWORK                                          
         END                                                                    
*                                                                               
         LR    R15,R7              Timer id                                     
         PEND                                                                   
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  TIMERPRG -- Routine to purge matching timer entries.                         
*                                                                               
*    On entry:                                                                  
*      R1 - parm ptr to match                                                   
*                                                                               
*    On exit, R15 (and CC):                                                     
*      0 - entry deleted                                                        
*      4 - entry not found                                                      
*                                                                               
TIMERPRG XPROC                                                                  
         LR    R5,R1                                                            
         LA    R4,4                Pre-set return code                          
*                                                                               
         LA    R7,CVTQEQH-(TQELINK-TQE)  Dummy first entry                      
         LOOP  BEGIN                                                            
         LR    R6,R7               Save prev ptr                                
         WITH  (TQE,R7)                                                         
         WHILE ('LT R7,TQELINK',NZ)                                             
         IF    (R5,EQ,TQEPARM),BEGIN  Match...                                  
         FAIL  (TQE,NE,'TQE'),'Bad TQE entry'                                   
         L     R15,TQELINK         Forward ptr                                  
         IF    (R15,NZ),'ST R6,TQEBACK-TQE(R15)'  Fix back ptr                  
         ST    R15,TQELINK-TQE(,R6)  dequeue                                    
*                                                                               
         MVC   TQE(4),=C'OTQE'                                                  
         LR    R1,R7                                                            
         VCALL FREECORE                                                         
*                                                                               
         LR    R7,R6               Back up                                      
         CLEAR R4                  Set return code                              
         END                                                                    
         END                                                                    
*                                                                               
         LR    R15,R4                                                           
         PEND                                                                   
*                                                                               
         LTORG                                                                  
         EJECT                                                                  
         TITLE 'PATHINIT - initialize new user path'                            
*box                                                                            
*                                                                               
*   PATHINIT -- Routine to in initialize a new user path.                       
*                                                                               
*     On entry:                                                                 
*       R1 - UPATH ptr                                                          
*                                                                               
*     On exit, R15 (and cc):                                                    
*       0 - initialized                                                         
*                                                                               
PATHINIT XPROC                                                                  
         LR    R5,R1                                                            
         WITH  (UPATH,R5),BEGIN                                                 
         MOVEL UPATH,MPATH,L'UPATH  Move in model path block                    
*                                                                               
         LA    R15,CVECB                                                        
         ST    R15,UPATECB         Save ECB ptr                                 
         LA    R15,UPATSFLG                                                     
         ST    R15,UPATECBF        Save Suzan path flag ptr                     
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
         PEND                                                                   
*-                                                                              
*-       Model Path control block.                                              
*-                                                                              
MPATHX   DS    0D                                                               
MPAT     MILPATH                                                                
MPATH    EQU   MPATHX,*-MPATHX,C'X'                                             
*                                                                               
*                                                                               
         DS    0SL2(L'UPATH-L'MPATH,L'MPATH-L'UPATH)                            
         EJECT                                                                  
         TITLE 'PATHOPEN - open path'                                           
*box                                                                            
*                                                                               
*   PATHOPEN -- Routine to open a path.                                         
*                                                                               
*     On entry:                                                                 
*       R1 - UPATH ptr                                                          
*                                                                               
*     On exit, R15 (and cc):                                                    
*       0 - opened                                                              
*       nz- error of some sort                                                  
*                                                                               
POPNWA   RECORD BEGIN                                                           
POPNWORD DS    F                   Work word                                    
         END                                                                    
*-                                                                              
PATHOPEN XPROC POPNWA                                                           
         LR    R5,R1                                                            
         WITH  (UPATH,R5)                                                       
         FAIL  (UPATH,NE,'PATH'),'Bad UPATH ptr.'                               
*-                                                                              
*-       Open the path.                                                         
*-                                                                              
         LA    R1,UPAT             Suzan path control block                     
         ST    R1,POPNWORD         Build parm (path addr)                       
         SET   POPNWORD.X'80'      Flag end of parm list                        
         SCOM  OPEN,LA:POPNWORD    Open the path                                
*  (Returns with R15 return code set by the Suzan SVC.)                         
         PEND                                                                   
         QLTORG                                                                 
         EJECT                                                                  
         TITLE 'PATHREAD - read record from path buffer'                        
*box                                                                            
*                                                                               
*   PATHREAD -- Routine to read a new line from the path buffer.                
*                                                                               
*     On entry:                                                                 
*       R1 - UPATH ptr                                                          
*                                                                               
*     On exit, R15 (and cc):                                                    
*       0 - ok; R1,R0 - data loc, len                                           
*       nz- no data; R1,R0 - error msg loc, len                                 
*                                                                               
PRDWA    RECORD BEGIN                                                           
PRDPTRS  DS    2A                  Saved data ptrs                              
         END                                                                    
*-                                                                              
PATHREAD XPROC (R2,LSR),PRDWA                                                   
         LR    R5,R1                                                            
         WITH  (UPATH,R5)                                                       
         FAIL  (UPATH,NE,'PATH'),'Bad UPATH ptr.'                               
*                                                                               
         IF    ^UPATSFLG.UPATFNI,BEGIN  Nothing new...                          
         SETMSG 'NO DATA'                                                       
         LA    R15,4                                                            
         B     PRDEXIT             Scram                                        
         END                                                                    
*-                                                                              
*-       Get the next transaction.                                              
*-                                                                              
         CLEAR UPATSFLG.UPATFNI,MODE=LOCKED,REF=UPATH                           
*                                                                               
         SCOM  FREELOC,0,L:UPATMGC  Get next transaction                        
         IF    (R15,NZ),BEGIN      Bad suzan request...                         
         ACALL PATHRC              Get error msg text                           
         B     PRDEXIT                                                          
         END                                                                    
*                                                                               
         IF    (R0,Z),'SETMSG "NO DATA"; LA R15,4; B PRDEXIT'                   
*                                                                               
         STM   R0,R1,PRDPTRS       Save data ptrs                               
         SET   UPATSFLG.UPATFNI,MODE=LOCKED,REF=UPATH                           
*                                                                               
         LM    R0,R1,PRDPTRS       Get data ptrs                                
         CLEAR R15                 A-ok                                         
PRDEXIT  PEND                                                                   
         QLTORG                                                                 
         EJECT                                                                  
         TITLE 'PATHSEG - path SEG routine'                                     
*box                                                                            
*                                                                               
*   PATHSEG -- Seg processing routine to handle writing                         
*     data across the Suzan path.                                               
*                                                                               
*     On entry:                                                                 
*       R15 - SEGCB ptr                                                         
*                                                                               
PSGWA    RECORD BEGIN                                                           
PSGHDRA  DS    A                   SCOM parm: header address                    
PSGHDRL  DS    F                   SCOM parm: header length                     
PSGDATAA DS    A                   SCOM parm: address                           
PSGDATAL DS    F                   SCOM parm: length                            
         END                                                                    
*-                                                                              
PATHSEG  XPROC PSGWA                                                            
         CLEAR PSGWA                                                            
*                                                                               
         LR    R5,R15                                                           
         WITH  (SEGCB,R5)                                                       
*                                                                               
         L     R6,SEGCBUSR                                                      
         WITH  (UPATH,R6)                                                       
         FAIL  (UPATH,NE,'PATH'),'Bad PATHSEG UPATH ptr'                        
*-                                                                              
*-       SEGWR/SEGCR (or overflow).                                             
*-                                                                              
         IF    (SEGCBWR,OR,SEGCBCR,OR,SEGCBOVF),BEGIN  SEGWR...                 
         LTR   R2,R0               Current buffer length                        
         IF    NP,EXIT             Nothing to write, scram                      
*                                                                               
         ST    R1,PSGDATAA         Seg data ptrs                                
         ST    R0,PSGDATAL                                                      
*                                                                               
         SETMSG PSGDATAL                                                        
         ST    R1,PSGHDRA          Length                                       
         ST    R0,PSGHDRL                                                       
*                                                                               
         SET   PSGDATAA.X'80'      Set VL bit                                   
*                                                                               
         LA    R1,PSGDATAA         Assume sending data only                     
         SCOM  SEND,(R1),L:UPATMGC  Send transaction                            
         IF    (R15,NZ),BEGIN      Couldn't send...                             
         ACALL PATHRC              Get return code string                       
*                                                                               
         IF    (UPATRCP,Z),BEGIN   Only set it the first time...                
         STM   R0,R1,UPATRCP       Save return code string ptrs                 
         END                                                                    
         END                                                                    
*                                                                               
         IF    (SEGCBWR,OR,SEGCBCR),'CLEAR SEGCBLENF,SEGCBMRKF'                 
         LCR   R0,R2               For overflow: nbytes processed               
         END                                                                    
*-                                                                              
*-       Post processing (set return code only).                                
*-                                                                              
         IF    SEGCBSPP,BEGIN      Post processing...                           
         CLEAR R0                  Assume A-ok                                  
         IF    (UPATRCP,NZ),'LA R0,4'  Trouble                                  
         END                                                                    
*                                                                               
         PEND                                                                   
         QLTORG                                                                 
         EJECT                                                                  
         TITLE 'PATHCLS - close user path'                                      
*box                                                                            
*                                                                               
*   PATHCLS -- Routine to close a user path.                                    
*                                                                               
*     On entry:                                                                 
*       R1 - path number                                                        
*                                                                               
*     On exit, R15 (and cc):                                                    
*       0 = closed                                                              
*       4 = not closed; R1,R0 = error msg loc, len                              
*                                                                               
PATHCLS  XPROC                                                                  
         LR    R5,R1                                                            
         WITH  (UPATH,R5)                                                       
         FAIL  (UPATH,NE,'PATH'),'Bad UPATH ptr.'                               
*-                                                                              
*-       Close path (we don't care if it's not open).                           
*-                                                                              
         SCOM  CLOSE,0,L:UPATMGC   Close path                                   
         PEND                                                                   
         QLTORG                                                                 
         EJECT                                                                  
         TITLE 'PATHINFO - Get path partner information'                        
*box                                                                            
*                                                                               
*  PATHINFO -- Routine to get path partner information.                         
*                                                                               
*    On entry:                                                                  
*      R1 - UPATH ptr                                                           
*                                                                               
*    On exit:                                                                   
*      UPATH information fields are filled in                                   
*                                                                               
PIWA     RECORD BEGIN                                                           
PIPARMS  DS    2A                  Suzan INFO parm: loc, len                    
*                                                                               
PIASCBP  DS    A                   Info:  Partner's ASCB ptr                    
PIBUFSIZ DS    F                   Info:  Partner's buffer size                 
PIPATHNM DS    CL8                 Info:  Partner's path name                   
PIXACTP  DS    A                   Info:  Input XACT chain ptr                  
         DS    XL16                Info:  Zeros (reserved)                      
PIPINFO  DS    XL(L'PINFO)         Info:  Partner's "PINFO"                     
PIINFO   EQU   PIASCBP,*-PIASCBP,C'X'                                           
*                                                                               
PIWORK   DS    XL64                Local work area                              
         END                                                                    
*-                                                                              
PATHINFO XPROC PIWA                                                             
         LR    R5,R1                                                            
         WITH  (UPATH,R5)                                                       
         IF    (UPATH,NE,'PATH'),'FAIL "Bad UPATH ptr."'                        
*-                                                                              
*-       Get path information from Suzan.                                       
*-                                                                              
         LA    R0,PIINFO           Addr of area                                 
         LA    R1,L'PIINFO         Length                                       
         STM   R0,R1,PIPARMS                                                    
         SET   PIPARMS.X'80'       Mark as end of list                          
*                                                                               
         SCOM  INFO,PIPARMS,L:UPATMGC  Get Suzan info                           
         IF    (R15,NZ),EXIT       Couldn't get info, forget it                 
*                                                                               
         IF    (PIASCBP,Z),EXIT    No partner's ASCB, forget it                 
*                                                                               
         MVC   UPATPASC,PIASCBP    Save partner's ASCB ptr                      
*-                                                                              
*-       Save partner information when PINFO is present.                        
*-                                                                              
         LA    R4,PIPINFO                                                       
         WITH  (PINFO,R4)                                                       
         IF    (PINFO,EQ,'PINF'),BEGIN  We have info...                         
         MVC   UPATPJOB,PINFOSYS   Save partner's "jobname"                     
         MVC   UPATPACT,PINFOACC   Save partner's account                       
         MVC   UPATPLNO,PINFOLNO   Save partner's line number                   
         MVC   UPATPNAM,PINFONAM   Save partner's user name                     
         IF    PINFOIFL.KWRIFSPR,'SET UPATFSPR'  Sys privs                      
         IF    PINFOIFL.KWRIFOPR,'SET UPATFOPR'  Opr privs                      
         END                                                                    
*-                                                                              
*-       Save partner information for batch jobs (no PINFO).                    
*-                                                                              
         ELSE  BEGIN               No PINFO, get jobname...                     
         HASPSERV JOBNAME,PIWORK,ASCB=UPATPASC  Get jobname                     
         MVC   UPATPJOB,PIWORK     Save jobname                                 
*                                                                               
         HASPSERV JOBACCT,PIWORK,ASCB=UPATPASC  Get account                     
         MVC   UPATPACT,CVBLANKS   Form "gg.uuu"...                             
         MVC   UPATPACT(2),PIWORK+3                                             
         MVI   UPATPACT+2,C'.'                                                  
         MVC   UPATPACT+3(3),PIWORK                                             
*                                                                               
         MVC   UPATPLNO,=H'-1'     No line number                               
         CLEAR UPATPNAM            No user name                                 
         END                                                                    
*                                                                               
         CLEAR R15                 (Neatness)                                   
         PEND                                                                   
         QLTORG                                                                 
         EJECT                                                                  
         TITLE 'PATHRC - format path return code'                               
*box                                                                            
*                                                                               
*   PATHRC -- Routine to form string from return code.                          
*                                                                               
*     On entry:                                                                 
*       R15 - return code from Suzan                                            
*                                                                               
*     On exit:                                                                  
*       R1,R0 - message loc, len                                                
*                                                                               
PATHRC   XPROC  (R2,LSR)                                                        
         SETMSG 'OK'                                                            
         IF    (R15,NZ),'SETMSG "ERROR"'                                        
         IF    (R15,EQ,=A(UPATRIFC)),'SETMSG "BAD SUZAN FUNCTION CODE"'         
         IF    (R15,EQ,=A(UPATRPMW)),'SETMSG "BAD SUZAN CONTROL BLOCK"'         
         IF    (R15,EQ,=A(UPATRBAF)),'SETMSG "BUFFER FULL"'                     
         IF    (R15,EQ,=A(UPATRNOP)),'SETMSG "NO PARTNER"'                      
         IF    (R15,EQ,=A(UPATRBOM)),'SETMSG "TOO BIG"'                         
         IF    (R15,EQ,=A(UPATRIBS)),'SETMSG "BUFFER TOO SMALL"'                
         IF    (R15,EQ,=A(UPATRBPI)),'SETMSG "BAD SUZAN BUFFER ADDR"'           
         IF    (R15,EQ,=A(UPATRIAD)),'SETMSG "BAD SUZAN ADDR"'                  
         PEND                                                                   
         QLTORG                                                                 
         EJECT                                                                  
         TITLE 'Subroutines'                                                    
*box                                                                            
*                                                                               
*  AMODE31 -- Routine to switch to 31-bit addressing mode if                    
*    we are running MVS/XA.                                                     
*                                                                               
*    MILTEN note:                                                               
*       Milten generally does not run in 31-bit...  the biggest                 
*       problem is that the MILTEN PROC/PEND routines don't work                
*       in 31 bit mode!  So be careful, only stay in 31-bit mode                
*       for a very short time!                                                  
*                                                                               
*    Note: By making the stack reside below the line, MILTEN can                
*          run fine in 31 bit mode (a few more minor tweaks were                
*          necessary). MPD - 05/01/98                                           
*                                                                               
         ENTRY AMODE31                                                          
AMODE31  ST    RAR,0(R13)          Save return address                          
         ST    BR,4(R13)           Save base register                           
         ST    R2,8(R13)           Save work register                           
         BASE                                                                   
*                                                                               
         IF    CVFXA,BEGIN         XA mode...                                   
         LA    R2,A31GO                                                         
         O     R2,=A(X'80000000')  31 bit mode wanted                           
         BSM   0,R2                                                             
*                                                                               
A31GO    LABEL                                                                  
         END                                                                    
*                                                                               
         L     R2,8(R13)           Restore work register                        
         L     BR,4(R13)           Restore base register                        
         L     RAR,0(R13)          Restore return address                       
         BR    RAR                                                              
*                                                                               
         DROP  BR                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  AMODE24 -- Routine to switch back to 24-bit addressing mode.                 
*                                                                               
*    MILTEN note:                                                               
*       Milten generally does not run in 31-bit...  the biggest                 
*       problem is that the MILTEN PROC/PEND routines don't work                
*       in 31 bit mode!  So be careful, only stay in 31-bit mode                
*       for a very short time!                                                  
*                                                                               
         ENTRY AMODE24                                                          
AMODE24  ST    RAR,0(R13)          Save return address                          
         ST    BR,4(R13)           Save base register                           
         ST    R2,8(R13)           Save work register                           
         BASE                                                                   
*                                                                               
         IF    CVFXA,BEGIN         XA mode...                                   
         LA    R2,A24GO                                                         
         BSM   0,R2                Return to 24 bit mode                        
*                                                                               
A24GO    LABEL                                                                  
         END                                                                    
*                                                                               
         L     R2,8(R13)           Restore work register                        
         L     BR,4(R13)           Restore base register                        
         L     RAR,0(R13)          Restore return address                       
         BR    RAR                                                              
*                                                                               
         DROP  BR                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  KEYZERO -- Routine to change to PSW key zero.                                
*                                                                               
         ENTRY KEYZERO                                                          
KEYZERO  MODESET EXTKEY=ZERO                                                    
         BR    RAR                                                              
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  KEYNZERO -- Routine to change back to our Address Space key.                 
*                                                                               
         ENTRY KEYNZERO                                                         
KEYNZERO LR    R15,R2                                                           
         LC    R2,CVKEY                                                         
         MODESET KEYADDR=(2)       Our key                                      
         LR    R2,R15                                                           
         BR    RAR                                                              
         EJECT                                                                  
*box                                                                            
*                                                                               
*  GETFEB -- Routine to get FEB.                                                
*                                                                               
*    On entry:                                                                  
*      R0 - FEB length                                                          
*                                                                               
*    On exit:                                                                   
*      R1 - new FEB ptr                                                         
*                                                                               
GETFEB   XPROC                                                                  
         FAIL  (R0,LT,L'FEB),'GETFEB length error.'                             
*                                                                               
         LA    R1,FEBSUBPL                                                      
         LR    R2,RAR                                                           
         VCALL NGETCORE                                                         
*                                                                               
         WITH  (FEB,R1)                                                         
         LR    R2,R1               FEB                                          
         LR    R3,R0               Len                                          
         CLEAR R15                                                              
         MVCL  R2,R14              Zero FEB                                     
         MVC   FEB(4),=CL4'FEB'                                                 
         INCR  R15,CVFEBID                                                      
         STH   R15,FEBID           Save FEB identifier                          
*                                                                               
         CLEAR R15                 (neatness)                                   
         PEND                                                                   
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FREEFEB -- Routine to free FEB.                                              
*                                                                               
*    On entry:                                                                  
*      R1 - FEB ptr                                                             
*                                                                               
FREEFEB  XPROC                                                                  
         LR    FEBR,R1                                                          
         WITH  FEB                                                              
         FAIL  (FEB,NE,'FEB'),'FREEFEB error.'                                  
*                                                                               
         LA    R1,FEB                                                           
         ACALL TIMERPRG            Delete any timers                            
*                                                                               
         LA    R5,CVFEBQH-(FEBLINK-FEB)  dummy first entry                      
         LOOP  BEGIN                                                            
         WITH  (FEB,R5)                                                         
         LR    R4,R5               Prev ptr                                     
         WHILE ('LT R5,FEBLINK',NZ)                                             
         IF    (FEBR,EQ,R5),FREEFEBQ                                            
         END                                                                    
         FAIL  'Bad FEBQ'          FEB not on queue                             
*                                                                               
FREEFEBQ L     R15,FEBLINK         Next entry                                   
         ST    R15,FEBLINK-FEB(,R4)  dequeue                                    
*                                                                               
         IF    ('LT R1,FEBPATP',NZ),'VCALL FREECORE; CLEAR FEBPATP'             
*                                                                               
         IF    (FEBTRCP,NZ),'LA R15,FEBTRCP; ACALL FREETRC'                     
*                                                                               
         MVC   FEB(4),=C'OFEB'                                                  
         LR    R1,FEBR                                                          
         VCALL FREECORE                                                         
*                                                                               
         CLEAR R15                 (neatness)                                   
         PEND                                                                   
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  GETPIB -- Routine to get PIB.                                                
*                                                                               
*    On entry:                                                                  
*      R0 - PIB length                                                          
*                                                                               
*    On exit:                                                                   
*      R1 - new PIB ptr                                                         
*                                                                               
GETPIB   XPROC                                                                  
         FAIL  (R0,LT,L'PIB),'GETPIB length error.'                             
*                                                                               
         LA    R1,PIBSUBPL                                                      
         LR    R2,RAR                                                           
         VCALL NGETCORE                                                         
*                                                                               
         WITH  (PIB,R1)                                                         
         LR    R2,R1               PIB                                          
         LR    R3,R0               Len                                          
         CLEAR R15                                                              
         MVCL  R2,R14              Zero PIB                                     
         MVC   PIB(4),=CL4'PIB'                                                 
*                                                                               
         CLEAR R15                 (Neatness)                                   
         PEND                                                                   
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FREEPIB -- Routine to free PIB.                                              
*                                                                               
*    On entry:                                                                  
*      R1 - PIB ptr                                                             
*                                                                               
FREEPIB  XPROC                                                                  
         LR    PIBR,R1                                                          
         WITH  PIB                                                              
         FAIL  (PIB,NE,'PIB'),'FREEPIB error.'                                  
         FAIL  (PIBSCBP,NZ),'FREEPIB SCB error.'                                
*-                                                                              
*-       The FEB contains an address table of PIBs (called the PAT);            
*-      in order to free the PIB we must also remove it's pointer in            
*-       the PAT.                                                               
*-                                                                              
         LT    FEBR,PIBFEBP        This port's FEB                              
         IF    NZ,BEGIN            OK...                                        
         WITH  FEB                                                              
         FAIL  (FEB,NE,'FEB'),'Bad FEB ptr.'                                    
*                                                                               
         LH    R2,PIBNO            Port number                                  
         SLL   R2,2                Times 4                                      
         A     R2,FEBPATP          Address in PAT of this PIB                   
         LT    R15,@R2             PIB ptr from PAT                             
         IF    NZ,BEGIN            We have something...                         
         FAIL  (PIBR,NE,R15),'Bad PIB ptr.'                                     
         CLEAR (@R2,4)             Zero PIB ptr in PAT                          
         END                                                                    
         END                                                                    
*-                                                                              
*-       Delete any timers that may have been set for this port.                
*-                                                                              
         LA    R1,PIB                                                           
         ACALL TIMERPRG            Delete any timers                            
*-                                                                              
*-       Free PIB trace table.                                                  
*-                                                                              
         IF    (PIBTRCP,NZ),'LA R15,PIBTRCP; ACALL FREETRC'                     
*-                                                                              
*-       Free the PIB.                                                          
*-                                                                              
         MVC   PIB(4),=C'OPIB'                                                  
         LA    R1,PIB                                                           
         VCALL FREECORE                                                         
*                                                                               
         CLEAR R15                 (neatness)                                   
         PEND                                                                   
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  GETSCB -- Routine to get SCB.                                                
*                                                                               
*    On entry:                                                                  
*      R0 - SCB length                                                          
*      R1 - PIB ptr (SCB will be linked to this PIB)                            
*                                                                               
*    On exit:                                                                   
*      R1 - new SCB ptr                                                         
*                                                                               
GETSCB   XPROC                                                                  
         LR    PIBR,R1                                                          
         WITH  PIB                                                              
         FAIL  (PIB,NE,'PIB'),'Bad PIB ptr.'                                    
         L     FEBR,PIBFEBP                                                     
         WITH  FEB                                                              
         FAIL  (FEB,NE,'FEB'),'Bad FEB ptr.'                                    
*                                                                               
         FAIL  (R0,NE,L'SCB),'GETSCB length error.'                             
         LR    R3,R0                                                            
*                                                                               
         L     R5,CVSATP           Start of session address table               
         LH    R6,CVMAXSES                                                      
         SLL   R6,2                                                             
         AR    R6,R5                                                            
         CLEAR R15                 (For loop)                                   
         WHILE (R5,LT,R6),BEGIN                                                 
         IF    ('C R15,@R5',EQ),GOTSATP  Free entry                             
         LA    R5,@R5+4                                                         
         END                                                                    
         FAIL  'Too many sessions.'  Not enough sessions genned                 
*                                                                               
GOTSATP  LR    R4,R5                                                            
         S     R4,CVSATP                                                        
         SRL   R4,2                Session index number                         
         LA    R15,SCBCELLS        Obtain SCB from the pool                     
         VCALL GETPOOL                                                          
         LR    SCBR,R1                                                          
         WITH  SCB                                                              
         ZOT   SCB,(R3)                                                         
         MVC   SCB(4),=CL4'SCB'                                                 
         LA    R15,1                                                            
         A     R15,CVSCBID                                                      
         ST    R15,SCBID           Unique session number                        
         ST    R15,CVSCBID                                                      
         STH   R4,SCBNO            Save index number                            
         LA    R15,SCBAWRQH        Async write queue head                       
         ST    R15,SCBAWRQT        Make tail accurate                           
*                                                                               
         L     R15,CVSCBQH         SCB queue head                               
         ST    R15,SCBLINK                                                      
         ST    SCBR,CVSCBQH        Put new entry at start                       
*                                                                               
         ST    SCBR,@R5            Put addr in SAT                              
*                                                                               
         ST    SCBR,PIBSCBP        Link SCB to PIB                              
         ST    PIBR,SCBPIBP        Link PIB to SCB                              
         MVC   SCBTYPE,FEBTYPE     Set front-end type                           
         IF    PIBFPS,'SET SCBSFPS'  Set pseudo session                         
         IF    PIBFSEC,'SET SCBSFSEC'  Set secure session                       
         IF    PIBFOP,'SET SCBSFOP'  Set operator session                       
         IF    PIBFSESTRC,'SET SCBFTRC'  Set session tracing                    
         IF    PIBFSESKEEP,'SET SCBFKEEP'  Set to keep corpse                   
         IF    PIBFTEL+PIBFTYM,'SET SCBFNECH'  Noecho default                   
         MVC   SCBTID,PIBTID       Set terminal id                              
         MVC   SCBACCT,PIBDFACT    Set default account (if any)                 
         IF    (SCBACCT,NZ),BEGIN  Pre-logged on...                             
         ACALL MAKESTAG            Make a session tag                           
         LA    R1,SCB                                                           
         ACALL INCRSES             Count the logged on user                     
         END                                                                    
*                                                                               
         SET   SCBFUPL             Set uplow default                            
         SET   SCBFVFAST           Set VFAST default                            
         MVC   SCBWID,=H'80'       Width                                        
         MVC   SCBHEIP(4),=H'0,24' Pause height, actual                         
         MVC   SCBTETYP,PIBTETYP   Save SMF port type                           
*                                                                               
         LH    R0,SCBNO                                                         
         ACALL SINEALLO            Create SIN in ECSA                           
         ST    R1,SCBSINP          Save our SIN ptr in SCB                      
*                                                                               
         LR    R1,SCBR                                                          
         CLEAR R15                 (Neatness)                                   
         PEND                                                                   
SCBCELLS CELLBLOK SIZE=L'SCB,SUBPOOL=SCBSUBPL                                   
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  MAKESTAG -- Local routine to make a new session tag.  The tag                
*    must be a unique identification of this session for all time.              
*                                                                               
*    Note added by MPD: Which this is not ("unique") as implied                 
*                       above.                                                  
*                                                                               
*    The session tag is a 16 character field of the form:                       
*                                                                               
*           A9075-1204-00001                                                    
*                                                                           
*           |   |    |     *---- session counter (reset on IPL)                 
*           |   |    *---------- hh:mm of last ipl                              
*           |   *--------------- current date                                   
*           *------------------- machine ID                                     
*                                                                               
MTWA     RECORD BEGIN                                                           
MTDOUB   DS    D                   Working doubleword                           
MTTEMP   DS    CL16                Formatting work area                         
         END                                                                    
*-                                                                              
MAKESTAG XPROC MTWA                                                             
         WITH  SCB                                                              
         FAIL  (SCB,NE,'SCB'),'MAKESTAG error.'                                 
*                                                                               
         L     R6,CVTPTR                                                        
         WITH  (CVT,R6)                                                         
*                                                                               
         MVC   SCBSTAG,=C'X????-XXXX-00000'  Preset                             
*                                                                               
         L     R1,CVTSMCA          SMF SMCA ptr                                 
         WITH  (SMCABASE,R1),'MVC SCBSTAG(1),SMCASID+3'  System-id              
*                                                                               
         VCALL LOCALTOD            Want current date                            
         VCALL TIMEDATE            Get date (0yyyyddd)                          
         LR    R5,R1               Save current date for later                  
         CLEAR MTDOUB                                                           
*                                                                               
*  Convert the 0YYYYDDD to the old style 00YYDDDF format                        
*                                                                               
         SLL   R1,4                Make room for packed sign                    
         ST    R1,MTDOUB+4                                                      
         MVI   MTDOUB+4,0          Clear out century                            
         OI    MTDOUB+7,X'0F'      Add in packed sign                           
*                                                                               
         CVB   R15,MTDOUB          Get "yyddd" in binary                        
         A     R15,=A(100000)      Insure high order zeros                      
         BTD   SCBSTAG+1,4,(R15)   Add "yddd" to session tag                    
*-                                                                              
*-       We need the SCIPCVT to finish building the session tag.                
*-                                                                              
         L     R4,CVTUSER          SCIPCVT ptr                                  
         WITH  (USERCVT,R4)                                                     
*                                                                               
         IF    (USERCVT,EQ,'SCIP'),BEGIN  Must be genuine...                    
         LM    R0,R1,USEIPLTM      Get IPL time/date                            
         LA    R15,MTTEMP          Put "hh:mm:ss.hh" here                       
         VCALL FMTTIME                                                          
         MVC   SCBSTAG+6(2),MTTEMP   IPL hour                                   
         MVC   SCBSTAG+8(2),MTTEMP+3  IPL minutes                               
*                                                                               
         VCALL KEYZERO             ********                                     
         LOOP  BEGIN                                                            
         L     R2,USEACTR          Current session number counter               
         LR    R3,R2                                                            
         IF    (R5,NE,USEADATE),'CLEAR R3; ST R5,USEADATE'  Reset               
         A     R3,=F'1'            Kick counter by 1                            
         CS    R2,R3,USEACTR       Update the SCIPCVT field                     
         UNTIL EQ                                                               
         END                                                                    
         VCALL KEYNZERO            ********                                     
*                                                                               
         AL    R3,=F'100000'       Force high order zeros                       
         BTD   SCBSTAG+11,5,(R3)   Add session number                           
         END                                                                    
*                                                                               
         PEND                                                                   
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FREESCB -- Routine to free SCB.                                              
*                                                                               
*    On entry:                                                                  
*      R1 - SCB ptr                                                             
*                                                                               
FREESCB  XPROC                                                                  
         LR    SCBR,R1                                                          
         WITH  SCB                                                              
         FAIL  (SCB,NE,'SCB'),'FREESCB error.'                                  
*-                                                                              
*-       Delete any session timers.                                             
*-                                                                              
         LA    R1,SCB                                                           
         ACALL TIMERPRG            Delete any session timers                    
*-                                                                              
*-       Remove SCB linkage in PIB.                                             
*-                                                                              
         LT    R5,SCBPIBP          Session ptr to PIB                           
         IF    NZ,BEGIN            We have one...                               
         WITH  (PIB,R5)                                                         
         IF    (PIB,NE,'PIB'),'QSNAP "FREESCB ptr error."'                      
         IF    (PIB,NE,'PIB'),EXIT                                              
         CLEAR SCBPIBP,PIBSCBP     Remove queue ptrs                            
         END                                                                    
*-                                                                              
*-       Tidy up SCB.                                                           
*-                                                                              
         MVC   SCBSUB,CVMNAME      Set 'Milten' as subsystem name               
*-                                                                              
*-       Keep the session around (so the trace buffers remain                   
*-         available) if requested.                                             
*-                                                                              
         IF    SCBFKEEP,BEGIN      Keep session around...                       
         CLEAR SCBFKEEP,SCBFTRC    Reset flags                                  
         SET   SCBFKEPT            Mark session as "kept"                       
*                                                                               
         L     R2,CVKSCBS          Get oldest kept SCB ptr                      
         MVC   CVKSCBS(CVKSCBLEN-4),CVKSCBS+4  Move everyone up                 
         ST    SCBR,CVKSCBS+CVKSCBLEN-4  Save our SCB at bot of Q               
*                                                                               
         LTR   SCBR,R2             Finish up freeing this SCB now               
         IF    Z,FSCBEXIT          Nothing to free, all done                    
         FAIL  (SCB,NE,'SCB'),'FREESCB kept error.'                             
         END                                                                    
*-                                                                              
*-       If we are trying to free a KEPT session then take the SCB              
*-         ptr out of the kept list.                                            
*-                                                                              
         IF    SCBFKEPT,BEGIN      Get rid of kept SCB's ptr...                 
         LA    R2,CVKSCBS          Start of kept SCB list                       
         LA    R3,CVKSCBS+CVKSCBLEN  End of list                                
         WHILE (R2,LT,R3),BEGIN    Go through list...                           
         L     R15,@R2             Get SCB ptr                                  
         IF    (R15,EQ,SCBR),'CLEAR (@R2,4)'  Zero ptr                          
         LA    R2,@R2+4            Next entry                                   
         END                                                                    
         END                                                                    
*-                                                                              
*-       Free any trace buffers.                                                
*-                                                                              
         CLEAR SCBFTRC             No longer tracing                            
*                                                                               
         WHILE (SCBTRCQH,NZ),BEGIN  We have trace entries...                    
         L     R2,SCBTRCQH         Get first STRC entry                         
         WITH  (STRC,R2)                                                        
         MVC   SCBTRCQH,STRCLINK   De-queue this entry                          
         IF    (SCBTRCQH,Z),'CLEAR SCBTRCQT'  No queue tail                     
*                                                                               
         MVC   STRC(4),=C'strc'    Change control block ID                      
         MVC   STRCLINK,=F'-1'     Zap link ptr (safety)                        
         LA    R1,STRC                                                          
         VCALL FREECORE            Release trace entry                          
         END                                                                    
*-                                                                              
*-       Remove ourselves from the SCB queue.                                   
*-                                                                              
         LA    R5,CVSCBQH-(SCBLINK-SCB)  Dummy first entry                      
         LOOP  BEGIN                                                            
         WITH  (SCB,R5)                                                         
         LR    R4,R5                                                            
         WHILE ('LT R5,SCBLINK',NZ)                                             
         IF    (SCBR,EQ,R5),FREESCBQ                                            
         END                                                                    
         FAIL  'Bad SCBQ'          SCB not on queue                             
*                                                                               
FREESCBQ MVC   SCBLINK-SCB(4,R4),SCBLINK  dequeue                               
         MVC   SCBLINK,=F'-1'      Safety                                       
*                                                                               
         LH    R0,SCBNO                                                         
         ACALL SINEFREE            Release SIN entry in ECSA                    
*                                                                               
         LH    R15,SCBNO                                                        
         SLL   R15,2                                                            
         A     R15,CVSATP          This SCB's SAT entry                         
         CLEAR (@R15,4)            Free entry                                   
         MVC   SCB(4),=C'OSCB'                                                  
         LA    R1,SCB                                                           
         L     R15,=A(SCBCELLS)                                                 
         VCALL FREEPOOL                                                         
*                                                                               
FSCBEXIT CLEAR R15                 (Neatness)                                   
         PEND                                                                   
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SINTALLO -- Routine to initialize CSA session information table              
*    This is an address table of SIN pointers for each session.                 
*                                                                               
SINTALLO PROC                                                                   
         FAIL  (CVSITP,NZ),'CSA session table error.'                           
*                                                                               
*         ACALL AMODE31             ********                                    
*                                                                               
         LH    R3,CVMAXSES         Max no. of sessions                          
         SLL   R3,2                Times 4                                      
         GETMAIN RU,LV=(R3),SP=241,LOC=ANY  Get ECSA storage                    
         ST    R1,CVSITP           Save session table ptr                       
         LR    R2,R1               For MVCL                                     
         CLEAR R1                                                               
         MVCL  R2,R0               Initialize SIN table to zeros                
*                                                                               
*         ACALL AMODE24             ********                                    
*                                                                               
         PEND                                                                   
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SINTFREE -- Routine to free CSA session information table.                   
*    This routine also checks for any straggling session entries                
*    and frees those too.                                                       
*                                                                               
SINTFREE XPROC                                                                  
*-                                                                              
*-       Free session information table and session information                 
*-         entries if they have been initialized.                               
*-                                                                              
*         ACALL AMODE31             ********                                    
*                                                                               
         IF    (CVSITP,NZ),BEGIN   Free SIN table...                            
         L     R4,CVSITP           Session info table ptr                       
*-                                                                              
*-       Free any session information entries.                                  
*-                                                                              
         LH    R3,CVMAXSES         Max no. of sessions                          
         WHILE (R3,POS),BEGIN      Go through sessions...                       
         L     R5,@R4              Any SIN for this session?                    
         IF    (R5,POS),BEGIN      Yes, free it...                              
         CLEAR (@R4,4)             Zap SIN ptr                                  
*                                                                               
         WITH  (SIN,R5)                                                         
         IF    (SIN,EQ,'SIN'),BEGIN  It's a valid entry...                      
         MVC   SIN(4),=C'ZSIN'     Change ID                                    
         LA    R2,SIN              SIN addr                                     
         LH    R0,SINLEN           SIN length                                   
         FREEMAIN RU,A=(R2),LV=(0),SP=241  Release this SIN                     
         END                                                                    
         END                                                                    
*                                                                               
         LA    R4,@R4+4            Next SIN entry                               
         DECR  R3                                                               
         END                                                                    
*-                                                                              
*-       Now free the session information table.                                
*-                                                                              
         L     R2,CVSITP           Session information table ptr                
         LH    R0,CVMAXSES         Max no. of sessions                          
         SLL   R0,2                Times 4                                      
         FREEMAIN RU,A=(R2),LV=(0),SP=241  Free session table                   
*                                                                               
         CLEAR CVSITP              Neatness                                     
         END                                                                    
*                                                                               
*         ACALL AMODE24             ********                                    
         PEND                                                                   
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SINEALLO -- Routine to initialize CSA session information entry.             
*                                                                               
*    On entry:                                                                  
*       R0 - session number                                                     
*                                                                               
*    On exit:                                                                   
*       R1 - newly created SIN ptr                                              
*                                                                               
SINEALLO PROC  (R2,LSR)                                                         
         LR    R5,R0               Save session number                          
         FAIL  ((R5,NEG),OR,(R5,GE,CVMAXSES)),'SINEALLO error.'                 
*                                                                               
*         ACALL AMODE31             ********                                    
*-                                                                              
*-       Get new session information entry (from ECSA).                         
*-                                                                              
         LA    R3,L'SIN                                                         
         GETMAIN RU,LV=(R3),SP=241,LOC=ANY  Get ECSA storage                    
         LR    R4,R1               Save new SIN ptr                             
         LR    R2,R1               For MVCL                                     
         CLEAR R1                                                               
         MVCL  R2,R0               Initialize SIN table to zeros                
*                                                                               
         WITH  (SIN,R4),BEGIN                                                   
         MVC   SIN(4),=C'SIN '                                                  
         MVC   SINLEN,=AL2(L'SIN)                                               
         STH   R5,SINNO            Save session number                          
         END                                                                    
*-                                                                              
*-       Add SIN ptr to address table.                                          
*-                                                                              
         LR    R15,R5                                                           
         SLL   R15,2                                                            
         L     R2,CVSITP                                                        
         FAIL  (R2,Z),'SINEALLO table ptr error.'                               
         AR    R15,R2                                                           
         L     R1,@R15             Get old SIN ptr from table                   
         FAIL  (R1,NZ),'SINEALLO table entry error.'                            
         ST    R4,@R15             Save our SIN ptr in session table            
*                                                                               
*         ACALL AMODE24             ********                                    
*                                                                               
         LR    R1,R4               Newly created SIN ptr                        
         CLEAR R15                 (Neatness)                                   
         PEND                                                                   
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SINEFREE -- Routine to free CSA session information entry.                   
*                                                                               
*    On entry:                                                                  
*      R0 - session number                                                      
*                                                                               
SINEFREE PROC                                                                   
         LR    R5,R0                                                            
         FAIL  ((R5,NEG),OR,(R5,GE,CVMAXSES)),'SINEFREE error.'                 
*                                                                               
*         ACALL AMODE31             ********                                    
*                                                                               
         LR    R15,R5                                                           
         SLL   R15,2                                                            
         AL    R15,CVSITP                                                       
         L     R4,@R15             Get SIN ptr from session table               
         CLEAR (@R15,4)            Zero SIN ptr in table                        
*                                                                               
         WITH  (SIN,R4)                                                         
         FAIL  (SIN,NE,'SIN'),'SINEFREE id error.'                              
*                                                                               
         MVC   SIN(4),=C'OSIN'     Change ID                                    
         LA    R2,SIN              SIN addr                                     
         LH    R0,SINLEN           SIN length                                   
         FREEMAIN RU,A=(R2),LV=(0),SP=241  Release this SIN                     
*                                                                               
*         ACALL AMODE24             ********                                    
         PEND                                                                   
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SINEUPD -- Local routine to update session information in CSA.               
*    This routine gets called a lot so performance is a                         
*    consideration here.                                                        
*                                                                               
SINEUPD  XPROC                                                                  
         WITH  SCB                 (Entry assumptions)                          
         FAIL  (SCB,NE,'SCB'),'Bad SCB ptr'                                     
*                                                                               
         L     R7,SCBSINP                                                       
         WITH  (SIN,R7)                                                         
*         ACALL AMODE31             ********                                    
         FAIL  (SIN,NE,'SIN'),'SINEUPD error.'                                  
*-                                                                              
*-       Update basic session information.                                      
*-                                                                              
         MVC   SINSTAG,SCBSTAG     Copy unique session tag                      
         MVC   SINID,SCBID         Unique session ID                            
         MVC   SINSUB,SCBSUB       Current subsystem                            
*                                                                               
         MVC   SINLCLCK,SCBLCLCK   Clock at logon time                          
         MVC   SINTIO,SCBNIO       Number of terminal I/O's                     
*                                                                               
         MVC   SINACCT(L'SINACCT+L'SINANO),SCBACCT  Copy account                
         MVC   SINUID,CVBLANKS     (No "userid" implemented yet)                
         MVC   SINNAME,SCBNAME     User name                                    
*-                                                                              
*-       Update front-end and port information.                                 
*-                                                                              
         IF    ('LT R2,SCBPIBP',NZ),BEGIN  We have port info...                 
         WITH  (PIB,R2)                                                         
         IF    (PIB,NE,'PIB'),EXIT                                              
         MVC   SINPORT,PIBNAME     Save port name                               
*                                                                               
         IF    ('LT R3,PIBFEBP',NZ),BEGIN  We have front-end info...            
         WITH  (FEB,R3)                                                         
         IF    (FEB,NE,'FEB'),EXIT                                              
         MVC   SINFE,FEBNAME       Save front-end name                          
         END                                                                    
         END                                                                    
*-                                                                              
*-       Update ORVYL session information.                                      
*-                                                                              
         MVC   SINVINFO,SCBVINFO   Save ORVYL accounting information            
*                                                                               
*         ACALL AMODE24             ********                                    
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  UNPRESS -- Unpresses a line in WYLBUR edit format.                           
*                                                                               
*    On entry:                                                                  
*      R15- pressed line ptr (before lineno)                                    
*      R1 - unpress area (at least &LINESZ bytes)                               
*                                                                               
*    On exit:                                                                   
*      R1,R0 - unpress loc, len                                                 
*      R15   - WYLBUR line-number                                               
*                                                                               
UNPRESS  PROC  (R1,LSR)                                                         
         MVC   CVWORK(4),@R15      Make aligned line-no available               
         MVI   @R1,C' '            Blank return area                            
         MVC   @R1+1(&LINESZ-1),@R1                                             
         LA    R1,@R1              Make sure 1st byte clear                     
         LCR   R0,R1               Set r0 for length calc at end                
         LC    R5,@R15+4           Get total line length                        
         LTR   R5,R5               Is it a null line                            
         BZ    FINUNP              Br yes                                       
         LA    R6,X'0F'            Put mask in r2                               
         LA    R2,1                Set r2 for bxle step                         
         DECR  R5                  Set r5 so that end of line                   
         LA    R3,@R15(R5)         Point r3 to end for bxle                     
MORECH   IC    R5,@R15+5           Get blank-char control byte                  
         LR    R4,R5               Put in r4 also                               
         SRL   R5,4                Shift to get blank count                     
         AR    R1,R5               Move output ptr over blanks                  
         NR    R4,R6               Mask to get non-blank count                  
         BZ    ALLBLS              No move if zero count                        
         LR    R5,R4               Put count in r5                              
         DEX   R5,'MVC @R1(0),@R15+6' Move text to output                       
         AR    R15,R4              Bump input ptr past text                     
         AR    R1,R4               Bump output ptr past text                    
ALLBLS   BXLE  R15,R2,MORECH       Add 1 (in r2) to input ptr                   
*                       (in r15) and branch if <= end (in r3)                   
* note that this now falls through even for an invalid pressed                  
*      line.  for a valid line (r3+1) must equal r15 but there                  
*      is no reason to check because there is no good recovery                  
*      if the line happens to be invalid.                                       
FINUNP   L     R15,CVWORK          Line-no to r15                               
         AR    R0,R1               Calc total length of line                    
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         TITLE 'Dispatcher'                                                     
*box                                                                            
*                                                                               
*  DISPATCH -- Main dispatcher entry point.                                     
*                                                                               
         ENTRY DISPATCH                                                         
DISPATCH BASE                                                                   
DISPLOOP STKINIT L:CVSTKP,4096     Reset stack                                  
         CLEAR CVCUR                                                            
*                                                                               
         WAIT  ECBLIST=CVECBLIS                                                 
*                                                                               
         CLEAR CVECB                                                            
*                                                                               
         VCALL SERVDO              Check milserv SVC requests                   
*-                                                                              
*-       Check for commands.                                                    
*-                                                                              
         VCALL MCOMDO              Check for commands                           
*-                                                                              
*-       Check all subsystems for work.                                         
*-                                                                              
         VCALL SUBDO               Check subsystem requests                     
*-                                                                              
*-       Check each front-end for work.                                         
*-                                                                              
         L     R7,CVFEBQH          First front-end                              
         LOOP  BEGIN                                                            
*                                                                               
         LR    FEBR,R7                                                          
         WITH  FEB                                                              
         L     R7,FEBLINK          Next ptr                                     
*                                                                               
         LA    R1,FEB                                                           
         LC    RAR,FEBTYPE                                                      
         IF    (RAR,GT,FEBTMAX),'CLEAR RAR'                                     
         SLL   RAR,2                                                            
         LT    RAR,POSTFE(RAR)                                                  
         IF    NZ,BEGIN                                                         
         ST    R1,CVCURFEB                                                      
         BALR  RAR,RAR             Front-end post routine                       
         CLEAR CVCUR                                                            
         END                                                                    
         UNTIL (R7,Z),END                                                       
*                                                                               
DISPTIME IF    ('LT R7,CVTQEQH',NZ),BEGIN  chk for timer expiration...          
         WITH  (TQE,R7)                                                         
         STCK  @R13                Current tod clock                            
         IF    (TQECLCK,LE,@R13),BEGIN  timer expired...                        
         FAIL  (TQE,NE,'TQE'),'Bad TQE ptr.'                                    
         L     R15,TQELINK         Next entry                                   
         IF    (R15,NZ),'MVC TQEBACK-TQE(4,R15),TQEBACK'  back                  
         ST    R15,CVTQEQH         Dequeue & re-link                            
         LM    R2,R3,TQERTN                                                     
         MVC   TQE(4),=C'OTQE'                                                  
         LA    R1,TQE                                                           
         VCALL FREECORE                                                         
         LR    R1,R3               Parm ptr                                     
         BALR  RAR,R2              Go to exit routine                           
         B     DISPTIME                                                         
         END                                                                    
*                                                                               
         IF    ^CVFTIMER,BEGIN     Time to set a new timer...                   
         LM    R2,R3,TQECLCK                                                    
         SDL   R2,@R13                                                          
         D     R2,=F'40960000'     Convert to .01 sec                           
         IF    (R2,NZ),'INCR R3'   To next .01 sec                              
         IF    (R3,NP),'LA R3,1'                                                
         SET   CVFTIMER                                                         
         ST    R3,CVWORK                                                        
         STIMER REAL,TIMREXIT,BINTVL=CVWORK                                     
         END                                                                    
         END                                                                    
*                                                                               
         B     DISPLOOP                                                         
*                                                                               
         DROP  BR                                                               
         EJECT                                                                  
*  timer exit routine -- post MILTEN and return                                 
TIMREXIT WITH  (TIMREXIT,R15),BEGIN                                             
         STM   R0,R15,@R13                                                      
         L     CVR,=A(CV)                                                       
         CLEAR CVFTIMER            Timer no longer active                       
         POST  CVECB                                                            
         LM    R0,R15,@R13                                                      
         BR    RAR                                                              
         END                                                                    
         SPACE 2                                                                
POSTFE   DC    A(0)                FEB post table                               
         DC    V(CONSPOST)         FEBTCONS                                     
*         DC    V(ASYNPOST)         FEBTASYN                                    
         DC    A(0)                NO FEBTASYN                                  
*         DC    V(PDPPOST)          FEBTPDP                                     
         DC    A(0)                NO FEBTPDP                                   
*         DC    V(VTAMPOST)         FEBTVTAM                                    
         DC    A(0)                NO FEBTVTAM                                  
         DC    V(VIRTPOST)         FEBTVIRT                                     
*         DC    V(NSCPOST)          FEBTNSC                                     
         DC    A(0)                NO FEBTNSC                                   
         DC    V(ELFPOST)          FEBTELF                                      
*         DC    V(ALFPOST)          FEBTALF                                     
         DC    A(0)                NO FEBTALF                                   
*         DC    V(ECUPOST)          FEBTECU                                     
         DC    A(0)                NO FEBTECU                                   
POSTFEMX EQU   (*-POSTFE-4)/4,,C'N'                                             
*                                                                               
         DS    0S(POSTFEMX-FEBTMAX,FEBTMAX-POSTFEMX)                            
         TITLE 'Shutdown'                                                       
*box                                                                            
*                                                                               
*  STOPCHK -- Routine to check to see if no (real) users are active             
*    and if "stop" is pending shutdown MILTEN.                                  
*                                                                               
STOPCHK  XPROC                                                                  
         IF    (CVMCRSES,NZ),EXIT                                               
         IF    (CVMCRVIR,NZ),EXIT                                               
*                                                                               
         IF    CVMFSTOP,'CLEAR R0; VCALL SHUTDOWN'  (no return)                 
*                                                                               
         IF    CVFTEST,EXIT                                                     
         SEGCLR CVWSG                                                           
         SEGWR 'No users active.'                                               
         PEND                                                                   
         QLTORG                                                                 
         EJECT                                                                  
***                                                                             
***  Common translate tables                                                    
***                                                                             
         ENTRY UPPTBL,LOWTBL,ASCTBL,EBCTBL,EBCTBL7                              
         ENTRY EPARTBL,NPARTBL,YPARTBL                                          
         ENTRY BLTBL,NBLTBL                                                     
*                                                                               
UPPTBL   DC    256AL1(*-UPPTBL)                                                 
         ORG   UPPTBL+C'a'         Lowercase                                    
         DC    C'ABCDEFGHI'                                                     
         ORG   UPPTBL+C'j'         Lowercase                                    
         DC    C'JKLMNOPQR'                                                     
         ORG   UPPTBL+C's'         Lowercase                                    
         DC    C'STUVWXYZ'                                                      
         ORG                                                                    
*                                                                               
LOWTBL   DC    256AL1(*-LOWTBL)                                                 
         ORG   LOWTBL+C'A'                                                      
         DC    C'abcdefghi'        Lowercase                                    
         ORG   LOWTBL+C'J'                                                      
         DC    C'jklmnopqr'        Lowercase                                    
         ORG   LOWTBL+C'S'                                                      
         DC    C'stuvwxyz'         Lowercase                                    
         ORG                                                                    
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ASCTBL -- Translate table for EBCDIC to ASCII conversion.                    
*       Modified 11/85 to be a 1-to-1 translation by Dick Guertin.              
*                                                                               
         SPACE                                                                  
*                 0 1 2 3 4 5 6 7 8 9 A B C D E F                               
*                                                                               
ASCTBL   DC    X'000102038009817F8283840B0C0D0E0F'   0                          
         DC    X'1011121385860887181988891C1D1E1F'   1                          
         DC    X'8A8B8C8D8E0A171B8F90919293050607'   2                          
         DC    X'94951696979899049A9B9C9D14159E1A'   3                          
         DC    X'20A9A1A2A3A4A5A6AAA85E2E3C282B7C'   4                          
         DC    X'26D1D2D3D4D5D6D7D8D921242A293B7E'   5                          
         DC    X'2D2FB1B2B3B4B5B6B8EE9F2C255F3E3F'   6                          
         DC    X'EACEE8CFE2E7F0E6E9603A2340273D22'   7                          
         DC    X'D0616263646566676869E0ACBCCCCACB'   8                          
         DC    X'DE6A6B6C6D6E6F707172DFADBDCDABA0'   9                          
         DC    X'E5E3737475767778797AAFBEBF5BA7B7'   A                          
         DC    X'C0C1C2C3C4C5C6C7C8C9BABBDC5DEDFE'   B                          
         DC    X'7B414243444546474849DADBDDF9B0F1'   C                          
         DC    X'7D4A4B4C4D4E4F505152F8B9FAFBF2F3'   D                          
         DC    X'5CE1535455565758595AF4F5E4AEF7EF'   E                          
         DC    X'30313233343536373839EBECFCFDF6FF'   F                          
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  EBCTBL -- Translate table for ASCII to EBCDIC conversion.                    
*       Modified 11/85 to be a 1-to-1 translation by Dick Guertin.              
*                                                                               
*                                                                               
         SPACE                                                                  
*                 0 1 2 3 4 5 6 7 8 9 A B C D E F                               
*                                                                               
EBCTBL   DC    X'00010203372D2E2F1605250B0C0D0E0F'   0                          
         DC    X'101112133C3D322618193F271C1D1E1F'   1                          
         DC    X'405A7F7B5B6C507D4D5D5C4E6B604B61'   2                          
         DC    X'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F'   3                          
         DC    X'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6'   4                          
         DC    X'D7D8D9E2E3E4E5E6E7E8E9ADE0BD4A6D'   5                          
         DC    X'79818283848586878889919293949596'   6                          
         DC    X'979899A2A3A4A5A6A7A8A9C04FD05F07'   7                          
         DC    X'040608090A1415171A1B202122232428'   8                          
         DC    X'292A2B2C30313334353638393A3B3E6A'   9                          
         DC    X'9F424344454647AE4941489E8B9BEDAA'   A                          
         DC    X'CE626364656667AF68DBBABB8C9CABAC'   B                          
         DC    X'B0B1B2B3B4B5B6B7B8B98E8F8D9D7173'   C                          
         DC    X'80515253545556575859CACBBCCC909A'   D                          
         DC    X'8AE174A1ECA07775727870FAFBBE69EF'   E                          
         DC    X'76CFDEDFEAEBFEEEDACDDCDDFCFDBFFF'   F                          
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  EBCTBL7 -- Translate table for 7-bit ASCII to EBCDIC conversion.             
*       Use this table when you are translating ASCII where the                 
*       high order bit may or may not be on.                                    
*                                                                               
*       This is NOT a 1-to-1 translation.   Values between 00-7F                
*       and values between 80-FF will translate to the same thing.              
*                                                                               
         SPACE                                                                  
*                 0 1 2 3 4 5 6 7 8 9 A B C D E F                               
*                                                                               
EBCTBL7  DC    X'00010203372D2E2F1605250B0C0D0E0F'   0                          
         DC    X'101112133C3D322618193F271C1D1E1F'   1                          
         DC    X'405A7F7B5B6C507D4D5D5C4E6B604B61'   2                          
         DC    X'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F'   3                          
         DC    X'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6'   4                          
         DC    X'D7D8D9E2E3E4E5E6E7E8E9ADE0BD4A6D'   5                          
         DC    X'79818283848586878889919293949596'   6                          
         DC    X'979899A2A3A4A5A6A7A8A9C04FD05F07'   7                          
         DC    X'00010203372D2E2F1605250B0C0D0E0F'   8                          
         DC    X'101112133C3D322618193F271C1D1E1F'   9                          
         DC    X'405A7F7B5B6C507D4D5D5C4E6B604B61'   A                          
         DC    X'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F'   B                          
         DC    X'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6'   C                          
         DC    X'D7D8D9E2E3E4E5E6E7E8E9ADE0BD4A6D'   D                          
         DC    X'79818283848586878889919293949596'   E                          
         DC    X'979899A2A3A4A5A6A7A8A9C04FD05F07'   F                          
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NPARTBL -- Translate table to force parity bit off.                          
*                                                                               
NPARTBL  DC    128AL1(*-NPARTBL),128AL1(*-NPARTBL-128)                          
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  YPARTBL -- Translate table to force parity bit on.                           
*                                                                               
YPARTBL  DC    128AL1(*-YPARTBL+128),128AL1(*-YPARTBL)                          
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  EPARTBL -- Translate table to force even parity.                             
*                                                                               
         SPACE                                                                  
*                 0 1 2 3 4 5 6 7 8 9 A B C D E F                               
*                                                                               
EPARTBL  DC    X'008182038405068788090A8B0C8D8E0F'   0                          
         DC    X'901112931495961718999A1B9C1D1E9F'   1                          
         DC    X'A02122A324A5A62728A9AA2BAC2D2EAF'   2                          
         DC    X'30B1B233B43536B7B8393ABB3CBDBE3F'   3                          
         DC    X'C04142C344C5C64748C9CA4BCC4D4ECF'   4                          
         DC    X'50D1D253D45556D7D8595ADB5CDDDE5F'   5                          
         DC    X'60E1E263E46566E7E8696AEB6CEDEE6F'   6                          
         DC    X'F07172F374F5F67778F9FA7BFC7D7EFF'   7                          
         DC    X'008182038405068788090A8B0C8D8E0F'   8                          
         DC    X'901112931495961718999A1B9C1D1E9F'   9                          
         DC    X'A02122A324A5A62728A9AA2BAC2D2EAF'   A                          
         DC    X'30B1B233B43536B7B8393ABB3CBDBE3F'   B                          
         DC    X'C04142C344C5C64748C9CA4BCC4D4ECF'   C                          
         DC    X'50D1D253D45556D7D8595ADB5CDDDE5F'   D                          
         DC    X'60E1E263E46566E7E8696AEB6CEDEE6F'   E                          
         DC    X'F07172F374F5F67778F9FA7BFC7D7EFF'   F                          
         EJECT                                                                  
*box                                                                            
*                                                                               
*  BLTBL -- Translate and test table that skips blanks.                         
*                                                                               
BLTBL    DC    256X'FF'                                                         
         ORG   BLTBL+C' '                                                       
         DC    X'00'                                                            
         ORG                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  NBLTBL -- Translate and test table that skips all non-blanks.                
*                                                                               
NBLTBL   DC    256X'00'                                                         
         ORG   NBLTBL+C' '                                                      
         DC    X'FF'                                                            
         ORG                                                                    
*                                                                               
         END   .                                                                
