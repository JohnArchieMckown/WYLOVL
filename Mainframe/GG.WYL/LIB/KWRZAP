//&$KZAP JOB ,'KWRZAP',TIME=9
/*JOBPARM LINES=999,HOLD=OUTPUT
//*  CAREFUL WITH THIS -- IT ZAPS THE REAL THING!
// EXEC HIBALC
KWRZAP   TITLE 'PROGRAM TO ZAP KW RECORDS'
         HIBAL
         COPY  UTYPDEFN
*
KWRZAP   CSECT
*
         DATA  BEGIN
INFILE   DCB   DSORG=PS,MACRF=R,DDNAME=KWRFILE,KEYLEN=5,RECFM=F,       *
               EODAD=EOF
*
KWLIST   DC    0A(0),AL1(KWRCWR),AL3(KWR)
KWR      KWR
         END
*
         BASE  R7
         LA    R13,STACK
         LR    R8,R13
         OPEN  (INFILE,(INPUT))
RDLOOP   READ  RDECB,SF,INFILE,KWR
         CHECK RDECB
         IF    (KWRUSER,EQ,X'FF'),RDLOOP  EMPTY RECORD
         XC    KWRUSER(5),=C'TTMCC'
         XC    KWRPASS,=C'EATATCIT'
         XC    KWRPASS+4(4),KWRPASS
* CHANGE THE KW ENTRY NOW...
         CLEAR KWRR1
         CLEAR KWRR2
         CLEAR KWRR3
         CLEAR KWRR4
         MVC   KWRNTDEF,=H'240'
         MVC   KWRNTMAX,=H'0'
         IF    KWRTACF.KWRTNTM,'CLEAR KWRNTDEF,KWRNTMAX'
* DONE
         LA    R6,3
RETRY    LA    R1,KWLIST
         CLEAR R0                  (NO TTR)
         L     R15,=V(KWEXCP)
         BALR  R14,R15
WAIT     L     R1,=V(KWECB)
         WAIT  ECB=(1)
         L     R15,=V(KWWAIT)
         BALR  R14,R15
         B     WAIT
         IF    KWRHFL.KWRHFUOK,RDLOOP  IT WORKED
         QSNAP 'RE-WRITE FAILED...'
         QSNAP KWRUSER,5
         BCT   R6,RETRY
         ABEND 1,DUMP              SHUCKS
*
EOF      ABEND 0                   ALL DONE
*
U        DS    X
*
BLANKS   DC    CL80' '
STACK    DS    512F
         END   .
// EXEC LKED,COND=(0,NE)
//WYLBUR  DD DSN=WYL.GG.JDN.OBJECT,DISP=SHR
 INCLUDE WYLBUR(WYLKWWR)
 ENTRY KWRZAP
//ZAP EXEC PGM=MAIN,COND=(0,NE)
//KWRFILE DD DSN=SYS2.TEST.COBOL.V2R3,DISP=SHR
//STEPLIB DD DSN=&GOSET,DISP=(OLD,PASS)
