WYL.GG.SLP.DOC#WYLHINTS                      Last updated 10/02/2002
                                                  Susan Plass


         Stanford Timesharing System Troubleshooting Hints


<.+i>WYLBUR Initialization<.i->

WYLBURs are started via procs in SYS1.PROCLIB, each copy of WYLBUR
with its own proc.  Initialization parms may be passed in a SYSIN
file or on the EXEC card.

WYLBUR will start by opening SYSIN to look for a parm file.  All of
our WYLBURs use //SYSIN DD DUMMY, so on to the next place to look
for parms.

Options coded in the EXEC parm string will override any coded in the
SYSIN file.  Of special note, if MEMBER is coded, Wylbur will
replace the default startup exec (INITPROD) with the member
specified.

The last thing done before turning control over to the Dispatcher is
to create a session with a pseudo user primed to execute the startup
exec from WYL.GS.WYL.PARMS.  Many of the startup parameters and most
of the initial environment are defined by this exec.

The following are WYLBUR's startup options:

   NAME        subsystem name
   ORVYL       name of ORVYL to user
   WORD        magic word to restrict logon
   TEST        defines this as a test WYLBUR
   TESTMIL     use test milten path names
   PRODUCTION  indicates this is a production WYLBUR
   RECOVERY,RCVY,A
   NORECOVERY,NORCVY,A
   SKIP,NORCVY,A       (Same as "NORECOVERY")
   WINGS       file access is via WINGS
   OLDIBM      file access is via OLDIBM code
   VISTA       defines this WYLBUR as VISTA, the VLOGON subsystem
   RDEBUG      recovery debugging info wanted
   NOTIFY      notify user gg.uuu when this subsystem is up
   NONOTIFY    don't notify owner of this test WYLBUR when it's up
   [NO]TIMEOUT [dis]allows timeout
   SYSA|SYSB|SYSC|SYSD|SYSE|SYSF sets machine id as specified
   RLG         sets machine id to SYSB
   [NO]SERVWYL this subsystem is a SERVWYL [or not]
   [NO]SMF     create [or not] SMF records
   PAGES       number of pages to get up to 9999
   NTRACE      number of trace entries up to 65535
   TASKS,TASKS,(A,P,PI),50
   MBUFF       set size of Milten buffer rounded to doubleword
   [NO]TRACE   turns off/on XENTER tracing
   [NO]ROTATE  rotate (or not) WYLBUR pages for debugging ONLY!!!
   [NO]RETRY,NORETRY,A
   FORMAT|FMT  equivalent to SKIP
   PFORMAT|PFMT format the WYLBUR page files
   CFORMAT,CFORMAT,A
   CFMT,CFORMAT
   NOCHECK,NOCHECK,A
   NOCHK,NOCHECK
   MANUAL      go through manual recovery
   COMMAND|CMD execute this command before starting up users
   MEMBER      name of startup exec (default is INITPROD)
   NOCOMMAND|NOCMD do not issue initial startup command
   [NO]RUN     allow [or not] job submission
   DUMP,DUMP,A
   NODUMP,NODUMP,A
   [NO]RACF    yes, we have [no] RACF
   [NO]XA      can [not] run in XA mode
   [NO]STAE    establish [or not] a STAE environment
   [NO]SPIE    establish [or not] a SPIE environment
   MAXSES      specify max sessions allowed up to 6000
   /           marks end of initialization parms

Startup execs are stored in WYL.GS.WYL.PARMS.  At initialization,
WYLBUR issues an XCALL to WYL.GS.WYL.PARMS#INITPROD.  or other
member specified via MEM on the EXEC statement parameters.  If this
exec does not run properly, WYLBUR will not initialize correctly.

Extended execs invoked via INITPROD at startup include:

     wyl.gs.wyl.parms#infotabl
     wyl.gs.wyl.parms#hostload
     wyl.gs.wyl.parms#bitload
     wyl.gs.wyl.parms#distload
     wyl.gs.wyl.parms#wcharge
     wyl.gs.wyl.parms#pubload
     wyl.gs.wyl.parms#faxload
     wyl.gs.wyl.parms#setquery

Commands issued via INITPROD at startup include:

         SET WNET
         SET VOPT
         SET CHRISUID
         SET WHOSTS
         SET WTERMINALS
         SET WNEWS
         SET WHELP
         SET WDICTIONARY
         SET WPRINTERS
         SET WFDEF

See also:

     wyl.gs.wyl.parms#pubload
     wyl.gs.wyl.commands#.init
     wyl.gs.wyl.xprocs#.init
     wyl.gs.wyl.source#Mode

--------------------------------------------------------------------
<.page>
<.i+>Pseudo-Commands<.i->

SHO VARS LIKE PUB.SYS

UTIL name executes the file WYL.GA.PUB.LIB#name

SHO PUBLOAD

--------------------------------------------------------------------

<.i+>Local Exits, Variables, etc.<.i->

System data set names are defined in LOCAL:

LOCAL    TITLE 'WYLBUR Local Exits'
*
*  LOCAL is a set of installation dependent subroutines.
*  This is the Stanford version.
*
*
SYSDSNTB DC    A(HELPDIR)           0: Help file directory
         DC    A(HELPFILE)          1: Help file
         DC    A(ERRFILE)           2: ERRORS file
         DC    A(TERMFILE)          3: Terminal file
         DC    A(WORDFILE)          4: Spelling dictionary
         DC    A(*-*)               5: -- Not used (use me!) --
         DC    A(PRINFILE)          6: Printer file
         DC    A(NEWSFILE)          7: News file
         DC    A(HOSTSYSH)          8: SYSH host file
         DC    A(BATMFILE)          9: BATMAIL exec lib
         DC    A(HOSTSYSA)         10: SYSA host file
         DC    A(HOSTRLG)          11: RLG  host file
         DC    A(HOSTSYSC)         12: SUH(SYSC) host file
         DC    A(HOSTSYSD)         13: SYSD host file
SYSDSNMX EQU   (*-SYSDSNTB)/4
*
HELPDIR  SYSDSNID $WYL.GA.PUB.HELPDIR
HELPFILE SYSDSNID $WYL.GA.PUB.HELP
ERRFILE  SYSDSNID $WYL.GA.PUB.ERRORS
TERMFILE SYSDSNID $WYL.GS.WYL.TERMINAL
WORDFILE SYSDSNID $WYL.GS.WYL.WORDS
HOSTSYSA SYSDSNID $WYL.GS.WYL.SYSA.HOSTS
HOSTRLG  SYSDSNID $WYL.GS.WYL.RLG.HOSTS
HOSTSYSC SYSDSNID $WYL.GS.WYL.SYSC.HOSTS
HOSTSYSD SYSDSNID $WYL.GS.WYL.SYSD.HOSTS
HOSTSYSH SYSDSNID $WYL.GS.WYL.SYSH.HOSTS
PRINFILE SYSDSNID $WYL.GS.WYL.PRINTERS
NEWSFILE SYSDSNID $WYL.GA.PUB.NEWS
BATMFILE SYSDSNID $WYL.GS.WYL.LIB

--------------------------------------------------------------------
<.page>
<.i+>HELP<.i->


The process of creating and displaying HELP in WYLBUR begins with
the HELP directory.  The HELP directory is a file defined by the
WYLBUR system data set name entry HELPDIR.  By default this is
WYL.GA.PUB.HELPDIR.  It consists of a list of words (left side)
separated by a colon and then the file name where the help can be
found (right side).

***  NB:  Right now the directory is called HELPDIR.TEST and
***       WYLBUR accepts + in addition to : to indicate the
***       following HELP is privileged.  After this WYLBUR
***       is installed on SYSB, copy over the HELPDIR.TEST to
***       HELPDIR and change LOCAL.
***
***  (Why wait?  HELPDIR is copied to RLG monthly and we don't
***   want to break RLG help!)

When placing a new copy of HELPDIR into production the old copy
should be saved into HELPDIR.BACKUP PUBLIC.

After updating this file, do SET WHELP in each running WYLBUR to
cause the changes to take effect.

Export sites will probably need to change the file names to
correspond with the actual location of the help libraries.  There
are three help libraries which are distributed with STS.  They are:

       DOC.HELP    --  General help
       DOC.WYLHELP --  WYLBUR help (description of WYLBUR commands)
       DOC.ORVHELP --  ORVYL help (description of ORVYL commands)

You may create additional local help libraries by conforming to
format described below.

Note that at Stanford HELPDIR and most help libraries are copied
from SYSA/SYSC to SYSB on the first of each month.  In addition to
the libraries above the following libraries are also copied:

       SCRIPT.HELP -- SCRIPT help (for Waterloo SCRIPT)


HELP Directory Format:

     topic                             : dsname
       topic-alias                     : dsname
       .                               : dsname
       .                               : dsname
       .                               : dsname

Currently the Help Directory references the following files:

    WYL.GA.PUB.FORTHELP -- 23 TRACKS, 2 EXTENTS -- LA:  09/26/01
    WYL.GA.PUB.HELP -- 9 OF 14 TRACKS -- LA:  12/12/01
    WYL.GA.PUB.HELP.FOOD -- 2 OF 5 TRACKS -- LA:  10/25/01
    WYL.GA.PUB.HELP.LOGON (Migrated)
    WYL.GA.PUB.HELP.TERMINAL -- 3 OF 5 TRACKS -- LA:  09/28/01
    WYL.GA.PUB.HELPDIR -- 2 TRACKS -- LA:  12/12/01
    WYL.GA.PUB.SASHELP.V518 -- 110 OF 120 TRACKS -- LA:  04/13/01
    WYL.AM.EIS.WHO.WHO (Migrated)
    WYL.AM.PL9.WHO.WHO -- 1 TRACKS -- LA:  10/05/01
    WYL.GA.PUB.DOC -- 60 OF 106 TRACKS -- LA:  12/12/01
    WYL.GA.PUB.ORVHELP -- 10 OF 23 TRACKS -- LA:  12/12/01
    WYL.GA.PUB.ORVTOOLS (Migrated)
    WYL.GA.PUB.SCRIPT.HELP (Migrated)
    WYL.GA.PUB.WYLHELP -- 33 OF 46 TRACKS -- LA:  12/12/01
    WYL.GS.WYL.HELPINT -- 17 OF 18 TRACKS -- LA:  12/03/01

--------------------------------------------------------------------
<.page>
<.i>MAIL<.i->

Incoming:  WYL.GS.MIL.SYSA.PORTS - look for port 25, should invoke
           WYL.GS.NET.MAILEXEC#SMTP

Outgoing:  WYL.GS.WYL.PARMS#DISTLOAD
           WYL.GS.WYL.DISTLIST
           WYL.GS.WYL.MAIL.ALIASES
           WYL.GS.WYL.SUH.ALIASES
           WYL.GS.WYL.MAIL.FORWARD

The Wylbur module MAIL loads at initialization (or via SET WHOSTS)
a host file based on the systemid of the system it's running on;
for SYSA this is WYL.GS.WYL.SYSA.HOSTS.  See
WYL.GS.WYL.WYLBUR.MACLIB#SYSDSNS for the list of all defined host
files.

For each address, the host file defines how it will be handled.
The mail handler for each address is designated by the GATE parm.
Address spaces which handle outgoing mail:

NETMAIL    This handles outgoing SUNet mail addressed to
           *.STANFORD.EDU and all mail with no other assigned mailer.
           The address space executes WYL.GS.NET.NETMAIL.BATWYL
           with the following parms:
('NETMAIL','NETMAILQ',0,30,'Forsythe.Stanford.EDU','stanford.edu','')

NETMAILC   This handles outgoing SUNet mail to .COM addresses.
           The address space executes WYL.GS.NET.NETMAILC.BATWYL
           with the following parms:
('NETMAILC','NETMAILQ',0,30,'Forsythe.Stanford.EDU','stanford.edu','')

NETMAILS   This handles outgoing SUNet mail to STANFORD.EDU.
           The address space executes WYL.GS.NET.NETMAILS.BATWYL
           with the following parms:
('NETMAILS','NETMAILQ',0,60,'Forsythe.Stanford.EDU','stanford.edu','')

NETMAILL   This handles outgoing external network mail to
           LELAND.STANFORD.EDU.
           The address space executes WYL.GS.NET.NETMAILL.BATWYL
           with the following parms:
('NETMAILL','NETMAILQ',0,600,'Forsythe.Stanford.EDU','stanford.edu','')

NETMAILX   This handles outgoing external network mail to most
           foreign domains, as well as .UUCP, .NET, .GOV, .ORG,
           .MIL, .US, and .BITNET.
           The address space executes WYL.GS.NET.NETMAILX.BATWYL
           with the following parms:
('NETMAILX','NETMAILQ',0,60,'Forsythe.Stanford.EDU','stanford.edu','verb')

NETMAILQ   This handles outgoing SUNet/ARPA mail which must be
           requeued.  Doesn't look like any mail gets sent there
           directly.
           The address space executes WYL.GS.NET.NETMAILQ.BATWYL
           with the following parms:
('NETMAILQ','',1200,60,'Forsythe.Stanford.EDU','stanford.edu','verb')


The BATWYL Script for each NETMAIL job is invoked by
                 xcall wyl.gs.net.mailexec#netmail

NETMAIL exec parms are:

   - mail queue dest to process
   - mail queue dest to which mail is altered if delivery fails
   - interval to wait between queue polls (seconds)
   - timeout interval for network connection open
   - local host name
   - local domain suffix
   - option string
     'verbose' - turns on extra logging
     'save'    - save backup copy of mail



BITMAIL    This handles outgoing BITNET mail.
           The address space executes WYL.GS.NET.BITMAIL.BATWYL

The BATWYL script for BITMAIL job, which processes incoming Bitnet
mail, is invoked by xcall wyl.gs.net.mailexec#bitmail with
the following parms:


('stanford','Forsythe.Stanford.EDU','ge.mai','','gg.jws','verb')


BITMAIL exec file parms are:

    - our Bitnet node name
    - our domain-style name
    - address (ONE ONLY) which receives mail to postmaster
    - addresses which receive mail bounce info
    - addresses which receive processing error info
    - option string
       'debug'   - scan mail but don't process it
       'verbose' - turns on extra logging
       'save'    - save backup copy of mail





Postmaster is defined in WYL.GS.WYL.MAIL.ALIASES

WYL.GS.WYL.WHOEXEC#WHO

   EMS WHO inquiry program.  This extended exec depends on the
   emswho server for its information.

WYL.GS.WYL.WHOEXEC#WHOSERVE

   EMS WHO Server.  This extended exec runs as a "long running"
   virtual terminal session.  It answers requests for name
   information from the data set WYL.GE.EMS.EMS.WHO.

WYL.GS.WYL.LIB#MAKEDIST

   MAKEDIST -- Make WYLBUR mail distribution list table from
   EMS data base and store in the data set WYL.GE.EMS.EMS.WHO.

Equivalent data sets on SYSB are:

         WYL.GS.MIL.RLG.PORTS
         WYL.GS.NET.MAILEXEC#SMTP
         WYL.GS.WYL.RLG.HOSTS

SYSB versions do not match SYSA versions, and the SMTP exec for
SYSB must not look for Christa.

--------------------------------------------------------------------

Wylbur Mail Forwarding

While an account is still active, mail can be forwarded with the
command
                 SET MAIL gg.uuu FORWARD newaddress

Once an account is closed, however, this forwarding stops.  To
continue mail forwarding for a closed account, add an entry like
one of the following:

HG.TES = (SLPLASS@LINDY.STANFORD.EDU)
TEST.CLOSED.ALIAS = (SLPLASS@LINDY.STANFORD.EDU)

to the file WYL.GS.WYL.MAIL.FORWARD.  (Yes, use all caps for the
account or alias, please.)  This will take effect when the EMS WHO
record group is reloaded the next morning at about 4am or so.

Note that an account cannot both be open and have this kind of
mail forwarding:  Wylbur will bounce the mail.  So this change
must be made so that the reload happens after the account is
closed.  There will be a window of some hours in the dark hours
when mail will bounce for this account, but it will hopefully be
less than 12 hours.

--------------------------------------------------------------------

Wylbur Distribution lists

Wylbur maintains a public record group copy of the EMS distribution
lists as of the preceding 2am.  This list is refreshed daily by the
overnight job WYLDAILY (see below).  For this reason, the contents
of a Wylbur list does not always match the same list in EMS.  Once
in a while the refresh process fails overnight.  Use the extended
exec WYL.GS.WYL.PARMS#DISTFIX to fix the error.

To check the contents of a Wylbur distribution list,

         SHO VAL REC_GET(PUB.MAIL_DISTNO,'dist_list_name')

EMSWHO

The command EMS WHO becomes a call to the extended exec
wyl.gs.wyl.commands#EMS.  The command changes account information to
divert charges, then issues the command

         xcall wyl.gq.ems.commands#ems/&(parm_string)

That extended exec parses the WHO parameter and issues the Wylbur
command WHO.  The command WHO becomes call to the extended exec
wyl.gs.wyl.whoexec#who.  (Follow the bouncing ball!)  The WHO exec
opens a path the EMSWHO started task which actually serves back the
directory information.  The started task EMSWHO runs a BATNIZ task
which connects to SERVWYL to handle requests from the EMS WHO
command.


--------------------------------------------------------------------
<.page>
WYLBUR Commands

Privileged EXEC must be in lib beginning WYL.GS.WYL (hard-coded in
XCALL).

--------------------------------------------------------------------

WYLBUR volume list


The WYLBUR volume list is a  module which is loaded in DISK from a
separate (for now) load module library.  The module name loaded is
dependent on the machine name on which this copy of WYLBUR is
running:  WVOLRLG for SYSB, WVOLSYSC for SYSC (should it ever
occur), or WVOL for all other systems.

Reconstructed source for the SYSA volume list has been placed in
WYL.GS.WYL.LIB#WVOLSYSA.  Susan will follow up by recompiling this
module and making it into the production source.  This job stream
compiles and links into the library WYL.GS.WYL.SYSA.LINKLIB.

Source for the SYSB volume list is currently contained in
WYL.GG.WYL.LIB#WVOLRLG on RLGPAK.  This job stream compiles and
links into the library WYL.GS.WYL.RLG.LINKLIB.

--------------------------------------------------------------------

WYLBUR Daily Overnight Processing

Every night a job is SUBMITted on SYSA under the account GS.WYL
which runs BATWYL to execute the exec file in
WYL.GS.WYL.LIB#WYLDAILY.  This exec file does the following:

     1)  Creates a new file of mail distribution lists
         using the exec file WYL.GS.WYL.LIB#MAKEDIST and loads
         it into WYLBUR, TESTWYL, and SERVWYL using the
         exec file WYL.GS.WYL.PARMS#DISTLOAD.

     2)  Creates a new preferred volume list and loads it
         into WYLBUR, TESTWYL, and SERVWYL using the exec file
         WYL.GS.WYL.LIB#SETWVOL.

--------------------------------------------------------------------

WYLBUR Excessive CPU Use

To look for a looping WYLBUR session, get into the errant WYLBUR
and issue the following:

   open
   dump wlines
   sort f/l col 23/30 des
   v

Ignore any long-running production sessions such as gs.net and look
at the top CPU users with

         sho wjcb <line number>

If the number of pages is 1694 (or higher, rarely) and (usually) the
user is in logging off status, you've found a looping max active
user.

To stop the user from looping, issue the command

         wstop <line number>

--------------------------------------------------------------------

WYLBUR Privileged Commands


   VARY VOLUME

         VARY volname [ONLINE | OFFLINE]
                      [ACCESS | NOACCESS]
                      [RESIDENT | NORESIDENT]
                      [SAVE | USE | TEMPORARY | SCRATCH]
                      [NOCLEAR | CLEAR]
                      [PRIVILEGE | NOPRIVILEGE]
                      [SHOW | NOSHOW]
                      [MOUNT]

   Make a volume accessible or (inaccessible) to WYLBUR; used
   primarily for ACTIVE, and MAIL files now.

--------------------------------------------------------------------

WYLBUR System Procedures


See SYSPROC definitions in WYL.GS.WYL.WYLBUR.SOURCE#PROC

--------------------------------------------------------------------

WYLBUR Register Usage Conventions


R0  - FSR      defined in most modules, but I haven't found any use
R1  -
R2  -
R3  -
R4  - DYNWAR   in DYNA, pointer to IOWA (I/O work area)
R5  - JCBR
      PARMLISTR
R6  - JCBR
      IOWAR
      DEBR
R7  - BR
R8  - WAR
      LSR
R9  - PAR
      DCBR     in KWWR
R10 - PBR
      KWRR     in KWWR
R11 - CPR
R12 - CVR
R13 - SPR
R14 - RAR
R15 -

--------------------------------------------------------------------

Forsythe Web Server


Milten receives Web traffic for forsythe.stanford.edu thru Amelia
on elf WEB port 80.  The connection is directed to Wylbur with
the command 'xcall wyl.gs.wyl.server#http /80'.

Traffic to elf WEB port 8080 is directed to Testwyl with the
command 'xcall wyl.gs.wyl.server#testhttp /8080'.

A URL of http://forsythe.stanford.edu will cause the file
WYL.GS.WWW.INDEX.HTML to be served.
wyl.gs.www.weblib#log appends entry to ORV.GS.WWW.LOG
To access this log, GET ORV.GS.WWW.LOG RENUM

These have been manually split by month into the form
         ORV.GS.WWW.LOGyymmm

If the Forsythe web server stops accepting connections, check on
its status with SHOW NET.  If it is 'closed' or 'stopped', restart
it with the command START WEB.  It behaves mostly like a front end.
