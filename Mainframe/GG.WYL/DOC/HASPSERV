SYS3.SYSTEM.DOCLIB#HASPSERV                  Last updated 06/03/89
                                                  Susan Plass

***************************************************************
*                                                             *
*              HASPSERV - JES2 system services                *
*                                                             *
*  The following documentation describes the HASPSERV SVC     *
*  function.  The code suporting this function is contained   *
*  in HASPSSM exits and external subroutines and is           *
*              Class I - Stanford Proprietary.                *
*                                                             *
***************************************************************


The HASPSERV SVC is used to request local information and/or
services from the Stanford JES2 system.  It is invoked by
coding the HASPSERV macro:

               HASPSERV function,area,ASCB=

where function is the text name of the HASPSERV function
               desired,
      area is the address of the input or output parameter
               area required by the function invoked,
and   ASCB, if coded, is either the register number enclosed in
               parentheses of a register or the address of a
               fullword containing the address of the ASCB of a job
               for which services are requested.

The HASPSERV macro and its supporting macros are contained in
SYS3.MACLIB.

At entry to the HASPSERV SVC routine, R0 contains a code
indicating the service being requested, and R1 contains the
address of an area containing HASPSERV input parameters or in which
to return results, depending upon the function invoked.

At exit, R15 contains a return code indicating:

         RC =  0   Successful completion
         RC =  4   Invalid parameter
         RC =  8   Not called for job running under JES2
         RC = 12   JES2 is not active

R0 and/or R1 may contain returned information, and the parameter
list (if appropriate) will be filled in.

*******************************************************************

 0 - JOBACCT   Return account and privileges

This function will return the account and privileges for the
current job.  The ASCB parm may be used to request information
for a job other than the current one.

At exit, R0 contains a code in the low-order byte indicating
            the user and task type code.  See UTYPDEFN in
            SYS3.MACLIB for more detail.

and the parameter return area contains:

            +0(7)  Full account in form gguuuxx
            +7(2)  WYLBUR privilege flags

*******************************************************************

 1 - JOBINFO   Return job number, bin, and programmer name

This function will return the job number, bin, and programmer name
for the current job. The ASCB parm may be used, but only the
job number is returned.

At exit, the parameter return area contains:

            +0(4)  Job number
            +4(4)  Bin number
            +8(20) Programmer name

*******************************************************************

 2 - NOEJECT   Set LINECT=0 for job

This function will set LINECT=0 in the JCT for the current job.  It
will switch into key 5, the data management key.  It requires no
parameters and returns no results.

*******************************************************************

 3 - USERTYPE  Return user type info

This function will return the user type for a supplied user account.
It does not require an SJB or JCT.

At entry, R1 must point to a field containing the account in the
             form gguuu for which the user type is requested.

At exit, R0 contains a code in the low-order byte indicating
            the user and task type code.  See UTYPDEFN in
            SYS3.MACLIB for more detail.

*******************************************************************

 4 - JOBNAME   Return job name and step name

This function will return the job and current step name for the
current job. The ASCB parm may be used, but only the job name is
returned.

At exit, the parameter return area contains:

            +0(8)  Job name
            +8(8)  Step number

*******************************************************************

 5 - STEPTERM  Fill in SMF type 4 info

This function is called by IEFACTRT at step termination to add info
to the type 4 SMF record.  The data added includes the execution
time block, the job number, the execution priority, and tape mount
count.  It then saves step completion info (stepname and completion
code) in the JCT for a WYLBUR NOTIFY message unless:

        stepname begins $, save only if cc ne 0
        stepname begins $$, don't save

At entry, R1 points to a control block containing the address of
             the type 4 record.

At exit, the type 4 record has been filled in and the JCT contains
             the completion code for this step.

*******************************************************************

 6 - JOBCLASS  Return job account and class

This function will return the job account and job class for the
current job.

At exit, R0 contains the first four characters of the job account
         R1 contains the remaining three characters of the job
            account in the high-order three bytes and the job
            class in the low-order byte

*******************************************************************

 7 - TAPEMNT   Increment JCT tape mount count by 1.

This function will add 1 to the tape mount count in the JCT for the
current job.  It will switch into key 5, the data management key.
It requires no parameters and returns no results.

*******************************************************************

 8 - ORVYL      Return ORVYL subsystem name

This function will return the name of the ORVYL whicn this job
should use.  The ASCB parm is valid.

At exit, the parameter return area contains:

           +0(8)  ORVYL name
           +7(2)  WYLBUR privilege flags

*******************************************************************

 9 - STEPCHRG  Update job cost totals

This function is called by IEFACTRT to update job cost totals in
JCT.

At entry, R1 points to a list of fullword job costs corresponding to
             the job costs saved in the JCT.

At exit, the JCT job cost totals have been updated.

*******************************************************************

10 - SMFDUMP   Check $SHUTDOWN status before DUMPXY

This function is issued by IEFU29 exit to check for shutdown before
running DUMPXY to dump SMF data into the holding data set.  No SJB
or JCT is needed for this function.  It requires no parameters and
returns no results.

*******************************************************************

11 - SUBSYS    Return subsystem name

This function returns the name of the subsystem (normally a copy
of JES2) which this job is using.  The ASCB parm is valid.

At exit, the parameter return area contains:

           +0(4)  Name of JES this job is using

*******************************************************************

12 - Unused

*******************************************************************

13 - WTL       Write message to job log

This function will issue a WTO on behalf of the job issuing the
HASPSERV.

At entry, R1 points to a WTO list form with message to send to
             job log.

At exit, the WTO has been issued.
