$FUNCTION
$CHECK
$TABLE
$SYMBOLS
<K REG>
<T CELL ID>
<PROC ID>
<FUNC ID>
<T CELL>
<T CELL1>
<T CELL2>
<T CELL3>
<UNARY OP>
<UNARY CELL>
<UNARY NUM>
<UNARY REG>
<LOG OP>
<K REG ASS>
<FUNC1>
<FUNC2>
<FUNC3>
<CASE SEQ>
<PROC1>
<PROC2>
<SIMPLE ST>
<REL OP>
<CONDITION>
<COMP COND>
<COMP AOR>
<COND THEN>
<GOTO ST*>
<GOTO ST>
<TRUE PART>
<WHILE>
<COND DO>
<ASS STEP>
<LIMIT>
<DO>
<STATEMENT->
<STATEMENT*>
<STATEMENT>
<SI T TYPE>
<T TYPE>
<FILL>
<REP LIST1>
<REP LIST2>
<T DECL1>
<T DECL2>
<T DECL3>
<T DECL4>
<FUNC DC1>
<FUNC DC2>
<FUNC DC3>
<FUNC DC4>
<FUNC DC5>
<FUNC DC6>
<FUNC DC7>
<SYN DC1>
<SYN DC2>
<SYN DC3>
<PROC HD1>
<PROC HD2>
<PROC HD3>
<PROC HD4>
<PROC HD5>
<PROC HD6>
<PROC HD7>
<GLOB HD>
<GLOB HD1>
<DSEG TYPE>
<DECL>
<LABEL DEF>
<BLOCKHEAD>
<BLOCKBODY>
<PROGRAM->
<PROGRAM*>
<PROGRAM>
<EQU SYN1>
<EQU SYN2>
<EQU SYN3>
<EQUATE>
<T NUMBER>
<IF>
<COND>
<CELL ST>
<RP>
<PRIM COND>
<STATEMENT+>
<IF PART>
<COND END>
<CASE HEAD>
<BRINDX OP>
<PROC SYN>
<REPEAT>
<FORUNTIL>
<REPUNTIL>
$$
<ID>
<STRING>
<SHIFT OP>
<ARITH OP>
<ADR OP>
;
=
~
(
)
:
,
.
:=
DO
IF
OF
OR
AND
END
FOR
SYN
XOR
BASE
BYTE
CASE
DATA
ELSE
GOTO
LONG
NULL
REAL
STEP
THEN
ARRAY
BEGIN
CLOSE
DUMMY
SHORT
UNTIL
WHILE
COMMON
EQUATE
GLOBAL
REPEAT
INTEGER
LOGICAL
SEGMENT
EXTERNAL
FUNCTION
REGISTER
CHARACTER
PROCEDURE
$$
<T CELL>    <T CELL ID>
<T CELL>    <T CELL1>   )
<T CELL>    <T CELL2>   )
<T CELL3>   <T CELL ID> (
<FUNC2>     <FUNC1>     ,
<PROC1>     <PROC ID>   (
<SIMPLE ST> <K REG ASS>
<SIMPLE ST> <CELL ST>
<SIMPLE ST> NULL
<SIMPLE ST> <PROC2>     )
<GOTO ST>   <GOTO ST*>
<STATEMENT-><SIMPLE ST>
<STATEMENT*><STATEMENT->
<STATEMENT> <STATEMENT*>
<REP LIST1> <REP LIST2> ,
<REP LIST2> <REP LIST1> <FILL>
<T DECL2>   <T DECL4>   ,
<T DECL4>   <T DECL1>
<FUNC DC1>  FUNCTION
<FUNC DC1>  <FUNC DC7>  ,
<FUNC DC3>  <FUNC DC2>  (
<FUNC DC5>  <FUNC DC4>  ,
<FUNC DC7>  <FUNC DC6>  )
<SYN DC3>   <SYN DC2>   ,
<PROC HD2>  <PROC HD1>  (
<PROC HD4>  <PROC HD3>  )
<GLOB HD>   <GLOB HD1>
<DECL>      <T DECL4>
<DECL>      <FUNC DC7>
<DECL>      <SYN DC2>
<BLOCKHEAD> <BLOCKHEAD> <DECL>      ;
<BLOCKBODY> <BLOCKHEAD>
<BLOCKBODY> <BLOCKBODY> <STATEMENT> ;
<BLOCKBODY> <BLOCKBODY> <LABEL DEF>
<PROGRAM>   <PROGRAM*>  .
<IF>        IF
<IF>        <IF>        <STATEMENT> ;
<COMP AOR>  <COMP AOR>  <STATEMENT> ;
<WHILE>     <WHILE>     <STATEMENT> ;
<PRIM COND> <COMP COND>
<RP>        <RP>        <STATEMENT> ;
<CASE HEAD> <CASE HEAD> <DECL>      ;
<CASE SEQ>  <CASE HEAD>
<CASE SEQ>  <CASE SEQ>  <LABEL DEF>
<REPEAT>    <REPEAT>    <LABEL DEF>
<REPEAT>    <REPEAT>    <STATEMENT> ;
<K REG ASS> <K REG>
<K REG>     <ID>
<T CELL ID> <ID>
<PROC ID>   <ID>
<FUNC ID>   <ID>
<T NUMBER>  <ID>
<UNARY OP>  <ID>
<BRINDX OP> <ID>
<T CELL1>   <T CELL1>   <ARITH OP>  <STRING>
<T CELL1>   <T CELL1>   <ARITH OP>  <T NUMBER>
<T CELL1>   <T CELL2>   <ARITH OP>  <T NUMBER>
<T CELL1>   <T CELL2>   <ARITH OP>  <K REG>
<T CELL1>   <T CELL3>   <STRING>
<T CELL1>   <T CELL3>   <T NUMBER>
<T CELL2>   <T CELL3>   <K REG>
<UNARY CELL><UNARY OP>  <T CELL>
<UNARY CELL><UNARY OP>  <UNARY CELL>
<UNARY NUM> <UNARY OP>  <T NUMBER>
<UNARY NUM> <UNARY OP>  <UNARY NUM>
<UNARY REG> <UNARY OP>  <K REG>
<UNARY REG> <UNARY OP>  <UNARY REG>
<LOG OP>    AND
<LOG OP>    OR
<LOG OP>    XOR
<K REG ASS> <K REG>     :=          <T CELL>
<K REG ASS> <K REG>     :=          <T NUMBER>
<K REG ASS> <K REG>     :=          <STRING>
<K REG ASS> <K REG>     :=          <K REG>
<K REG ASS> <K REG>     :=          <UNARY CELL>
<K REG ASS> <K REG>     :=          <UNARY NUM>
<K REG ASS> <K REG>     :=          <UNARY REG>
<K REG ASS> <K REG>     :=          <ADR OP>    <T CELL>
<K REG ASS> <K REG>     :=          <ADR OP>    <PROC ID>
<K REG ASS> <K REG ASS> <ARITH OP>  <STRING>
<K REG ASS> <K REG ASS> <ARITH OP>  <T CELL>
<K REG ASS> <K REG ASS> <ARITH OP>  <T NUMBER>
<K REG ASS> <K REG ASS> <ARITH OP>  <K REG>
<K REG ASS> <K REG ASS> <LOG OP>    <STRING>
<K REG ASS> <K REG ASS> <LOG OP>    <T CELL>
<K REG ASS> <K REG ASS> <LOG OP>    <T NUMBER>
<K REG ASS> <K REG ASS> <LOG OP>    <K REG>
<K REG ASS> <K REG ASS> <SHIFT OP>  <T NUMBER>
<K REG ASS> <K REG ASS> <SHIFT OP>  <K REG>
<FUNC1>     <FUNC2>     <T NUMBER>
<FUNC1>     <FUNC2>     <K REG>
<FUNC1>     <FUNC2>     <T CELL>
<FUNC1>     <FUNC2>     <STRING>
<FUNC1>     <FUNC2>     <FUNC3>
<FUNC2>     <FUNC ID>   (
<FUNC3>     <FUNC1>     )
<CASE HEAD> CASE        <K REG>     OF          BEGIN
<CASE SEQ>  <CASE SEQ>  <STATEMENT> ;
<PROC2>     <PROC1>     <K REG>
<CELL ST>   <T CELL>    :=          <K REG>
<CELL ST>   <T CELL>    :=          <T CELL>
<CELL ST>   <T CELL>    :=          <T NUMBER>
<CELL ST>   <T CELL>    :=          <STRING>
<CELL ST>   <CELL ST>   <LOG OP>    <T CELL>
<CELL ST>   <CELL ST>   <LOG OP>    <T NUMBER>
<CELL ST>   <CELL ST>   <LOG OP>    <STRING>
<SIMPLE ST> <PROC ID>
<SIMPLE ST> <FUNC ID>
<SIMPLE ST> <FUNC3>
<SIMPLE ST> <CASE SEQ>  END
<SIMPLE ST> <BLOCKBODY> END
<REL OP>    =
<CONDITION> <K REG>     <REL OP>    <T CELL>
<CONDITION> <K REG>     <REL OP>    <T NUMBER>
<CONDITION> <K REG>     <REL OP>    <K REG>
<CONDITION> <K REG>     <REL OP>    <STRING>
<CONDITION> <T NUMBER>
<CONDITION> ~           <T NUMBER>
<CONDITION> <T CELL>    <REL OP>    <T CELL>
<CONDITION> <T CELL>    <REL OP>    <T NUMBER>
<CONDITION> <T CELL>    <REL OP>    <STRING>
<CONDITION> <T CELL>
<CONDITION> ~           <T CELL>
<CONDITION> <REL OP>
<CONDITION> <RP>        <PRIM COND> )
<CONDITION> <UNARY REG>
<CONDITION> ~           <UNARY REG>
<CONDITION> <K REG>     <BRINDX OP> <K REG>
<RP>        (
<COND>      <CONDITION>
<COMP COND> <CONDITION>
<COMP COND> <COMP AOR>  <COND>
<COMP AOR>  <COMP COND> AND
<COMP AOR>  <COMP COND> OR
<COND END>  <COMP COND> END
<COND THEN> <COMP COND> THEN
<GOTO ST*>  GOTO        <ID>
<TRUE PART> <SIMPLE ST> ELSE
<TRUE PART> <GOTO ST*>  ELSE
<REPEAT>    REPEAT
<WHILE>     WHILE
<COND DO>   <COMP COND> DO
<ASS STEP>  <K REG ASS> STEP        <T NUMBER>
<LIMIT>     <FORUNTIL>  <K REG>
<LIMIT>     <FORUNTIL>  <T CELL>
<LIMIT>     <FORUNTIL>  <T NUMBER>
<DO>        DO
<IF PART>   <IF>        <COND END>
<IF PART>   <IF>        <COND END>  <STATEMENT->
<IF PART>   <IF>        <COND END>  <GOTO ST>
<IF PART>   <IF>        <COND END>  <TRUE PART> <STATEMENT->
<IF PART>   <IF>        <COND END>  <TRUE PART> <GOTO ST>
<STATEMENT+><BLOCKBODY> <IF PART>
<STATEMENT-><IF>        <COND THEN> <STATEMENT->
<STATEMENT-><IF>        <COND THEN> <GOTO ST>
<STATEMENT-><IF>        <COND THEN> <TRUE PART> <STATEMENT->
<STATEMENT-><IF>        <COND THEN> <TRUE PART> <GOTO ST>
<STATEMENT-><WHILE>     <COND DO>   <STATEMENT+>
<STATEMENT-><WHILE>     <COND DO>   <STATEMENT*>
<STATEMENT-><REPEAT>    <REPUNTIL>  <PRIM COND>
<STATEMENT->FOR         <ASS STEP>  <LIMIT>     <DO>        <STATEMENT*>
<STATEMENT*><GOTO ST>
<SI T TYPE> SHORT       INTEGER
<SI T TYPE> INTEGER
<SI T TYPE> LOGICAL
<SI T TYPE> REAL
<SI T TYPE> LONG        REAL
<SI T TYPE> BYTE
<SI T TYPE> CHARACTER
<T TYPE>    <SI T TYPE>
<T TYPE>    ARRAY       <T NUMBER>  <SI T TYPE>
<FILL>      <STRING>
<FILL>      <ADR OP>    <T CELL>
<FILL>      <ADR OP>    <PROC ID>
<FILL>      <T NUMBER>
<FILL>      <REP LIST2> )
<REP LIST1> <T NUMBER>  (
<REP LIST1> (
<T DECL1>   <T TYPE>    <ID>
<T DECL1>   <T DECL2>   <ID>
<T DECL1>   <T TYPE>
<T DECL1>   <T DECL2>
<T DECL3>   <T DECL1>   =
<T DECL4>   <T DECL3>   <FILL>
<FUNC DC2>  <FUNC DC1>  <ID>
<FUNC DC4>  <FUNC DC3>  <T NUMBER>
<FUNC DC6>  <FUNC DC5>  <T NUMBER>
<SYN DC1>   <T TYPE>    <ID>        SYN
<SYN DC1>   <SI T TYPE> REGISTER    <ID>        SYN
<SYN DC1>   <SYN DC3>   <ID>        SYN
<SYN DC2>   <SYN DC1>   <T CELL>
<SYN DC2>   <SYN DC1>   <T NUMBER>
<SYN DC2>   <SYN DC1>   <K REG>
<EQUATE>    SHORT       EQUATE
<EQUATE>    EQUATE
<PROC HD1>  PROCEDURE   <ID>
<PROC HD3>  <PROC HD2>  <K REG>
<PROC HD5>  GLOBAL      <PROC HD4>
<PROC HD5>  EXTERNAL    <PROC HD4>
<PROC HD5>  SEGMENT     <PROC HD4>
<PROC HD6>  COMMON      <PROC HD4>
<PROC HD6>  <PROC HD4>
<PROC HD6>  <PROC HD5>
<PROC HD6>  <PROC HD5>  BASE        <K REG>
<PROC HD7>  <PROC HD6>  ;
<GLOB HD1>  GLOBAL      <PROC HD4>
<GLOB HD>   <GLOB HD1>  BASE        <K REG>
<DSEG TYPE> GLOBAL      DATA        <ID>
<DSEG TYPE> EXTERNAL    DATA        <ID>
<DSEG TYPE> COMMON      DATA        <ID>
<DSEG TYPE> COMMON
<DSEG TYPE> SEGMENT
<DSEG TYPE> DUMMY
<DECL>      <PROC HD7>  <STATEMENT*>
<DECL>      <DSEG TYPE> BASE        <K REG>
<DECL>      CLOSE       BASE
<DECL>      <EQU SYN2>
<LABEL DEF> <ID>        :
<BLOCKHEAD> BEGIN
<PROGRAM->  .
<PROGRAM->  .           <GLOB HD>   ;
<PROGRAM*>  <PROGRAM->  <STATEMENT*>
<EQU SYN1>  <EQUATE>    <ID>        SYN
<EQU SYN2>  <EQU SYN1>  <T NUMBER>
<EQU SYN2>  <EQU SYN3>  <ARITH OP>  <T CELL>
<EQU SYN2>  <EQU SYN2>  <ARITH OP>  <STRING>
<EQU SYN2>  <EQU SYN2>  <ARITH OP>  <T NUMBER>
<EQU SYN2>  <EQU SYN2>  <LOG OP>    <STRING>
<EQU SYN2>  <EQU SYN2>  <LOG OP>    <T NUMBER>
<EQU SYN2>  <EQU SYN2>  <SHIFT OP>  <T NUMBER>
<EQU SYN2>  <EQU SYN1>  <UNARY NUM>
<EQU SYN3>  <EQU SYN1>  <T CELL>
<EQU SYN2>  <EQU SYN1>  <STRING>
<EQU SYN2>  <EQU SYN1>  <K REG>
<EQUATE>    <EQU SYN2>  ,
<PROC SYN>  PROCEDURE   <ID>        SYN
<DECL>      <PROC SYN>  <PROC ID>
<FORUNTIL>  UNTIL
<REPUNTIL>  UNTIL
