XPROC () BEGIN                             ;WYL.GQ.LTM.SPIBILD.START
set exec nolog
on attn cmd='goto ATTN'
on error cmd='goto ERROR'

; SPIBILD startup EXEC file  (ITS/DRG -- 2/28/87, ltm)

if (not ORVYL_UP) goto NO_ORVYL
parm_string = squash(parm_string)
version     = 'PROD'
parms_out   = ''
parms_colon = ''
if (substr(parm_string,1,1) EQ '(') begin
  optsize = index(parm_string,')')
  if (optsize EQ 0) goto NO_PARENS
  parms_in    = squash(upper(substr(parm_string,2,optsize-2)))
  parm_string = squash(substr(parm_string,optsize+1 ))

  ptr = find(parms_in,':')
  if (ptr GT 0) begin
    parms_colon = substr(parms_in,ptr )
    parms_in = substr(parms_in,1,ptr-1)
    end

  while (parms_in NE '') begin
    ptr = find(parms_in,', ')
    if (ptr EQ 0) begin
      token = upper(parms_in)
      parms_in = ''
      end
    else begin
      token = upper(squash(substr(parms_in,1,ptr-1)))
      parms_in = squash(substr(parms_in,ptr+1 ))
      end
    if     (abbrev('PRODUCTION',token))    version = 'PROD'
    elseif (abbrev('PREPRODUCTION',token)) version = 'PREPROD'
    elseif (abbrev('TEST',token))          version = 'TEST'
    elseif (abbrev('DEVELOPMENT',token))   version = 'DEV'
    elseif (abbrev('OLD',token))           version = 'OLD'
    elseif (abbrev('ATTENTION',token))     parms_out = parms_out || 'A'
    elseif (abbrev('ATTN',token))          parms_out = parms_out || 'A'
    elseif (abbrev('BRIEF',token))         parms_out = parms_out || 'B'
    elseif (abbrev('QUIET',token))         parms_out = parms_out || 'Q'
    elseif (abbrev('SINFO',token))         parms_out = parms_out || 'S'
    elseif (abbrev('WYLBUR',token))        parms_out = parms_out || 'W'
    else   wri '-Unrecognized option ignored: ' || token
    end
  end

ptr = find(parm_string,';')
if (ptr GT 0) parm_string = squash(substr(parm_string,1,ptr-1))
if (parm_string NE '') wri '-Trailing input ignored: ' || upper(parm_string)

parms_out = parms_out || parms_colon
if (parms_out EQ '') progname = 'SPIBILD'
else                 progname = 'SPIBILD(' || parms_out || ')'

if     (version EQ 'PROD')    xcom call &(progname) pub clr
elseif (version EQ 'TEST')    xcom call &(progname) acc GG.TES clr
elseif (version EQ 'PREPROD') xcom call &(progname) acc GQ.PRD clr
elseif (version EQ 'DEV')     xcom call &(progname) acc GQ.TES clr
elseif (version EQ 'OLD')     xcom call &(progname) lib ORV.GG.SPI.OLD.PROGLIB clr
xreturn

ATTN:
  wri '-Command terminated'
  xreturn

ERROR:
  wri '-Error executing SPIBILD command'
  send gq.ltm Error executing SPIBILD command
  xreturn

NO_ORVYL:
  wri '-SPIBILD is not currently available'
  xreturn

NO_PARENS:
    wri '-Option string is missing closing parentheses: ' || parm_string
    xreturn

END
