         ICTL    1,71,18
         SPACE   2
***********************************************************************
*                   TAPE AND DISC I/O ROUTINES                        *
*                     FOR OS PL360 PROGRAMS                           *
*                        MICHAEL MALCOLM                              *
*                      STANFORD UNIVERSITY                            *
*                         SEPTEMBER 1970                              *
***********************************************************************
         SPACE   2
         MACRO
&EPT     ENTER
         ENTRY   &EPT
         USING   &EPT,15               ENTRY POINT IS IN R15
&EPT     STM     12,3,SAVE
         L       12,=A($TAPEIO)        ESTABLISH ADDRESSING
         DROP    15
         USING   $TAPEIO,12
         SPACE
*  (R1) = DCB ADDRESS
         SPACE
         LR      DCBADDR,1
         MEND
         SPACE   2
         MACRO
&L       EXIT
&L       LM      2,3,SAVE+24
         LM      12,0,SAVE
         BR      14
         DROP    12
         MEND
         SPACE   3
$TAPEIO  CSECT
         SPACE
DCBADDR  EQU     3                     ADDRESS OF DCB
         SPACE   2
*  GLOBAL PROCEDURE OPEN(R14)
*    (R0) = 0 FOR OUTPUT, ~0 FOR INPUT
*    (R1) = DCB ADDRESS (100 BYTES ON A FULLWORD BOUNDARY)
*    (R2) = ADDRESS OF AN 8-BYTE DDNAME
*    (R14) = RETURN ADDRESS
         SPACE
OPEN     ENTER
         LTR     0,0
         BZ      OPEN1
         MVC     0(96,DCBADDR),DCBI
         MVC     DDNAME(8,DCBADDR),0(2) PLACE DDNAME IN DCB
         MVC     96(4,DCBADDR),=F'0'
         OPEN    ((DCBADDR),(INPUT))
         CLI     96(DCBADDR),X'80'   TEST IF OPEN IGNORED
         BNE     OPEN2
         B       OPEN3
OPEN1    MVC     0(96,DCBADDR),DCBO
         MVC     DDNAME(8,DCBADDR),0(2) PLACE DDNAME IN DCB
         MVC     96(4,DCBADDR),=F'0'
         OPEN    ((DCBADDR),(OUTPUT))
OPEN2    TM      DOPEN(DCBADDR),X'10'  TEST IF OPEN WORKED
         BNO     DIDNOPEN              DUMP IF NOT
OPEN3    LM      12,3,SAVE
         BR      14
         DROP    12
         SPACE   2
*  GLOBAL PROCEDURE GET(R14)
*    (R1) = DCB ADDRESS
*    (R14) = RETURN ADDRESS
*    UPON RETURN, (R1) = ADDRESS OF NEXT LOGICAL RECORD
         SPACE
GET      ENTER
         CLI     96(DCBADDR),X'80'     TEST FOR FAKE OPEN
         BE      ENDATSET              YES, SEND BACK EOF
         CLI     96(DCBADDR),X'00'     TEST FOR PREVIOUS END-OF-FILE
         BNE     CLZDERR               DUMP HIM IF SO
         TM      DOPEN(DCBADDR),X'10'  TEST IF FILE OPEN
         BNO     NOTOPEN               DUMP HIM IF NOT
GET1     GET     (DCBADDR)             LOGICAL RECORD ADDR. IS LEFT IN
*                                      R1
         CLI     REREAD,X'FF'          TEST FOR CONCATENATION
         BNE     GET2
         MVI     REREAD,0
         B       GET1                  REISSUE GET
GET2     CLI     96(DCBADDR),0         SET EOF CC
         EXIT
         USING   $TAPEIO,12
CLZDERR  ABEND   99,DUMP
NOTOPEN  ABEND   98,DUMP
DIDNOPEN ABEND   97,DUMP
         SPACE   2
*  GLOBAL PROCEDURE PUT(R14)
*    (R1) = DCB ADDRESS
*    (R14) = RETURN ADDRESS
*    UPON RETURN, (R1) = ADDRESS OF NEXT WORK SPACE
         SPACE
PUT      ENTER
         TM      DOPEN(DCBADDR),X'10'
         BNO     NOTOPEN
         PUT     (DCBADDR)             NEXT WORK AREA (BUFFER) ADDR. IS
*                                      IN R1
         EXIT
         SPACE   2
*  GLOBAL PROCEDURE KLOSE(R14)
*    (R0) = 0 FOR DISP OPTION, >0 FOR REREAD, <0 FOR LEAVE
*    (R1) = DCB ADDRESS
*    (R14) = RETURN ADDRESS
*    DISP PARAMETER IN JCL CONTROLS POSITIONING
         SPACE
KLOSE    ENTER
         TM      DOPEN(DCBADDR),X'10'  TEST IF NOT OPEN
         BNO     CLOSE3                IGNORE HIM IF SO
         LTR     0,0
         BZ      CLZDISP
         BM      CLZLEAV
         CLOSE   ((DCBADDR),REREAD)
         B       CLOSE2
CLZLEAV  CLOSE   ((DCBADDR),LEAVE)
         B       CLOSE2
CLZDISP  CLOSE   ((DCBADDR))
CLOSE2   FREEPOOL (DCBADDR)
CLOSE3   LM      12,3,SAVE
         BR      14
         DROP    12
         SPACE   2
*  DCB EXIT ROUTINE
         SPACE
         DS      0F                    ALIGN ON FULLWORD BDY
ABLST    DC      X'11',AL3(ABLST1)     ABEND EXIT
ADCBEXIT DC      X'85',AL3(DCBEXIT)    DCB EXIT CODE AND ADDRESS
         USING   DCBEXIT,15
DCBEXIT  OI      DOPEN(DCBADDR),X'08'  SET UNLIKE ATTRIBUTES BIT
         CLI     97(DCBADDR),0         TEST FOR PREVIOUS ENTRY
         BNE     SETRETRY              YES - DATA SETS CONCATENATED
         MVI     97(DCBADDR),X'FF'     NO - INDICATE ENTRY
         BR      14
SETRETRY MVI     REREAD,X'FF'          INDICATE GET MUST BE REISSUED
         BR      14
         DROP    15
         SPACE   2
*  ABEND EXIT ROUTINE
         SPACE
         USING   ABLST1,15
ABLST1   TM      3(1),4                CHECK FOR "IGNORE"
         BNO     ABLST2
         LH      DCBADDR,0(,1)         GET ABEND CODE
         N       DCBADDR,=F'4095'
         CH      DCBADDR,=H'304'       CHECK FOR X13 CODE
         BNE     ABLST2
         L       DCBADDR,4(,1)         GET DCB ADDRESS
         OI      96(DCBADDR),X'80'     FLAG FAKED OPEN
         MVI     3(1),4                INDICATE IGNORE
         BR      14                    RETURN TO OS
ABLST2   MVI     3(1),0                INDICATE ABEND
         BR      14                    RETURN TO OS
         DROP    15
         SPACE   2
*  END-OF-FILE EXIT ROUTINE
         SPACE
         USING   $TAPEIO,12
ENDATSET MVI     96(DCBADDR),X'FF'     EODAD EXIT
         B       GET2
         DROP    12
         SPACE   2
DCBI     DCB     DDNAME=UNIT1,DSORG=PS,EODAD=ENDATSET,EROPT=ACC,       X
                 EXLST=ABLST,MACRF=GL
DCBO     DCB     DDNAME=UNIT1,DSORG=PS,EODAD=ENDATSET,EROPT=ACC,       X
                 EXLST=ADCBEXIT,MACRF=PL
SAVE     DS      8F
REREAD   DC      X'00'
         DCBD
$TAPEIO  CSECT
DOPEN    EQU     DCBOFLGS-IHADCB
DDNAME   EQU     DCBDDNAM-IHADCB
         END
