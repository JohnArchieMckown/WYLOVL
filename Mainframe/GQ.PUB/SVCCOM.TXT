$STITLE  DECLARATIONS FOR SCVCOM
  |* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *|
  |*                                                         *|
  |*  SPIRES/370 - CLASS I Stanford University Proprietary.  *|
  |*                                                         *|
  |* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *|
  DUMMY BASE R0;  |-- RQST --|
    ARRAY 2 SHORT INTEGER RQSTRDW = 2(0);
    SHORT INTEGER RQSTSRCE,  |-- SOURCE --|
                  RQSTDEST;  |-- DESTINATION --|
    BYTE RQSTCMD, RQSTCMFL, RQSTMODB, RQSTMODC;
    BYTE RQSTCPLA, RQSTCPLB;
    SHORT INTEGER RQSTCPLN SYN RQSTCPLA;
    SHORT INTEGER RQSTOUCT, RQSTINCT;
    ARRAY 256 BYTE RQSTTEXT;
  CLOSE BASE;
  EQUATE RQSTHDR SYN RQSTTEXT - MEM;  |-- HEADER SIZE --|

  DUMMY BASE R0;  |-- PCW --|
    INTEGER PCWADDR;  BYTE PCWCMD SYN PCWADDR;
    SHORT INTEGER PCWLEN;
    ARRAY 2 BYTE PCWFLG;
    BYTE PCWEND;
  CLOSE BASE;
  EQUATE PCWSIZE SYN PCWEND - MEM;  |-- LENGTH OF PCW --|

  |-- PCW COMMAND VALUES,      TYPE    PCWADDR PCWLEN PCWFLG --|
  EQUATE CMDSNDX  SYN #01, |-- SEND     ADDR                 --|
         CMDSNDD  SYN #02, |-- DATA     ADDR    LEN   CHAIN  --|
         CMDRETLF SYN #03, |-- RET-FREE ADDR                 --|
         CMDRETL  SYN #04, |-- RET LOC  ADDR                 --|
         CMDRETMX SYN #05, |-- RET-MULT ADDR                 --|
         CMDRETX  SYN #06, |-- RET ONE  ADDR    LEN          --|
         CMDFREEX SYN #07, |-- FREE     RDW-ADDR             --|
         CMDECB   SYN #08, |-- POST     ECB                  --|
         CMDPOST  SYN #09, |-- POST HIM                      --|
  |-- OTHER MASKS WHICH MAY BE "OR'D" WITH PCWCMD --|
         CMDEND   SYN #80, |-- END OF PCWLIST --|
         CMDCLOS  SYN #C0, |-- CLOSE ME AFTER THIS COMMAND --|
         CMDCLOSC SYN #A0; |-- CLOSE HIM AFTER THIS COMMAND --|
  |-- RETURN CODES --|
  EQUATE RCBDCMD  SYN  4,  |-- BAD COMMAND --|
         RCBADPID SYN  8,  |-- BAD PATHID ON CMD CALL --|
         RCSNDOVF SYN 12,  |-- OVERFLOW ON SEND --|
         RCNOPART SYN 16,  |-- PARTNER ISN'T THERE --|
         RCDCHNER SYN 20,  |-- DATACHAIN PAST SEND --|
         RCMOFLO  SYN 24,  |-- RETRIEVE BUFFER TOO SMALL --|
         RCFREXBD SYN 28;  |-- FREE RECEIVED WITH NO LOCATE --|

  DUMMY BASE R0;  |-- RDW - RECORD HEADER CONTROL WORD --|
    SHORT INTEGER RDWSZ;  |-- DATA LENGTH --|
    BYTE RDWUFL,  |-- USER FLAGS --|
         RDWSFL;  |-- SVC FLAGS --|
  CLOSE BASE;
  EQUATE RDWSIZE SYN RDWSFL(1) - MEM;  |-- RDW LENGTH --|
$PAGE
  |-- RDWUFL FLAG VALUES --|
  EQUATE RDWONLY SYN #00,  |-- ONLY SEGMENT --|
         RDWFRST SYN #01,  |-- FIRST OF >1 SEGMENTS --|
         RDWLAST SYN #02,  |-- LAST OF >1 SEGMENTS --|
         RDWMIDL SYN #03;  |-- MIDDLE OF >1 SEGMENTS (UNUSED) --|
  |-- RDWSFL FLAG VALUES --|
  EQUATE RDWSFREE SYN #80, |-- LOCATED, CMDFREEX FREED IT --|
         RDWSPAD  SYN #40, |-- PADDED TO HALFWORD --|
         RDWSEOF  SYN #20; |-- END-OF-FILE --|

  |-- MILTEN COMMAND CODES --|
  EQUATE TMILINIT SYN 33,  |-- SUBSYSTEM INITIALIZATION --|
         TMILSTOP SYN 48,  |-- TERMINAL STOP --|
         TMILWRIT SYN 65,  |-- TERMINAL WRITE --|
         TMILCONV SYN 66,  |-- TERMINAL WRITE/PROMPT/READ --|
         TMILWTO  SYN 67,  |-- MILTEN WRITE-TO-OPERATOR --|
         TMILBRK  SYN 80;  |-- HALT PREVIOUS READ --|
  |-- COMPLETION CODES FROM MILTEN --|
  EQUATE CPLAATTN SYN #80,  |-- ATTN ON WRITE/CONV --|
         CPLAIOE  SYN #40,  |-- I/O ERROR --|
         CPLAUST  SYN #20,  |-- UNSET TABS USED --|
         CPLABRK  SYN #10;  |-- READ KILLED BY BREAK --|
  |-- COMPLETION CODES TO MILTEN --|
  EQUATE CPLBFLGF SYN #80;  |-- FORCE USER LOGOFF --|

  DUMMY BASE R0;  |-- PATH --|
    INTEGER PATHMGC = 0;  |-- MAGIC WORD --|
    INTEGER PATHDJNM = 0;
    ARRAY 8 BYTE PATHMY = "MYTAG   ";
    ARRAY 8 BYTE PATHYOU = "YOURTAG ";
    INTEGER PATHECB = 0;  |-- ECB ADDRESS --|
    BYTE PATHMFL SYN PATHECB;  |-- INITIALIZATION FLAG --|
    INTEGER PATHBUF = 0;  |-- BUFFER ADDR --|
    INTEGER PATHECBF = 0; |-- PATH CONTROL FLAG ADDRESS --|
    INTEGER PATHPASS = "PASS";
    INTEGER PATHEND;
  CLOSE BASE;
  EQUATE PATHSIZE SYN PATHEND - MEM;
  |-- PATHMFL FLAG VALUES --|
  EQUATE PATHMCTL SYN #40,  |-- CALLER ASKS TERMINATION CONTROL --|
         PATHMNAM SYN #20,  |-- CALLER PROVIDES CALLEE NAME --|
         PATHMDP1 SYN #10,  |-- DUP TAGS: MY=PCBO, YOU=PCBA --|
         PATHMDP2 SYN #08;  |-- DUP TAGS: MY=PCBA, YOU=PCBO --|
  |-- PATH CONTROL FLAG VALUES --|
  EQUATE PATHCLS SYN #80,  |-- I AM POSTED BECAUSE HE CLOSED --|
         PATHFQE SYN #40,  |--        "    HIS FULL Q EMPTIED --|
         PATHNI  SYN #20,  |--        "    NEW INFO IN MY Q --|
         PATHDP  SYN #10,  |--        "    AT HIS DISCRETION --|
         PATHOPN SYN #08;  |-- I AM POSTED BECAUSE HE OPENED --|

  |-- SVC FOR DOING SVCCOM --|
  FUNCTION SVCCOM (0,#0AFB), SVCWAIT(0,#0A01), STIMER(0,#0A2F);
