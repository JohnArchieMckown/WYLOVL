GLOBAL PROCEDURE BISEARCH (R14);   |-- BINARY SEARCH --|
BEGIN  COMMENT -------------------------------------
    AT ENTRY, R0 - R4 MUST BE SET UP AS FOLLOWS:

         R0 = N         NUMBER OF ELEMENTS IN POINTER ARRAY
         R1 = LOW       ADDRESS OF FIRST ELEMENT IN POINTER ARRAY
         R2 = DISP      NUMBER OF THE 1ST BYTE OF KEY FIELD
         R3 = L         NUMBER OF BYTES IN THE KEY FIELD
         R4 = AX        ADDRESS OF ITEM X TO FIND IN THE TABLE
         NOTE:          N, DISP, & L ARE ALL NUMBERS >= 1.

    DURING EXECUTION, REGISTERS SET AS ABOVE ALONG WITH:

         R9 = HIGH      ADDRESS OF LAST ELEMENT IN POINTER ARRAY
         R5 = AS        ADDRESS OF THE KEY TO COMPARE WITH X
         R6 = M         ADDRESS OF POINTER TO RECORD WITH KEY 'AS'
         R7 = 4         CONSTANT USED FOR FAST ADDS IN LOOP
         R8 = _4        MASK TO DROP RIGHTMOST 2 BITS

    AT EXIT, R1 IS ADDRESS OF ELEMENT IN POINTER ARRAY FOR
         THE RECORD WITH KEY THAT MATCHES X  (0 IF NO MATCH).

    THIS ROUTINE --
         DOES NOT MODIFY     REGISTERS R10 - R15, R0
         SAVES & RESTORES    REGISTERS R2 - R9
         RETURNS ANSWER IN   REGISTER  R1
    ;
    FUNCTION REDUCE(6,#0600); COMMENT USE BCTR TO DECREMENT;
    INTEGER REGISTER    N SYN R0,  HIGH SYN R9,  LOW SYN R1,
                        DISP SYN R2,  AX SYN R4,  AS SYN R5,
                        L SYN R3,  M SYN R6,
                        VAL4 SYN R7,  MASK SYN R8;

    STM(R14,R12,B13(12));  |-- SAVE CALLER'S REGISTERS --|
    REDUCE(L);   IF DISP > 0 THEN REDUCE(DISP);
    IF L < 0 OR DISP < 0 OR N <= 0 THEN GOTO ER;
    VAL4 := 4;   MASK := NEG VAL4;
    HIGH := N;   REDUCE(HIGH);
    HIGH := HIGH SHLA 2 + LOW;  |-- SET UP HIGH INDEX BOUND --|
    WHILE LOW <= HIGH DO   |-- SEARCH THE INDEX --|
    BEGIN  M := LOW + HIGH SHRA 1 AND MASK;  |-- HALF POINT --|
       AS := MEM(M) + DISP;   |-- ADDR OF ITEM TO TEST --|
       EX(L,CLC(0,MEM(AX),MEM(AS)));
       IF = THEN GOTO FOUND;   |-- JUMP IF RECORD FOUND --|
       IF > THEN LOW := M + VAL4 ELSE HIGH := M - VAL4;
    END;   |-- FALL THROUGH IF NOT FOUND. --|
ER: M := M-M;   |-- ZERO OUT THE RETURN ADDRESS --|
FOUND:  |-- WHEN HERE, M HAS ADDR OF MATCH, OR 0 IF NONE --|
    R1 := M;   |-- RETURN THIS IN R1 --|
    LM(R2,R9,B13(28));  |-- RESTORE ONLY REGS THAT CHANGED --|
END.
