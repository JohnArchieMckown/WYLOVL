PUTL     TITLE 'PUTLINE'
PUTLINE  CSECT
***********************************************************************
*                                                                     *
*                 WYLBUR/BASIC PUTLINE PROGRAM                        *
*                       BATCH VERSION                                 *
*                                                                     *
***********************************************************************
*
*REGISTER USAGE
*
R0       EQU   0
R1       EQU   1
R2       EQU   2                  CARRIAGE CONTROL PUT IN HERE
R3       EQU   3                  POINTER TO OUTPUT BUFFER FROM REG 1
R4       EQU   4                  WHEN USED CONTAINS CURRENT LINE COUNT
R5       EQU   5                  WHEN USED CONTAINS CURRENT PAGE COUNT
R6       EQU   6                  REG USED IN GETTING NEW LINE COUNT
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10                 BASE FOR 'CONTROL' WORK AREA
R11      EQU   11                 BASE OF USER AREA
R12      EQU   12                 BASE FOR PUTLINE
R13      EQU   13                 POINTER TO SAVE AREA
R14      EQU   14
R15      EQU   15
*
BASER    EQU   12                 BASE FOR PUTLINE
*
*OS ENTRY LINKAGE (TYPE 3: DEPENDENT)
*
         SAVE (14,12),,*
         BALR  BASER,0            ESTABLISH ADDRESSABILITY FOR
         USING *,BASER             CALLED
         LR    3,13               COPY CALLERS SAVE AREA ADDRESS
         LA    13,72(0,13)        LOAD ADDRESS OF CALLEDS SAVE AREA
         ST    13,8(0,3)          PUT CALLEDS SAVE AREA ADDRESS
*                                  IN CALLERS SAVE AREA
         ST    3,4(0,13)          PUT CALLERS SAVE AREA ADDRESS
*                                  IN CALLEDS SAVE AREA
         B     GO                 BRANCH AROUND ADDRESS CONSTANTS
*
***********************************************************************
*ADDRESS CONSTANTS FOR EXTERNAL CONTROL SECTIONS (V TYPE IF ANY)
*
*
*SET UP FOR CONTROL PROGRAMS WORK AREA
*
GO       EQU   *
         USING CWORK,10           TELL ASSEMBLER ABOUT CWORK
         USING AREA,11            TELL ASSEMBLER ABOUT AREA
*
*
*
*
*
*
***********************************************************************
*                                                                     *
*                 THE CODE GOES HERE                                  *
*                                                                     *
***********************************************************************
*******************SET UP PARAMETER REGISTERS**************************
         LR    R3,R1              PUT REGISTER 1 IN A SAVE PLACE
         SR    R2,R2              CLEAN REGISTER
         IC    R2,0(R0,R3)        GET CARRIAGE CONTROL OR OPEN/CLOSE OP
*****************CONTROL FOR OPEN AND CLOSE****************************
         CL    R2,AFE             TEST FOR OPEN OR CLOSE REQUEST
         BE    DOOPEN             IF FE GO OPEN OUTPUT FILE
         BH    DOCLOSE            IF FF GO CLOSE OUTPUT FILE
*
         CLI   OFLAG,X'FE'        CHECK THAT WE ARE OPEN
         BE    PUT1               SKIP FORCED OPEN
         OPEN  (DCBPRINT,(OUTPUT))
         MVI   OFLAG,X'FE'        SET OPEN FLAG ON
         XC    LINECT,LINECT      RESET LINE COUNT
         XC    PAGECT,PAGECT      RESET PAGE COUNT
****************PAGE CONTROL SECTION***********************************
PUT1     L     R4,LINECT          GET OLD LINE COUNT
         LTR   R4,R4              CHECK FOR ZERO
         BNE   PUT3               NEW PAGE NOT OBVIOUS YET
*
PUT2     L     R5,PAGECT          GET OLD PAGE COUNT
         LA    R5,1(R0,R5)        KICK PAGE COUNT BY 1
         CVD   R5,BIG2            MAKE IT DECMILE
         MVC   HEAD+115(6),MASK   SET MASK IN OUTPUT BUFFER
         ED    HEAD+115(6),BIG2+5 CONVERT PAGE NUMBER INTO BUFFER
*
         PUT   DCBPRINT,HEAD
*
         ST    R5,PAGECT          PUT KICKED PAGE COUNT BACK
         L     R2,ZERO            FORCE A DOUBLE SPACE ON THE CALLER
         SR    R4,R4              ZERO LINE COUNT
         XC    LINECT,LINECT      IN CORE ALSO
******************HAS CALLER ASKED FOR A NEW PAGE**********************
PUT3     CL    R2,ONE             TEST FOR NEW PAGE CODE
         BE    PUT2               IF SO GO GET A NEW PAGE STARTED
**************DOES LINE COUNT SAY ITS TIME FOR A NEW PAGE**************
         CL    R4,LINELM          IS CURRENT LINE COUNT WITHIN LIMIT
         BL    PUT4               IF SO WE DO NOT NEED A NEW PAGE
****WE WANT A NEW PAGE IF THE CALLER DID NOT SPACE SUPRESS*************
         CL    R2,PLUS            DID THE CALLER WANT LINE SUPRESS
         BNE   PUT2               IF NOT GO GET A NEW PAGE STARTED
******GET VALUE OF CARRIAGE CONTROL AND ADD IT TO LINECT***************
PUT4     SR    R6,R6              CLEAR TEMP COUNTER
         CL    R2,PLUS            HAS CALLER ASKED FOR SPACE SUPRESS
         BE    PUT5               IF SO GO SET UP LINE
         LA    R6,1(R0,R6)        KICK FOR SINGLE SPACE
         CL    R2,BLANK           HAS CALLER ASKED FOR SINGLE SPACE
         BE    PUT5               IF SO GO SET UP LINE
         LA    R6,1(R0,R6)        KICK FOR DOUBLE SPACE
         CL    R2,ZERO            HAS CALLER ASKED FOR DOUBLE SPACE
         BE    PUT5               IF SO GO SET UP LINE
         LA    R6,1(R0,R6)        KICK FOR TRIPLE SPACE
         CL    R2,MINUS           HAS CALLER ASKED FOR TRIPLE SPACE
         BE    PUT5               IF SO GO SET UP LINE
         L     R2,BLANK           NONE OF ABOVE, FORCE SINGLE SPACE
         B     PUT4               LOOP BACK...THE LAZY WAY
*****************SET UP LINE FOR OUTPUT********************************
PUT5     STC   R2,0(R0,R3)        PUT CARRIAGE CONTROL BACK
         LA    R4,0(R6,R4)        MAKE A NEW LINE COUNT
         ST    R4,LINECT          PUT NEW LINE COUNT AWAY
****************PUT THE LINE OUT TO THE DATA SET***********************
         PUT   DCBPRINT,(R3)      WRITE OUT THE LINE
         B     RETURN             GO HOME
*******************OPEN THE PRINTER************************************
DOOPEN   CLI   OFLAG,X'FE'        CHECK OPEN FLAG
         BE    RETURN             IF ALREADY OPEN IGNORE REQUEST
         OPEN  (DCBPRINT,(OUTPUT))
         MVI   OFLAG,X'FE'        SET OPEN FLAG ON
         XC    LINECT,LINECT      RESET LINE COUNT
         XC    PAGECT,PAGECT      RESET PAGE COUNT
         B     RETURN             GO HOME
*
DCBPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSOUT,DEVD=DA,RECFM=FA,       X
               LRECL=131,BLKSIZE=131
***************CLOSE THE PRINTER***************************************
DOCLOSE  CLI   OFLAG,X'FF'        CHECK OPEN FLAG
         BE    RETURN             GO HOME IF WE ARE CLOSED ALREADY
         CLOSE DCBPRINT
         MVI   OFLAG,X'FF'        THE OPEN FLAG IS TURNED OFF
         B     RETURN
********CONSTANTS AND STORAGE AREAS LOCAL TO THIS PROGRAM**************
OFLAG    DC    X'FF'              OPEN SWITCH
BIG2     DC    1D'0'              FOR USE BY CVD
HEAD     DC    CL131'1WYLBUR/BASIC (BATCH VERSION 2 LEVEL 0)           X
                          STANFORD COMPUTATION CENTER - CAMPUS FACILITYX
                    PAGEXXXXXX'
MASK     DC    X'402020202120'    MASK TO CONVERT PAGE NUMBER IN HEAD
         DS    0F
BLANK    DC    X'00000040'        SPACE 1 BEFORE PRINT
ZERO     DC    X'000000F0'        SPACE 2 BEFORE PRINT
MINUS    DC    X'00000060'        SPACE 3 BEFORE PRINT
PLUS     DC    X'0000004E'        NOSPACE
ONE      DC    X'000000F1'        SKIP TO CHAN 1 BEFORE PRINT
AFE      DC    X'000000FE'        TO TEST OPEN CODE
LINELM   DC    1F'57'             MAXIMUM LINES PERMITTED ON A PAGE
*
*RETURN TO CALLER
*
RETURN   L     13,4(0,13)         PUT ADDR OF CALLERS SAVE AREA BACK
         LM    14,15,12(13)       RESTORE CALLERS REGISTERS
         LM    1,12,24(13)         EXECPT REGISTER 0
         BCR   15,14              RETURN TO CALLER
*
*
         EJECT
CWORK    DSECT
         COPY CWORK
         EJECT
AREA     DSECT
         COPY AREA
         END
