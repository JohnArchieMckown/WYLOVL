XEXP     TITLE 'VEXPAN'
VEXPAN   CSECT
***********************************************************************
*                                                                     *
*                 WYLBUR/BASIC VEXPAN PROGRAM                         *
*                       TIME SHARING                                 *
*                                                                     *
***********************************************************************
*
*REGISTER USAGE
*
R0       EQU   0                  PARAMETER REGISTER FOR RETURN
R1       EQU   1                  ADDR OF ARGUMENT LIST ON ENTRY
R2       EQU   2                  ADDR OF SOURCE PREST LINE
R3       EQU   3                  ADDR OF TARGET EXPANDED LINE
R4       EQU   4                  LENGTH OF PREST SOURCE DURING WORK
R5       EQU   5                  MASK FOR TAKING OUT BLANK COUNT
R6       EQU   6                  COUNT BYTE DURING WORK
R7       EQU   7                  COUNT OF EXPANDED LINE
R8       EQU   8
R9       EQU   9
R10      EQU   10                 BASE FOR 'CONTROL' WORK AREA
R11      EQU   11                 BASE OF USER AREA
R12      EQU   12                 BASE FOR VEXPAN
R13      EQU   13                 POINTER TO SAVE AREA
R14      EQU   14
R15      EQU   15
*
BASER    EQU   12                 BASE FOR VEXPAN
*
*OS ENTRY LINKAGE (USING WYLBUR/BASIC CONVENTIONS)
*
         XAVE  VEXPAN
*
***********************************************************************
*                                                                     *
*                 THE CODE GOES HERE                                  *
*                                                                     *
***********************************************************************
*
***********************************************************************
*VARIABLE DATA EXPAND FROM PREST                                      *
*                                                                     *
*  CALL    R1 ADDRESS OF 2 WORD ARGUMENT LIST                         *
*                                                                     *
*             WORD 1 = ADDR OF STRING TO BE EXPANDED (PREST FORMAT)   *
*                  2 = ADDR OF WHERE EXPANDED STRING IS TO BE PLACED  *
*                                                                     *
*  RETURN  R0 LENGTH OF EXPANDED LINE INCLUDING FORCED TRAILING BLANK *
*                                                                     *
*                                                                     *
***********************************************************************
*
************************SET UP ENTRY ARGUMENTS*************************
*
         L     R2,0(R0,R1)        LOAD ADDR OF PREST LINE
         L     R3,4(R0,R1)        LOAD ADDR OF EXPANDED LINE
         SR    R4,R4
         IC    R4,0(R0,R2)        GET LENGTH OF PREST LINE
         LA    R2,1(R0,R2)        MOVE OVER COUNT OF BYTES
         LA    R5,15(R0,R0)       SET MASK FOR TAKING OUT BLANK COUNT
         SR    R6,R6              ZERO TO HOLD COUNT BYTE DURING WORK
         SR    R7,R7              ZERO FOR COUNT OF EXPANDED LINE
*
*******************FIRST CHECK FOR BLANK LINE**************************
*
         LTR   R4,R4              CHECK FULL LINE LENGTH OF PREST
         BNP   EXPAN4             GO DROP A BLANK KICK COUNT AND RETURN
*
*********************EXPAND A PREST LINE*******************************
*
EXPAN1   IC    R6,0(R0,R2)        GET COUNT BYTE
         SRL   R6,4(R0)           SHIFT OUT CHARACTER COUNT IF ANY
         LTR   R6,R6              DO WE HAVE ANY BLANKS
         BNP   EXPAN2             IF NOT GO CHECK FOR CHARACTERS
         BCTR  R6,R0              LOWER COUNT FOR MVC
         EX    R6,MOVEBLK         MOVE BLANKS INTO OUTPUT BUFFER
         LA    R3,1(R6,R3)        KICK OUTPUT POINTER OVER BLANKS
         LA    R7,1(R6,R7)        UPDATE NUMBER OF CHARACTERS IN OUTPUT
EXPAN2   IC    R6,0(R0,R2)        GET COUNT BYTE
         NR    R6,R5              MASK OUT BLANK COUNT
         LTR   R6,R6              DO WE HAVE ANY CHARACTERS
         BNP   EXPAN3             GO ADJUST FOR COUNT BYTE IF NONE
         BCTR  R6,R0              LOWER COUNT FOR MVC
         EX    R6,MOVECHR         MOVE CHARACTERS INTO OUTPUT BUFFER
         LA    R6,1(R0,R6)        RETURN BYTE COUNT TO FULL VALUE
         LA    R3,0(R6,R3)        KICK OUTPUT POINTER OVER CHARACTERS
         LA    R7,0(R6,R7)        UPDATE NUMBER OF CHARACTERS IN OUTPUT
EXPAN3   LA    R2,1(R6,R2)        KICK INPUT PTR INCLUDING COUNT BYTE
         LA    R6,1(R0,R6)        MAKE COUNT BYTE REFLECT COUNT BYTE
         SR    R4,R6              CUT DOWN REMAINDER IN SOURCE
         BP    EXPAN1             REPEAT ON MORE TO DO
EXPAN4   MVI   0(R3),C' '         SET IN TERMINAL BLANK
         LA    R0,1(R0,R7)        REFLECT TERMINAL BLANK COUNT
*
*RETURN TO CALLER
*
RETURN   L     13,4(0,13)         PUT ADDR OF CALLERS SAVE AREA BACK
         LM    14,15,12(13)       RESTORE CALLERS REGISTERS
         LM    1,12,24(13)         EXECPT REGISTER 0
         BCR   15,14              RETURN TO CALLER
*
***************MVC INSTRUCTIONS EXECUTED FROM ABOVE********************
*
MOVEBLK  MVC   0(0,R3),=C'                '   MOVE BLANKS
MOVECHR  MVC   0(0,R3),1(R2)      MOVE CHARACTERS INTO OUTPUT BUFFER
*
*
         END
