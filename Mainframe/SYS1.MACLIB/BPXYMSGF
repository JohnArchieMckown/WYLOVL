*        %GOTO MSGFPRO  ;         /* Bilingual header                   00050000
         MACRO                                                          00100000
         BPXYMSGF  &DSECT=YES,&LIST=YES                       8@D1A     00150000
         GBLB  &MSGF411                                                 00200000
         AIF   (&MSGF411 EQ 1).E411                                     00250000
&MSGF411 SETB  1                                                        00300000
         AIF   ('&LIST' EQ 'YES').A411                                  00350000
         PUSH  PRINT  BPXYMSGF: MSG flag constants specified            00400000
         PRINT OFF              on open system call                     00450000
         AGO   .A411                                                    00500000
*                                  */                                   00550000
*%MSGFPRO : ;                                                           00600000
*/****START OF SPECIFICATIONS****************************************** 00650000
*                                                                       00700000
*    $MAC (BPXYMSGF) COMP(SCPX1) PROD(BPX):                             00750000
*                                                                       00800000
*01* MACRO NAME: BPXYMSGF                                               00850000
*                                                                       00900000
*01* DSECT NAME: MSG_FLAGS                                              00950000
*                                                                       01000000
*01* DESCRIPTIVE NAME: Message flag constants specified                 01050000
*                      on send, recv, sendTo and recvfrom calls.        01100000
*                                                                       01150000
*02*   ACRONYM: MSGF                                                    01200000
**/                                                                     01250000
*/*01* PROPRIETARY STATEMENT=                                        */ 01300000
*/***PROPRIETARY_STATEMENT********************************************/ 01350000
*/*                                                                  */ 01400000
*/*                                                                  */ 01450000
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 01500000
*/* THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      */ 01550000
*/* 5647-A01 (C) COPYRIGHT IBM CORP. 1993,2000                       */ 01600000
*/*                                                                  */ 01650000
*/* STATUS= HBB7703                                                  */ 01700000
*/*                                                                  */ 01750000
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 01800000
*/*                                                                     01850000
*                                                                       01875000
*01* EXTERNAL CLASSIFICATION:  GUPI                                     01900000
*01* END OF EXTERNAL CLASSIFICATION:                                    01950000
*                                                                       02000000
*01* FUNCTION:                                                          02050000
*                                                                       02100000
*      The MSGF defines the Message flags used on the send, recv,       02150000
*      sendTo and recvfrom socket system calls.                         02200000
*                                                                       02250000
*01* METHOD OF ACCESS:                                                  02300000
*                                                                       02350000
*02*   PL/X:                                                            02400000
*                                                                       02450000
*        %INCLUDE SYSLIB(BPXYMSGF)                                      02500000
*        By default, the MSGF is based on MSGFlagsPtr. If               02550000
*        other basing is desired, use %MSGFBASE='BASED(XXXXXX)'.        02600000
*        If %MSGFBASE='BASED(MSGFlagsPtr)' is coded, a Declare for      02650000
*        MSGFlagsPtr also generated.                                    02700000
*                                                                       02750000
*02*   ASM:                                                             02800000
*        With DSECT=NO, storage is allocated in line                    02850000
*        and addressability is provided thru that DSECT or CSECT.       02900000
*        With DSECT=YES, a DSECT is produced and "USING MSG_FLAGS,reg"  02950000
*        is required for addressability.  Here "reg" contains the       03000000
*        address of MSGF#LENGTH bytes of storage.                       03050000
*        The default is DSECT=YES.                                      03100000
*                                                                       03150000
*01* SIZE: MSGF#LENGTH = 4 bytes                                        03200000
*                                                                       03250000
*01* POINTED TO BY: MSGFlagsPtr                                         03300000
*                                                                       03350000
*01* CREATED BY: Caller of system call                                  03400000
*                                                                       03450000
*01* DELETED BY: Caller of system call                                  03500000
*                                                                       03550000
*01* STORAGE ATTRIBUTES:                                                03600000
*02*   SUBPOOL/DATASPACE:  N/A                                          03650000
*02*   KEY:                N/A                                          03700000
*02*   RESIDENCY:          N/A                                          03750000
*                                                                       03800000
*01* FREQUENCY: Included with compile                                   03850000
*                                                                       03900000
*01* SERIALIZATION: N/A                                                 03950000
*                                                                       04000000
*01* DEPENDENCIES: None                                                 04050000
*                                                                       04100000
*01* NOTES: None                                                        04150000
*                                                                       04200000
*01* COMPONENT: OpenMVS (SCPX1)                                         04250000
*                                                                       04300000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     04350000
*                                                                       04400000
*01* EYE-CATCHER: None                                                  04450000
*                                                                       04500000
*01* CHANGE-ACTIVITY:                                                   04550000
*                                                                       04600000
* $D1=DOAA002  HOM1111 930505 PDNE: Integrated Sockets support          04650000
*                                       Dcr A002.02                     04700000
* $D2=DRGA134  HOM1140 950607 PDSK: UU Compliance (A134.02)             04750000
* $D3=DSPA158  HOM1150 950821 PDJI: AF-ESCON support (A158.00)          04800000
* $P1=PVT0656  HBB6606 980326 PDJT: MSG_EOF                             04850000
*                                                                       04900000
****END OF SPECIFICATIONS*********************************************/ 04950000
*        %GOTO MSGFPLS  ;         /* Bilingual header                   05000000
.A411    ANOP  ,                                                        05050000
** BPXYMSGF: Socket access flags                                        05100000
**  Used By: FCT OPN                                                    05150000
         AIF   ('&DSECT' EQ 'NO').B411                                  05200000
MSG_FLAGS            DSECT ,                                            05250000
         AGO   .C411                                                    05300000
.B411    ANOP  ,                                                        05350000
MSG_FLAGS            DS    0F                                           05400000
.C411    ANOP  ,                                                        05450000
MSG_FLAGS1           DS    B      I_flags - byte 1                      05500000
MSGFHIGH             EQU   X'80'  DO NOT USE THIS BIT!                  05550000
*                                 MSG_FLAGS must never be < 0           05600000
MSG_ACK_GEN          EQU   X'40'  Generate a UDP 'ACK packet'           05650000
*                                 automatically to the originator       05700000
*                                 if an incoming UDP packet arrives     05750000
*                                                                 @D3A  05800000
MSG_ACK_TIMEOUT      EQU   X'20'  The caller expects an incoming UDP    05850000
*                                 packet within the "standard ACK       05900000
*                                 time interval".  Return to caller     05950000
*                                 with an EINTR return code if no       06000000
*                                 incoming UDP packet arrives           06050000
*                                 within this time interval.      @D3A  06100000
MSG_ACK_EXPECTED     EQU   X'10'  (Used along with MSG_ACK_TIMEOUT)     06150000
*                                 The incoming packet is expected to    06200000
*                                 be an ACK. If the ACK arrives,        06250000
*                                 the caller does not need to be        06300000
*                                 activated to process it.              06350000
*                                 Instead, the protocol will just       06400000
*                                 cancel the timeout and let the        06450000
*                                 application wait for the real data    06500000
*                                 to arrive.                      @D3A  06550000
                     SPACE ,                                            06600000
MSG_FLAGS2           DS    B      MSG_flags - byte 2                    06650000
*                                                                       06700000
                     SPACE ,                                            06750000
MSG_FLAGS3           DS    B      MSG_flags - byte 3                    06800000
MSG_EOF              EQU   X'80'  Close after send                @P1A  06850000
                     SPACE ,                                            06900000
MSG_FLAGS4           DS    B      MSG_flags - byte 4                    06950000
MSG_WAITALL          EQU   X'40'  Wait until all data returned    @D2A  07000000
MSG_CTRUNC           EQU   X'20'  Control data truncated          @D2A  07050000
MSG_TRUNC            EQU   X'10'  Normal data truncated           @D2A  07100000
MSG_EOR              EQU   X'08'  Terminate a record              @D2A  07150000
MSG_DONTROUTE        EQU   X'04'  Send without network routing          07200000
MSG_PEEK             EQU   X'02'  Peek at incoming data                 07250000
MSG_OOB              EQU   X'01'  Receive out of band data              07300000
                     SPACE ,                                            07350000
MSG#LENGTH          EQU   *-MSG_FLAGS Length of this structure          07400000
** BPXYMSGF End                                                         07450000
         SPACE 3                                                        07500000
         AIF   ('&LIST' EQ 'YES').E411                        6@D1A     07550000
         POP   PRINT                                                    07600000
.E411    ANOP  ,                                                        07650000
         MEND                                                           07700000
  Terminating PL/X comment                                          */  07750000
 %MSGFPLS : ;                                                           07800000
 %IF MSGFBASE='' %THEN                                                  07850000
   %DO;                                                                 07900000
     %MSGFBASE='BASED(MSGFLAGSPTR)';                                    07950000
   %END;                                                                08000000
  %IF TRANSLATE(MSGFBASE)='BASED(MSGFLAGSPTR)' %THEN                    08050000
    %DO;                                                                08100000
      DCL MSGFLAGSPTR Ptr(31);    /* Pointer to the MSG_FLAGS       */  08150000
    %END;                                                               08200000
                                                                        08250000
 DCL 1 MSG_FLAGS Bit(32) MSGFBASE,                                      08300000
  3 MSG_FLAGS1    Bit(8),                                               08350000
    5 MSGFHIGH     Bit(1),         /* DO NOT USE THIS BIT!           */ 08400000
                                   /* MSG_FLAGS must never be < 0    */ 08450000
    5 MSG_ACK_GEN  Bit(1),         /* Generate a UDP 'ACK packet'       08500000
                                      automatically to the originator   08550000
                                      if an incoming UDP packet         08600000
                                      arrives                    @D3A*/ 08650000
    5 MSG_ACK_TIMEOUT Bit(1),      /* The caller expects an incoming    08700000
                                      UDP packet within the "standard   08750000
                                      ACK time interval".  Return to    08800000
                                      caller with an EINTR return       08850000
                                      code if no if no incoming UDP     08900000
                                      packet arrives within this time   08950000
                                      interval.                  @D3A*/ 09000000
    5 MSG_ACK_EXPECTED Bit(1),     /* (Used along with MSG_ACK_TIMEOUT) 09050000
                                      The incoming packet is            09100000
                                      expected to be an ACK. If the     09150000
                                      ACK arrives, the caller does      09200000
                                      not need to be activated to       09250000
                                      process it.  Instead, the         09300000
                                      protocol will just cancel the     09350000
                                      timeout and let the               09400000
                                      application wait for the real     09450000
                                      data to arrive.            @D3A*/ 09500000
    5 *            Bit(4),         /* Reserved                   @D3C*/ 09550000
                                                                        09600000
  3 MSG_FLAGS2    Bit(8),                                               09650000
    5 *            Bit(8),         /* Reserved                       */ 09700000
                                                                        09750000
  3 MSG_FLAGS3    Bit(8),                                               09800000
    5 MSG_EOF      Bit(1),         /* Close after send           @P1A*/ 09850000
    5 *            Bit(7),         /* Reserved                       */ 09900000
                                                                        09950000
  3 MSG_FLAGS4    Bit(8),                                               10000000
    5 *            Bit(1),         /* Reserved                       */ 10050000
    5 MSG_WAITALL    Bit(1),       /* Wait til all data returned @D2A*/ 10100000
    5 MSG_CTRUNC     Bit(1),       /* Control data truncated     @D2A*/ 10150000
    5 MSG_TRUNC      Bit(1),       /* Normal data truncated      @D2A*/ 10200000
    5 MSG_EOR        Bit(1),       /* Terminate a record         @D2A*/ 10250000
    5 MSG_DONTROUTE  Bit(1),       /* Send without network routing   */ 10300000
    5 MSG_PEEK       Bit(1),       /* Peek at incoming data          */ 10350000
    5 MSG_OOB        Bit(1);       /* Receive out of band data       */ 10400000
                                                                        10450000
