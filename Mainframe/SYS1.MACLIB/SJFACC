*/********************************************************************/ 00001000
*/*                                                                  */ 00002000
*/* MODULE NAME = IEFSJACM                                           */ 00003000
*/*                                                                  */ 00004000
*/* DESCRIPTIVE NAME = SCHEDULER JCL FACILITY ACCESS FUNCTION        */ 00005000
*/*                    MACRO                                         */ 00006000
*/*                                                                  */ 00007000
*/* COPYRIGHT = 5740-XC6                                             */ 00008000
*/*             THIS MACRO IS "RESTRICTED MATERIALS OF IBM"          */ 00009000
*/*             (C) COPYRIGHT IBM CORP. 1987                         */ 00010000
*/*             LICENSED MATERIALS - PROPERTY OF IBM                 */ 00011000
*/*             REFER TO COPYRIGHT INSTRUCTIONS                      */ 00012000
*/*             FORM NUMBER G120-2083                                */ 00013000
*/*                                                                  */ 00014000
*/* STATUS = 0S/VS2 JBB2223                                          */ 00015000
*/*                                                                  */ 00016000
*/* FUNCTION =  The SJFACC macro is used to initialize the           */ 00017000
*/*             parameter list for and invoke the Scheduler JCL      */ 00018000
*/*             Facility Access Function.  It also provides the      */ 00019000
*/*             option for a terminate request to clean up local     */ 00020000
*/*             storage and the recovery environment.                */ 00021000
*/*                                                                  */ 00022000
*/* OPERATION =                                                      */ 00023000
*/*                                                                  */ 00024000
*/*  1. Initializes the 'errors found' flag to off.                  */ 00025000
*/*                                                                  */ 00026000
*/*  2. Verifies the macro form parameter.                           */ 00027000
*/*                                                                  */ 00028000
*/*  3. If the macro form parameter is valid, does the               */ 00029000
*/*     following:                                                   */ 00030000
*/*                                                                  */ 00031000
*/*     A. If the list macro form is specified, verifies the         */ 00032000
*/*        macro parameter list.  If it is valid, generates          */ 00033000
*/*        the request table declare.                                */ 00034000
*/*                                                                  */ 00035000
*/*     B. Otherwise, the execute macro form is specified.           */ 00036000
*/*        Verifies the execute form parameter list.  If it is       */ 00037000
*/*        valid, generates the code to fill in the SJF Access       */ 00038000
*/*        Function parameter list.  Next, invokes the SJF           */ 00039000
*/*        Access Function or terminate, via the SJF Request         */ 00040000
*/*        macro, as requested.                                      */ 00041000
*/*                                                                  */ 00042000
*/*  4. Returns from the macro with a return code of 0 for valid     */ 00043000
*/*     invocations of this macro and 12 for invalid invocations.    */ 00044000
*/*                                                                  */ 00045000
*/*     If any errors were found in verifying the parameters in      */ 00046000
*/*     the above processing, issues an error message and            */ 00047000
*/*     continues verification of the remaining parameters, if       */ 00048000
*/*     any. No code is generated (except PLS DO and END             */ 00049000
*/*     statements for the execute form) if errors are detected      */ 00050000
*/*     in the macro parameter list.                                 */ 00051000
*/*                                                                  */ 00052000
*/*  NOTES =                                                         */ 00053000
*/*                                                                  */ 00054000
*/*    DEPENDENCIES =                                                */ 00055000
*/*                                                                  */ 00056000
*/*    The invoking module must include the CVT, IEFJESCT, and       */ 00057000
*/*    IEFSJACP mapping macros.  This macro generates code to        */ 00058000
*/*    assign values to IEFSJACP fields.                             */ 00059000
*/*                                                                  */ 00060000
*/*    The invoking module must be in supervisor state, in           */ 00061000
*/*    any key.                                                      */ 00062000
*/*                                                                  */ 00063000
*/*    Although not a dependency, it is strongly recommended         */ 00064000
*/*    that the IEFSJKEY mapping macro be used for referencing       */ 00065000
*/*    keys when updating and retrieving information.                */ 00066000
*/*                                                                  */ 00067000
*/*    PLS Version:                                                  */ 00068000
*/*                                                                  */ 00069000
*/*    The invoking module must include the ?EPILOG macro, and       */ 00070000
*/*    must define the CVTPTR and set it to location decimal 16      */ 00071000
*/*    (see the CVT mapping macro for details).                      */ 00072000
*/*                                                                  */ 00073000
*/*                                                                  */ 00074000
*/*    BAL Version:                                                  */ 00075000
*/*                                                                  */ 00076000
*/*    The invoking module must declare a 4 byte pointer named       */ 00077000
*/*    SJFPTR.                                                       */ 00078000
*/*                                                                  */ 00079000
*/*    The invoking module must declare a 4 byte character      2@L1A*/ 00079300
*/*    variable named SJACCID, it must be initialized to 'SJAC'.     */ 00079600
*/*                                                                  */ 00080000
*/*    RESTRICTIONS =                                                */ 00081000
*/*                                                                  */ 00082000
*/*    PLS VERSION:                                                  */ 00083000
*/*                                                                  */ 00084000
*/*    The PLS language limits the maximum length of a macro         */ 00085000
*/*    invocation to 1000 characters.                                */ 00086000
*/*                                                                  */ 00087000
*/*    Variables and expressions specified in the macro parameter    */ 00088000
*/*    list must be compatible with the IEFSJACP fields they will    */ 00089000
*/*    be assigned to.                                               */ 00090000
*/*                                                                  */ 00091000
*/*    SJACTOKN and SJACSTOR are the only IEFSJACP fields which  @D1C*/ 00092000
*/*    should be specified as arguments in the macro parameter   @D1C*/ 00093000
*/*    list.  They can only be specified with the TOKEN and      @D1C*/ 00094000
*/*    LOCLSTG parameters, respectively.                         @D1C*/ 00095000
*/*                                                                  */ 00096000
*/*                                                                  */ 00097000
*/*    BAL Version:                                                  */ 00098000
*/*                                                                  */ 00099000
*/*    Fields specified (directly or indirectly) in the macro        */ 00100000
*/*    parameter list must be compatible with the IEFSJACP fields    */ 00101000
*/*    they will be assigned to.                                     */ 00102000
*/*                                                                  */ 00103000
*/*    SJACTOKN and SJACSTOR are the only IEFSJACP fields which  @D1C*/ 00104000
*/*    may be specified as arguments in the macro parameter      @D1C*/ 00105000
*/*    list.  Their addresses only can be specified with the     @D1C*/ 00106000
*/*    TOKEN and LOCLSTG parameters, respectively.               @D1C*/ 00107000
*/*                                                                  */ 00108000
*/*                                                                  */ 00109000
*/*   REGISTER CONVENTIONS =                                         */ 00110000
*/*                                                                  */ 00111000
*/*   BAL Version:                                                   */ 00111200
*/*                                                                  */ 00111400
*/*      Register 1 is used by the code generated by this macro. @L1A*/ 00111600
*/*                                                                  */ 00111800
*/*   PATCH-LABEL = N/A                                              */ 00112000
*/*                                                                  */ 00113000
*/*   MODULE TYPE = MACRO                                            */ 00114000
*/*                                                                  */ 00115000
*/*   PROCESSOR =                                                    */ 00116000
*/*                                                                  */ 00117000
*/*     PLS Version: PL/S 3H                                         */ 00118000
*/*                                                                  */ 00119000
*/*     BAL Version: ASSEMBLER H                                     */ 00120000
*/*                                                                  */ 00121000
*/*   MODULE SIZE = N/A                                              */ 00122000
*/*                                                                  */ 00123000
*/*   ATTRIBUTES = NONE                                              */ 00124000
*/*                                                                  */ 00125000
*/*   ENTRY POINT = N/A                                              */ 00126000
*/*                                                                  */ 00127000
*/*   PURPOSE = SEE FUNCTION                                         */ 00128000
*/*                                                                  */ 00129000
*/*   LINKAGE = N/A                                                  */ 00130000
*/*                                                                  */ 00131000
*/*                                                                  */ 00132000
*/*                                                                  */ 00133000
*/*   METHOD OF INVOCATION=                                          */ 00134000
*/*                                                                  */ 00135000
*/*                                                                  */ 00136000
*/*                                                                  */ 00137000
*/*                                                                  */ 00138000
*/*   _______________________________________________________        */ 00139000
*/*                   PLS VERSION                                    */ 00140000
*/*   _______________________________________________________        */ 00141000
*/*                                                                  */ 00142000
*/*                                                                  */ 00143000
*/*                                                                  */ 00144000
*/*   PLS Macro Interface Syntax, List Form                          */ 00145000
*/*                                                                  */ 00146000
*/*                                                                  */ 00147000
*/*   ? label:  SJFACC                                               */ 00148000
*/*                                                                  */ 00149000
*/*   REQTBL          (request table name)                           */ 00150000
*/*   NUMREQ          (number of requests)                           */ 00151000
*/*   MF              (L)                                            */ 00152000
*/*                                                                  */ 00153000
*/*                                                                  */ 00154000
*/*                                                                  */ 00155000
*/*                                                                  */ 00156000
*/*   _______________________________________________________        */ 00157000
*/*   _______________________________________________________        */ 00158000
*/*                                                                  */ 00159000
*/*                                                                  */ 00160000
*/*                                                                  */ 00161000
*/*   PLS Macro Interface Syntax, Execute Form                       */ 00162000
*/*                                                                  */ 00163000
*/*                                                                  */ 00164000
*/*   ? label:  SJFACC                                               */ 00165000
*/*                                                                  */ 00166000
*/*   ((key,                                                         */ 00167000
*/*     parameter number,                                            */ 00168000
*/*     field address,                                               */ 00169000
*/*     length of field), ...)                                       */ 00170000
*/*                                                                  */ 00171000
*/*      REQUEST         (UPDATE|RETRIEVE|FIND|                      */ 00172000
*/*                       FINDUPD|FINDRET|TERMINATE)                 */ 00173000
*/*                                                                  */ 00174000
*/*      REQTBL          (request table)                             */ 00175000
*/*                      ((request table pointer))                   */ 00176000
*/*                                                                  */ 00177000
*/*      NUMREQ          (number of requests)                        */ 00178000
*/*                                                                  */ 00179000
*/*      RECOVRY         (YES|NO)      default = YES                 */ 00180000
*/*      CLEANUP         (YES|NO)      default = YES                 */ 00181000
*/*      NONAUTH         (YES|NO)      default = NO                  */ 00182000
*/*      SYSUSER         (YES|NO)      default = NO                  */ 00183000
*/*                                                                  */ 00184000
*/*      LOCLSTG         (local storage pointer)                     */ 00185000
*/*      TOKEN           (SJF token)                                 */ 00186000
*/*      VERB            (verb name)                                 */ 00187000
*/*      LABEL           (label name)                            @D1A*/ 00188000
*/*                                                                  */ 00189000
*/*      CONTINU         (YES|NO)      default = NO                  */ 00190000
*/*      MF              (E)                                         */ 00191000
*/*                                                                  */ 00192000
*/*      The following are used only on an UPDATE or FINDUPD         */ 00193000
*/*      request:                                                    */ 00194000
*/*                                                                  */ 00195000
*/*      UPDJRNL         (YES|NO)      default = NO                  */ 00196000
*/*                                                                  */ 00197000
*/*      UPDALTS         (Alternate SWA Manager pointer)         @D2A*/ 00198000
*/*                                                                  */ 00199000
*/*      The following are used only on FIND, FINDUPD or FINDRET     */ 00200000
*/*      request:                                                    */ 00201000
*/*                                                                  */ 00202000
*/*      FNDNEXT         (YES|NO)      default = NO                  */ 00203000
*/*      FNDWTKN         (YES|NO)      default = NO                  */ 00204000
*/*                                                                  */ 00205000
*/*      FNDLEVL         (JOB|STEP|CURRSTEP)                         */ 00206000
*/*                                                                  */ 00207000
*/*      FNDSTPN         (step name)                                 */ 00208000
*/*      FNDPRLB         (proc statement)                            */ 00209000
*/*                                                                  */ 00210000
*/*      FNDJBTK         (YES|NO)                                @D3A*/ 00210300
*/*      FNDCSTK         (YES|NO)                                @D3A*/ 00210600
*/*                                                                  */ 00211000
*/*                                                                  */ 00212000
*/*                                                                  */ 00213000
*/*                                                                  */ 00213500
*/* ________________________________________________________         */ 00214000
*/*                 BAL VERSION                                      */ 00215000
*/* ________________________________________________________         */ 00216000
*/*                                                                  */ 00217000
*/*                                                                  */ 00218000
*/*                                                                  */ 00219000
*/* BAL Macro Interface Syntax, List form                            */ 00220000
*/*                                                                  */ 00221000
*/*                                                                  */ 00222000
*/*      name            name: symbol. Begin name in column 1.       */ 00223000
*/*  b                   one or more blanks                          */ 00224000
*/*  SJFACC                                                          */ 00225000
*/*  b                   one or more blanks                          */ 00226000
*/*                                                                  */ 00227000
*/*  ,REQTBL=request table name                                      */ 00228000
*/*  ,NUMREQ=number of requests                                      */ 00229000
*/*  ,MF=L                                                           */ 00230000
*/*                                                                  */ 00231000
*/*                                                                  */ 00232000
*/*                                                                  */ 00233000
*/*                                                                  */ 00234000
*/* _____________________________________________________            */ 00235000
*/* _____________________________________________________            */ 00236000
*/*                                                                  */ 00237000
*/*                                                                  */ 00238000
*/*                                                                  */ 00239000
*/* BAL Macro Interface Syntax, Execute form                         */ 00240000
*/*                                                                  */ 00241000
*/*                                                                  */ 00242000
*/*      name            name: symbol. Begin name in column 1.       */ 00243000
*/*  b                   one or more blanks                          */ 00244000
*/*  SJFACC                                                          */ 00245000
*/*  b                   one or more blanks                          */ 00246000
*/*                                                                  */ 00247000
*/*   (key address,                                              @L1C*/ 00248000
*/*    parameter number address,                                     */ 00249000
*/*    field pointer address,                                    @L1C*/ 00249600
*/*    length of field address),...                              @L1A*/ 00250200
*/*                                                                  */ 00251000
*/*  ,REQUEST=UPDATE|RETRIEVE|FIND|FINDUPD|FINDRET|TERMINATE         */ 00252000
*/*                                                                  */ 00253000
*/*  ,REQTBL=request table pointer address                           */ 00254000
*/*  ,NUMREQ=number of requests address                              */ 00255000
*/*                                                                  */ 00256000
*/*  ,RECOVERY=YES|NO        Default=YES                             */ 00257000
*/*  ,CLEANUP=YES|NO         Default=YES                             */ 00258000
*/*  ,NONAUTH=YES|NO         Default=NO                              */ 00259000
*/*  ,SYSUSER=YES|NO         Default=NO                              */ 00260000
*/*                                                                  */ 00261000
*/*  ,LOCLSTG=local storage pointer address                          */ 00262000
*/*  ,TOKEN=SJF token address                                        */ 00263000
*/*  ,VERB=verb name address                                         */ 00264000
*/*  ,LABEL=label name address                                   @D1A*/ 00265000
*/*                                                                  */ 00266000
*/*  ,CONTINU=YES|NO          Default=NO                             */ 00267000
*/*  ,MF=E                                                           */ 00268000
*/*                                                                  */ 00269000
*/*                                                                  */ 00270000
*/*   The following are used only on an UPDATE or FINDUPD            */ 00271000
*/*   request.                                                       */ 00272000
*/*                                                                  */ 00273000
*/*  ,UPDJRNL=YES|NO          Default=NO                             */ 00274000
*/*                                                                  */ 00275000
*/*  ,UPDALTS=Alternate SWA Manager pointer address              @D2A*/ 00276000
*/*                                                                  */ 00277000
*/*   The following are used only on FIND, FINDUPD or                */ 00278000
*/*   FINDRET requests.                                              */ 00279000
*/*                                                                  */ 00280000
*/*  ,FNDNEXT=YES|NO          Default=NO                             */ 00281000
*/*  ,FNDWTKN=YES|NO          Default=NO                             */ 00282000
*/*                                                                  */ 00283000
*/*  ,FNDLEVL=JOB|STEP|CURRSTEP                                      */ 00284000
*/*                                                                  */ 00285000
*/*  ,FNDSTPN=step name address                                      */ 00286000
*/*  ,FNDPRLB=proc statement address                                 */ 00287000
*/*                                                                  */ 00288000
*/*  ,FNDJBTK=YES|NO                                             @D3A*/ 00288300
*/*  ,FNDCSTK=YES|NO                                             @D3A*/ 00288600
*/*                                                                  */ 00289000
*/*                                                                  */ 00290000
*/*                                                                  */ 00291000
*/*                                                                  */ 00292000
*/*                                                                  */ 00292500
*/*  INPUT =                                                         */ 00293000
*/*                                                                  */ 00294000
*/*                                                                  */ 00295000
*/*                                                                  */ 00296000
*/*                                                                  */ 00297000
*/*  _______________________________________________________         */ 00298000
*/*                    PLS VERSION                                   */ 00299000
*/*  _______________________________________________________         */ 00300000
*/*                                                                  */ 00301000
*/*                                                                  */ 00302000
*/*                                                                  */ 00303000
*/*  The PLS LIST FORM parameters are explained as follows:          */ 00304000
*/*                                                                  */ 00305000
*/*                                                                  */ 00306000
*/*  REQTBL          (request table name)                            */ 00307000
*/*                                                                  */ 00308000
*/*    'request table name' specifies the name to be assigned to     */ 00309000
*/*     the storage declared for the request table. The request      */ 00310000
*/*     table is set by using a mapping based on the declared        */ 00311000
*/*     storage. The mapping is defined by the mapping macro         */ 00312000
*/*     IEFSJACP.  REQTBL is required.                               */ 00313000
*/*                                                                  */ 00314000
*/*                                                                  */ 00315000
*/*  NUMREQ          (number of requests)                            */ 00316000
*/*                                                                  */ 00317000
*/*    'number of requests' is a decimal digit(s) or constant        */ 00318000
*/*    arithmetic expression indicating the maximum number of        */ 00319000
*/*    requests this request table is to accommodate.  The           */ 00320000
*/*    maximum number of requests allowed is 65535.  However, the    */ 00321000
*/*    amount of storage available may further limit the maximum     */ 00322000
*/*    number of requests, see the execute form NUMREQ keyword       */ 00323000
*/*    for details.  NUMREQ is required.                             */ 00324000
*/*                                                                  */ 00325000
*/*                                                                  */ 00326000
*/*  MF              (L)                                             */ 00327000
*/*                                                                  */ 00328000
*/*    Indicates list macro form.  It is required.                   */ 00329000
*/*                                                                  */ 00330000
*/*                                                                  */ 00331000
*/*                                                                  */ 00332000
*/*                                                                  */ 00333000
*/*  ________________________________________________________        */ 00334000
*/*  ________________________________________________________        */ 00335000
*/*                                                                  */ 00336000
*/*                                                                  */ 00337000
*/*                                                                  */ 00338000
*/*                                                                  */ 00339000
*/*  The PLS EXECUTE FORM parameters are explained as follows:       */ 00340000
*/*                                                                  */ 00341000
*/*  (                                                               */ 00342000
*/*    Specifies the beginning of the individual key requests        */ 00343000
*/*    that are used to fill in the request table for the SJF        */ 00344000
*/*    Access Function.                                              */ 00345000
*/*                                                                  */ 00346000
*/*    The key requests consist of a variable number of              */ 00347000
*/*    positional parameters identifying the keys to be accessed.    */ 00348000
*/*    Each positional parameter must have four sub-parameters.      */ 00349000
*/*    The maximum number of positional parameters is determined     */ 00350000
*/*    by the PLS limit of 1000 characters per macro invocation.     */ 00351000
*/*    Depending on variable name lengths and keyword parameters     */ 00352000
*/*    used, probably only 5 to 15 parameters can be specified.      */ 00353000
*/*                                                                  */ 00354000
*/*    Either positional parameters or NUMREQ keyword must be        */ 00355000
*/*    specified, but not both.                                      */ 00356000
*/*                                                                  */ 00357000
*/*    Positional parameters are not used with FIND or TERMINATE     */ 00358000
*/*    requests.                                                     */ 00359000
*/*                                                                  */ 00360000
*/*  (                                                               */ 00361000
*/*    Indicates the beginning of a positional parameter             */ 00362000
*/*    specifying an individual key request.                         */ 00363000
*/*                                                                  */ 00364000
*/*                                                                  */ 00365000
*/*  key                                                             */ 00366000
*/*                                                                  */ 00367000
*/*    Specifies the name of an arithmetic variable or expression    */ 00368000
*/*    that indicates the numeric code corresponding to the key      */ 00369000
*/*    to be accessed.  It is assigned to the field SJACKEY FIXED    */ 00370000
*/*    (16) in the SJF Access Function request table.  See the       */ 00371000
*/*    mapping macro IEFSJKEY for a definition of the keys and       */ 00372000
*/*    their corresponding codes.                                    */ 00373000
*/*                                                                  */ 00374000
*/*                                                                  */ 00375000
*/*  ,parameter number                                               */ 00376000
*/*                                                                  */ 00377000
*/*    Specifies the name of an arithmetic variable or expression    */ 00378000
*/*    that indicates the Nth parameter to be accessed for the       */ 00379000
*/*    keyword. It is assigned to the field SJACPARM FIXED (8) in    */ 00380000
*/*    the SJF Access Function request table.                        */ 00381000
*/*                                                                  */ 00382000
*/*                                                                  */ 00383000
*/*  ,field address                                                  */ 00384000
*/*                                                                  */ 00385000
*/*    Specifies the name of a pointer variable or expression        */ 00386000
*/*    that indicates the area where the result of the request is    */ 00387000
*/*    to be returned. It is assigned to the field SJACADDR          */ 00388000
*/*    PTR(31) in the SJF Access Function request table.             */ 00389000
*/*                                                                  */ 00390000
*/*                                                                  */ 00391000
*/*  ,length of field                                                */ 00392000
*/*                                                                  */ 00393000
*/*    Specifies the name of an arithmetic variable or expression    */ 00394000
*/*    that indicates the length of the field where the result of    */ 00395000
*/*    the request is to be placed.  It is assigned to the field     */ 00396000
*/*    SJACLNTH FIXED (16) in the SJF Access Function request        */ 00397000
*/*    table.                                                        */ 00398000
*/*                                                                  */ 00399000
*/*                                                                  */ 00400000
*/*  )                                                               */ 00401000
*/*    Indicates the end of an individual key request                */ 00402000
*/*    specification.  If more than one are specified, they are      */ 00403000
*/*    separated by commas.                                          */ 00404000
*/*                                                                  */ 00405000
*/*                                                                  */ 00406000
*/*  )                                                               */ 00407000
*/*    Specifies the end of all the individual key requests.         */ 00408000
*/*                                                                  */ 00409000
*/*                                                                  */ 00410000
*/*  REQUEST (UPDATE|RETRIEVE|FINDUPD|FINDRET|FIND|TERMINATE)        */ 00411000
*/*                                                                  */ 00412000
*/*    Specifies the type of request for the SJF Access Function.    */ 00413000
*/*    It is required.                                               */ 00414000
*/*                                                                  */ 00415000
*/*    UPDATE - Update a field in a SWA control block with a         */ 00416000
*/*             field specified by the caller.                       */ 00417000
*/*                                                                  */ 00418000
*/*    RETRIEVE - Retrieve a field from a SWA control block into     */ 00419000
*/*               an area specified by the caller                    */ 00420000
*/*                                                                  */ 00421000
*/*    FIND - Find a particular level of the SWA control block       */ 00422000
*/*           structure (e.g., JOB, EXEC, DD). Returns a token       */ 00423000
*/*           identifing the SWA control block structure found.      */ 00424000
*/*                                                                  */ 00425000
*/*    FINDUPD - Combination of FIND and UPDATE requests.            */ 00426000
*/*                                                                  */ 00427000
*/*    FINDRET - Combination of FIND and RETRIEVE requests.          */ 00428000
*/*                                                                  */ 00429000
*/*    TERMINATE - Frees SJF local storage and if necessary,         */ 00430000
*/*                deletes the recovery environment.  LOCLSTG        */ 00431000
*/*                and MF are the only other parameters              */ 00432000
*/*                specified for a TERMINATE request.                */ 00433000
*/*                                                                  */ 00434000
*/*                                                                  */ 00435000
*/*  REQTBL  (request table)                                         */ 00436000
*/*  REQTBL  ((request table pointer))                               */ 00437000
*/*                                                                  */ 00438000
*/*    Identifies the request table, required parameter. It is       */ 00439000
*/*    not used for FIND or TERMINATE requests and is required       */ 00440000
*/*    for all other requests.                                       */ 00441000
*/*                                                                  */ 00442000
*/*    If positional parameters are specified, the assignments to    */ 00443000
*/*    the request table are generated by the macro.  Otherwise,     */ 00444000
*/*    it is assumed the request table already has values            */ 00445000
*/*    assigned to it. See the mapping macro IEFSJACP for a based    */ 00446000
*/*    variable-length array which defines the structure of the      */ 00447000
*/*    request table and can be used to access it.                   */ 00448000
*/*                                                                  */ 00449000
*/*    When building the request table, request table elements       */ 00450000
*/*    should be zeroed before values are assigned to their          */ 00451000
*/*    fields.  If positional parameters are specified, the macro    */ 00452000
*/*    will generate code to zero an element before generating       */ 00453000
*/*    code to assign values to the element's fields.  If the        */ 00454000
*/*    request table is built by the invoker, the invoker will be    */ 00455000
*/*    responsible for zeroing the elements.  Only the sequential    */ 00456000
*/*    set of elements being used in the particular invocation       */ 00457000
*/*    need to be zeroed.                                            */ 00458000
*/*                                                                  */ 00459000
*/*    'request table' specifies the name of the request table.      */ 00460000
*/*    The request table's address is assigned to the field          */ 00461000
*/*    SJACRPTR PTR(31) in the SJF Access Function's parameter       */ 00462000
*/*    list.                                                         */ 00463000
*/*                                                                  */ 00464000
*/*    'request table pointer' specifies the name of a pointer       */ 00465000
*/*    variable or expression whose value is the address of the      */ 00466000
*/*    request table. It is assigned to the field SJACRPTR           */ 00467000
*/*    PTR(31) in the SJF Access Function's parameter list.          */ 00468000
*/*                                                                  */ 00469000
*/*                                                                  */ 00470000
*/*  NUMREQ  (number of requests)                                    */ 00471000
*/*                                                                  */ 00472000
*/*    'number of requests' specifies the name of an arithmetic      */ 00473000
*/*    variable or expression whose value is the number of           */ 00474000
*/*    requests in the request table specified in REQTBL. It is      */ 00475000
*/*    assigned to the field SJACREQ# FIXED(16) in the SJF Access    */ 00476000
*/*    Function's parameter list.  For requests other than FIND      */ 00477000
*/*    or TERMINATE, either positional parameters or NUMREQ          */ 00478000
*/*    keyword must be specified, but not both. NUMREQ is not        */ 00479000
*/*    used with FIND or TERMINATE requests.                         */ 00480000
*/*                                                                  */ 00481000
*/*    There are two factors which will limit the maximum number     */ 00482000
*/*    of requests which can be specified in the request table.      */ 00483000
*/*    The IEFSJACP field SJACREQ# FIXED(16) specifies the number    */ 00484000
*/*    of requests in the request table.  SJACREQ# must be less      */ 00485000
*/*    than 65535. The other factor limiting the number of requests  */ 00486000
*/*    is the amount of contiguous storage available for the         */ 00487000
*/*    request table.  Each element in the request table will        */ 00488000
*/*    require an amount of storage equivalent to the length of      */ 00489000
*/*    the IEFSJACP field SJACENTY.                                  */ 00490000
*/*                                                                  */ 00491000
*/*                                                                  */ 00492000
*/*  RECOVRY  (YES|NO)                                               */ 00493000
*/*                                                                  */ 00494000
*/*    Indicates whether or not the recovery environment should      */ 00495000
*/*    be established.  The recovery environment is only             */ 00496000
*/*    established on the first SJF invocation,  when SJF local      */ 00497000
*/*    storage is obtained.  Requests for recovery will be           */ 00498000
*/*    ignored by SJF on subsequent invocations.  It is not          */ 00499000
*/*    required, the default is yes.                                 */ 00500000
*/*                                                                  */ 00501000
*/*  CLEANUP  (YES|NO)                                               */ 00502000
*/*                                                                  */ 00503000
*/*    Indicates whether or not the clean-up processing should be    */ 00504000
*/*    performed.  Clean-up processing frees local storage and       */ 00505000
*/*    deletes the recovery environment, if necessary.  It is not    */ 00506000
*/*    required, the default is yes.                                 */ 00507000
*/*                                                                  */ 00508000
*/*                                                                  */ 00509000
*/*  NONAUTH  (YES|NO)                                               */ 00510000
*/*                                                                  */ 00511000
*/*    Indicates whether or not the SJF access to be made is on      */ 00512000
*/*    behalf of a non-authorized user.  Should be set to YES if     */ 00513000
*/*    the routine invoking the SJF Access Function is attempting    */ 00514000
*/*    to obtain information for a non-authorized  user such as a    */ 00515000
*/*    problem program.  The SJF keys for which authorization        */ 00516000
*/*    attributes are defined can be found in the mapping macro      */ 00517000
*/*    IEFSJKEY.  The parameter is not required, the default is      */ 00518000
*/*    no.  It is not used with FIND.                                */ 00519000
*/*                                                                  */ 00520000
*/*                                                                  */ 00521000
*/*  SYSUSER  (YES|NO)                                               */ 00522000
*/*                                                                  */ 00523000
*/*    Indicates whether this request for the SJF Access Function    */ 00524000
*/*    accesses system only information, such as information         */ 00525000
*/*    other than JCL keywords.  It is not required, the default     */ 00526000
*/*    is no.  It is not used with FIND.                             */ 00527000
*/*                                                                  */ 00528000
*/*                                                                  */ 00529000
*/*  LOCLSTG  (local storage pointer)                                */ 00530000
*/*                                                                  */ 00531000
*/*    'local storage pointer' specifies the name of a pointer       */ 00532000
*/*    variable or expression whose value is the local storage       */ 00533000
*/*    address. It is assigned to the field SJACSTOR PTR(31) in      */ 00534000
*/*    the SJF Access Function's parameter list.                     */ 00535000
*/*                                                                  */ 00536000
*/*    If SJF local storage has not been obtained, do not specify    */ 00537000
*/*    LOCLSTG.  A pointer to the SJF local storage area will        */ 00538000
*/*    then be returned in the field SJACSTOR in the SJF Access      */ 00539000
*/*    Function parameter list. Once local storage has been          */ 00540000
*/*    obtained, subsequent invocations require LOCLSTG to be        */ 00541000
*/*    specified with SJACSTOR, the pointer to the local storage     */ 00542000
*/*    area.                                                         */ 00543000
*/*                                                                  */ 00544000
*/*                                                                  */ 00545000
*/*  TOKEN  (SJF token)                                              */ 00546000
*/*                                                                  */ 00547000
*/*    'SJF token' specifies the name of a variable that contains    */ 00548000
*/*    an SJF token. It is assigned to the field SJACTOKN CHAR(8)    */ 00549000
*/*    in the SJF Access Function's parameter list. It is            */ 00550000
*/*    required for RETRIEVE and UPDATE requests, but is optional    */ 00551000
*/*    for FINDUPD, FINDRET, and FIND requests.                      */ 00552000
*/*                                                                  */ 00553000
*/*                                                                  */ 00554000
*/*  VERB  (verb name)                                               */ 00555000
*/*                                                                  */ 00556000
*/*    'verb name' specifies the name of a character variable or     */ 00557000
*/*    expression whose value is the verb name.  It is assigned      */ 00558000
*/*    to the field SJACVERB CHAR(8) in the SJF Access Function's    */ 00559000
*/*    parameter list. It is optional.                               */ 00560000
*/*                                                                  */ 00561000
*/*                                                                  */ 00562000
*/*  LABEL (label name)                                          @D1A*/ 00563000
*/*                                                                  */ 00564000
*/*    'label name' specifies the name of a character            @D1A*/ 00565000
*/*    variable or expression whose value is the statement       @D1A*/ 00566000
*/*    label on a JCL statement. It is optional for FIND, UPDATE @D1A*/ 00567000
*/*    FINDUPD, and FINDRET requests. It is not allowed          @D1A*/ 00568000
*/*    otherwise.  It is assigned to the field SJACLABL CHAR(8)  @D1A*/ 00569000
*/*    in the SJF Access Function parameter list.                @D1A*/ 00570000
*/*                                                                  */ 00571000
*/*                                                                  */ 00572000
*/*  CONTINU  (YES|NO)                                               */ 00573000
*/*                                                                  */ 00574000
*/*    Indicates whether or not to continue processing after         */ 00575000
*/*    allowable errors have occurred.  The allowable errors are     */ 00576000
*/*    defined as those which will not terminate retrieve            */ 00577000
*/*    processing, see the SJF Access Function for details. It is    */ 00578000
*/*    not used with a FIND request, and it is not required          */ 00579000
*/*    otherwise. The default is no.                                 */ 00580000
*/*                                                                  */ 00581000
*/*  MF       (E)                                                    */ 00582000
*/*                                                                  */ 00583000
*/*    Indicates this is the execute macro form.  It is required.    */ 00584000
*/*                                                                  */ 00585000
*/*                                                                  */ 00586000
*/*                                                                  */ 00587000
*/*  The following are used only on an UPDATE or FINDUPD request.    */ 00588000
*/*                                                                  */ 00589000
*/*  UPDJRNL  (YES|NO)                                               */ 00590000
*/*                                                                  */ 00591000
*/*    Indicates whether or not journaling should be established.    */ 00592000
*/*    Not required, the default is no.                              */ 00593000
*/*                                                                  */ 00594000
*/*                                                                  */ 00595000
*/*  UPDALTS  (Alternate SWA Manager address)                    @D2A*/ 00596000
*/*                                                                  */ 00597000
*/*    Indicates the address of the Alternate SWA Manager        @D2A*/ 00598000
*/*    to be used by SJF Access when building new SWB chains.    @D2A*/ 00599000
*/*    Required for calls to the SJF Access Function during      @D2A*/ 00600000
*/*    Interpreter processing, not used otherwise.               @D2A*/ 00601000
*/*                                                                  */ 00602000
*/*                                                                  */ 00603000
*/*                                                                  */ 00604000
*/*  The following are used only on FIND, FINDUPD or FINDRET         */ 00605000
*/*  requests.                                                       */ 00606000
*/*                                                                  */ 00607000
*/*                                                                  */ 00608000
*/*  FNDNEXT  (YES|NO)                                               */ 00609000
*/*                                                                  */ 00610000
*/*    Indicates whether or not this is a find next SWA block        */ 00611000
*/*    request.  It is not required, the default is no.              */ 00612000
*/*                                                                  */ 00613000
*/*                                                                  */ 00614000
*/*  FNDWTKN  (YES|NO)                                               */ 00615000
*/*                                                                  */ 00616000
*/*    Indicates that a job token is specified.  It is only used     */ 00617000
*/*    when STEP is specified for the FNDLEVL parameter.  It is      */ 00618000
*/*    optional, the default is no.                                  */ 00619000
*/*                                                                  */ 00620000
*/*                                                                  */ 00621000
*/*  FNDLEVL  (JOB|STEP)                                             */ 00622000
*/*                                                                  */ 00623000
*/*    Indicates the level of the SWA control block structure        */ 00624000
*/*    to be searched.                                               */ 00625000
*/*                                                                  */ 00626000
*/*    JOB -    Searches job level JCL statements.                   */ 00627000
*/*                                                                  */ 00628000
*/*    STEP -   Searches step level JCL for the step                 */ 00629000
*/*             identified by the FNDSTPN parameter.                 */ 00630000
*/*                                                                  */ 00631000
*/*    CURRSTEP - Searches for the active step.                      */ 00632000
*/*                                                                  */ 00633000
*/*    Required for FIND, FINDUPD, and FINDRET requests when         */ 00634000
*/*    FNDNEXT, FNDJBTK or FNDCSTK is no. Not used otherwise.        */ 00635000
*/*                                                                  */ 00636000
*/*                                                                  */ 00637000
*/*  FNDSTPN  (step name)                                            */ 00638000
*/*                                                                  */ 00639000
*/*    'step name' specifies the name of a character                 */ 00640000
*/*    variable or expression whose value is the step name           */ 00641000
*/*    to be found. It is assigned to the field SJACSTPN             */ 00642000
*/*    CHAR(8) in the SJF Access Function parameter list.            */ 00643000
*/*    It is not used if FNDNEXT(YES) is specified.                  */ 00644000
*/*                                                                  */ 00645000
*/*                                                                  */ 00646000
*/*  FNDPRLB  (proc statement)                                       */ 00647000
*/*                                                                  */ 00648000
*/*    'proc  statement' specifies the name of a character           */ 00649000
*/*    variable or expression whose value is the label on the        */ 00650000
*/*    PROC statement. It is assigned to the field SJACPRLB          */ 00651000
*/*    CHAR(8) in the SJF Access Function's parameter list. It       */ 00652000
*/*    is optional.                                                  */ 00653000
*/*                                                                  */ 00654000
*/*                                                                  */ 00655000
*/*  FNDJBTK  (YES|NO)                                           @D3A*/ 00655500
*/*                                                                  */ 00656000
*/*    Indicates that a Job token is requested. Found by using   @D3A*/ 00656200
*/*    the active JSCB. Not to be used in conjunction with       @D3A*/ 00656400
*/*    FNDNEXT, FNDWTKN, FNDLEVL, FNDCSTK, FNDSTPN or FNDPRLB.   @D3A*/ 00656600
*/*    It is optional, default is no.                            @D3A*/ 00656800
*/*                                                                  */ 00657000
*/*                                                                  */ 00658000
*/*  FNDCSTK  (YES|NO)                                           @D3A*/ 00658500
*/*                                                                  */ 00659000
*/*    Indicates that a Current Step token is requested. Found   @D3A*/ 00659100
*/*    by using the active JSCB. Not be used in conjunction with @D3A*/ 00659200
*/*    FNDNEXT, FNDWTKN, FNDLEVL, FNDJBTK, FNDSTPN or FNDPRLB.   @D3A*/ 00659300
*/*    It is optional, default is no.                            @D3A*/ 00659400
*/*                                                                  */ 00659500
*/*                                                                  */ 00659600
*/*                                                                  */ 00659700
*/*                                                                  */ 00659800
*/*                                                                  */ 00659900
*/*                                                                  */ 00660000
*/*  _________________________________________________________       */ 00660100
*/*                    BAL VERSION                                   */ 00661000
*/*                                                                  */ 00662000
*/*  Only those parameters which differ from the PLS version         */ 00663000
*/*  are described below.                                            */ 00664000
*/*  _________________________________________________________       */ 00665000
*/*                                                                  */ 00666000
*/*                                                                  */ 00667000
*/*                                                                  */ 00668000
*/*                                                                  */ 00669000
*/*  The BAL List Form parameters are explained as follows:          */ 00670000
*/*                                                                  */ 00671000
*/*                                                                  */ 00672000
*/*  ,REQTBL=request table name                                      */ 00673000
*/*                                                                  */ 00674000
*/*    'request table name' specifies the name of a symbol           */ 00675000
*/*    to be assigned to the storage declared for the                */ 00676000
*/*    request table. The request table values can be set            */ 00677000
*/*    by using a DSECT based on the declared storage. The           */ 00678000
*/*    DSECT is defined by the mapping macro IEFSJACP. REQTBL        */ 00679000
*/*    is required.                                                  */ 00680000
*/*                                                                  */ 00681000
*/*  ,NUMREQ=number of requests                                      */ 00682000
*/*                                                                  */ 00683000
*/*    'number of requests' MUST be a numeric value.  See the        */ 00683100
*/*     description of the PLS version of the parameter for          */ 00683200
*/*     more detail.  The argument is check for being numeric        */ 00683300
*/*     but no check is made on the value.  Values of 0 and          */ 00683400
*/*     values greater than 65,535 will be accepted by SJFACC        */ 00683500
*/*     but may be unacceptable to the assembler or produce          */ 00683600
*/*     unexpected results.                                          */ 00683700
*/*                                                                  */ 00684000
*/*  ,MF=L                                                           */ 00685000
*/*                                                                  */ 00686000
*/*                                                                  */ 00687000
*/*                                                                  */ 00688000
*/*                                                                  */ 00689000
*/*                                                                  */ 00690000
*/* ____________________________________________________________     */ 00691000
*/* ____________________________________________________________     */ 00692000
*/*                                                                  */ 00693000
*/*                                                                  */ 00694000
*/*                                                                  */ 00695000
*/*    The BAL Execute Form parameters are explained as follows:     */ 00696000
*/*                                                                  */ 00697000
*/*                                                                  */ 00698000
*/*    Consists of a variable number of positional parameters        */ 00705000
*/*    identifying the keys to be accessed. Each positional          */ 00706000
*/*    parameter must have all four subparameters.  The SJF          */ 00707000
*/*    Access Function limits the maximum number of requests to      */ 00708000
*/*    65535, see the NUMREQ keyword for details.  Either            */ 00709000
*/*    positional parameters or NUMREQ must be specified, but not    */ 00710000
*/*    both. Positional parameters are not used with FIND or         */ 00711000
*/*    TERMINATE requests.                                           */ 00712000
*/*                                                                  */ 00713000
*/*  (                                                               */ 00714000
*/*                                                                  */ 00715000
*/*    Indicates the beginning of a positional parameter             */ 00716000
*/*    specifying an individual key request.                         */ 00717000
*/*                                                                  */ 00718000
*/*                                                                  */ 00719000
*/*  key address                                                     */ 00720000
*/*                                                                  */ 00721000
*/*    Specifies the address of a 2 byte numeric field that          */ 00722000
*/*    contains the numeric code corresponsing to the key to be      */ 00723000
*/*    accessed.  See the description of the PLS version of the      */ 00724000
*/*    parameter for more detail.                                    */ 00725000
*/*                                                                  */ 00726000
*/*                                                                  */ 00727000
*/*  ,parameter number address                                       */ 00728000
*/*                                                                  */ 00729000
*/*    Specifies the address of a 1 byte field that contains an      */ 00730000
*/*    arithmetic value indicating the Nth parameter to be           */ 00731000
*/*    accessed for the keyword. See the description of the PLS      */ 00732000
*/*    version of the parameter for more detail.                     */ 00733000
*/*                                                                  */ 00734000
*/*                                                                  */ 00735000
*/*  ,field pointer address                                          */ 00736000
*/*                                                                  */ 00737000
*/*    Specifies the address of a 4 byte field containing a          */ 00738000
*/*    pointer that indicates the area where the result of the       */ 00739000
*/*    request is to be returned. See the description of the PLS     */ 00740000
*/*    version of the parameter for more detail.                     */ 00741000
*/*                                                                  */ 00742000
*/*                                                                  */ 00743000
*/*  ,length of field address                                        */ 00744000
*/*                                                                  */ 00745000
*/*    Specifies the address of a 2 byte field containing an         */ 00746000
*/*    arithmetic value that indicates the length of the field       */ 00747000
*/*    where the result of the request is to be placed.  See the     */ 00748000
*/*    description of the PLS version of the parameter for more      */ 00749000
*/*    detail.                                                       */ 00750000
*/*                                                                  */ 00751000
*/*  )                                                               */ 00752000
*/*                                                                  */ 00753000
*/*    Indicates the end of an individual key request                */ 00754000
*/*    specification. If more than one are specified, they should    */ 00755000
*/*    be separated by commas.                                       */ 00756000
*/*                                                                  */ 00757000
*/*                                                                  */ 00759000
*/*                                                                  */ 00761000
*/*  ,REQUEST=UPDATE|RETRIEVE|FINDUPD|FINDRET|FIND|TERMINATE         */ 00763000
*/*                                                                  */ 00764000
*/*                                                                  */ 00765000
*/*  ,REQTBL=request table pointer address                           */ 00766000
*/*                                                                  */ 00767000
*/*    'request table pointer address' specifies the address of a    */ 00768000
*/*    4 byte field containing the address of the request table.     */ 00769000
*/*    See the mapping macro IEFSJACP for a DSECT which defines      */ 00770000
*/*    the structure of the request table and can be used to         */ 00771000
*/*    access it.                                                    */ 00772000
*/*                                                                  */ 00773000
*/*                                                                  */ 00774000
*/*  ,NUMREQ=number of requests address                              */ 00775000
*/*                                                                  */ 00776000
*/*    'number of requests address' specifies the address of         */ 00777000
*/*    a 2 byte field containing an arithmetic value                 */ 00778000
*/*    indicating the number of requests in the request              */ 00779000
*/*    table.  See the description of the PLS version of the         */ 00780000
*/*    parameter for more detail.                                    */ 00781000
*/*                                                                  */ 00782000
*/*                                                                  */ 00783000
*/*  ,RECOVRY=YES|NO                                                 */ 00784000
*/*                                                                  */ 00785000
*/*  ,CLEANUP=YES|NO                                                 */ 00786000
*/*                                                                  */ 00787000
*/*  ,NONAUTH=YES|NO                                                 */ 00788000
*/*                                                                  */ 00789000
*/*  ,SYSUSER=YES|NO                                                 */ 00790000
*/*                                                                  */ 00791000
*/*                                                                  */ 00792000
*/*  ,LOCLSTG=local storage pointer address                          */ 00793000
*/*                                                                  */ 00794000
*/*    'local storage pointer address' specifies the address of a    */ 00795000
*/*    4 byte field containing the local storage address.  Once      */ 00796000
*/*    local storage has been obtained, subsequent invocations       */ 00797000
*/*    require 'local storage pointer address' to point to           */ 00798000
*/*    SJACSTOR.  See the description of the PLS version of the      */ 00799000
*/*    parameter for more detail.                                    */ 00800000
*/*                                                                  */ 00801000
*/*                                                                  */ 00802000
*/* ,TOKEN=SJF token address                                         */ 00803000
*/*                                                                  */ 00804000
*/*    'SJF token address' specifies the address of an 8 byte        */ 00805000
*/*    field that contains a SJF token.  See the description of      */ 00806000
*/*    the PLS version of the parameter for more detail.             */ 00807000
*/*                                                                  */ 00808000
*/*                                                                  */ 00809000
*/* ,VERB=verb name address                                          */ 00810000
*/*                                                                  */ 00811000
*/*    'verb name address' specifies the address of an 8 byte        */ 00812000
*/*    character field that contains a verb name.  See the           */ 00813000
*/*    description of the PLS version of the parameter for more      */ 00814000
*/*    detail.                                                       */ 00815000
*/*                                                                  */ 00816000
*/*                                                                  */ 00817000
*/* ,LABEL=label name address                                    @D1A*/ 00818000
*/*                                                                  */ 00819000
*/*    'label name address' specifies the address of an 8 byte   @D1A*/ 00820000
*/*    character field whose value is a statement label on a JCL @D1A*/ 00821000
*/*    statement. See the description of the PLS version of the  @D1A*/ 00822000
*/*    parameter for more detail.                                @D1A*/ 00823000
*/*                                                                  */ 00824000
*/*                                                                  */ 00825000
*/* ,CONTINU=YES|NO                                                  */ 00826000
*/*                                                                  */ 00827000
*/* ,MF=E                                                            */ 00828000
*/*                                                                  */ 00829000
*/*                                                                  */ 00830000
*/*                                                                  */ 00831000
*/* NOTE: The following is  used only on an UPDATE or FINDUPD        */ 00832000
*/* request.                                                         */ 00833000
*/*                                                                  */ 00834000
*/*                                                                  */ 00835000
*/* ,UPDJRNL=YES|NO                                                  */ 00836000
*/*                                                                  */ 00837000
*/* ,UPDALTS=Alternate SWA Manager pointer address               @D2A*/ 00838000
*/*                                                                  */ 00839000
*/*                                                                  */ 00840000
*/*                                                                  */ 00841000
*/* NOTE: The following are used only on FIND, FINDUPD or FINDRET    */ 00842000
*/* request.                                                         */ 00843000
*/*                                                                  */ 00844000
*/*                                                                  */ 00845000
*/* ,FNDNEXT=YES|NO                                                  */ 00846000
*/*                                                                  */ 00847000
*/* ,FNDWTKN=YES|NO                                                  */ 00848000
*/*                                                                  */ 00849000
*/* ,FNDLEVL=JOB|STEP|CURRSTEP                                       */ 00850000
*/*                                                                  */ 00851000
*/* ,FNDSTPN=step name address                                       */ 00853000
*/*                                                                  */ 00854000
*/*    'step name address' specifies the address of an 8 byte        */ 00855000
*/*    character field that contains the step name to be found.      */ 00856000
*/*    See the description of the PLS version of the parameter       */ 00857000
*/*    for more detail.                                              */ 00858000
*/*                                                                  */ 00859000
*/*                                                                  */ 00860000
*/* ,FNDPRLB=proc statement address                                  */ 00861000
*/*                                                                  */ 00862000
*/*    'proc statement address' specifies the address of an 8        */ 00863000
*/*    byte character field that contains the label on the PROC      */ 00864000
*/*    statement.  See the description of the PLS version of the     */ 00865000
*/*    parameter for more detail.                                    */ 00866000
*/*                                                                  */ 00867000
*/*                                                                  */ 00868000
*/* ,FNDJBTK=YES|NO                                              @D3A*/ 00868500
*/*                                                                  */ 00869000
*/* ,FNDCSTK=YES|NO                                              @D3A*/ 00869200
*/*                                                                  */ 00869400
*/*                                                                  */ 00869600
*/* OUTPUT =                                                         */ 00870000
*/*                                                                  */ 00871000
*/*                                                                  */ 00872000
*/*      PLS VERSION:                                                */ 00873000
*/*                                                                  */ 00874000
*/*      If invalid parameters are detected, only error messages     */ 00875000
*/*      will be generated (with the exception of DO and END         */ 00876000
*/*      statements for the execute form).                           */ 00877000
*/*                                                                  */ 00878000
*/*      For valid invocations of the list form:                     */ 00879000
*/*        Generates a declare for the storage for the request       */ 00880000
*/*        table.  A character declare on a double word boundary @D1C*/ 00881000
*/*        is used. The mapping to be based on the storage area      */ 00882000
*/*        for the request table is defined in the mapping macro     */ 00883000
*/*        IEFSJACP.                                                 */ 00884000
*/*                                                                  */ 00885000
*/*      For valid invocations of the execute form:                  */ 00886000
*/*        Generates the assignment statements to fill in the SJF    */ 00887000
*/*        Access Function parameter list (IEFSJACP) for the         */ 00888000
*/*        requested function.  Generates the invocation of the      */ 00889000
*/*        SJF REQUEST macro with a request for the appropriate      */ 00890000
*/*        function, TERMINATE or ACCESS.                            */ 00891000
*/*                                                                  */ 00892000
*/*                                                                  */ 00893000
*/*                                                                  */ 00894000
*/*      BAL VERSION:                                                */ 00895000
*/*                                                                  */ 00896000
*/*                                                                  */ 00897000
*/*      If invalid parameters are detected, only MNOTES will be     */ 00898000
*/*      generated.                                                  */ 00899000
*/*                                                                  */ 00900000
*/*      For valid invocations of the list form:                     */ 00901000
*/*        Generates the definition for the storage for the          */ 00902000
*/*        request table.  A character definiton on a double     @D1C*/ 00903000
*/*        word boundary is used. The DSECT to be mapped on the      */ 00904000
*/*        storage area for the request table is defined in the      */ 00905000
*/*        mapping macro IEFSJACP.                                   */ 00906000
*/*                                                                  */ 00907000
*/*      For valid invocations of the execute form:                  */ 00908000
*/*        Generates code to fill in the SJF Access Function         */ 00909000
*/*        parameter list (IEFSJACP) for the requested function.     */ 00910000
*/*        Generates the invocation of the SJF REQUEST macro with    */ 00911000
*/*        a request for the appropriate function, TERMINATE or      */ 00912000
*/*        SJF Access.                                               */ 00913000
*/*                                                                  */ 00914000
*/*                                                                  */ 00915000
*/*                                                                  */ 00916000
*/*   EXIT - NORMAL =                                                */ 00917000
*/*                                                                  */ 00918000
*/*     CONDITION = NO ERRORS DETECTED                               */ 00919000
*/*                                                                  */ 00920000
*/*     RETURN CODE = 0                                              */ 00921000
*/*                                                                  */ 00922000
*/*                                                                  */ 00923000
*/*                                                                  */ 00924000
*/*   EXIT - ERROR =                                                 */ 00925000
*/*                                                                  */ 00926000
*/*                                                                  */ 00927000
*/*     CONDITIONS =                                                 */ 00928000
*/*                                                                  */ 00929000
*/*        - ERRORS DETECTED IN INPUT PARAMETER LIST:                */ 00930000
*/*                                                                  */ 00931000
*/*          - A positional parameter is specified, but does not     */ 00932000
*/*            have four subparameters.                              */ 00933000
*/*                                                                  */ 00934000
*/*          - An invalid subparameter is specified in the           */ 00935000
*/*            positional parameter list.                            */ 00936000
*/*                                                                  */ 00937000
*/*          - A keyword parameter is assigned an invalid and        */ 00938000
*/*            non-null value.                                       */ 00939000
*/*                                                                  */ 00940000
*/*          - A required keyword parameter is not specified.        */ 00941000
*/*                                                                  */ 00942000
*/*          - A specified keyword parameter is incompatible with    */ 00943000
*/*            the request type, or the specified macro form.        */ 00944000
*/*                                                                  */ 00945000
*/*          - Positional parameters are specified, but are          */ 00946000
*/*            mutually exclusive with the request type, list        */ 00947000
*/*            macro form, or a specified keyword parameter.         */ 00948000
*/*                                                                  */ 00949000
*/*          - Numreq must be numeric in list form             2@L1A */ 00949300
*/*            (BAL version only.)                                   */ 00949600
*/*                                                                  */ 00950000
*/*                                                                  */ 00951000
*/*                                                                  */ 00951500
*/*     OUTPUT =                                                     */ 00952000
*/*                                                                  */ 00953000
*/*                                                                  */ 00954000
*/*          - Error messages are issued in the macro source listing */ 00955000
*/*            and in the modified source text.                      */ 00956000
*/*                                                                  */ 00957000
*/*                                                                  */ 00958000
*/*     RETURN CODE = 12                                             */ 00959000
*/*                                                                  */ 00960000
*/*                                                                  */ 00961000
*/*                                                                  */ 00962000
*/*   EXTERNAL REFERENCES =                                          */ 00963000
*/*                                                                  */ 00964000
*/*     ROUTINES = NONE                                              */ 00965000
*/*                                                                  */ 00966000
*/*     DATA-AREAS = IEFSJACP                                        */ 00967000
*/*                                                                  */ 00968000
*/*     CONTROL-BLOCKS = NONE                                        */ 00969000
*/*                                                                  */ 00970000
*/*                                                                  */ 00971000
*/*   TABLES = NONE                                                  */ 00972000
*/*                                                                  */ 00973000
*/*   EXECUTABLE MACROS = SJFREQ                                     */ 00974000
*/*                                                                  */ 00975000
*/*   SERIALIZATION = N/A                                            */ 00976000
*/*                                                                  */ 00977000
*/*                                                                  */ 00978000
*/*                                                                  */ 00979000
*/*   MESSAGES =                                                     */ 00980000
*/*                                                                  */ 00981000
*/*                                                                  */ 00982000
*/*   AHA010 SJFACC ERROR:   POSITIONAL PARAMETER NO. <parm no.>     */ 00983000
*/*   DOES NOT CONTAIN 4 SUBPARAMETERS.                              */ 00984000
*/*                                                                  */ 00985000
*/*   AHA020 SJFACC ERROR:   POSITIONAL PARAMETER NO. <parm no.>,    */ 00986000
*/*   SUB-PARAMETER NO. <sub-parm no.> IS NULL OR CONTAINS           */ 00987000
*/*   FURTHER SUBPARAMETERS.                                         */ 00988000
*/*                                                                  */ 00989000
*/*   AHA030 SJFACC ERROR:   KEYWORD PARAMETER <parm name>           */ 00990000
*/*   SPECIFIED INCORRECTLY.                                         */ 00991000
*/*                                                                  */ 00992000
*/*   AHA040 SJFACC ERROR:   KEYWORD PARAMETER <parm name>           */ 00993000
*/*   REQUIRED BUT NOT SPECIFIED.                                    */ 00994000
*/*                                                                  */ 00995000
*/*   AHA050 SJFACC ERROR:   KEYWORD PARAMETER<S> <parm name(s)      */ 00996000
*/*   or description> SPECIFIED BUT, MUTUALLY EXCLUSIVE WITH         */ 00997000
*/*   <THE REQUEST TYPE | THE LIST MACRO FORM | THE EXECUTE MACRO    */ 00998000
*/*   FORM>                                                          */ 00999000
*/*                                                                  */ 01000000
*/*   AHA060 SJFACC ERROR:  POSITIONAL PARAMETERS SPECIFIED, BUT     */ 01001000
*/*   MUTUALLY EXCLUSIVE WITH <parameter name or description |       */ 01002000
*/*   THE REQUEST TYPE | THE LIST MACRO FORM>.                       */ 01003000
*/*                                                                  */ 01004000
*/*   AHA070 SJFACC ERROR:  REQUEST TABLE DECLARE NOT GENERATED      */ 01005000
*/*   DUE TO ERRORS FOUND IN THE LIST FORM INVOCATION<.|:  macro     */ 01006000
*/*   invocation>                                                    */ 01007000
*/*                                                                  */ 01008000
*/*   AHA080 SJFACC RROR: NUMREQ MUST BE NUMERIC IN LIST        2@L1A*/ 01008200
*/*          FORM. (BAL version only.)                               */ 01008400
*/*                                                                  */ 01008600
*/*   ABEND CODES = N/A                                              */ 01009000
*/*                                                                  */ 01010000
*/*   NOTES = The keywords should be processed in the order that @D3A*/ 01010500
*/*           the appear in the prologue. As a result, the logic @D3A*/ 01011000
*/*           for the PL/S and BAL versions should be identical. @D3A*/ 01011500
*/*                                                                  */ 01012000
*/*   CHANGE ACTIVITY = L0,P1,P2,D1,D2,L1,P3,P4,D3,P5            @P5C*/ 01012300
*/*                                                                  */ 01012600
*/* $L0= SMSSTG2 JBB2223 860127 PDY1: STOR MGMT SUBSYS STG2 SUPT @L0A*/ 01013000
*/* $P1= PC20001 JBB2223 860127 PDY1: Removal of trace option    @P1A*/ 01014000
*/* $P2= PC20003 JBB2223 860127 PDY1: Comment line flag          @P2A*/ 01015000
*/* $D1= DCR0006 JBB2223 860811 PDY1: Macro & SJACP parm changes @D1A*/ 01016000
*/* $D2= DCR0015 JBB2223 860811 PDY1: Add UPDALTS parameter      @D2A*/ 01017000
*/* $L1= SMSSTG2 JBB2223 861117 PDDW: Add assembler version.     @L1A*/ 01017500
*/* $P3= PC20129 JBB2223 861117 PDDW: Fix bi-lingual interface.  @P3A*/ 01017700
*/* $P4= PC20133 JBB2223 861117 PDDW: Remove duplicate 'IN' in   @P4A*/ 01017900
*/*                                   message AHA080             @P4A*/ 01018100
*/* $D3= DCR0033 JBB2223 870225 PDN4: Add FNDJBTK and FNDCSTK    @D3A*/ 01018300
*/* $P5= PC20198 JBB2223 870408 PDJY: Fix label on GOTO          @P5A*/ 01018400
*/*                                                                  */ 01018500
*/********************************************************************/ 01019000
*/* A 000000-999999                                              @L0A*/ 01020000
*/* C Trace option left in from unit test, removed               @P1A*/ 01021000
*/* C Line flag added for PC20001                                @P2A*/ 01022000
*/* C FNDLABL parameter changed to LABEL parameter, SJACP zeroed @D1A*/ 01023000
*/*   via SJACFLDS field, request table declare on a double word @D1A*/ 01024000
*/*   boundary                                                   @D1A*/ 01025000
*/* A Parameter list constants assigned for TERMINATE request    @D1A*/ 01026000
*/*   Support for UPDALTS parameter, which is used to contain        */ 01027000
*/*   the address of the Alternate SWA manager when writing SWBs @D2A*/ 01028000
*/* A Add the assembler version of the macro.                    @L1A*/ 01028500
*/* C Fixed problems with bi-lingual interface.  PLAS tried to   @P3A*/ 01028600
*/*   scan assembler macro code.                                 @P3A*/ 01028700
*/* A Fixed missing label generation from label specified on     @P3A*/ 01028800
*/*   assembler macro invocation.                                @P3A*/ 01028900
*/* D Removed duplicate 'IN' in message text for AHA080          @P4A*/ 01029000
*/* A Add support for FNDJBTK and FNDCSTK, which requests a      @D3A*/ 01029100
*/*   Job token and Current Step token, respectively.            @D3A*/ 01029200
*/* C Removed percent sign from GOTO environment statement label @P5A*/ 01029400
*@EJECT;                                                                01029600
*/********************************************************************/ 01030000
*/*                                                                  */ 01031000
*/* Definition of the macro invocation.                              */ 01032000
*/*                                                                  */ 01033000
*/********************************************************************/ 01034000
*                                                                       01035000
*%SJFACC:                                                               01036000
*          MACRO KEYS(                                                  01037000
*                      REQUEST, REQTBL, NUMREQ,                         01038000
*                      RECOVRY, CLEANUP, NONAUTH,                       01039000
*                      SYSUSER, LOCLSTG, TOKEN, VERB,                   01040000
*                      LABEL, CONTINU, MF, UPDJRNL, UPDALTS,            01041000
*                      FNDNEXT, FNDWTKN, FNDLEVL,                       01042000
*                      FNDSTPN, FNDPRLB,                                01042700
*                      FNDJBTK, FNDCSTK                                 01043400
*                    );                /*                        @D3C*/ 01044100
*                                                                       01045000
*                                                                       01046000
*/********************************************************************/ 01047000
*/*                                                                  */ 01048000
*/* Declaration of internal macro variables.                         */ 01049000
*/*                                                                  */ 01050000
*/********************************************************************/ 01051000
*                                                                       01052000
*DCL                                                                    01053000
*  IPARML_ERR_FOUND FIXED,             /* Parm list errors found        01054000
*                                         flag                       */ 01055000
*  IANS_TEXT1       CHAR,              /* Answer text to be             01056000
*                                         generated                  */ 01057000
*  IANS_TEXT2       CHAR,              /* Answer text to be             01058000
*                                         generated                  */ 01059000
*                                      /*                       3@D1D*/ 01060000
*  IRETURN_CODE     FIXED,             /* Sets return code for macro */ 01061000
*  J                FIXED,             /* Counting var for Do loop   */ 01062000
*  K                FIXED,             /* Counting var for Do loop   */ 01063000
*  IMSG010_TEXT1    CHAR,              /* Text constant for error       01064000
*                                         message 010                */ 01065000
*  IMSG010_TEXT2    CHAR,              /* Text constant for error       01066000
*                                         message 010                */ 01067000
*  IMSG020_TEXT1    CHAR,              /* Text constant for error       01068000
*                                         message 020                */ 01069000
*  IMSG020_TEXT2    CHAR,              /* Text constant for error       01070000
*                                         message 020                */ 01071000
*  IMSG020_TEXT3    CHAR,              /* Text constant for error       01072000
*                                         message 020                */ 01073000
*  IMSG030_TEXT1    CHAR,              /* Text constant for error       01074000
*                                         message 030                */ 01075000
*  IMSG030_TEXT2    CHAR,              /* Text constant for error       01076000
*                                         message 030                */ 01077000
*  IMSG040_TEXT1    CHAR,              /* Text constant for error       01078000
*                                         message 040                */ 01079000
*  IMSG040_TEXT2    CHAR,              /* Text constant for error       01080000
*                                         message 040                */ 01081000
*  IMSG050_TEXT1    CHAR,              /* Text constant for error       01082000
*                                         message 050                */ 01083000
*  IMSG050_TEXT2    CHAR,              /* Text constant for error       01084000
*                                         message 050                */ 01085000
*  IMSG060_TEXT1    CHAR,              /* Text constant for error       01086000
*                                         message 060                */ 01087000
*  IMSG070_TEXT1    CHAR;              /* Text constant for error       01088000
*                                         message 070                */ 01089000
*@EJECT;                                                                01090000
*/********************************************************************/ 01091000
*/*                                                                  */ 01092000
*/* Initialization of error message text constants that are used     */ 01093000
*/* to build error messages for the detected invalid parameters.     */ 01094000
*/*                                                                  */ 01095000
*/********************************************************************/ 01096000
*                                                                       01097000
*/********************************************************************/ 01098000
*/* Text constants for error message 010.                            */ 01099000
*/********************************************************************/ 01100000
*                                                                       01101000
*IMSG010_TEXT1 =                                                        01102000
*  'AHA010 SJFACC ERROR:  POSITIONAL PARAMETER NO. ';                   01103000
*                                      /* Text for first part of        01104000
*                                         error message 010          */ 01105000
*                                                                       01106000
*IMSG010_TEXT2 =                                                        01107000
*  ' DOES NOT CONTAIN 4 SUB-PARAMETERS.'; /* Text for second part of    01108000
*                                         message 010                */ 01109000
*                                                                       01110000
*                                                                       01111000
*/********************************************************************/ 01112000
*/* Text constants for error message 020.                            */ 01113000
*/********************************************************************/ 01114000
*                                                                       01115000
*IMSG020_TEXT1 =                                                        01116000
*  'AHA020 SJFACC ERROR:  POSITIONAL PARAMETER NO. ';                   01117000
*                                       /* Text for first part of       01118000
*                                         error message 020          */ 01119000
*                                                                       01120000
*IMSG020_TEXT2 = ', SUB-PARAMETER NO. '; /* Text for second part of     01121000
*                                         error message 020          */ 01122000
*                                                                       01123000
*IMSG020_TEXT3 = ' IS NULL OR CONTAINS MORE THAN ONE ARGUMENT.';        01124000
*                                      /* Text for third part of        01125000
*                                         error message 020          */ 01126000
*                                                                       01127000
*                                                                       01128000
*/********************************************************************/ 01129000
*/* Text constants for error message 030.                            */ 01130000
*/********************************************************************/ 01131000
*                                                                       01132000
*IMSG030_TEXT1 =                                                        01133000
*  'AHA030 SJFACC ERROR:  KEYWORD PARAMETER ';                          01134000
*                                      /* Text for first part of        01135000
*                                         error message 030          */ 01136000
*                                                                       01137000
*IMSG030_TEXT2 = ' SPECIFIED INCORRECTLY.';      /* Text for second     01138000
*                                         part of error message 030  */ 01139000
*                                                                       01140000
*                                                                       01141000
*/********************************************************************/ 01142000
*/* Text constants for error message 040.                            */ 01143000
*/********************************************************************/ 01144000
*                                                                       01145000
*IMSG040_TEXT1 = 'AHA040 SJFACC ERROR:  KEYWORD PARAMETER ';            01146000
*                                      /* Text for first part of        01147000
*                                         error message 040          */ 01148000
*                                                                       01149000
*IMSG040_TEXT2 = ' REQUIRED, BUT NOT SPECIFIED.'; /* Text for second    01150000
*                                         part of error message 040  */ 01151000
*                                                                       01152000
*                                                                       01153000
*/********************************************************************/ 01154000
*/* Text constants for error message 050.                            */ 01155000
*/********************************************************************/ 01156000
*                                                                       01157000
*IMSG050_TEXT1 = 'AHA050 SJFACC ERROR:  KEYWORD PARAMETER(S) ';         01158000
*                                      /* Text for first part of        01159000
*                                         error message 050          */ 01160000
*                                                                       01161000
*IMSG050_TEXT2 = ' SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH ';            01162000
*                                      /* Text for second part of       01163000
*                                         error message 050          */ 01164000
*                                                                       01165000
*                                                                       01166000
*/********************************************************************/ 01167000
*/* Text constants for error message 060.                            */ 01168000
*/********************************************************************/ 01169000
*                                                                       01170000
*IMSG060_TEXT1 =                                                        01171000
*   'AHA060 SJFACC ERROR:  POSITIONAL PARAMETER(S) SPECIFIED,' ||       01172000
*   ' BUT MUTUALLY EXCLUSIVE WITH ';   /* Text for error message 060 */ 01173000
*                                                                       01174000
*                                                                       01175000
*/********************************************************************/ 01176000
*/* Text constants for error message 070.                            */ 01177000
*/********************************************************************/ 01178000
*                                                                       01179000
*IMSG070_TEXT1 =                                                        01180000
*   'AHA070 SJFACC ERROR:  REQUEST TABLE DECLARE NOT GENERATED ' ||     01181000
*   'DUE TO ERRORS FOUND IN THE LIST FORM INVOCATION';                  01182000
*                                      /* Text for error message 070 */ 01183000
*                                                                       01184000
*                                                                       01185000
*@EJECT;                                                                01186000
*/********************************************************************/ 01187000
*/*                                                                  */ 01188000
*/*               START OF MAINLINE PROCESSING                       */ 01189000
*/*                                                                  */ 01190000
*/********************************************************************/ 01191000
*                                                                       01192000
*                                                                       01193000
*/********************************************************************/ 01194000
*/* Initializes the parameter list error flag to indicate            */ 01195000
*/* errors have not yet been found in the macro parameter list.      */ 01196000
*/********************************************************************/ 01197000
*                                                                       01198000
*IPARML_ERR_FOUND = 0;                 /* Set the parm list errors      01199000
*                                         found flag off             */ 01200000
*                                                                       01201000
*                                                                       01202000
*/********************************************************************/ 01203000
*/* Branches to the routine to verify the MF keyword.                */ 01204000
*/********************************************************************/ 01205000
*                                                                       01206000
*GOTO LHA0010A;                        /* Branch to the VERIFY_MF       01207000
*                                         routine                    */ 01208000
*LHA0010B:;                            /* Label at which to return      01209000
*                                         from the VERIFY_MF routine */ 01210000
*                                                                       01211000
*                                                                       01212000
*/********************************************************************/ 01213000
*/* If the MF keyword is valid, branches to the routine to process   */ 01214000
*/* the macro form specified.                                        */ 01215000
*/********************************************************************/ 01216000
*                                                                       01217000
*IF IPARML_ERR_FOUND = 0 THEN          /* Test if MF was valid       */ 01218000
*  DO;                                 /* MF keyword valid           */ 01219000
*   IF MF(1) = 'L' THEN                /* Test if list macro form    */ 01220000
*    DO;                               /* List macro form            */ 01221000
*      GOTO LHA0020A;                  /* Branch to 'LIST_FORM'         01222000
*                                         routine to process list       01223000
*                                         form invocation            */ 01224000
*      LHA0020B:;                      /* Label at which to return      01225000
*                                         from 'LIST_FORM' routine   */ 01226000
*    END;                              /* List macro form            */ 01227000
*   ELSE                               /* Else, execute macro form   */ 01228000
*    DO;                               /* Execute macro form         */ 01229000
*      GOTO LHA0030A;                  /* Branch to 'EXECUTE_FORM'      01230000
*                                         routine to process execute    01231000
*                                         form invocation            */ 01232000
*      LHA0030B:;                      /* Label at which to return      01233000
*                                         from 'EXECUTE_FORM'routine */ 01234000
*    END;                              /* Execute macro form         */ 01235000
*  END;                                /* MF keyword valid           */ 01236000
*                                                                       01237000
*                                                                       01238000
*/********************************************************************/ 01239000
*/* Returns from the macro with return code 0 for a valid            */ 01240000
*/* invocation, 12 for an invalid invocation.                        */ 01241000
*/********************************************************************/ 01242000
*                                                                       01243000
*IF IPARML_ERR_FOUND = 0 THEN          /* Test if valid invocation   */ 01244000
*  IRETURN_CODE = 0;                   /* Valid macro invocation     */ 01245000
*ELSE                                  /* Else, invalid invocation   */ 01246000
*  IRETURN_CODE = 12;                  /* Invalid invocation         */ 01247000
*                                                                       01248000
*RETURN CODE(IRETURN_CODE);            /* Return from macro          */ 01249000
*@EJECT;                                                                01250000
*/********************************************************************/ 01251000
*/*                                                                  */ 01252000
*/* PROCEDURE NAME: VERIFY_MF                                        */ 01253000
*/*                                                                  */ 01254000
*/* DESCRIPTIVE NAME: Verifies the macro form keyword parameter.     */ 01255000
*/*                                                                  */ 01256000
*/* ENTRY: From mainline processing                                  */ 01257000
*/*                                                                  */ 01258000
*/* INPUT: MF keyword                                                */ 01259000
*/*                                                                  */ 01260000
*/* OUTPUT: For an invalid specification of the MF keyword:          */ 01261000
*/*          a. The parameter list error flag is set on.             */ 01262000
*/*          b. An error message is generated for the invalid        */ 01263000
*/*             condition found.                                     */ 01264000
*/*                                                                  */ 01265000
*/* EXIT: To mainline processing                                     */ 01266000
*/*                                                                  */ 01267000
*/* ROUTINES BRANCHED TO: None                                       */ 01268000
*/*                                                                  */ 01269000
*/********************************************************************/ 01270000
*                                                                       01271000
*LHA0010A:;                            /* Entry point of routine     */ 01272000
*                                                                       01273000
*/********************************************************************/ 01274000
*/* Tests if the MF keyword is specified. If it is specified,        */ 01275000
*/* tests if it has a valid value. If it is invalid or is not        */ 01276000
*/* specified, generates an error message and sets the parameter     */ 01277000
*/* list error flag on.                                              */ 01278000
*/********************************************************************/ 01279000
*                                                                       01280000
*IF MF = '' THEN                       /* Test if MF not specified   */ 01281000
*  DO;                                 /* MF is not specified        */ 01282000
*                                                                       01283000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      01284000
*                                         found flag on              */ 01285000
*                                                                       01286000
*    /****************************************************************/ 01287000
*    /* Generates the error message: AHA040 SJFACC ERROR: KEYWORD    */ 01288000
*    /* PARAMETER MF REQUIRED, BUT NOT SPECIFIED.                    */ 01289000
*    /****************************************************************/ 01290000
*                                                                       01291000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to skip   01292000
*                                         a line in modified source     01293000
*                                         text before error message  */ 01294000
*                                                                       01295000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    01296000
*                                         macro source listing error    01297000
*                                         message                    */ 01298000
*                                                                       01299000
*    IANS_TEXT1 = IMSG040_TEXT1 || 'MF' || IMSG040_TEXT2;               01300000
*                                      /* Completed text for error      01301000
*                                         message                    */ 01302000
*                                                                       01303000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          01304000
*                                      /* Generate error message        01305000
*                                         in modified source text    */ 01306000
*                                                                       01307000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message in     01308000
*                                         macro source listing       */ 01309000
*                                                                       01310000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to skip   01311000
*                                         a line in modified source     01312000
*                                         text after error message   */ 01313000
*                                                                       01314000
*  END;                                /* MF is not specified        */ 01315000
*                                                                       01316000
*ELSE IF ((MF(1) ^= 'E') & (MF(1) ^= 'L')) |                            01317000
*        (NUMBER(MF) ^= 1) THEN        /* Test if MF valid           */ 01318000
*  DO;                                 /* MF is not valid            */ 01319000
*                                                                       01320000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      01321000
*                                         found flag on              */ 01322000
*                                                                       01323000
*    /****************************************************************/ 01324000
*    /* Generates the error message: AHA030 SJFACC ERROR: KEYWORD    */ 01325000
*    /* PARAMETER MF SPECIFIED INCORRECTLY.                          */ 01326000
*    /****************************************************************/ 01327000
*                                                                       01328000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to skip   01329000
*                                         a line in modified source     01330000
*                                         text before error message  */ 01331000
*                                                                       01332000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    01333000
*                                         macro source listing error    01334000
*                                         message                    */ 01335000
*                                                                       01336000
*    IANS_TEXT1 = IMSG030_TEXT1 || 'MF' || IMSG030_TEXT2;               01337000
*                                      /* Completed text for error      01338000
*                                         message                    */ 01339000
*                                                                       01340000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          01341000
*                                      /* Generate error message        01342000
*                                         in modified source text    */ 01343000
*                                                                       01344000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        01345000
*                                         in macro source listing    */ 01346000
*                                                                       01347000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to skip   01348000
*                                         a line in modified source     01349000
*                                         text after error message   */ 01350000
*                                                                       01351000
*  END;                                /* MF is not valid            */ 01352000
*                                                                       01353000
*                                                                       01354000
*/********************************************************************/ 01355000
*/* Returns from this routine to the label just following the        */ 01356000
*/* branch to this routine.                                          */ 01357000
*/********************************************************************/ 01358000
*                                                                       01359000
*GOTO LHA0010B;                        /* Return from VERIFY_MF      */ 01360000
*@EJECT;                                                                01361000
*/********************************************************************/ 01362000
*/*                                                                  */ 01363000
*/* PROCEDURE NAME: LIST_FORM                                        */ 01364000
*/*                                                                  */ 01365000
*/* DESCRIPTIVE NAME: Processes the list form macro invocation.      */ 01366000
*/*                                                                  */ 01367000
*/* OPERATION: 1. Verifies the list form macro parameter list.       */ 01368000
*/*                                                                  */ 01369000
*/*            2. If the parameter list is valid, generates the      */ 01370000
*/*               declare in modified source text for the list       */ 01371000
*/*               form invocation.                                   */ 01372000
*/*                                                                  */ 01373000
*/*            3. If the parameter list is invalid, generates        */ 01374000
*/*               error messages.                                    */ 01375000
*/*                                                                  */ 01376000
*/* ENTRY: From mainline processing                                  */ 01377000
*/*                                                                  */ 01378000
*/* INPUT: Macro parameter list                                      */ 01379000
*/*                                                                  */ 01380000
*/* OUTPUT: 1. For invalid invocations:                              */ 01381000
*/*            a. The parameter list error flag is set on.           */ 01382000
*/*            b. Error messages are generated for the invalid       */ 01383000
*/*               parameters found.                                  */ 01384000
*/*            c. An error message is generated echoing the          */ 01385000
*/*               the macro invocation and indicating the            */ 01386000
*/*               request table was not declared.                    */ 01387000
*/*                                                                  */ 01388000
*/*         2. For valid invocations:                                */ 01389000
*/*            a. Generates the declare for request table storage.   */ 01390000
*/*                                                                  */ 01391000
*/* EXIT: To mainline processing                                     */ 01392000
*/*                                                                  */ 01393000
*/* ROUTINES BRANCHED TO: None                                       */ 01394000
*/*                                                                  */ 01395000
*/********************************************************************/ 01396000
*                                                                       01397000
*LHA0020A:;                            /* Entry point of the routine */ 01398000
*                                                                       01399000
*                                                                       01400000
*/********************************************************************/ 01401000
*/* Verifies the list form macro invocation. Checks for              */ 01402000
*/* extraneous, invalid and missing parameters.                      */ 01403000
*/********************************************************************/ 01404000
*                                                                       01405000
*                                                                       01406000
*/********************************************************************/ 01407000
*/*  Positional parameters are not used in the list form             */ 01408000
*/*  invocation. Checks that they are not specified. If they are,    */ 01409000
*/*  then generates the error message 060 and sets the parameter     */ 01410000
*/*  list error flag on.                                             */ 01411000
*/********************************************************************/ 01412000
*                                                                       01413000
*IF MACLIST ^= '' THEN                 /* Test if positional parms   */ 01414000
*  DO;                                 /* Positional parms specified */ 01415000
*                                                                       01416000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      01417000
*                                         found flag on              */ 01418000
*                                                                       01419000
*    /****************************************************************/ 01420000
*    /* Generates the error message: AHA060 SJFACC ERROR:            */ 01421000
*    /* POSITIONAL PARAMETERS SPECIFIED, BUT MUTUALLY EXCLUSIVE      */ 01422000
*    /* WITH THE LIST MACRO FORM.                                    */ 01423000
*    /****************************************************************/ 01424000
*                                                                       01425000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to skip   01426000
*                                         a line in modified source     01427000
*                                         text before error message  */ 01428000
*                                                                       01429000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    01430000
*                                         macro source listing error    01431000
*                                         message                    */ 01432000
*                                                                       01433000
*    IANS_TEXT1 = IMSG060_TEXT1 || 'THE LIST MACRO FORM.';              01434000
*                                      /* Completed text for error      01435000
*                                         message                    */ 01436000
*                                                                       01437000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          01438000
*                                      /* Generate error message        01439000
*                                         in modified source text    */ 01440000
*                                                                       01441000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        01442000
*                                         in macro source listing    */ 01443000
*                                                                       01444000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to skip   01445000
*                                         a line in modified source     01446000
*                                         text after error message   */ 01447000
*                                                                       01448000
*  END;                                /* Positional parms specified */ 01449000
*                                                                       01450000
*                                                                       01451000
*/********************************************************************/ 01452000
*/* Checks that execute form keyword parameters not used in the      */ 01453000
*/* list form are not specified.  If they are, then generates        */ 01454000
*/* error message 050 and sets the parameter list error flag on.     */ 01455000
*/********************************************************************/ 01456000
*                                                                       01457000
*/* Tests if any execute form parameters not used in the list form      01458000
*   are specified                                                    */ 01459000
*IF (REQUEST ^= '') | (RECOVRY ^= '') |                                 01460000
*   (CLEANUP ^= '') | (NONAUTH ^= '') | (SYSUSER ^= '') |               01461000
*   (LOCLSTG ^= '') | (TOKEN ^= '')   | (VERB ^= '')    |               01462000
*   (CONTINU ^= '') | (UPDJRNL ^= '') | (UPDALTS ^= '') |               01463000
*   (FNDWTKN ^= '') | (FNDLEVL ^= '') | (LABEL ^= '')   |               01464000
*   (FNDNEXT ^= '') | (FNDSTPN ^= '') | (FNDPRLB ^= '') |               01464600
*   (FNDJBTK ^= '') | (FNDCSTK ^= '') THEN    /*                 @D3C*/ 01465200
*  DO;                                 /* Execute form parms            01466000
*                                         specified              @D2C*/ 01467000
*                                                                       01468000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      01469000
*                                         found flag on              */ 01470000
*                                                                       01471000
*    /****************************************************************/ 01472000
*    /* Generates the error message: AHA050 SJFACC ERROR: KEYWORD    */ 01473000
*    /* PARAMETER(S) FROM THE EXECUTE MACRO FORM SPECIFIED, BUT      */ 01474000
*    /* MUTUALLY EXCLUSIVE WITH THE LIST MACRO FORM.                 */ 01475000
*    /****************************************************************/ 01476000
*                                                                       01477000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to skip   01478000
*                                         a line in modified source     01479000
*                                         text before error message  */ 01480000
*                                                                       01481000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    01482000
*                                         macro source listing error    01483000
*                                         message                    */ 01484000
*                                                                       01485000
*    IANS_TEXT1 = IMSG050_TEXT1 || 'FROM THE EXECUTE MACRO FORM' ||     01486000
*                 IMSG050_TEXT2 || 'THE LIST MACRO FORM.';              01487000
*                                      /* Completed text for error      01488000
*                                         message                    */ 01489000
*                                                                       01490000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          01491000
*                                      /* Generate error message        01492000
*                                         in modified source text    */ 01493000
*                                                                       01494000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        01495000
*                                         in macro source listing    */ 01496000
*                                                                       01497000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to skip   01498000
*                                         a line in modified source     01499000
*                                         text after error message   */ 01500000
*                                                                       01501000
*  END;                                /* Execute form parms            01502000
*                                         specified                  */ 01503000
*                                                                       01504000
*                                                                       01505000
*/********************************************************************/ 01506000
*/* Verifies the REQTBL keyword. If it is invalid, then generates    */ 01507000
*/* an error message and sets the parameter list error flag on.      */ 01508000
*/********************************************************************/ 01509000
*                                                                       01510000
*IF REQTBL = '' THEN                   /* Test REQTBL not specified  */ 01511000
*  DO;                                 /* REQTBL not specified       */ 01512000
*                                                                       01513000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      01514000
*                                         found flag on              */ 01515000
*                                                                       01516000
*    /****************************************************************/ 01517000
*    /* Generates the error message: AHA040 SJFACC ERROR: KEYWORD    */ 01518000
*    /* PARAMETER REQTBL REQUIRED, BUT NOT SPECIFIED.                */ 01519000
*    /****************************************************************/ 01520000
*                                                                       01521000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to skip   01522000
*                                         a line in modified source     01523000
*                                         text before error message  */ 01524000
*                                                                       01525000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    01526000
*                                         macro source listing error    01527000
*                                         message                    */ 01528000
*                                                                       01529000
*    IANS_TEXT1 = IMSG040_TEXT1 || 'REQTBL' || IMSG040_TEXT2;           01530000
*                                      /* Completed text for error      01531000
*                                         message                    */ 01532000
*                                                                       01533000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          01534000
*                                      /* Generate error message        01535000
*                                         in modified source text    */ 01536000
*                                                                       01537000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        01538000
*                                         in macro source listing    */ 01539000
*                                                                       01540000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to skip   01541000
*                                         a line in modified source     01542000
*                                         text after error message   */ 01543000
*                                                                       01544000
*  END;                                /* REQTBL not specified       */ 01545000
*                                                                       01546000
*                                                                       01547000
*ELSE IF NUMBER(REQTBL) ^= 1 THEN      /* Else, test if REQTBL does     01548000
*                                         not have one value         */ 01549000
*  DO;                                 /* Invalid value specified    */ 01550000
*                                                                       01551000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      01552000
*                                         found flag on              */ 01553000
*                                                                       01554000
*    /****************************************************************/ 01555000
*    /* Generates the error message: AHA030 SJFACC ERROR: KEYWORD    */ 01556000
*    /* PARAMETER REQTBL SPECIFIED INCORRECTLY.                      */ 01557000
*    /****************************************************************/ 01558000
*                                                                       01559000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to skip   01560000
*                                         a line in modified source     01561000
*                                         text before error message  */ 01562000
*                                                                       01563000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    01564000
*                                         macro source listing error    01565000
*                                         message                    */ 01566000
*                                                                       01567000
*    IANS_TEXT1 = IMSG030_TEXT1 || 'REQTBL' || IMSG030_TEXT2;           01568000
*                                      /* Completed text for error      01569000
*                                         message                    */ 01570000
*                                                                       01571000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          01572000
*                                      /* Generate error message        01573000
*                                         in modified source text    */ 01574000
*                                                                       01575000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        01576000
*                                         in macro source listing    */ 01577000
*                                                                       01578000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to skip   01579000
*                                         a line in modified source     01580000
*                                         text after error message   */ 01581000
*                                                                       01582000
*  END;                                /* Invalid value specified    */ 01583000
*                                                                       01584000
*                                                                       01585000
*/********************************************************************/ 01586000
*/* Verifies the NUMREQ keyword is specified and has only one        */ 01587000
*/* value.  If it is invalid, then generates an error message and    */ 01588000
*/* sets the parameter list error flag on.                           */ 01589000
*/********************************************************************/ 01590000
*                                                                       01591000
*IF NUMREQ = '' THEN                   /* Test if NUMREQ specified   */ 01592000
*  DO;                                 /* NUMREQ not specified       */ 01593000
*                                                                       01594000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      01595000
*                                         found flag on              */ 01596000
*                                                                       01597000
*    /****************************************************************/ 01598000
*    /* Generates the error message: AHA040 SJFACC ERROR: KEYWORD    */ 01599000
*    /* PARAMETER NUMREQ REQUIRED, BUT NOT SPECIFIED.                */ 01600000
*    /****************************************************************/ 01601000
*                                                                       01602000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to skip   01603000
*                                         a line in modified source     01604000
*                                         text before error message  */ 01605000
*                                                                       01606000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    01607000
*                                         macro source listing error    01608000
*                                         message                    */ 01609000
*                                                                       01610000
*    IANS_TEXT1 = IMSG040_TEXT1 || 'NUMREQ' || IMSG040_TEXT2;           01611000
*                                      /* Completed text for error      01612000
*                                         message                    */ 01613000
*                                                                       01614000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          01615000
*                                      /* Generate error message        01616000
*                                         in modified source text    */ 01617000
*                                                                       01618000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        01619000
*                                         in macro source listing    */ 01620000
*                                                                       01621000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to skip   01622000
*                                         a line in modified source     01623000
*                                         text after error message   */ 01624000
*                                                                       01625000
*  END;                                /* NUMREQ not specified       */ 01626000
*                                                                       01627000
*ELSE IF NUMBER(NUMREQ) ^= 1 THEN      /* Else, NUMREQ is specified,    01628000
*                                         test that is has one, and     01629000
*                                         only one, parameter           01630000
*                                         specified                  */ 01631000
*                                                                       01632000
*  DO;                                 /* NUMREQ specified, but does    01633000
*                                         not have one parameter     */ 01634000
*                                                                       01635000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      01636000
*                                         found flag on              */ 01637000
*                                                                       01638000
*    /****************************************************************/ 01639000
*    /* Generates the error message: AHA030 SJFACC ERROR:            */ 01640000
*    /* KEYWORD PARAMETER NUMREQ SPECIFIED INCORRECTLY.              */ 01641000
*    /****************************************************************/ 01642000
*                                                                       01643000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        01644000
*                                         skip a line in modified       01645000
*                                         source text before error      01646000
*                                         message                    */ 01647000
*                                                                       01648000
*    IANS_TEXT1 = IMSG030_TEXT1 || 'NUMREQ' || IMSG030_TEXT2;           01649000
*                                      /* Completed text for error      01650000
*                                         message                    */ 01651000
*                                                                       01652000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          01653000
*                                      /* Generate error message        01654000
*                                         in modified source text    */ 01655000
*                                                                       01656000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    01657000
*                                         macro source listing error    01658000
*                                         message                    */ 01659000
*                                                                       01660000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        01661000
*                                         in macro source listing    */ 01662000
*                                                                       01663000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        01664000
*                                         skip a line in modified       01665000
*                                         source listing after error    01666000
*                                         message                    */ 01667000
*                                                                       01668000
*  END;                                /* NUMREQ specified, but does    01669000
*                                         not have one parameter     */ 01670000
*                                                                       01671000
*                                                                       01672000
*/********************************************************************/ 01673000
*/* If the list form macro parameter list is valid, then generates   */ 01674000
*/* the declare for the request table storage.  If the parameter     */ 01675000
*/* list is invalid, the macro invocation is echoed in an error      */ 01676000
*/* message.                                                         */ 01677000
*/********************************************************************/ 01678000
*                                                                       01679000
*IF IPARML_ERR_FOUND = 0 THEN          /* Test if no errors found in    01680000
*                                         the parameter list         */ 01681000
*  DO;                                 /* No errors found in the        01682000
*                                         parameter list             */ 01683000
*                                                                       01684000
*    ANS COL(MACLMAR) NORESCAN (MACLABEL);  /* Echo the macro label  */ 01685000
*                                                                       01686000
*/********************************************************************/ 01687000
*/* The number of bytes for the request table is equal to the        */ 01688000
*/* number of requests, as specified in the NUMREQ keyword, times    */ 01689000
*/* the number of bytes required per request in the request          */ 01690000
*/* table. The number of bytes required per request is equal to      */ 01691000
*/* length of the IEFSJACP field SJACENTY.  Generates the declare    */ 01692000
*/* for storage. Uses the storage size as calculated above. Uses     */ 01693000
*/* the storage name specified in the REQTBL keyword value.          */ 01694000
*/********************************************************************/ 01695000
*                                                                       01696000
*    IANS_TEXT1 = 'DCL ' || REQTBL(1) ||                                01697000
*                 ' BOUNDARY(DWORD) CHAR( (' ||                         01698000
*                  NUMREQ(1) || ') * ' || '(LENGTH(SJACENTY)) );';      01699000
*                                      /* Build string for request      01700000
*                                         table declare          @D1C*/ 01701000
*                                                                       01702000
*    IANS_TEXT1 = IANS_TEXT1 ||                                         01703000
*                 ' /* SJFACC declared request table:  ' ||             01704000
*                 '?' || MACLABEL || ' ' || MACNAME || ' ';             01705000
*                                      /* Append first part of line     01706000
*                                         comment to declaration        01707000
*                                         string                     */ 01708000
*                                                                       01709000
*    ANSWER COL(MACCOL) SKIP(1) NORESCAN (IANS_TEXT1);                  01710000
*                                      /* Generate request table        01711000
*                                         storage declare with first    01712000
*                                         part of line comment       */ 01713000
*                                                                       01714000
*    IANS_TEXT1 = MACLIST || ' ' || MACKEYS || ' */'; /* Build string   01715000
*                                         for second part of comment */ 01716000
*                                                                       01717000
*    ANSWER NORESCAN (IANS_TEXT1);     /* Generate second part of       01718000
*                                         line comment               */ 01719000
*                                                                       01720000
*  END;                                /* No errors found in the        01721000
*                                         parameter list             */ 01722000
*                                                                       01723000
*ELSE                                  /* Errors were found in the      01724000
*                                         parameter list             */ 01725000
*  DO;                                 /* Generate error message     */ 01726000
*                                                                       01727000
*    /****************************************************************/ 01728000
*    /* Generates the error message: AHA070 SJFACC ERROR:            */ 01729000
*    /* REQUEST TABLE DECLARE NOT GENERATED DUE TO ERRORS FOUND      */ 01730000
*    /* IN THE LIST FORM INVOCATION: <macro invocation>              */ 01731000
*    /* in modified source text. The error message in the macro      */ 01732000
*    /* source listing does not include the macro invocation.        */ 01733000
*    /****************************************************************/ 01734000
*                                                                       01735000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        01736000
*                                         skip a line in modified       01737000
*                                         source text before error      01738000
*                                         message                    */ 01739000
*                                                                       01740000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    01741000
*                                         macro source listing error    01742000
*                                         message                    */ 01743000
*                                                                       01744000
*    IANS_TEXT1 = IMSG070_TEXT1 || ':  ?' || MACLABEL || ' ' ||         01745000
*                 MACNAME || ' ';      /* Build first part of error     01746000
*                                         message for modified source   01747000
*                                         text                       */ 01748000
*                                                                       01749000
*    ANSWER COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1);                01750000
*                                      /* Generate first part of        01751000
*                                         error message for modified    01752000
*                                         source text                */ 01753000
*                                                                       01754000
*    ANS NORESCAN MSG(IMSG070_TEXT1 || '.' ); /* Generate error message 01755000
*                                         in macro source listing    */ 01756000
*                                                                       01757000
*    IANS_TEXT1 = MACLIST || ' ' || MACKEYS;                            01758000
*                                      /* Build second part of          01759000
*                                         error message for modified    01760000
*                                         source text                */ 01761000
*                                                                       01762000
*    ANSWER NORESCAN (IANS_TEXT1 || ' */');                             01763000
*                                      /* Generate second part of       01764000
*                                         error message for modified    01765000
*                                         source text                */ 01766000
*                                                                       01767000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        01768000
*                                         skip a line in modified       01769000
*                                         source text after error       01770000
*                                         message                    */ 01771000
*                                                                       01772000
*  END;                                /* Generate error message     */ 01773000
*                                                                       01774000
*                                                                       01775000
*/********************************************************************/ 01776000
*/* Returns from the LIST_FORM routine to the label just             */ 01777000
*/* following the branch to this routine.                            */ 01778000
*/********************************************************************/ 01779000
*                                                                       01780000
*GOTO  LHA0020B;                       /* Return from LIST_FORM         01781000
*                                         routine                    */ 01782000
*@EJECT;                                                                01783000
*/********************************************************************/ 01784000
*/*                                                                  */ 01785000
*/* PROCEDURE NAME: EXECUTE_FORM                                     */ 01786000
*/*                                                                  */ 01787000
*/* DESCRIPTIVE NAME: Processes the execute form macro invocation.   */ 01788000
*/*                                                                  */ 01789000
*/* OPERATION: 1. Generates the DO statement with the echo of        */ 01790000
*/*               the macro invocation.                              */ 01791000
*/*                                                                  */ 01792000
*/*            2. Branches to the VER_EXEC_FORM routine to verify    */ 01793000
*/*               the execute form macro parameter list.             */ 01794000
*/*                                                                  */ 01795000
*/*            3. If the execute form macro parameter list is        */ 01796000
*/*               valid, branches to either the routine to           */ 01797000
*/*               process a terminate request, or the routine to     */ 01798000
*/*               process an SJF Access Function request.            */ 01799000
*/*                                                                  */ 01800000
*/*            4. Generates the END statement with the echo of       */ 01801000
*/*               the macro invocation.                              */ 01802000
*/*                                                                  */ 01803000
*/* ENTRY: From mainline processing                                  */ 01804000
*/*                                                                  */ 01805000
*/* INPUT: 1. parameter list error flag                              */ 01806000
*/*        2. REQUEST keyword parameter                              */ 01807000
*/*                                                                  */ 01808000
*/* OUTPUT: None                                                     */ 01809000
*/*                                                                  */ 01810000
*/* EXIT: To mainline processing                                     */ 01811000
*/*                                                                  */ 01812000
*/* ROUTINES BRANCHED TO: 1. VER_EXEC_FORM                           */ 01813000
*/*                       2. TERM_REQ                                */ 01814000
*/*                       3. SJF_ACC_REQ                             */ 01815000
*/*                                                                  */ 01816000
*/********************************************************************/ 01817000
*                                                                       01818000
*LHA0030A:;                            /* Entry point of routine     */ 01819000
*                                                                       01820000
*/********************************************************************/ 01821000
*/* Initializes the macro output for the invocation of the           */ 01822000
*/* execute form of the macro.                                       */ 01823000
*/********************************************************************/ 01824000
*                                                                       01825000
*ANS NORESCAN COL(MACLMAR) (MACLABEL);  /* Generate label from macro */ 01826000
*                                                                       01827000
*IANS_TEXT1 = 'DO; ' || '/* ?' || MACLABEL || ' ' || MACNAME;           01828000
*                                      /* Build first part of string    01829000
*                                         to echo macro invocation   */ 01830000
*                                                                       01831000
*ANS NORESCAN SKIP(1) COL(MACCOL) (IANS_TEXT1);  /* Echo first part     01832000
*                                         of macro invocation        */ 01833000
*                                                                       01834000
*IANS_TEXT1 = ' ' || MACLIST || ' ' || MACKEYS || ' */';                01835000
*                                      /* Build second part of string   01836000
*                                         to echo macro invocation   */ 01837000
*                                                                       01838000
*ANS NORESCAN (IANS_TEXT1);            /* Echo second part of macro     01839000
*                                         invocation                 */ 01840000
*                                                                       01841000
*                                                                       01842000
*/********************************************************************/ 01843000
*/* Branches to the routine to verify the execute form of the        */ 01844000
*/* macro.                                                           */ 01845000
*/********************************************************************/ 01846000
*                                                                       01847000
*GOTO LHA0040A;                        /* Branch to VER_EXEC_FORM       01848000
*                                         routine                    */ 01849000
*LHA0040B:;                            /* Label at which to return      01850000
*                                         from VER_EXEC_FORM routine */ 01851000
*                                                                       01852000
*                                                                       01853000
*/********************************************************************/ 01854000
*/* If the execute form parameter list is valid, branches to the     */ 01855000
*/* appropriate routine to process the requested function,           */ 01856000
*/* terminate or access.                                             */ 01857000
*/********************************************************************/ 01858000
*                                                                       01859000
*IF IPARML_ERR_FOUND = 0 THEN           /* Test if the parameter        01860000
*                                          list is valid             */ 01861000
*  DO;                                  /* Parameter list valid      */ 01862000
*    IF REQUEST(1) = 'TERMINATE' THEN   /* Test if TERMINATE request */ 01863000
*      DO;                              /* Terminate request         */ 01864000
*        GOTO LHA0090A;                 /* Goto to TERM_REQ routine  */ 01865000
*        LHA0090B:;                     /* Point at which to return     01866000
*                                          from TERM_REQ routine     */ 01867000
*      END;                             /* Terminate request         */ 01868000
*    ELSE                               /* Else, SJF Access request  */ 01869000
*      DO;                              /* SJF Access request        */ 01870000
*        GOTO LHA0100A;                 /* Branch to SJF_ACC_REQ        01871000
*                                          routine                   */ 01872000
*        LHA0100B:;                     /* Point at which to return     01873000
*                                          from SJF_ACC_REQ routine  */ 01874000
*      END;                             /* SJF Access request        */ 01875000
*  END;                                 /* Parameter list valid      */ 01876000
*                                                                       01877000
*                                                                       01878000
*/********************************************************************/ 01879000
*/* Final macro output for the execute form of the macro.            */ 01880000
*/********************************************************************/ 01881000
*                                                                       01882000
*IANS_TEXT1 = 'END; ' || '/* ?' || MACLABEL || ' ' || MACNAME;          01883000
*                                      /* Build first part of string    01884000
*                                         to echo macro invocation   */ 01885000
*                                                                       01886000
*ANS NORESCAN COL(MACCOL) SKIP(2) (IANS_TEXT1);  /* Echo first part     01887000
*                                         of macro invocation        */ 01888000
*                                                                       01889000
*IANS_TEXT1 = ' ' || MACLIST || ' ' || MACKEYS || ' */';                01890000
*                                      /* Build second part of string   01891000
*                                         to echo macro invocation   */ 01892000
*                                                                       01893000
*ANS NORESCAN (IANS_TEXT1);            /* Echo second part of macro     01894000
*                                         invocation                 */ 01895000
*                                                                       01896000
*                                                                       01897000
*/********************************************************************/ 01898000
*/* Returns from this routine to the label following the branch      */ 01899000
*/* to this routine.                                                 */ 01900000
*/********************************************************************/ 01901000
*                                                                       01902000
*GOTO LHA0030B;                         /* Return from EXEC_FORM        01903000
*                                          routine                   */ 01904000
*@EJECT;                                                                01905000
*/********************************************************************/ 01906000
*/*                                                                  */ 01907000
*/* PROCEDURE NAME: VER_EXEC_FORM                                    */ 01908000
*/*                                                                  */ 01909000
*/* DESCRIPTIVE NAME: Verifies the execute form macro parameter      */ 01910000
*/*                   list.                                          */ 01911000
*/*                                                                  */ 01912000
*/* FUNCTION: Verifies the execute form macro parameter list. The    */ 01913000
*/*           parameter list will be checked for errors which        */ 01914000
*/*           would prevent or interfere with building the SJF       */ 01915000
*/*           Access Function parameter list. List form parameters   */ 01916000
*/*           not used in the execute macro form invocation will     */ 01917000
*/*           be checked to insure their exclusion.  Extraneous      */ 01918000
*/*           execute form parameters not used for the given         */ 01919000
*/*           request type will be checked to insure their           */ 01920000
*/*           exclusion.  Choice-data type parameters will be        */ 01921000
*/*           checked for correct values.  Asis type parameters      */ 01922000
*/*           will only be checked to ensure the correct number of   */ 01923000
*/*           parameters are specified.  The macro need not          */ 01924000
*/*           duplicate other error checking that is provided by     */ 01925000
*/*           the access routines being invoked.                     */ 01926000
*/*                                                                  */ 01927000
*/* OPERATION: 1. Checks that required parameters and parameters     */ 01928000
*/*               with mutual exclusivity conditions are properly    */ 01929000
*/*               specified.                                         */ 01930000
*/*                                                                  */ 01931000
*/*            2. Checks that parameters not used with the           */ 01932000
*/*               requested function are not specified.              */ 01933000
*/*                                                                  */ 01934000
*/*            3. Checks that positional parameters are properly     */ 01935000
*/*               specified.                                         */ 01936000
*/*                                                                  */ 01937000
*/*            4. For asis type parameters, checks that the          */ 01938000
*/*               correct number of parameters are specified.        */ 01939000
*/*                                                                  */ 01940000
*/*            5. For choice-data type paramters, checks that a      */ 01941000
*/*               valid value is specified.                          */ 01942000
*/*                                                                  */ 01943000
*/* ENTRY: from EXECUTE_FORM routine                                 */ 01944000
*/*                                                                  */ 01945000
*/* INPUT: macro parameter list                                      */ 01946000
*/*                                                                  */ 01947000
*/* OUTPUT: If invalid parameters are detected:                      */ 01948000
*/*          1. The parameter list error flag is set on.             */ 01949000
*/*          2. Error messages are generated.                        */ 01950000
*/*                                                                  */ 01951000
*/* EXIT: to EXECUTE_FORM routine                                    */ 01952000
*/*                                                                  */ 01953000
*/* ROUTINES BRANCHED TO: 1. CHECK_REQUIRED&MUTUAL                   */ 01954000
*/*                       2. CHECK_EXTRANEOUS                        */ 01955000
*/*                       3. CHECK_ASIS_PARMS                        */ 01956000
*/*                       4. CHECK_CHOICE_PARMS                      */ 01957000
*/*                                                                  */ 01958000
*/********************************************************************/ 01959000
*                                                                       01960000
*LHA0040A:;                            /* Entry point of routine     */ 01961000
*                                                                       01962000
*/********************************************************************/ 01963000
*/* Verifies that required parameters are specified and that         */ 01964000
*/* parameters with mutual exclusivity conditions are properly       */ 01965000
*/* specified.                                                       */ 01966000
*/********************************************************************/ 01967000
*                                                                       01968000
*GOTO LHA0050A;                        /* Branch to                     01969000
*                                         CHECK_REQUIRED&MUTUAL      */ 01970000
*LHA0050B:;                            /* Point of return from          01971000
*                                         CHECK_REQUIRED&MUTUAL      */ 01972000
*                                                                       01973000
*                                                                       01974000
*/********************************************************************/ 01975000
*/* Verifies that parameters not used in the requested function      */ 01976000
*/* are not specified.                                               */ 01977000
*/********************************************************************/ 01978000
*                                                                       01979000
*GOTO LHA0060A;                        /* Branch to                     01980000
*                                         CHECK_EXTRANEOUS           */ 01981000
*LHA0060B:;                            /* Point of return from          01982000
*                                         CHECK_EXTRANEOUS           */ 01983000
*                                                                       01984000
*                                                                       01985000
*/********************************************************************/ 01986000
*/* Verifies the positional parameters, if they are specified.       */ 01987000
*/* Checks that each positional parameter has 4 subparameters and    */ 01988000
*/* that each subparameter is a single parameter.  If an invalid     */ 01989000
*/* parameter is detected, generates an error message and sets       */ 01990000
*/* the parameter list error flag on.                                */ 01991000
*/********************************************************************/ 01992000
*                                                                       01993000
*IF MACLIST ^= '' THEN                 /* Test if positional parms   */ 01994000
*  DO J = 1 TO NUMBER(MACLIST);        /* Do for each positional        01995000
*                                         parm                       */ 01996000
*                                                                       01997000
*    /* Test if the Jth positional parameter has 4 sub-parameters.      01998000
*       If it does not, then generate an error message.              */ 01999000
*    IF NUMBER(MACLIST(J)) ^= 4 THEN                                    02000000
*      DO;                             /* Parm doesn't have 4           02001000
*                                         subparms                   */ 02002000
*                                                                       02003000
*        IPARML_ERR_FOUND = 1;         /* Set the parm list errors      02004000
*                                         found flag on              */ 02005000
*                                                                       02006000
*        /************************************************************/ 02007000
*        /* Generates the error message: AHA010 SJFACC ERROR:        */ 02008000
*        /* POSITIONAL PARAMETER NO. <J> DOES NOT CONTAIN 4          */ 02009000
*        /* SUB-PARAMETERS.                                          */ 02010000
*        /************************************************************/ 02011000
*                                                                       02012000
*        ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to    02013000
*                                         skip a line in modified       02014000
*                                         source text before error      02015000
*                                         message                    */ 02016000
*                                                                       02017000
*        ANS NORESCAN MSG(' ');        /* Generate blank line before    02018000
*                                         macro source listing error    02019000
*                                         message                    */ 02020000
*                                                                       02021000
*        IANS_TEXT1 = IMSG010_TEXT1 || CHAR(J) || IMSG010_TEXT2;        02022000
*                                      /* Completed text for error      02023000
*                                         message                    */ 02024000
*                                                                       02025000
*        ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');      02026000
*                                      /* Generate error message        02027000
*                                         in modified source text    */ 02028000
*                                                                       02029000
*        ANS NORESCAN MSG(IANS_TEXT1); /* Generate error message        02030000
*                                         in macro source listing    */ 02031000
*                                                                       02032000
*      END;                            /* Parm doesn't have 4           02033000
*                                         subparms                   */ 02034000
*                                                                       02035000
*    ELSE                              /* Parm has 4 subparms        */ 02036000
*      DO;                             /* Verify the subparms        */ 02037000
*                                                                       02038000
*        DO K = 1 TO 4;                /* Do for each subparameter   */ 02039000
*                                                                       02040000
*          IF NUMBER(MACLIST(J,K)) ^= 1 THEN /* Test if subparm is a    02041000
*                                            single parameter        */ 02042000
*            DO;                       /* Subparm is not a single       02043000
*                                         parameter                  */ 02044000
*                                                                       02045000
*              IPARML_ERR_FOUND = 1;   /* Set the parm list errors      02046000
*                                         found flag on              */ 02047000
*                                                                       02048000
*              /******************************************************/ 02049000
*              /* Generates the error message: AHA020 SJFACC ERROR:  */ 02050000
*              /* POSITIONAL PARAMETER NO. <J>, SUBPARAMETER NO.     */ 02051000
*              /* <K> IS NULL OR CONTAINS MORE THAN ONE ARGUMENT.    */ 02052000
*              /******************************************************/ 02053000
*                                                                       02054000
*              ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate      02055000
*                                         code to skip a line in        02056000
*                                         macro source text before      02057000
*                                         error message              */ 02058000
*                                                                       02059000
*              ANS NORESCAN MSG(' ');  /* Generate blank line before    02060000
*                                         macro source listing error    02061000
*                                         message                    */ 02062000
*                                                                       02063000
*              IANS_TEXT1 = IMSG020_TEXT1 || CHAR(J) ||                 02064000
*                           IMSG020_TEXT2 || CHAR(K) || IMSG020_TEXT3;  02065000
*                                      /* Completed text for error      02066000
*                                         message                    */ 02067000
*                                                                       02068000
*              ANS COL(MACLMAR) NORESCAN ('/* ' ||IANS_TEXT1|| ' */');  02069000
*                                      /* Generate error message        02070000
*                                         in modified source text    */ 02071000
*                                                                       02072000
*              ANS NORESCAN MSG(IANS_TEXT1); /* Generate error          02073000
*                                         message in macro source       02074000
*                                         listing                    */ 02075000
*                                                                       02076000
*            END;                      /* Subparm is not a single       02077000
*                                         parameter                  */ 02078000
*                                                                       02079000
*        END;                          /* Do for each subparameter   */ 02080000
*                                                                       02081000
*      END;                            /* Verify the subparms        */ 02082000
*                                                                       02083000
*  END;                                /* Do for each positional        02084000
*                                         parm                       */ 02085000
*                                                                       02086000
*                                                                       02087000
*/********************************************************************/ 02088000
*/* Verify asis type parameters.                                     */ 02089000
*/********************************************************************/ 02090000
*                                                                       02091000
*GOTO LHA0070A;                        /* Branch to CHECK_ASIS_PARMS */ 02092000
*LHA0070B:;                            /* Point of return from          02093000
*                                         CHECK_ASIS_PARMS           */ 02094000
*                                                                       02095000
*/********************************************************************/ 02096000
*/* Verify choice-data type parameters.                              */ 02097000
*/********************************************************************/ 02098000
*                                                                       02099000
*GOTO LHA0080A;                        /* Branch to                     02100000
*                                         CHECK_CHOICE_PARMS         */ 02101000
*LHA0080B:;                            /* Point of return from          02102000
*                                         CHECK_CHOICE_PARMS         */ 02103000
*                                                                       02104000
*                                                                       02105000
*/********************************************************************/ 02106000
*/* End of the VER_EXEC_FORM routine.  Returns to the label just     */ 02107000
*/* following branch to this routine.                                */ 02108000
*/********************************************************************/ 02109000
*                                                                       02110000
*GOTO LHA0040B;                        /* Return from VER_EXEC_FORM     02111000
*                                         routine                    */ 02112000
*@EJECT;                                                                02113000
*/********************************************************************/ 02114000
*/*                                                                  */ 02115000
*/* ROUTINE NAME: CHECK_REQUIRED&MUTUAL                              */ 02116000
*/*                                                                  */ 02117000
*/* DESCRIPTIVE NAME: Checks execute macro form parameters that      */ 02118000
*/*                   are required or have mutual exclusivity        */ 02119000
*/*                   conditions other than with the request type.   */ 02120000
*/*                                                                  */ 02121000
*/* FUNCTION:        Checks execute macro form parameters that are   */ 02122000
*/*                  required or have mutual exclusivity             */ 02123000
*/*                  conditions other than with the request type.    */ 02124000
*/*                  Checks those parameters whose                   */ 02125000
*/*                  misspecification would interfere with           */ 02126000
*/*                  generating the assignment statements for the    */ 02127000
*/*                  SJF Access Function parameter list. Also        */ 02128000
*/*                  checks some parameters whose correct            */ 02129000
*/*                  specification are essential for using the       */ 02130000
*/*                  SJF Access Function.                            */ 02131000
*/*                                                                  */ 02132000
*/* ENTRY: From VER_EXEC_FORM routine                                */ 02133000
*/*                                                                  */ 02134000
*/* INPUT: 1. REQUEST, REQTBL, LOCLSTG and NUMREQ keyword            */ 02135000
*/*           parameters                                             */ 02136000
*/*        2. Positional parameters                                  */ 02137000
*/*                                                                  */ 02138000
*/* OUTPUT: If invalid parameters are detected:                      */ 02139000
*/*          1. The parameter list error flag is set on.             */ 02140000
*/*          2. Error messages are generated.                        */ 02141000
*/*                                                                  */ 02142000
*/* EXIT: To VER_EXEC_FORM routine                                   */ 02143000
*/*                                                                  */ 02144000
*/* ROUTINE CALLED: None                                             */ 02145000
*/*                                                                  */ 02146000
*/********************************************************************/ 02147000
*                                                                       02148000
*LHA0050A:;                            /* Entry point of routine     */ 02149000
*                                                                       02150000
*/********************************************************************/ 02151000
*/*  If positional parameters or NUMREQ keyword are required         */ 02152000
*/*  (request is not for FIND or TERMINATE), verifies either         */ 02153000
*/*  positional parameters or the NUMREQ keyword is specified, but   */ 02154000
*/*  not both.  If an invalid condition is detected, generates       */ 02155000
*/*  an error message and sets the parameter list error flag on.     */ 02156000
*/********************************************************************/ 02157000
*                                                                       02158000
*/* Test if a valid request other than FIND or TERMINATE is             02159000
*   specified  */                                                       02160000
*IF (REQUEST(1) = 'UPDATE')  | (REQUEST(1) = 'RETRIEVE') |              02161000
*   (REQUEST(1) = 'FINDUPD') | (REQUEST(1) = 'FINDRET') THEN            02162000
*  DO;                                 /* Request is UPDATE, RET-       02163000
*                                         RIEVE, FINDUPD, or FINDRET */ 02164000
*                                                                       02165000
*    /* test if both NUMREQ and positional parameters specified      */ 02166000
*    IF (MACLIST ^= '') & (NUMREQ ^= '') THEN                           02167000
*      DO;                             /* NUMREQ and positional         02168000
*                                         parms specified            */ 02169000
*                                                                       02170000
*        IPARML_ERR_FOUND = 1;         /* Set the parm list errors      02171000
*                                         found flag on              */ 02172000
*                                                                       02173000
*        /************************************************************/ 02174000
*        /* Generates the error message: AHA060 SJFACC ERROR:        */ 02175000
*        /* POSITIONAL PARAMETERS SPECIFIED, BUT MUTUALLY EXCLUSIVE  */ 02176000
*        /* WITH THE NUMREQ KEYWORD.                                 */ 02177000
*        /************************************************************/ 02178000
*                                                                       02179000
*        ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to    02180000
*                                         skip a line in modified       02181000
*                                         source text before error      02182000
*                                         message                    */ 02183000
*                                                                       02184000
*        ANS NORESCAN MSG(' ');        /* Generate blank line before    02185000
*                                         macro source listing error    02186000
*                                         message                    */ 02187000
*                                                                       02188000
*        IANS_TEXT1 = IMSG060_TEXT1 || 'THE NUMREQ KEYWORD.';           02189000
*                                      /* Completed text for error      02190000
*                                         message                    */ 02191000
*                                                                       02192000
*        ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');      02193000
*                                      /* Generate error message        02194000
*                                         in modified source text    */ 02195000
*                                                                       02196000
*        ANS NORESCAN MSG(IANS_TEXT1); /* Generate error message        02197000
*                                         in macro source listing    */ 02198000
*                                                                       02199000
*      END;                            /* NUMREQ and positional         02200000
*                                         parms specified            */ 02201000
*                                                                       02202000
*    /* Tests if neither NUMREQ nor positional parameters specified  */ 02203000
*    ELSE IF (MACLIST = '') & (NUMREQ = '') THEN                        02204000
*      DO;                             /* Neither NUMREQ nor pos-       02205000
*                                         itional parms specified    */ 02206000
*        IPARML_ERR_FOUND = 1;         /* Set the parm list errors      02207000
*                                         found flag on              */ 02208000
*                                                                       02209000
*        /************************************************************/ 02210000
*        /* Generates the error message: AHA040 SJFACC ERROR:        */ 02211000
*        /* KEYWORD PARAMETER NUMREQ REQUIRED, BUT NOT SPECIFIED.    */ 02212000
*        /************************************************************/ 02213000
*                                                                       02214000
*        ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to    02215000
*                                         skip a line in modified       02216000
*                                         source text before error      02217000
*                                         message                    */ 02218000
*                                                                       02219000
*        ANS NORESCAN MSG(' ');        /* Generate blank line before    02220000
*                                         macro source listing error    02221000
*                                         message                    */ 02222000
*                                                                       02223000
*        IANS_TEXT1 = IMSG040_TEXT1 || 'NUMREQ' || IMSG040_TEXT2;       02224000
*                                      /* Completed text for error      02225000
*                                         message                    */ 02226000
*                                                                       02227000
*        ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');      02228000
*                                      /* Generate error message        02229000
*                                         in modified source text    */ 02230000
*                                                                       02231000
*        ANS NORESCAN MSG(IANS_TEXT1); /* Generate error message        02232000
*                                         in macro source listing    */ 02233000
*                                                                       02234000
*      END;                            /* Neither NUMREQ nor pos-       02235000
*                                         itional parms specified    */ 02236000
*                                                                       02237000
*  END;                                /* Request is UPDATE, RET-       02238000
*                                         RIEVE, FINDUPD, or FINDRET */ 02239000
*                                                                       02240000
*                                                                       02241000
*/********************************************************************/ 02242000
*/* Verifies the REQUEST keyword is specified. If it is not, then    */ 02243000
*/* generates error message 040, and sets the parameter list         */ 02244000
*/* error flag on.                                                   */ 02245000
*/********************************************************************/ 02246000
*                                                                       02247000
*IF REQUEST = '' THEN                  /* Test if REQUEST specified  */ 02248000
*  DO;                                 /* REQUEST not specified      */ 02249000
*                                                                       02250000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      02251000
*                                         found flag on              */ 02252000
*                                                                       02253000
*    /****************************************************************/ 02254000
*    /* Generates the error message: AHA040 SJFACC ERROR: KEYWORD    */ 02255000
*    /* PARAMETER REQUEST REQUIRED, BUT NOT SPECIFIED.               */ 02256000
*    /****************************************************************/ 02257000
*                                                                       02258000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        02259000
*                                         skip a line in modified       02260000
*                                         source text before error      02261000
*                                         message                    */ 02262000
*                                                                       02263000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    02264000
*                                         macro source listing error    02265000
*                                         message                    */ 02266000
*                                                                       02267000
*    IANS_TEXT1 = IMSG040_TEXT1 || 'REQUEST' || IMSG040_TEXT2;          02268000
*                                      /* Completed text for error      02269000
*                                         message                    */ 02270000
*                                                                       02271000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          02272000
*                                      /* Generate error message        02273000
*                                         in modified source text    */ 02274000
*                                                                       02275000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        02276000
*                                         in macro source listing    */ 02277000
*                                                                       02278000
*  END;                                /* REQUEST not specified      */ 02279000
*                                                                       02280000
*                                                                       02281000
*/********************************************************************/ 02282000
*/* Verifies the REQTBL keyword is specified if this is a            */ 02283000
*/* FINDRET, FINDUPD, UPDATE or RETRIEVE request.  If it is not      */ 02284000
*/* specified when one of these request types are specified,         */ 02285000
*/* generates error message 040, and sets the parameter list         */ 02286000
*/* error flag on.                                                   */ 02287000
*/********************************************************************/ 02288000
*                                                                       02289000
*IF (REQTBL = '') & ((REQUEST(1) = 'FINDUPD') |                         02290000
*   (REQUEST(1) = 'FINDRET') | (REQUEST(1) = 'RETRIEVE') |              02291000
*   (REQUEST(1) = 'UPDATE')) THEN      /* Test if REQUEST is UPDATE,    02292000
*                                         FINDUPD, FINDRET or           02293000
*                                         RETRIEVE, and REQTBL is not   02294000
*                                         specified                  */ 02295000
*  DO;                                 /* REQTBL required, but not      02296000
*                                         specified                  */ 02297000
*                                                                       02298000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      02299000
*                                         found flag on              */ 02300000
*                                                                       02301000
*    /****************************************************************/ 02302000
*    /* Generates the error message: AHA040 SJFACC ERROR: KEYWORD    */ 02303000
*    /* PARAMETER REQTBL REQUIRED, BUT NOT SPECIFIED.                */ 02304000
*    /****************************************************************/ 02305000
*                                                                       02306000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        02307000
*                                         skip a line in modified       02308000
*                                         source text before error      02309000
*                                         message                    */ 02310000
*                                                                       02311000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    02312000
*                                         macro source listing error    02313000
*                                         message                    */ 02314000
*                                                                       02315000
*    IANS_TEXT1 = IMSG040_TEXT1 || 'REQTBL' || IMSG040_TEXT2;           02316000
*                                      /* Completed text for error      02317000
*                                         message                    */ 02318000
*                                                                       02319000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          02320000
*                                      /* Generate error message        02321000
*                                         in modified source text    */ 02322000
*                                                                       02323000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        02324000
*                                         in macro source listing    */ 02325000
*                                                                       02326000
*  END;                                /* REQTBL required, but not      02327000
*                                         specified                  */ 02328000
*                                                                       02329000
*                                                                       02330000
*/********************************************************************/ 02331000
*/* IF the request is TERMINATE, verifies the LOCLSTG keyword is     */ 02332000
*/* specified. If it is not, then generates error message 040,       */ 02333000
*/* and sets the parameter list error flag on.                       */ 02334000
*/********************************************************************/ 02335000
*                                                                       02336000
*IF (REQUEST(1) = 'TERMINATE') & (LOCLSTG = '') THEN                    02337000
*                                      /* Test if a TERMINATE request,  02338000
*                                         and LOCLSTG not specified  */ 02339000
*  DO;                                 /* Terminate request, but        02340000
*                                         LOCLSTG is not specified   */ 02341000
*                                                                       02342000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      02343000
*                                         found flag on              */ 02344000
*                                                                       02345000
*    /****************************************************************/ 02346000
*    /* Generates the error message: AHA040 SJFACC ERROR: KEYWORD    */ 02347000
*    /* PARAMETER LOCLSTG REQUIRED, BUT NOT SPECIFIED.               */ 02348000
*    /****************************************************************/ 02349000
*                                                                       02350000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        02351000
*                                         skip a line in modified       02352000
*                                         source text before error      02353000
*                                         message                    */ 02354000
*                                                                       02355000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    02356000
*                                         macro source listing error    02357000
*                                         message                    */ 02358000
*                                                                       02359000
*    IANS_TEXT1 = IMSG040_TEXT1 || 'LOCLSTG' || IMSG040_TEXT2;          02360000
*                                      /* Completed text for error      02361000
*                                         message                    */ 02362000
*                                                                       02363000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          02364000
*                                      /* Generate error message        02365000
*                                         in modified source text    */ 02366000
*                                                                       02367000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        02368000
*                                         in macro source listing    */ 02369000
*                                                                       02370000
*  END;                                /* Terminate request, but        02371000
*                                         LOCLSTG is not specified   */ 02372000
*                                                                       02373000
*                                                                       02374000
*/********************************************************************/ 02375000
*/* Returns from the CHECK_REQUIRED&MUTUAL routine. Branches to      */ 02376000
*/* the label just after the branch to this routine.                 */ 02377000
*/********************************************************************/ 02378000
*                                                                       02379000
*GOTO LHA0050B;                        /* Return from CHECK_REQUIRED&   02380000
*                                         MUTUAL routine             */ 02381000
*@EJECT;                                                                02382000
*/********************************************************************/ 02383000
*/*                                                                  */ 02384000
*/* ROUTINE NAME: CHECK_EXTRANEOUS                                   */ 02385000
*/*                                                                  */ 02386000
*/* DESCRIPTIVE NAME: Checks that parameters not used with the       */ 02387000
*/*                   request type are not specified.                */ 02388000
*/*                                                                  */ 02389000
*/* OPERATION: For each macro parameter which can be                 */ 02390000
*/*            extraneous for a request type, checks if it           */ 02391000
*/*            is extraneous with the current request type.          */ 02392000
*/*            If it is, generates an error message and sets         */ 02393000
*/*            the parameter list error flag on.                     */ 02394000
*/*                                                                  */ 02395000
*/* ENTRY: From VER_EXEC_FORM routine                                */ 02396000
*/*                                                                  */ 02397000
*/* INPUT: Macro parameter list                                      */ 02398000
*/*                                                                  */ 02399000
*/* OUTPUT: If invalid parameters are detected:                      */ 02400000
*/*          1. The parameter list error flag is set on.             */ 02401000
*/*          2. Error messages are generated.                        */ 02402000
*/*                                                                  */ 02403000
*/* EXIT: to VER_EXEC_FORM routine                                   */ 02404000
*/*                                                                  */ 02405000
*/* ROUTINES CALLED: none                                            */ 02406000
*/*                                                                  */ 02407000
*/********************************************************************/ 02408000
*                                                                       02409000
*LHA0060A:;                            /* Entry point of routine     */ 02410000
*                                                                       02411000
*/********************************************************************/ 02412000
*/* Checks if positional parameters are specified with FIND or       */ 02413000
*/* TERMINATE requests.  If they are, generates an error message     */ 02414000
*/* and sets the parameter list error flag on.                       */ 02415000
*/********************************************************************/ 02416000
*                                                                       02417000
*IF (MACLIST ^= '') & ((REQUEST(1) = 'TERMINATE') |                     02418000
*  (REQUEST(1) = 'FIND')) THEN                                          02419000
*  DO;                                 /* Positional parms are          02420000
*                                         specified and REQUEST is      02421000
*                                         FIND or TERMINATE          */ 02422000
*                                                                       02423000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      02424000
*                                         found flag on              */ 02425000
*                                                                       02426000
*    /****************************************************************/ 02427000
*    /* Generates the error message: AHA060 SJFACC ERROR:            */ 02428000
*    /* POSITIONAL PARAMETERS SPECIFIED, BUT MUTUALLY EXCLUSIVE      */ 02429000
*    /* WITH THE REQUEST TYPE.                                       */ 02430000
*    /****************************************************************/ 02431000
*                                                                       02432000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        02433000
*                                         skip a line in modified       02434000
*                                         source text before error      02435000
*                                         message                    */ 02436000
*                                                                       02437000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    02438000
*                                         macro source listing error    02439000
*                                         message                    */ 02440000
*                                                                       02441000
*    IANS_TEXT1 = IMSG060_TEXT1 || 'THE REQUEST TYPE.';                 02442000
*                                      /* Completed text for error      02443000
*                                         message                    */ 02444000
*                                                                       02445000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          02446000
*                                      /* Generate error message        02447000
*                                         in modified source text    */ 02448000
*                                                                       02449000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        02450000
*                                         in macro source listing    */ 02451000
*                                                                       02452000
*  END;                                /* Positional parms are          02453000
*                                         specified and REQUEST is      02454000
*                                         FIND or TERMINATE          */ 02455000
*                                                                       02456000
*                                                                       02457000
*                                                                       02458000
*/********************************************************************/ 02459000
*/* Checks if any specified keyword parameters are extraneous.       */ 02460000
*/* For each extraneous keyword, generates an error message and      */ 02461000
*/* sets the parameter list error flag on.                           */ 02462000
*/********************************************************************/ 02463000
*                                                                       02464000
*                                                                       02465000
*/********************************************************************/ 02466000
*/* Checks if REQTBL is specified and the request type is FIND       */ 02467000
*/* or TERMINATE.                                                    */ 02468000
*/********************************************************************/ 02469000
*                                                                       02470000
*IF (REQTBL ^= '') & ((REQUEST(1) = 'FIND') |                           02471000
*   (REQUEST(1) = 'TERMINATE')) THEN                                    02472000
*  DO;                                 /* REQTBL keyword extraneous  */ 02473000
*                                                                       02474000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      02475000
*                                         found flag on              */ 02476000
*                                                                       02477000
*    /****************************************************************/ 02478000
*    /* Generates the error message: AHA050 SJFACC ERROR: KEYWORD    */ 02479000
*    /* PARAMETER REQTBL SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH      */ 02480000
*    /* THE REQUEST TYPE.                                            */ 02481000
*    /****************************************************************/ 02482000
*                                                                       02483000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        02484000
*                                         skip a line in modified       02485000
*                                         source text before error      02486000
*                                         message                    */ 02487000
*                                                                       02488000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    02489000
*                                         macro source listing error    02490000
*                                         message                    */ 02491000
*                                                                       02492000
*    IANS_TEXT1 = IMSG050_TEXT1 || 'REQTBL' ||                          02493000
*                 IMSG050_TEXT2 || 'THE REQUEST TYPE.';                 02494000
*                                      /* Completed text for error      02495000
*                                         message                    */ 02496000
*                                                                       02497000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          02498000
*                                      /* Generate error message        02499000
*                                         in modified source text    */ 02500000
*                                                                       02501000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        02502000
*                                         in macro source listing    */ 02503000
*                                                                       02504000
*  END;                                /* REQTBL keyword extraneous  */ 02505000
*                                                                       02506000
*                                                                       02507000
*/********************************************************************/ 02508000
*/* Checks if NUMREQ is specified and the request type is FIND       */ 02509000
*/* or TERMINATE.                                                    */ 02510000
*/********************************************************************/ 02511000
*                                                                       02512000
*IF (NUMREQ ^= '') & ((REQUEST(1) = 'FIND') |                           02513000
*   (REQUEST(1) = 'TERMINATE')) THEN                                    02514000
*  DO;                                 /* NUMREQ keyword extraneous  */ 02515000
*                                                                       02516000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      02517000
*                                         found flag on              */ 02518000
*                                                                       02519000
*    /****************************************************************/ 02520000
*    /* Generates the error message: AHA050 SJFACC ERROR: KEYWORD    */ 02521000
*    /* PARAMETER NUMREQ SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH      */ 02522000
*    /* THE REQUEST TYPE.                                            */ 02523000
*    /****************************************************************/ 02524000
*                                                                       02525000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        02526000
*                                         skip a line in modified       02527000
*                                         source text before error      02528000
*                                         message                    */ 02529000
*                                                                       02530000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    02531000
*                                         macro source listing error    02532000
*                                         message                    */ 02533000
*                                                                       02534000
*    IANS_TEXT1 = IMSG050_TEXT1 || 'NUMREQ' ||                          02535000
*                 IMSG050_TEXT2 || 'THE REQUEST TYPE.';                 02536000
*                                      /* Completed text for error      02537000
*                                         message                    */ 02538000
*                                                                       02539000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          02540000
*                                      /* Generate error message        02541000
*                                         in modified source text    */ 02542000
*                                                                       02543000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        02544000
*                                         in macro source listing    */ 02545000
*                                                                       02546000
*  END;                                /* NUMREQ keyword extraneous  */ 02547000
*                                                                       02548000
*                                                                       02549000
*/********************************************************************/ 02550000
*/* Checks if RECOVRY is specified and the request type is           */ 02551000
*/* TERMINATE.                                                       */ 02552000
*/********************************************************************/ 02553000
*                                                                       02554000
*IF (RECOVRY ^= '') & (REQUEST(1) = 'TERMINATE') THEN                   02555000
*  DO;                                 /* RECOVRY keyword extraneous */ 02556000
*                                                                       02557000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      02558000
*                                         found flag on              */ 02559000
*                                                                       02560000
*    /****************************************************************/ 02561000
*    /* Generates the error message: AHA050 SJFACC ERROR: KEYWORD    */ 02562000
*    /* PARAMETER RECOVRY SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH     */ 02563000
*    /* THE REQUEST TYPE.                                            */ 02564000
*    /****************************************************************/ 02565000
*                                                                       02566000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        02567000
*                                         skip a line in modified       02568000
*                                         source text before error      02569000
*                                         message                    */ 02570000
*                                                                       02571000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    02572000
*                                         macro source listing error    02573000
*                                         message                    */ 02574000
*                                                                       02575000
*    IANS_TEXT1 = IMSG050_TEXT1 || 'RECOVRY' ||                         02576000
*                 IMSG050_TEXT2 || 'THE REQUEST TYPE.';                 02577000
*                                      /* Completed text for error      02578000
*                                         message                    */ 02579000
*                                                                       02580000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          02581000
*                                      /* Generate error message        02582000
*                                         in modified source text    */ 02583000
*                                                                       02584000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        02585000
*                                         in macro source listing    */ 02586000
*                                                                       02587000
*  END;                                /* RECOVRY keyword extraneous */ 02588000
*                                                                       02589000
*                                                                       02590000
*/********************************************************************/ 02591000
*/* Checks if CLEANUP is specified and the request type is           */ 02592000
*/* TERMINATE.                                                       */ 02593000
*/********************************************************************/ 02594000
*                                                                       02595000
*IF (CLEANUP ^= '') & (REQUEST(1) = 'TERMINATE') THEN                   02596000
*  DO;                                 /* CLEANUP keyword extraneous */ 02597000
*                                                                       02598000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      02599000
*                                         found flag on              */ 02600000
*                                                                       02601000
*    /****************************************************************/ 02602000
*    /* Generates the error message: AHA050 SJFACC ERROR: KEYWORD    */ 02603000
*    /* PARAMETER CLEANUP SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH     */ 02604000
*    /* THE REQUEST TYPE.                                            */ 02605000
*    /****************************************************************/ 02606000
*                                                                       02607000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        02608000
*                                         skip a line in modified       02609000
*                                         source text before error      02610000
*                                         message                    */ 02611000
*                                                                       02612000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    02613000
*                                         macro source listing error    02614000
*                                         message                    */ 02615000
*                                                                       02616000
*    IANS_TEXT1 = IMSG050_TEXT1 || 'CLEANUP' ||                         02617000
*                 IMSG050_TEXT2 || 'THE REQUEST TYPE.';                 02618000
*                                      /* Completed text for error      02619000
*                                         message                    */ 02620000
*                                                                       02621000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          02622000
*                                      /* Generate error message        02623000
*                                         in modified source text    */ 02624000
*                                                                       02625000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        02626000
*                                         in macro source listing    */ 02627000
*                                                                       02628000
*  END;                                /* CLEANUP keyword extraneous */ 02629000
*                                                                       02630000
*                                                                       02631000
*/********************************************************************/ 02632000
*/* Checks if NONAUTH is specified and the request type is FIND      */ 02633000
*/* or TERMINATE.                                                    */ 02634000
*/********************************************************************/ 02635000
*                                                                       02636000
*IF (NONAUTH ^= '') & ((REQUEST(1) = 'FIND') |                          02637000
*   (REQUEST(1) = 'TERMINATE')) THEN                                    02638000
*  DO;                                 /* NONAUTH keyword extraneous */ 02639000
*                                                                       02640000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      02641000
*                                         found flag on              */ 02642000
*                                                                       02643000
*    /****************************************************************/ 02644000
*    /* Generates the error message: AHA050 SJFACC ERROR: KEYWORD    */ 02645000
*    /* PARAMETER NONAUTH SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH     */ 02646000
*    /* THE REQUEST TYPE.                                            */ 02647000
*    /****************************************************************/ 02648000
*                                                                       02649000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        02650000
*                                         skip a line in modified       02651000
*                                         source text before error      02652000
*                                         message                    */ 02653000
*                                                                       02654000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    02655000
*                                         macro source listing error    02656000
*                                         message                    */ 02657000
*                                                                       02658000
*    IANS_TEXT1 = IMSG050_TEXT1 || 'NONAUTH' ||                         02659000
*                 IMSG050_TEXT2 || 'THE REQUEST TYPE.';                 02660000
*                                      /* Completed text for error      02661000
*                                         message                    */ 02662000
*                                                                       02663000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          02664000
*                                      /* Generate error message        02665000
*                                         in modified source text    */ 02666000
*                                                                       02667000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        02668000
*                                         in macro source listing    */ 02669000
*                                                                       02670000
*  END;                                /* NONAUTH keyword extraneous */ 02671000
*                                                                       02672000
*                                                                       02673000
*/********************************************************************/ 02674000
*/* Checks if SYSUSER is specified and the request type is FIND      */ 02675000
*/* or TERMINATE.                                                    */ 02676000
*/********************************************************************/ 02677000
*                                                                       02678000
*IF (SYSUSER ^= '') & ((REQUEST(1) = 'FIND') |                          02679000
*   (REQUEST(1) = 'TERMINATE')) THEN                                    02680000
*  DO;                                 /* SYSUSER keyword extraneous */ 02681000
*                                                                       02682000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      02683000
*                                         found flag on              */ 02684000
*                                                                       02685000
*    /****************************************************************/ 02686000
*    /* Generates the error message: AHA050 SJFACC ERROR: KEYWORD    */ 02687000
*    /* PARAMETER SYSUSER SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH     */ 02688000
*    /* THE REQUEST TYPE.                                            */ 02689000
*    /****************************************************************/ 02690000
*                                                                       02691000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        02692000
*                                         skip a line in modified       02693000
*                                         source text before error      02694000
*                                         message                    */ 02695000
*                                                                       02696000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    02697000
*                                         macro source listing error    02698000
*                                         message                    */ 02699000
*                                                                       02700000
*    IANS_TEXT1 = IMSG050_TEXT1 || 'SYSUSER' ||                         02701000
*                 IMSG050_TEXT2 || 'THE REQUEST TYPE.';                 02702000
*                                      /* Completed text for error      02703000
*                                         message                    */ 02704000
*                                                                       02705000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          02706000
*                                      /* Generate error message        02707000
*                                         in modified source text    */ 02708000
*                                                                       02709000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        02710000
*                                         in macro source listing    */ 02711000
*                                                                       02712000
*  END;                                /* SYSUSER keyword extraneous */ 02713000
*                                                                       02714000
*                                                                       02715000
*/********************************************************************/ 02716000
*/* Checks if TOKEN is specified and the request type is             */ 02717000
*/* TERMINATE.                                                       */ 02718000
*/********************************************************************/ 02719000
*                                                                       02720000
*IF (TOKEN ^= '') & (REQUEST(1) = 'TERMINATE') THEN                     02721000
*  DO;                                 /* TOKEN keyword extraneous */   02722000
*                                                                       02723000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      02724000
*                                         found flag on              */ 02725000
*                                                                       02726000
*    /****************************************************************/ 02727000
*    /* Generates the error message: AHA050 SJFACC ERROR: KEYWORD    */ 02728000
*    /* PARAMETER TOKEN SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH       */ 02729000
*    /* THE REQUEST TYPE.                                            */ 02730000
*    /****************************************************************/ 02731000
*                                                                       02732000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        02733000
*                                         skip a line in modified       02734000
*                                         source text before error      02735000
*                                         message                    */ 02736000
*                                                                       02737000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    02738000
*                                         macro source listing error    02739000
*                                         message                    */ 02740000
*                                                                       02741000
*    IANS_TEXT1 = IMSG050_TEXT1 || 'TOKEN' ||                           02742000
*                 IMSG050_TEXT2 || 'THE REQUEST TYPE.';                 02743000
*                                      /* Completed text for error      02744000
*                                         message                    */ 02745000
*                                                                       02746000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          02747000
*                                      /* Generate error message        02748000
*                                         in modified source text    */ 02749000
*                                                                       02750000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        02751000
*                                         in macro source listing    */ 02752000
*                                                                       02753000
*  END;                                /* TOKEN keyword extraneous */   02754000
*                                                                       02755000
*                                                                       02756000
*/********************************************************************/ 02757000
*/* Checks if VERB is specified and the request type is              */ 02758000
*/* TERMINATE.                                                       */ 02759000
*/********************************************************************/ 02760000
*                                                                       02761000
*IF (VERB ^= '') & (REQUEST(1) = 'TERMINATE') THEN                      02762000
*  DO;                                 /* VERB keyword extraneous    */ 02763000
*                                                                       02764000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      02765000
*                                         found flag on              */ 02766000
*                                                                       02767000
*    /****************************************************************/ 02768000
*    /* Generates the error message: AHA050 SJFACC ERROR: KEYWORD    */ 02769000
*    /* PARAMETER VERB SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH        */ 02770000
*    /* THE REQUEST TYPE.                                            */ 02771000
*    /****************************************************************/ 02772000
*                                                                       02773000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        02774000
*                                         skip a line in modified       02775000
*                                         source text before error      02776000
*                                         message                    */ 02777000
*                                                                       02778000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    02779000
*                                         macro source listing error    02780000
*                                         message                    */ 02781000
*                                                                       02782000
*    IANS_TEXT1 = IMSG050_TEXT1 || 'VERB' ||                            02783000
*                 IMSG050_TEXT2 || 'THE REQUEST TYPE.';                 02784000
*                                      /* Completed text for error      02785000
*                                         message                    */ 02786000
*                                                                       02787000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          02788000
*                                      /* Generate error message        02789000
*                                         in modified source text    */ 02790000
*                                                                       02791000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        02792000
*                                         in macro source listing    */ 02793000
*                                                                       02794000
*  END;                                /* VERB keyword extraneous    */ 02795000
*                                                                       02796000
*                                                                       02797000
*/********************************************************************/ 02798000
*/* Checks if LABEL is specified and the request type is         @D1A*/ 02799000
*/* RETRIEVE or TERMINATE.                                       @D1A*/ 02800000
*/********************************************************************/ 02801000
*                                                                       02802000
*IF (LABEL ^= '') &                                                     02803000
*   ((REQUEST(1) = 'RETRIEVE') | (REQUEST(1) = 'TERMINATE')) THEN       02804000
*  DO;                                 /* LABEL keyword extraneous      02805000
*                                                                @D1A*/ 02806000
*                                                                       02807000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      02808000
*                                         found flag on          @D1A*/ 02809000
*                                                                       02810000
*    /****************************************************************/ 02811000
*    /* Generates the error message: AHA050 SJFACC ERROR:        @D1A*/ 02812000
*    /* KEYWORD PARAMETER LABEL SPECIFIED, BUT MUTUALLY          @D1A*/ 02813000
*    /* EXCLUSIVE WITH THE REQUEST TYPE.                         @D1A*/ 02814000
*    /****************************************************************/ 02815000
*                                                                       02816000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        02817000
*                                         skip a line in modified       02818000
*                                         source text before error      02819000
*                                         message                @D1A*/ 02820000
*                                                                       02821000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    02822000
*                                         macro source listing error    02823000
*                                         message                @D1A*/ 02824000
*                                                                       02825000
*    IANS_TEXT1 = IMSG050_TEXT1 || 'LABEL' ||                           02826000
*                 IMSG050_TEXT2 || 'THE REQUEST TYPE.';                 02827000
*                                      /* Completed text for error      02828000
*                                         message                @D1A*/ 02829000
*                                                                       02830000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          02831000
*                                      /* Generate error message        02832000
*                                         in modified source text       02833000
*                                                                @D1A*/ 02834000
*                                                                       02835000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        02836000
*                                         in macro source listing       02837000
*                                                                @D1A*/ 02838000
*                                                                       02839000
*  END;                                /* LABEL keyword extraneous      02840000
*                                                                @D1A*/ 02841000
*                                                                       02842000
*                                                                       02843000
*/********************************************************************/ 02844000
*/* Checks if CONTINU is specified and the request type is FIND      */ 02845000
*/* or TERMINATE.                                                    */ 02846000
*/********************************************************************/ 02847000
*                                                                       02848000
*IF (CONTINU ^= '') & ((REQUEST(1) = 'FIND') |                          02849000
*   (REQUEST(1) = 'TERMINATE')) THEN                                    02850000
*  DO;                                 /* CONTINU keyword extraneous */ 02851000
*                                                                       02852000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      02853000
*                                         found flag on              */ 02854000
*                                                                       02855000
*    /****************************************************************/ 02856000
*    /* Generates the error message: AHA050 SJFACC ERROR: KEYWORD    */ 02857000
*    /* PARAMETER CONTINU SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH     */ 02858000
*    /* THE REQUEST TYPE.                                            */ 02859000
*    /****************************************************************/ 02860000
*                                                                       02861000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        02862000
*                                         skip a line in modified       02863000
*                                         source text before error      02864000
*                                         message                    */ 02865000
*                                                                       02866000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    02867000
*                                         macro source listing error    02868000
*                                         message                    */ 02869000
*                                                                       02870000
*    IANS_TEXT1 = IMSG050_TEXT1 || 'CONTINU' ||                         02871000
*                 IMSG050_TEXT2 || 'THE REQUEST TYPE.';                 02872000
*                                      /* Completed text for error      02873000
*                                         message                    */ 02874000
*                                                                       02875000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          02876000
*                                      /* Generate error message        02877000
*                                         in modified source text    */ 02878000
*                                                                       02879000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        02880000
*                                         in macro source listing    */ 02881000
*                                                                       02882000
*  END;                                /* CONTINU keyword extraneous */ 02883000
*                                                                       02884000
*                                                                       02885000
*/********************************************************************/ 02886000
*/* Checks if UPDJRNL is specified and the request type is FIND,     */ 02887000
*/* TERMINATE, RETRIEVE, or FINDRET.                                 */ 02888000
*/********************************************************************/ 02889000
*                                                                       02890000
*IF (UPDJRNL ^= '') & ((REQUEST(1) = 'FIND') |                          02891000
*   (REQUEST(1) = 'FINDRET') | (REQUEST(1) = 'RETRIEVE') |              02892000
*   (REQUEST(1) = 'TERMINATE')) THEN                                    02893000
*  DO;                                 /* UPDJRNL keyword extraneous */ 02894000
*                                                                       02895000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      02896000
*                                         found flag on              */ 02897000
*                                                                       02898000
*    /****************************************************************/ 02899000
*    /* Generates the error message: AHA050 SJFACC ERROR: KEYWORD    */ 02900000
*    /* PARAMETER UPDJRNL SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH     */ 02901000
*    /* THE REQUEST TYPE.                                            */ 02902000
*    /****************************************************************/ 02903000
*                                                                       02904000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        02905000
*                                         skip a line in modified       02906000
*                                         source text before error      02907000
*                                         message                    */ 02908000
*                                                                       02909000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    02910000
*                                         macro source listing error    02911000
*                                         message                    */ 02912000
*                                                                       02913000
*    IANS_TEXT1 = IMSG050_TEXT1 || 'UPDJRNL' ||                         02914000
*                 IMSG050_TEXT2 || 'THE REQUEST TYPE.';                 02915000
*                                      /* Completed text for error      02916000
*                                         message                    */ 02917000
*                                                                       02918000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          02919000
*                                      /* Generate error message        02920000
*                                         in modified source text    */ 02921000
*                                                                       02922000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        02923000
*                                         in macro source listing    */ 02924000
*                                                                       02925000
*  END;                                /* UPDJRNL keyword extraneous */ 02926000
*                                                                       02927000
*                                                                       02928000
*/********************************************************************/ 02929000
*/* Checks if UPDALTS is specified and the request type is FIND,     */ 02930000
*/* TERMINATE, RETRIEVE, or FINDRET.                             @D2A*/ 02931000
*/********************************************************************/ 02932000
*                                                                       02933000
*IF (UPDALTS ^= '') & ((REQUEST(1) = 'FIND') |                          02934000
*   (REQUEST(1) = 'FINDRET') | (REQUEST(1) = 'RETRIEVE') |              02935000
*   (REQUEST(1) = 'TERMINATE')) THEN   /* Test if UPDALTS is            02936000
*                                         extraneous             @D2A*/ 02937000
*  DO;                                 /* UPDALTS keyword extraneous    02938000
*                                                                @D2A*/ 02939000
*                                                                       02940000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      02941000
*                                         found flag on          @D2A*/ 02942000
*                                                                       02943000
*    /****************************************************************/ 02944000
*    /* Generates the error message: AHA050 SJFACC ERROR: KEYWORD    */ 02945000
*    /* PARAMETER UPDALTS SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH     */ 02946000
*    /* THE REQUEST TYPE.                                        @D2A*/ 02947000
*    /****************************************************************/ 02948000
*                                                                       02949000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        02950000
*                                         skip a line in modified       02951000
*                                         source text before error      02952000
*                                         message                @D2A*/ 02953000
*                                                                       02954000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    02955000
*                                         macro source listing error    02956000
*                                         message                @D2A*/ 02957000
*                                                                       02958000
*    IANS_TEXT1 = IMSG050_TEXT1 || 'UPDALTS' ||                         02959000
*                 IMSG050_TEXT2 || 'THE REQUEST TYPE.';                 02960000
*                                      /* Completed text for error      02961000
*                                         message                @D2A*/ 02962000
*                                                                       02963000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          02964000
*                                      /* Generate error message        02965000
*                                         in modified source text       02966000
*                                                                @D2A*/ 02967000
*                                                                       02968000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        02969000
*                                         in macro source listing       02970000
*                                                                @D2A*/ 02971000
*                                                                       02972000
*  END;                                /* UPDALTS keyword extraneous    02973000
*                                                                @D2A*/ 02974000
*                                                                       02975000
*                                                                       02976000
*/********************************************************************/ 02977000
*/* Checks if FNDNEXT is specified and the request type is UPDATE,   */ 02978000
*/* RETRIEVE or TERMINATE.                                           */ 02979000
*/********************************************************************/ 02980000
*                                                                       02981000
*IF (FNDNEXT ^= '') & ((REQUEST(1) = 'UPDATE') |                        02982000
*   (REQUEST(1) = 'RETRIEVE') | (REQUEST(1) = 'TERMINATE')) THEN        02983000
*  DO;                                 /* FNDNEXT keyword extraneous */ 02984000
*                                                                       02985000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      02986000
*                                         found flag on              */ 02987000
*                                                                       02988000
*    /****************************************************************/ 02989000
*    /* Generates the error message: AHA050 SJFACC ERROR: KEYWORD    */ 02990000
*    /* PARAMETER FNDNEXT SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH     */ 02991000
*    /* THE REQUEST TYPE.                                            */ 02992000
*    /****************************************************************/ 02993000
*                                                                       02994000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        02995000
*                                         skip a line in modified       02996000
*                                         source text before error      02997000
*                                         message                    */ 02998000
*                                                                       02999000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    03000000
*                                         macro source listing error    03001000
*                                         message                    */ 03002000
*                                                                       03003000
*    IANS_TEXT1 = IMSG050_TEXT1 || 'FNDNEXT' ||                         03004000
*                 IMSG050_TEXT2 || 'THE REQUEST TYPE.';                 03005000
*                                      /* Completed text for error      03006000
*                                         message                    */ 03007000
*                                                                       03008000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          03009000
*                                      /* Generate error message        03010000
*                                         in modified source text    */ 03011000
*                                                                       03012000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        03013000
*                                         in macro source listing    */ 03014000
*                                                                       03015000
*  END;                                /* FNDNEXT keyword extraneous */ 03016000
*                                                                       03017000
*                                                                       03018000
*/********************************************************************/ 03019000
*/* Checks if FNDWTKN is specified and the request type is UPDATE,   */ 03020000
*/* RETRIEVE or TERMINATE.                                           */ 03021000
*/********************************************************************/ 03022000
*                                                                       03023000
*IF (FNDWTKN ^= '') & ((REQUEST(1) = 'UPDATE') |                        03024000
*   (REQUEST(1) = 'RETRIEVE') | (REQUEST(1) = 'TERMINATE')) THEN        03025000
*  DO;                                 /* FNDWTKN keyword extraneous */ 03026000
*                                                                       03027000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      03028000
*                                         found flag on              */ 03029000
*                                                                       03030000
*    /****************************************************************/ 03031000
*    /* Generates the error message: AHA050 SJFACC ERROR: KEYWORD    */ 03032000
*    /* PARAMETER FNDWTKN SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH     */ 03033000
*    /* THE REQUEST TYPE.                                            */ 03034000
*    /****************************************************************/ 03035000
*                                                                       03036000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        03037000
*                                         skip a line in modified       03038000
*                                         source text before error      03039000
*                                         message                    */ 03040000
*                                                                       03041000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    03042000
*                                         macro source listing error    03043000
*                                         message                    */ 03044000
*                                                                       03045000
*    IANS_TEXT1 = IMSG050_TEXT1 || 'FNDWTKN' ||                         03046000
*                 IMSG050_TEXT2 || 'THE REQUEST TYPE.';                 03047000
*                                      /* Completed text for error      03048000
*                                         message                    */ 03049000
*                                                                       03050000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          03051000
*                                      /* Generate error message        03052000
*                                         in modified source text    */ 03053000
*                                                                       03054000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        03055000
*                                         in macro source listing    */ 03056000
*                                                                       03057000
*  END;                                /* FNDWTKN keyword extraneous */ 03058000
*                                                                       03059000
*                                                                       03060000
*/********************************************************************/ 03061000
*/* Checks if FNDLEVL is specified and the request type is UPDATE,   */ 03062000
*/* RETRIEVE or TERMINATE.                                           */ 03063000
*/********************************************************************/ 03064000
*                                                                       03065000
*IF (FNDLEVL ^= '') & ((REQUEST(1) = 'UPDATE') |                        03066000
*   (REQUEST(1) = 'RETRIEVE') | (REQUEST(1) = 'TERMINATE')) THEN        03067000
*  DO;                                 /* FNDLEVL keyword extraneous */ 03068000
*                                                                       03069000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      03070000
*                                         found flag on              */ 03071000
*                                                                       03072000
*    /****************************************************************/ 03073000
*    /* Generates the error message: AHA050 SJFACC ERROR: KEYWORD    */ 03074000
*    /* PARAMETER FNDLEVL SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH     */ 03075000
*    /* THE REQUEST TYPE                                             */ 03076000
*    /****************************************************************/ 03077000
*                                                                       03078000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        03079000
*                                         skip a line in modified       03080000
*                                         source text before error      03081000
*                                         message                    */ 03082000
*                                                                       03083000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    03084000
*                                         macro source listing error    03085000
*                                         message                    */ 03086000
*                                                                       03087000
*    IANS_TEXT1 = IMSG050_TEXT1 || 'FNDLEVL' ||                         03088000
*                 IMSG050_TEXT2 || 'THE REQUEST TYPE.';                 03089000
*                                      /* Completed text for error      03090000
*                                         message                    */ 03091000
*                                                                       03092000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          03093000
*                                      /* Generate error message        03094000
*                                         in modified source text    */ 03095000
*                                                                       03096000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        03097000
*                                         in macro source listing    */ 03098000
*                                                                       03099000
*  END;                                /* FNDLEVL keyword extraneous */ 03100000
*                                                                       03101000
*                                                                       03102000
*                                      /*                       9@D1D*/ 03103000
*/********************************************************************/ 03104000
*/* Checks if FNDSTPN is specified and the request type is UPDATE,   */ 03105000
*/* RETRIEVE or TERMINATE.                                           */ 03106000
*/********************************************************************/ 03107000
*                                                                       03108000
*IF (FNDSTPN ^= '') & ((REQUEST(1) = 'UPDATE') |                        03109000
*   (REQUEST(1) = 'RETRIEVE') | (REQUEST(1) = 'TERMINATE')) THEN        03110000
*  DO;                                 /* FNDSTPN keyword extraneous */ 03111000
*                                                                       03112000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      03113000
*                                         found flag on              */ 03114000
*                                                                       03115000
*    /****************************************************************/ 03116000
*    /* Generates the error message: AHA050 SJFACC ERROR: KEYWORD    */ 03117000
*    /* PARAMETER FNDSTPN SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH     */ 03118000
*    /* THE REQUEST TYPE.                                            */ 03119000
*    /****************************************************************/ 03120000
*                                                                       03121000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        03122000
*                                         skip a line in modified       03123000
*                                         source text before error      03124000
*                                         message                    */ 03125000
*                                                                       03126000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    03127000
*                                         macro source listing error    03128000
*                                         message                    */ 03129000
*                                                                       03130000
*    IANS_TEXT1 = IMSG050_TEXT1 || 'FNDSTPN' ||                         03131000
*                 IMSG050_TEXT2 || 'THE REQUEST TYPE.';                 03132000
*                                      /* Completed text for error      03133000
*                                         message                    */ 03134000
*                                                                       03135000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          03136000
*                                      /* Generate error message        03137000
*                                         in modified source text    */ 03138000
*                                                                       03139000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        03140000
*                                         in macro source listing    */ 03141000
*                                                                       03142000
*  END;                                /* FNDSTPN keyword extraneous */ 03143000
*                                                                       03144000
*                                                                       03145000
*/********************************************************************/ 03146000
*/* Checks if FNDPRLB is specified and the request type is UPDATE,   */ 03147000
*/* RETRIEVE or TERMINATE.                                           */ 03148000
*/********************************************************************/ 03149000
*                                                                       03150000
*IF (FNDPRLB ^= '') & ((REQUEST(1) = 'UPDATE') |                        03151000
*   (REQUEST(1) = 'RETRIEVE') | (REQUEST(1) = 'TERMINATE')) THEN        03152000
*  DO;                                 /* FNDPRLB keyword extraneous */ 03153000
*                                                                       03154000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      03155000
*                                         found flag on              */ 03156000
*                                                                       03157000
*    /****************************************************************/ 03158000
*    /* Generates the error message: AHA050 SJFACC ERROR: KEYWORD    */ 03159000
*    /* PARAMETER FNDPRLB SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH     */ 03160000
*    /* THE REQUEST TYPE.                                            */ 03161000
*    /****************************************************************/ 03162000
*                                                                       03163000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        03164000
*                                         skip a line in modified       03165000
*                                         source text before error      03166000
*                                         message                    */ 03167000
*                                                                       03168000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    03169000
*                                         macro source listing error    03170000
*                                         message                    */ 03171000
*                                                                       03172000
*    IANS_TEXT1 = IMSG050_TEXT1 || 'FNDPRLB' ||                         03173000
*                 IMSG050_TEXT2 || 'THE REQUEST TYPE.';                 03174000
*                                      /* Completed text for error      03175000
*                                         message                    */ 03176000
*                                                                       03177000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          03178000
*                                      /* Generate error message        03179000
*                                         in modified source text    */ 03180000
*                                                                       03181000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        03182000
*                                         in macro source listing    */ 03183000
*                                                                       03184000
*  END;                                /* FNDPRLB keyword extraneous */ 03185000
*                                                                       03186000
*                                                                       03187000
*/********************************************************************/ 03188000
*/* Checks if FNDJBTK is specified and the request type is UPDATE,   */ 03188100
*/* RETRIEVE or TERMINATE.                                       @D3A*/ 03188200
*/********************************************************************/ 03188300
*                                                                       03188400
*IF (FNDJBTK ^= '') & ((REQUEST(1) = 'UPDATE') |                        03188500
*   (REQUEST(1) = 'RETRIEVE') | (REQUEST(1) = 'TERMINATE')) THEN        03188600
*  DO;                                 /* FNDJBTK keyword extraneous    03188700
*                                                                @D3A*/ 03188800
*                                                                       03188900
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      03189000
*                                         found flag on          @D3A*/ 03189100
*                                                                       03189200
*    /****************************************************************/ 03189300
*    /* Generates the error message: AHA050 SJFACC ERROR: KEYWORD    */ 03189400
*    /* PARAMETER FNDJBTK SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH     */ 03189500
*    /* THE REQUEST TYPE                                         @D3A*/ 03189600
*    /****************************************************************/ 03189700
*                                                                       03189800
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        03189900
*                                         skip a line in modified       03190000
*                                         source text before error      03190100
*                                         message                @D3A*/ 03190200
*                                                                       03190300
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    03190400
*                                         macro source listing error    03190500
*                                         message                @D3A*/ 03190600
*                                                                       03190700
*    IANS_TEXT1 = IMSG050_TEXT1 || 'FNDJBTK' ||                         03190800
*                 IMSG050_TEXT2 || 'THE REQUEST TYPE.';                 03190900
*                                      /* Completed text for error      03191000
*                                         message                @D3A*/ 03191100
*                                                                       03191200
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          03191300
*                                      /* Generate error message in     03191400
*                                         modified source text   @D3A*/ 03191500
*                                                                       03191600
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message in     03191700
*                                         macro source listing   @D3A*/ 03191800
*                                                                       03191900
*  END;                                /* FNDJBTK keyword extraneous    03192000
*                                                                @D3A*/ 03192100
*                                                                       03192200
*/********************************************************************/ 03192300
*/* Checks if FNDCSTK is specified and the request type is UPDATE,   */ 03192400
*/* RETRIEVE or TERMINATE.                                       @D3A*/ 03192500
*/********************************************************************/ 03192600
*                                                                       03192700
*IF (FNDCSTK ^= '') & ((REQUEST(1) = 'UPDATE') |                        03192800
*   (REQUEST(1) = 'RETRIEVE') | (REQUEST(1) = 'TERMINATE')) THEN        03192900
*  DO;                                 /* FNDCSTK keyword extraneous    03193000
*                                                                @D3A*/ 03193100
*                                                                       03193200
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      03193300
*                                         found flag on          @D3A*/ 03193400
*                                                                       03193500
*    /****************************************************************/ 03193600
*    /* Generates the error message: AHA050 SJFACC ERROR: KEYWORD    */ 03193700
*    /* PARAMETER FNDCSTK SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH     */ 03193800
*    /* THE REQUEST TYPE                                         @D3A*/ 03193900
*    /****************************************************************/ 03194000
*                                                                       03194100
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        03194200
*                                         skip a line in modified       03194300
*                                         source text before error      03194400
*                                         message                @D3A*/ 03194500
*                                                                       03194600
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    03194700
*                                         macro source listing error    03194800
*                                         message                @D3A*/ 03194900
*                                                                       03195000
*    IANS_TEXT1 = IMSG050_TEXT1 || 'FNDCSTK' ||                         03195100
*                 IMSG050_TEXT2 || 'THE REQUEST TYPE.';                 03195200
*                                      /* Completed text for error      03195300
*                                         message                @D3A*/ 03195400
*                                                                       03195500
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          03195600
*                                      /* Generate error message in     03195700
*                                         modified source text   @D3A*/ 03195800
*                                                                       03195900
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message in     03196000
*                                         macro source listing   @D3A*/ 03196100
*                                                                       03196200
*  END;                                /* FNDCSTK keyword extraneous    03196300
*                                                                @D3A*/ 03196400
*                                                                       03196500
*/********************************************************************/ 03196600
*/* Returns from the CHECK_EXTRANEOUS routine. Goes to the label     */ 03196700
*/* just after the branch to this routine.                           */ 03196800
*/********************************************************************/ 03196900
*                                                                       03197000
*GOTO LHA0060B;                        /* Return from CHECK_            03197100
*                                         EXTRANEOUS routine         */ 03197200
*@EJECT;                                                                03197300
*/********************************************************************/ 03197400
*/*                                                                  */ 03197500
*/* ROUTINE NAME: CHECK_ASIS_PARMS                                   */ 03198000
*/*                                                                  */ 03199000
*/* FUNCTION: Verifies that asis type parms, which are specified,    */ 03200000
*/*           have the correct number of values.                     */ 03201000
*/*                                                                  */ 03202000
*/* ENTRY: From VER_EXEC_FORM                                        */ 03203000
*/*                                                                  */ 03204000
*/* INPUT: Asis type keyword macro parameters                        */ 03205000
*/*                                                                  */ 03206000
*/* OUTPUT: If invalid parameters are detected:                      */ 03207000
*/*          1. The parameter list error flag is set on.             */ 03208000
*/*          2. Error messages are generated.                        */ 03209000
*/*                                                                  */ 03210000
*/* EXIT: To VER_EXEC_FORM                                           */ 03211000
*/*                                                                  */ 03212000
*/* ROUTINES BRANCHED TO: None                                       */ 03213000
*/*                                                                  */ 03214000
*/********************************************************************/ 03215000
*                                                                       03216000
*LHA0070A:;                            /* Entry point of routine     */ 03217000
*                                                                       03218000
*/********************************************************************/ 03219000
*/* Verifies the REQTBL key word parameter field has 1 value, if     */ 03220000
*/* specified.  If it is specified and has zero values or more       */ 03221000
*/* than one value, generates error message 030 and sets the         */ 03222000
*/* parameter list error flag on.                                    */ 03223000
*/* Note: REQTBL = 'REQTBL' if REQTBL was specified with no          */ 03224000
*/* values in the parameter field. For example:                      */ 03225000
*/* ...REQUEST(FINDUPD) REQTBL MF(E)...                              */ 03226000
*/********************************************************************/ 03227000
*                                                                       03228000
*IF (NUMBER(REQTBL) > 1) | (REQTBL = 'REQTBL') THEN                     03229000
*                                      /* Test if REQTBL is specified   03230000
*                                         and has zero or more than     03231000
*                                         one values specified.  See    03232000
*                                         note in block comment         03233000
*                                         above                      */ 03234000
*  DO;                                 /* REQTBL is specified and has   03235000
*                                         zero or more than one         03236000
*                                         values specified           */ 03237000
*                                                                       03238000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      03239000
*                                         found flag on              */ 03240000
*                                                                       03241000
*    /****************************************************************/ 03242000
*    /* Generates the error message: AHA030 SJFACC ERROR: KEYWORD    */ 03243000
*    /* PARAMETER REQTBL SPECIFIED INCORRECTLY.                      */ 03244000
*    /****************************************************************/ 03245000
*                                                                       03246000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        03247000
*                                         skip a line in modified       03248000
*                                         source text before error      03249000
*                                         message                    */ 03250000
*                                                                       03251000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    03252000
*                                         macro source listing error    03253000
*                                         message                    */ 03254000
*                                                                       03255000
*    IANS_TEXT1 = IMSG030_TEXT1 || 'REQTBL' || IMSG030_TEXT2;           03256000
*                                      /* Completed text for error      03257000
*                                         message                    */ 03258000
*                                                                       03259000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          03260000
*                                      /* Generate error message        03261000
*                                         in modified source text    */ 03262000
*                                                                       03263000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        03264000
*                                         in macro source listing    */ 03265000
*                                                                       03266000
*  END;                                /* REQTBL is specified and has   03267000
*                                         zero or more than one         03268000
*                                         values specified           */ 03269000
*                                                                       03270000
*                                                                       03271000
*/********************************************************************/ 03272000
*/* Verifies the NUMREQ key word parameter field has 1 value, if     */ 03273000
*/* specified.  If it is specified and has zero values or more       */ 03274000
*/* than one value, generates error message 030 and sets the         */ 03275000
*/* parameter list error flag on.                                    */ 03276000
*/********************************************************************/ 03277000
*                                                                       03278000
*IF (NUMBER(NUMREQ) > 1) | (NUMREQ = 'NUMREQ') THEN                     03279000
*                                      /* Test if NUMREQ is specified   03280000
*                                         and has zero or more than     03281000
*                                         one values specified       */ 03282000
*  DO;                                 /* NUMREQ is specified and has   03283000
*                                         zero or more than one         03284000
*                                         values specified           */ 03285000
*                                                                       03286000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      03287000
*                                         found flag on              */ 03288000
*                                                                       03289000
*    /****************************************************************/ 03290000
*    /* Generates the error message: AHA030 SJFACC ERROR: KEYWORD    */ 03291000
*    /* PARAMETER NUMREQ SPECIFIED INCORRECTLY.                      */ 03292000
*    /****************************************************************/ 03293000
*                                                                       03294000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        03295000
*                                         skip a line in modified       03296000
*                                         source text before error      03297000
*                                         message                    */ 03298000
*                                                                       03299000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    03300000
*                                         macro source listing error    03301000
*                                         message                    */ 03302000
*                                                                       03303000
*    IANS_TEXT1 = IMSG030_TEXT1 || 'NUMREQ' || IMSG030_TEXT2;           03304000
*                                      /* Completed text for error      03305000
*                                         message                    */ 03306000
*                                                                       03307000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          03308000
*                                      /* Generate error message        03309000
*                                         in modified source text    */ 03310000
*                                                                       03311000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        03312000
*                                         in macro source listing    */ 03313000
*                                                                       03314000
*  END;                                /* NUMREQ is specified and has   03315000
*                                         zero or more than one         03316000
*                                         values specified           */ 03317000
*                                                                       03318000
*                                                                       03319000
*/********************************************************************/ 03320000
*/* Verifies the LOCLSTG key word parameter field has 1 value, if    */ 03321000
*/* specified.  If it is specified and has zero values or more       */ 03322000
*/* than one value, generates error message 030 and sets the         */ 03323000
*/* parameter list error flag on.                                    */ 03324000
*/********************************************************************/ 03325000
*                                                                       03326000
*IF (NUMBER(LOCLSTG) > 1) | (LOCLSTG = 'LOCLSTG') THEN                  03327000
*                                      /* Test if LOCLSTG is speci-     03328000
*                                         fied and has zero or more     03329000
*                                         than one value             */ 03330000
*  DO;                                 /* LOCLSTG is specified and      03331000
*                                         has zero or more than one     03332000
*                                         value                      */ 03333000
*                                                                       03334000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      03335000
*                                         found flag on              */ 03336000
*                                                                       03337000
*    /****************************************************************/ 03338000
*    /* Generates the error message: AHA030 SJFACC ERROR: KEYWORD    */ 03339000
*    /* PARAMETER LOCLSTG SPECIFIED INCORRECTLY.                     */ 03340000
*    /****************************************************************/ 03341000
*                                                                       03342000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        03343000
*                                         skip a line in modified       03344000
*                                         source text before error      03345000
*                                         message                    */ 03346000
*                                                                       03347000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    03348000
*                                         macro source listing error    03349000
*                                         message                    */ 03350000
*                                                                       03351000
*    IANS_TEXT1 = IMSG030_TEXT1 || 'LOCLSTG' || IMSG030_TEXT2;          03352000
*                                      /* Completed text for error      03353000
*                                         message                    */ 03354000
*                                                                       03355000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          03356000
*                                      /* Generate error message        03357000
*                                         in modified source text    */ 03358000
*                                                                       03359000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        03360000
*                                         in macro source listing    */ 03361000
*                                                                       03362000
*  END;                                /* LOCLSTG is specified and      03363000
*                                         has zero or more than one     03364000
*                                         value                      */ 03365000
*                                                                       03366000
*                                                                       03367000
*/********************************************************************/ 03368000
*/* Verifies the TOKEN key word parameter field has 1 value, if      */ 03369000
*/* specified.  If it is specified and has zero values or more       */ 03370000
*/* than one value, generates error message 030 and sets the         */ 03371000
*/* parameter list error flag on.                                    */ 03372000
*/********************************************************************/ 03373000
*                                                                       03374000
*IF (NUMBER(TOKEN) > 1) | (TOKEN = 'TOKEN') THEN                        03375000
*                                      /* Test if TOKEN is specified    03376000
*                                         and has zero or more than     03377000
*                                         one value                  */ 03378000
*  DO;                                 /* TOKEN is specified and has    03379000
*                                         zero or more than one         03380000
*                                         value                      */ 03381000
*                                                                       03382000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      03383000
*                                         found flag on              */ 03384000
*                                                                       03385000
*    /****************************************************************/ 03386000
*    /* Generates the error message: AHA030 SJFACC ERROR: KEYWORD    */ 03387000
*    /* PARAMETER TOKEN SPECIFIED INCORRECTLY.                       */ 03388000
*    /****************************************************************/ 03389000
*                                                                       03390000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        03391000
*                                         skip a line in modified       03392000
*                                         source text before error      03393000
*                                         message                    */ 03394000
*                                                                       03395000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    03396000
*                                         macro source listing error    03397000
*                                         message                    */ 03398000
*                                                                       03399000
*    IANS_TEXT1 = IMSG030_TEXT1 || 'TOKEN' || IMSG030_TEXT2;            03400000
*                                      /* Completed text for error      03401000
*                                         message                    */ 03402000
*                                                                       03403000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          03404000
*                                      /* Generate error message        03405000
*                                         in modified source text    */ 03406000
*                                                                       03407000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        03408000
*                                         in macro source listing    */ 03409000
*                                                                       03410000
*  END;                                /* TOKEN is specified and has    03411000
*                                         zero or more than one         03412000
*                                         value                      */ 03413000
*                                                                       03414000
*                                                                       03415000
*/********************************************************************/ 03416000
*/* Verifies the VERB key word parameter field has 1 value, if       */ 03417000
*/* specified.  If it is specified and has zero values or more       */ 03418000
*/* than one value, generates error message 030 and sets the         */ 03419000
*/* parameter list error flag on.                                    */ 03420000
*/********************************************************************/ 03421000
*                                                                       03422000
*IF (NUMBER(VERB) > 1) | (VERB = 'VERB') THEN  /* Test if VERB is       03423000
*                                         specified and has zero or     03424000
*                                         more than one value        */ 03425000
*  DO;                                 /* VERB is specified and has     03426000
*                                         zero or more than one         03427000
*                                         value                      */ 03428000
*                                                                       03429000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      03430000
*                                         found flag on              */ 03431000
*                                                                       03432000
*    /****************************************************************/ 03433000
*    /* Generates the error message: AHA030 SJFACC ERROR: KEYWORD    */ 03434000
*    /* PARAMETER VERB SPECIFIED INCORRECTLY.                        */ 03435000
*    /****************************************************************/ 03436000
*                                                                       03437000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        03438000
*                                         skip a line in modified       03439000
*                                         source text before error      03440000
*                                         message                    */ 03441000
*                                                                       03442000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    03443000
*                                         macro source listing error    03444000
*                                         message                    */ 03445000
*                                                                       03446000
*    IANS_TEXT1 = IMSG030_TEXT1 || 'VERB' || IMSG030_TEXT2;             03447000
*                                      /* Completed text for error      03448000
*                                         message                    */ 03449000
*                                                                       03450000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          03451000
*                                      /* Generate error message        03452000
*                                         in modified source text    */ 03453000
*                                                                       03454000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        03455000
*                                         in macro source listing    */ 03456000
*                                                                       03457000
*  END;                                /* VERB is specified and has     03458000
*                                         zero or more than one         03459000
*                                         value                      */ 03460000
*                                                                       03461000
*                                                                       03462000
*/********************************************************************/ 03463000
*/* Verifies the LABEL key word parameter field has 1 value, if  @D1C*/ 03464000
*/* specified.  If it is specified and has zero values or more       */ 03465000
*/* than one value, generates error message 030 and sets the         */ 03466000
*/* parameter list error flag on.                                    */ 03467000
*/********************************************************************/ 03468000
*                                                                       03469000
*IF (NUMBER(LABEL) > 1) | (LABEL = 'LABEL') THEN                        03470000
*                                      /* Test if LABEL is speci-       03471000
*                                         fied and has zero or more     03472000
*                                         than one value         @D1C*/ 03473000
*  DO;                                 /* LABEL is specified and        03474000
*                                         has zero or more than one     03475000
*                                         value                  @D1C*/ 03476000
*                                                                       03477000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      03478000
*                                         found flag on              */ 03479000
*                                                                       03480000
*    /****************************************************************/ 03481000
*    /* Generates the error message: AHA030 SJFACC ERROR:            */ 03482000
*    /* KEYWORD PARAMETER LABEL SPECIFIED INCORRECTLY.           @D1C*/ 03483000
*    /****************************************************************/ 03484000
*                                                                       03485000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        03486000
*                                         skip a line in modified       03487000
*                                         source text before error      03488000
*                                         message                    */ 03489000
*                                                                       03490000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    03491000
*                                         macro source listing error    03492000
*                                         message                    */ 03493000
*                                                                       03494000
*    IANS_TEXT1 = IMSG030_TEXT1 || 'LABEL' || IMSG030_TEXT2;            03495000
*                                      /* Completed text for error      03496000
*                                         message                @D1C*/ 03497000
*                                                                       03498000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          03499000
*                                      /* Generate error message        03500000
*                                         in modified source text    */ 03501000
*                                                                       03502000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        03503000
*                                         in macro source listing    */ 03504000
*                                                                       03505000
*  END;                                /* LABEL is specified and        03506000
*                                         has zero or more than one     03507000
*                                         value                  @D2C*/ 03508000
*                                                                       03509000
*                                                                       03510000
*/********************************************************************/ 03511000
*/* Verifies the UPDALTS key word parameter field has 1 value, if    */ 03512000
*/* specified.  If it is specified and has zero values or more       */ 03513000
*/* than one value, generates error message 030 and sets the         */ 03514000
*/* parameter list error flag on.                                @D2A*/ 03515000
*/********************************************************************/ 03516000
*                                                                       03517000
*IF (NUMBER(UPDALTS) > 1) | (UPDALTS = 'UPDALTS') THEN                  03518000
*                                      /* Test if UPDALTS is speci-     03519000
*                                         fied and has zero or more     03520000
*                                         than one value         @D2A*/ 03521000
*  DO;                                 /* UPDALTS is specified and      03522000
*                                         has zero or more than one     03523000
*                                         value                  @D2A*/ 03524000
*                                                                       03525000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      03526000
*                                         found flag on          @D2A*/ 03527000
*                                                                       03528000
*    /****************************************************************/ 03529000
*    /* Generates the error message: AHA030 SJFACC ERROR:            */ 03530000
*    /* KEYWORD PARAMETER UPDALTS SPECIFIED INCORRECTLY.         @D2A*/ 03531000
*    /****************************************************************/ 03532000
*                                                                       03533000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        03534000
*                                         skip a line in modified       03535000
*                                         source text before error      03536000
*                                         message                @D2A*/ 03537000
*                                                                       03538000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    03539000
*                                         macro source listing error    03540000
*                                         message                @D2A*/ 03541000
*                                                                       03542000
*    IANS_TEXT1 = IMSG030_TEXT1 || 'UPDALTS' || IMSG030_TEXT2;          03543000
*                                      /* Completed text for error      03544000
*                                         message                @D2A*/ 03545000
*                                                                       03546000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          03547000
*                                      /* Generate error message        03548000
*                                         in modified source text       03549000
*                                                                @D2A*/ 03550000
*                                                                       03551000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        03552000
*                                         in macro source listing       03553000
*                                                                @D2A*/ 03554000
*                                                                       03555000
*  END;                                /* UPDALTS is specified and      03556000
*                                         has zero or more than one     03557000
*                                         value                  @D2A*/ 03558000
*                                                                       03559000
*                                                                       03560000
*/********************************************************************/ 03561000
*/* Verifies the FNDSTPN key word parameter field has 1 value, if    */ 03562000
*/* specified.  If it is specified and has zero values or more       */ 03563000
*/* than one value, generates error message 030 and sets the         */ 03564000
*/* parameter list error flag on.                                    */ 03565000
*/********************************************************************/ 03566000
*                                                                       03567000
*IF (NUMBER(FNDSTPN) > 1) | (FNDSTPN = 'FNDSTPN') THEN                  03568000
*                                      /* Test if FNDSTPN is speci-     03569000
*                                         fied and has zero or more     03570000
*                                         than one value             */ 03571000
*  DO;                                 /* FNDSTPN is specified and      03572000
*                                         has zero or more than one     03573000
*                                         value                      */ 03574000
*                                                                       03575000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      03576000
*                                         found flag on              */ 03577000
*                                                                       03578000
*    /****************************************************************/ 03579000
*    /* Generates the error message: AHA030 SJFACC ERROR: KEYWORD    */ 03580000
*    /* PARAMETER FNDSTPN SPECIFIED INCORRECTLY.                     */ 03581000
*    /****************************************************************/ 03582000
*                                                                       03583000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        03584000
*                                         skip a line in modified       03585000
*                                         source text before error      03586000
*                                         message                    */ 03587000
*                                                                       03588000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    03589000
*                                         macro source listing error    03590000
*                                         message                    */ 03591000
*                                                                       03592000
*    IANS_TEXT1 = IMSG030_TEXT1 || 'FNDSTPN' || IMSG030_TEXT2;          03593000
*                                      /* Completed text for error      03594000
*                                         message                    */ 03595000
*                                                                       03596000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          03597000
*                                      /* Generate error message        03598000
*                                         in modified source text    */ 03599000
*                                                                       03600000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        03601000
*                                         in macro source listing    */ 03602000
*                                                                       03603000
*  END;                                /* FNDSTPN is specified and      03604000
*                                         has zero or more than one     03605000
*                                         value                      */ 03606000
*                                                                       03607000
*                                                                       03608000
*/********************************************************************/ 03609000
*/* Verifies the FNDPRLB key word parameter field has 1 value, if    */ 03610000
*/* specified.  If it is specified and has zero values or more       */ 03611000
*/* than one value, generates error message 030 and sets the         */ 03612000
*/* parameter list error flag on.                                    */ 03613000
*/********************************************************************/ 03614000
*                                                                       03615000
*IF (NUMBER(FNDPRLB) > 1) | (FNDPRLB = 'FNDPRLB') THEN                  03616000
*                                      /* Test if FNDPRLB is speci-     03617000
*                                         fied and has zero or more     03618000
*                                         than one value             */ 03619000
*  DO;                                 /* FNDPRLB is specified and      03620000
*                                         has zero or more than one     03621000
*                                         value                      */ 03622000
*                                                                       03623000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      03624000
*                                         found flag on              */ 03625000
*                                                                       03626000
*    /****************************************************************/ 03627000
*    /* Generates the error message: AHA030 SJFACC ERROR: KEYWORD    */ 03628000
*    /* PARAMETER FNDPRLB SPECIFIED INCORRECTLY.                     */ 03629000
*    /****************************************************************/ 03630000
*                                                                       03631000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        03632000
*                                         skip a line in modified       03633000
*                                         source text before error      03634000
*                                         message                    */ 03635000
*                                                                       03636000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    03637000
*                                         macro source listing error    03638000
*                                         message                    */ 03639000
*                                                                       03640000
*    IANS_TEXT1 = IMSG030_TEXT1 || 'FNDPRLB' || IMSG030_TEXT2;          03641000
*                                      /* Completed text for error      03642000
*                                         message                    */ 03643000
*                                                                       03644000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          03645000
*                                      /* Generate error message        03646000
*                                         in modified source text    */ 03647000
*                                                                       03648000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        03649000
*                                         in macro source listing    */ 03650000
*                                                                       03651000
*  END;                                /* FNDPRLB is specified and      03652000
*                                         has zero or more than one     03653000
*                                         value                      */ 03654000
*                                                                       03655000
*                                                                       03656000
*/********************************************************************/ 03657000
*/* Returns from the CHECK_ASIS_PARMS routine. Brances to the        */ 03658000
*/* label just following the branch to this routine.                 */ 03659000
*/********************************************************************/ 03660000
*                                                                       03661000
*GOTO LHA0070B;                        /* Return from CHECK_ASIS_       03662000
*                                         PARMS routine              */ 03663000
*@EJECT;                                                                03664000
*/********************************************************************/ 03665000
*/*                                                                  */ 03666000
*/* ROUTINE NAME: CHECK_CHOICE_PARMS                                 */ 03667000
*/*                                                                  */ 03668000
*/* DESCRIPTIVE NAME: Check choice-data type macro parameters.       */ 03669000
*/*                                                                  */ 03670000
*/* ENTRY: From VER_EXEC_FORM routine                                */ 03671000
*/*                                                                  */ 03672000
*/* INPUT: Choice-data type macro parameters.                        */ 03673000
*/*                                                                  */ 03674000
*/* OUTPUT: If invalid parameters are detected:                      */ 03675000
*/*          1. The parameter list error flag is set on.             */ 03676000
*/*          2. Error messages are generated.                        */ 03677000
*/*                                                                  */ 03678000
*/*                                                                  */ 03679000
*/* EXIT: To VER_EXEC_FORM routine                                   */ 03680000
*/*                                                                  */ 03681000
*/* ROUTINES CALLED: None                                            */ 03682000
*/*                                                                  */ 03683000
*/********************************************************************/ 03684000
*                                                                       03685000
*LHA0080A:;                            /* Entry point of routine     */ 03686000
*                                                                       03687000
*/********************************************************************/ 03688000
*/* Verifies that the REQUEST keyword parameter has a valid          */ 03689000
*/* value, if it is specified. Valid values are: FIND, FINDRET,      */ 03690000
*/* FINDUPD, UPDATE, RETRIEVE, or TERMINATE.  If an invalid value    */ 03691000
*/* is specified, generates error message 030 and sets the           */ 03692000
*/* parameter list error flag on.                                    */ 03693000
*/********************************************************************/ 03694000
*                                                                       03695000
*IF (NUMBER(REQUEST) > 1) |                                             03696000
*   ((REQUEST(1) ^= 'TERMINATE') & (REQUEST(1) ^= 'FIND') &             03697000
*    (REQUEST(1) ^= 'RETRIEVE') & (REQUEST(1) ^= 'UPDATE') &            03698000
*    (REQUEST(1) ^= 'FINDUPD') & (REQUEST(1) ^= 'FINDRET') &            03699000
*    (REQUEST ^= '')) THEN                                              03700000
*  DO;                                 /* REQUEST keyword invalid    */ 03701000
*                                                                       03702000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      03703000
*                                         found flag on              */ 03704000
*                                                                       03705000
*    /****************************************************************/ 03706000
*    /* Generates the error message: AHA030 SJFACC ERROR: KEYWORD    */ 03707000
*    /* PARAMETER REQUEST SPECIFIED INCORRECTLY.                     */ 03708000
*    /****************************************************************/ 03709000
*                                                                       03710000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        03711000
*                                         skip a line in modified       03712000
*                                         source text before error      03713000
*                                         message                    */ 03714000
*                                                                       03715000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    03716000
*                                         macro source listing error    03717000
*                                         message                    */ 03718000
*                                                                       03719000
*    IANS_TEXT1 = IMSG030_TEXT1 || 'REQUEST' || IMSG030_TEXT2;          03720000
*                                      /* Completed text for error      03721000
*                                         message                    */ 03722000
*                                                                       03723000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          03724000
*                                      /* Generate error message        03725000
*                                         in modified source text    */ 03726000
*                                                                       03727000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        03728000
*                                         in macro source listing    */ 03729000
*                                                                       03730000
*  END;                                /* REQUEST keyword invalid    */ 03731000
*                                                                       03732000
*                                                                       03733000
*/********************************************************************/ 03734000
*/* Verifies that the RECOVRY keyword parameter has a valid          */ 03735000
*/* value, if it is specified.  Valid values are YES or NO.          */ 03736000
*/* If an invalid value is specified, generates error message 030    */ 03737000
*/* and sets the parameter list error flag on.                       */ 03738000
*/********************************************************************/ 03739000
*                                                                       03740000
*IF ((RECOVRY ^= '') & (RECOVRY(1) ^= 'YES') &                          03741000
*    (RECOVRY(1) ^= 'NO')) | (NUMBER(RECOVRY) > 1) THEN                 03742000
*  DO;                                 /* RECOVRY keyword invalid    */ 03743000
*                                                                       03744000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      03745000
*                                         found flag on              */ 03746000
*                                                                       03747000
*    /****************************************************************/ 03748000
*    /* Generates the error message: AHA030 SJFACC ERROR: KEYWORD    */ 03749000
*    /* PARAMETER RECOVRY SPECIFIED INCORRECTLY.                     */ 03750000
*    /****************************************************************/ 03751000
*                                                                       03752000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        03753000
*                                         skip a line in modified       03754000
*                                         source text before error      03755000
*                                         message                    */ 03756000
*                                                                       03757000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    03758000
*                                         macro source listing error    03759000
*                                         message                    */ 03760000
*                                                                       03761000
*    IANS_TEXT1 = IMSG030_TEXT1 || 'RECOVRY' || IMSG030_TEXT2;          03762000
*                                      /* Completed text for error      03763000
*                                         message                    */ 03764000
*                                                                       03765000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          03766000
*                                      /* Generate error message        03767000
*                                         in modified source text    */ 03768000
*                                                                       03769000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        03770000
*                                         in macro source listing    */ 03771000
*                                                                       03772000
*  END;                                /* RECOVRY keyword invalid    */ 03773000
*                                                                       03774000
*                                                                       03775000
*/********************************************************************/ 03776000
*/* Verifies that the CLEANUP keyword parameter has a valid          */ 03777000
*/* value, if it is specified.  Valid values are YES or NO.          */ 03778000
*/* If an invalid value is specified, generates error message 030    */ 03779000
*/* and sets the parameter list error flag on.                       */ 03780000
*/********************************************************************/ 03781000
*                                                                       03782000
*IF ((CLEANUP ^= '') & (CLEANUP(1) ^= 'YES') &                          03783000
*    (CLEANUP(1) ^= 'NO')) | (NUMBER(CLEANUP) > 1) THEN                 03784000
*  DO;                                 /* CLEANUP keyword invalid    */ 03785000
*                                                                       03786000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      03787000
*                                         found flag on              */ 03788000
*                                                                       03789000
*    /****************************************************************/ 03790000
*    /* Generates the error message: AHA030 SJFACC ERROR: KEYWORD    */ 03791000
*    /* PARAMETER CLEANUP SPECIFIED INCORRECTLY.                     */ 03792000
*    /****************************************************************/ 03793000
*                                                                       03794000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        03795000
*                                         skip a line in modified       03796000
*                                         source text before error      03797000
*                                         message                    */ 03798000
*                                                                       03799000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    03800000
*                                         macro source listing error    03801000
*                                         message                    */ 03802000
*                                                                       03803000
*    IANS_TEXT1 = IMSG030_TEXT1 || 'CLEANUP' || IMSG030_TEXT2;          03804000
*                                      /* Completed text for error      03805000
*                                         message                    */ 03806000
*                                                                       03807000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          03808000
*                                      /* Generate error message        03809000
*                                         in modified source text    */ 03810000
*                                                                       03811000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        03812000
*                                         in macro source listing    */ 03813000
*                                                                       03814000
*  END;                                /* CLEANUP keyword invalid    */ 03815000
*                                                                       03816000
*                                                                       03817000
*/********************************************************************/ 03818000
*/* Verifies the NONAUTH keyword parameter has a valid value, if it  */ 03819000
*/* is specified.  Valid values are YES or NO.  If an invalid        */ 03820000
*/* value is specified, generates error message 030 and sets the     */ 03821000
*/* parameter list error flag on.                                    */ 03822000
*/********************************************************************/ 03823000
*                                                                       03824000
*IF ((NONAUTH ^= '') & (NONAUTH(1) ^= 'YES') &                          03825000
*    (NONAUTH(1) ^= 'NO')) | (NUMBER(NONAUTH) > 1) THEN                 03826000
*  DO;                                 /* NONAUTH keyword invalid    */ 03827000
*                                                                       03828000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      03829000
*                                         found flag on              */ 03830000
*                                                                       03831000
*    /****************************************************************/ 03832000
*    /* Generates the error message: AHA030 SJFACC ERROR: KEYWORD    */ 03833000
*    /* PARAMETER NONAUTH SPECIFIED INCORRECTLY.                     */ 03834000
*    /****************************************************************/ 03835000
*                                                                       03836000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        03837000
*                                         skip a line in modified       03838000
*                                         source text before error      03839000
*                                         message                    */ 03840000
*                                                                       03841000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    03842000
*                                         macro source listing error    03843000
*                                         message                    */ 03844000
*                                                                       03845000
*    IANS_TEXT1 = IMSG030_TEXT1 || 'NONAUTH' || IMSG030_TEXT2;          03846000
*                                      /* Completed text for error      03847000
*                                         message                    */ 03848000
*                                                                       03849000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          03850000
*                                      /* Generate error message        03851000
*                                         in modified source text    */ 03852000
*                                                                       03853000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        03854000
*                                         in macro source listing    */ 03855000
*                                                                       03856000
*  END;                                /* NONAUTH keyword invalid    */ 03857000
*                                                                       03858000
*                                                                       03859000
*/********************************************************************/ 03860000
*/* Verifies the SYSUSER keyword parameter has a valid value, if     */ 03861000
*/* it is specified.  Valid values are YES or NO.  If an invalid     */ 03862000
*/* value is specified, generates error message 030 and sets the     */ 03863000
*/* parameter list error flag on.                                    */ 03864000
*/********************************************************************/ 03865000
*                                                                       03866000
*IF ((SYSUSER ^= '') & (SYSUSER(1) ^= 'YES') &                          03867000
*    (SYSUSER(1) ^= 'NO')) | (NUMBER(SYSUSER) > 1) THEN                 03868000
*  DO;                                 /* SYSUSER keyword invalid    */ 03869000
*                                                                       03870000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      03871000
*                                         found flag on              */ 03872000
*                                                                       03873000
*    /****************************************************************/ 03874000
*    /* Generates the error message: AHA030 SJFACC ERROR: KEYWORD    */ 03875000
*    /* PARAMETER SYSUSER SPECIFIED INCORRECTLY.                     */ 03876000
*    /****************************************************************/ 03877000
*                                                                       03878000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        03879000
*                                         skip a line in modified       03880000
*                                         source text before error      03881000
*                                         message                    */ 03882000
*                                                                       03883000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    03884000
*                                         macro source listing error    03885000
*                                         message                    */ 03886000
*                                                                       03887000
*    IANS_TEXT1 = IMSG030_TEXT1 || 'SYSUSER' || IMSG030_TEXT2;          03888000
*                                      /* Completed text for error      03889000
*                                         message                    */ 03890000
*                                                                       03891000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          03892000
*                                      /* Generate error message        03893000
*                                         in modified source text    */ 03894000
*                                                                       03895000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        03896000
*                                         in macro source listing    */ 03897000
*                                                                       03898000
*  END;                                /* SYSUSER keyword invalid    */ 03899000
*                                                                       03900000
*                                                                       03901000
*/********************************************************************/ 03902000
*/* Verifies the CONTINU keyword parameter has a valid value, if     */ 03903000
*/* it is specified.  Valid values are YES or NO.  If an invalid     */ 03904000
*/* value is specified, generates error message 030 and sets the     */ 03905000
*/* parameter list error flag on.                                    */ 03906000
*/********************************************************************/ 03907000
*                                                                       03908000
*IF ((CONTINU ^= '') & (CONTINU(1) ^= 'YES') &                          03909000
*    (CONTINU(1) ^= 'NO')) | (NUMBER(CONTINU) > 1) THEN                 03910000
*  DO;                                 /* CONTINU keyword invalid    */ 03911000
*                                                                       03912000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      03913000
*                                         found flag on              */ 03914000
*                                                                       03915000
*    /****************************************************************/ 03916000
*    /* Generates the error message: AHA030 SJFACC ERROR: KEYWORD    */ 03917000
*    /* PARAMETER CONTINU SPECIFIED INCORRECTLY.                     */ 03918000
*    /****************************************************************/ 03919000
*                                                                       03920000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        03921000
*                                         skip a line in modified       03922000
*                                         source text before error      03923000
*                                         message                    */ 03924000
*                                                                       03925000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    03926000
*                                         macro source listing error    03927000
*                                         message                    */ 03928000
*                                                                       03929000
*    IANS_TEXT1 = IMSG030_TEXT1 || 'CONTINU' || IMSG030_TEXT2;          03930000
*                                      /* Completed text for error      03931000
*                                         message                    */ 03932000
*                                                                       03933000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          03934000
*                                      /* Generate error message        03935000
*                                         in modified source text    */ 03936000
*                                                                       03937000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        03938000
*                                         in macro source listing    */ 03939000
*                                                                       03940000
*  END;                                /* CONTINU keyword invalid    */ 03941000
*                                                                       03942000
*                                                                       03943000
*/********************************************************************/ 03944000
*/* Verifies the UPDJRNL keyword parameter has a valid value, if     */ 03945000
*/* it is specified.  Valid values are YES or NO.  If an invalid     */ 03946000
*/* value is specified, generates error message 030 and sets the     */ 03947000
*/* parameter list error flag on.                                    */ 03948000
*/********************************************************************/ 03949000
*                                                                       03950000
*IF ((UPDJRNL ^= '') & (UPDJRNL(1) ^= 'YES') &                          03951000
*    (UPDJRNL(1) ^= 'NO')) | (NUMBER(UPDJRNL) > 1) THEN                 03952000
*  DO;                                 /* UPDJRNL keyword invalid    */ 03953000
*                                                                       03954000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      03955000
*                                         found flag on              */ 03956000
*                                                                       03957000
*    /****************************************************************/ 03958000
*    /* Generates the error message: AHA030 SJFACC ERROR: KEYWORD    */ 03959000
*    /* PARAMETER UPDJRNL SPECIFIED INCORRECTLY.                     */ 03960000
*    /****************************************************************/ 03961000
*                                                                       03962000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        03963000
*                                         skip a line in modified       03964000
*                                         source text before error      03965000
*                                         message                    */ 03966000
*                                                                       03967000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    03968000
*                                         macro source listing error    03969000
*                                         message                    */ 03970000
*                                                                       03971000
*    IANS_TEXT1 = IMSG030_TEXT1 || 'UPDJRNL' || IMSG030_TEXT2;          03972000
*                                      /* Completed text for error      03973000
*                                         message                    */ 03974000
*                                                                       03975000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          03976000
*                                      /* Generate error message        03977000
*                                         in modified source text    */ 03978000
*                                                                       03979000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        03980000
*                                         in macro source listing    */ 03981000
*                                                                       03982000
*  END;                                /* UPDJRNL keyword invalid    */ 03983000
*                                                                       03984000
*                                                                       03985000
*/********************************************************************/ 03986000
*/* Verifies the FNDNEXT keyword parameter has a valid value, if     */ 03987000
*/* it is specified.  Valid values are YES or NO.  If an invalid     */ 03988000
*/* value is specified, generates error message 030 and sets the     */ 03989000
*/* parameter list error flag on.                                    */ 03990000
*/********************************************************************/ 03991000
*                                                                       03992000
*IF ((FNDNEXT ^= '') & (FNDNEXT(1) ^= 'YES') &                          03993000
*    (FNDNEXT(1) ^= 'NO')) | (NUMBER(FNDNEXT) > 1) THEN                 03994000
*  DO;                                 /* FNDNEXT keyword invalid    */ 03995000
*                                                                       03996000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      03997000
*                                         found flag on              */ 03998000
*                                                                       03999000
*    /****************************************************************/ 04000000
*    /* Generates the error message: AHA030 SJFACC ERROR: KEYWORD    */ 04001000
*    /* PARAMETER FNDNEXT SPECIFIED INCORRECTLY.                     */ 04002000
*    /****************************************************************/ 04003000
*                                                                       04004000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        04005000
*                                         skip a line in modified       04006000
*                                         source text before error      04007000
*                                         message                    */ 04008000
*                                                                       04009000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    04010000
*                                         macro source listing error    04011000
*                                         message                    */ 04012000
*                                                                       04013000
*    IANS_TEXT1 = IMSG030_TEXT1 || 'FNDNEXT' || IMSG030_TEXT2;          04014000
*                                      /* Completed text for error      04015000
*                                         message                    */ 04016000
*                                                                       04017000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          04018000
*                                      /* Generate error message        04019000
*                                         in modified source text    */ 04020000
*                                                                       04021000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        04022000
*                                         in macro source listing    */ 04023000
*                                                                       04024000
*  END;                                /* FNDNEXT keyword invalid    */ 04025000
*                                                                       04026000
*/*                                                                  */ 04027000
*/********************************************************************/ 04028000
*/* Verifies the FNDWTKN keyword parameter has a valid value, if     */ 04029000
*/* it is specified.  Valid values are YES or NO.  If an invalid     */ 04030000
*/* value is specified, generates error message 030 and sets the     */ 04031000
*/* parameter list error flag on.                                    */ 04032000
*/********************************************************************/ 04033000
*                                                                       04034000
*IF ((FNDWTKN ^= '') & (FNDWTKN(1) ^= 'YES') &                          04035000
*    (FNDWTKN(1) ^= 'NO')) | (NUMBER(FNDWTKN) > 1) THEN                 04036000
*  DO;                                 /* FNDWTKN keyword invalid    */ 04037000
*                                                                       04038000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      04039000
*                                         found flag on              */ 04040000
*                                                                       04041000
*    /****************************************************************/ 04042000
*    /* Generates the error message: AHA030 SJFACC ERROR: KEYWORD    */ 04043000
*    /* PARAMETER FNDWTKN SPECIFIED INCORRECTLY.                     */ 04044000
*    /****************************************************************/ 04045000
*                                                                       04046000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        04047000
*                                         skip a line in modified       04048000
*                                         source text before error      04049000
*                                         message                    */ 04050000
*                                                                       04051000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    04052000
*                                         macro source listing error    04053000
*                                         message                    */ 04054000
*                                                                       04055000
*    IANS_TEXT1 = IMSG030_TEXT1 || 'FNDWTKN' || IMSG030_TEXT2;          04056000
*                                      /* Completed text for error      04057000
*                                         message                    */ 04058000
*                                                                       04059000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          04060000
*                                      /* Generate error message        04061000
*                                         in modified source text    */ 04062000
*                                                                       04063000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        04064000
*                                         in macro source listing    */ 04065000
*                                                                       04066000
*  END;                                /* FNDWTKN keyword invalid    */ 04067000
*                                                                       04068000
*/*                                                                  */ 04069000
*/********************************************************************/ 04070000
*/* Verifies the FNDLEVL keyword parameter has a valid value, if     */ 04071000
*/* it is specified.  Valid values are JOB, STEP or CURRSTEP.        */ 04072000
*/* If an invalid value is specified, generates error message 030    */ 04073000
*/* and sets the parameter list error flag on.                       */ 04074000
*/********************************************************************/ 04075000
*                                                                       04076000
*IF ((FNDLEVL ^= '') & (FNDLEVL(1) ^= 'JOB') &                          04077000
*    (FNDLEVL(1) ^= 'STEP') & (FNDLEVL(1) ^= 'CURRSTEP'))               04078000
*   | (NUMBER(FNDLEVL) > 1) THEN                                        04079000
*  DO;                                 /* FNDLEVL keyword invalid    */ 04080000
*                                                                       04081000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      04082000
*                                         found flag on              */ 04083000
*                                                                       04084000
*    /****************************************************************/ 04085000
*    /* Generates the error message: AHA030 SJFACC ERROR: KEYWORD    */ 04086000
*    /* PARAMETER FNDLEVL SPECIFIED INCORRECTLY.                     */ 04087000
*    /****************************************************************/ 04088000
*                                                                       04089000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        04090000
*                                         skip a line in modified       04091000
*                                         source text before error      04092000
*                                         message                    */ 04093000
*                                                                       04094000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    04095000
*                                         macro source listing error    04096000
*                                         message                    */ 04097000
*                                                                       04098000
*    IANS_TEXT1 = IMSG030_TEXT1 || 'FNDLEVL' || IMSG030_TEXT2;          04099000
*                                      /* Completed text for error      04100000
*                                         message                    */ 04101000
*                                                                       04102000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          04103000
*                                      /* Generate error message        04104000
*                                         in modified source text    */ 04105000
*                                                                       04106000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        04107000
*                                         in macro source listing    */ 04108000
*                                                                       04109000
*  END;                                /* FNDLEVL keyword invalid    */ 04110000
*                                                                       04111000
*                                                                       04112000
*/********************************************************************/ 04113000
*/* Verifies the FNDJBTK keyword parameter has a valid value, if     */ 04113100
*/* it is specified.  Valid values are YES or NO.  If an invalid     */ 04113200
*/* value is specified, generates error message 030 and sets the     */ 04113300
*/* parameter list error flag on.                                @D3A*/ 04113400
*/********************************************************************/ 04113500
*                                                                       04113600
*IF ((FNDJBTK ^= '') & (FNDJBTK(1) ^= 'YES') &                          04113700
*    (FNDJBTK(1) ^= 'NO')) | (NUMBER(FNDJBTK) > 1) THEN                 04113800
*  DO;                                 /* FNDJBTK keyword invalid       04113900
*                                                                @D3A*/ 04114000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      04114100
*                                         found flag on          @D3A*/ 04114200
*                                                                       04114300
*    /****************************************************************/ 04114400
*    /* Generates the error message: AHA030 SJFACC ERROR: KEYWORD    */ 04114500
*    /* PARAMETER FNDJBTK SPECIFIED INCORRECTLY.                 @D3A*/ 04114600
*    /****************************************************************/ 04114700
*                                                                       04114800
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        04114900
*                                         skip a line in modified       04115000
*                                         source text before error      04115100
*                                         message                @D3A*/ 04115200
*                                                                       04115300
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    04115400
*                                         macro source listing error    04115500
*                                         message                @D3A*/ 04115600
*                                                                       04115700
*    IANS_TEXT1 = IMSG030_TEXT1 || 'FNDJBTK' || IMSG030_TEXT2;          04115800
*                                      /* Completed text for error      04115900
*                                         message                @D3A*/ 04116000
*                                                                       04116100
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          04116200
*                                      /* Generate error message        04116300
*                                         in modified source text       04116400
*                                                                @D3A*/ 04116500
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        04116600
*                                         in macro source listing       04116700
*                                                                @D3A*/ 04116800
*  END;                                /* FNDJBTK keyword invalid       04116900
*                                                                @D3A*/ 04117000
*/*                                                                  */ 04117100
*/********************************************************************/ 04117200
*/* Verifies the FNDCSTK keyword parameter has a valid value, if     */ 04117300
*/* it is specified.  Valid values are YES or NO.  If an invalid     */ 04117400
*/* value is specified, generates error message 030 and sets the     */ 04117500
*/* parameter list error flag on.                                @D3A*/ 04117600
*/********************************************************************/ 04117700
*                                                                       04117800
*IF ((FNDCSTK ^= '') & (FNDCSTK(1) ^= 'YES') &                          04117900
*    (FNDCSTK(1) ^= 'NO')) | (NUMBER(FNDCSTK) > 1) THEN                 04118000
*  DO;                                 /* FNDCSTK keyword invalid       04118100
*                                                                @D3A*/ 04118200
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      04118300
*                                         found flag on          @D3A*/ 04118400
*                                                                       04118500
*    /****************************************************************/ 04118600
*    /* Generates the error message: AHA030 SJFACC ERROR: KEYWORD    */ 04118700
*    /* PARAMETER FNDCSTK SPECIFIED INCORRECTLY.                 @D3A*/ 04118800
*    /****************************************************************/ 04118900
*                                                                       04119000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        04119100
*                                         skip a line in modified       04119200
*                                         source text before error      04119300
*                                         message                @D3A*/ 04119400
*                                                                       04119500
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    04119600
*                                         macro source listing error    04119700
*                                         message                @D3A*/ 04119800
*                                                                       04119900
*    IANS_TEXT1 = IMSG030_TEXT1 || 'FNDCSTK' || IMSG030_TEXT2;          04120000
*                                      /* Completed text for error      04120100
*                                         message                @D3A*/ 04120200
*                                                                       04120300
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          04120400
*                                      /* Generate error message        04120500
*                                         in modified source text       04120600
*                                                                @D3A*/ 04120700
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        04120800
*                                         in macro source listing       04120900
*                                                                @D3A*/ 04121000
*  END;                                /* FNDCSTK keyword invalid       04121100
*                                                                @D3A*/ 04121200
*/*                                                                  */ 04121300
*/********************************************************************/ 04121400
*/* Returns from the CHECK_CHOICE_PARMS routine. Returns to the      */ 04121500
*/* label just after the branch to this routine.                     */ 04121600
*/********************************************************************/ 04121700
*                                                                       04121800
*GOTO LHA0080B;                        /* Return from CHECK_CHOICE      04121900
*                                         PARMS routine              */ 04122000
*@EJECT;                                                                04122100
*/********************************************************************/ 04122200
*/*                                                                  */ 04122300
*/* PROCEDURE NAME: TERM_REQ                                         */ 04123000
*/*                                                                  */ 04124000
*/* DESCRIPTIVE NAME: Processes valid invocation of a TERMINATE      */ 04125000
*/*                   request.                                       */ 04126000
*/*                                                                  */ 04127000
*/* OPERATION: 1. Generates the code to fill in the SJF Access       */ 04128000
*/*               Function parameter list for a TERMINATE request.   */ 04129000
*/*                                                                  */ 04130000
*/*            2. Generates code to invoke SJFREQ with a terminate   */ 04131000
*/*               request.                                           */ 04132000
*/*                                                                  */ 04133000
*/* ENTRY: From EXECUTE_FORM routine                                 */ 04134000
*/*                                                                  */ 04135000
*/* INPUT: LOCLSTG keyword parameter                                 */ 04136000
*/*                                                                  */ 04137000
*/* OUTPUT: 1. Assignment statement generated in modified source     */ 04138000
*/*            text to set the SJF Access Function parameter list.   */ 04139000
*/*                                                                  */ 04140000
*/*         2. Invocation of the SJFREQ executable macro.            */ 04141000
*/*                                                                  */ 04142000
*/* EXIT: To EXECUTE_FORM routine                                    */ 04143000
*/*                                                                  */ 04144000
*/* ROUTINES BRANCHED TO: None                                       */ 04145000
*/*                                                                  */ 04146000
*/* MACROS - EXECUTABLE: SJFREQ                                      */ 04147000
*/*                                                                  */ 04148000
*/********************************************************************/ 04149000
*                                                                       04150000
*LHA0090A:;                            /* Entry point of routine     */ 04151000
*                                                                       04152000
*/********************************************************************/ 04153000
*/*  Generates assignment statement and accompanying comments in     */ 04154000
*/*  modified source text to fill in the SJF Access Function         */ 04155000
*/*  parameter list for a request for TERMINATE.                     */ 04156000
*/********************************************************************/ 04157000
*                                                                       04158000
*IANS_TEXT1 = ' Code generated by the SJFACC macro for a' ||            04159000
*             ' TERMINATE request.  Includes the assignment of' ||      04160000
*             ' fields in the SJF common section of the' ||             04161000
*             ' IEFSJACP parameter list,' ||                            04162000
*             ' followed by the invocation of the SJFREQ' ||            04163000
*             ' macro with a TERMINATE request. ';                      04164000
*                                      /* Build header comment for      04165000
*                                         generated source text      */ 04166000
*                                                                       04167000
*ANS NORESCAN COL(MACLMAR+4) SKIP(2) (COMMENT(IANS_TEXT1));             04168000
*                                      /* Generate header comment,      04169000
*                                         start in column 5 for PLS     04170000
*                                         formatter to make it a        04171000
*                                         block comment              */ 04172000
*                                                                       04173000
*                                                                       04174000
*IANS_TEXT1 = 'SJACID = SJACCID;';     /* Build assignment statement    04175000
*                                         to set function identifier    04176000
*                                         field                  @D1A*/ 04177000
*                                                                       04178000
*IANS_TEXT2 = ' /* Assign function identifier field */';                04179000
*                                      /* Build comment for assign-     04180000
*                                         ment statement         @D1A*/ 04181000
*                                                                       04182000
*ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1 || IANS_TEXT2);         04183000
*                                      /* Generate assignment           04184000
*                                         statement              @D1A*/ 04185000
*                                                                       04186000
*                                                                       04187000
*IANS_TEXT1 = 'SJACVERS = SJACCVER;';  /* Build assignment statement    04188000
*                                         to set version number         04189000
*                                         field                  @D1A*/ 04190000
*                                                                       04191000
*IANS_TEXT2 = ' /* Assign version number field */';                     04192000
*                                      /* Build comment for assign-     04193000
*                                         ment statement         @D1A*/ 04194000
*                                                                       04195000
*ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1 || IANS_TEXT2);         04196000
*                                      /* Generate assignment           04197000
*                                         statement              @D1A*/ 04198000
*                                                                       04199000
*                                                                       04200000
*IANS_TEXT1 = 'SJACLEN = LENGTH(SJACP);';  /* Build assignment          04201000
*                                         statement to set length       04202000
*                                         field                  @D1A*/ 04203000
*                                                                       04204000
*IANS_TEXT2 = ' /* Assign parameter list length field */';              04205000
*                                      /* Build comment for assign-     04206000
*                                         ment statement         @D1A*/ 04207000
*                                                                       04208000
*ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1 || IANS_TEXT2);         04209000
*                                      /* Generate assignment           04210000
*                                         statement              @D1A*/ 04211000
*                                                                       04212000
*                                                                       04213000
*IANS_TEXT1 = 'SJACFLAG = SJACFLAG && SJACFLAG;';                       04214000
*                                      /* Text for zeroing flag         04215000
*                                         field                      */ 04216000
*                                                                       04217000
*IANS_TEXT2 = ' /* Unused flag field zeroed */'; /* Text for line       04218000
*                                         comment for zeroing flag      04219000
*                                         field                      */ 04220000
*                                                                       04221000
*ANS NORESCAN COL(MACCOL+2) SKIP(2) (IANS_TEXT1 || IANS_TEXT2);         04222000
*                                      /* Generate text for zeroing     04223000
*                                         flag field                 */ 04224000
*                                                                       04225000
*                                                                       04226000
*IANS_TEXT1 = 'SJACREAS = SJACREAS && SJACREAS;';                       04227000
*                                      /* Text for zeroing reason       04228000
*                                         code field                 */ 04229000
*                                                                       04230000
*IANS_TEXT2 = ' /* Reason code field zeroed */'; /* Text for line       04231000
*                                         comment for zeroing reason    04232000
*                                         code field                 */ 04233000
*                                                                       04234000
*ANS NORESCAN COL(MACCOL+2) SKIP(2) (IANS_TEXT1 || IANS_TEXT2);         04235000
*                                      /* Generate text for zeroing     04236000
*                                         flag field                 */ 04237000
*                                                                       04238000
*                                                                       04239000
*IANS_TEXT1 = 'SJACSTOR = ' || LOCLSTG(1) || ';';                       04240000
*                                      /* Text for code assigning       04241000
*                                         LOCLSTG macro parameter       04242000
*                                         field                      */ 04243000
*                                                                       04244000
*IANS_TEXT2 = ' /* LOCLSTG macro parameter argument assigned ' ||       04245000
*             'to local storage pointer field */';                      04246000
*                                      /* Text for line comment for     04247000
*                                         assigning LOCLSTG macro       04248000
*                                         parameter field            */ 04249000
*                                                                       04250000
*ANS NORESCAN COL(MACCOL+2) SKIP(2) (IANS_TEXT1 || IANS_TEXT2);         04251000
*                                      /* Generate text for assigning   04252000
*                                         LOCLSTG macro parameter    */ 04253000
*                                                                       04254000
*                                                                       04255000
*/********************************************************************/ 04256000
*/*  Generates statements in modified source text to invoke SJFREQ.  */ 04257000
*/********************************************************************/ 04258000
*                                                                       04259000
*                                                                       04260000
*IANS_TEXT1 = '? SJFREQ REQUEST(TERMINATE) PARM(SJACP);';               04261000
*                                      /* String for SJFREQ             04262000
*                                         invocation                 */ 04263000
*                                                                       04264000
*ANS COL(MACCOL+2) SKIP(2) (IANS_TEXT1); /* Generate invocation of      04265000
*                                         SJFREQ                     */ 04266000
*                                                                       04267000
*                                                                       04268000
*/********************************************************************/ 04269000
*/*  Returns from the TERM_REQ routine. Branches to the label        */ 04270000
*/*  just after the branch to this routine.                          */ 04271000
*/********************************************************************/ 04272000
*                                                                       04273000
*GOTO LHA0090B;                        /* Return from TERM_REQ          04274000
*                                         routine                    */ 04275000
*@EJECT;                                                                04276000
*/********************************************************************/ 04277000
*/*                                                                  */ 04278000
*/* PROCEDURE NAME: SJF_ACC_REQ                                      */ 04279000
*/*                                                                  */ 04280000
*/* DESCRIPTIVE NAME: Processes valid invocation of an SJF Access    */ 04281000
*/*                   Function request.                              */ 04282000
*/*                                                                  */ 04283000
*/* OPERATION: 1. Generates first block comment for macro output     */ 04284000
*/*                                                                  */ 04285000
*/*            2. Branches to the routines to generate code to set   */ 04286000
*/*               values in the SJF Access Function parameter list   */ 04287000
*/*               for an SJF Access Function request.                */ 04288000
*/*                                                                  */ 04289000
*/*            3. Generates code to invoke SJFREQ with a request     */ 04290000
*/*               for the SJF Access Function.                       */ 04291000
*/*                                                                  */ 04292000
*/* ENTRY: From EXECUTE_FORM routine                                 */ 04293000
*/*                                                                  */ 04294000
*/* INPUT: None                                                      */ 04295000
*/*                                                                  */ 04296000
*/* OUTPUT: An invocation of SJFREQ in modified source text.         */ 04297000
*/*                                                                  */ 04298000
*/* EXIT: To EXECUTE_FORM routine                                    */ 04299000
*/*                                                                  */ 04300000
*/* ROUTINES BRANCHED TO: 1. ZERO_FIELDS                             */ 04301000
*/*                       2. ASSIGN_REQTBL                           */ 04302000
*/*                       3. ASSIGN_COMMON_PARMS                     */ 04303000
*/*                       4. ASSIGN_UPDATE_PARMS                     */ 04304000
*/*                       5. ASSIGN_FIND_PARMS                       */ 04305000
*/*                                                                  */ 04306000
*/********************************************************************/ 04307000
*                                                                       04308000
*LHA0100A:;                            /* Entry point of routine     */ 04309000
*                                                                       04310000
*/********************************************************************/ 04311000
*/* Generates first block comment describing macro output.           */ 04312000
*/********************************************************************/ 04313000
*                                                                       04314000
*IANS_TEXT1 = '/* Invocation of the SJF Access Function by the ' ||     04315000
*             'SJFACC macro.  The SJF Access Function parameter ' ||    04316000
*             'list, IEFSJACP, is assigned values as indicated ' ||     04317000
*             'in the SJFACC invocation.  SJFREQ is then invoked ' ||   04318000
*             'with a request for the SJF Access function. */';         04319000
*                                      /* Build string for first        04320000
*                                         block comment              */ 04321000
*                                                                       04322000
*ANS COL(MACLMAR+4) SKIP(2) NORESCAN (IANS_TEXT1); /* Generate          04323000
*                                         comment in fifth column for   04324000
*                                         formatter to make it a        04325000
*                                         block comment              */ 04326000
*                                                                       04327000
*ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Follow block comment        04328000
*                                         with a compiler generated     04329000
*                                         blank line so formatter       04330000
*                                         will separate it from         04331000
*                                         adjacent block comment     */ 04332000
*                                                                       04333000
*                                                                       04334000
*/********************************************************************/ 04335000
*/*                                                                  */ 04336000
*/* Calls the routines to generate code in modified source text to   */ 04337000
*/* fill in the SJF Access Function parameter list.                  */ 04338000
*/*                                                                  */ 04339000
*/********************************************************************/ 04340000
*                                                                       04341000
*                                                                       04342000
*/********************************************************************/ 04343000
*/* Branches to the routine which zeros IEFSJACP fields.             */ 04344000
*/********************************************************************/ 04345000
*                                                                       04346000
*GOTO LHA0110A;                        /* Branch to the ZERO_FIELDS     04347000
*                                         routine                    */ 04348000
*LHA0110B:;                            /* Label at which to return      04349000
*                                         from the ZERO_FIELDS          04350000
*                                         routine                    */ 04351000
*                                                                       04352000
*                                                                       04353000
*/********************************************************************/ 04354000
*/* Branches to the routine which sets the IEFSJACP fields which     */ 04355000
*/* are related to the request table.                                */ 04356000
*/********************************************************************/ 04357000
*                                                                       04358000
*GOTO LHA0120A;                        /* Branch to the ASSIGN_REQTBL   04359000
*                                         routine                    */ 04360000
*LHA0120B:;                            /* Label at which to return      04361000
*                                         from the ASSIGN_REQTBL        04362000
*                                         routine                    */ 04363000
*                                                                       04364000
*                                                                       04365000
*/********************************************************************/ 04366000
*/* Branches to the routine which sets the IEFSJACP fields which     */ 04367000
*/* are common to most of the request types.                         */ 04368000
*/********************************************************************/ 04369000
*                                                                       04370000
*GOTO LHA0130A;                        /* Branch to the ASSIGN_COMMON   04371000
*                                         PARMS routine              */ 04372000
*LHA0130B:;                            /* Label at which to return      04373000
*                                         from the ASSIGN_COMMON_       04374000
*                                         PARMS routine              */ 04375000
*                                                                       04376000
*                                                                       04377000
*/********************************************************************/ 04378000
*/* Branches to the routine which sets the IEFSJACP fields which     */ 04379000
*/* are used only by the UPDATE and FINDUPD requests.                */ 04380000
*/********************************************************************/ 04381000
*                                                                       04382000
*GOTO LHA0140A;                        /* Branch to the ASSIGN_UPD      04383000
*                                         PARMS routine              */ 04384000
*LHA0140B:;                            /* Label at which to return      04385000
*                                         from the ASSIGN_UPD_PARMS     04386000
*                                         routine                    */ 04387000
*                                                                       04388000
*                                                                       04389000
*/********************************************************************/ 04390000
*/* Branches to the routine which sets the IEFSJACP fields which     */ 04391000
*/* are used only by the FIND, FINDRET and FINDUPD requests.         */ 04392000
*/********************************************************************/ 04393000
*                                                                       04394000
*GOTO LHA0150A;                        /* Branch to the ASSIGN_FIND     04395000
*                                         PARMS routine              */ 04396000
*LHA0150B:;                            /* Label at which to return      04397000
*                                         from the ASSIGN_FIND_PARMS    04398000
*                                         routine                    */ 04399000
*                                                                       04400000
*                                                                       04401000
*/********************************************************************/ 04402000
*/* Generates code in modified source text to invoke SJFREQ with a   */ 04403000
*/* request for the SJF Access Function.                             */ 04404000
*/********************************************************************/ 04405000
*                                                                       04406000
*IANS_TEXT1 = ' Invocation of the SJFREQ macro from the' ||             04407000
*             ' SJFACC macro, with a request for the SJF' ||            04408000
*             ' Access Function. ';                                     04409000
*                                      /* Comment string to precede     04410000
*                                         invocation of SJFREQ macro */ 04411000
*                                                                       04412000
*ANS COL(MACLMAR+4) SKIP(2) NORESCAN (COMMENT(IANS_TEXT1));             04413000
*                                      /* Generate comment in fifth     04414000
*                                         column for formatter to       04415000
*                                         make it a block comment    */ 04416000
*                                                                       04417000
*ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Follow block comment        04418000
*                                           with a compiler generated   04419000
*                                           blank line to insure        04420000
*                                           formatter will seperate     04421000
*                                           it from SJFREQ generated    04422000
*                                           code                     */ 04423000
*                                                                       04424000
*IANS_TEXT1 = '? SJFREQ REQUEST(ACCESS) PARM(SJACP);';                  04425000
*                                        /* String  of SJFREQ           04426000
*                                           invocation               */ 04427000
*                                                                       04428000
*ANS COL(MACCOL+2) SKIP(2) (IANS_TEXT1); /* Generate invocation of      04429000
*                                         SJFREQ                     */ 04430000
*                                                                       04431000
*                                                                       04432000
*/********************************************************************/ 04433000
*/*  Returns from the SJF_ACC_REQ routine. Branches to the label     */ 04434000
*/*  just after the branch to this routine.                          */ 04435000
*/********************************************************************/ 04436000
*                                                                       04437000
*GOTO LHA0100B;                        /* Return from SJF_ACC_REQ       04438000
*                                         routine                    */ 04439000
*@EJECT;                                                                04440000
*/********************************************************************/ 04441000
*/*                                                                  */ 04442000
*/* PROCEDURE NAME: ZERO_FIELDS                                      */ 04443000
*/*                                                                  */ 04444000
*/* DESCRIPTIVE NAME: Generates code to zero the SJACFLAG,       @D1C*/ 04445000
*/*                   SJACREAS, and SJACFLDS fields.             @D1C*/ 04446000
*/*                                                                  */ 04447000
*/* FUNCTION:         Generates code to zero the SJACFLAG,       @D1C*/ 04448000
*/*                   SJACREAS, and SJACFLDS fields.  SJACSTOR   @D1C*/ 04449000
*/*                   and SJACTOKN are not zeroed here,          @D1C*/ 04450000
*/*                   so they can be used across multiple        @D1C*/ 04451000
*/*                   invocations (see the routine               @D1C*/ 04452000
*/*                   ASSIGN_COMMON_PARMS to determine how       @D1C*/ 04453000
*/*                   SJACSTOR and SJACTOKN are set).  SJACID,   @D1C*/ 04454000
*/*                   SJACVERS and SJACLEN are not zeroed as     @D1C*/ 04455000
*/*                   they are always assigned values via the    @D1C*/ 04456000
*/*                   macro.                                     @D1C*/ 04457000
*/*                                                                  */ 04458000
*/* ENTRY: From SJF_ACC_REQ                                          */ 04459000
*/*                                                                  */ 04460000
*/* INPUT: None                                                      */ 04461000
*/*                                                                  */ 04462000
*/* OUTPUT: Generates answer text assignment statements and          */ 04463000
*/*         accompanying comments to zero the SJACFLAG,          @D1C*/ 04464000
*/*         SJACREAS and SJACFLDS fields.                        @D1C*/ 04465000
*/*                                                                  */ 04466000
*/* EXIT: To SJF_ACC_REQ                                             */ 04467000
*/*                                                                  */ 04468000
*/* ROUTINES BRANCHED TO: none                                       */ 04469000
*/*                                                                  */ 04470000
*/********************************************************************/ 04471000
*                                                                       04472000
*LHA0110A:;                            /* Entry point of routine     */ 04473000
*                                                                       04474000
*                                                                       04475000
*                                      /*                       3@D1D*/ 04476000
*/********************************************************************/ 04477000
*/* Generates a block comment to precede the code which zeros    @D1C*/ 04478000
*/* fields                                                       @D1C*/ 04479000
*/********************************************************************/ 04480000
*                                                                       04481000
*IANS_TEXT1 = '/* Zero the IEFSJACP fields SJACFLAG, SJACREAS and ' ||  04482000
*             'SJACFLDS. */';              /* Build comment string      04483000
*                                                                @D1C*/ 04484000
*                                                                       04485000
*ANS COL(MACLMAR+4) SKIP(2) (IANS_TEXT1);  /* Generate comment          04486000
*                                          string. Start string in      04487000
*                                          fifth column of source       04488000
*                                          for the formatter to make    04489000
*                                          it a block comment        */ 04490000
*                                                                       04491000
*                                                                       04492000
*/********************************************************************/ 04493000
*/* Generates code in modified source text to zero the IEFSJACP      */ 04494000
*/* flag field SJACFLAG                                              */ 04495000
*/********************************************************************/ 04496000
*                                                                       04497000
*IANS_TEXT1 = 'SJACFLAG = SJACFLAG && SJACFLAG;';                       04498000
*                                      /* Build assignment statement    04499000
*                                         to zero field              */ 04500000
*                                                                       04501000
*ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1 ||                      04502000
*  ' /* Flag field zeroed */');        /* Generate assignment           04503000
*                                         statement              @D1C*/ 04504000
*                                                                       04505000
*                                                                       04506000
*                                      /*                      14@D1D*/ 04507000
*/********************************************************************/ 04508000
*/* Generates code in modified source text to zero the IEFSJACP  @D1M*/ 04509000
*/* return field SJACREAS                                        @D1M*/ 04510000
*/********************************************************************/ 04511000
*                                                                       04512000
*IANS_TEXT1 = 'SJACREAS = SJACREAS && SJACREAS;';                       04513000
*                                      /* Build assignment statement    04514000
*                                         to zero field          @D1M*/ 04515000
*                                                                       04516000
*ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1 ||                      04517000
*  ' /* Reason code field zeroed */'); /* Generate assignment           04518000
*                                         statement              @D1C*/ 04519000
*                                                                       04520000
*                                                                       04521000
*/********************************************************************/ 04522000
*/* Generates code in modified source text to zero the IEFSJACP  @D1A*/ 04523000
*/* field SJACFLDS                                               @D1A*/ 04524000
*/********************************************************************/ 04525000
*                                                                       04526000
*IANS_TEXT1 = 'SJACFLDS = SJACFLDS && SJACFLDS;';                       04527000
*                                      /* Build assignment statement    04528000
*                                         to zero field          @D1A*/ 04529000
*                                                                       04530000
*ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1 ||                      04531000
*  ' /* Field zeroed */');             /* Generate assignment           04532000
*                                         statement              @D1A*/ 04533000
*                                                                       04534000
*                                                                       04535000
*/********************************************************************/ 04536000
*/* Returns from the ZERO_FIELDS routine. Branches to the            */ 04537000
*/* label just following the branch to this routine.                 */ 04538000
*/********************************************************************/ 04539000
*                                                                       04540000
*GOTO LHA0110B;                        /* Return from ZERO_FIELDS    */ 04541000
*@EJECT;                                                                04542000
*/********************************************************************/ 04543000
*/*                                                                  */ 04544000
*/* PROCEDURE NAME: ASSIGN_REQTBL                                    */ 04545000
*/*                                                                  */ 04546000
*/* DESCRIPTIVE NAME: Generates code to assign values to the         */ 04547000
*/*                   IEFSJACP fields related to the request         */ 04548000
*/*                   table.                                         */ 04549000
*/*                                                                  */ 04550000
*/* FUNCTION: Generates code in modified source text to fill in      */ 04551000
*/*           the SJF Access Function parameter list fields          */ 04552000
*/*           related to the request table.                          */ 04553000
*/*                                                                  */ 04554000
*/*           The fields are set from the following macro            */ 04555000
*/*           parameters: positional parameters, REQTBL, NUMREQ.     */ 04556000
*/*                                                                  */ 04557000
*/* ENTRY: From SJF_ACC_REQ                                          */ 04558000
*/*                                                                  */ 04559000
*/* INPUT: Macro parameters: 1. positional parameters                */ 04560000
*/*                          2. NUMREQ keyword parameter             */ 04561000
*/*                          3. REQTBL keyword parameter             */ 04562000
*/*                                                                  */ 04563000
*/* OUTPUT: Generates answer text assignment statements and          */ 04564000
*/*         accompanying comments to assign values from the macro    */ 04565000
*/*         parameters to the request table and IEFSJACP fields.     */ 04566000
*/*                                                                  */ 04567000
*/* EXIT: To SJF_ACC_REQ                                             */ 04568000
*/*                                                                  */ 04569000
*/* ROUTINES CALLED: None                                            */ 04570000
*/*                                                                  */ 04571000
*/********************************************************************/ 04572000
*                                                                       04573000
*LHA0120A:;                            /* Entry point of routine     */ 04574000
*                                                                       04575000
*/********************************************************************/ 04576000
*/* Generates the block comment to precede the code assigning        */ 04577000
*/* fields to the request table.                                     */ 04578000
*/********************************************************************/ 04579000
*                                                                       04580000
*IANS_TEXT1 = '/* Assignment of the request table fields, ' ||          04581000
*             ' if specified in macro invocation. */'; /* Build         04582000
*                                         comment string         @D1C*/ 04583000
*                                                                       04584000
*ANS COL(MACLMAR+4) SKIP(2) (IANS_TEXT1); /* Generate comment string.   04585000
*                                         Put in fifth column for       04586000
*                                         formatter to make it a block  04587000
*                                         comment                    */ 04588000
*                                                                       04589000
*ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Follow block comment        04590000
*                                         with a compiler generated     04591000
*                                         blank line so formatter       04592000
*                                         will separate it from         04593000
*                                         adjacent block comment @D1A*/ 04594000
*                                                                       04595000
*                                                                       04596000
*/********************************************************************/ 04597000
*/* Maps the parameter REQTBL to the IEFSJACP field SJACRPTR.        */ 04598000
*/********************************************************************/ 04599000
*                                                                       04600000
*IF REQTBL ^= '' THEN                  /* Test if REQTBL is specified   04601000
*                                                                @D1C*/ 04602000
*                                                                       04603000
*                                      /*                       5@D1D*/ 04604000
*  DO;                                 /* REQTBL is specified        */ 04605000
*                                                                       04606000
*    IF REQTBL(1:2) = '((' THEN        /* Test if parm is in double     04607000
*                                         parens, if it is, a pointer   04608000
*                                         is specified               */ 04609000
*      DO;                             /* A pointer is specified     */ 04610000
*                                                                       04611000
*        IANS_TEXT1 = 'SJACRPTR = ' || REQTBL(1,1) || ';';              04612000
*                                      /* Build assignment statement    04613000
*                                         to set SJACRPTR to pointer    04614000
*                                         specified in REQTBL        */ 04615000
*                                                                       04616000
*        IANS_TEXT2 = ' /* REQTBL macro parameter argument ' ||         04617000
*                     'assigned to request table pointer ' ||           04618000
*                     'field */';      /* Build comment string       */ 04619000
*                                                                       04620000
*        ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1 || IANS_TEXT2); 04621000
*                                      /* Generate assignment           04622000
*                                         statement                  */ 04623000
*                                                                       04624000
*      END;                            /* A pointer is specified     */ 04625000
*                                                                       04626000
*    ELSE                              /* Else, a field name is         04627000
*                                         specified                  */ 04628000
*      DO;                             /* A field name is specified  */ 04629000
*                                                                       04630000
*        IANS_TEXT1 = 'SJACRPTR = ADDR(' || REQTBL(1) || ');';          04631000
*                                      /* Build assignment statement    04632000
*                                         to set SJACRPTR to address    04633000
*                                         of field specified in         04634000
*                                         REQTBL                     */ 04635000
*                                                                       04636000
*        IANS_TEXT2 = ' /* REQTBL macro parameter argument''s ' ||      04637000
*                     'address assigned to request table pointer ' ||   04638000
*                     'field */';      /* Build comment string       */ 04639000
*                                                                       04640000
*        ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1 || IANS_TEXT2); 04641000
*                                      /* Generate assignment           04642000
*                                         statement                  */ 04643000
*                                                                       04644000
*      END;                            /* A field name is specified  */ 04645000
*                                                                       04646000
*  END;                                /* REQTBL is specified        */ 04647000
*                                                                       04648000
*                                                                       04649000
*/********************************************************************/ 04650000
*/* If positional parameters are specified, then generates           */ 04651000
*/* assignment statements to fill in the request table from values   */ 04652000
*/* in the positional parameters.                                    */ 04653000
*/********************************************************************/ 04654000
*                                                                       04655000
*IF MACLIST ^= '' THEN                 /* Test if positional parms      04656000
*                                         specified                  */ 04657000
*  DO;                                 /* Positional parms specified */ 04658000
*                                                                       04659000
*    DO J = 1 TO NUMBER(MACLIST);      /* Do for each positional parm,  04660000
*                                         assign subparms to request    04661000
*                                         table fields               */ 04662000
*                                                                       04663000
*      IANS_TEXT1 = 'SJACENTY(' || CHAR(J) || ') = ' ||                 04664000
*                   'SJACENTY(' || CHAR(J) || ') && ' ||                04665000
*                   'SJACENTY(' || CHAR(J) || ');';                     04666000
*                                      /* Build assignment              04667000
*                                         statement to zero the         04668000
*                                         request table entry before    04669000
*                                         assigning values to it     */ 04670000
*                                                                       04671000
*      IANS_TEXT2 = ' /* Zero request table entry no. ' || CHAR(J) ||   04672000
*                   ' before assigning values to it */';                04673000
*                                      /* Build comment for assign-     04674000
*                                         ment statement             */ 04675000
*                                                                       04676000
*      ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1 || IANS_TEXT2);   04677000
*                                      /* Generate assignment           04678000
*                                         statement                  */ 04679000
*                                                                       04680000
*                                                                       04681000
*      IANS_TEXT1 = 'SJACKEY(' || CHAR(J) || ') = ' ||                  04682000
*                 MACLIST(J,1) || ';'; /* Build assignment statement    04683000
*                                         to set SJACKEY element J      04684000
*                                         to argument specified in      04685000
*                                         positional parm no J,         04686000
*                                         subparameter no. 1         */ 04687000
*                                                                       04688000
*      IANS_TEXT2 = ' /* Macro positional parameter no. ' ||            04689000
*                   CHAR(J) || ', sub-parameter no. 1 assigned to ' ||  04690000
*                   'request table ''key'' field */';                   04691000
*                                      /* Build comment for assign-     04692000
*                                         ment statement             */ 04693000
*                                                                       04694000
*      ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1 || IANS_TEXT2);   04695000
*                                      /* Generate assignment           04696000
*                                         statement                  */ 04697000
*                                                                       04698000
*                                                                       04699000
*      IANS_TEXT1 = 'SJACPARM(' || CHAR(J) || ') = ' ||                 04700000
*                 MACLIST(J,2) || ';'; /* Build assignment statement    04701000
*                                         to set SJACPARM element J     04702000
*                                         to argument specified in      04703000
*                                         positional parm no J,         04704000
*                                         subparameter no. 2        */  04705000
*                                                                       04706000
*      IANS_TEXT2 = ' /* Macro positional parameter no. ' ||            04707000
*                   CHAR(J) || ', sub-parameter no. 2 assigned to ' ||  04708000
*                   'request table ''parameter number'' field */';      04709000
*                                      /* Build comment for assign-     04710000
*                                         ment statement             */ 04711000
*                                                                       04712000
*      ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1 || IANS_TEXT2);   04713000
*                                      /* Generate assignment           04714000
*                                         statement                  */ 04715000
*                                                                       04716000
*                                                                       04717000
*      IANS_TEXT1 = 'SJACADDR(' || CHAR(J) || ') = ' ||                 04718000
*                 MACLIST(J,3) || ';'; /* Build assignment statement    04719000
*                                         to set SJACADDR element J     04720000
*                                         to argument specified in      04721000
*                                         positional parm no J,         04722000
*                                         subparameter no. 3        */  04723000
*                                                                       04724000
*      IANS_TEXT2 = ' /* Macro positional parameter no. ' ||            04725000
*                   CHAR(J) || ', sub-parameter no. 3 assigned to ' ||  04726000
*                   'request table ''field address'' field */';         04727000
*                                      /* Build comment for assign-     04728000
*                                         ment statement             */ 04729000
*                                                                       04730000
*                                                                       04731000
*      ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1 || IANS_TEXT2);   04732000
*                                      /* Generate assignment           04733000
*                                         statement                  */ 04734000
*                                                                       04735000
*                                                                       04736000
*      IANS_TEXT1 = 'SJACLNTH(' || CHAR(J) || ') = ' ||                 04737000
*                 MACLIST(J,4) || ';'; /* Build assignment statement    04738000
*                                         to set SJACADDR element J     04739000
*                                         to argument specified in      04740000
*                                         positional parm no J,         04741000
*                                         subparameter no. 4        */  04742000
*                                                                       04743000
*      IANS_TEXT2 = ' /* Macro positional parameter no. ' ||            04744000
*                   CHAR(J) || ', sub-parameter no. 4 assigned to ' ||  04745000
*                   'request table ''length of field'' field */';       04746000
*                                      /* Build comment for assign-     04747000
*                                         ment statement             */ 04748000
*                                                                       04749000
*      ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1 || IANS_TEXT2);   04750000
*                                      /* Generate assignment           04751000
*                                         statement                  */ 04752000
*                                                                       04753000
*    END;                              /* Do for each positional parm,  04754000
*                                         assign subparms to request    04755000
*                                         table fields               */ 04756000
*                                                                       04757000
*  END;                                /* Positional parms specified */ 04758000
*                                                                       04759000
*                                                                       04760000
*/********************************************************************/ 04761000
*/* Maps the parameter NUMREQ to the IEFSJACP field SJACREQ#.        */ 04762000
*/* If positional parms are specified, sets SJACREQ# to the number   */ 04763000
*/* of positional parms.  Else, if NUMREQ is specified, sets     @D1C*/ 04764000
*/* SJACREQ# equal to it.                                        @D1C*/ 04765000
*/********************************************************************/ 04766000
*                                                                       04767000
*IF MACLIST ^= '' THEN                 /* Test if positional parms   */ 04768000
*  DO;                                 /* Positional parms specified */ 04769000
*                                                                       04770000
*    IANS_TEXT1 = 'SJACREQ# = ' || CHAR(NUMBER(MACLIST)) || ';';        04771000
*                                      /* Build assignment statement    04772000
*                                         to set field to number of     04773000
*                                         positional parms           */ 04774000
*                                                                       04775000
*    IANS_TEXT2 = ' /* Value of number of positional macro ' ||         04776000
*                 'parameters is assigned to number of ' ||             04777000
*                 'requests field */'; /* Build comment for assign-     04778000
*                                         ment statement             */ 04779000
*                                                                       04780000
*    ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1 || IANS_TEXT2);     04781000
*                                      /* Generate assignment           04782000
*                                         statement                  */ 04783000
*                                                                       04784000
*  END;                                /* Positional parms specified */ 04785000
*                                                                       04786000
*ELSE IF NUMREQ ^= '' THEN             /* Else, test if NUMREQ is       04787000
*                                         specified              @D1C*/ 04788000
*                                      /*                       6@D1D*/ 04789000
*  DO;                                 /* NUMREQ is specified        */ 04790000
*                                                                       04791000
*    IANS_TEXT1 = 'SJACREQ# = ' || NUMREQ(1) || ';';                    04792000
*                                      /* Build assignment statement    04793000
*                                         to set field to argument      04794000
*                                         specified in NUMREQ        */ 04795000
*                                                                       04796000
*    IANS_TEXT2 = ' /* NUMREQ macro parameter argument ' ||             04797000
*               'assigned to number of requests field */';              04798000
*                                      /* Build comment for assign-     04799000
*                                         ment statement             */ 04800000
*                                                                       04801000
*    ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1 || IANS_TEXT2);     04802000
*                                      /* Generate assignment           04803000
*                                         statement                  */ 04804000
*                                                                       04805000
*  END;                                /* NUMREQ is specified        */ 04806000
*                                                                       04807000
*                                                                       04808000
*/********************************************************************/ 04809000
*/* Returns from the ASSIGN_REQTBL routine. Branches to the label    */ 04810000
*/* just after the branch to this routine                            */ 04811000
*/********************************************************************/ 04812000
*                                                                       04813000
*GOTO LHA0120B;                        /* Return from ASSIGN_REQTBL  */ 04814000
*@EJECT;                                                                04815000
*/********************************************************************/ 04816000
*/*                                                                  */ 04817000
*/* PROCEDURE NAME: ASSIGN_COMMON_PARMS                              */ 04818000
*/*                                                                  */ 04819000
*/* DESCRIPTIVE NAME: Generates assignment statements, through       */ 04820000
*/*                   answer text, to fill in the IEFSJACP fields    */ 04821000
*/*                   common to many of the request types.           */ 04822000
*/*                                                                  */ 04823000
*/* FUNCTION: Generates code in modified source text to              */ 04824000
*/*           fill in the SJF Access Function parameter list         */ 04825000
*/*           fields which are common to many of the request         */ 04826000
*/*           types.                                                 */ 04827000
*/*                                                                  */ 04828000
*/*           The IEFSJACP fields are set from the values            */ 04829000
*/*           specified in the following macro parameters:           */ 04830000
*/*           REQUEST, RECOVRY, CLEANUP, NONAUTH, SYSUSER,           */ 04831000
*/*           LOCLSTG, TOKEN, VERB, LABEL, CONTINU.              @D1C*/ 04832000
*/*           Parameter list constant fields are also set.       @D1C*/ 04833000
*/*                                                                  */ 04834000
*/* OPERATION: For the IEFSJACP fields being assigned values in      */ 04835000
*/*            this routine, does the following:                     */ 04836000
*/*                                                                  */ 04837000
*/*            A. Assigns the parameter list constants.              */ 04838000
*/*                                                                  */ 04839000
*/*            B. For IEFSJACP fields being mapped from asis type    */ 04840000
*/*               macro parameters, does the following:              */ 04841000
*/*                                                                  */ 04842000
*/*               1. If the corresponding macro parameter is         */ 04843000
*/*                  specified, assigns its value to the IEFSJACP    */ 04844000
*/*                  field.                                          */ 04845000
*/*                                                                  */ 04846000
*/*               2. Else, zeros the IEFSJACP field if it is         */ 04847000
*/*                  not a substructure of SJACFLDS              @D1C*/ 04848000
*/*                                                                  */ 04849000
*/*            C. For IEFSJACP fields being mapped from              */ 04850000
*/*               choice-data type macro parameters, turn on         */ 04851000
*/*               the corresponding flag field, if so indiciated.    */ 04852000
*/*                                                                  */ 04853000
*/* ENTRY: From SJF_ACC_REQ                                          */ 04854000
*/*                                                                  */ 04855000
*/* INPUT: The following keyword parameters: REQUEST, RECOVRY,       */ 04856000
*/*        CLEANUP, NONAUTH, SYSUSER, LOCLSTG, TOKEN, VERB,          */ 04857000
*/*        LABEL, CONTINU.                                       @D1C*/ 04858000
*/*                                                                  */ 04859000
*/* OUTPUT: Generates answer text assignment statements and          */ 04860000
*/*         accompanying comments to assign values to IEFSJACP       */ 04861000
*/*         fields.                                                  */ 04862000
*/*                                                                  */ 04863000
*/* EXIT: To SJF_ACC_REQ                                             */ 04864000
*/*                                                                  */ 04865000
*/* ROUTINES BRANCHED TO: None                                       */ 04866000
*/*                                                                  */ 04867000
*/********************************************************************/ 04868000
*                                                                       04869000
*LHA0130A:;                            /* Entry point of routine     */ 04870000
*                                                                       04871000
*/********************************************************************/ 04872000
*/* Generates the block comment to precede the assignment of the     */ 04873000
*/* common parameters.                                               */ 04874000
*/********************************************************************/ 04875000
*                                                                       04876000
*IANS_TEXT1 = '/* Assign fields common to most of the request' ||       04877000
*             ' types. */';                                             04878000
*                                                                       04879000
*ANS COL(MACLMAR+4) SKIP(2) (IANS_TEXT1);  /* Generate comment. Start   04880000
*                                         in the fifth column so the    04881000
*                                         formatter will make it a      04882000
*                                         block comment              */ 04883000
*                                                                       04884000
*/********************************************************************/ 04885000
*/* Sets the constant fields in the IEFSJACP parameter list.         */ 04886000
*/********************************************************************/ 04887000
*                                                                       04888000
*  IANS_TEXT1 = 'SJACID = SJACCID;';   /* Build assignment statement    04889000
*                                         to set function identifier    04890000
*                                         field                      */ 04891000
*                                                                       04892000
*  IANS_TEXT2 = ' /* Assign function identifier field */';              04893000
*                                      /* Build comment for assign-     04894000
*                                         ment statement             */ 04895000
*                                                                       04896000
*  ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1 || IANS_TEXT2);       04897000
*                                      /* Generate assignment           04898000
*                                         statement                  */ 04899000
*                                                                       04900000
*                                                                       04901000
*  IANS_TEXT1 = 'SJACVERS = SJACCVER;'; /* Build assignment statement   04902000
*                                          to set version number        04903000
*                                          field                     */ 04904000
*                                                                       04905000
*  IANS_TEXT2 = ' /* Assign version number field */';                   04906000
*                                      /* Build comment for assign-     04907000
*                                         ment statement             */ 04908000
*                                                                       04909000
*  ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1 || IANS_TEXT2);       04910000
*                                      /* Generate assignment           04911000
*                                         statement                  */ 04912000
*                                                                       04913000
*                                                                       04914000
*  IANS_TEXT1 = 'SJACLEN = LENGTH(SJACP);';  /* Build assignment        04915000
*                                         statement to set length       04916000
*                                         field                      */ 04917000
*                                                                       04918000
*  IANS_TEXT2 = ' /* Assign parameter list length field */';            04919000
*                                      /* Build comment for assign-     04920000
*                                         ment statement             */ 04921000
*                                                                       04922000
*  ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1 || IANS_TEXT2);       04923000
*                                      /* Generate assignment           04924000
*                                         statement                  */ 04925000
*                                                                       04926000
*                                                                       04927000
*/********************************************************************/ 04928000
*/* Sets the field SJACRQST as indicated in the REQUEST macro        */ 04929000
*/* parameter.                                                       */ 04930000
*/********************************************************************/ 04931000
*                                                                       04932000
*IF (REQUEST(1) = 'FIND') | (REQUEST(1) = 'FINDUPD') |                  04933000
*   (REQUEST(1) = 'FINDRET') THEN      /* If a FIND request type        04934000
*                                         is specified, set the FIND    04935000
*                                         bit on                     */ 04936000
*  DO;                                 /* FIND request type          */ 04937000
*                                                                       04938000
*    IANS_TEXT1 = 'SJACFIND = ''1''B;';  /* Build assignment state-     04939000
*                                         ment to turn FIND request     04940000
*                                         type flag bit on           */ 04941000
*                                                                       04942000
*    IANS_TEXT2 = ' /* FIND request-type flag turned on as ' ||         04943000
*                 'indicated by REQUEST macro parameter */';            04944000
*                                      /* Build comment string       */ 04945000
*                                                                       04946000
*                                                                       04947000
*    ANS COL(MACCOL+2) SKIP(2) (IANS_TEXT1 || IANS_TEXT2);              04948000
*                                      /* Generate assignment           04949000
*                                         statement                 */  04950000
*                                                                       04951000
*  END;                                /* FIND request type          */ 04952000
*                                                                       04953000
*                                                                       04954000
*IF (REQUEST(1) = 'UPDATE') | (REQUEST(1) = 'FINDUPD') THEN             04955000
*                                      /* If an UPDATE request type     04956000
*                                         is specified, set the         04957000
*                                         UPDATE bit on              */ 04958000
*  DO;                                 /* UPDATE request type        */ 04959000
*                                                                       04960000
*    IANS_TEXT1 = 'SJACUPD = ''1''B;'; /* Build assignment statement    04961000
*                                         to turn UPDATE request type   04962000
*                                         flag bit on                */ 04963000
*                                                                       04964000
*    IANS_TEXT2 = ' /* UPDATE request-type flag turned on as ' ||       04965000
*                 'indicated by REQUEST macro parameter */';            04966000
*                                      /* Build comment string       */ 04967000
*                                                                       04968000
*    ANS COL(MACCOL+2) SKIP(2) (IANS_TEXT1 || IANS_TEXT2);              04969000
*                                      /* Generate assignment           04970000
*                                         statement                 */  04971000
*                                                                       04972000
*  END;                                /* UPDATE request type       */  04973000
*                                                                       04974000
*ELSE IF (REQUEST(1) = 'RETRIEVE') | (REQUEST(1) = 'FINDRET') THEN      04975000
*                                      /* If a RETRIEVE request type    04976000
*                                         is specified, set the         04977000
*                                         RETRIEVE bit on            */ 04978000
*  DO;                                 /* RETRIEVE request type      */ 04979000
*                                                                       04980000
*    IANS_TEXT1 = 'SJACRET = ''1''B;'; /* Build assignment statement    04981000
*                                         to turn RETRIEVE request      04982000
*                                         type flag bit on           */ 04983000
*                                                                       04984000
*    IANS_TEXT2 = ' /* RETRIEVE request-type flag turned on as ' ||     04985000
*                 'indicated by REQUEST macro parameter */';            04986000
*                                      /* Build comment string       */ 04987000
*                                                                       04988000
*    ANS COL(MACCOL+2) SKIP(2) (IANS_TEXT1 || IANS_TEXT2);              04989000
*                                      /* Generate assignment           04990000
*                                         statement                 */  04991000
*                                                                       04992000
*  END;                                /* RETRIEVE request type      */ 04993000
*                                                                       04994000
*                                                                       04995000
*/********************************************************************/ 04996000
*/* Sets the field SJACNREC as indicated in the RECOVRY macro        */ 04997000
*/* parameter.                                                       */ 04998000
*/********************************************************************/ 04999000
*                                                                       05000000
*IF RECOVRY(1) = 'NO' THEN             /* If no recovery is specified   05001000
*                                         set the no recovery bit on */ 05002000
*  DO;                                 /* No recovery specified      */ 05003000
*                                                                       05004000
*    IANS_TEXT1 = 'SJACNREC = ''1''B;'; /* Build assignment statement   05005000
*                                         to turn the no recovery       05006000
*                                         flag bit on                */ 05007000
*                                                                       05008000
*    IANS_TEXT2 = ' /* ''No recovery'' flag turned on as ' ||           05009000
*                 'indicated by RECOVRY macro parameter */';            05010000
*                                      /* Build comment string       */ 05011000
*                                                                       05012000
*    ANS COL(MACCOL+2) SKIP(2) (IANS_TEXT1 || IANS_TEXT2);              05013000
*                                      /* Generate assignment           05014000
*                                         statement                 */  05015000
*                                                                       05016000
*  END;                                /* No recovery specified     */  05017000
*                                                                       05018000
*                                                                       05019000
*/********************************************************************/ 05020000
*/* Sets the field SJACNOCU as indicated in the CLEANUP macro        */ 05021000
*/* parameter.                                                       */ 05022000
*/********************************************************************/ 05023000
*                                                                       05024000
*IF CLEANUP(1) = 'NO' THEN             /* If no cleanup is specified    05025000
*                                         set the no cleanup bit on  */ 05026000
*  DO;                                 /* No cleanup specified       */ 05027000
*                                                                       05028000
*    IANS_TEXT1 = 'SJACNOCU = ''1''B;'; /* Build assignment statement   05029000
*                                         to turn the no cleanup        05030000
*                                         flag bit on                */ 05031000
*                                                                       05032000
*    IANS_TEXT2 = ' /* ''No cleanup'' flag turned on as ' ||            05033000
*                 'indicated by CLEANUP macro parameter */';            05034000
*                                      /* Build comment string       */ 05035000
*                                                                       05036000
*    ANS COL(MACCOL+2) SKIP(2) (IANS_TEXT1 || IANS_TEXT2);              05037000
*                                      /* Generate assignment           05038000
*                                         statement                 */  05039000
*                                                                       05040000
*  END;                                /* No cleanup specified      */  05041000
*                                                                       05042000
*                                                                       05043000
*/********************************************************************/ 05044000
*/* Sets the field SJACUNAU as indicated in the NONAUTH macro        */ 05045000
*/* parameter.                                                       */ 05046000
*/********************************************************************/ 05047000
*                                                                       05048000
*IF NONAUTH(1) = 'YES' THEN            /* If NONAUTH is specified       05049000
*                                         as YES, turn the unauth-      05050000
*                                         orized user bit on         */ 05051000
*  DO;                                 /* NONAUTH specified as yes   */ 05052000
*                                                                       05053000
*    IANS_TEXT1 = 'SJACUNAU = ''1''B;'; /* Build assignment statement   05054000
*                                         to turn the unauthorized      05055000
*                                         user flag bit on           */ 05056000
*                                                                       05057000
*    IANS_TEXT2 = ' /* ''Unauthorized user'' flag turned on as ' ||     05058000
*                 'indicated by NONAUTH macro parameter */';            05059000
*                                      /* Build comment string       */ 05060000
*                                                                       05061000
*    ANS COL(MACCOL+2) SKIP(2) (IANS_TEXT1 || IANS_TEXT2);              05062000
*                                      /* Generate assignment           05063000
*                                         statement                 */  05064000
*                                                                       05065000
*  END;                                /* NONAUTH specified as yes   */ 05066000
*                                                                       05067000
*                                                                       05068000
*/********************************************************************/ 05069000
*/* Sets the field SJACSYST as indicated in the SYSUSER macro        */ 05070000
*/* parameter.                                                       */ 05071000
*/********************************************************************/ 05072000
*                                                                       05073000
*IF SYSUSER(1) = 'YES' THEN            /* If SYSUSER is specified       05074000
*                                         as YES, turn the system       05075000
*                                         user bit on                */ 05076000
*  DO;                                 /* SYSUSER specified as yes   */ 05077000
*                                                                       05078000
*    IANS_TEXT1 = 'SJACSYST = ''1''B;'; /* Build assignment statement   05079000
*                                         to turn the system user       05080000
*                                         flag bit on                */ 05081000
*                                                                       05082000
*    IANS_TEXT2 = ' /* ''System input'' flag turned on as ' ||          05083000
*                 'indicated by SYSUSER macro parameter */';            05084000
*                                      /* Build comment string       */ 05085000
*                                                                       05086000
*    ANS COL(MACCOL+2) SKIP(2) (IANS_TEXT1 || IANS_TEXT2);              05087000
*                                      /* Generate assignment           05088000
*                                         statement                 */  05089000
*                                                                       05090000
*  END;                                /* SYSUSER specified as yes   */ 05091000
*                                                                       05092000
*                                                                       05093000
*/********************************************************************/ 05094000
*/* Sets the field SJACSTOR as specified in the LOCLSTG macro        */ 05095000
*/* parameter.                                                       */ 05096000
*/********************************************************************/ 05097000
*                                                                       05098000
*IF LOCLSTG ^= '' THEN                 /* If LOCLSTG is specified,      05099000
*                                         assign it to SJACSTOR      */ 05100000
*  DO;                                 /* LOCLSTG parm specified     */ 05101000
*                                                                       05102000
*    IANS_TEXT1 = 'SJACSTOR = ' || LOCLSTG(1) || ';';                   05103000
*                                      /* Build assignment statement    05104000
*                                         to set field to argument      05105000
*                                         specified in LOCLSTG       */ 05106000
*                                                                       05107000
*                                                                       05108000
*    IANS_TEXT2 = ' /* LOCLSTG macro parameter argument ' ||            05109000
*               'assigned to local storage pointer field */';           05110000
*                                      /* Build comment for assign-     05111000
*                                         ment statement             */ 05112000
*                                                                       05113000
*    ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1 || IANS_TEXT2);     05114000
*                                      /* Generate assignment           05115000
*                                         statement                  */ 05116000
*                                                                       05117000
*  END;                                /* LOCLSTG parm specified     */ 05118000
*                                                                       05119000
*ELSE                                  /* Else, LOCLSTG not spec-       05120000
*                                         ified, zero field          */ 05121000
*  DO;                                 /* LOCLSTG not specified      */ 05122000
*                                                                       05123000
*    IANS_TEXT1 = 'SJACSTOR = SJACSTOR && SJACSTOR;';                   05124000
*                                      /* Build assignment statement    05125000
*                                         to zero field              */ 05126000
*                                                                       05127000
*    IANS_TEXT2 = ' /* LOCLSTG macro parameter not specified, ' ||      05128000
*                 'local storage pointer field zeroed */';              05129000
*                                      /* Build comment for assign-     05130000
*                                         ment statement             */ 05131000
*                                                                       05132000
*    ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1 || IANS_TEXT2);     05133000
*                                      /* Generate assignment           05134000
*                                         statement                  */ 05135000
*                                                                       05136000
*  END;                                /* LOCLSTG not specified      */ 05137000
*                                                                       05138000
*                                                                       05139000
*/********************************************************************/ 05140000
*/* Sets the field SJACTOKN as indicated in the TOKEN macro          */ 05141000
*/* parameter.                                                       */ 05142000
*/********************************************************************/ 05143000
*                                                                       05144000
*IF TOKEN ^= '' THEN                   /* If TOKEN is specified,        05145000
*                                         assign it to SJACTOKN      */ 05146000
*  DO;                                 /* TOKEN parm specified       */ 05147000
*                                                                       05148000
*    IANS_TEXT1 = 'SJACTOKN = ' || TOKEN(1) || ';';                     05149000
*                                      /* Build assignment statement    05150000
*                                         to set field to argument      05151000
*                                         specified in TOKEN         */ 05152000
*                                                                       05153000
*    IANS_TEXT2 = ' /* TOKEN macro parameter argument ' ||              05154000
*               'assigned to SJF token field */';                       05155000
*                                      /* Build comment for assign-     05156000
*                                         ment statement             */ 05157000
*                                                                       05158000
*    ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1 || IANS_TEXT2);     05159000
*                                      /* Generate assignment           05160000
*                                         statement                  */ 05161000
*                                                                       05162000
*  END;                                /* TOKEN parm specified       */ 05163000
*                                                                       05164000
*ELSE                                  /* Else, TOKEN not spec-         05165000
*                                         ified, zero field          */ 05166000
*  DO;                                 /* TOKEN not specified        */ 05167000
*                                                                       05168000
*    IANS_TEXT1 = 'SJACTOKN = SJACTOKN && SJACTOKN;';                   05169000
*                                      /* Build assignment statement    05170000
*                                         to zero field              */ 05171000
*                                                                       05172000
*    IANS_TEXT2 = ' /* TOKEN macro parameter not specified, ' ||        05173000
*                 'token field zeroed */';  /* Build comment for        05174000
*                                         assignment statement       */ 05175000
*                                                                       05176000
*    ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1 || IANS_TEXT2);     05177000
*                                      /* Generate assignment           05178000
*                                         statement                  */ 05179000
*                                                                       05180000
*  END;                                /* TOKEN not specified        */ 05181000
*                                                                       05182000
*                                                                       05183000
*/********************************************************************/ 05184000
*/* Sets the field SJACVERB as specified in the VERB macro           */ 05185000
*/* parameter.                                                       */ 05186000
*/********************************************************************/ 05187000
*                                                                       05188000
*IF VERB ^= '' THEN                    /* If VERB is specified,         05189000
*                                         assign it to SJACVERB      */ 05190000
*  DO;                                 /* VERB parm specified        */ 05191000
*                                                                       05192000
*    IANS_TEXT1 = 'SJACVERB = ' || VERB(1) || ';';                      05193000
*                                      /* Build assignment statement    05194000
*                                         to set field to argument      05195000
*                                         specified in VERB          */ 05196000
*                                                                       05197000
*                                                                       05198000
*    IANS_TEXT2 = ' /* VERB macro parameter argument ' ||               05199000
*               'assigned to verb field */';                            05200000
*                                      /* Build comment for assign-     05201000
*                                         ment statement             */ 05202000
*                                                                       05203000
*    ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1 || IANS_TEXT2);     05204000
*                                      /* Generate assignment           05205000
*                                         statement                  */ 05206000
*                                                                       05207000
*  END;                                /* VERB parm specified        */ 05208000
*                                      /*                       6@D1D*/ 05209000
*                                                                       05210000
*/********************************************************************/ 05211000
*/* Sets the field SJACLABL as specified in the LABEL macro      @D1A*/ 05212000
*/* parameter.                                                   @D1A*/ 05213000
*/********************************************************************/ 05214000
*                                                                       05215000
*IF LABEL ^= '' THEN                   /* If LABEL is specified,        05216000
*                                         assign it to SJACLABL  @D1A*/ 05217000
*  DO;                                 /* LABEL parm specified   @D1A*/ 05218000
*                                                                       05219000
*    IANS_TEXT1 = 'SJACLABL = ' || LABEL(1) || ';';                     05220000
*                                      /* Build assignment statement    05221000
*                                         to set field to argument      05222000
*                                         specified in LABEL     @D1A*/ 05223000
*                                                                       05224000
*                                                                       05225000
*    IANS_TEXT2 = ' /* LABEL macro parameter argument ' ||              05226000
*               'assigned to statement label field */';                 05227000
*                                      /* Build comment for assign-     05228000
*                                         ment statement         @D1A*/ 05229000
*                                                                       05230000
*    ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1 || IANS_TEXT2);     05231000
*                                      /* Generate assignment           05232000
*                                         statement              @D1A*/ 05233000
*                                                                       05234000
*  END;                                /* LABEL parm specified   @D1A*/ 05235000
*                                                                       05236000
*/********************************************************************/ 05237000
*/* Sets the field SJACCNT as indicated in the CONTINU macro         */ 05238000
*/* parameter.                                                       */ 05239000
*/********************************************************************/ 05240000
*                                                                       05241000
*IF CONTINU(1) = 'YES' THEN            /* If CONTINU is specified       05242000
*                                         as YES, turn the bit on to    05243000
*                                         allow continued processing    05244000
*                                         after errors are detected  */ 05245000
*  DO;                                 /* CONTINU specified as yes   */ 05246000
*                                                                       05247000
*    IANS_TEXT1 = 'SJACCNT = ''1''B;'; /* Build assignment statement    05248000
*                                         to turn the bit on to         05249000
*                                         allow continued processing    05250000
*                                         after errors are detected  */ 05251000
*                                                                       05252000
*    IANS_TEXT2 = ' /* ''Continue processing after errors '||           05253000
*                 'detected'' flag turned on as ' ||                    05254000
*                 'indicated by CONTINU macro parameter */';            05255000
*                                      /* Build comment string       */ 05256000
*                                                                       05257000
*    ANS COL(MACCOL+2) SKIP(2) (IANS_TEXT1 || IANS_TEXT2);              05258000
*                                      /* Generate assignment           05259000
*                                         statement                 */  05260000
*                                                                       05261000
*  END;                                /* CONTINU specified as yes   */ 05262000
*                                                                       05263000
*                                                                       05264000
*/********************************************************************/ 05265000
*/* Returns from the ASSIGN_COMMON_PARMS routine. Branches to        */ 05266000
*/* the label just following the branch to this routine.             */ 05267000
*/********************************************************************/ 05268000
*                                                                       05269000
*GOTO LHA0130B;                        /* Return from ASSIGN_COMMON     05270000
*                                         PARMS routine              */ 05271000
*@EJECT;                                                                05272000
*/********************************************************************/ 05273000
*/*                                                                  */ 05274000
*/* PROCEDURE NAME: ASSIGN_UPDATE_PARMS                              */ 05275000
*/*                                                                  */ 05276000
*/* DESCRIPTIVE NAME: Generates assignment statements, through       */ 05277000
*/*                   answer text, to fill in the IEFSJACP fields    */ 05278000
*/*                   used only by UPDATE and FINDUPD request        */ 05279000
*/*                   types.                                         */ 05280000
*/*                                                                  */ 05281000
*/* FUNCTION:         Routine to generate code in modified source    */ 05282000
*/*                   text to fill in the SJF Access Function        */ 05283000
*/*                   parameter list field SJACJRNL from the macro   */ 05284000
*/*                   parameter UPDJRNL. Also fills in field     @D2C*/ 05285000
*/*                   SJACALT from the parameter UPDALTS.        @D2A*/ 05286000
*/*                                                                  */ 05287000
*/* ENTRY: From SJF_ACC_REQ                                          */ 05288000
*/*                                                                  */ 05289000
*/* INPUT: UPDJRNL keyword parameter                                 */ 05290000
*/*                                                                  */ 05291000
*/* OUTPUT: Generates answer text assignment statements and          */ 05292000
*/*         accompanying comments to assign values from the macro    */ 05293000
*/*         parameters UPDJRNL and UPDALTS to IEFSJACP fields    @D2C*/ 05294000
*/*                                                                  */ 05295000
*/* EXIT: To SJF_ACC_REQ                                             */ 05296000
*/*                                                                  */ 05297000
*/* ROUTINES BRANCHED TO: None                                       */ 05298000
*/*                                                                  */ 05299000
*/********************************************************************/ 05300000
*                                                                       05301000
*LHA0140A:;                            /* Entry point of routine     */ 05302000
*                                                                       05303000
*/********************************************************************/ 05304000
*/* Generates a block comment to precede the assignment          @D1A*/ 05305000
*/* statements.                                                  @D1A*/ 05306000
*/********************************************************************/ 05307000
*                                                                       05308000
*    IANS_TEXT1 = '/* Assign fields used only ' ||                      05309000
*                 'by UPDATE AND FINDUPD requests, ' ||                 05310000
*                 ' if specified in macro invocation. */'; /* Build     05311000
*                                          comment string        @D1A*/ 05312000
*                                                                       05313000
*    ANS COL(MACLMAR+4) SKIP(2) (IANS_TEXT1);  /* Generate comment.     05314000
*                                          Start in fifth column so     05315000
*                                          the formatter will make      05316000
*                                          it a block comment    @D1A*/ 05317000
*                                                                       05318000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Follow block comment    05319000
*                                         with a compiler generated     05320000
*                                         blank line so formatter       05321000
*                                         will separate it from         05322000
*                                         adjacent block comment @D1A*/ 05323000
*                                                                       05324000
*                                                                       05325000
*/********************************************************************/ 05326000
*/* Sets the field SJACJRNL as indicated in the UPDJRNL macro        */ 05327000
*/* parameter.                                                       */ 05328000
*/********************************************************************/ 05329000
*                                                                       05330000
*IF UPDJRNL(1) = 'YES' THEN            /* If UPDJRNL is specified       05331000
*                                         as YES, turn on the flag to   05332000
*                                         allow journaling           */ 05333000
*  DO;                                 /* UPDJRNL specified as yes   */ 05334000
*                                                                       05335000
*                                      /*                       2@D1D*/ 05336000
*                                                                       05337000
*    IANS_TEXT1 = 'SJACJRNL = ''1''B;'; /* Build assignment statement   05338000
*                                         to turn on the flag to        05339000
*                                         allow journaling           */ 05340000
*                                                                       05341000
*    IANS_TEXT2 = ' /* ''Journaling requested'' flag turned on as '||   05342000
*                 'indicated by UPDJRNL macro parameter */';            05343000
*                                      /* Build comment string       */ 05344000
*                                                                       05345000
*    ANS COL(MACCOL+2) SKIP(2) (IANS_TEXT1 || IANS_TEXT2);              05346000
*                                      /* Generate assignment           05347000
*                                         statement                 */  05348000
*                                                                       05349000
*  END;                                /* UPDJRNL specified as yes   */ 05350000
*                                                                       05351000
*                                                                       05352000
*/********************************************************************/ 05353000
*/* Sets the field SJACALT as specified in the UPDALTS macro         */ 05354000
*/* parameter.                                                   @D2A*/ 05355000
*/********************************************************************/ 05356000
*                                                                       05357000
*IF UPDALTS ^= '' THEN                 /* If UPDALTS is specified,      05358000
*                                         assign it to SJACALT   @D2A*/ 05359000
*  DO;                                 /* UPDALTS parm specified @D2A*/ 05360000
*                                                                       05361000
*    IANS_TEXT1 = 'SJACALT = ' || UPDALTS(1) || ';';                    05362000
*                                      /* Build assignment statement    05363000
*                                         to set field to argument      05364000
*                                         specified in UPDALTS   @D2A*/ 05365000
*                                                                       05366000
*                                                                       05367000
*    IANS_TEXT2 = ' /* UPDALTS macro parameter argument ' ||            05368000
*               'assigned to alternate SWA manager pointer field */';   05369000
*                                      /* Build comment for assign-     05370000
*                                         ment statement         @D2A*/ 05371000
*                                                                       05372000
*    ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1 || IANS_TEXT2);     05373000
*                                      /* Generate assignment           05374000
*                                         statement              @D2A*/ 05375000
*                                                                       05376000
*  END;                                /* UPDALTS parm specified @D2A*/ 05377000
*                                                                       05378000
*                                                                       05379000
*/********************************************************************/ 05380000
*/* Returns from the ASSIGN_UPDATE_PARMS routine. Goes to the        */ 05381000
*/* label just following the branch to this routine.                 */ 05382000
*/********************************************************************/ 05383000
*                                                                       05384000
*GOTO LHA0140B;                        /* Return from ASSIGN_UPDATE     05385000
*                                         PARMS routine              */ 05386000
*@EJECT;                                                                05387000
*/********************************************************************/ 05388000
*/*                                                                  */ 05389000
*/* PROCEDURE NAME: ASSIGN_FIND_PARMS                                */ 05390000
*/*                                                                  */ 05391000
*/* DESCRIPTIVE NAME: Generates assignment statements, through       */ 05392000
*/*                   answer text, to fill in IEFSJACP fields        */ 05393000
*/*                   used only by FIND, FINDUPD and FINDRET         */ 05394000
*/*                   requests.                                      */ 05395000
*/*                                                                  */ 05396000
*/* FUNCTION:         Routine to generate code in modified source    */ 05397000
*/*                   text to fill in the SJF Access Function        */ 05398000
*/*                   parameter list fields which are used only by   */ 05399000
*/*                   FIND, FINDUPD and FINDRET request types.       */ 05400000
*/*                                                                  */ 05401000
*/*                   The IEFSJACP fields are set from the values    */ 05402000
*/*                   specified in the following macro parameters:   */ 05403000
*/*                   FNDNEXT, FNDWTKN, FNDLEVL, FNDSTPN,        @D1C*/ 05404000
*/*                   FNDPRLB.                                       */ 05405000
*/*                                                                  */ 05406000
*/* OPERATION: For the IEFSJACP fields being assigned values in      */ 05407000
*/*            this routine, does the following:                     */ 05408000
*/*                                                                  */ 05409000
*/*            A. For IEFSJACP fields being mapped from asis type    */ 05410000
*/*               macro parameters, does the following:              */ 05411000
*/*                                                                  */ 05412000
*/*               1. If the corresponding macro parameter is         */ 05413000
*/*                  specified, assigns its value to the IEFSJACP    */ 05414000
*/*                  field.                                          */ 05415000
*/*                                                                  */ 05416000
*/*            B. For IEFSJACP fields being mapped from              */ 05417000
*/*               choice-data type macro parameters, turns on        */ 05418000
*/*               the corresponding flag field, if so indiciated.    */ 05419000
*/*                                                                  */ 05420000
*/* ENTRY: From SJF_ACC_REQ                                          */ 05421000
*/*                                                                  */ 05422000
*/* INPUT: The following keyword parameters: FNDNEXT, FNDWTKN,       */ 05423000
*/*        FNDLEVL, FNDSTPN, FNDPRLB, FNDJBTK, FNDCSTK           @D3C*/ 05424000
*/*                                                                  */ 05425000
*/* OUTPUT: Generates answer text assignment statements and          */ 05426000
*/*         accompanying comments to assign values from the macro    */ 05427000
*/*         parameters to IEFSJACP fields.                           */ 05428000
*/*                                                                  */ 05429000
*/* EXIT: To SJF_ACC_REQ                                             */ 05430000
*/*                                                                  */ 05431000
*/* ROUTINES CALLED: None                                            */ 05432000
*/*                                                                  */ 05433000
*/********************************************************************/ 05434000
*                                                                       05435000
*LHA0150A:;                            /* Entry point of routine     */ 05436000
*                                                                       05437000
*/********************************************************************/ 05438000
*/* Generates a block comment to precede the assignment              */ 05439000
*/* statements.                                                      */ 05440000
*/********************************************************************/ 05441000
*                                                                       05442000
*    IANS_TEXT1 = '/* Assign fields used only ' ||                      05443000
*                 'by FIND, FINDUPD, and FINDRET requests, ' ||         05444000
*                 ' if specified in macro invocation. */'; /* Build     05445000
*                                          comment string        @D1C*/ 05446000
*                                                                       05447000
*    ANS COL(MACLMAR+4) SKIP(2) (IANS_TEXT1);  /* Generate comment.     05448000
*                                          Start in fifth column so     05449000
*                                          the formatter will make      05450000
*                                          it a block comment        */ 05451000
*                                                                       05452000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Follow block comment    05453000
*                                         with a compiler generated     05454000
*                                         blank line so formatter       05455000
*                                         will separate it from         05456000
*                                         adjacent block comment @D1A*/ 05457000
*                                                                       05458000
*                                                                       05459000
*/********************************************************************/ 05460000
*/* Sets the field SJACNEXT as indicated in the FNDNEXT macro        */ 05461000
*/* parameter.                                                       */ 05462000
*/********************************************************************/ 05463000
*                                                                       05464000
*IF FNDNEXT(1) = 'YES' THEN            /* If FNDNEXT is specified       05465000
*                                         as YES, turn the flag on to   05466000
*                                         allow 'find next'             05467000
*                                         processing                 */ 05468000
*  DO;                                 /* FNDNEXT specified as yes   */ 05469000
*                                                                       05470000
*    IANS_TEXT1 = 'SJACNEXT = ''1''B;'; /* Build assignment statement   05471000
*                                         to turn the find next flag    05472000
*                                         bit on                     */ 05473000
*                                                                       05474000
*    IANS_TEXT2 = ' /* ''Find next'' flag turned on as '||              05475000
*                 'indicated by FNDNEXT macro parameter */';            05476000
*                                      /* Build comment string       */ 05477000
*                                                                       05478000
*    ANS COL(MACCOL+2) SKIP(2) (IANS_TEXT1 || IANS_TEXT2);              05479000
*                                      /* Generate assignment           05480000
*                                         statement                 */  05481000
*                                                                       05482000
*  END;                                /* FNDNEXT specified as yes   */ 05483000
*                                                                       05484000
*                                                                       05485000
*/********************************************************************/ 05486000
*/* Sets the field SJACNJST as indicated in the FNDWTKN macro        */ 05487000
*/* parameter.                                                       */ 05488000
*/********************************************************************/ 05489000
*                                                                       05490000
*IF FNDWTKN(1) = 'YES' THEN            /* If FNDWTKN is specified       05491000
*                                         as YES, turn the flag on to   05492000
*                                         indicate a job token is       05493000
*                                         supplied                   */ 05494000
*  DO;                                 /* FNDWTKN specified as yes   */ 05495000
*                                                                       05496000
*    IANS_TEXT1 = 'SJACNJST = ''1''B;'; /* Build assignment statement   05497000
*                                         to turn the flag on to        05498000
*                                         indicate a job token is       05499000
*                                         supplied                   */ 05500000
*                                                                       05501000
*    IANS_TEXT2 = ' /* ''Job token supplied'' flag turned on as '||     05502000
*                 'indicated by FNDWTKN macro parameter */';            05503000
*                                      /* Build comment string       */ 05504000
*                                                                       05505000
*    ANS COL(MACCOL+2) SKIP(2) (IANS_TEXT1 || IANS_TEXT2);              05506000
*                                      /* Generate assignment           05507000
*                                         statement                 */  05508000
*                                                                       05509000
*  END;                                /* FNDWTKN specified as yes   */ 05510000
*                                                                       05511000
*                                                                       05512000
*/********************************************************************/ 05513000
*/* Sets the field SJACFUN1 as indicated in the FNDLEVL macro        */ 05514000
*/* parameter.                                                       */ 05515000
*/********************************************************************/ 05516000
*                                                                       05517000
*IF FNDLEVL(1) = 'JOB' THEN            /* If FNDLEVL is specified       05518000
*                                         as JOB, turn the flag on to   05519000
*                                         indicate a JOB level find  */ 05520000
*  DO;                                 /* FNDLEVL specified as JOB   */ 05521000
*                                                                       05522000
*    IANS_TEXT1 = 'SJACJOB = ''1''B;'; /* Build assignment statement    05523000
*                                         to turn the flag on to        05524000
*                                         indicate a JOB level find  */ 05525000
*                                                                       05526000
*    IANS_TEXT2 = ' /* ''Job level find'' flag turned on as '||         05527000
*                 'indicated by FNDLEVL macro parameter */';            05528000
*                                      /* Build comment string       */ 05529000
*                                                                       05530000
*    ANS COL(MACCOL+2) SKIP(2) (IANS_TEXT1 || IANS_TEXT2);              05531000
*                                      /* Generate assignment           05532000
*                                         statement                 */  05533000
*                                                                       05534000
*  END;                                /* FNDLEVL specified as JOB   */ 05535000
*                                                                       05536000
*ELSE IF FNDLEVL(1) = 'STEP' THEN      /* If FNDLEVL is specified       05537000
*                                         as STEP, turn the flag on to  05538000
*                                         indicate a STEP level find */ 05539000
*                                                                       05540000
*  DO;                                 /* FNDLEVL specified as STEP  */ 05541000
*                                                                       05542000
*    IANS_TEXT1 = 'SJACST = ''1''B;';  /* Build assignment statement    05543000
*                                         to turn the flag on to        05544000
*                                         indicate a STEP level find */ 05545000
*                                                                       05546000
*    IANS_TEXT2 = ' /* ''STEP level find'' flag turned on as '||        05547000
*                 'indicated by FNDLEVL macro parameter */';            05548000
*                                      /* Build comment string       */ 05549000
*                                                                       05550000
*    ANS COL(MACCOL+2) SKIP(2) (IANS_TEXT1 || IANS_TEXT2);              05551000
*                                      /* Generate assignment           05552000
*                                         statement                 */  05553000
*                                                                       05554000
*  END;                                /* FNDLEVL specified as STEP  */ 05555000
*                                                                       05556000
*ELSE IF FNDLEVL(1) = 'CURRSTEP' THEN  /* If FNDLEVL is specified       05557000
*                                         as CURRSTEP, turn the flag    05558000
*                                         on to indicate a CURRSTEP     05559000
*                                         level find                 */ 05560000
*                                                                       05561000
*  DO;                                 /* FNDLEVL specified as          05562000
*                                         CURRSTEP                   */ 05563000
*                                                                       05564000
*    IANS_TEXT1 = 'SJACCST = ''1''B;'; /* Build assignment statement    05565000
*                                         to turn the flag on to        05566000
*                                         indicate a CURRSTEP level     05567000
*                                         find                       */ 05568000
*                                                                       05569000
*    IANS_TEXT2 = ' /* ''CURRSTEP level find'' flag turned on as '||    05570000
*                 'indicated by FNDLEVL macro parameter */';            05571000
*                                      /* Build comment string       */ 05572000
*                                                                       05573000
*    ANS COL(MACCOL+2) SKIP(2) (IANS_TEXT1 || IANS_TEXT2);              05574000
*                                      /* Generate assignment           05575000
*                                         statement                  */ 05576000
*                                                                       05577000
*  END;                                /* FNDLEVL specified as          05578000
*                                         CURRSTEP                   */ 05579000
*                                                                       05580000
*                                                                       05581000
*                                      /*                      12@D1D*/ 05582000
*/********************************************************************/ 05583000
*/* Sets the field SJACSTPN as specified in the FNDSTPN macro        */ 05584000
*/* parameter.                                                       */ 05585000
*/********************************************************************/ 05586000
*                                                                       05587000
*IF FNDSTPN ^= '' THEN                 /* If FNDSTPN is specified,      05588000
*                                         assign it to SJACSTPN      */ 05589000
*  DO;                                 /* FNDSTPN parm specified     */ 05590000
*                                                                       05591000
*    IANS_TEXT1 = 'SJACSTPN = ' || FNDSTPN(1) || ';';                   05592000
*                                      /* Build assignment statement    05593000
*                                         to set field to argument      05594000
*                                         specified in FNDSTPN       */ 05595000
*                                                                       05596000
*                                                                       05597000
*    IANS_TEXT2 = ' /* FNDSTPN macro parameter argument ' ||            05598000
*               'assigned to step name field */';                       05599000
*                                      /* Build comment for assign-     05600000
*                                         ment statement             */ 05601000
*                                                                       05602000
*    ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1 || IANS_TEXT2);     05603000
*                                      /* Generate assignment           05604000
*                                         statement                  */ 05605000
*                                                                       05606000
*  END;                                /* FNDSTPN parm specified     */ 05607000
*                                      /*                       6@D1D*/ 05608000
*                                                                       05609000
*/********************************************************************/ 05610000
*/* Sets the field SJACPRLB as specified in the FNDPRLB macro        */ 05611000
*/* parameter.                                                       */ 05612000
*/********************************************************************/ 05613000
*                                                                       05614000
*IF FNDPRLB ^= '' THEN                 /* If FNDPRLB is specified,      05615000
*                                         assign it to SJACPRLB      */ 05616000
*  DO;                                 /* FNDPRLB parm specified     */ 05617000
*                                                                       05618000
*    IANS_TEXT1 = 'SJACPRLB = ' || FNDPRLB(1) || ';';                   05619000
*                                      /* Build assignment statement    05620000
*                                         to set field to argument      05621000
*                                         specified in FNDPRLB       */ 05622000
*                                                                       05623000
*                                                                       05624000
*    IANS_TEXT2 = ' /* FNDPRLB macro parameter argument ' ||            05625000
*               'assigned to proc statement label field */';            05626000
*                                      /* Build comment for assign-     05627000
*                                         ment statement             */ 05628000
*                                                                       05629000
*    ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1 || IANS_TEXT2);     05630000
*                                      /* Generate assignment           05631000
*                                         statement                  */ 05632000
*                                                                       05633000
*  END;                                /* FNDPRLB parm specified     */ 05634000
*                                      /*                       6@D1D*/ 05635000
*                                                                       05636000
*/********************************************************************/ 05637000
*/* Sets the field SJACJBTK as indicated in the FNDJBTK macro        */ 05637100
*/* parameter.                                                   @D3A*/ 05637200
*/********************************************************************/ 05637300
*                                                                       05637400
*IF FNDJBTK(1) = 'YES' THEN            /* If FNDJBTK is specified       05637500
*                                         as YES, turn the flag on to   05637600
*                                         indicate a job token is       05637700
*                                         requested              @D3A*/ 05637800
*  DO;                                 /* FNDJBTK specified as yes      05637900
*                                                                @D3A*/ 05638000
*    IANS_TEXT1 = 'SJACJBTK = ''1''B;'; /* Build assignment statement   05638100
*                                         to turn the flag on to        05638200
*                                         indicate a job token is       05638300
*                                         requested              @D3A*/ 05638400
*                                                                       05638500
*    IANS_TEXT2 = ' /* ''Job token requested'' flag turned on as '||    05638600
*                 'indicated by FNDJBTK macro parameter */';            05638700
*                                      /* Build comment string   @D3A*/ 05638800
*                                                                       05638900
*    ANS COL(MACCOL+2) SKIP(2) (IANS_TEXT1 || IANS_TEXT2);              05639000
*                                      /* Generate assignment           05639100
*                                         statement              @D3A*/ 05639200
*                                                                       05639300
*  END;                                /* FNDJBTK specified as yes      05639400
*                                                                @D3A*/ 05639500
*                                                                       05639600
*/********************************************************************/ 05639700
*/* Sets the field SJACCSTK as indicated in the FNDCSTK macro        */ 05639800
*/* parameter.                                                   @D3A*/ 05639900
*/********************************************************************/ 05640000
*                                                                       05640100
*IF FNDCSTK(1) = 'YES' THEN            /* If FNDCSTK is specified       05640200
*                                         as YES, turn the flag on to   05640300
*                                         indicate a current step token 05640400
*                                         is requested           @D3A*/ 05640500
*  DO;                                 /* FNDCSTK specified as yes      05640600
*                                                                @D3A*/ 05640700
*    IANS_TEXT1 = 'SJACCSTK = ''1''B;'; /* Build assignment statement   05640800
*                                         to turn the flag on to        05640900
*                                         indicate a current step token 05641000
*                                         is requested           @D3A*/ 05641100
*                                                                       05641200
*    IANS_TEXT2 = ' /* ''Current Step token requested'''||              05641300
*                      ' flag turned on as '||                          05641400
*                 'indicated by FNDJBTK macro parameter */';            05641500
*                                      /* Build comment string   @D3A*/ 05641600
*                                                                       05641700
*    ANS COL(MACCOL+2) SKIP(2) (IANS_TEXT1 || IANS_TEXT2);              05641800
*                                      /* Generate assignment           05641900
*                                         statement              @D3A*/ 05642000
*                                                                       05642100
*  END;                                /* FNDCSTK specified as yes      05642200
*                                                                @D3A*/ 05642300
*/********************************************************************/ 05642400
*/* Returns from the ASSIGN_FIND_PARMS routine. Goes to the          */ 05642500
*/* label just following the branch to this routine.                 */ 05642600
*/********************************************************************/ 05642700
*                                                                       05642800
*GOTO LHA0150B;                        /* Return from ASSIGN_FIND_      05642900
*                                         PARMS routine              */ 05643000
*%END;                                                                  05644000
*                                                         /*  600@L1A*/ 05661400
*%GOTO  SJACM3;                                           /*     @P5C*/ 05678800
*/*                                                        *     @P3A*  05696200
         MACRO                                                          05713800
.********************************************************************** 05748700
.**                                                                  ** 05783600
.** Definition of the macro invocation.                              ** 05818500
.**                                                                  ** 05853400
.********************************************************************** 05888300
&NAME    SJFACC &REQTBL=,&NUMREQ=,&MF=,&REQUEST=,&RECOVRY=,            X05923200
               &CLEANUP=,&NONAUTH=,&SYSUSER=,&LOCLSTG=,&TOKEN=,        X05958100
               &VERB=,&LABEL=,&CONTINU=,&UPDJRNL=,&UPDALTS=,           X05993000
               &FNDNEXT=,&FNDWTKN=,&FNDSTPN=,&FNDPRLB=,&FNDLEVL=,      X06016200
               &FNDJBTK=,&FNDCSTK=                                 @D3C 06039400
.*                                                                      06062800
.********************************************************************** 06097700
.**                                                                  ** 06132600
.** Declaration of internal macro variables.                         ** 06167500
.**                                                                  ** 06202400
.********************************************************************** 06237300
.*                                                                      06272200
         LCLB  &PARMERR                Parm list errors found flag      06307100
         LCLB  &ERRVAL                 Error value.                     06342000
         LCLA  &I                      Outer loop counter               06376900
         LCLA  &J                      Inner loop counter               06411800
         LCLA  &ERRCODE                error code returned.             06446700
         LCLC  &C                      For checking NUMREQ for numeric  06481600
         LCLC  &MSG010A                Text constant for error msg 010  06516500
         LCLC  &MSG010B                Text constant for error msg 010  06551400
         LCLC  &MSG020A                Text constant for error msg 020  06586300
         LCLC  &MSG020B                Text constant for error msg 020  06621200
         LCLC  &MSG020C                Text constant for error msg 020  06656100
         LCLC  &MSG030A                Text constant for error msg 030  06691000
         LCLC  &MSG030B                Text constant for error msg 030  06725900
         LCLC  &MSG040A                Text constant for error msg 040  06760800
         LCLC  &MSG040B                Text constant for error msg 040  06795700
         LCLC  &MSG050A                Text constant for error msg 050  06830600
         LCLC  &MSG050B                Text constant for error msg 050  06865500
         LCLC  &MSG060A                Text constant for error msg 060  06900400
         LCLC  &MSG060B                Text constant for error msg 060  06935300
         LCLC  &MSG070A                Text constant for error msg 070  06970200
         LCLC  &MSG070B                Text constant for error msg 070  07005100
         LCLC  &MSG080A                Text constant for error msg 080  07040000
.*                                                                      07074900
.********************************************************************** 07109800
.**                                                                  ** 07144700
.** Initialization of error message text constants that are used     ** 07179600
.** to build error messages for the detected invalid parameters.     ** 07214500
.**                                                                  ** 07249400
.********************************************************************** 07284300
.*                                                                      07319200
.********************************************************************** 07354100
.** Text constants for error message 010.                            ** 07389000
.********************************************************************** 07423900
.*                                                                      07458800
&MSG010A SETC  'AHA010 SJFACC ERROR: POSITIONAL PARAMETER NO. '         07493700
&MSG010B SETC  '               DOES NOT CONTAIN 4 SUB-PARAMETERS.'      07528600
.*                                                                      07563500
.*                                                                      07598400
.********************************************************************** 07633300
.** Text constants for error message 020.                            ** 07668200
.********************************************************************** 07703100
.*                                                                      07738000
&MSG020A SETC  'AHA020 SJFACC ERROR: POSITIONAL PARAMETER NO. '         07772900
&MSG020B SETC  '               SUB-PARAMETER NO. '                      07807800
&MSG020C SETC  '               IS NULL OR CONTAINS MORE THAN ONE ARGUMEX07842700
               NT.'                                                     07877600
.*                                                                      07912500
.*                                                                      07947400
.********************************************************************** 07982300
.** Text constants for error message 030.                            ** 08017200
.********************************************************************** 08052100
.*                                                                      08087000
&MSG030A SETC  'AHA030 SJFACC ERROR: KEYWORD PARAMETER '                08121900
&MSG030B SETC  '               SPECIFIED INCORRECTLY.'                  08156800
.*                                                                      08191700
.*                                                                      08226600
.********************************************************************** 08261500
.** Text constants for error message 040.                            ** 08296400
.********************************************************************** 08331300
.*                                                                      08366200
&MSG040A SETC  'AHA040 SJFACC ERROR: KEYWORD PARAMETER '                08401100
&MSG040B SETC  '               REQUIRED, BUT NOT SPECIFIED.'            08436000
.*                                                                      08470900
.*                                                                      08505800
.********************************************************************** 08540700
.** Text constants for error message 050.                            ** 08575600
.********************************************************************** 08610500
.*                                                                      08645400
&MSG050A SETC  'AHA050 SJFACC ERROR: KEYWORD PARAMETER(S) '             08680300
&MSG050B SETC  '               SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH ' 08715200
.*                                                                      08750100
.*                                                                      08785000
.********************************************************************** 08819900
.** Text constants for error message 060.                            ** 08854800
.********************************************************************** 08889700
.*                                                                      08924600
&MSG060A SETC  'AHA060 SJFACC ERROR: POSITIONAL PARAMETER(S) SPECIFIED,X08959500
               '                                                        08994400
&MSG060B SETC  '               BUT MUTUALLY EXCLUSIVE WITH '            09029300
.*                                                                      09064200
.*                                                                      09099100
.********************************************************************** 09134000
.** Text constants for error message 070.                            ** 09168900
.********************************************************************** 09203800
.*                                                                      09238700
&MSG070A SETC  'AHA070 SJFACC ERROR: REQUEST TABLE DECLARE NOT GENERATEX09273600
               D'                                                       09308500
&MSG070B SETC  '               DUE TO ERRORS FOUND IN THE LIST FORM INVX09343400
               OCATION.'                                                09378300
.*                                                                      09413200
.*                                                                      09448100
.********************************************************************** 09483000
.** Text constants for error message 080.                            ** 09517900
.********************************************************************** 09552800
.*                                                                      09587700
&MSG080A SETC  'AHA080 SJFACC ERROR: NUMREQ MUST BE NUMERIC IN '  @P4C  09622600
.*                                                                      09657500
.*                                                                      09692400
.********************************************************************** 09727300
.** Set error return code.                                           ** 09762200
.********************************************************************** 09797100
.*                                                                      09832000
&ERRVAL  SETB  1                                                        09866900
&ERRCODE SETA  12                           Return a 12 for any error   09901800
.*                                          found in the macro          09936700
.*                                          invocation.                 09971600
.*                                                                      10006500
.*                                                                      10041400
.********************************************************************** 10076300
.**                                                                  ** 10111200
.**               START OF MAINLINE PROCESSING                       ** 10146100
.**                                                                  ** 10181000
.********************************************************************** 10215900
.*                                                                      10250800
.*                                                                      10285700
.********************************************************************** 10320600
.** Initializes the parameter list error flag to indicate            ** 10355500
.** errors have not yet been found in the macro parameter list.      ** 10390400
.********************************************************************** 10425300
.*                                                                      10460200
&PARMERR SETB  0                            Set the parm list errors    10495100
.*                                          found flag off              10530000
.*                                                                      10564900
.********************************************************************** 10599800
.** If a label was specified on the macro invocation then            ** 10602200
.** generates an EQU for the label.                                  ** 10604600
.********************************************************************** 10607000
.*                                                                      10609400
.*                                                                      10611800
         AIF   ('&NAME' EQ '').SKIPLBL      Test if a label was        X10614200
                                            specified.            3@P3A 10616600
&NAME    EQU   *                            Label specified on macro   X10619000
                                            invocation                  10621400
.SKIPLBL ANOP                                                           10623800
.*                                                                      10626200
.*                                                                      10628600
.********************************************************************** 10631000
.** Branches to the routine to verify the MF keyword.                ** 10634700
.********************************************************************** 10669600
.*                                                                      10704500
         AGO   .LH0010A                     Branch to the VERIFY_MF     10739400
.*                                          routine.                    10774300
.LH0010B ANOP                               Label at which to return    10809200
.*                                          from the VERIFY_MF routine. 10844100
.*                                                                      10879000
.********************************************************************** 10913900
.** If the MF keyword is valid, branches to the routine to process   ** 10948800
.** the macro form specified.                                        ** 10983700
.********************************************************************** 11018600
.*                                                                      11053500
         AIF   (&PARMERR EQ 0).LH0001T      Test if MF was valid.       11088400
         AGO   .LH0000Z                                                 11123300
.LH0001T ANOP                               MF keyword is valid.        11158200
         AIF   ('&MF' EQ 'L').LH0002T       Test if list macro form     11193100
         AGO   .LH0002E                     Is EXECUTE FORM.            11228000
.*                                                                      11262900
.LH0002T ANOP                               List macro form             11297800
         AGO   .LH0020A                     Branch to LIST_FORM         11332700
.*                                          routine to process list     11367600
.*                                          form invocation.            11402500
.LH0020B ANOP                               Label at which to return    11437400
.*                                          from LIST_FORM routine      11472300
         AGO   .LH0000Z                                                 11507200
.*                                                                      11542100
.LH0002E ANOP                               Execute macro form.         11577000
         AGO   .LH0030A                     Branch to EXECUTE_FORM      11611900
.*                                          routine to process execute  11646800
.*                                          invocation.                 11681700
.LH0030B ANOP                               Label at which to return    11716600
.*                                          from EXECUTE_FORM routine   11751500
.*                                                                      11786400
.*                                                                      11821300
.********************************************************************** 11856200
.** Returns from the macro with return code 0 for a valid            ** 11891100
.** invocation, 12 for an invalid invocation.                        ** 11926000
.********************************************************************** 11960900
.*                                                                      11995800
.LH0000Z ANOP                                                           12030700
         MEXIT                                                          12065600
.*                                                                      12100500
.*                                                                      12135400
.*                                                                      12170300
.********************************************************************** 12205200
.**                                                                  ** 12240100
.** PROCEDURE NAME: VERIFY_MF                                        ** 12275000
.**                                                                  ** 12309900
.** DESCRIPTIVE NAME: Verifies the macro form keyword parameter.     ** 12344800
.**                                                                  ** 12379700
.** ENTRY: From mainline processing                                  ** 12414600
.**                                                                  ** 12449500
.** INPUT: MF keyword                                                ** 12484400
.**                                                                  ** 12519300
.** OUTPUT: For an invalid specification of the MF keyword:          ** 12554200
.**          a. The parameter list error flag is set on.             ** 12589100
.**          b. An error message is generated for the invalid        ** 12624000
.**             condition found.                                     ** 12658900
.**                                                                  ** 12693800
.** EXIT: To mainline processing                                     ** 12728700
.**                                                                  ** 12763600
.** ROUTINES BRANCHED TO: None                                       ** 12798500
.**                                                                  ** 12833400
.********************************************************************** 12868300
.*                                                                      12903200
.LH0010A ANOP                               Entry Point of the          12938100
.*                                          routine.                    12973000
.********************************************************************** 13007900
.** Tests if the MF keyword is specified. If it is specified,        ** 13042800
.** tests if it has a valid value. If it is invalid or is not        ** 13077700
.** specified, generates an error message and sets the parameter     ** 13112600
.** list error flag on.                                              ** 13147500
.********************************************************************** 13182400
.*                                                                      13217300
         AIF   (0 NE N'&MF).LH0012          Is the MF keyword           13252200
.*                                          specified?                  13287100
.********************************************************************** 13322000
.** Generates the error message: AHA040 SJFACC ERROR: KEYWORD        ** 13356900
.** PARAMETER MF REQUIRED, BUT NOT SPECIFIED.                        ** 13391800
.********************************************************************** 13426700
.*                                                                      13461600
.LH0011  MNOTE &ERRCODE,'&MSG040A.MF'       NO, MF keyword not          13496500
         MNOTE '&MSG040B'                   specified.                  13531400
&PARMERR SETB  1                                                        13566300
         AGO   .LH0010Z                                                 13601200
.*                                                                      13636100
.*                                                                      13671000
.LH0012  AIF   ('&MF' EQ 'E').LH0010Z,      YES, MF=E (execute)?       X13705900
               ('&MF' EQ 'L').LH0010Z       NO, MF=L (list)?            13740800
.*                                                                      13775700
.********************************************************************** 13810600
.** Generates the error message: AHA030 SJFACC ERROR: KEYWORD        ** 13845500
.** PARAMETER MF SPECIFIED INCORRECTLY.                              ** 13880400
.********************************************************************** 13915300
.*                                                                      13950200
         MNOTE &ERRCODE,'&MSG030A.MF'       MF was specified, but       13985100
         MNOTE '&MSG030B'                   there was more than 1       14020000
&PARMERR SETB  1                            value or the value wasn't   14054900
.*                                          E or L.                     14089800
.********************************************************************** 14124700
.** Returns from this routine to the label just following the        ** 14159600
.** branch to this routine.                                          ** 14194500
.********************************************************************** 14229400
.*                                                                      14264300
.LH0010Z ANOP                                                           14299200
         AGO   .LH0010B                     Return from VERIFY_MF       14334100
.*                                                                      14369000
.*                                                                      14403900
.********************************************************************** 14438800
.**                                                                  ** 14473700
.** PROCEDURE NAME: LIST_FORM                                        ** 14508600
.**                                                                  ** 14543500
.** DESCRIPTIVE NAME: Processes the list form macro invocation.      ** 14578400
.**                                                                  ** 14613300
.** OPERATION: 1. Verifies the list form macro parameter list.       ** 14648200
.**                                                                  ** 14683100
.**            2. If the parameter list is valid, generates the      ** 14718000
.**               declare in modified source text for the list       ** 14752900
.**               form invocation.                                   ** 14787800
.**                                                                  ** 14822700
.**            3. If the parameter list is invalid, generates        ** 14857600
.**               error messages.                                    ** 14892500
.**                                                                  ** 14927400
.** ENTRY: From mainline processing                                  ** 14962300
.**                                                                  ** 14997200
.** INPUT: Macro parameter list                                      ** 15032100
.**                                                                  ** 15067000
.** OUTPUT: 1. For invalid invocations:                              ** 15101900
.**            a. The parameter list error flag is set on.           ** 15136800
.**            b. Error messages are generated for the invalid       ** 15171700
.**               parameters found.                                  ** 15206600
.**            c. An error message is generated echoing the          ** 15241500
.**               the macro invocation and indicating the            ** 15276400
.**               request table was not declared.                    ** 15311300
.**                                                                  ** 15346200
.**         2. For valid invocations:                                ** 15381100
.**            a. Generates the declare for request table storage.   ** 15416000
.**                                                                  ** 15450900
.** EXIT: To mainline processing                                     ** 15485800
.**                                                                  ** 15520700
.** ROUTINES BRANCHED TO: None                                       ** 15555600
.**                                                                  ** 15590500
.********************************************************************** 15625400
.*                                                                      15660300
.LH0020A ANOP                               Entry point of the routine  15695200
.*                                                                      15730100
.********************************************************************** 15765000
.** Verifies the list form macro invocation. Checks for              ** 15799900
.** extraneous, invalid and missing parameters.                      ** 15834800
.********************************************************************** 15869700
.*                                                                      15904600
.********************************************************************** 15939500
.**  Positional parameters are not used in the list form             ** 15974400
.**  invocation. Checks that they are not specified. If they are,    ** 16009300
.**  then generates the error message 060 and sets the parameter     ** 16044200
.**  list error flag on.                                             ** 16079100
.********************************************************************** 16114000
.*                                                                      16148900
         AIF   (0 EQ N'&SYSLIST).LH0021     Any positional parameters?  16183800
.*                                                                      16218700
.********************************************************************** 16253600
.** Generates the error message: AHA060 SJFACC ERROR:                ** 16288500
.** POSITIONAL PARAMETERS SPECIFIED, BUT MUTUALLY EXCLUSIVE          ** 16323400
.** WITH THE LIST MACRO FORM.                                        ** 16358300
.********************************************************************** 16393200
.*                                                                      16428100
         MNOTE &ERRCODE,'&MSG060A'          YES, generate error msg.    16463000
         MNOTE '&MSG060B.THE LIST MACRO FORM.'                          16497900
&PARMERR SETB  1                            Set error flag.             16532800
.*                                                                      16567700
.*                                                                      16602600
.********************************************************************** 16637500
.** Checks that execute form keyword parameters not used in the      ** 16672400
.** list form are not specified.  If they are, then generates        ** 16707300
.** error message 050 and sets the parameter list error flag on.     ** 16742200
.********************************************************************** 16777100
.*                                                                      16812000
.LH0021  AIF   (0 NE N'&REQUEST).LH0021A,   Was REQUEST specified?     X16846900
               (0 NE N'&RECOVRY).LH0021A,   Was RECOVERY specified?    X16881800
               (0 NE N'&CLEANUP).LH0021A,   Was CLEANUP specified?     X16916700
               (0 NE N'&NONAUTH).LH0021A,   Was NONAUTH specified?     X16951600
               (0 NE N'&SYSUSER).LH0021A,   Was SYSUSER specified?     X16986500
               (0 NE N'&LOCLSTG).LH0021A,   Was LOCLSTG specified?     X17021400
               (0 NE N'&TOKEN).LH0021A,     Was TOKEN specified?       X17056300
               (0 NE N'&VERB).LH0021A,      Was VERB specified?        X17091200
               (0 NE N'&LABEL).LH0021A,     Was LABEL specified?       X17126100
               (0 NE N'&CONTINU).LH0021A,   Was CONTINU specified?     X17161000
               (0 NE N'&UPDJRNL).LH0021A,   Was UPDJRNL specified?     X17195900
               (0 NE N'&UPDALTS).LH0021A,   Was UPDALTS specified?     X17230800
               (0 NE N'&FNDNEXT).LH0021A,   Was FNDNEXT specified?     X17265700
               (0 NE N'&FNDWTKN).LH0021A,   Was FNDWTKN specified?     X17300600
               (0 NE N'&FNDLEVL).LH0021A,   Was FNDLEVL specified?     X17335500
               (0 NE N'&FNDSTPN).LH0021A,   Was FNDSTPN specified?     X17370400
               (0 NE N'&FNDPRLB).LH0021A,   Was FNDPRLB specified?     X17387800
               (0 NE N'&FNDJBTK).LH0021A,   Was FNDJBTK specified?     X17405200
               (0 NE N'&FNDCSTK).LH0021A    Was FNDCSTK specified? @D3C 17422600
         AGO   .LH0022                      No errors found.            17440200
.*                                                                      17475100
.********************************************************************** 17510000
.** Generates the error message: AHA050 SJFACC ERROR: KEYWORD        ** 17544900
.** PARAMETER(S) FROM THE EXECUTE MACRO FORM SPECIFIED, BUT          ** 17579800
.** MUTUALLY EXCLUSIVE WITH THE LIST MACRO FORM.                     ** 17614700
.********************************************************************** 17649600
.*                                                                      17684500
.LH0021A MNOTE &ERRCODE,'&MSG050A'                                      17719400
         MNOTE '               FROM THE EXECUTE MACRO FORM'             17754300
         MNOTE '&MSG050B'                                               17789200
         MNOTE '               THE LIST MACRO FORM.'                    17824100
&PARMERR SETB  1                            YES, set error flag.        17859000
.*                                                                      17893900
.*                                                                      17928800
.********************************************************************** 17963700
.** Verifies the REQTBL keyword. If it is invalid, then generates    ** 17998600
.** an error message and sets the parameter list error flag on.      ** 18033500
.********************************************************************** 18068400
.*                                                                      18103300
.LH0022  AIF   (0 EQ N'&REQTBL).LH0022A,    Was REQTBL specified?      X18138200
               (1 EQ N'&REQTBL).LH0023      YES, only 1 value?          18173100
.*                                                                      18208000
.********************************************************************** 18242900
.** Generates the error message: AHA030 SJFACC ERROR: KEYWORD        ** 18277800
.** PARAMETER REQTBL SPECIFIED INCORRECTLY.                          ** 18312700
.********************************************************************** 18347600
.*                                                                      18382500
         MNOTE &ERRCODE,'&MSG030A.REQTBL'   Specified, but incorrect.   18417400
         MNOTE '&MSG030B'                                               18452300
&PARMERR SETB  1                            Set error flag.             18487200
         AGO   .LH0023                                                  18522100
.*                                                                      18557000
.********************************************************************** 18591900
.** Generates the error message: AHA040 SJFACC ERROR: KEYWORD        ** 18626800
.** PARAMETER REQTBL REQUIRED, BUT NOT SPECIFIED.                    ** 18661700
.********************************************************************** 18696600
.*                                                                      18731500
.LH0022A MNOTE &ERRCODE,'&MSG040A.REQTBL'   REQTBL wasn't specified,    18766400
         MNOTE '&MSG040B'                   but is required.            18801300
&PARMERR SETB  1                            Set error flag.             18836200
.*                                                                      18871100
.*                                                                      18906000
.********************************************************************** 18940900
.** Verifies the NUMREQ keyword is specified and has only one        ** 18975800
.** value.  If it is invalid, then generates an error message and    ** 19010700
.** sets the parameter list error flag on.                           ** 19045600
.********************************************************************** 19080500
.*                                                                      19115400
.LH0023  AIF   (0 EQ N'&NUMREQ).LH0023A,    Was NUMREQ specified?      X19150300
               (1 EQ N'&NUMREQ).LH0024      YES, only 1 value?          19185200
.*                                                                      19220100
.********************************************************************** 19255000
.** Generates the error message: AHA030 SJFACC ERROR:                ** 19289900
.** KEYWORD PARAMETER NUMREQ SPECIFIED INCORRECTLY.                  ** 19324800
.********************************************************************** 19359700
.*                                                                      19394600
         MNOTE &ERRCODE,'&MSG030A.NUMREQ'   Specified, but incorrect.   19429500
         MNOTE '&MSG030B'                                               19464400
&PARMERR SETB  1                            Set error flag.             19499300
         AGO   .LH0025                                                  19534200
.*                                                                      19569100
.********************************************************************** 19604000
.** Generates the error message: AHA040 SJFACC ERROR: KEYWORD        ** 19638900
.** PARAMETER NUMREQ REQUIRED, BUT NOT SPECIFIED.                    ** 19673800
.********************************************************************** 19708700
.*                                                                      19743600
.LH0023A MNOTE &ERRCODE,'&MSG040A.NUMREQ'   NUMREQ wasn't specified,    19778500
         MNOTE '&MSG040B'                   but is required.            19813400
&PARMERR SETB  1                            Set error flag.             19848300
.*                                                                      19883200
.*                                                                      19918100
.********************************************************************** 19953000
.** The NUMREQ keyword has the correct number of arguments, the      ** 19987900
.** argument must also be numeric.                                   ** 20022800
.********************************************************************** 20057700
.*                                                                      20092600
.LH0024  ANOP                                                           20127500
&J       SETA  0                Count of invalid characters in NUMREQ   20162400
&I       SETA  0                Loop variable for length of NUMREQ      20197300
.*                                                                      20232200
.LH0024A ANOP                   Top of loop.                            20267100
&I       SETA  &I+1             Increment loop counter.                 20302000
         AIF   (&I GT K'&NUMREQ).LH0024C  More characters in NUMREQ?    20336900
&C       SETC  '&NUMREQ'(&I,1)                                          20371800
         AIF   (('&C' GE '0') AND                                      X20406700
               ('&C' LE '9')).LH0024B                                   20441600
&J       SETA  &J+1             An error was found, increment counter   20476500
.LH0024B ANOP                                                           20511400
         AGO   .LH0024A                                                 20546300
.*                                                                      20581200
.LH0024C ANOP                                                           20616100
         AIF   (&J EQ 0).LH0025   No errors found, bypass error         20651000
&PARMERR SETB  1                                                        20685900
         MNOTE &ERRCODE,'&MSG080A.LIST FORM.'                           20720800
.*                                                                      20755700
.*                                                                      20790600
.********************************************************************** 20825500
.** If the list form macro parameter list is valid, then generates   ** 20860400
.** the declare for the request table storage.  If the parameter     ** 20895300
.** list is invalid, the macro invocation is echoed in an error      ** 20930200
.** message.                                                         ** 20965100
.********************************************************************** 21000000
.*                                                                      21034900
.LH0025  AIF   (0 EQ &PARMERR).LH0024T                                  21069800
         AGO   .LH0024E                                                 21104700
.*                                                                      21139600
.LH0024T ANOP                               NO errors found in          21174500
.*                                          LIST_FORM                   21209400
.********************************************************************** 21244300
.** The number of bytes for the request table is equal to the        ** 21279200
.** number of requests, as specified in the NUMREQ keyword, times    ** 21314100
.** the number of bytes required per request table.                  ** 21349000
.********************************************************************** 21383900
.*                                                                      21418800
         DS   0D                            Force to double word.       21453700
&REQTBL  DS   &NUMREQ.CL(SJACRLEN)          Generated declare for       21488600
*                                           request table.              21523500
         AGO   .LH0020Z                                                 21558400
.*                                                                      21593300
.********************************************************************** 21628200
.** Generates the error message: AHA070 SJFACC ERROR:                ** 21663100
.** REQUEST TABLE DECLARE NOT GENERATED DUE TO ERRORS FOUND          ** 21698000
.** IN THE LIST FORM INVOCATION, in modified source text.            ** 21732900
.********************************************************************** 21767800
.*                                                                      21802700
.LH0024E MNOTE &ERRCODE,'&MSG070A'          Errors were found in        21837600
         MNOTE '&MSG070B'                   LIST_FORM.                  21872500
.*                                                                      21907400
.*                                                                      21942300
.********************************************************************** 21977200
.** Returns from the LIST_FORM routine to the label just             ** 22012100
.** following the branch to this routine.                            ** 22047000
.********************************************************************** 22081900
.*                                                                      22116800
.LH0020Z ANOP                                                           22151700
         AGO   .LH0020B                     Return to main routine.     22186600
.*                                                                      22221500
.*                                                                      22256400
.********************************************************************** 22291300
.**                                                                  ** 22326200
.** PROCEDURE NAME: EXECUTE_FORM                                     ** 22361100
.**                                                                  ** 22396000
.** DESCRIPTIVE NAME: Processes the execute form macro invocation.   ** 22430900
.**                                                                  ** 22465800
.** OPERATION: 1. Branches to the VER_EXEC_FORM routine to verify    ** 22500700
.**               the execute form macro parameter list.             ** 22535600
.**                                                                  ** 22570500
.**            2. If the execute form macro parameter list is        ** 22605400
.**               valid, branches to either the routine to           ** 22640300
.**               process a terminate request, or the routine to     ** 22675200
.**               process an SJF Access Function request.            ** 22710100
.**                                                                  ** 22745000
.** ENTRY: From mainline processing                                  ** 22779900
.**                                                                  ** 22814800
.** INPUT: 1. parameter list error flag                              ** 22849700
.**        2. REQUEST keyword parameter                              ** 22884600
.**                                                                  ** 22919500
.** OUTPUT: None                                                     ** 22954400
.**                                                                  ** 22989300
.** EXIT: To mainline processing                                     ** 23024200
.**                                                                  ** 23059100
.** ROUTINES BRANCHED TO: 1. VER_EXEC_FORM                           ** 23094000
.**                       2. TERM_REQ                                ** 23128900
.**                       3. SJF_ACC_REQ                             ** 23163800
.**                                                                  ** 23198700
.********************************************************************** 23233600
.*                                                                      23268500
.LH0030A ANOP                               Entry point of routine.     23303400
.*                                                                      23338300
.*                                                                      23373200
.********************************************************************** 23408100
.** Branches to the routine to verify the execute form of the        ** 23443000
.** macro.                                                           ** 23477900
.********************************************************************** 23512800
.*                                                                      23547700
         AGO   .LH0040A                     Call VER_EXEC_FORM.         23582600
.LH0040B ANOP                               Return label from           23617500
.*                                          VER_EXEC_FORM.              23652400
.*                                                                      23687300
.********************************************************************** 23722200
.** If the execute form parameter list is valid, branches to the     ** 23757100
.** appropriate routine to process the requested function,           ** 23792000
.** terminate or access.                                             ** 23826900
.********************************************************************** 23861800
.*                                                                      23896700
         AIF   (&ERRVAL EQ &PARMERR).LH0030Z                            23931600
.*                                                                      23966500
.LH0031T AIF   ('&REQUEST' EQ 'TERMINATE').LH0032T  OK, TERMINATE?      24001400
         AGO   .LH0032E                                                 24036300
.*                                                                      24071200
.********************************************************************** 24106100
.** Request is to TERMINATE, Branch to the TERM_REQ routine.         ** 24141000
.********************************************************************** 24175900
.*                                                                      24210800
.LH0032T ANOP                               REQUEST is to TERMINATE.    24245700
         AGO   .LH0090A                                                 24280600
.LH0090B ANOP                               Return from TERMINATE.      24315500
         AGO   .LH0030Z                                                 24350400
.*                                                                      24385300
.********************************************************************** 24420200
.** Request not TERMINATE, request is for SJF Access Function.       ** 24455100
.********************************************************************** 24490000
.*                                                                      24524900
.LH0032E AGO   .LH0100A                     REQUEST not TERMINATE -     24559800
.*                                          Access Function.            24594700
.LH0100B ANOP                               Return from SJF Access      24629600
.*                                          Function.                   24664500
.*                                                                      24699400
.********************************************************************** 24734300
.** Returns from this routine to the label following the branch      ** 24769200
.** to this routine.                                                 ** 24804100
.********************************************************************** 24839000
.*                                                                      24873900
.LH0030Z ANOP                                                           24908800
         AGO   .LH0030B                     Return to main routine.     24943700
.*                                                                      24978600
.*                                                                      25013500
.********************************************************************** 25048400
.**                                                                  ** 25083300
.** PROCEDURE NAME: VER_EXEC_FORM                                    ** 25118200
.**                                                                  ** 25153100
.** DESCRIPTIVE NAME: Verifies the execute form macro parameter      ** 25188000
.**                   list.                                          ** 25222900
.**                                                                  ** 25257800
.** FUNCTION: Verifies the execute form macro parameter list. The    ** 25292700
.**           parameter list will be checked for errors which        ** 25327600
.**           would prevent or interfere with building the SJF       ** 25362500
.**           Access Function parameter list. List form parameters   ** 25397400
.**           not used in the execute macro form invocation will     ** 25432300
.**           be checked to insure their exclusion.  Extraneous      ** 25467200
.**           execute form parameters not used for the given         ** 25502100
.**           request type will be checked to insure their           ** 25537000
.**           exclusion.  Choice-data type parameters will be        ** 25571900
.**           checked for correct values.  Asis type parameters      ** 25606800
.**           will only be checked to ensure the correct number of   ** 25641700
.**           parameters are specified.  The macro need not          ** 25676600
.**           duplicate other error checking that is provided by     ** 25711500
.**           the access routines being invoked.                     ** 25746400
.**                                                                  ** 25781300
.** OPERATION: 1. Checks that required parameters and parameters     ** 25816200
.**               with mutual exclusivity conditions are properly    ** 25851100
.**               specified.                                         ** 25886000
.**                                                                  ** 25920900
.**            2. Checks that parameters not used with the           ** 25955800
.**               requested function are not specified.              ** 25990700
.**                                                                  ** 26025600
.**            3. Checks that positional parameters are properly     ** 26060500
.**               specified.                                         ** 26095400
.**                                                                  ** 26130300
.**            4. For asis type parameters, checks that the          ** 26165200
.**               correct number of parameters are specified.        ** 26200100
.**                                                                  ** 26235000
.**            5. For choice-data type parameters, checks that a     ** 26269900
.**               valid value is specified.                          ** 26304800
.**                                                                  ** 26339700
.** ENTRY: from EXECUTE_FORM routine                                 ** 26374600
.**                                                                  ** 26409500
.** INPUT: macro parameter list                                      ** 26444400
.**                                                                  ** 26479300
.** OUTPUT: If invalid parameters are detected:                      ** 26514200
.**          1. The parameter list error flag is set on.             ** 26549100
.**          2. Error messages are generated.                        ** 26584000
.**                                                                  ** 26618900
.** EXIT: to EXECUTE_FORM routine                                    ** 26653800
.**                                                                  ** 26688700
.** ROUTINES BRANCHED TO: 1. CHECK_REQUIRED&MUTUAL                   ** 26723600
.**                       2. CHECK_EXTRANEOUS                        ** 26758500
.**                       3. CHECK_ASIS_PARMS                        ** 26793400
.**                       4. CHECK_CHOICE_PARMS                      ** 26828300
.**                                                                  ** 26863200
.********************************************************************** 26898100
.*                                                                      26933000
.LH0040A ANOP                               Entry point of routine.     26967900
.*                                                                      27002800
.********************************************************************** 27037700
.** Verifies that required parameters are specified and that         ** 27072600
.** parameters with mutual exclusivity conditions are properly       ** 27107500
.** specified.                                                       ** 27142400
.********************************************************************** 27177300
.*                                                                      27212200
         AGO   .LH0050A                     Call CHECK_REQUIRED&MUTUAL  27247100
.LH0050B ANOP                               Return for CHECK_REQUIRED.  27282000
.*                                                                      27316900
.*                                                                      27351800
.*                                                                      27386700
.********************************************************************** 27421600
.** Verifies that parameters not used in the requested function      ** 27456500
.** are not specified.                                               ** 27491400
.********************************************************************** 27526300
.*                                                                      27561200
         AGO   .LH0060A                     Call CHECK_EXTRANEOUS       27596100
.LH0060B ANOP                               Return from CHECK_          27631000
.*                                          EXTRANEOUS.                 27665900
.*                                                                      27700800
.********************************************************************** 27735700
.** Verifies the positional parameters, if they are specified.       ** 27770600
.** Checks that each positional parameter has 4 sub-parameters and   ** 27805500
.** that each sub-parameter is a single parameter.  If an invalid    ** 27840400
.** parameter is detected, generates an error message and sets       ** 27875300
.** the parameter list error flag on.                                ** 27910200
.********************************************************************** 27945100
.*                                                                      27980000
         AIF   (0 EQ N'&SYSLIST).LH0042Z    Any positional parameters?  28014900
.*                                          YES, check parameters.      28049800
&I       SETA  1                            Loop counter.               28084700
.LH0042A AIF   (&I GT N'&SYSLIST).LH0042Z   For each parameter.         28119600
         AIF   (4 EQ N'&SYSLIST(&I)).LH0042B  4 sub-parameters?         28154500
.*                                                                      28189400
.********************************************************************** 28224300
.** Generates the error message: AHA010 SJFACC ERROR:                ** 28259200
.** POSITIONAL PARAMETER NO. <I> DOES NOT CONTAIN 4 SUB-PARAMETERS.  ** 28294100
.********************************************************************** 28329000
.*                                                                      28363900
&PARMERR SETB  1                            NO, set error flag.         28398800
         MNOTE &ERRCODE,'&MSG010A.&I'       Issue error message 010     28433700
         MNOTE '&MSG010B'                                               28468600
         AGO   .LH0042E                     Bypass inner loop.          28503500
.*                                                                      28538400
.LH0042B ANOP                               YES, 4 sub-parameters.      28573300
&J       SETA  1                            Check each sub-parameter    28608200
.*                                          for 1 value;                28643100
.LH0042C AIF   (4 LT &J).LH0042E            For each sub-parameter.     28678000
         AIF   (1 EQ N'&SYSLIST(&I,&J)).LH0042D                         28712900
.*                                                                      28747800
.********************************************************************** 28782700
.** Generates the error message: AHA020 SJFACC ERROR: POSITIONAL     ** 28817600
.** PARAMETER NO. <I>, SUB-PARAMETER NO. <J> IS NULL OR CONTAINS     ** 28852500
.** MORE THAN ONE ARGUMENT.                                          ** 28887400
.********************************************************************** 28922300
.*                                                                      28957200
&PARMERR SETB  1                            Sub-parameter has <> 1      28992100
.*                                          value.                      29027000
         MNOTE &ERRCODE,'&MSG020A.&I'       Set error code and print    29061900
         MNOTE '&MSG020B.&J'                error message 020.          29096800
         MNOTE '&MSG020C'                                               29131700
.LH0042D ANOP                                                           29166600
&J       SETA  &J+1                         Increment inner loop        29201500
.*                                          counter (J).                29236400
         AGO   .LH0042C                     Go to top of inner loop.    29271300
.LH0042E ANOP                                                           29306200
&I       SETA  &I+1                         Increment outer loop        29341100
.*                                          counter.                    29376000
         AGO   .LH0042A                     Go to top of outer loop.    29410900
.*                                                                      29445800
.LH0042Z ANOP                               End of loop.                29480700
.*                                                                      29515600
.*                                                                      29550500
.********************************************************************** 29585400
.** Verify asis type parameters.                                     ** 29620300
.********************************************************************** 29655200
.*                                                                      29690100
         AGO   .LH0070A                     Call CHECK_ASIS_PARMS.      29725000
.LH0070B ANOP                               Return from CHECK_ASIS_     29759900
.*                                          PARMS.                      29794800
.*                                                                      29829700
.********************************************************************** 29864600
.** Verify choice-data type parameters.                              ** 29899500
.********************************************************************** 29934400
.*                                                                      29969300
         AGO   .LH0080A                     Call CHECK_CHOICE_PARMS.    30004200
.LH0080B ANOP                               Return from CHECK_CHOICE_   30039100
.*                                          PARMS.                      30074000
.*                                                                      30108900
.********************************************************************** 30143800
.** End of the VER_EXEC_FORM routine.  Returns to the label just     ** 30178700
.** following branch to this routine.                                ** 30213600
.********************************************************************** 30248500
.*                                                                      30283400
         AGO   .LH0040B                     Return to EXECUTE_FORM.     30318300
.*                                                                      30353200
.*                                                                      30388100
.********************************************************************** 30423000
.**                                                                  ** 30457900
.** ROUTINE NAME: CHECK_REQUIRED&MUTUAL                              ** 30492800
.**                                                                  ** 30527700
.** DESCRIPTIVE NAME: Checks execute macro form parameters that      ** 30562600
.**                   are required or have mutual exclusivity        ** 30597500
.**                   conditions other than with the request type.   ** 30632400
.**                                                                  ** 30667300
.** FUNCTION:        Checks execute macro form parameters that are   ** 30702200
.**                  required or have mutual exclusivity             ** 30737100
.**                  conditions other than with the request type.    ** 30772000
.**                  Checks those parameters whose                   ** 30806900
.**                  misspecification would interfere with           ** 30841800
.**                  generating the assignment statements for the    ** 30876700
.**                  SJF Access Function parameter list. Also        ** 30911600
.**                  checks some parameters whose correct            ** 30946500
.**                  specification are essential for using the       ** 30981400
.**                  SJF Access Function.                            ** 31016300
.**                                                                  ** 31051200
.** ENTRY: From VER_EXEC_FORM routine                                ** 31086100
.**                                                                  ** 31121000
.** INPUT: 1. REQUEST, REQTBL, LOCLSTG and NUMREQ keyword            ** 31155900
.**           parameters                                             ** 31190800
.**        2. Positional parameters                                  ** 31225700
.**                                                                  ** 31260600
.** OUTPUT: If invalid parameters are detected:                      ** 31295500
.**          1. The parameter list error flag is set on.             ** 31330400
.**          2. Error messages are generated.                        ** 31365300
.**                                                                  ** 31400200
.** EXIT: To VER_EXEC_FORM routine                                   ** 31435100
.**                                                                  ** 31470000
.** ROUTINE CALLED: None                                             ** 31504900
.**                                                                  ** 31539800
.********************************************************************** 31574700
.*                                                                      31609600
.LH0050A ANOP                               Entry point of routine.     31644500
.*                                                                      31679400
.*                                                                      31714300
.********************************************************************** 31749200
.**  If positional parameters or NUMREQ keyword are required         ** 31784100
.**  (request is not for FIND or TERMINATE), verifies either         ** 31819000
.**  positional parameters or the NUMREQ keyword is specified, but   ** 31853900
.**  not both.  If an invalid condition is detected, generates       ** 31888800
.**  an error message and sets the parameter list error flag on.     ** 31923700
.********************************************************************** 31958600
.*                                                                      31993500
.*                                                                      32028400
         AIF   (('UPDATE' EQ '&REQUEST') OR                            X32063300
               ('RETRIEVE' EQ '&REQUEST') OR                           X32098200
               ('FINDUPD' EQ '&REQUEST') OR                            X32133100
               ('FINDRET' EQ '&REQUEST')).LH0051T                       32168000
         AGO   .LH0054                                                  32202900
.*                                                                      32237800
.LH0051T AIF   ((0 NE N'&NUMREQ) AND                                   X32272700
               (0 NE N'&SYSLIST)).LH0052T                               32307600
         AGO   .LH0052E                                                 32342500
.*                                                                      32377400
.*                                                                      32412300
.********************************************************************** 32447200
.** REQUEST keyword is not FIND or TERMINATE and both NUMREQ and     ** 32482100
.** positional parameters are specified, generate message 060.       ** 32517000
.** Generates the error message: AHA060 SJFACC ERROR:                ** 32551900
.** POSITIONAL PARAMETERS SPECIFIED, BUT MUTUALLY EXCLUSIVE          ** 32586800
.** WITH THE NUMREQ KEYWORD.                                         ** 32621700
.********************************************************************** 32656600
.*                                                                      32691500
.LH0052T ANOP                                                           32726400
         MNOTE &ERRCODE,'&MSG060A'                                      32761300
         MNOTE '&MSG060B.THE NUMREQ KEYWORD.'                           32796200
&PARMERR SETB  1                                                        32831100
         AGO   .LH0054                                                  32866000
.* REQUEST keyword is not FIND or TERMINATE and both NUMREQ and         32900900
.*   positional parameters were not specified together.  At             32935800
.*   least one must be specified.                                       32970700
.LH0052E AIF   ((0 EQ N'&NUMREQ) AND                                   X33005600
               (0 EQ N'&SYSLIST)).LH0053T                               33040500
         AGO   .LH0054                                                  33075400
.*                                                                      33110300
.*                                                                      33145200
.********************************************************************** 33180100
.** Generates the error message: AHA040 SJFACC ERROR:                ** 33215000
.** KEYWORD PARAMETER NUMREQ REQUIRED, BUT NOT SPECIFIED.            ** 33249900
.********************************************************************** 33284800
.*                                                                      33319700
.LH0053T MNOTE &ERRCODE,'&MSG040A.NUMREQ'                               33354600
         MNOTE '&MSG040B'                                               33389500
&PARMERR SETB  1                                                        33424400
.*                                                                      33459300
.*                                                                      33494200
.********************************************************************** 33529100
.** Verifies the REQUEST keyword is specified. If it is not, then    ** 33564000
.** generates error message 040, and sets the parameter list         ** 33598900
.** error flag on.                                                   ** 33633800
.********************************************************************** 33668700
.*                                                                      33703600
.*                                                                      33738500
.LH0054  ANOP                                                           33773400
         AIF   (0 EQ N'&REQUEST).LH0054T    REQUEST SPECIFIED?          33808300
         AGO   .LH0055                                                  33843200
.*                                                                      33878100
.LH0054T ANOP                                                           33913000
.********************************************************************** 33947900
.** Generates the error message: AHA040 SJFACC ERROR: KEYWORD        ** 33982800
.** PARAMETER REQUEST REQUIRED, BUT NOT SPECIFIED.                   ** 34017700
.********************************************************************** 34052600
         MNOTE &ERRCODE,'&MSG040A.REQUEST'                              34087500
         MNOTE '&MSG040B'                                               34122400
&PARMERR SETB  1                                                        34157300
         AGO   .LH0050Z                                                 34192200
.*                                                                      34227100
.********************************************************************** 34262000
.** Verifies the REQTBL keyword is specified if this is a            ** 34296900
.** FINDRET, FINDUPD, UPDATE or RETRIEVE request.  If it is not      ** 34331800
.** specified when one of these request types are specified,         ** 34366700
.** generates error message 040, and sets the parameter list         ** 34401600
.** error flag on.                                                   ** 34436500
.********************************************************************** 34471400
.LH0055  AIF   ((('FINDRET' EQ '&REQUEST') OR                          X34506300
               ('FINDUPD' EQ '&REQUEST') OR                            X34541200
               ('RETRIEVE' EQ '&REQUEST') OR                           X34576100
               ('UPDATE' EQ '&REQUEST')) AND                           X34611000
               (0 EQ N'&REQTBL)).LH0055T                                34645900
         AGO   .LH0056                                                  34680800
.LH0055T ANOP                                                           34715700
.********************************************************************** 34750600
.** Generates the error message: AHA040 SJFACC ERROR: KEYWORD        ** 34785500
.** PARAMETER REQTBL REQUIRED, BUT NOT SPECIFIED.                    ** 34820400
.********************************************************************** 34855300
         MNOTE &ERRCODE,'&MSG040A.REQTBL'                               34890200
         MNOTE '&MSG040B'                                               34925100
&PARMERR SETB  1                                                        34960000
         AGO   .LH0050Z                                                 34994900
.*                                                                      35029800
.********************************************************************** 35064700
.** IF the request is TERMINATE, verifies the LOCLSTG keyword is     ** 35099600
.** specified. If it is not, then generates error message 040,       ** 35134500
.** and sets the parameter list error flag on.                       ** 35169400
.********************************************************************** 35204300
.LH0056  AIF   (('TERMINATE' EQ '&REQUEST') AND                        X35239200
               (0 EQ N'&LOCLSTG)).LH0056T                               35274100
         AGO   .LH0050Z                                                 35309000
.LH0056T ANOP                                                           35343900
.********************************************************************** 35378800
.** Generates the error message: AHA040 SJFACC ERROR: KEYWORD        ** 35413700
.** PARAMETER LOCLSTG REQUIRED, BUT NOT SPECIFIED.                   ** 35448600
.********************************************************************** 35483500
         MNOTE &ERRCODE,'&MSG040A.LOCLSTG'                              35518400
         MNOTE '&MSG040B'                                               35553300
&PARMERR SETB  1                                                        35588200
.*                                                                      35623100
.*                                                                      35658000
.********************************************************************** 35692900
.** Returns from the CHECK_REQUIRED&MUTUAL routine. Branches to      ** 35727800
.** the label just after the branch to this routine.                 ** 35762700
.********************************************************************** 35797600
.*                                                                      35832500
.LH0050Z ANOP                                                           35867400
         AGO   .LH0050B                                                 35902300
.*                                                                      35937200
.*                                                                      35972100
.********************************************************************** 36007000
.**                                                                  ** 36041900
.** ROUTINE NAME: CHECK_EXTRANEOUS                                   ** 36076800
.**                                                                  ** 36111700
.** DESCRIPTIVE NAME: Checks that parameters not used with the       ** 36146600
.**                   request type are not specified.                ** 36181500
.**                                                                  ** 36216400
.** OPERATION: For each macro parameter which can be                 ** 36251300
.**            extraneous for a request type, checks if it           ** 36286200
.**            is extraneous with the current request type.          ** 36321100
.**            If it is, generates an error message and sets         ** 36356000
.**            the parameter list error flag on.                     ** 36390900
.**                                                                  ** 36425800
.** ENTRY: From VER_EXEC_FORM routine                                ** 36460700
.**                                                                  ** 36495600
.** INPUT: Macro parameter list                                      ** 36530500
.**                                                                  ** 36565400
.** OUTPUT: If invalid parameters are detected:                      ** 36600300
.**          1. The parameter list error flag is set on.             ** 36635200
.**          2. Error messages are generated.                        ** 36670100
.**                                                                  ** 36705000
.** EXIT: to VER_EXEC_FORM routine                                   ** 36739900
.**                                                                  ** 36774800
.** ROUTINES CALLED: none                                            ** 36809700
.**                                                                  ** 36844600
.********************************************************************** 36879500
.*                                                                      36914400
.LH0060A ANOP                               Entry point of routine.     36949300
.*                                                                      36984200
.********************************************************************** 37019100
.** Checks if positional parameters are specified with FIND or       ** 37054000
.** TERMINATE requests.  If they are, generates an error message     ** 37088900
.** and sets the parameter list error flag on.                       ** 37123800
.********************************************************************** 37158700
.*                                                                      37193600
         AIF   ((0 NE N'&SYSLIST) AND                                  X37228500
               (('TERMINATE' EQ '&REQUEST') OR                         X37263400
               ('FIND' EQ '&REQUEST'))).LH0060T                         37298300
         AGO   .LH0061                                                  37333200
.*                                                                      37368100
.*                                                                      37403000
.********************************************************************** 37437900
.** Generates the error message: AHA060 SJFACC ERROR:                ** 37472800
.** POSITIONAL PARAMETERS SPECIFIED, BUT MUTUALLY EXCLUSIVE          ** 37507700
.** WITH THE REQUEST TYPE.                                           ** 37542600
.********************************************************************** 37577500
.*                                                                      37612400
.LH0060T MNOTE &ERRCODE,'&MSG060A'                                      37647300
         MNOTE '&MSG060B.THE REQUEST TYPE.'                             37682200
&PARMERR SETB  1                                                        37717100
.*                                                                      37752000
.*                                                                      37786900
.********************************************************************** 37821800
.** Checks if any specified keyword parameters are extraneous.       ** 37856700
.** For each extraneous keyword, generates an error message and      ** 37891600
.** sets the parameter list error flag on.                           ** 37926500
.********************************************************************** 37961400
.*                                                                      37996300
.********************************************************************** 38031200
.** Checks if REQTBL is specified and the request type is FIND       ** 38066100
.** or TERMINATE.                                                    ** 38101000
.********************************************************************** 38135900
*                                                                       38170800
.LH0061  AIF   ((0 NE N'&REQTBL) AND                                   X38205700
               (('TERMINATE' EQ '&REQUEST') OR                         X38240600
               ('FIND' EQ '&REQUEST'))).LH0061T                         38275500
         AGO   .LH0062                                                  38310400
.*                                                                      38345300
.*                                                                      38380200
.********************************************************************** 38415100
.** Generates the error message: AHA050 SJFACC ERROR: KEYWORD        ** 38450000
.** PARAMETER REQTBL SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH          ** 38484900
.** THE REQUEST TYPE.                                                ** 38519800
.********************************************************************** 38554700
.*                                                                      38589600
.LH0061T MNOTE &ERRCODE,'&MSG050A.REQTBL'                               38624500
         MNOTE '&MSG050B.THE REQUEST TYPE.'                             38659400
&PARMERR SETB  1                                                        38694300
.*                                                                      38729200
.*                                                                      38764100
.********************************************************************** 38799000
.** Checks if NUMREQ is specified and the request type is FIND       ** 38833900
.** or TERMINATE.                                                    ** 38868800
.********************************************************************** 38903700
.*                                                                      38938600
.LH0062  AIF   ((0 NE N'&NUMREQ) AND                                   X38973500
               (('TERMINATE' EQ '&REQUEST') OR                         X39008400
               ('FIND' EQ '&REQUEST'))).LH0062T                         39043300
         AGO   .LH0063                                                  39078200
.*                                                                      39113100
.********************************************************************** 39148000
.** Generates the error message: AHA050 SJFACC ERROR: KEYWORD        ** 39182900
.** PARAMETER NUMREQ SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH          ** 39217800
.** THE REQUEST TYPE.                                                ** 39252700
.********************************************************************** 39287600
.*                                                                      39322500
.LH0062T MNOTE &ERRCODE,'&MSG050A.NUMREQ'                               39357400
         MNOTE '&MSG050B.THE REQUEST TYPE.'                             39392300
&PARMERR SETB  1                                                        39427200
.*                                                                      39462100
.*                                                                      39497000
.********************************************************************** 39531900
.** Checks if RECOVRY is specified and the request type is           ** 39566800
.** TERMINATE.                                                       ** 39601700
.********************************************************************** 39636600
.*                                                                      39671500
.LH0063  AIF   ((0 NE N'&RECOVRY) AND                                  X39706400
               ('TERMINATE' EQ '&REQUEST')).LH0063T                     39741300
         AGO   .LH0064                                                  39776200
.*                                                                      39811100
.*                                                                      39846000
.********************************************************************** 39880900
.** Generates the error message: AHA050 SJFACC ERROR: KEYWORD        ** 39915800
.** PARAMETER RECOVRY SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH         ** 39950700
.** THE REQUEST TYPE.                                                ** 39985600
.********************************************************************** 40020500
.*                                                                      40055400
.LH0063T MNOTE &ERRCODE,'&MSG050A.RECOVRY'                              40090300
         MNOTE '&MSG050B.THE REQUEST TYPE.'                             40125200
&PARMERR SETB  1                                                        40160100
.*                                                                      40195000
.*                                                                      40229900
.********************************************************************** 40264800
.** Checks if CLEANUP is specified and the request type is           ** 40299700
.** TERMINATE.                                                       ** 40334600
.********************************************************************** 40369500
.*                                                                      40404400
.*                                                                      40439300
.LH0064  AIF   ((0 NE N'&CLEANUP) AND                                  X40474200
               ('TERMINATE' EQ '&REQUEST')).LH0064T                     40509100
         AGO   .LH0065                                                  40544000
.*                                                                      40578900
.********************************************************************** 40613800
.** Generates the error message: AHA050 SJFACC ERROR: KEYWORD        ** 40648700
.** PARAMETER CLEANUP SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH         ** 40683600
.** THE REQUEST TYPE.                                                ** 40718500
.********************************************************************** 40753400
.*                                                                      40788300
.LH0064T MNOTE &ERRCODE,'&MSG050A.CLEANUP'                              40823200
         MNOTE '&MSG050B.THE REQUEST TYPE.'                             40858100
&PARMERR SETB  1                                                        40893000
.*                                                                      40927900
.*                                                                      40962800
.********************************************************************** 40997700
.** Checks if NONAUTH is specified and the request type is FIND      ** 41032600
.** or TERMINATE.                                                    ** 41067500
.********************************************************************** 41102400
.*                                                                      41137300
.LH0065  AIF   ((0 NE N'&NONAUTH) AND                                  X41172200
               (('TERMINATE' EQ '&REQUEST') OR                         X41207100
               ('FIND' EQ '&REQUEST'))).LH0065T                         41242000
         AGO   .LH0066                                                  41276900
.*                                                                      41311800
.********************************************************************** 41346700
.** Generates the error message: AHA050 SJFACC ERROR: KEYWORD        ** 41381600
.** PARAMETER NONAUTH SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH         ** 41416500
.** THE REQUEST TYPE.                                                ** 41451400
.********************************************************************** 41486300
.*                                                                      41521200
.LH0065T MNOTE &ERRCODE,'&MSG050A.NONAUTH'                              41556100
         MNOTE '&MSG050B.THE REQUEST TYPE.'                             41591000
&PARMERR SETB  1                                                        41625900
.*                                                                      41660800
.*                                                                      41695700
.********************************************************************** 41730600
.** Checks if SYSUSER is specified and the request type is FIND      ** 41765500
.** or TERMINATE.                                                    ** 41800400
.********************************************************************** 41835300
.*                                                                      41870200
.LH0066  AIF   ((0 NE N'&SYSUSER) AND                                  X41905100
               (('TERMINATE' EQ '&REQUEST') OR                         X41940000
               ('FIND' EQ '&REQUEST'))).LH0066T                         41974900
         AGO   .LH0067                                                  42009800
.*                                                                      42044700
.********************************************************************** 42079600
.** Generates the error message: AHA050 SJFACC ERROR: KEYWORD        ** 42114500
.** PARAMETER SYSUSER SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH         ** 42149400
.** THE REQUEST TYPE.                                                ** 42184300
.********************************************************************** 42219200
.*                                                                      42254100
.LH0066T MNOTE &ERRCODE,'&MSG050A.SYSUSER'                              42289000
         MNOTE '&MSG050B.THE REQUEST TYPE.'                             42323900
&PARMERR SETB  1                                                        42358800
.*                                                                      42393700
.*                                                                      42428600
.********************************************************************** 42463500
.** Checks if TOKEN is specified and the request type is             ** 42498400
.** TERMINATE.                                                       ** 42533300
.********************************************************************** 42568200
.*                                                                      42603100
.LH0067  AIF   ((0 NE N'&TOKEN) AND                                    X42638000
               ('TERMINATE' EQ '&REQUEST')).LH0067T                     42672900
         AGO   .LH0068                                                  42707800
.*                                                                      42742700
.********************************************************************** 42777600
.** Generates the error message: AHA050 SJFACC ERROR: KEYWORD        ** 42812500
.** PARAMETER TOKEN SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH           ** 42847400
.** THE REQUEST TYPE.                                                ** 42882300
.********************************************************************** 42917200
.*                                                                      42952100
.LH0067T MNOTE &ERRCODE,'&MSG050A.TOKEN'                                42987000
         MNOTE '&MSG050B.THE REQUEST TYPE.'                             43021900
&PARMERR SETB  1                                                        43056800
.*                                                                      43091700
.*                                                                      43126600
.********************************************************************** 43161500
.** Checks if VERB is specified and the request type is              ** 43196400
.** TERMINATE.                                                       ** 43231300
.********************************************************************** 43266200
.*                                                                      43301100
.LH0068  AIF   ((0 NE N'&VERB) AND                                     X43336000
               ('TERMINATE' EQ '&REQUEST')).LH0068T                     43370900
         AGO   .LH0069                                                  43405800
.*                                                                      43440700
.********************************************************************** 43475600
.** Generates the error message: AHA050 SJFACC ERROR: KEYWORD        ** 43510500
.** PARAMETER VERB SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH            ** 43545400
.** THE REQUEST TYPE.                                                ** 43580300
.********************************************************************** 43615200
.*                                                                      43650100
.LH0068T MNOTE &ERRCODE,'&MSG050A.VERB'                                 43685000
         MNOTE '&MSG050B.THE REQUEST TYPE.'                             43719900
&PARMERR SETB  1                                                        43754800
.*                                                                      43789700
.*                                                                      43824600
.********************************************************************** 43859500
.** Checks if LABEL is specified and the request type is             ** 43894400
.** RETRIEVE or TERMINATE.                                           ** 43929300
.********************************************************************** 43964200
.*                                                                      43999100
.LH0069  AIF   ((0 NE N'&LABEL) AND                                    X44034000
               (('TERMINATE' EQ '&REQUEST') OR                         X44068900
               ('RETRIEVE' EQ '&REQUEST'))).LH0069T                     44103800
         AGO   .LH006A                                                  44138700
.*                                                                      44173600
.********************************************************************** 44208500
.** Generates the error message: AHA050 SJFACC ERROR:                ** 44243400
.** KEYWORD PARAMETER LABEL SPECIFIED, BUT MUTUALLY                  ** 44278300
.** EXCLUSIVE WITH THE REQUEST TYPE.                                 ** 44313200
.********************************************************************** 44348100
.*                                                                      44383000
.LH0069T MNOTE &ERRCODE,'&MSG050A.LABEL'                                44417900
         MNOTE '&MSG050B.THE REQUEST TYPE.'                             44452800
&PARMERR SETB  1                                                        44487700
.*                                                                      44522600
.*                                                                      44557500
.********************************************************************** 44592400
.** Checks if CONTINU is specified and the request type is FIND      ** 44627300
.** or TERMINATE.                                                    ** 44662200
.********************************************************************** 44697100
.*                                                                      44732000
.LH006A  AIF   ((0 NE N'&CONTINU) AND                                  X44766900
               (('TERMINATE' EQ '&REQUEST') OR                         X44801800
               ('FIND' EQ '&REQUEST'))).LH006AT                         44836700
         AGO   .LH006B                                                  44871600
.*                                                                      44906500
.********************************************************************** 44941400
.** Generates the error message: AHA050 SJFACC ERROR: KEYWORD        ** 44976300
.** PARAMETER CONTINU SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH         ** 45011200
.** THE REQUEST TYPE.                                                ** 45046100
.********************************************************************** 45081000
.*                                                                      45115900
.LH006AT MNOTE &ERRCODE,'&MSG050A.CONTINU'                              45150800
         MNOTE '&MSG050B.THE REQUEST TYPE.'                             45185700
&PARMERR SETB  1                                                        45220600
.*                                                                      45255500
.*                                                                      45290400
.********************************************************************** 45325300
.** Checks if UPDJRNL is specified and the request type is FIND,     ** 45360200
.** TERMINATE, RETRIEVE, or FINDRET.                                 ** 45395100
.********************************************************************** 45430000
.*                                                                      45464900
.LH006B  AIF   ((0 NE N'&UPDJRNL) AND                                  X45499800
               (('TERMINATE' EQ '&REQUEST') OR                         X45534700
               ('RETRIEVE' EQ '&REQUEST') OR                           X45569600
               ('FINDRET' EQ '&REQUEST') OR                            X45604500
               ('FIND' EQ '&REQUEST'))).LH006BT                         45639400
         AGO   .LH006C                                                  45674300
.*                                                                      45709200
.********************************************************************** 45744100
.** Generates the error message: AHA050 SJFACC ERROR: KEYWORD        ** 45779000
.** PARAMETER UPDJRNL SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH         ** 45813900
.** THE REQUEST TYPE.                                                ** 45848800
.********************************************************************** 45883700
.*                                                                      45918600
.LH006BT MNOTE &ERRCODE,'&MSG050A.UPDJRNL'                              45953500
         MNOTE '&MSG050B.THE REQUEST TYPE.'                             45988400
&PARMERR SETB  1                                                        46023300
.*                                                                      46058200
.*                                                                      46093100
.********************************************************************** 46128000
.** Checks if UPDALTS is specified and the request type is FIND,     ** 46162900
.** TERMINATE, RETRIEVE, or FINDRET.                                 ** 46197800
.********************************************************************** 46232700
.*                                                                      46267600
.LH006C  AIF   ((0 NE N'&UPDALTS) AND                                  X46302500
               (('TERMINATE' EQ '&REQUEST') OR                         X46337400
               ('RETRIEVE' EQ '&REQUEST') OR                           X46372300
               ('FINDRET' EQ '&REQUEST') OR                            X46407200
               ('FIND' EQ '&REQUEST'))).LH006CT                         46442100
         AGO   .LH006D                                                  46477000
.*                                                                      46511900
.********************************************************************** 46546800
.** Generates the error message: AHA050 SJFACC ERROR: KEYWORD        ** 46581700
.** PARAMETER UPDALTS SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH         ** 46616600
.** THE REQUEST TYPE.                                                ** 46651500
.********************************************************************** 46686400
.*                                                                      46721300
.LH006CT MNOTE &ERRCODE,'&MSG050A.UPDALTS'                              46756200
         MNOTE '&MSG050B.THE REQUEST TYPE.'                             46791100
&PARMERR SETB  1                                                        46826000
.*                                                                      46860900
.*                                                                      46895800
.********************************************************************** 46930700
.** Checks if FNDNEXT is specified and the request type is UPDATE,   ** 46965600
.** RETRIEVE or TERMINATE.                                           ** 47000500
.********************************************************************** 47035400
.*                                                                      47070300
.LH006D  AIF   ((0 NE N'&FNDNEXT) AND                                  X47105200
               (('UPDATE' EQ '&REQUEST') OR                            X47140100
               ('TERMINATE' EQ '&REQUEST') OR                          X47175000
               ('RETRIEVE' EQ '&REQUEST'))).LH006DT                     47209900
         AGO   .LH006E                                                  47244800
.*                                                                      47279700
.********************************************************************** 47314600
.** Generates the error message: AHA050 SJFACC ERROR: KEYWORD        ** 47349500
.** PARAMETER FNDNEXT SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH         ** 47384400
.** THE REQUEST TYPE.                                                ** 47419300
.********************************************************************** 47454200
.*                                                                      47489100
.LH006DT MNOTE &ERRCODE,'&MSG050A.FNDNEXT'                              47524000
         MNOTE '&MSG050B.THE REQUEST TYPE.'                             47558900
&PARMERR SETB  1                                                        47593800
.*                                                                      47628700
.*                                                                      47663600
.********************************************************************** 47698500
.** Checks if FNDWTKN is specified and the request type is UPDATE,   ** 47733400
.** RETRIEVE or TERMINATE.                                           ** 47768300
.********************************************************************** 47803200
.*                                                                      47838100
.LH006E  AIF   ((0 NE N'&FNDWTKN) AND                                  X47873000
               (('UPDATE' EQ '&REQUEST') OR                            X47907900
               ('TERMINATE' EQ '&REQUEST') OR                          X47942800
               ('RETRIEVE' EQ '&REQUEST'))).LH006ET                     47977700
         AGO   .LH006F                                                  48012600
.*                                                                      48047500
.********************************************************************** 48082400
.** Generates the error message: AHA050 SJFACC ERROR: KEYWORD        ** 48117300
.** PARAMETER FNDWTKN SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH         ** 48152200
.** THE REQUEST TYPE.                                                ** 48187100
.********************************************************************** 48222000
.*                                                                      48256900
.LH006ET MNOTE &ERRCODE,'&MSG050A.FNDWTKN'                              48291800
         MNOTE '&MSG050B.THE REQUEST TYPE.'                             48326700
&PARMERR SETB  1                                                        48361600
.*                                                                      48396500
.*                                                                      48431400
.********************************************************************** 48466300
.** Checks if FNDLEVL is specified and the request type is UPDATE,   ** 48501200
.** RETRIEVE or TERMINATE.                                           ** 48536100
.********************************************************************** 48571000
.*                                                                      48605900
.LH006F  AIF   ((0 NE N'&FNDLEVL) AND                                  X48640800
               (('UPDATE' EQ '&REQUEST') OR                            X48675700
               ('TERMINATE' EQ '&REQUEST') OR                          X48710600
               ('RETRIEVE' EQ '&REQUEST'))).LH006FT                     48745500
         AGO   .LH006G                                                  48780400
.*                                                                      48815300
.********************************************************************** 48850200
.** Generates the error message: AHA050 SJFACC ERROR: KEYWORD        ** 48885100
.** PARAMETER FNDLEVL SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH         ** 48920000
.** THE REQUEST TYPE                                                 ** 48954900
.********************************************************************** 48989800
.*                                                                      49024700
.LH006FT MNOTE &ERRCODE,'&MSG050A.FNDLEVL'                              49059600
         MNOTE '&MSG050B.THE REQUEST TYPE.'                             49094500
&PARMERR SETB  1                                                        49129400
.*                                                                      49164300
.*                                                                      49199200
.********************************************************************** 49234100
.** Checks if FNDSTPN is specified and the request type is UPDATE,   ** 49269000
.** RETRIEVE or TERMINATE.                                           ** 49303900
.********************************************************************** 49338800
.*                                                                      49373700
.LH006G  AIF   ((0 NE N'&FNDSTPN) AND                                  X49408600
               (('UPDATE' EQ '&REQUEST') OR                            X49443500
               ('TERMINATE' EQ '&REQUEST') OR                          X49478400
               ('RETRIEVE' EQ '&REQUEST'))).LH006GT                     49513300
         AGO   .LH006H                                                  49548200
.*                                                                      49583100
.********************************************************************** 49618000
.** Generates the error message: AHA050 SJFACC ERROR: KEYWORD        ** 49652900
.** PARAMETER FNDSTPN SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH         ** 49687800
.** THE REQUEST TYPE.                                                ** 49722700
.********************************************************************** 49757600
.*                                                                      49792500
.LH006GT MNOTE &ERRCODE,'&MSG050A.FNDSTPN'                              49827400
         MNOTE '&MSG050B.THE REQUEST TYPE.'                             49862300
&PARMERR SETB  1                                                        49897200
.*                                                                      49932100
.*                                                                      49967000
.********************************************************************** 50001900
.** Checks if FNDPRLB is specified and the request type is UPDATE,   ** 50036800
.** RETRIEVE or TERMINATE.                                           ** 50071700
.********************************************************************** 50106600
.*                                                                      50141500
.LH006H  AIF   ((0 NE N'&FNDPRLB) AND                                  X50176400
               (('UPDATE' EQ '&REQUEST') OR                            X50211300
               ('TERMINATE' EQ '&REQUEST') OR                          X50246200
               ('RETRIEVE' EQ '&REQUEST'))).LH006HT                     50281100
         AGO   .LH006I                                                  50316000
.*                                                                      50350900
.********************************************************************** 50385800
.** Generates the error message: AHA050 SJFACC ERROR: KEYWORD        ** 50420700
.** PARAMETER FNDPRLB SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH         ** 50455600
.** THE REQUEST TYPE.                                                ** 50490500
.********************************************************************** 50525400
.*                                                                      50560300
.LH006HT MNOTE &ERRCODE,'&MSG050A.FNDPRLB'                              50595200
         MNOTE '&MSG050B.THE REQUEST TYPE.'                             50630100
&PARMERR SETB  1                                                        50665000
.*                                                                      50699900
.*                                                                      50734800
.********************************************************************** 50769700
.** Checks if FNDJBTK is specified and the request type is UPDATE,   ** 50770400
.** RETRIEVE or TERMINATE.                                       @D3A** 50771100
.********************************************************************** 50771800
.*                                                                      50772500
.LH006I  AIF   ((0 NE N'&FNDJBTK) AND                                  X50773200
               (('UPDATE' EQ '&REQUEST') OR                            X50773900
               ('TERMINATE' EQ '&REQUEST') OR                          X50774600
               ('RETRIEVE' EQ '&REQUEST'))).LH006IT                @D3A 50775300
         AGO   .LH006J                                             @D3A 50776000
.*                                                                      50776700
.********************************************************************** 50777400
.** Generates the error message: AHA050 SJFACC ERROR: KEYWORD        ** 50778100
.** PARAMETER FNDJBTK SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH         ** 50778800
.** THE REQUEST TYPE.                                            @D3A** 50779500
.********************************************************************** 50780200
.*                                                                      50780900
.LH006IT MNOTE &ERRCODE,'&MSG050A.FNDJBTK'                         @D3A 50781600
         MNOTE '&MSG050B.THE REQUEST TYPE.'                        @D3A 50782300
&PARMERR SETB  1                                                   @D3A 50783000
.*                                                                      50783700
.*                                                                      50784400
.********************************************************************** 50785100
.** Checks if FNDCSTK is specified and the request type is UPDATE,   ** 50785800
.** RETRIEVE or TERMINATE.                                       @D3A** 50786500
.********************************************************************** 50787200
.*                                                                      50787900
.LH006J  AIF   ((0 NE N'&FNDCSTK) AND                                  X50788600
               (('UPDATE' EQ '&REQUEST') OR                            X50789300
               ('TERMINATE' EQ '&REQUEST') OR                          X50790000
               ('RETRIEVE' EQ '&REQUEST'))).LH006JT                @D3A 50790700
         AGO   .LH0060Z                                            @D3A 50791400
.*                                                                      50792100
.********************************************************************** 50792800
.** Generates the error message: AHA050 SJFACC ERROR: KEYWORD        ** 50793500
.** PARAMETER FNDCSTK SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH         ** 50794200
.** THE REQUEST TYPE.                                            @D3A** 50794900
.********************************************************************** 50795600
.*                                                                      50796300
.LH006JT MNOTE &ERRCODE,'&MSG050A.FNDCSTK'                         @D3A 50797000
         MNOTE '&MSG050B.THE REQUEST TYPE.'                        @D3A 50797700
&PARMERR SETB  1                                                   @D3A 50798400
.*                                                                      50799100
.*                                                                      50799800
.********************************************************************** 50800500
.** Returns from the CHECK_EXTRANEOUS routine. Goes to the label     ** 50804600
.** just after the branch to this routine.                           ** 50839500
.********************************************************************** 50874400
.*                                                                      50909300
.LH0060Z ANOP                                                           50944200
         AGO   .LH0060B                                                 50979100
.*                                                                      51014000
.*                                                                      51048900
.*                                                                      51083800
.********************************************************************** 51118700
.**                                                                  ** 51153600
.** ROUTINE NAME: CHECK_ASIS_PARMS                                   ** 51188500
.**                                                                  ** 51223400
.** FUNCTION: Verifies that asis type parms, which are specified,    ** 51258300
.**           have the correct number of values.                     ** 51293200
.**                                                                  ** 51328100
.** ENTRY: From VER_EXEC_FORM                                        ** 51363000
.**                                                                  ** 51397900
.** INPUT: Asis type keyword macro parameters                        ** 51432800
.**                                                                  ** 51467700
.** OUTPUT: If invalid parameters are detected:                      ** 51502600
.**          1. The parameter list error flag is set on.             ** 51537500
.**          2. Error messages are generated.                        ** 51572400
.**                                                                  ** 51607300
.** EXIT: To VER_EXEC_FORM                                           ** 51642200
.**                                                                  ** 51677100
.** ROUTINES BRANCHED TO: None                                       ** 51712000
.**                                                                  ** 51746900
.********************************************************************** 51781800
.*                                                                      51816700
.LH0070A ANOP                               Entry point of routine.     51851600
.*                                                                      51886500
.********************************************************************** 51921400
.** Verifies the REQTBL key word parameter field has no more than 1  ** 51956300
.** value specified.  If it is specified and has more than one       ** 51991200
.** value, it generates error message 030 and sets the parameter     ** 52026100
.** list error flag on.                                              ** 52061000
.********************************************************************** 52095900
.*                                                                      52130800
         AIF   (N'&REQTBL GT 1).LH0070T                                 52165700
         AGO   .LH0071                                                  52200600
.*                                                                      52235500
.********************************************************************** 52270400
.** Generates the error message: AHA030 SJFACC ERROR: KEYWORD        ** 52305300
.** PARAMETER REQTBL SPECIFIED INCORRECTLY.                          ** 52340200
.********************************************************************** 52375100
.*                                                                      52410000
.LH0070T MNOTE &ERRCODE,'&MSG030A.REQTBL'                               52444900
         MNOTE '&MSG030B'                                               52479800
&PARMERR SETB  1                                                        52514700
.*                                                                      52549600
.*                                                                      52584500
.********************************************************************** 52619400
.** Verifies the NUMREQ key word parameter field has no more than    ** 52654300
.** 1 value specified.  If it is specified and has more than one     ** 52689200
.** value, generates error message 030 and sets the parameter        ** 52724100
.** list error flag on.                                              ** 52759000
.********************************************************************** 52793900
.*                                                                      52828800
.LH0071  AIF   (N'&NUMREQ GT 1).LH0071T                                 52863700
         AGO   .LH0072                                                  52898600
.*                                                                      52933500
.********************************************************************** 52968400
.** Generates the error message: AHA030 SJFACC ERROR: KEYWORD        ** 53003300
.** PARAMETER NUMREQ SPECIFIED INCORRECTLY.                          ** 53038200
.********************************************************************** 53073100
.*                                                                      53108000
.LH0071T MNOTE &ERRCODE,'&MSG030A.NUMREQ'                               53142900
         MNOTE '&MSG030B'                                               53177800
&PARMERR SETB  1                                                        53212700
.*                                                                      53247600
.*                                                                      53282500
.********************************************************************** 53317400
.** Verifies the LOCLSTG key word parameter field has 1 value, if    ** 53352300
.** specified.  If it is specified and has more than one value,      ** 53387200
.** generates error message 30 and sets the parameter list error     ** 53422100
.** flag on.                                                         ** 53457000
.********************************************************************** 53491900
.*                                                                      53526800
.LH0072  AIF   (N'&LOCLSTG GT 1).LH0072T                                53561700
         AGO   .LH0073                                                  53596600
.*                                                                      53631500
.********************************************************************** 53666400
.** Generates the error message: AHA030 SJFACC ERROR: KEYWORD        ** 53701300
.** PARAMETER LOCLSTG SPECIFIED INCORRECTLY.                         ** 53736200
.********************************************************************** 53771100
.*                                                                      53806000
.LH0072T MNOTE &ERRCODE,'&MSG030A.LOCLSTG'                              53840900
         MNOTE '&MSG030B'                                               53875800
&PARMERR SETB  1                                                        53910700
.*                                                                      53945600
.*                                                                      53980500
.********************************************************************** 54015400
.** Verifies the TOKEN key word parameter field has 1 value, if      ** 54050300
.** specified.  If it is specified and has more than one value,      ** 54085200
.** generates error message 030 and sets the parameter list error    ** 54120100
.** flag on.                                                         ** 54155000
.********************************************************************** 54189900
.*                                                                      54224800
.LH0073  AIF   (N'&TOKEN GT 1).LH0073T                                  54259700
         AGO   .LH0074                                                  54294600
.*                                                                      54329500
.********************************************************************** 54364400
.** Generates the error message: AHA030 SJFACC ERROR: KEYWORD        ** 54399300
.** PARAMETER TOKEN SPECIFIED INCORRECTLY.                           ** 54434200
.********************************************************************** 54469100
.*                                                                      54504000
.LH0073T MNOTE &ERRCODE,'&MSG030A.TOKEN'                                54538900
         MNOTE '&MSG030B'                                               54573800
&PARMERR SETB  1                                                        54608700
.*                                                                      54643600
.*                                                                      54678500
.********************************************************************** 54713400
.** Verifies the VERB key word parameter field has 1 value, if       ** 54748300
.** specified.  If it is specified and has more than one value,      ** 54783200
.** generates error message 030 and sets the parameter list error    ** 54818100
.** flag on.                                                         ** 54853000
.********************************************************************** 54887900
.*                                                                      54922800
.LH0074  AIF   (N'&VERB GT 1).LH0074T                                   54957700
         AGO   .LH0075                                                  54992600
.*                                                                      55027500
.********************************************************************** 55062400
.** Generates the error message: AHA030 SJFACC ERROR: KEYWORD        ** 55097300
.** PARAMETER VERB SPECIFIED INCORRECTLY.                            ** 55132200
.********************************************************************** 55167100
.*                                                                      55202000
.LH0074T MNOTE &ERRCODE,'&MSG030A.VERB'                                 55236900
         MNOTE '&MSG030B'                                               55271800
&PARMERR SETB  1                                                        55306700
.*                                                                      55341600
.*                                                                      55376500
.********************************************************************** 55411400
.** Verifies the LABEL key word parameter field has 1 value, if      ** 55446300
.** specified.  If it is specified and has more than one value,      ** 55481200
.** generates error message 030 and sets the parameter list error    ** 55516100
.** flag on.                                                         ** 55551000
.********************************************************************** 55585900
.*                                                                      55620800
.LH0075  AIF   (N'&LABEL GT 1).LH0075T                                  55655700
         AGO   .LH0076                                                  55690600
.*                                                                      55725500
.********************************************************************** 55760400
.** Generates the error message: AHA030 SJFACC ERROR:                ** 55795300
.** KEYWORD PARAMETER LABEL SPECIFIED INCORRECTLY.                   ** 55830200
.********************************************************************** 55865100
.*                                                                      55900000
.LH0075T MNOTE &ERRCODE,'&MSG030A.LABEL'                                55934900
         MNOTE '&MSG030B'                                               55969800
&PARMERR SETB  1                                                        56004700
.*                                                                      56039600
.*                                                                      56074500
.********************************************************************** 56109400
.** Verifies the UPDALTS key word parameter field has 1 value, if    ** 56144300
.** specified.  If it is specified and has more than one value,      ** 56179200
.** generates error message 030 and sets the parameter list error    ** 56214100
.** flag on.                                                         ** 56249000
.********************************************************************** 56283900
.*                                                                      56318800
.LH0076  AIF   (N'&UPDALTS GT 1).LH0076T                                56353700
         AGO   .LH0077                                                  56388600
.*                                                                      56423500
.********************************************************************** 56458400
.** Generates the error message: AHA030 SJFACC ERROR:                ** 56493300
.** KEYWORD PARAMETER UPDALTS SPECIFIED INCORRECTLY.                 ** 56528200
.********************************************************************** 56563100
.*                                                                      56598000
.LH0076T MNOTE &ERRCODE,'&MSG030A.UPDALTS'                              56632900
         MNOTE '&MSG030B'                                               56667800
&PARMERR SETB  1                                                        56702700
.*                                                                      56737600
.*                                                                      56772500
.********************************************************************** 56807400
.** Verifies the FNDSTPN key word parameter field has 1 value, if    ** 56842300
.** specified.  If it is specified and has more than one value,      ** 56877200
.** generates error message 030 and sets the parameter list error    ** 56912100
.** flag on.                                                         ** 56947000
.********************************************************************** 56981900
.*                                                                      57016800
.LH0077  AIF   (N'&FNDSTPN GT 1).LH0077T                                57051700
         AGO   .LH0078                                                  57086600
.*                                                                      57121500
.********************************************************************** 57156400
.** Generates the error message: AHA030 SJFACC ERROR: KEYWORD        ** 57191300
.** PARAMETER FNDSTPN SPECIFIED INCORRECTLY.                         ** 57226200
.********************************************************************** 57261100
.*                                                                      57296000
.LH0077T MNOTE &ERRCODE,'&MSG030A.FNDSTPN'                              57330900
         MNOTE '&MSG030B'                                               57365800
&PARMERR SETB  1                                                        57400700
.*                                                                      57435600
.*                                                                      57470500
.********************************************************************** 57505400
.** Verifies the FNDPRLB key word parameter field has 1 value, if    ** 57540300
.** specified.  If it is specified and has more than one value,      ** 57575200
.** generates error message 030 and sets the parameter list error    ** 57610100
.** flag on.                                                         ** 57645000
.********************************************************************** 57679900
.*                                                                      57714800
.LH0078  AIF   (N'&FNDPRLB GT 1).LH0078T                                57749700
         AGO   .LH0070Z                                                 57784600
.*                                                                      57819500
.********************************************************************** 57854400
.** Generates the error message: AHA030 SJFACC ERROR: KEYWORD        ** 57889300
.** PARAMETER FNDPRLB SPECIFIED INCORRECTLY.                         ** 57924200
.********************************************************************** 57959100
.*                                                                      57994000
.LH0078T MNOTE &ERRCODE,'&MSG030A.FNDPRLB'                              58028900
         MNOTE '&MSG030B'                                               58063800
&PARMERR SETB  1                                                        58098700
.*                                                                      58133600
.*                                                                      58168500
.********************************************************************** 58203400
.** Returns from the CHECK_ASIS_PARMS routine. Branches to the       ** 58238300
.** label just following the branch to this routine.                 ** 58273200
.********************************************************************** 58308100
.*                                                                      58343000
.LH0070Z ANOP                                                           58377900
         AGO   .LH0070B                                                 58412800
.*                                                                      58447700
.*                                                                      58482600
.********************************************************************** 58517500
.**                                                                  ** 58552400
.** ROUTINE NAME: CHECK_CHOICE_PARMS                                 ** 58587300
.**                                                                  ** 58622200
.** DESCRIPTIVE NAME: Check choice-data type macro parameters.       ** 58657100
.**                                                                  ** 58692000
.** ENTRY: From VER_EXEC_FORM routine                                ** 58726900
.**                                                                  ** 58761800
.** INPUT: Choice-data type macro parameters.                        ** 58796700
.**                                                                  ** 58831600
.** OUTPUT: If invalid parameters are detected:                      ** 58866500
.**          1. The parameter list error flag is set on.             ** 58901400
.**          2. Error messages are generated.                        ** 58936300
.**                                                                  ** 58971200
.**                                                                  ** 59006100
.** EXIT: To VER_EXEC_FORM routine                                   ** 59041000
.**                                                                  ** 59075900
.** ROUTINES CALLED: None                                            ** 59110800
.**                                                                  ** 59145700
.********************************************************************** 59180600
.*                                                                      59215500
.LH0080A ANOP                                                           59250400
.*                                                                      59285300
.********************************************************************** 59320200
.** Verifies that the REQUEST keyword parameter has a valid          ** 59355100
.** value, if it is specified. Valid values are: FIND, FINDRET,      ** 59390000
.** FINDUPD, UPDATE, RETRIEVE, or TERMINATE.  If an invalid value    ** 59424900
.** is specified, generates error message 030 and sets the           ** 59459800
.** parameter list error flag on.                                    ** 59494700
.********************************************************************** 59529600
.*                                                                      59564500
         AIF   (0 EQ N'&REQUEST).LH0081                                 59599400
         AIF   (('FIND' EQ '&REQUEST') OR                              X59634300
               ('FINDRET' EQ '&REQUEST') OR                            X59669200
               ('FINDUPD' EQ '&REQUEST') OR                            X59704100
               ('UPDATE' EQ '&REQUEST') OR                             X59739000
               ('RETRIEVE' EQ '&REQUEST') OR                           X59773900
               ('TERMINATE' EQ '&REQUEST')).LH0081                      59808800
.*                                                                      59843700
.********************************************************************** 59878600
.** Generates the error message: AHA030 SJFACC ERROR: KEYWORD        ** 59913500
.** PARAMETER REQUEST SPECIFIED INCORRECTLY.                         ** 59948400
.********************************************************************** 59983300
.*                                                                      60018200
         MNOTE &ERRCODE,'&MSG030A.REQUEST'                              60053100
         MNOTE '&MSG030B'                                               60088000
&PARMERR SETB  1                                                        60122900
.*                                                                      60157800
.*                                                                      60192700
.********************************************************************** 60227600
.** Verifies that the RECOVRY keyword parameter has a valid          ** 60262500
.** value, if it is specified.  Valid values are YES or NO.          ** 60297400
.** If an invalid value is specified, generates error message 030    ** 60332300
.** and sets the parameter list error flag on.                       ** 60367200
.********************************************************************** 60402100
.*                                                                      60437000
.LH0081  AIF   (0 EQ N'&RECOVRY).LH0082     Was RECOVRY specified?      60471900
         AIF   (('YES' EQ '&RECOVRY') OR                               X60506800
               ('NO' EQ '&RECOVRY')).LH0082                             60541700
.*                                                                      60576600
.********************************************************************** 60611500
.** Generates the error message: AHA030 SJFACC ERROR: KEYWORD        ** 60646400
.** PARAMETER RECOVRY SPECIFIED INCORRECTLY.                         ** 60681300
.********************************************************************** 60716200
.*                                                                      60751100
         MNOTE &ERRCODE,'&MSG030A.RECOVRY'                              60786000
         MNOTE '&MSG030B'                                               60820900
&PARMERR SETB  1                                                        60855800
.*                                                                      60890700
.*                                                                      60925600
.********************************************************************** 60960500
.** Verifies that the CLEANUP keyword parameter has a valid          ** 60995400
.** value, if it is specified.  Valid values are YES or NO.          ** 61030300
.** If an invalid value is specified, generates error message 030    ** 61065200
.** and sets the parameter list error flag on.                       ** 61100100
.********************************************************************** 61135000
.*                                                                      61169900
.LH0082  AIF   (0 EQ N'&CLEANUP).LH0083                                 61204800
         AIF   (('YES' EQ '&CLEANUP') OR                               X61239700
               ('NO' EQ '&CLEANUP')).LH0083                             61274600
.*                                                                      61309500
.********************************************************************** 61344400
.** Generates the error message: AHA030 SJFACC ERROR: KEYWORD        ** 61379300
.** PARAMETER CLEANUP SPECIFIED INCORRECTLY.                         ** 61414200
.********************************************************************** 61449100
.*                                                                      61484000
         MNOTE &ERRCODE,'&MSG030A.CLEANUP'                              61518900
         MNOTE '&MSG030B'                                               61553800
&PARMERR SETB  1                                                        61588700
.*                                                                      61623600
.*                                                                      61658500
.********************************************************************** 61693400
.** Verifies the NONAUTH keyword parameter has a valid value, if it  ** 61728300
.** is specified.  Valid values are YES or NO.  If an invalid        ** 61763200
.** value is specified, generates error message 030 and sets the     ** 61798100
.** parameter list error flag on.                                    ** 61833000
.********************************************************************** 61867900
.*                                                                      61902800
.LH0083  AIF   (0 EQ N'&NONAUTH).LH0084      Was NONAUTH specified?     61937700
         AIF   (('YES' EQ '&NONAUTH') OR                               X61972600
               ('NO' EQ '&NONAUTH')).LH0084  Yes, YES/NO?               62007500
.*                                                                      62042400
.********************************************************************** 62077300
.** Generates the error message: AHA030 SJFACC ERROR: KEYWORD        ** 62112200
.** PARAMETER NONAUTH SPECIFIED INCORRECTLY.                         ** 62147100
.********************************************************************** 62182000
.*                                                                      62216900
         MNOTE &ERRCODE,'&MSG030A.NONAUTH'                              62251800
         MNOTE '&MSG030B'                                               62286700
&PARMERR SETB  1                                                        62321600
.*                                                                      62356500
.*                                                                      62391400
.********************************************************************** 62426300
.** Verifies the SYSUSER keyword parameter has a valid value, if     ** 62461200
.** it is specified.  Valid values are YES or NO.  If an invalid     ** 62496100
.** value is specified, generates error message 030 and sets the     ** 62531000
.** parameter list error flag on.                                    ** 62565900
.********************************************************************** 62600800
.*                                                                      62635700
.LH0084  AIF   (0 EQ N'&SYSUSER).LH0085     Was SYSUSER specified?      62670600
         AIF   (('YES' EQ '&SYSUSER') OR                               X62705500
               ('NO' EQ '&SYSUSER')).LH0085  Yes, value YES/NO?         62740400
.*                                                                      62775300
.********************************************************************** 62810200
.** Generates the error message: AHA030 SJFACC ERROR: KEYWORD        ** 62845100
.** PARAMETER SYSUSER SPECIFIED INCORRECTLY.                         ** 62880000
.********************************************************************** 62914900
.*                                                                      62949800
         MNOTE &ERRCODE,'&MSG030A.SYSUSER'                              62984700
         MNOTE '&MSG030B'                                               63019600
&PARMERR SETB  1                                                        63054500
.*                                                                      63089400
.*                                                                      63124300
.********************************************************************** 63159200
.** Verifies the CONTINU keyword parameter has a valid value, if     ** 63194100
.** it is specified.  Valid values are YES or NO.  If an invalid     ** 63229000
.** value is specified, generates error message 030 and sets the     ** 63263900
.** parameter list error flag on.                                    ** 63298800
.********************************************************************** 63333700
.*                                                                      63368600
.LH0085  AIF   (0 EQ N'&CONTINU).LH0086     Was CONTINU specified?      63403500
         AIF   (('YES' EQ '&CONTINU') OR                               X63438400
               ('NO' EQ '&CONTINU')).LH0086  Yes, value YES/NO?         63473300
.*                                                                      63508200
.********************************************************************** 63543100
.** Generates the error message: AHA030 SJFACC ERROR: KEYWORD        ** 63578000
.** PARAMETER CONTINU SPECIFIED INCORRECTLY.                         ** 63612900
.********************************************************************** 63647800
.*                                                                      63682700
         MNOTE &ERRCODE,'&MSG030A.CONTINU'                              63717600
         MNOTE '&MSG030B'                                               63752500
&PARMERR SETB  1                                                        63787400
.*                                                                      63822300
.*                                                                      63857200
.********************************************************************** 63892100
.** Verifies the UPDJRNL keyword parameter has a valid value, if     ** 63927000
.** it is specified.  Valid values are YES or NO.  If an invalid     ** 63961900
.** value is specified, generates error message 030 and sets the     ** 63996800
.** parameter list error flag on.                                    ** 64031700
.********************************************************************** 64066600
.*                                                                      64101500
.LH0086  AIF   (0 EQ N'&UPDJRNL).LH0087     Was UPDJRNL specified?      64136400
         AIF   (('YES' EQ '&UPDJRNL') OR                               X64171300
               ('NO' EQ '&UPDJRNL')).LH0087  Yes, value YES/NO?         64206200
.*                                                                      64241100
.********************************************************************** 64276000
.** Generates the error message: AHA030 SJFACC ERROR: KEYWORD        ** 64310900
.** PARAMETER UPDJRNL SPECIFIED INCORRECTLY.                         ** 64345800
.********************************************************************** 64380700
.*                                                                      64415600
         MNOTE &ERRCODE,'&MSG030A.UPDJRNL'                              64450500
         MNOTE '&MSG030B'                                               64485400
&PARMERR SETB  1                                                        64520300
.*                                                                      64555200
.*                                                                      64590100
.********************************************************************** 64625000
.** Verifies the FNDNEXT keyword parameter has a valid value, if     ** 64659900
.** it is specified.  Valid values are YES or NO.  If an invalid     ** 64694800
.** value is specified, generates error message 030 and sets the     ** 64729700
.** parameter list error flag on.                                    ** 64764600
.********************************************************************** 64799500
.*                                                                      64834400
.LH0087  AIF   (0 EQ N'&FNDNEXT).LH0088     Was FNDNEXT specified?      64869300
         AIF   (('YES' EQ '&FNDNEXT') OR                               X64904200
               ('NO' EQ '&FNDNEXT')).LH0088  Yes, value YES/NO?         64939100
.*                                                                      64974000
.********************************************************************** 65008900
.** Generates the error message: AHA030 SJFACC ERROR: KEYWORD        ** 65043800
.** PARAMETER FNDNEXT SPECIFIED INCORRECTLY.                         ** 65078700
.********************************************************************** 65113600
.*                                                                      65148500
         MNOTE &ERRCODE,'&MSG030A.FNDNEXT'                              65183400
         MNOTE '&MSG030B'                                               65218300
&PARMERR SETB  1                                                        65253200
.*                                                                      65288100
.*                                                                      65323000
.********************************************************************** 65357900
.** Verifies the FNDWTKN keyword parameter has a valid value, if     ** 65392800
.** it is specified.  Valid values are YES or NO.  If an invalid     ** 65427700
.** value is specified, generates error message 030 and sets the     ** 65462600
.** parameter list error flag on.                                    ** 65497500
.********************************************************************** 65532400
.*                                                                      65567300
.LH0088  AIF   (0 EQ N'&FNDWTKN).LH0089     Was FNDWTKN specified?      65602200
         AIF   (('YES' EQ '&FNDWTKN') OR                               X65637100
               ('NO' EQ '&FNDWTKN')).LH0089  Yes, value YES/NO?         65672000
.*                                                                      65706900
.********************************************************************** 65741800
.** Generates the error message: AHA030 SJFACC ERROR: KEYWORD        ** 65776700
.** PARAMETER FNDWTKN SPECIFIED INCORRECTLY.                         ** 65811600
.********************************************************************** 65846500
.*                                                                      65881400
         MNOTE &ERRCODE,'&MSG030A.FNDWTKN'                              65916300
         MNOTE '&MSG030B'                                               65951200
&PARMERR SETB  1                                                        65986100
.*                                                                      66021000
.*                                                                      66055900
.********************************************************************** 66090800
.** Verifies the FNDLEVL keyword parameter has a valid value, if     ** 66125700
.** it is specified.  Valid values are JOB, STEP or CURRSTEP.        ** 66160600
.** If an invalid value is specified, generates error message 030    ** 66195500
.** and sets the parameter list error flag on.                       ** 66230400
.********************************************************************** 66265300
.*                                                                      66300200
.LH0089  AIF   (0 EQ N'&FNDLEVL).LH008A     Was FNDLEVL specified?      66335100
         AIF   (('JOB' EQ '&FNDLEVL') OR                               X66370000
               ('STEP' EQ '&FNDLEVL') OR                               X66404900
               ('CURRSTEP' EQ '&FNDLEVL')).LH008A   Yes, value JOB,     66439800
.*                                                  STEP, or CURRSTEP?  66474700
.*                                                                      66509600
.********************************************************************** 66544500
.** Generates the error message: AHA030 SJFACC ERROR: KEYWORD        ** 66579400
.** PARAMETER FNDLEVL SPECIFIED INCORRECTLY.                         ** 66614300
.********************************************************************** 66649200
.*                                                                      66684100
         MNOTE &ERRCODE,'&MSG030A.FNDLEVL'                              66719000
         MNOTE '&MSG030B'                                               66753900
&PARMERR SETB  1                                                        66788800
.*                                                                      66823700
.*                                                                      66858600
.********************************************************************** 66893500
.** Verifies the FNDJBTK keyword parameter has a valid value, if     ** 66894300
.** it is specified.  Valid values are YES or NO.  If an invalid     ** 66895100
.** value is specified, generates error message 030 and sets the     ** 66895900
.** parameter list error flag on.                                @D3A** 66896700
.********************************************************************** 66897500
.*                                                                      66898300
.LH008A  AIF   (0 EQ N'&FNDJBTK).LH008B     Was FNDJBTK specified? @D3A 66899100
         AIF   (('YES' EQ '&FNDJBTK') OR                               X66899900
               ('NO' EQ '&FNDJBTK')).LH008B  Yes, value YES/NO?    @D3A 66900700
.*                                                                      66901500
.********************************************************************** 66902300
.** Generates the error message: AHA030 SJFACC ERROR: KEYWORD        ** 66903100
.** PARAMETER FNDJBTK SPECIFIED INCORRECTLY.                     @D3A** 66903900
.********************************************************************** 66904700
.*                                                                      66905500
         MNOTE &ERRCODE,'&MSG030A.FNDJBTK'                         @D3A 66906300
         MNOTE '&MSG030B'                                          @D3A 66907100
&PARMERR SETB  1                                                   @D3A 66907900
.*                                                                      66908700
.*                                                                      66909500
.********************************************************************** 66910300
.** Verifies the FNDCSTK keyword parameter has a valid value, if     ** 66911100
.** it is specified.  Valid values are YES or NO.  If an invalid     ** 66911900
.** value is specified, generates error message 030 and sets the     ** 66912700
.** parameter list error flag on.                                @D3A** 66913500
.********************************************************************** 66914300
.*                                                                      66915100
.LH008B  AIF   (0 EQ N'&FNDCSTK).LH0080Z    Was FNDCSTK specified? @D3A 66915900
         AIF   (('YES' EQ '&FNDCSTK') OR                               X66916700
               ('NO' EQ '&FNDCSTK')).LH0080Z Yes, value YES/NO?    @D3A 66917500
.*                                                                      66918300
.********************************************************************** 66919100
.** Generates the error message: AHA030 SJFACC ERROR: KEYWORD        ** 66919900
.** PARAMETER FNDCSTK SPECIFIED INCORRECTLY.                     @D3A** 66920700
.********************************************************************** 66921500
.*                                                                      66922300
         MNOTE &ERRCODE,'&MSG030A.FNDCSTK'                         @D3A 66923100
         MNOTE '&MSG030B'                                          @D3A 66923900
&PARMERR SETB  1                                                   @D3A 66924700
.*                                                                      66925500
.*                                                                      66926300
.********************************************************************** 66927100
.** Returns from the CHECK_CHOICE_PARMS routine. Returns to the      ** 66928400
.** label just after the branch to this routine.                     ** 66963300
.********************************************************************** 66998200
.*                                                                      67033100
.LH0080Z ANOP                                                           67068000
         AGO   .LH0080B                                                 67102900
.*                                                                      67137800
.********************************************************************** 67172700
.**                                                                  ** 67207600
.** PROCEDURE NAME: TERM_REQ                                         ** 67242500
.**                                                                  ** 67277400
.** DESCRIPTIVE NAME: Processes valid invocation of a TERMINATE      ** 67312300
.**                   request.                                       ** 67347200
.**                                                                  ** 67382100
.** OPERATION: 1. Generates the code to fill in the SJF Access       ** 67417000
.**               Function parameter list for a TERMINATE request.   ** 67451900
.**                                                                  ** 67486800
.**            2. Generates code to invoke SJFREQ with a terminate   ** 67521700
.**               request.                                           ** 67556600
.**                                                                  ** 67591500
.** ENTRY: From EXECUTE_FORM routine                                 ** 67626400
.**                                                                  ** 67661300
.** INPUT: LOCLSTG keyword parameter                                 ** 67696200
.**                                                                  ** 67731100
.** OUTPUT: 1. Assignment statement generated in modified source     ** 67766000
.**            text to set the SJF Access Function parameter list.   ** 67800900
.**                                                                  ** 67835800
.**         2. Invocation of the SJFREQ executable macro.            ** 67870700
.**                                                                  ** 67905600
.** EXIT: To EXECUTE_FORM routine                                    ** 67940500
.**                                                                  ** 67975400
.** ROUTINES BRANCHED TO: None                                       ** 68010300
.**                                                                  ** 68045200
.** MACROS - EXECUTABLE: SJFREQ                                      ** 68080100
.**                                                                  ** 68115000
.********************************************************************** 68149900
*                                                                       68184800
.LH0090A ANOP                                                           68219700
*                                                                       68254600
.********************************************************************** 68289500
.**  Generates assignment statement and accompanying comments in     ** 68324400
.**  modified source text to fill in the SJF Access Function         ** 68359300
.**  parameter list for a request for TERMINATE.                     ** 68394200
.********************************************************************** 68429100
.*                                                                      68464000
*                                                                       68498900
*********************************************************************** 68533800
* Code generated by the SJFACC macro for a TERMINATE request.         * 68568700
* Includes the assignment of fields in the SJF common section of the  * 68603600
* IEFSJACP parameter list, followed by the invocation of the SJFREQ   * 68638500
* macro with a TERMINATE request.                                     * 68673400
*********************************************************************** 68708300
*                                                                       68743200
         MVC SJACID,SJACCID                 Assign function identifier  68778100
*                                           field.                      68813000
         MVI SJACVERS,SJACCVER              Assign version number       68847900
*                                           field.                      68882800
         LA  1,SJACFIXD                     Assign parameter list       68917700
*                                           length field.               68952600
         STH 1,SJACLEN                                                  68987500
         XC  SJACFLAG,SJACFLAG              Unused flag field zeroed.   69022400
         XC  SJACREAS,SJACREAS              Reason code field zeroed.   69057300
         MVC SJACSTOR,&LOCLSTG              LOCLSTG parameter assigned  69092200
*                                           to SJF local storage        69127100
*                                           pointer field.              69162000
.*                                                                      69196900
.*                                                                      69231800
.********************************************************************** 69266700
.**  Generates statements in modified source text to invoke SJFREQ.  ** 69301600
.********************************************************************** 69336500
.*                                                                      69371400
*   Use SJFREQ macro to invoke SJF terminate.                           69406300
         SJFREQ  REQUEST=TERMINATE,PARM=SJACP                           69441200
.********************************************************************** 69476100
.**  Returns from the TERM_REQ routine. Branches to the label        ** 69511000
.**  just after the branch to this routine.                          ** 69545900
.********************************************************************** 69580800
.*                                                                      69615700
         AGO   .LH0090B                     Return to EXECUTE_FORM.     69650600
.*                                                                      69685500
.*                                                                      69720400
.*                                                                      69755300
.********************************************************************** 69790200
.**                                                                  ** 69825100
.** PROCEDURE NAME: SJF_ACC_REQ                                      ** 69860000
.**                                                                  ** 69894900
.** DESCRIPTIVE NAME: Processes valid invocation of an SJF Access    ** 69929800
.**                   Function request.                              ** 69964700
.**                                                                  ** 69999600
.** OPERATION: 1. Generates first block comment for macro output     ** 70034500
.**                                                                  ** 70069400
.**            2. Branches to the routines to generate code to set   ** 70104300
.**               values in the SJF Access Function parameter list   ** 70139200
.**               for an SJF Access Function request.                ** 70174100
.**                                                                  ** 70209000
.**            3. Generates code to invoke SJFREQ with a request     ** 70243900
.**               for the SJF Access Function.                       ** 70278800
.**                                                                  ** 70313700
.** ENTRY: From EXECUTE_FORM routine                                 ** 70348600
.**                                                                  ** 70383500
.** INPUT: None                                                      ** 70418400
.**                                                                  ** 70453300
.** OUTPUT: An invocation of SJFREQ in modified source text.         ** 70488200
.**                                                                  ** 70523100
.** EXIT: To EXECUTE_FORM routine                                    ** 70558000
.**                                                                  ** 70592900
.** ROUTINES BRANCHED TO: 1. ZERO_FIELDS                             ** 70627800
.**                       2. ASSIGN_REQTBL                           ** 70662700
.**                       3. ASSIGN_COMMON_PARMS                     ** 70697600
.**                       4. ASSIGN_UPDATE_PARMS                     ** 70732500
.**                       5. ASSIGN_FIND_PARMS                       ** 70767400
.**                                                                  ** 70802300
.********************************************************************** 70837200
*                                                                       70872100
.LH0100A ANOP                               Entry point of routine.     70907000
.*                                                                      70941900
.********************************************************************** 70976800
.** Generates first block comment describing macro output.           ** 71011700
.********************************************************************** 71046600
.*                                                                      71081500
*                                                                       71116400
*********************************************************************** 71151300
*  Invocation of the SJF Access Function by the SJFACC macro.  The    * 71186200
*  SJF Access Function parameter list, IEFSJACP, is assigned values   * 71221100
*  as indicated in the SJFACC invocation.  SJFREQ is then invoked     * 71256000
*  with a request for the SJF Access Function.                        * 71290900
*********************************************************************** 71325800
*                                                                       71360700
.*                                                                      71395600
.*                                                                      71430500
.********************************************************************** 71465400
.**                                                                  ** 71500300
.** Calls the routines to generate code in modified source text to   ** 71535200
.** fill in the SJF Access Function parameter list.                  ** 71570100
.**                                                                  ** 71605000
.********************************************************************** 71639900
.*                                                                      71674800
.*                                                                      71709700
.********************************************************************** 71744600
.** Branches to the routine which zeros IEFSJACP fields.             ** 71779500
.********************************************************************** 71814400
.*                                                                      71849300
         AGO   .LH0110A                     Branch to ZERO_FIELDS       71884200
.*                                          routine.                    71919100
.LH0110B ANOP                               Label at which to return    71954000
.*                                          from ZERO_FIELDS.           71988900
.*                                                                      72023800
.*                                                                      72058700
.********************************************************************** 72093600
.** Branches to the routine which sets the IEFSJACP fields which     ** 72128500
.** are related to the request table.                                ** 72163400
.********************************************************************** 72198300
.*                                                                      72233200
         AGO   .LH0120A                     Branch to ASSIGN_REQTBL     72268100
.*                                          routine.                    72303000
.LH0120B ANOP                               Label at which to return    72337900
.*                                          from ASSIGN_REQTBL.         72372800
.*                                                                      72407700
.*                                                                      72442600
.********************************************************************** 72477500
.** Branches to the routine which sets the IEFSJACP fields which     ** 72512400
.** are common to most of the request types.                         ** 72547300
.********************************************************************** 72582200
.*                                                                      72617100
         AGO   .LH0130A                     Branch to ASSIGN_COMMON_    72652000
.*                                          PARMS routine.              72686900
.LH0130B ANOP                               Label at which to return    72721800
.*                                          from ASSIGN_COMMON_PARMS.   72756700
.*                                                                      72791600
.*                                                                      72826500
.********************************************************************** 72861400
.** Branches to the routine which sets the IEFSJACP fields which     ** 72896300
.** are used only by the UPDATE and FINDUPD requests.                ** 72931200
.********************************************************************** 72966100
.*                                                                      73001000
         AGO   .LH0140A                     Branch to ASSIGN_UPDATE_    73035900
.*                                          PARMS routine.              73070800
.LH0140B ANOP                               Label at which to return    73105700
.*                                          from ASSIGN_UPDATE_PARMS.   73140600
.*                                                                      73175500
.*                                                                      73210400
.********************************************************************** 73245300
.** Branches to the routine which sets the IEFSJACP fields which     ** 73280200
.** are used only by the FIND, FINDRET and FINDUPD requests.         ** 73315100
.********************************************************************** 73350000
.*                                                                      73384900
         AGO   .LH0150A                     Branch to ASSIGN_FIND_      73419800
.*                                          PARMS routine.              73454700
.LH0150B ANOP                               Label at which to return    73489600
.*                                          from ASSIGN_FIND_PARMS.     73524500
.*                                                                      73559400
.*                                                                      73594300
.********************************************************************** 73629200
.** Generates code in modified source text to invoke SJFREQ with a   ** 73664100
.** request for the SJF Access Function.                             ** 73699000
.********************************************************************** 73733900
.*                                                                      73768800
*                                                                       73803700
*********************************************************************** 73838600
*  Invocation of the SJFREQ macro from the SJFACC macro, with a       * 73873500
*  request for the SJF Access Function.                               * 73908400
*********************************************************************** 73943300
*                                                                       73978200
         SJFREQ REQUEST=ACCESS,PARM=SJACP                               74013100
.*                                                                      74048000
.*                                                                      74082900
.********************************************************************** 74117800
.**  Returns from the SJF_ACC_REQ routine. Branches to the label     ** 74152700
.**  just after the branch to this routine.                          ** 74187600
.********************************************************************** 74222500
.*                                                                      74257400
         AGO   .LH0100B                     Return to EXECUTE_FORM.     74292300
.*                                                                      74327200
.*                                                                      74362100
.*                                                                      74397000
.********************************************************************** 74431900
.**                                                                  ** 74466800
.** PROCEDURE NAME: ZERO_FIELDS                                      ** 74501700
.**                                                                  ** 74536600
.** DESCRIPTIVE NAME: Generates code to zero the SJACFLAG,           ** 74571500
.**                   SJACREAS, and SJACFLDS fields.                 ** 74606400
.**                                                                  ** 74641300
.** FUNCTION:         Generates code to zero the SJACFLAG,           ** 74676200
.**                   SJACREAS, and SJACFLDS fields.  SJACSTOR       ** 74711100
.**                   and SJACTOKN are not zeroed here,              ** 74746000
.**                   so they can be used across multiple            ** 74780900
.**                   invocations (see the routine                   ** 74815800
.**                   ASSIGN_COMMON_PARMS to determine how           ** 74850700
.**                   SJACSTOR and SJACTOKN are set).  SJACID,       ** 74885600
.**                   SJACVERS and SJACLEN are not zeroed as         ** 74920500
.**                   they are always assigned values via the        ** 74955400
.**                   macro.                                         ** 74990300
.**                                                                  ** 75025200
.** ENTRY: From SJF_ACC_REQ                                          ** 75060100
.**                                                                  ** 75095000
.** INPUT: None                                                      ** 75129900
.**                                                                  ** 75164800
.** OUTPUT: Generates assignment statements and accompanying         ** 75199700
.**         comments to zero the SJACFLAG, SJACREAS and              ** 75234600
.**         SJACFLDS fields.                                         ** 75269500
.**                                                                  ** 75304400
.** EXIT: To SJF_ACC_REQ                                             ** 75339300
.**                                                                  ** 75374200
.** ROUTINES BRANCHED TO: none                                       ** 75409100
.**                                                                  ** 75444000
.********************************************************************** 75478900
*                                                                       75513800
.LH0110A ANOP                               Entry point of routine.     75548700
.*                                                                      75583600
.*                                                                      75618500
.********************************************************************** 75653400
.** Generates a block comment to precede the code which zeros        ** 75688300
.** fields                                                           ** 75723200
.********************************************************************** 75758100
.*                                                                      75793000
*                                                                       75827900
*********************************************************************** 75862800
*  Zero the IEFSJAP fields SJACFLAG, SJACREAS and SJACFLDS.           * 75897700
*********************************************************************** 75932600
*                                                                       75967500
.*                                                                      76002400
.*                                                                      76037300
.********************************************************************** 76072200
.** Generates code in modified source text to zero the IEFSJACP      ** 76107100
.** flag field SJACFLAG                                              ** 76142000
.********************************************************************** 76176900
.*                                                                      76211800
         XC    SJACFLAG,SJACFLAG            Flag field zeroed.          76246700
.*                                                                      76281600
.*                                                                      76316500
.********************************************************************** 76351400
.** Generates code in modified source text to zero the IEFSJACP      ** 76386300
.** return field SJACREAS                                            ** 76421200
.********************************************************************** 76456100
.*                                                                      76491000
         XC    SJACREAS,SJACREAS            Reason code field zeroed.   76525900
.*                                                                      76560800
.*                                                                      76595700
.********************************************************************** 76630600
.** Generates code in modified source text to zero the IEFSJACP      ** 76665500
.** field SJACFLDS                                                   ** 76700400
.********************************************************************** 76735300
.*                                                                      76770200
         XC    SJACFLDS,SJACFLDS            Zero parameter list.        76805100
.*                                                                      76840000
.*                                                                      76874900
.********************************************************************** 76909800
.** Returns from the ZERO_FIELDS routine. Branches to the            ** 76944700
.** label just following the branch to this routine.                 ** 76979600
.********************************************************************** 77014500
.*                                                                      77049400
         AGO   .LH0110B                     Return from ZERO_FIELDS.    77084300
.*                                                                      77119200
.*                                                                      77154100
.*                                                                      77189000
.********************************************************************** 77223900
.**                                                                  ** 77258800
.** PROCEDURE NAME: ASSIGN_REQTBL                                    ** 77293700
.**                                                                  ** 77328600
.** DESCRIPTIVE NAME: Generates code to assign values to the         ** 77363500
.**                   IEFSJACP fields related to the request         ** 77398400
.**                   table.                                         ** 77433300
.**                                                                  ** 77468200
.** FUNCTION: Generates code in modified source text to fill in      ** 77503100
.**           the SJF Access Function parameter list fields          ** 77538000
.**           related to the request table.                          ** 77572900
.**                                                                  ** 77607800
.**           The fields are set from the following macro            ** 77642700
.**           parameters: positional parameters, REQTBL, NUMREQ.     ** 77677600
.**                                                                  ** 77712500
.** ENTRY: From SJF_ACC_REQ                                          ** 77747400
.**                                                                  ** 77782300
.** INPUT: Macro parameters: 1. positional parameters                ** 77817200
.**                          2. NUMREQ keyword parameter             ** 77852100
.**                          3. REQTBL keyword parameter             ** 77887000
.**                                                                  ** 77921900
.** OUTPUT: Generates assignment statements and accompanying         ** 77956800
.**         comments to assign values from the macro parameters      ** 77991700
.**         to the request table and IEFSJACP fields.                ** 78026600
.**                                                                  ** 78061500
.** EXIT: To SJF_ACC_REQ                                             ** 78096400
.**                                                                  ** 78131300
.** ROUTINES CALLED: None                                            ** 78166200
.**                                                                  ** 78201100
.********************************************************************** 78236000
.*                                                                      78270900
.LH0120A ANOP                               Entry point of routine.     78305800
.*                                                                      78340700
.*                                                                      78375600
.********************************************************************** 78410500
.** Generates the block comment to precede the code assigning        ** 78445400
.** fields to the request table.                                     ** 78480300
.********************************************************************** 78515200
.*                                                                      78550100
*                                                                       78585000
*********************************************************************** 78619900
*  Assignment of the request table fields, if specified in macro      * 78654800
*  invocation.                                                        * 78689700
*********************************************************************** 78724600
*                                                                       78759500
.*                                                                      78794400
.*                                                                      78829300
.********************************************************************** 78864200
.** Maps the parameter REQTBL to the IEFSJACP field SJACRPTR.        ** 78899100
.********************************************************************** 78934000
.*                                                                      78968900
         AIF   (0 EQ N'&REQTBL).LH0121      REQTBL specified?           79003800
.*                                          YES, REQTBL specified.      79038700
         MVC   SJACRPTR,&REQTBL             REQTBL macro parameter      79073600
*                                           argument assigned to        79108500
*                                           request table pointer       79143400
*                                           field.                      79178300
.*                                                                      79213200
.*                                                                      79248100
.********************************************************************** 79283000
.** If positional parameters are specified, then generates           ** 79317900
.** assignment statements to fill in the request table from values   ** 79352800
.** in the positional parameters.                                    ** 79387700
.********************************************************************** 79422600
.*                                                                      79457500
.LH0121  ANOP                                                           79492400
         AIF   (0 EQ N'&SYSLIST).LH0122     Positional parameters       79527300
.*                                          specified?                  79562200
.*                                          YES, positional parameters  79597100
.*                                          found.                      79632000
         L     1,SJACRPTR                   Make REQUEST table entry 1  79666900
         USING SJACRQT,1                    addressable.                79701800
&J       SETA  0                                                        79736700
.LH0121A ANOP                                                           79771600
&J       SETA  &J+1                                                     79806500
         AIF   (&J GT N'&SYSLIST).LH0122                                79841400
         XC    SJACENTY,SJACENTY            Clear space for next set    79876300
*                                           of positional parameters.   79911200
         MVC   SJACKEY,&SYSLIST(&J,1)       Macro positional            79946100
         MNOTE '*                                           parameter nX79981000
               o. &J, sub-'                                             80015900
*                                           parameter 1 assigned to     80050800
*                                           request table 'key' field.  80085700
         MVC   SJACPARM,&SYSLIST(&J,2)      Macro positional parameter  80120600
         MNOTE '*                                           no. &J., suX80155500
               b-parameter 2'                                           80190400
*                                           assigned to request table   80225300
*                                           'parameter number' field.   80260200
         MVC   SJACADDR,&SYSLIST(&J,3)      Macro positional parameter  80295100
         MNOTE '*                                           no. &J., suX80330000
               b-parameter 3'                                           80364900
*                                           assigned to request table   80399800
*                                           'field address' field.      80434700
         MVC   SJACLNTH,&SYSLIST(&J,4)      Macro positional parameter  80469600
         MNOTE '*                                           no. &J., suX80504500
               b-parameter 4'                                           80539400
*                                           assigned to request table   80574300
*                                           'length of field' field.    80609200
         AIF   (&J GE N'&SYSLIST).LH0121B                               80644100
         LA    1,SJACRLEN(0,1)              Point to next request       80679000
*                                           table entry.                80713900
.LH0121B AGO   .LH0121A                                                 80748800
.*                                                                      80783700
.*                                                                      80818600
.********************************************************************** 80853500
.** Maps the parameter NUMREQ to the IEFSJACP field SJACREQ#.        ** 80888400
.** If positional parms are specified, sets SJACREQ# to the number   ** 80923300
.** of positional parms.  Else, if NUMREQ is specified, sets         ** 80958200
.** SJACREQ# equal to it.                                            ** 80993100
.********************************************************************** 81028000
.*                                                                      81062900
.LH0122  ANOP                                                           81097800
         AIF   (0 EQ N'&SYSLIST).LH0122E    Positional parameters?      81132700
&I       SETA  N'&SYSLIST                                               81167600
         LA    1,&I                         Number of positional        81202500
         STH   1,SJACREQ#                   parameters is assigned to   81237400
*                                           number of requests field.   81272300
         AGO   .LH0120Z                                                 81307200
.*                                                                      81342100
.LH0122E ANOP                                                           81377000
         AIF   (0 EQ N'&NUMREQ).LH0120Z     NUMREQ macro parameter      81411900
.*                                          specified?                  81446800
.*                                          YES, generate assignment.   81481700
         MVC   SJACREQ#,&NUMREQ             NUMREQ macro parameter      81516600
*                                           argument assigned to number 81551500
*                                           of requests field.          81586400
.*                                                                      81621300
.*                                                                      81656200
.********************************************************************** 81691100
.** Returns from the ASSIGN_REQTBL routine. Branches to the label    ** 81726000
.** just after the branch to this routine                            ** 81760900
.********************************************************************** 81795800
.*                                                                      81830700
.LH0120Z ANOP                                                           81865600
         AGO   .LH0120B                     Return from ASSIGN_REQTBL.  81900500
.*                                                                      81935400
.*                                                                      81970300
.*                                                                      82005200
.********************************************************************** 82040100
.**                                                                  ** 82075000
.** PROCEDURE NAME: ASSIGN_COMMON_PARMS                              ** 82109900
.**                                                                  ** 82144800
.** DESCRIPTIVE NAME: Generates assignment statements, to fill       ** 82179700
.**                   in the IEFSJACP fields common to many of       ** 82214600
.**                   the request types.                             ** 82249500
.**                                                                  ** 82284400
.** FUNCTION: Generates code in modified source text to              ** 82319300
.**           fill in the SJF Access Function parameter list         ** 82354200
.**           fields which are common to many of the request         ** 82389100
.**           types.                                                 ** 82424000
.**                                                                  ** 82458900
.**           The IEFSJACP fields are set from the values            ** 82493800
.**           specified in the following macro parameters:           ** 82528700
.**           REQUEST, RECOVRY, CLEANUP, NONAUTH, SYSUSER,           ** 82563600
.**           LOCLSTG, TOKEN, VERB, LABEL, CONTINU.                  ** 82598500
.**           Parameter list constant fields are also set.           ** 82633400
.**                                                                  ** 82668300
.** OPERATION: For the IEFSJACP fields being assigned values in      ** 82703200
.**            this routine, does the following:                     ** 82738100
.**                                                                  ** 82773000
.**            A. Assigns the parameter list constants.              ** 82807900
.**                                                                  ** 82842800
.**            B. For IEFSJACP fields being mapped from asis type    ** 82877700
.**               macro parameters, does the following:              ** 82912600
.**                                                                  ** 82947500
.**               1. If the corresponding macro parameter is         ** 82982400
.**                  specified, assigns its value to the IEFSJACP    ** 83017300
.**                  field.                                          ** 83052200
.**                                                                  ** 83087100
.**               2. Else, zeros the IEFSJACP field if it is         ** 83122000
.**                  not a substructure of SJACFLDS                  ** 83156900
.**                                                                  ** 83191800
.**            C. For IEFSJACP fields being mapped from              ** 83226700
.**               choice-data type macro parameters, turn on         ** 83261600
.**               the corresponding flag field, if so indicated.     ** 83296500
.**                                                                  ** 83331400
.** ENTRY: From SJF_ACC_REQ                                          ** 83366300
.**                                                                  ** 83401200
.** INPUT: The following keyword parameters: REQUEST, RECOVRY,       ** 83436100
.**        CLEANUP, NONAUTH, SYSUSER, LOCLSTG, TOKEN, VERB,          ** 83471000
.**        LABEL, CONTINU.                                           ** 83505900
.**                                                                  ** 83540800
.** OUTPUT: Generates assignment statements and accompanying         ** 83575700
.**         comments to assign values to IEFSJACP fields.            ** 83610600
.**                                                                  ** 83645500
.** EXIT: To SJF_ACC_REQ                                             ** 83680400
.**                                                                  ** 83715300
.** ROUTINES BRANCHED TO: None                                       ** 83750200
.**                                                                  ** 83785100
.********************************************************************** 83820000
.*                                                                      83854900
.LH0130A ANOP                               Entry point of routine.     83889800
.*                                                                      83924700
.*                                                                      83959600
.********************************************************************** 83994500
.** Generates the block comment to precede the assignment of the     ** 84029400
.** common parameters.                                               ** 84064300
.********************************************************************** 84099200
.*                                                                      84134100
*                                                                       84169000
*********************************************************************** 84203900
*  Assign fields common to most of the request types.                 * 84238800
*********************************************************************** 84273700
*                                                                       84308600
.*                                                                      84343500
.*                                                                      84378400
.********************************************************************** 84413300
.** Sets the constant fields in the IEFSJACP parameter list.         ** 84448200
.********************************************************************** 84483100
.*                                                                      84518000
         MVC   SJACID,SJACCID               Assign function identifier  84552900
*                                           field.                      84587800
         MVI   SJACVERS,SJACCVER            Assign version number       84622700
*                                           field.                      84657600
         LA    1,SJACFIXD                   Assign parameter list       84692500
*                                           length field.               84727400
         STH   1,SJACLEN                                                84762300
.*                                                                      84797200
.*                                                                      84832100
.********************************************************************** 84867000
.** Sets the field SJACRQST as indicated in the REQUEST macro        ** 84901900
.** parameter.                                                       ** 84936800
.********************************************************************** 84971700
.*                                                                      85006600
         AIF   (('FIND' EQ '&REQUEST') OR                              X85041500
               ('FINDUPD' EQ '&REQUEST') OR                            X85076400
               ('FINDRET' EQ '&REQUEST')).LH0131T                       85111300
         AGO   .LH0132                                                  85146200
.LH0131T ANOP                                                           85181100
         OI    SJACRQST,SJACFIND            Find request-type flag      85216000
*                                           turned on as indicated by   85250900
*                                           REQUEST macro parameter.    85285800
.*                                                                      85320700
.LH0132  AIF   (('UPDATE' EQ '&REQUEST') OR                            X85355600
               ('FINDUPD' EQ '&REQUEST')).LH0132T                       85390500
         AGO   .LH0133                                                  85425400
.LH0132T ANOP                                                           85460300
         OI    SJACRQST,SJACUPD             UPDATE request-type flag    85495200
*                                           turned on as indicated by   85530100
*                                           REQUEST macro parameter.    85565000
         AGO   .LH0134                                                  85599900
.*                                                                      85634800
.LH0133  ANOP                                                           85669700
         AIF   (('RETRIEVE' EQ '&REQUEST') OR                          X85704600
               ('FINDRET' EQ '&REQUEST')).LH0133T                       85739500
         AGO   .LH0134                                                  85774400
.LH0133T ANOP                                                           85809300
         OI    SJACRQST,SJACRET             RETRIEVE request-type flag  85844200
*                                           turned on as indicated by   85879100
*                                           REQUEST macro parameter.    85914000
.LH0134  ANOP                                                           85948900
.*                                                                      85983800
.*                                                                      86018700
.********************************************************************** 86053600
.** Sets the field SJACNREC as indicated in the RECOVRY macro        ** 86088500
.** parameter.                                                       ** 86123400
.********************************************************************** 86158300
.*                                                                      86193200
         AIF   ('NO' EQ '&RECOVRY').LH0134T  If no recovery is          86228100
.*                                          specified set the no        86263000
.*                                          recovery bit on.            86297900
         AGO   .LH0135                                                  86332800
.LH0134T ANOP                               No recovery specified.      86367700
         OI    SJACFLAG,SJACNREC            'No recovery' flag turned   86402600
*                                           on as indicated by RECOVRY  86437500
*                                           macro parameter.            86472400
.*                                                                      86507300
.*                                                                      86542200
.********************************************************************** 86577100
.** Sets the field SJACNOCU as indicated in the CLEANUP macro        ** 86612000
.** parameter.                                                       ** 86646900
.********************************************************************** 86681800
.*                                                                      86716700
.LH0135  AIF    ('NO' EQ '&CLEANUP').LH0135T  If no cleanup is          86751600
.*                                          specified set the           86786500
.*                                          no cleanup bit on.          86821400
         AGO    .LH0136                                                 86856300
.LH0135T ANOP                                                           86891200
         OI    SJACFLAG,SJACNOCU            'No cleanup' flag turned    86926100
*                                           on as indicated by          86961000
*                                           CLEANUP macro parameter.    86995900
.*                                                                      87030800
.*                                                                      87065700
.********************************************************************** 87100600
.** Sets the field SJACUNAU as indicated in the NONAUTH macro        ** 87135500
.** parameter.                                                       ** 87170400
.********************************************************************** 87205300
.*                                                                      87240200
.LH0136  AIF   ('YES' EQ '&NONAUTH').LH0136T  If NONAUTH is specified   87275100
.*                                          as YES, turn the            87310000
.*                                          unauthorized user bit on.   87344900
         AGO   .LH0137                                                  87379800
.LH0136T ANOP                                                           87414700
         OI    SJACFUNC,SJACUNAU            'Unauthorized user' flag    87449600
*                                           turned on as indicated by   87484500
*                                           NONAUTH macro parameter.    87519400
.*                                                                      87554300
.********************************************************************** 87589200
.** Sets the field SJACSYST as indicated in the SYSUSER macro        ** 87624100
.** parameter.                                                       ** 87659000
.********************************************************************** 87693900
.*                                                                      87728800
.LH0137  AIF   ('YES' EQ '&SYSUSER').LH0137T  If SYSUSER is specified   87763700
.*                                          as YES, turn the system     87798600
.*                                          user bit on.                87833500
         AGO   .LH0138                                                  87868400
.LH0137T ANOP                                                           87903300
         OI    SJACFUNC,SJACSYST            'System input' flag         87938200
*                                           turned on as indicated by   87973100
*                                           SYSUSER macro parameter.    88008000
.*                                                                      88042900
.*                                                                      88077800
.********************************************************************** 88112700
.** Sets the field SJACSTOR as specified in the LOCLSTG macro        ** 88147600
.** parameter.                                                       ** 88182500
.********************************************************************** 88217400
.*                                                                      88252300
.LH0138  AIF   (0 NE N'&LOCLSTG).LH0138T    If LOCLSTG is specified,    88287200
.*                                          assign it to SJACSTOR.      88322100
         AGO   .LH0138E                                                 88357000
.LH0138T ANOP                               LOCLSTG specified.          88391900
         MVC   SJACSTOR,&LOCLSTG            LOCLSTG macro parameter     88426800
*                                           argument assigned to local  88461700
*                                           storage pointer field.      88496600
         AGO   .LH0139                                                  88531500
.*                                                                      88566400
.LH0138E ANOP                               LOCLSTG not specified.      88601300
         XC    SJACSTOR,SJACSTOR            LOCLSTG macro parameter     88636200
*                                           not specified, local        88671100
*                                           storage pointer field       88706000
*                                           zeroed.                     88740900
.*                                                                      88775800
.*                                                                      88810700
.********************************************************************** 88845600
.** Sets the field SJACTOKN as indicated in the TOKEN macro          ** 88880500
.** parameter.                                                       ** 88915400
.********************************************************************** 88950300
.*                                                                      88985200
.LH0139  AIF   (0 NE N'&TOKEN).LH0139T      If TOKEN is specified,      89020100
.*                                          assign it to SJACTOKN.      89055000
         AGO   .LH0139E                                                 89089900
.LH0139T ANOP                                                           89124800
         MVC   SJACTOKN,&TOKEN              TOKEN macro parameter       89159700
*                                           argument assigned to SJF    89194600
*                                           token field.                89229500
         AGO   .LH013A                                                  89264400
.*                                                                      89299300
.LH0139E ANOP                                                           89334200
         XC    SJACTOKN,SJACTOKN            TOKEN macro parameter not   89369100
*                                           specified, token field      89404000
*                                           zeroed.                     89438900
.*                                                                      89473800
.*                                                                      89508700
.********************************************************************** 89543600
.** Sets the field SJACVERB as specified in the VERB macro           ** 89578500
.** parameter.                                                       ** 89613400
.********************************************************************** 89648300
.*                                                                      89683200
.LH013A  AIF   (0 NE N'&VERB).LH013AT       If VERB is specified,       89718100
.*                                          assign it to SJACVERB.      89753000
         AGO   .LH013B                                                  89787900
.LH013AT ANOP                                                           89822800
         MVC   SJACVERB,&VERB               VERB macro parameter        89857700
*                                           argument assigned to verb   89892600
*                                           field.                      89927500
.*                                                                      89962400
.*                                                                      89997300
.********************************************************************** 90032200
.** Sets the field SJACLABL as specified in the LABEL macro          ** 90067100
.** parameter.                                                       ** 90102000
.********************************************************************** 90136900
.*                                                                      90171800
.LH013B  AIF   (0 NE N'&LABEL).LH013BT      If LABEL is specified,      90206700
.*                                          assign it to SJACLABL.      90241600
         AGO   .LH013C                                                  90276500
.LH013BT ANOP                                                           90311400
         MVC   SJACLABL,&LABEL              LABEL macro parameter       90346300
*                                           argument assigned to        90381200
*                                           statement label field.      90416100
.*                                                                      90451000
.*                                                                      90485900
.********************************************************************** 90520800
.** Sets the field SJACCNT as indicated in the CONTINU macro         ** 90555700
.** parameter.                                                       ** 90590600
.********************************************************************** 90625500
.*                                                                      90660400
.LH013C  AIF   ('YES' EQ '&CONTINU').LH013CT  If CONTINU is specified   90695300
.*                                          as YES, turn the bit on     90730200
.*                                          to allow continued          90765100
.*                                          processing after errors     90800000
.*                                          are detected.               90834900
         AGO   .LH0130Z                                                 90869800
.LH013CT ANOP                                                           90904700
         OI    SJACFUNC,SJACCNT             'Continue processing after  90939600
*                                           errors detected' flag       90974500
*                                           turned on as indicated by   91009400
*                                           CONTINU macro parameter.    91044300
.*                                                                      91079200
.*                                                                      91114100
.********************************************************************** 91149000
.** Returns from the ASSIGN_COMMON_PARMS routine. Branches to        ** 91183900
.** the label just following the branch to this routine.             ** 91218800
.********************************************************************** 91253700
.*                                                                      91288600
.LH0130Z  ANOP                                                          91323500
          AGO   .LH0130B                    Return from ASSIGN_COMMON   91358400
.*                                          PARMS routine.              91393300
.*                                                                      91428200
.*                                                                      91463100
.*                                                                      91498000
.********************************************************************** 91532900
.**                                                                  ** 91567800
.** PROCEDURE NAME: ASSIGN_UPDATE_PARMS                              ** 91602700
.**                                                                  ** 91637600
.** DESCRIPTIVE NAME: Generates assignment statements, to fill in    ** 91672500
.**                   the IEFSJACP fields used only by UPDATE and    ** 91707400
.**                   FINDUPD request types.                         ** 91742300
.**                                                                  ** 91777200
.** FUNCTION:         Routine to generate code in modified source    ** 91812100
.**                   text to fill in the SJF Access Function        ** 91847000
.**                   parameter list field SJACJRNL from the macro   ** 91881900
.**                   parameter UPDJRNL. Also fills in field         ** 91916800
.**                   SJACALT from the parameter UPDALTS.            ** 91951700
.**                                                                  ** 91986600
.** ENTRY: From SJF_ACC_REQ                                          ** 92021500
.**                                                                  ** 92056400
.** INPUT: UPDJRNL keyword parameter                                 ** 92091300
.**                                                                  ** 92126200
.** OUTPUT: Generates assignment statements and accompanying         ** 92161100
.**         comments to assign values from the macro parameters      ** 92196000
.**         UPDJRNL and UPDALTS to IEFSJACP fields.                  ** 92230900
.**                                                                  ** 92265800
.** EXIT: To SJF_ACC_REQ                                             ** 92300700
.**                                                                  ** 92335600
.** ROUTINES BRANCHED TO: None                                       ** 92370500
.**                                                                  ** 92405400
.********************************************************************** 92440300
.*                                                                      92475200
.LH0140A ANOP                               Entry point of routine.     92510100
.*                                                                      92545000
.*                                                                      92579900
.********************************************************************** 92614800
.** Generates a block comment to precede the assignment              ** 92649700
.** statements.                                                      ** 92684600
.********************************************************************** 92719500
.*                                                                      92754400
*                                                                       92789300
*********************************************************************** 92824200
*  Assign fields used only by UPDATE and FINDUPD requests, if         * 92859100
*  specified in macro invocation.                                     * 92894000
*********************************************************************** 92928900
*                                                                       92963800
.*                                                                      92998700
.*                                                                      93033600
.********************************************************************** 93068500
.** Sets the field SJACJRNL as indicated in the UPDJRNL macro        ** 93103400
.** parameter.                                                       ** 93138300
.********************************************************************** 93173200
.*                                                                      93208100
         AIF   ('YES' EQ '&UPDJRNL').LH0141T  If UPDJRNL is specified   93243000
.*                                          as YES, turn on the flag    93277900
.*                                          to allow journaling.        93312800
         AGO   .LH0142                                                  93347700
.LH0141T ANOP                                                           93382600
         OI    SJACFUNC,SJACJRNL            'Journaling requested'      93417500
*                                           flag turned on as           93452400
*                                           indicated by UPDJRNL macro  93487300
*                                           parameter.                  93522200
.*                                                                      93557100
.*                                                                      93592000
.********************************************************************** 93626900
.** Sets the field SJACALT as specified in the UPDALTS macro         ** 93661800
.** parameter.                                                       ** 93696700
.********************************************************************** 93731600
.*                                                                      93766500
.LH0142  AIF   (0 NE N'&UPDALTS).LH0142T                                93801400
         AGO   .LH0140Z                                                 93836300
.LH0142T ANOP                                                           93871200
         MVC   SJACALT,&UPDALTS             UPDALTS macro parameter     93906100
*                                           argumement assigned         93941000
*                                           to alternate SWA manager    93975900
*                                           pointer field.              94010800
.*                                                                      94045700
.*                                                                      94080600
.********************************************************************** 94115500
.** Returns from the ASSIGN_UPDATE_PARMS routine. Goes to the        ** 94150400
.** label just following the branch to this routine.                 ** 94185300
.********************************************************************** 94220200
.*                                                                      94255100
.LH0140Z  ANOP                                                          94290000
         AGO   .LH0140B                     Return from ASSIGN_         94324900
.*                                          UPDATE PARMS routine        94359800
.*                                                                      94394700
.*                                                                      94429600
.*                                                                      94464500
.********************************************************************** 94499400
.**                                                                  ** 94534300
.** PROCEDURE NAME: ASSIGN_FIND_PARMS                                ** 94569200
.**                                                                  ** 94604100
.** DESCRIPTIVE NAME: Generates assignment statements, to fill       ** 94639000
.**                   in IEFSJACP fields used only by FIND,          ** 94673900
.**                   FINDUPD and FINDRET requests.                  ** 94708800
.**                                                                  ** 94743700
.** FUNCTION:         Routine to generate code in modified source    ** 94778600
.**                   text to fill in the SJF Access Function        ** 94813500
.**                   parameter list fields which are used only by   ** 94848400
.**                   FIND, FINDUPD and FINDRET request types.       ** 94883300
.**                                                                  ** 94918200
.**                   The IEFSJACP fields are set from the values    ** 94953100
.**                   specified in the following macro parameters:   ** 94988000
.**                   FNDNEXT, FNDWTKN, FNDLEVL, FNDSTPN,            ** 95022900
.**                   FNDPRLB, FNDJBTK, FNDCSTK.                 @D3A** 95057800
.**                                                                  ** 95092700
.** OPERATION: For the IEFSJACP fields being assigned values in      ** 95127600
.**            this routine, does the following:                     ** 95162500
.**                                                                  ** 95197400
.**            A. For IEFSJACP fields being mapped from asis type    ** 95232300
.**               macro parameters, does the following:              ** 95267200
.**                                                                  ** 95302100
.**               1. If the corresponding macro parameter is         ** 95337000
.**                  specified, assigns its value to the IEFSJACP    ** 95371900
.**                  field.                                          ** 95406800
.**                                                                  ** 95441700
.**            B. For IEFSJACP fields being mapped from              ** 95476600
.**               choice-data type macro parameters, turns on        ** 95511500
.**               the corresponding flag field, if so indicated.     ** 95546400
.**                                                                  ** 95581300
.** ENTRY: From SJF_ACC_REQ                                          ** 95616200
.**                                                                  ** 95651100
.** INPUT: The following keyword parameters: FNDNEXT, FNDWTKN,       ** 95686000
.**        FNDLEVL, FNDSTPN, FNDPRLB                                 ** 95720900
.**                                                                  ** 95755800
.** OUTPUT: Generates assignment statements and accompanying         ** 95790700
.**         comments to assign values from the macro parameters      ** 95825600
.**         to IEFSJACP fileds.                                      ** 95860500
.**                                                                  ** 95895400
.** EXIT: To SJF_ACC_REQ                                             ** 95930300
.**                                                                  ** 95965200
.** ROUTINES CALLED: None                                            ** 96000100
.**                                                                  ** 96035000
.********************************************************************** 96069900
.*                                                                      96104800
.LH0150A ANOP                               Entry point of routine.     96139700
.*                                                                      96174600
.*                                                                      96209500
.********************************************************************** 96244400
.** Generates a block comment to precede the assignment              ** 96279300
.** statements.                                                      ** 96314200
.********************************************************************** 96349100
.*                                                                      96384000
*                                                                       96418900
*********************************************************************** 96453800
* Assign fields used only by FIND, FINDUPD, and FINDRET requests,     * 96488700
* if specified in macro invocation.                                   * 96523600
*********************************************************************** 96558500
*                                                                       96593400
.*                                                                      96628300
.*                                                                      96663200
.********************************************************************** 96698100
.** Sets the field SJACNEXT as indicated in the FNDNEXT macro        ** 96733000
.** parameter.                                                       ** 96767900
.********************************************************************** 96802800
.*                                                                      96837700
         AIF   ('YES' EQ '&FNDNEXT').LH0150T                            96872600
         AGO   .LH0151                                                  96907500
.LH0150T ANOP                               FNDNEXT was specified       96942400
.*                                          as YES.                     96977300
         OI    SJACFLG2,SJACNEXT            'FIND NEXT' flag            97012200
*                                           turned on as indicated by   97047100
*                                           FNDNEXT macro parameter.    97082000
.*                                                                      97116900
.*                                                                      97151800
.********************************************************************** 97186700
.** Sets the field SJACNJST as indicated in the FNDWTKN macro        ** 97221600
.** parameter.                                                       ** 97256500
.********************************************************************** 97291400
.*                                                                      97326300
.LH0151  AIF   ('YES' EQ '&FNDWTKN').LH0151T                            97361200
         AGO   .LH0152                                                  97396100
.LH0151T ANOP                               FNDWTKN was specified       97431000
.*                                          as YES.                     97465900
         OI    SJACFLG2,SJACNJST            'Job token supplied' flag   97500800
*                                           turned on as indicated by   97535700
*                                           FNDWTKN macro parameter.    97570600
.*                                                                      97605500
.*                                                                      97640400
.********************************************************************** 97675300
.** Sets the field SJACFUN1 as indicated in the FNDLEVL macro        ** 97710200
.** parameter.                                                       ** 97745100
.********************************************************************** 97780000
.*                                                                      97814900
.LH0152  AIF   (0 EQ N'&FNDLEVL).LH0153     Was FNDLEVL specified?      97849800
         AIF   ('JOB' EQ '&FNDLEVL').LH0152J,      YES, JOB specified. X97884700
               ('STEP' EQ '&FNDLEVL').LH0152S,     STEP specified.     X97919600
               ('CURRSTEP' EQ '&FNDLEVL').LH0152C  CURRSTEP specified   97954500
.*                                                                      97989400
.LH0152C ANOP                               FNDLEVL=CURRSTEP specified  98024300
         OI    SJACFUN1,SJACCST             'CURRSTEP level find'       98059200
*                                           flag turned on as           98094100
*                                           specified by FNDLEVL macro  98129000
*                                           parameter.                  98163900
         AGO   .LH0153                                                  98198800
.*                                                                      98233700
.LH0152J ANOP                               FNDLEVL=JOB specified.      98268600
         OI    SJACFUN1,SJACJOB             'Job level find' flag       98303500
*                                           turned on as indicated by   98338400
*                                           FNDLEVL macro parameter.    98373300
         AGO   .LH0153                                                  98408200
.*                                                                      98443100
.LH0152S ANOP                               FNDLEVL=STEP specified.     98478000
         OI    SJACFUN1,SJACST              'STEP level find' flag      98512900
*                                           turned on as indicated by   98547800
*                                           FNDLEVL macro parameter.    98582700
.*                                                                      98617600
.*                                                                      98652500
.********************************************************************** 98687400
.** Sets the field SJACSTPN as specified in the FNDSTPN macro        ** 98722300
.** parameter.                                                       ** 98757200
.********************************************************************** 98792100
.*                                                                      98827000
.LH0153  AIF   (0 EQ N'&FNDSTPN).LH0154                                 98861900
         MVC   SJACSTPN,&FNDSTPN            FNDSTPN macro parameter     98896800
*                                           argument assigned to step   98931700
*                                           name field.                 98966600
.*                                                                      99001500
.*                                                                      99036400
.********************************************************************** 99071300
.** Sets the field SJACPRLB as specified in the FNDPRLB macro        ** 99106200
.** parameter.                                                       ** 99141100
.********************************************************************** 99176000
.*                                                                      99210900
.LH0154  AIF   (0 EQ N'&FNDPRLB).LH0155                                 99245800
         MVC   SJACPRLB,&FNDPRLB            FNDPRLB macro parameter     99280700
*                                           argument assigned to proc   99315600
*                                           statement label field       99350500
.*                                                                      99385400
.*                                                                      99420300
.********************************************************************** 99455200
.** Sets the field SJACJBTK as specified in the FNDJBTK macro        ** 99456300
.** parameter.                                                   @D3A** 99457400
.********************************************************************** 99458500
.*                                                                      99459600
.LH0155  AIF   ('YES' EQ '&FNDJBTK').LH0155T                       @D3A 99460700
         AGO   .LH0156                                                  99461800
.LH0155T ANOP                               FNDJBTK was specified       99462900
.*                                          as YES.                     99464000
         OI    SJACFLG2,SJACJBTK            'FIND JOB TOKEN' flag       99465100
*                                           turned on as indicated by   99466200
*                                           FNDJBTK macro parameter     99467300
*                                                                  @D3A 99468400
.*                                                                      99469500
.*                                                                      99470600
.********************************************************************** 99471700
.** Sets the field SJACCSTK as specified in the FNDCSTK macro        ** 99472800
.** parameter.                                                   @D3A** 99473900
.********************************************************************** 99475000
.*                                                                      99476100
.LH0156  AIF   ('YES' EQ '&FNDCSTK').LH0156T                       @D3A 99477200
         AGO   .LH0150Z                                                 99478300
.LH0156T ANOP                               FNDCSTK was specified       99479400
.*                                          as YES.                     99480500
         OI    SJACFLG2,SJACCSTK            'FIND CURRENT STEP TOKEN'   99481600
*                                           flag turned on as indicated 99482700
*                                           by FNDCSTK macro parameter  99483800
*                                                                  @D3A 99484900
.*                                                                      99486000
.*                                                                      99487100
.********************************************************************** 99488200
.** Returns from the ASSIGN_FIND_PARMS routine. Goes to the          ** 99490100
.** label just following the branch to this routine.                 ** 99525000
.********************************************************************** 99559900
.*                                                                      99594800
.LH0150Z ANOP                                                           99629700
         AGO   .LH0150B                     Return from ASSIGN_FIND_    99664600
.*                                          PARMS routine.              99699500
         MEND                                                           99734400
**/                                                           /* @P3A*/ 99751800
*%SJACM3: ;                                                             99769300
