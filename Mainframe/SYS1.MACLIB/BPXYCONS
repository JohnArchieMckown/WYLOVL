*        %GOTO CONSPRO  ;         /* Bilingual header                   00050000
         MACRO                                                          00100000
         BPXYCONS  &DSECT=MEANINGLESS,&LIST=YES               8@D1A     00111100
         GBLB  &CONS411                                                 00122200
         AIF   (&CONS411 EQ 1).E411                                     00133300
&CONS411 SETB  1                                                        00144400
         AIF   ('&LIST' EQ 'YES').A411                                  00155500
         PUSH  PRINT  BPXYCONS: Syscall Constants                       00166600
         PRINT OFF                                                      00177700
         AGO   .A411                                                    00188800
*                                  */                                   00200000
*%CONSPRO : ;                                                           00250000
*/****START OF SPECIFICATIONS****************************************** 00300000
*                                                                       00350000
*    $MAC (BPXYCONS) COMP(SCPX1) PROD(BPX):                             00400000
*                                                                       00450000
*01* MACRO NAME: BPXYCONS                                               00500000
*                                                                       00550000
*01* DSECT NAME: N/A                                                    00600000
*                                                                       00650000
*01* DESCRIPTIVE NAME: Syscall Constants                                00700000
*                                                                       00750000
*02*   ACRONYM: N/A                                                     00800000
**/                                                                     00850000
*/*01* PROPRIETARY STATEMENT=                                        */ 00900000
*/***PROPRIETARY_STATEMENT********************************************/ 00950000
*/*                                                                  */ 01000000
*/*                                                                  */ 01050000
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 01100000
*/* THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      */ 01150000
*/* 5647-A01 (C) COPYRIGHT IBM CORP. 1993,2000                       */ 01200000
*/*                                                                  */ 01300000
*/* STATUS= HBB7703                                                  */ 01350000
*/*                                                                  */ 01400000
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 01450000
*/*                                                                     01500000
*01* EXTERNAL CLASSIFICATION:  GUPI                                     01512500
*01* END OF EXTERNAL CLASSIFICATION:                                    01525000
*                                                                       01537500
*01* FUNCTION:                                                          01550000
*      Contains Constants used for syscalls                             01600000
*                                                                       01650000
*01* METHOD OF ACCESS:                                                  01700000
*                                                                       01750000
*02*   PL/X:                                                            01800000
*        %INCLUDE SYSLIB(BPXYCONS)                                      01850000
*                                                                       01900000
*02*   ASM:                                                             01950000
*       BPXYCONS                                                        02000000
*                                                                       02050000
*01* SIZE: N/A                                                          02100000
*                                                                       02150000
*01* POINTED TO BY: N/A                                                 02200000
*                                                                       02250000
*01* CREATED BY: N/A                                                    02300000
*                                                                       02350000
*01* DELETED BY: N/A                                                    02400000
*                                                                       02450000
*01* STORAGE ATTRIBUTES:                                                02500000
*02*   SUBPOOL/DATASPACE:  N/A                                          02550000
*02*   KEY:                N/A                                          02600000
*02*   RESIDENCY:          N/A                                          02650000
*                                                                       02700000
*01* FREQUENCY: N/A                                                     02750000
*                                                                       02800000
*01* SERIALIZATION: N/A                                                 02850000
*                                                                       02900000
*01* DEPENDENCIES: None                                                 02950000
*                                                                       03000000
*01* NOTES: None.                                                       03050000
*                                                                       03100000
*01* COMPONENT: OpenMVS (SCPX1)                                         03150000
*                                                                       03200000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     03250000
*                                                                       03300000
*01* EYE-CATCHER: None                                                  03350000
*02*   OFFSET:  -                                                       03400000
*02*   LENGTH:  -                                                       03450000
*                                                                       03500000
*01* CHANGE-ACTIVITY:                                                   03550000
* $L0=POSIXXP  HOM1110 921201 PDHR: OpenMVS Initial Release             03560700
* $D1=DL70019  HOM1110 921201 PDJM: Assembler macro fixup               03571400
* $D2=DL70014  HOM1110 921104 PDJI: Pthread support                     03582100
* $P1=PL70568  HOM1110 921208 PDHR: Add 2_CHAR_TERM rm STREAM_MAX       03592800
* $P2=PL70597  HOM1110 930104 PDJM: Use "OpenMVS"                       03603500
* $P3=PL70669  HOM1110 930302 PDJJ: Add assembler comments for BPX1PSI  03614200
* $D3=DL70038  HOM1110 930310 PDJQ: Quiesce threads support             03624900
* $D4=DL70042  HOM1110 930322 PDJQ: LE Enclave Clenaup Support          03635600
* $L1=OMVS1    HOM1110 920305 PDI6: OpenMVS 2nd Release                 03646300
* $D5=DOAA011  HOM1120 930604 PDJQ: MWTQ support                        03657000
* $P4=PL70740  HOM1110 930502 PDJJ: Add pthread_query                   03667700
* $D6=DOAA003  HOM1120,930519,PDJJ: Ptrace support for multi-thread     03678400
* $D7=DOAA011  HOM1120 930812 PDJH: Set_thread_limits (DCR A011.02)     03689100
* $D8=DPFA065  HOM1130 930126 PDI6: Universal Unix    (DCR A065.02)     03699800
* $D9=DPFA079  HOM1130 940315 PDND: DCR A079.01 Spawn Support           03709800
* $DB=DPFA065  HOM1130 940503 PDAX: A065.05 Rlimits/Rusage              03724800
* $DC=DPFA065  HOM1130 940627 PDEA: A065.06 Wait Extention              03729800
* $DA=DPFA065  HOM1130 940928 PDJM: DCR A065.03 mmap  Support           03734800
* $DB=DPFA051  HOM1130 950303 PDI6: DCR A051.24 renice Support          03737300
* $DC=DPFA124  HOM1130 950328 PDJI: querydub status codes (A124.00)     03738500
* $DE=DRGA129  HOM1140 950508 PDJM: DCR A129.0 TTY GID                  03738800
* $P5=PPF0371  HOM1130 950511 PDKF: OSMF version support                03739100
* $P6=PRG0007  HOM1140 950531 PDJQ: Rollup REL3 DCR A126.00             03739400
* $P7=PRG0017  HOM1140 950620 PDKG: Rollup Rel3 DCRs A130.00 A111.00    03739600
* $01=OW17358  HOM1130 951206 PDI6: DFP Close Cleanup Exit Support      03739700
* $DF=DSPA164  HOM1150 960202 PDJJ: DCR A164.01 console modify/stop/wto 03743100
* $P8=PSP0054  HOM1150 960327 PDJQ: Rollup OW15865 (RACF-DCE SPE)       03744800
* $P9=PQC1585  HBB6603 960618 PDJM: Env Vars to Kernel OapbIPFP....     03745200
* $DG=DSPA175  HOM1150 960618 PDJJ: DCR A175.01 SRB support             03745600
* $PA=PQC1535  HBB6603 960624 PDJJ: Fix EQUs for console cmd            03746000
* $02=OW22143  HOM1130 960816 PDI6: Dub Task Acee Fix                   03746200
* $PB=PQC2408  HBB6603 960916 PDI6: WLM Enclave Fix                     03746300
* $PC=PQC2590  HBB6603 960926 PDI6: WLM Disconnect conditional change   03747200
* $DH=DSYA183  JBB6604 960917 PDFV: LFS Cache  A183.01                  03748100
* $DI=DUXA217  HBB6605 970312 PDJJ: Multi-line __console() (A217.10)    03748400
* $DJ=DUXA217  HBB6605 970421 PD2J: Non Swap Service  A217.04           03748700
* $PD=PUX0156  HBB6605 970509 PDFV: LFS Cache Fix                       03748800
* $PE=PUX0149  HBB6605 970505 PD2J: Non Swap Design Fix                 03748900
* $PF=PUX0140  HBB6605 970528 PDSZ: Certificate Support (OW26857)       03749200
* $DK=DVZA237  HBB6606 970620 PDKG: __Security A237.00                  03749300
* $DL=DVZ0241  HBB6606 971001 PDPY: A241.00 Shmem Memmap                03749400
* $DM=DVTA237  HBB6606 971009 PDJQ: A237.01 Pid Affinity                03749600
* $DN=DWAA247  JBB6607 980121 PDND: get error text pfsctl               03749700
* $DO=DWAA282  JBB6607 980123 PDKG: A282.00 Certificate registration    03749800
* $PG=PWA0236  JBB6607 980615 PD16: Internals Support                   03762300
* $DP=DWK0285  HBB6608 980923 PDKG: A285.01 CICS QR - BPX1DSD syscall   03765400
* $DQ=DWKA320  HBB6608 980715 PDJI: osenv get/set/unset support A320.00 03768500
* $DR=PWA0327  HBB6608 980923 PDKG: A327.02 CICS OTE - HFSLOAD changes  03771600
* $PH=PWY0213  JBB6609 990317 PDJT: PFS Recycle                 A311.02 03773200
* $PI=PWY0510  JBB6609 990602 PDND: get sysnames                        03774000
* $DS=DXDA378  HBB7703 990907 PDJM: New server / WLM Constant (A378.00) 03774200
* $03=OW40460  JBB6609 990820 PDJT: Named Token Tdx & Tdnames           03774500
*                                   get sysnames (change pc# number)    03774600
* $04=OW39092  JBB6609 990913 PDKG: BPX1SDD w/ option to defer dub      03774700
* $PK=PWY0944  JBB6609 991018 PDND: add pfsctl for hfs stats            03778900
* $05=OW46710  HBB7703 001031 PD2R: User specified signal for BRLM loc. 03779900
* $06=OW45508  HBB7703 001128 PDJI: New Function - Pthread quiesce      03780520
* $07=OW44461  HBB7703 000908 PDJN: CDSUTIL Retrofit A309.07/08         03780580
* $08=OW47578  HBB7703 001113 PDAE: A534.00 identity from task ACEE     03780680
* $09=OW48199  HBB7703 000508 PDFV: A502.00 Soft ShutDown               03780780
*                                                                       03780900
****END OF SPECIFICATIONS*********************************************/ 03783100
*                                                               @EJECT; 03787300
*        %GOTO CONSPLS  ;         /* Bilingual header                   03800000
.A411    ANOP  ,                                                        03834300
** BPXYCONS: Syscall constants                                          03868600
**  Used By: Many syscalls                                              03902900
DFLT_ARG_MAX         EQU   1048576 Constant for default ARG_MAX (1 MEG) 03937200
DFLT_CHILD_MAX       EQU   6    Constant for default CHILD_MAX          03971500
*                               (_POSIX_CHILD_MAX)                      04005800
DFLT_CLK_TCK         EQU   100  Constant for default CLK_TCK            04040100
*                               (100 ticks per second)                  04074400
DFLT_NGROUPS_MAX     EQU   8191 Constant for default NGROUPS_MAX        04108700
*                               (RACF Maximum value)                    04143000
DFLT_OPEN_MAX        EQU   16   Constant for default OPEN_MAX           04177300
*                               (_POSIX_OPEN_MAX)                       04211600
DFLT_TZNAME_MAX      EQU   9    Constant for default TZNAME_MAX         04314500
DFLT_JOB_CONTROL     EQU   1    Constant for default JOB_CONTROL        04348800
DFLT_SAVED_IDS       EQU   1    Constant for default SAVED_IDS          04383100
DFLT_VERSION         EQU   199009  Constant for default VERSION         04417400
DFLT_THREAD_TASKS_MAX_NP  EQU  50  Constant default THREAD_TASKS_MAX_NP 04451700
DFLT_USERIDLEN_MAX   EQU   8    Max characters for a userid       @DKA  04463100
DFLT_PASSWDLEN_MAX   EQU   8    Max characters for a password     @DKA  04474500
DFLT_2_CHAR_TERM     EQU   1    Constant default SC_2_CHAR_TERM  @P1A   04486000
                 SPACE ,                                                04520300
* items from sysconf()                                                  04554600
SC_ARG_MAX           EQU   1    Constant for querying ARG_MAX           04588900
SC_CHILD_MAX         EQU   2    Constant for querying CHILD_MAX         04623200
SC_CLK_TCK           EQU   3    Constant for querying CLK_TCK           04657500
SC_JOB_CONTROL       EQU   4    Constant for querying JOB_CONTROL       04691800
SC_NGROUPS_MAX       EQU   5    Constant for querying NGROUPS_MAX       04726100
SC_OPEN_MAX          EQU   6    Constant for querying OPEN_MAX          04760400
SC_SAVED_IDS         EQU   7    Constant for querying SAVED_IDS         04794700
SC_TZNAME_MAX        EQU   9    Constant for querying TZNAME_MAX        04863300
SC_VERSION           EQU   10   Constant for querying VERSION           04897600
SC_THREAD_TASKS_MAX_NP EQU 11   Constant to query THREAD_TASKS_MAX_NP   04931900
SC_2_CHAR_TERM       EQU   12   Constant for querying VERSION    @P1A   04966200
SC_THREADS_MAX_NP    EQU   13   Constant to query THREADS_MAX_NP @D5A   04983300
SC_MMAP_MEM_MAX_NP   EQU   14   Constant to query MMAP_MEM_MAX_NP@DAA   04986100
SC_TTY_GROUP         EQU   15   Constant to query TTY GROUP      @PEA   04987500
                 SPACE ,                                                04988900
* wait function code                                             @DCA   04991700
#WAIT3               EQU   1    wait3() function code            @DCA   04994500
#WAITID              EQU   2    waitid() function code           @DCA   04997300
                 SPACE ,                                                05000500
* items from waitf()                                                    05034800
WNOHANG              EQU   1    Wait, do not suspend execution          05069100
WUNTRACED            EQU   2    Wait, return status of stopped child    05103400
WCONTINUED           EQU   4    Wait, return status of continued child  05105400
*                                                                @DCA   05107400
WEXITED              EQU   8    Wait for process that have exited       05109400
*                                                                @DCA   05111400
WSTOPPED             EQU  16    Wait, return status of stopped child    05113400
*                                                                @DCA   05115400
WNOWAIT              EQU  32    Wait, return status of a child without  05117400
*                               changing the state.  The child can be   05119400
*                               waited for again.                @DCA   05121400
                 SPACE ,                                                05123400
* waitid() id type options                                       @DCA   05125400
P_PID                EQU   0    Wait for the child with a process ID    05127400
*                                                                @DCA   05129400
P_PGID               EQU   1    Wait for any child with a process       05131400
*                               group ID                         @DCA   05133400
P_ALL                EQU   2    Wait for any child               @DCA   05135400
                 SPACE ,                                                05137700
* BPX1PTX Options                                                       05154800
PTEXITTHREAD         EQU   0    Pthread exit                            05172000
PTGETNEWTHREAD       EQU   1    Pthread get new                         05206300
PTFAILIFLASTTHREAD   EQU   2    Pthread fail if last thread      @D4A   05207700
                 SPACE ,                                                05209100
QUIESCE_TERM         EQU   1    Quiesce threads type = term      @D3A   05210500
QUIESCE_FORCE        EQU   2    Quiesce threads type = force     @D3A   05211900
QUIESCE_QUERY        EQU   3    Alias of pthread_query           @P4C   05212800
PTHREAD_QUERY        EQU   3    Quiesce threads type = query     @P4A   05213700
QUIESCE_FREEZE       EQU   4    Quiesce threads type = freeze    @D6A   05213900
QUIESCE_UNFREEZE     EQU   5    Quiesce threads type = unfreeze  @D6A   05214100
FREEZE_THIS_THREAD   EQU   6    Quiesce threads type = freezeme  @D6A   05214300
* Skip 7 because of collision with BPXZCONS Freeze_Force                05214400
FREEZE_EXIT          EQU   8    Quiesce threads type = freeze_exit      05214500
QUIESCE_SRB          EQU   9    Quiesce threads type = SRBs      @DGA   05214600
* Skip 10 and 11 due to collision with BPXZCONS Freeze/Unfreeze Fast    05214650
*                                                                @P6A   05214700
                 SPACE ,                                                05214800
PTHREAD_INTR_ENABLE#       EQU 0  Cancel request type = enabled         05217600
PTHREAD_INTR_DISABLE#      EQU 1  Cancel request type = disabled        05220400
PTHREAD_INTR_CONTROLLED#   EQU 0  Cancel request type = controlled      05223300
PTHREAD_INTR_ASYNCHRONOUS# EQU 1  Cancel request type = Asynchronous    05231800
                 SPACE ,                                                05240600
STDIN_FILENO         EQU   0    Standard input value, file descriptor   05274900
STDOUT_FILENO        EQU   1    Standard output value, file descriptor  05309200
STDERR_FILENO        EQU   2    Standard error value, file descriptor   05343500
                 SPACE ,                                                05346300
DUBTHREAD            EQU   0    Dub a thread default setting     @L1A   05347000
DUBPROCESS           EQU   1    Dub a process default setting    @L1A   05347700
DUBTASKACEE          EQU   2    Dub a task ACEE setting          @02A   05347800
DUBPROCESSDEFER      EQU   4    Dub a process - but defer dub    @04A   05347900
                 SPACE ,                                                05348000
STL_MAX_TASKS        EQU   1    Replace MaxThreadTask only       @D7A   05348100
STL_MAX_THREADS      EQU   2    Replace MaxThreads only          @D7A   05348200
STL_SET_BOTH         EQU   3    Replace both limits              @D7A   05348300
                 SPACE ,                                                05348400
NICE_ZERO            EQU   20   Default Process Scheduling Priority     05348500
                 SPACE ,                                                05348600
PRIO_PROCESS         EQU   1    Looking for a specific process ID       05348700
PRIO_PGRP            EQU   2    Looking for processes in a process grp  05348800
PRIO_USER            EQU   3    Looking for processes for a user ID     05348900
                 SPACE ,                                                05349000
CPRIO_ABSOLUTE       EQU   1    Priority value is an absolute value     05349100
CPRIO_RELATIVE       EQU   2    Priority value is a relative value      05349200
                 SPACE ,                                                05349300
*   Define equates for memory map                                       05349400
PROT_READ            EQU   1    Mapped data can be read          @DAA   05349500
PROT_WRITE           EQU   2    Mapped data can be written       @DAA   05349600
PROT_NONE            EQU   4    Mapped data cannot be accessed   @DAA   05349700
PROT_EXEC            EQU   8    Mapped data can be executed (treated    05349800
*                               as PROT_READ)                    @DAA   05349900
                 SPACE ,                                                05350000
MAP_PRIVATE          EQU   1    Changes to the mapped data are private  05350100
MAP_SHARED           EQU   2    Changes to the mapped data are shared   05350200
MAP_FIXED            EQU   4    Interpret map address exactly    @DAA   05350300
MAP_MEGA             EQU   8    Use megabyte allocations         @D4A   05350400
                 SPACE ,                                                05350500
MS_SYNC              EQU   1    Performs synchronous writes      @DAA   05350600
MS_ASYNC             EQU   2    Performs asynchronous writes     @DAA   05350700
MS_INVALIDATE        EQU   4    Invalidate the cached memory mapped     05350800
*                               pages                            @DAA   05350900
                 SPACE ,                                                05351000
*   Define equates for spawn                                   @D9A     05351100
SPAWN_FDCLOSED       EQU  -1    Do not inherit this file desc  @D9A     05351200
                 SPACE ,                                                05351300
RLIMIT_CORE          EQU   4    Limit size of core dump          @DBA   05351400
RLIMIT_CPU           EQU   0    Limit CPU time per process       @DBA   05351500
RLIMIT_FSIZE         EQU   1    Limit file size                  @DBA   05351600
RLIMIT_NOFILE        EQU   6    Limit number of open files       @DBA   05351700
RLIMIT_AS            EQU   5    Limit address space size         @DBA   05351900
                 SPACE ,                                                05352100
RLIM_INFINITY        EQU   2147483647 No limit value             @DBA   05352300
                 SPACE ,                                                05352500
RUSAGE_SELF          EQU   0    Rusage for current process       @DBA   05352700
RUSAGE_CHILDREN      EQU  -1    Rusage for terminated children   @DBA   05352900
                 SPACE ,                                                05353100
*   Define equates for querydub output status                           05353200
QDB_DUBBED_FIRST     EQU   1    Task has already been dubbed.           05353300
*                               This task and this RB caused the        05353400
*                               dub.                             @DCA   05353500
QDB_DUBBED           EQU   2    Task has already been dubbed.           05353600
*                               Other task or other RB caused           05353700
*                               the dub                          @DCA   05353800
QDB_DUB_MAY_FAIL     EQU   4    Task has not been dubbed, but may       05353900
*                               fail if attempted.  Most likely         05354000
*                               reason for failure will be a missing    05354100
*                               or incomplete user security profile,    05354200
*                               or OMVS segment not defined      @DCA   05354300
QDB_DUB_OKAY         EQU   8    Task has not been dubbed, and should    05354400
*                               succeed if attempted             @DCA   05354500
QDB_DUB_AS_PROCESS   EQU   16   Task has not been dubbed, but its       05354600
*                               address space has. New task will dub    05354700
*                               as another process within the address   05354800
*                               space                            @DCA   05354900
QDB_DUB_AS_THREAD    EQU   32   Task has not been dubbed, but its       05355000
*                               address space has. New task will dub as 05355100
*                               a thread within the process      @DCA   05355200
                 SPACE ,                                                05355300
*   Define equates for oe_env_np syscall function codes                 05355400
ENQWAIT_PROCESS      EQU   1    Examine/Change ENQ wait interruption    05355500
*                               state                            @P6A   05355600
FREEZE_EXIT_REG      EQU   2    Register/deregister an exit             05355700
*                               for pthread_quiesce(freeze_exit) @P6A   05355800
MVS_USERID           EQU   3    Retrieve MVS userid of invoker   @P7A   05356000
ENV_TOGGLE_SEC       EQU   4    Toggle btw task/process security @P7A   05356200
DFP_CLEANUP_EXIT_REG EQU   5    Register DFP Close cleanup exit  @01A   05356300
BPXK_PARAMETER       EQU   6    Env Vars to Kernel               @P9A   05356400
ENV_STOR_SERVICE     EQU   7    Swappable or Non-Swappable              05356500
*                               address space                    @DJA   05356600
QUICK_FREEZE_EXIT_REG EQU  8    Register/deregister an exit for         05356630
*                               fast pthread_quiesce_and_get     @06A   05356660
                 SPACE ,                                                05356700
*   Define equates for possible options of ENV_STOR_SERVICE             05356800
*   For future additions, make equates multiples of 2                   05356900
*                                                               4@PED   05357000
BPX_SWAP         EQU   1    Make the address space swappable     @PEC   05357100
BPX_NONSWAP      EQU   2    Make the address space non-swappable        05357200
*                                                                @PEC   05357300
                 SPACE ,                                                05357700
*   Define equates for versions of OSMF on BPXESMF syscall              05357800
OSMF_VER_HOM1110     EQU   1    Version 1 of OSMF, for HOM1110   @P5A   05357900
OSMF_VER_HOM1120     EQU   2    Version 2 of OSMF, for HOM1120   @P5A   05358000
OSMF_VER_HOM1130     EQU   3    Version 3 of OSMF, for HOM1130   @P5A   05358100
                 SPACE ,                                                05358200
*   Define equates for task ecurity syscall function codes              05358300
TLS_CREATE_THREAD_SEC# EQU 1    Build Task Security              @P7A   05358400
TLS_DELETE_THREAD_SEC# EQU 2    Delete Task Security             @P7A   05358500
TLS_TASK_ACEE#         EQU 3    set posix identity from task ACEE@08A   05358550
TLS_IDENTITY_USERID#   EQU 1    User identity: 1-8 char userid   @P7A   05358600
TLS_IDENTITY_UID#      EQU 2    User identity: 4-byte uid        @P7A   05358700
TLS_IDENTITY_CERT#     EQU 4    User identity: CERT structure    @PFA   05358900
                 SPACE ,                                                05359100
*   Define equates for __Security syscall                               05359200
*   __Security function code                                            05359300
SECURITY_CREATE#       EQU 1    Create new security environment  @DKA   05359400
SECURITY_CERTREG#      EQU 2    Register certificate with caller @DOA   05359500
SECURITY_CERTDEREG#    EQU 3    DeReg certificate from caller    @DOA   05359600
*   __Security user identity                                            05359700
SECURITY_USERID#       EQU 1    User identity is 1-8 char userid @DKA   05359800
SECURITY_CERTIFICATE#  EQU 2    User identity is a certificate   @DKA   05359900
                 SPACE ,                                                05360000
*   Define equates for convert_id_np (BPX1CID) syscall function codes   05360100
CID_GET_UUID#          EQU 1    Retrieve UUID                    @P8A   05360200
CID_GET_USERID#        EQU 2    Retrieve userid                  @P8A   05360300
                 SPACE ,                                                05360400
*   Define equates for __pid_affinity (BPX1PAF) syscall function codes  05360500
PAF_ADD_PID#           EQU 1    Add PID to affinity list         @DMA   05360600
PAF_DELETE_PID#        EQU 2    Delete PID from affinity list    @DMA   05360700
                 SPACE ,                                                05360800
* Define equates for auth_check_resource_np  syscall access types       05360900
ACK_READ#              EQU 1    Test READ access                 @P8A   05361000
ACK_UPDATE#            EQU 2    Test UPDATE access               @P8A   05361100
ACK_CONTROL#           EQU 3    Test CONTROL access              @P8A   05361200
ACK_ALTER#             EQU 4    Test ALTER access                @P8A   05361300
                 SPACE ,                                                05361400
*   The high order two bytes of the reason codes returned by            05361500
*   OpenMVS services contains a value that is used to qualify           05361600
*   the contents of the low order two bytes. If the contents of         05361700
*   the high-order two bytes are within the range of #CMID_LO to        05361900
*   #CMID_HI, the error represented by the reason code is defined       05362100
*   by OpenMVS. If the contents of the high order two bytes lie         05363100
*   outside the range, the error represented by the reason code         05365900
*   is not an OpenMVS reason code.                                      05368700
#CMID_LOW            EQU   0000   Low range                             05371500
#CMID_HI             EQU   8447   High range                            05374300
*   Define equates for console cmd                                      05375000
CC_MAX_MSG_LENGTH       EQU 17850 Max Wto string length for SUs   @DIC  05375700
CC_MAX_MSG_LENGTH_NONSU EQU 17780 Max Wto string length for nonSU @DIC  05376400
CC_MODIFY_BUFFER_LENGTH EQU 128  Length of Modify Buffer          @PAC  05377100
CONSOLE_MODIFY          EQU   1  Service interrupted by Modify    @PAC  05377800
CONSOLE_STOP            EQU   2  Service interrupted by Stop      @PAC  05378500
*   Define equates for server_init syscall ManagerType parameter        05379700
SRV_WORKMGR             EQU   1  Work Manager services requested  @DGA  05382100
SRV_QUEUEMGR            EQU   2  Queue Mgr services requested     @DGA  05384500
SRV_SERVERMGR           EQU   4  Server Mgr services requested    @DGA  05386900
SRV_SERVERMGRDYNAMIC    EQU   8  Server Mgr With Dynamic mngt     @DSA  05388100
*   Define equates for server_pwu syscall FcnCode parameter             05389300
SRV_PUT_NEWWRK          EQU   1  Put new work function requested  @DGA  05391700
SRV_PUT_SUBWRK          EQU   2  Put sub work function requested  @DGA  05394100
SRV_TRANSFER_WRK        EQU   4  Transfer work function requested @DGA  05396500
SRV_GET_WRK             EQU   8  Get work function requested      @DGA  05398900
SRV_REFRESH_WRK         EQU  16  Refresh work fcn requested       @DGA  05401300
SRV_END_WRK             EQU  32  End work function requested      @DGA  05403700
SRV_DEL_ENC             EQU  64  Delete Enclave Fcn requested     @DGA  05406100
SRV_DISCONNECT          EQU 128  Disconnect from WLM              @PBA  05407300
SRV_DISCONNECT_COND     EQU 256  Disconnect conditional from WLM  @PCA  05407400
*                       EQU 512  Reserved for internal use        @PGA  05407500
*                                See BPXZCONS                     @PGA  05407600
*   Define equates for BPX1SLK syscall LockFcnCode parameter            05407700
SLK_OBTAIN              EQU   1  Obtain function request          @DZA  05407800
SLK_OBTAIN_COND         EQU   2  Obtain conditional function req  @DZA  05407900
SLK_INIT                EQU   4  Initialization function request  @DZA  05408000
SLK_DESTROY             EQU   8  Destroy function request         @DZA  05408100
SLK_RELEASE             EQU  16  Release function request         @DZA  05408200
*   Define equates for BPX1SLK syscall LockReqType parameter            05408300
SLK_NORMAL              EQU   1  Normal request type              @DZA  05408400
SLK_ERRORCHECK          EQU   2  Errorcheck request type          @DZA  05408500
SLK_RECURSIVE           EQU   4  Recursive request type           @DZA  05408600
*   Define equates for BPX1SLK syscall LockType parameter               05408700
SLK_EXCLUSIVE           EQU   1  Exclusive lock type              @DZA  05408800
SLK_SHARED              EQU   2  Shared lock type                 @DZA  05408900
* Constants for BPXVRCAC - LFS Cache                              @DHA  05409000
PC#ADDFILE              EQU X'80000007' Filecache cmd '80000007'x @PDC  05409100
PC#DELETEFILE           EQU X'80000008' Filecache cmd '80000008'x @PDC  05409200
PC#PURGECACHE           EQU X'8000000A' Filecache cmd '8000000A'x @PDC  05409300
PC#REFRESHCACHE         EQU X'80000009' Filecache cmd '80000009'x @PDC  05409400
PC#SHUTDOWNFILESYS      EQU X'8000000B' Soft Shutdown '8000000B'x @09A  05409450
*                                                                       05409500
PC#SETIBMASYIO          EQU X'C0000006' SetIbm AsyncIO 'C0000006'x@PDC  05409600
PC#SETIBMOPTCMD         EQU X'C0000005' SetIBMOpt TCP  'C0000005'x@PDC  05409700
PC#ERRORTEXT            EQU X'C000000B' Get error text 'C000000B'x@DNA  05409800
*                                                     -1073741813 @DNA  05409900
PC#SYSNAMES             EQU X'C000000E' Get sysnames   'C000000C'x@PxA  05410000
PC#TDNAMES              EQU X'C000000F' GET CINET TDNAMES         @03A  05410100
PC#HFSSTATS             EQU X'C0000010' GET HFS Stats             @PKA  05410200
PC#BRLMSRVR             EQU X'C0000011' GET brlm server name      @PKA  05410300
PC#SFSDIAG              EQU X'80000012' Shared-FS Diagnose        @07A  05410350
PC#ETDESC               EQU X'0000'     Get description text      @DNA  05410400
PC#ETACTION             EQU X'0001'     Get action text           @DNA  05410500
PC#ETMODNAME            EQU X'0002'     Get module name           @DNA  05410700
PC#ETREASON             EQU X'0000'     Reason code input         @DNA  05410900
PC#ETERRNO              EQU X'0001'     Errno code input          @DNA  05411100
*                                                                       05411900
* Constants for BPXPRLOD - HFS load - options                     @DPA  05413400
*                                                                       05414900
LOD_ERROR_ST_EXLINK     EQU X'80000000'  Error if sticky/ext lnk  @DRA  05416400
LOD_IGNORE_STICKY       EQU X'40000000'  Skip sticky check        @DRA  05417900
*                                                                       05419400
* Constants for BPX1DSD                                           @DPA  05420900
*                                                                       05422400
SW_SIGDLV_ENABLE#       EQU 1                                     @DPA  05423900
SW_SIGDLV_DISABLE#      EQU 2                                     @DPA  05425400
*                                                                       05426900
*   Define equates for BPX1OSE syscall function_code parameter          05428400
OSENV_GET               EQU   1  get function                     @DQA  05429900
OSENV_SET               EQU   2  set function                     @DQA  05431400
OSENV_UNSET             EQU   4  unset function                   @DQA  05432900
OSENV_PERSIST           EQU   8  persist function                 @DQA  05434400
OSENV_UNPERSIST         EQU   16 unpersist function               @DQA  05435900
*   Define equates for BPX1OSE syscall Request_Flags parameter          05437400
OSENV_WLM               EQU   1  WLM Enclave membership           @DQA  05438900
OSENV_SECURITY          EQU   2  pthread security environment     @DQA  05440400
*                                                                       05441900
*   Define equates for BPX1PQG syscall RequestType parameter            05442000
THDQ_FREEZE             EQU   2  Freezes the threads identified in      05442100
*                                the THDQ Data List array (BPXYTHDQ)    05442200
*                                                                 @06A  05442300
THDQ_UNFREEZE_ALL       EQU   8  Unfreezes all threads that are frozen  05442400
*                                in the caller process            @06A  05442500
THDQ_GET_STATE          EQU   1  Retrieves the state data for the       05442600
*                                threads identified in the THDQ data    05442700
*                                list array or for all threads.         05442800
*                                This value can only be specified with  05442900
*                                THDQ_FREEZE                      @06A  05443000
*                                                                       05443100
** BPXYCONS End                                                         05443400
         SPACE 3                                                        05444900
         AIF   ('&LIST' EQ 'YES').E411                        6@D1A     05446400
         POP   PRINT                                                    05480700
.E411    ANOP  ,                                                        05515000
         MEND                                                           05550000
  Terminating PL/X comment                                           */ 05600000
 %CONSPLS : ;                                                           05650000
 Declare                                                                05700000
   DFLT_ARG_MAX Fixed(31) Constant(00100000x), /* Constant for default  05750000
                                    ARG_MAX (1 MEG)                  */ 05800000
   DFLT_CHILD_MAX Fixed(31) CONSTANT(6), /* Constant for default        05850000
                                    CHILD_MAX (_POSIX_CHILD_MAX)     */ 05900000
   DFLT_CLK_TCK Fixed(31) CONSTANT(100),  /* Constant for default       05950000
                                    CLK_TCK (100 ticks per second)   */ 06000000
   DFLT_NGROUPS_MAX Fixed(31) CONSTANT(8191), /* Constant for default   06050000
                                    NGROUPS_MAX (RACF maximum value) */ 06100000
   DFLT_OPEN_MAX Fixed(31) CONSTANT(16), /* Constant for default        06150000
                                    OPEN_MAX (_POSIX_OPEN_MAX)       */ 06200000
   DFLT_TZNAME_MAX Fixed(31) CONSTANT(9), /* Constant for default       06350000
                                    TZNAME_MAX                       */ 06400000
   DFLT_JOB_CONTROL Fixed(31) CONSTANT(1), /* Constant for default      06450000
                                    JOB_CONTROL                      */ 06500000
   DFLT_SAVED_IDS Fixed(31) CONSTANT(1), /* Constant for default        06550000
                                    SAVED_IDS                        */ 06600000
   DFLT_VERSION Fixed(31) CONSTANT(199009), /* Constant for default     06650000
                                    VERSION                          */ 06700000
   DFLT_THREAD_TASKS_NP Fixed(31) CONSTANT(50), /* Constant for default 06710000
                                     THREAD_TASKS_MAX_NP             */ 06720000
   DFLT_USERIDLEN_MAX   Fixed(31) Constant(8),  /* Max chars allowed    06722000
                                                   for USERID    @DKA*/ 06724000
   DFLT_PASSWDLEN_MAX   Fixed(31) Constant(8),  /* Max chars allowed    06726000
                                                   for Password  @DKA*/ 06728000
   DFLT_2_CHAR_TERM Fixed(31) CONSTANT(1); /* Constant for default      06730000
                                     2_CHAR_TERM            @P7C @P1A*/ 06740000
 Declare                                                                06750000
   SC_ARG_MAX Fixed(31) CONSTANT(1),  /* Constant for querying          06800000
                                    ARG_MAX from sysconf()           */ 06850000
   SC_CHILD_MAX Fixed(31) CONSTANT(2),  /* Constant for querying        06900000
                                    CHILD_MAX from sysconf()         */ 06950000
   SC_CLK_TCK Fixed(31) CONSTANT(3),    /* Constant for querying        07000000
                                    CLK_TCK from sysconf()           */ 07050000
   SC_JOB_CONTROL Fixed(31) CONSTANT(4), /* Constant for querying       07100000
                                    JOB_CONTROL from sysconf()       */ 07150000
   SC_NGROUPS_MAX Fixed(31) CONSTANT(5), /* Constant for querying       07200000
                                    NGROUPS_MAX from sysconf()       */ 07250000
   SC_OPEN_MAX Fixed(31) CONSTANT(6), /* Constant for querying          07300000
                                    OPEN_MAX from sysconf()          */ 07350000
   SC_SAVED_IDS Fixed(31) CONSTANT(7), /* Constant for querying         07400000
                                    SAVED_IDS from sysconf()         */ 07450000
   SC_TZNAME_MAX Fixed(31) CONSTANT(9), /* Constant for querying        07600000
                                    TZNAME_MAX from sysconf()        */ 07650000
   SC_VERSION Fixed(31) CONSTANT(10), /* Constant for querying          07700000
                                    VERSION from sysconf()           */ 07750000
   SC_THREAD_TASKS_MAX_NP Fixed(31) CONSTANT(11),/* Constant to query   07760000
                                     THREAD_TASKS_MAX from sysconf() */ 07770000
   SC_2_CHAR_TERM Fixed(31) CONSTANT(12), /* Constant to query          07780000
                                     2_CHAR_TERM from sysconf()  @P1A*/ 07790000
   SC_THREADS_MAX_NP      Fixed(31) CONSTANT(13),/* Constant to query   07793300
                                   THREADS_MAX_NP from sysconf() @D5A*/ 07796600
   SC_MMAP_MEM_MAX        Fixed(31) CONSTANT(14), /* Constant to query  07797000
                                   MMAP_STG_MAX                  @DAA*/ 07797400
   SC_TTY_GROUP           Fixed(31) CONSTANT(15); /* Constant to query  07797500
                                   TTY_GROUP                     @DEA*/ 07797600
                                                                        07797800
 Declare                            /*  wait extension function codes   07798200
                                                                 @DCA*/ 07798600
   #WAIT3        Fixed(32) Constant(1), /* wait3() function code @DCA*/ 07799000
   #WAITID       Fixed(32) Constant(2); /* waitid() function cde @DCA*/ 07799400
 Declare                            /*  WUNCTRACED/WNOHANG           */ 07800000
   WNOHANG       Fixed(32) Constant(1),                                 07850000
   WUNTRACED     Fixed(32) Constant(2),                                 07855500
   WCONTINUED    Fixed(32) Constant(4),  /* wait for a continued child  07861000
                                                                 @DCA*/ 07866500
   WEXITED       Fixed(32) Constant(8),  /* wait for processes that     07872000
                                   have exited                   @DCA*/ 07877500
   WSTOPPED      Fixed(32) Constant(16), /* wait for child process that 07883000
                                   has stopped                   @DCA*/ 07888500
   WNOWAIT       Fixed(32) Constant(32); /* Wait, return status of a    07894000
                                   child without changing the state.    07899500
                                   The child can be waited for again    07905000
                                   later.                        @DCA*/ 07910500
 Declare                            /*  waitid() id_type options @DCA*/ 07916000
   P_PID         Fixed(32) Constant(0),  /* wait for the child with a   07921500
                                   process ID                    @DCA*/ 07927000
   P_PGID        Fixed(32) Constant(1),  /* wait for any child with a   07932500
                                   process group ID              @DCA*/ 07938000
   P_ALL         Fixed(32) Constant(2);  /* wait for any child   @DCA*/ 07943500
 Declare                            /*  BPX1PTX Options              */ 07950000
   PTEXITTHREAD   Fixed(32) Constant(0),                                08000000
   PTGETNEWTHREAD Fixed(32) Constant(1),                                08014200
   PTFAILIFLASTTHREAD Fixed(32) Constant(2);                 /*  @D4A*/ 08028400
 Declare                            /*  Quiesce threads types        */ 08042600
   QUIESCE_TERM    Fixed(32) Constant(1),                               08056800
   QUIESCE_FORCE   Fixed(32) Constant(2),                               08071000
   QUIESCE_QUERY   Fixed(32) Constant(3), /* pthread_query alias @P4C*/ 08075800
   PTHREAD_QUERY   Fixed(32) Constant(3), /* new query name      @P4A*/ 08080600
   QUIESCE_FREEZE  Fixed(32) Constant(4),                     /* @D6A*/ 08085400
   QUIESCE_UNFREEZE Fixed(32) Constant(5),                    /* @D6A*/ 08090200
   FREEZE_THIS_THREAD Fixed(32) Constant(6),                  /* @D6A*/ 08093400
   FREEZE_EXIT Fixed(32) Constant(8), /* Skip 7, see BPXZCONS    @P6A*/ 08095600
   QUIESCE_SRB Fixed(32) Constant(9);                         /* @DGA*/ 08097800
                                    /* Skip 10-11 see BPXZCONS   @06A*/ 08098800
 DECLARE                            /*  Pthread cancellation type    */ 08100000
   PTHREAD_INTR_ENABLE#       FIXED(32) CONSTANT(0), /* Enabled      */ 08150000
   PTHREAD_INTR_DISABLE#      FIXED(32) CONSTANT(1), /* Disabled     */ 08200000
   PTHREAD_INTR_CONTROLLED#   FIXED(32) CONSTANT(0), /* controlled   */ 08250000
   PTHREAD_INTR_ASYNCHRONOUS# FIXED(32) CONSTANT(1); /* Asynchronous */ 08300000
 Declare                            /*  Dub default service settings */ 08308300
   DUBTHREAD Fixed(32) Constant(0),  /* Dub a thread default setting    08316600
                                                                 @L1A*/ 08324900
   DUBPROCESS Fixed(32) Constant(1), /* Dub a process default setting   08333200
                                                                 @L1A*/ 08341500
   DUBTASKACEE Fixed(32) Constant(2), /* Dub each thread task's ACEE    08341900
                                          (Init_USP) setting     @02A*/ 08342300
   DUBPROCESSDEFER Fixed(32) Constant(4); /* Defer process dub   @04A*/ 08342600
 Declare                             /*  STL Actions             @D7A*/ 08342900
   STL_MAX_TASKS   Fixed(32) Constant(1), /* Replace Task limit  @D7A*/ 08344300
   STL_MAX_THREADS Fixed(32) Constant(2), /* Replace thread limit       08345700
                                                                 @D7A*/ 08347100
   STL_SET_BOTH    Fixed(32) Constant(3); /* Replace both limits @D7A*/ 08348500
                                                                        08350000
 Declare                             /*  NICE Zero Value         @D7A*/ 08350700
   NICE_ZERO       Fixed(32) Constant(20); /* Default Process Scheduling08351400
                                              Priority           @D8A*/ 08352100
 Declare                       /* Setprio/Getprio Which values   @D8A*/ 08352800
   PRIO_PROCESS    Fixed(32) Constant(1), /* Looking for a specific     08353500
                                             process             @D8A*/ 08354200
   PRIO_PGRP       Fixed(32) Constant(2), /* Looking for processes in   08354900
                                             a process group     @D8A*/ 08355600
   PRIO_USER       Fixed(32) Constant(3); /* Looking for processes for  08356300
                                             a user ID           @D8A*/ 08357000
 Declare                       /* Chpriority PriorityType Values @DBA*/ 08357100
   CPRIO_ABSOLUTE  Fixed(32) Constant(1), /* Priority value is an       08357200
                                             absolute value      @DBA*/ 08357300
   CPRIO_RELATIVE  Fixed(32) Constant(2); /* Priority value is a        08357400
                                             relative value      @DBA*/ 08357500
 Declare                       /* memory map protect values          */ 08357600
   PROT_READ     Fixed(32) Constant(1), /* Mapped data can be read      08358200
                                                                 @DAA*/ 08358800
   PROT_WRITE    Fixed(32) Constant(2), /* Mapped data can be           08359400
                                           written               @DAA*/ 08360000
   PROT_NONE     Fixed(32) Constant(4), /* Mapped data cannot be        08360600
                                           accessed              @DAA*/ 08361200
   PROT_EXEC     Fixed(32) Constant(8); /* Mapped data can be           08361800
                                           executed. Treated same as    08362400
                                           PROT_READ.            @DAA*/ 08363000
 Declare                       /* memory map map_type values         */ 08363600
   MAP_PRIVATE   Fixed(32) Constant(1), /* Changes to mapped data       08364800
                                           are private           @DAA*/ 08366000
   MAP_SHARED    Fixed(32) Constant(2), /* Changes to mapped data       08366200
                                           are shared            @DAA*/ 08366400
   MAP_FIXED     Fixed(32) Constant(4), /* Interpret map address        08366800
                                           exactly               @DAA*/ 08367200
   MAP_MEGA     Fixed(32) Constant(8); /* Use megabyte allocations      08367400
                                                                 @D4A*/ 08367600
 Declare                       /* memory map msync options           */ 08367800
   MS_SYNC       Fixed(32) Constant(1), /* Performs synchronous         08368400
                                           writes                @DAA*/ 08369000
   MS_ASYNC      Fixed(32) Constant(2), /* Performs asynchronous        08369600
                                           writes                @DAA*/ 08370200
   MS_INVALIDATE Fixed(32) Constant(4); /* Invalidate the cached        08370800
                                           memory mapped pages   @DAA*/ 08371400
 Declare                       /* spawn constants                @D9A*/ 08372000
   SPAWN_FDCLOSED Fixed(31) Constant(-1); /* Do not inherit this        08372600
                                             file descriptor     @D9A*/ 08373200
 Declare                                                                08374400
   RLIMIT_CORE   Fixed(32) Constant(4), /* Limit size of core dump      08375600
                                                                 @DBA*/ 08376800
   RLIMIT_CPU    Fixed(32) Constant(0), /* Limit CPU time per process   08378000
                                                                 @DBA*/ 08379200
   RLIMIT_FSIZE  Fixed(32) Constant(1), /* Limit file size              08380400
                                                                 @DBA*/ 08381600
   RLIMIT_NOFILE Fixed(32) Constant(6), /* Limit number of open files   08382800
                                                                 @DBA*/ 08384000
   RLIMIT_AS     Fixed(32) Constant(5); /* Limit address space size     08385200
                                                                 @DBA*/ 08386400
 Declare                                                                08387600
   RLIM_INFINITY Fixed(32) Constant(2147483647); /* No limit value      08388800
                                                                 @DBA*/ 08390000
  Declare                                                               08391200
    RUSAGE_SELF   Fixed(31) Constant(0), /* Rusage for current process  08392400
                                                                 @DBA*/ 08393600
    RUSAGE_CHILDREN Fixed(31) Constant(-1); /* Rusage for terminated    08394800
                                           children              @DBA*/ 08396000
 /*   Define constants for querydub output status                    */ 08396600
                                                                        08397200
 Declare                                                                08397300
   QDB_DUBBED_FIRST   Fixed(32) Constant(1), /* Task has already been   08397400
                                dubbed. This task and this RB caused    08397500
                                the dub.                        @DCA*/  08397600
   QDB_DUBBED         Fixed(32) Constant(2), /* Task has already been   08397700
                                dubbed. Other task or other RB caused   08397800
                                the dub.                        @DCA*/  08397900
   QDB_DUB_MAY_FAIL   Fixed(32) Constant(4), /* Task has not been       08398000
                                dubbed, but may fail if attempted.      08398100
                                Most likely reason for failure is       08398200
                                a missing or incomplete user            08398300
                                security profile, or                    08398400
                                OMVS segment not defined.        @DCA*/ 08398500
   QDB_DUB_OKAY       Fixed(32) Constant(8), /* Task has not been       08398600
                                dubbed, and should succeed if attempted 08398700
                                                                 @DCA*/ 08398800
   QDB_DUB_AS_PROCESS Fixed(32) Constant(16), /* Task has not been      08398900
                                dubbed, but its address space has.      08399000
                                New task will dub as another            08399100
                                process within the address space @DCA*/ 08399200
   QDB_DUB_AS_THREAD  Fixed(32) Constant(32); /* Task has not been      08399300
                                dubbed, but its address space has.      08399400
                                New task will dub a thread within       08399500
                                the process                      @DCA*/ 08399600
                                                                        08399700
 /*   Define constants for oe_env_np syscall function codes          */ 08401900
                                                                        08404100
  Declare                                                               08406300
    ENQWAIT_PROCESS   Fixed(32) Constant(1), /* Examine/Change ENQ wait 08408500
                                 interruption state for the callers     08410700
                                 process                         @P6A*/ 08412900
    FREEZE_EXIT_REG   Fixed(32) Constant(2), /* Register/deregister an  08415100
                                 exit for pthread_quiesce(freeze_exit)  08417300
                                                                 @P6A*/ 08419500
    MVS_USERID        Fixed(32) Constant(3), /* Retrieve the MVS        08419600
                                 userid of the invoker           @P6A*/ 08419700
    ENV_TOGGLE_SEC    Fixed(32) Constant(4), /* Toggle between task and 08419800
                                 process security environments   @P7A*/ 08419900
    DFP_CLEANUP_EXIT_REG Fixed(32) Constant(5), /* Register DFP         08420000
                                 Close Cleanup Exit              @01A*/ 08420100
    BPXK_PARAMETER  Fixed(32) Constant(6), /* Env Vars to Kernel @DJC*/ 08420200
    ENV_STOR_SERVICE  Fixed(32) Constant(7), /* Swappable or            08420340
                                 non-swappable  address space    @DJA*/ 08420400
    QUICK_FREEZE_EXIT_REG Fixed(32) Constant(8); /* Register/deregister 08420420
                                 an exit for pthread quiesce_and_get    08420440
                                                                 @06A*/ 08420460
                                                                        08420500
 /*   Define constants for Task Security syscal function codes       */ 08420600
  Declare                                                               08420800
      TLS_CREATE_THREAD_SEC#          /* Build Task Security     @P7A*/ 08420900
                        Fixed(32) Constant(1),                          08421000
      TLS_DELETE_THREAD_SEC#          /* Delete Task Security    @P7A*/ 08421100
                        Fixed(32) Constant(2),                          08421200
      TLS_TASK_ACEE#                  /* Set Posix identity      @08A*/ 08421230
                        Fixed(32) Constant(3),                          08421260
      TLS_IDENTITY_USERID#            /* User identity:          @P7A*/ 08421300
                        Fixed(32) Constant(1), /* 1-8 char userid    */ 08421400
      TLS_IDENTITY_UID#               /* User identity:          @P7A*/ 08421500
                        Fixed(32) Constant(2), /* 4-byte uid         */ 08421600
      TLS_IDENTITY_UUID#              /* User identity:          @P7A*/ 08421700
                        Fixed(32) Constant(3), /* x-byte uuid        */ 08421800
      TLS_IDENTITY_CERT#              /* User identity:          @PFA*/ 08421900
                        Fixed(32) Constant(4); /* CERT stucture  @PFA*/ 08422000
                                                                        08422100
 /*   Define constants for __Security syscall                    @DKA*/ 08422200
 /*   __Security Function Codes                                  @DKA*/ 08422300
 Dcl SECURITY_CREATE#         Fixed(32) Constant(1),                    08422400
     SECURITY_CERTREG#        Fixed(32) Constant(2),          /* @DOA*/ 08422500
     SECURITY_CERTDEREG#      Fixed(32) Constant(3),          /* @DOA*/ 08422600
 /*   __Security user identities                                 @DKA*/ 08422700
     SECURITY_USERID#         Fixed(32) Constant(1),                    08422800
     SECURITY_CERTIFICATE#    Fixed(32) Constant(2);          /* @DKA*/ 08422900
                                                                        08423000
 /*   Define constants for __pid_affinity (BPX1PAF) syscall functions*/ 08423100
                                                                        08423200
  Declare                                                               08423300
      PAF_ADD_PID#                    /* Add PID to list         @DMA*/ 08423400
                        Fixed(32) Constant(1),                          08423500
      PAF_DELETE_PID#                 /* Delete PID from list    @DMA*/ 08423600
                        Fixed(32) Constant(2);                          08423700
                                                                        08423800
 /*   Define constants for convert_id_np (BPX1CID) syscall functions */ 08423900
                                                                        08424000
  Declare                                                               08424100
      CID_GET_UUID#                   /* Retrieve UUID           @P8A*/ 08424200
                        Fixed(32) Constant(1),                          08424300
      CID_GET_USERID#                 /* Retrieve userid         @P8A*/ 08424400
                        Fixed(32) Constant(2);                          08424500
                                                                        08424600
 /* Define constants for auth_check_resource_np  (BPX1ACK) syscall      08424700
    access types                                                     */ 08424800
                                                                        08424900
  Declare                                                               08425000
      ACK_READ#                       /* Test READ access        @P8A*/ 08425100
                        Fixed(32) Constant(1),                          08425200
      ACK_UPDATE#                     /* Test UPDATE access      @P8A*/ 08425300
                        Fixed(32) Constant(2),                          08425400
      ACK_CONTROL#                    /* Test CONTROL access     @P8A*/ 08425500
                        Fixed(32) Constant(3),                          08425600
      ACK_ALTER#                      /* Test ALTER access       @P8A*/ 08425700
                        Fixed(32) Constant(4);                          08425800
                                                                        08425900
 /*   Define constants for versions of OSMF on BPXESMF syscall       */ 08426000
                                                                        08426100
  Declare                                                               08428300
    OSMF_VER_HOM1110  Fixed(8)  Constant(1), /* Version 1 of OSMF, used 08430500
                                                in HOM1110       @P5A*/ 08432700
    OSMF_VER_HOM1120  Fixed(8)  Constant(2), /* Version 2 of OSMF, used 08434900
                                                in HOM1120       @P5A*/ 08437100
    OSMF_VER_HOM1130  Fixed(8)  Constant(3); /* Version 3 of OSMF, used 08439300
                                                in HOM1130       @P5A*/ 08441500
                                                                        08443700
 /*   The high order two bytes of the reason codes returned by          08445900
      OpenMVS services contains a value that is used to qualify         08450000
      the contents of the low order two bytes. If the contents of       08500000
      the high-order two bytes are within the range of #CMID_LO to      08550000
      #CMID_HI, the error represented by the reason code is defined     08600000
      by OpenMVS. If the contents of the high order two bytes lie       08650000
      outside the range, the error represented by the reason code       08700000
      is not an OpenMVS reason code.                                 */ 08750000
 DECLARE                                                                08800000
   #CMID_LOW  Fixed(32) Constant(0000x), /* Low range                */ 08850000
   #CMID_HI   Fixed(32) Constant(20FFx); /* High range               */ 08900000
                                                                        08950000
 /*   Define constants for Console Communication service             */ 09000000
                                                                        09050000
  Declare                                                               09100000
      CC_Max_Msg_Length                                                 09150000
          Fixed(32) Constant(17850);/* Max Wto string length for SUs    09200000
                                                                 @DIC*/ 09250000
  Declare                                                               09300000
      CC_Max_Msg_Length_NonSU                                           09350000
          Fixed(32) Constant(17780);/* Max Wto string length for NonSUs 09400000
                                                                 @DIC*/ 09450000
  Declare                                                               09500000
      CC_Modify_Buffer_Length                                           09550000
          Fixed(32) Constant(128);/* Length of Modify Buffer     @DFA*/ 09600000
  Declare                                                               09650000
      CONSOLE_MODIFY                                                    09700000
          Fixed(32) Constant(1);/* Service interrupted by Modify @DFA*/ 09750000
  Declare                                                               09800000
      CONSOLE_STOP                                                      09850000
          Fixed(32) Constant(2);/* Service interrupted by Stop   @DFA*/ 09900000
                                                                        09950000
 /********************************************************************/ 10000000
 /*   Define constants for srv_ callable service interfaces      @DGA*/ 10050000
 /********************************************************************/ 10100000
  Declare   /* Constants for srvinit_np() ManagerType parameter  @DGA*/ 10150000
     SRV_WORKMGR                                                        10250000
        Fixed(32) Constant(1),/* Work Manager services requested @DGA*/ 10300000
     SRV_QUEUEMGR                                                       10400000
        Fixed(32) Constant(2),/* Queue Mgr services requested    @DGA*/ 10450000
     SRV_SERVERMGR                                                      10550000
        Fixed(32) Constant(4),/* Server Mgr services requested   @DGA*/ 10575000
     SRV_SERVERMGRDYNAMIC                                               10600000
        Fixed(32) Constant(8);/* Server Mgr With Dynamic mngt    @DSA*/ 10625000
                                                                        10650000
  Declare   /* Constants for srvpwu_np() FcnCode parameter       @DGA*/ 10700000
     SRV_PUT_NEWWRK                                                     10800000
        Fixed(32) Constant(1),/* Put new work function requested @DGA*/ 10850000
     SRV_PUT_SUBWRK                                                     10950000
        Fixed(32) Constant(2),/* Put sub work function requested @DGA*/ 11000000
     SRV_TRANSFER_WRK                                                   11100000
        Fixed(32) Constant(4),/* Transfer work function requested @DGA*/11150000
     SRV_GET_WRK                                                        11250000
        Fixed(32) Constant(8),/* Get work function requested     @DGA*/ 11300000
     SRV_REFRESH_WRK                                                    11400000
        Fixed(32) Constant(16),/* Refresh work fcn requested     @DGA*/ 11450000
     SRV_END_WRK                                                        11550000
        Fixed(32) Constant(32),/* End work function requested    @DGA*/ 11600000
     SRV_DEL_ENC                                                        11700000
        Fixed(32) Constant(64),/* Delete Enclave Fcn requested   @DGA*/ 11750000
     SRV_DISCONNECT                                                     11850000
        Fixed(32) Constant(128),/* Disconnect from WLM           @PBA*/ 11885000
     SRV_DISCONNECT_COND                                                11920000
        Fixed(32) Constant(256),/* Disconnect conditional from WLM      11930000
                                                                 @PCA*/ 11940000
     SRV_RESERVED_4_INTERNAL_USE                                        11944000
        Fixed(32) Constant(512);/* See BPXZCONS                         11946000
                                                                 @PGA*/ 11948000
 /********************************************************************/ 11950000
 /* Constants for BPX1PCT pfsctl                                 @03A*/ 12000000
 /********************************************************************/ 12050000
 /* Constants for BPXVRCAC - LFS Cache                           @DHA*/ 12075000
 Dcl                                                                    12100000
   PC#AddFile       Bit(32) Constant('80000007'X),            /* @DHA*/ 12150000
   PC#DeleteFile    Bit(32) Constant('80000008'X),            /* @DHA*/ 12200000
   PC#RefreshCache  Bit(32) Constant('80000009'X),            /* @DHA*/ 12240000
   PC#PurgeCache    Bit(32) Constant('8000000A'X);            /* @DHA*/ 12280000
                                                                        12320000
 /* Misc other function codes                                    @03A*/ 12360000
 Dcl                                                                    12400000
   PC#SetIbmOptCmd  Bit(32) Constant('C0000005'X),            /* @DHA*/ 12460000
   PC#SetIbmAsyIO   Bit(32) Constant('C0000006'X),            /* @DHA*/ 12465000
   PC#ErrorText     Bit(32) Constant('C000000B'X),            /* @DNA*/ 12470000
   PC#ShutdownFileSys  Bit(32) Constant('8000000B'X),         /* @09A*/ 12470700
   PC#PfsRecycle    Bit(32) Constant('8000000C'x),            /* @PHA*/ 12471400
   PC#PfsRestart    Bit(32) Constant('8000000D'x),            /* @PHA*/ 12472800
   PC#HfsStats      Bit(32) Constant('C0000010'X),            /* @PKA*/ 12473200
   PC#BrlmSrvr      Bit(32) Constant('C0000011'X),            /* @PKA*/ 12473600
   PC#SysNames      Bit(32) Constant('C000000E'X),            /* @PxA*/ 12474200
   PC#TdNames       Bit(32) Constant('C000000F'X),            /* @03A*/ 12475990
   PC#SfsDiag       Bit(32) Constant('80000012'X),            /* @07A*/ 12476090
   PC#UserSignal    Bit(32) Constant('C0000013'X);            /* @05A*/ 12476380
                                                                        12477000
 Dcl   /* PC#ErrorText Subfunctions                             6@03M*/ 12478400
   PC#EtDesc        Bit(16) Constant('0000'X),                /* @DNA*/ 12480000
   PC#EtAction      Bit(16) Constant('0001'X),                /* @DNA*/ 12490000
   PC#EtModname     Bit(16) Constant('0002'X),                /* @DNA*/ 12500000
   PC#EtRqstMax     Bit(16) Constant('0002'X),                /* @DNA*/ 12510000
   PC#EtReason      Bit(16) Constant('0000'X),                /* @DNA*/ 12520000
   PC#EtErrno       Bit(16) Constant('0001'X),                /* @DNA*/ 12530000
   PC#EtTypeMax     Bit(16) Constant('0001'X);                /* @DNA*/ 12536600
                                                                        12543200
 /********************************************************************/ 12550000
 /* Constants for BPXMRENV - ENV_STOR_SERVICE Function           @DJA*/ 12600000
 /********************************************************************/ 12650000
 Dcl                                                         /*  @DJA*/ 12700000
                                                             /* 2@PED*/ 12750000
   BPX_SWAP       Fixed(32) Constant(1),                     /*  @PEC*/ 12800000
   BPX_NONSWAP    Fixed(32) Constant(2);                     /*  @PEC*/ 12850000
 /********************************************************************/ 12900000
 /*   Define equates for BPX1SLK syscall LockFcnCode parameter       */ 12950000
 /********************************************************************/ 13000000
 Dcl                                                         /*  @DZA*/ 13050000
   SLK_OBTAIN     Fixed(32) Constant(1), /* Obtain function             13100000
                                    request                      @DZA*/ 13150000
   SLK_OBTAIN_COND Fixed(32) Constant(2),/* Obtain conditional function 13200000
                                    request                      @DZA*/ 13250000
   SLK_INIT       Fixed(32) Constant(4), /* Initialization function     13300000
                                    request                      @DZA*/ 13350000
   SLK_DESTROY    Fixed(32) Constant(8), /* Destroy function            13400000
                                    request                      @DZA*/ 13450000
   SLK_RELEASE    Fixed(32) Constant(16);/* Release function            13500000
                                    request                      @DZA*/ 13550000
 /********************************************************************/ 13600000
 /*   Define equates for BPX1SLK syscall LockReqType parameter       */ 13650000
 /********************************************************************/ 13700000
 Dcl                                                         /*  @DZA*/ 13750000
   SLK_NORMAL     Fixed(32) Constant(1), /* Normal request type  @DZA*/ 13800000
   SLK_ERRORCHECK Fixed(32) Constant(2), /* Errorcheck request type     13850000
                                                                 @DZA*/ 13900000
   SLK_RECURSIVE  Fixed(32) Constant(4); /* Recursive request type      13950000
                                                                 @DZA*/ 14000000
 /********************************************************************/ 14050000
 /*   Define equates for BPX1SLK syscall LockType parameter          */ 14100000
 /********************************************************************/ 14150000
 Dcl                                                         /*  @DZA*/ 14200000
   SLK_EXCLUSIVE  Fixed(32) Constant(1), /* Exclusive lock type  @DZA*/ 14250000
   SLK_SHARED     Fixed(32) Constant(2); /* Shared lock type     @DZA*/ 14300000
                                                                        14350000
 /********************************************************************/ 14400000
 /*   Define values for BPX1LOD (HFS load) option flag               */ 14450000
 /********************************************************************/ 14500000
 Dcl                                                                    14550000
   Lod_Error_St_ExLink  Bit(32)   Constant('80000000'X),                14600000
   Lod_Ignore_Sticky    Bit(32)   Constant('40000000'X);      /* @DRA*/ 14650000
                                                                        14700000
 /********************************************************************/ 14750000
 /*   Define values for BPX1DSD                                      */ 14800000
 /********************************************************************/ 14850000
 Dcl                                                                    14900000
    SW_SigDlv_Enable#   Fixed(32) Constant(1),                          14950000
    SW_SigDlv_Disable#  Fixed(32) Constant(2);                /* @DPA*/ 15000000
                                                                        15050000
 /********************************************************************/ 15100000
 /* Define flags for BPX1OSE syscall function_code parameter      */    15150000
 /********************************************************************/ 15200000
 DCL                                                                    15250000
   Osenv_get       Fixed(32) Constant(1), /* get function        @DQA*/ 15300000
   Osenv_set       Fixed(32) Constant(2), /* set function        @DQA*/ 15350000
   Osenv_unset     Fixed(32) Constant(4), /* unset function      @DQA*/ 15400000
   Osenv_persist   Fixed(32) Constant(8), /* persist function    @DQA*/ 15450000
   Osenv_unpersist Fixed(32) Constant(16);/* unpersist function  @DQA*/ 15500000
                                                                        15550000
 /********************************************************************/ 15600000
 /*  Define flags for BPX1OSE syscall Request_Flags parameter        */ 15650000
 /********************************************************************/ 15700000
 Dcl                                                                    15750000
   1 Osenv_ReqFlags  Bit(32) Based, /* Request flags             @DQA*/ 15800000
     3 *              Bit(30),      /* reserved                  @DQA*/ 15850000
     3 Osenv_Security Bit(1),       /* pthread security environment     15900000
                                                                 @DQA*/ 15950000
     3 Osenv_WLM      Bit(1);       /* WLM Enclave membership    @DQA*/ 16000000
 /********************************************************************/ 16001000
 /* Define flags for BPX1PQG syscall RequestType parameter           */ 16002000
 /********************************************************************/ 16003000
 DCL                                                                    16004000
   Thdq_Freeze       Fixed(32) Constant(2), /* Freezes the threads      16005000
                                       identified in the THDQ Data      16006000
                                       List array (BPXYTHDQ)     @06A*/ 16007000
   Thdq_UnFreeze_All Fixed(32) Constant(8), /* Unfreezes all threads    16008000
                                       that are frozen in the caller    16009000
                                       process                   @06A*/ 16010000
   Thdq_Get_State    Fixed(32) Constant(1);   /* Retrieves the state    16011000
                                       data for the threads listed in   16012000
                                       the THDQ data list array, or     16013000
                                       for all threads.  This value     16014000
                                       can only be specified with       16015000
                                       THDQ_FREEZE               @06A*/ 16016000
