*/**** START OF SPECIFICATIONS **************************************** 00050000
*                                                                     * 00100000
*                                                                     * 00150000
*01* MACRO NAME:  IEAARR                                 -02/24/99-<> * 00200000
*                                                                     * 00250000
*                                                                     * 00300000
*01* DESCRIPTIVE NAME:  ARR call service                              * 00350000
*                                                                     * 00400000
*01* PROPRIETARY STATEMENT:                                           * 00450000
*                                                                     * 00500000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00550000
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00600000
*     5647-A01 (C) COPYRIGHT IBM CORP. 2000                           * 00650000
*                                                                     * 00700000
* STATUS= JBB6609                                                     * 00750000
*                                                                     * 00800000
*                                                                     * 00850000
*                                                                     * 00900000
*01* FUNCTION:                                                        * 00950000
*                                                                     * 01000000
*                                                                     * 01050000
*      IEAARR allows you to request that the system establish an      * 01100000
*      associated recovery routine (ARR) while calling a target       * 01150000
*      routine.                                                       * 01200000
*                                                                     * 01250000
*01* EXTERNAL CLASSIFICATION:                                         * 01300000
*                                                                     * 01350000
*02* GUPI: BASE                                                       * 01400000
*                                                                     * 01450000
*01* END OF EXTERNAL CLASSIFICATION:                                  * 01500000
*                                                                     * 01550000
*01* ENVIRONMENT:                                                     * 01600000
*                                                                     * 01650000
*                                                                     * 01700000
*      Minimum authorization:                                         * 01750000
*                                                                     * 01800000
*                        The minimum authority for IEAARR is problem  * 01850000
*                        state and PSW key 8-15.                      * 01900000
*                                                                     * 01950000
*      Dispatchable unit mode: Task mode.                             * 02000000
*                                                                     * 02050000
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 02100000
*                                                                     * 02150000
*      AMODE:            31-bit.                                      * 02200000
*                                                                     * 02250000
*      ASC mode:         Primary or Access Register.                  * 02300000
*                                                                     * 02350000
*      Interrupt status: Enabled or disabled for I/O and external     * 02400000
*                        interrupts.                                  * 02450000
*                                                                     * 02500000
*      Locks:            The caller is not required to hold any locks * 02550000
*                        on entry.  The caller may hold the local,    * 02600000
*                        CMS, or CPU lock.                            * 02650000
*                                                                     * 02700000
*      Control parameters: None.                                      * 02750000
*                                                                     * 02800000
*                                                                     * 02850000
*                                                                     * 02900000
*01* PROGRAMMING REQUIREMENTS:                                        * 02950000
*                                                                     * 03000000
*    The caller must include the IHAECVT mapping macro.               * 03050000
*                                                                     * 03100000
*01* RESTRICTIONS:                                                    * 03150000
*                                                                     * 03200000
*    IEAARR must not be issued while a functional recovery routine    * 03250000
*    (FRR) is established.                                            * 03300000
*                                                                     * 03350000
*    TARGETSTATE=PROB should only be issued by a caller currently     * 03400000
*    running in problem state.  TARGETSTATE=SUP should only be issued * 03450000
*    by a caller currently running in supervisor state.               * 03500000
*                                                                     * 03550000
*01* INPUT REGISTER INFORMATION:                                      * 03600000
*                                                                     * 03650000
*    Before issuing the IEAARR macro, the caller does not have to     * 03700000
*    place any information into any general purpose register (GPR) or * 03750000
*    access register (AR) unless using it in register notation for a  * 03800000
*    particular parameter, or using it as a base register.            * 03850000
*                                                                     * 03900000
*01* OUTPUT REGISTER INFORMATION:                                     * 03950000
*                                                                     * 04000000
*    When control returns to the caller, the GPRs contain:            * 04050000
*                                                                     * 04100000
*                                                                     * 04150000
*    REGISTER    CONTENTS                                             * 04200000
*                                                                     * 04250000
*    0           The value placed in register 0 by the target routine * 04300000
*                prior to its returning to the system.                * 04350000
*                                                                     * 04400000
*    1           The value placed in register 1 by the target routine * 04450000
*                prior to its returning to the system.                * 04500000
*                                                                     * 04550000
*    2-13        Unchanged                                            * 04600000
*                                                                     * 04650000
*    14          Used as a work register by the system                * 04700000
*                                                                     * 04750000
*    15          The value placed in register 15 by the target        * 04800000
*                routine prior to its returning to the system.        * 04850000
*                                                                     * 04900000
*                                                                     * 04950000
*                                                                     * 05000000
*    When control returns to the caller, the ARs contain:             * 05050000
*                                                                     * 05100000
*                                                                     * 05150000
*    REGISTER    CONTENTS                                             * 05200000
*                                                                     * 05250000
*    0           The value placed in access register 0 by the target  * 05300000
*                routine prior to its returning to the system.        * 05350000
*                                                                     * 05400000
*    1           The value placed in access register 1 by the target  * 05450000
*                routine prior to its returning to the system.        * 05500000
*                                                                     * 05550000
*    2-13        Unchanged                                            * 05600000
*                                                                     * 05650000
*    14          Used as a work register by the system                * 05700000
*                                                                     * 05750000
*    15          The value placed in access register 15 by the target * 05800000
*                routine prior to its returning to the system.        * 05850000
*                                                                     * 05900000
*                                                                     * 05950000
*                                                                     * 06000000
*    Some callers depend on register contents remaining the same      * 06050000
*    before and after issuing a service.  If the system changes the   * 06100000
*    contents of registers on which the caller depends, the caller    * 06150000
*    must save them before issuing the service, and restore them      * 06200000
*    after the system returns control.                                * 06250000
*                                                                     * 06300000
*01* PERFORMANCE IMPLICATIONS:                                        * 06350000
*    None.                                                            * 06400000
*                                                                     * 06450000
*01* SYNTAX:                                                          * 06500000
*                                                                     * 06550000
*[xlabel]  IEAARR     ARRPTR=xarrptr                                  * 06600000
*                    ,ARRPARAMPTR=xarrparamptr                        * 06650000
*                    ,PARAMPTR=xparamptr                              * 06700000
*                    ,TARGETPTR=xtargetptr                            * 06750000
*                   ,TARGETSTATE=PROB                                * 06800000
*                   ,TARGETSTATE=SUP                                 * 06850000
*                                                                     * 06900000
*                                                                     * 06950000
*      Where:                                                         * 07000000
*                                                                     * 07050000
*                                                                     * 07100000
*      [xlabel]                                                       * 07150000
*          is an optional symbol, starting in column 1, that is the   * 07200000
*          name on the IEAARR macro invocation.  The name must        * 07250000
*          conform to the rules for an ordinary assembler language    * 07300000
*          symbol.                                                    * 07350000
*          DEFAULT: No name.                                          * 07400000
*                                                                     * 07450000
*                                                                     * 07500000
*                                                                     * 07550000
*                                                                     * 07600000
*      ARRPTR=xarrptr                                                 * 07650000
*          is the name (RX-type), or address in register (2)-(12), of * 07700000
*          a required 4 byte input that contains the address of the   * 07750000
*          associated recovery routine. This routine gets control     * 07800000
*          from RTM according to normal OS/390 recovery protocols.    * 07850000
*          As it is an ARR, it will get control in AMODE 31.          * 07900000
*                                                                     * 07950000
*                                                                     * 08000000
*                                                                     * 08050000
*                                                                     * 08100000
*      ARRPARAMPTR=xarrparamptr                                       * 08150000
*          is the name (RX-type), or address in register (2)-(12), of * 08200000
*          a required 4 byte input that contains the address of the   * 08250000
*          parameter area to be passed to the ARR upon error.  The    * 08300000
*          address is placed in the first four bytes of the area      * 08350000
*          pointed to by SDWAPARM.  Note that the second four bytes   * 08400000
*          of that area will not contain interface information.       * 08450000
*                                                                     * 08500000
*                                                                     * 08550000
*                                                                     * 08600000
*                                                                     * 08650000
*      PARAMPTR=xparamptr                                             * 08700000
*          is the name (RX-type), or address in register (2)-(12), of * 08750000
*          a required 4 byte input that contains the address of a     * 08800000
*          parameter that is to be passed to the target routine in    * 08850000
*          GPR 1.                                                     * 08900000
*                                                                     * 08950000
*                                                                     * 09000000
*                                                                     * 09050000
*                                                                     * 09100000
*      TARGETPTR=xtargetptr                                           * 09150000
*          is the name (RX-type), or address in register (2)-(12), of * 09200000
*          a required 4 byte input that contains the address of the   * 09250000
*          routine to which the system is to branch after             * 09300000
*          establishing the ARR.  The target routine will get control * 09350000
*          in the same key and state as the IEAARR caller, in AMODE   * 09400000
*          31, with the following input registers:                    * 09450000
*                                                                     * 09500000
*          General Purpose Registers:                                 * 09550000
*                                                                     * 09600000
*                                                                     * 09650000
*          REGISTER  CONTENTS                                         * 09700000
*                                                                     * 09750000
*          0         Not part of the intended interface               * 09800000
*                                                                     * 09850000
*          1         Address of parameter area provided by IEAARR     * 09900000
*                    caller                                           * 09950000
*                                                                     * 10000000
*          2-13      Unchanged from the IEAARR caller                 * 10050000
*                                                                     * 10100000
*          14        Tne return address                               * 10150000
*                                                                     * 10200000
*          15        The address of the target routine                * 10250000
*                                                                     * 10300000
*                                                                     * 10350000
*                                                                     * 10400000
*          Access Registers:                                          * 10450000
*                                                                     * 10500000
*                                                                     * 10550000
*          REGISTER  CONTENTS                                         * 10600000
*                                                                     * 10650000
*          0-1       Not part of the intended interface               * 10700000
*                                                                     * 10750000
*          2-13      Unchanged from the IEAARR caller                 * 10800000
*                                                                     * 10850000
*          14        Not part of the intended interface               * 10900000
*                                                                     * 10950000
*          15        Not part of the intended interface               * 11000000
*                                                                     * 11050000
*                                                                     * 11100000
*                                                                     * 11150000
*          The target routine gets control with one more entry on the * 11200000
*          linkage stack than existed when IEAARR was called. That    * 11250000
*          linkage stack entry contains the caller's registers 2-13   * 11300000
*          which can be extracted using the EREG instruction if       * 11350000
*          needed.                                                    * 11400000
*                                                                     * 11450000
*          The target routine need not save any registers, but is     * 11500000
*          expected to return to the address provided in GPR 14 on    * 11550000
*          entry. The target routine can pass information back to the * 11600000
*          caller of IEAARR by placing it in GPR/AR 0, 1, and/or 15.  * 11650000
*          The IEAARR caller will resume immediately after the IEAARR * 11700000
*          macro expansion.                                           * 11750000
*                                                                     * 11800000
*                                                                     * 11850000
*                                                                     * 11900000
*                                                                     * 11950000
*      TARGETSTATE=PROB|SUP                                         * 12000000
*          is a required keyword input that indicates the requested   * 12050000
*          PSW state of the target routine.                           * 12100000
*                                                                     * 12150000
*                                                                     * 12200000
*          TARGETSTATE=PROB                                           * 12250000
*              indicates the target routine is to get control in      * 12300000
*              problem state.  This should only be used by a caller   * 12350000
*              currently in problem state.                            * 12400000
*                                                                     * 12450000
*          TARGETSTATE=SUP                                            * 12500000
*              indicates the target routine is to get control in      * 12550000
*              supervisor state.  This should only be used by a       * 12600000
*              caller currently in supervisor state.                  * 12650000
*                                                                     * 12700000
*                                                                     * 12750000
*                                                                     * 12800000
*                                                                     * 12850000
*                                                                     * 12900000
*01* ABEND CODES:  None.                                              * 12950000
*                                                                     * 13000000
*       The caller may get the following abend code:                  * 13050000
*                                                                     * 13100000
*                                                                     * 13150000
*       0C2-02          TARGETSTATE=SUP was requested by a caller     * 13200000
*                       currently running in problems tate.           * 13250000
*                                                                     * 13300000
*                                                                     * 13350000
*                                                                     * 13400000
*01* RETURN CODES:                                                    * 13450000
*                                                                     * 13500000
*                                                                     * 13550000
*                 None                                                * 13600000
*                                                                     * 13650000
*                                                                     * 13700000
*                                                                     * 13750000
*01* REASON CODES:  None.                                             * 13800000
*                                                                     * 13850000
*01* MODULE TYPE:  ASSEM MACRO                                        * 13900000
*                                                                     * 13950000
*02*   PROCESSOR:  ASSEM                                              * 14000000
*                                                                     * 14050000
*01* COMPONENT:  SCRTM                                                * 14100000
*                                                                     * 14150000
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 14200000
*                                                                     * 14250000
*01* EXAMPLES:                                                        * 14300000
*                                                                     * 14350000
*    Example 1                                                        * 14400000
*                                                                     * 14450000
*    Operation:                                                       * 14500000
*                                                                     * 14550000
*                                                                     * 14600000
*    1.  Branch to the target routine pointed to by field TP,         * 14650000
*        and establish as an ARR the routine pointed to by field AP.  * 14700000
*        Pass to the target area in register 1 the contents of field  * 14750000
*        PP.                                                          * 14800000
*        Make sure that the ARR will get access to the contents of fi * 14850000
*        eld APP                                                      * 14900000
*        (which ordinarily would contain the address of a parameter a * 14950000
*        rea).                                                        * 15000000
*        Make sure that the target routine gets control in problem st * 15050000
*        ate                                                          * 15100000
*        (which implies that the caller of IEARR should currently be  * 15150000
*        running                                                      * 15200000
*        in problem state).                                           * 15250000
*                                                                     * 15300000
*                                                                     * 15350000
*                                                                     * 15400000
*    The code is as follows.                                          * 15450000
*                                                                     * 15500000
*            IEAARR TARGETPTR=TP,ARRPTR=AP,PARAMPTR=PP,               * 15550000
*                  ARRPARAMPTR=APP,TARGETSTATE=PROB                   * 15600000
*               ...                                                   * 15650000
*                                                                     * 15700000
*                                                                     * 15750000
*01* MACRO USAGE NOTES:                                               * 15800000
*                                                                     * 15850000
*                                                                     * 15900000
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 15950000
*        global macro variable.  Any value other than 'NO' will       * 16000000
*        result in the macro expansion being printed.  The default is * 16050000
*        'YES'.  The following examples illustrate how the ZPRINT     * 16100000
*        variable should be set.                                      * 16150000
*                                                                     * 16200000
*                    GBLC &ZPRINT                                     * 16250000
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 16300000
*                                                                     * 16350000
*                                                                     * 16400000
*                                                                     * 16450000
*01* CHANGE ACTIVITY:                                                 * 16500000
*                                                                     * 16550000
*   Flag LineItem  FMID    Date   ID    Comment                       * 16600000
*                                                                     * 16650000
*    $L0=CICSOAMG JBB6609 980825 PD00XB:  CICS OTE                    * 16700000
*    $L1=CICSORTM JBB6609 980825 PD00XB:  CICS OTE                    * 16750000
****** END OF SPECIFICATIONS *****************************************/ 16800000
*/* TLINE 1 *********************************************************** 16850000
         MACRO                                                          16900000
&XLABEL  IEAARR &ARRPTR=,&ARRPARAMPTR=,&PARAMPTR=,&TARGETPTR=,         *16950000
               &TARGETSTATE=                                            17000000
.*                                                                      17050000
*                 MACDATE -02/24/99-<0>                                 17100000
.*                                                                      17150000
.*******************************************************************    17200000
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        17250000
.*******************************************************************    17300000
                 GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                17350000
                 GBLC  &ZTEST      YES=TEST NO=NO TEST                  17400000
                 GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX          17450000
.*                                                                      17500000
                 GBLC  &ZIEAARR    YES=MACRO USED AT LEAST ONCE         17550000
.*******************************************************************    17600000
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          17650000
.*******************************************************************    17700000
                 LCLC  &ZMS        ERROR MESSAGE WORK AREA              17750000
                 LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS         17800000
                 LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED           17850000
                 LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR          17900000
                 LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE          17950000
                 LCLA  &ZAWRK      USED AS A WORK AREA                  18000000
                 LCLA  &ZASIZ      USED FOR SIZE OF VALUE               18050000
                 LCLA  &ZN         NUMERIC WORK VARIABLE                18100000
                 LCLC  &ZC         CHARACTER WORK VARIABLE              18150000
                 LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE          18200000
                 LCLA  &ZTLA       VALUE TOO LONG VARIABLE              18250000
                 LCLA  &ZMACRET    MACRO RETURN CODE                    18300000
&ZMACRET         SETA  0           ASSUME NO ERRORS                     18350000
.*                                                                      18400000
                 LCLC  &ZCSYSLIST(255)          NONXKEY, POS ARRAY      18450000
                 LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()           18500000
                 LCLA  &ZPLLEN     PARAMETER LIST LENGTH                18550000
                 LCLC  &ZENDBASEPL              End of base PL          18600000
.********************************************************************   18650000
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 18700000
.********************************************************************   18750000
                 GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL              18800000
                 GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE       18850000
.*                                                                      18900000
                 AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED       18950000
                 AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED        19000000
                 SPLEVEL  TEST                                          19050000
.ZSYS2           ANOP  ,                                                19100000
                 AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1            19150000
                 AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1            19200000
                 SYSSTATE TEST                                          19250000
                 AGO   .ZSYS4                                           19300000
.ZSYS3           ANOP  ,                                                19350000
&SYSASCE         SETC  'P'         ASSUME SYSSTATE PRIMARY              19400000
.ZSYS4           ANOP  ,                                                19450000
.*******************************************************************    19500000
.***AB.07  DEFINE ALL MACRO VARIABLES                                   19550000
.*******************************************************************    19600000
                 LCLC  &XARRPTR    ++ NAME                              19650000
                 LCLC  &XARRPARAMPTR            ++ NAME                 19700000
                 LCLC  &XPARAMPTR  ++ NAME                              19750000
                 LCLC  &XTARGETPTR              ++ NAME                 19800000
                 LCLC  &XTARGETSTATE            ++ VALUE                19850000
.*******************************************************************    19900000
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           19950000
.*******************************************************************    20000000
                 LCLC  &ZXARRPTR   ++ INPUT NAME                        20050000
                 LCLC  &ZXARRPARAMPTR           ++ INPUT NAME           20100000
                 LCLC  &ZXPARAMPTR              ++ INPUT NAME           20150000
                 LCLC  &ZXTARGETPTR             ++ INPUT NAME           20200000
                 LCLC  &ZXTARGETSTATE           ++ INPUT VALUE          20250000
.********************************************************************   20300000
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 20350000
.********************************************************************   20400000
                 ACTR  10000                                            20450000
.*----------------------------------------------------------------***   20500000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     20550000
                 AIF   (N'&ARRPTR LE 1).ZG2A    CK NUM                  20600000
&ZMS             SETC  '"ARRPTR='  *KPOSA* MNOTE                        20650000
&ZMS             SETC  '&ZMS.&ARRPTR"'                                  20700000
&ZMS             SETC  '&ZMS "ARRPTR"'                                  20750000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              20800000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          20850000
.ZG2A            ANOP  ,                                                20900000
.*-------------------------------------------------------------------   20950000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         21000000
&ZXARRPTR        SETC  'INPUT'     SET IN/OUTPUT                        21050000
&XARRPTR         SETC  '&ARRPTR(1)'             SET XVARIABLE           21100000
                 AIF   (N'&ARRPTR GT 1).ZG2B    MULTI PARMS             21150000
&XARRPTR         SETC  '&ARRPTR'   SET XVARIABLE                        21200000
.ZG2B            AIF   (K'&ARRPTR(1) GT 0).ZG2C                         21250000
&ZXARRPTR        SETC  ''          RESET IN/OUTPUT                      21300000
&ZMS             SETC  ' '         *KRQDA*                              21350000
&ZMS             SETC  '&ZMS "ARRPTR" KEY AND ITS'                      21400000
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 21450000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          21500000
.ZG2C            ANOP  ,                                                21550000
.*-------------------------------------------------------------------   21600000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    21650000
                 AIF   (K'&ZXARRPTR LE 0).ZG2R  NOT I/O                 21700000
                 AIF   ('&XARRPTR'(1,1) NE '(').ZG2R                    21750000
&ZCGPR           SETC  '&XARRPTR'(2,K'&XARRPTR-2)                       21800000
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                      21850000
                 AIF   (K'&ZCGPR GT 2).ZG2Q                             21900000
                 AIF   ('&ZCGPR' EQ '0').ZG2Q                           21950000
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    22000000
                 AIF   (T'&ZCGPR NE 'N').ZG2Q   INVALID REG NAME        22050000
.ZG2P            ANOP  ,                                                22100000
                 AIF   (T'&ZCGPR NE 'N').ZG2R   NON NUMERIC             22150000
                 AIF   ('&ZCGPR' LT '2').ZG2Q                           22200000
                 AIF   ('&ZCGPR' LE '12').ZG2R                          22250000
.ZG2Q            ANOP  ,                                                22300000
&ZMS             SETC  '"ARRPTR='  *KGPRA* MNOTE                        22350000
&ZMS             SETC  '&ZMS.&ARRPTR"'                                  22400000
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        22450000
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 22500000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          22550000
.ZG2R            ANOP  ,                                                22600000
.*----------------------------------------------------------------***   22650000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     22700000
                 AIF   (N'&ARRPARAMPTR LE 1).ZG5A  CK NUM               22750000
&ZMS             SETC  '"ARRPARAMPTR='          *KPOSA* MNOTE           22800000
&ZMS             SETC  '&ZMS.&ARRPARAMPTR"'                             22850000
&ZMS             SETC  '&ZMS "ARRPARAMPTR"'                             22900000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              22950000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          23000000
.ZG5A            ANOP  ,                                                23050000
.*-------------------------------------------------------------------   23100000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         23150000
&ZXARRPARAMPTR   SETC  'INPUT'     SET IN/OUTPUT                        23200000
&XARRPARAMPTR    SETC  '&ARRPARAMPTR(1)'        SET XVARIABLE           23250000
                 AIF   (N'&ARRPARAMPTR GT 1).ZG5B  MULTI PARMS          23300000
&XARRPARAMPTR    SETC  '&ARRPARAMPTR'           SET XVARIABLE           23350000
.ZG5B            AIF   (K'&ARRPARAMPTR(1) GT 0).ZG5C                    23400000
&ZXARRPARAMPTR   SETC  ''          RESET IN/OUTPUT                      23450000
&ZMS             SETC  ' '         *KRQDA*                              23500000
&ZMS             SETC  '&ZMS "ARRPARAMPTR" KEY AND ITS'                 23550000
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 23600000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          23650000
.ZG5C            ANOP  ,                                                23700000
.*-------------------------------------------------------------------   23750000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    23800000
                 AIF   (K'&ZXARRPARAMPTR LE 0).ZG5R  NOT I/O            23850000
                 AIF   ('&XARRPARAMPTR'(1,1) NE '(').ZG5R               23900000
&ZCGPR           SETC  '&XARRPARAMPTR'(2,K'&XARRPARAMPTR-2)             23950000
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                      24000000
                 AIF   (K'&ZCGPR GT 2).ZG5Q                             24050000
                 AIF   ('&ZCGPR' EQ '0').ZG5Q                           24100000
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    24150000
                 AIF   (T'&ZCGPR NE 'N').ZG5Q   INVALID REG NAME        24200000
.ZG5P            ANOP  ,                                                24250000
                 AIF   (T'&ZCGPR NE 'N').ZG5R   NON NUMERIC             24300000
                 AIF   ('&ZCGPR' LT '2').ZG5Q                           24350000
                 AIF   ('&ZCGPR' LE '12').ZG5R                          24400000
.ZG5Q            ANOP  ,                                                24450000
&ZMS             SETC  '"ARRPARAMPTR='          *KGPRA* MNOTE           24500000
&ZMS             SETC  '&ZMS.&ARRPARAMPTR"'                             24550000
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        24600000
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 24650000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          24700000
.ZG5R            ANOP  ,                                                24750000
.*----------------------------------------------------------------***   24800000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     24850000
                 AIF   (N'&PARAMPTR LE 1).ZG8A  CK NUM                  24900000
&ZMS             SETC  '"PARAMPTR='             *KPOSA* MNOTE           24950000
&ZMS             SETC  '&ZMS.&PARAMPTR"'                                25000000
&ZMS             SETC  '&ZMS "PARAMPTR"'                                25050000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              25100000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          25150000
.ZG8A            ANOP  ,                                                25200000
.*-------------------------------------------------------------------   25250000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         25300000
&ZXPARAMPTR      SETC  'INPUT'     SET IN/OUTPUT                        25350000
&XPARAMPTR       SETC  '&PARAMPTR(1)'           SET XVARIABLE           25400000
                 AIF   (N'&PARAMPTR GT 1).ZG8B  MULTI PARMS             25450000
&XPARAMPTR       SETC  '&PARAMPTR'              SET XVARIABLE           25500000
.ZG8B            AIF   (K'&PARAMPTR(1) GT 0).ZG8C                       25550000
&ZXPARAMPTR      SETC  ''          RESET IN/OUTPUT                      25600000
&ZMS             SETC  ' '         *KRQDA*                              25650000
&ZMS             SETC  '&ZMS "PARAMPTR" KEY AND ITS'                    25700000
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 25750000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          25800000
.ZG8C            ANOP  ,                                                25850000
.*-------------------------------------------------------------------   25900000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    25950000
                 AIF   (K'&ZXPARAMPTR LE 0).ZG8R  NOT I/O               26000000
                 AIF   ('&XPARAMPTR'(1,1) NE '(').ZG8R                  26050000
&ZCGPR           SETC  '&XPARAMPTR'(2,K'&XPARAMPTR-2)                   26100000
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                      26150000
                 AIF   (K'&ZCGPR GT 2).ZG8Q                             26200000
                 AIF   ('&ZCGPR' EQ '0').ZG8Q                           26250000
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    26300000
                 AIF   (T'&ZCGPR NE 'N').ZG8Q   INVALID REG NAME        26350000
.ZG8P            ANOP  ,                                                26400000
                 AIF   (T'&ZCGPR NE 'N').ZG8R   NON NUMERIC             26450000
                 AIF   ('&ZCGPR' LT '2').ZG8Q                           26500000
                 AIF   ('&ZCGPR' LE '12').ZG8R                          26550000
.ZG8Q            ANOP  ,                                                26600000
&ZMS             SETC  '"PARAMPTR='             *KGPRA* MNOTE           26650000
&ZMS             SETC  '&ZMS.&PARAMPTR"'                                26700000
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        26750000
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 26800000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          26850000
.ZG8R            ANOP  ,                                                26900000
.*----------------------------------------------------------------***   26950000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     27000000
                 AIF   (N'&TARGETPTR LE 1).ZG11A  CK NUM                27050000
&ZMS             SETC  '"TARGETPTR='            *KPOSA* MNOTE           27100000
&ZMS             SETC  '&ZMS.&TARGETPTR"'                               27150000
&ZMS             SETC  '&ZMS "TARGETPTR"'                               27200000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              27250000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          27300000
.ZG11A           ANOP  ,                                                27350000
.*-------------------------------------------------------------------   27400000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         27450000
&ZXTARGETPTR     SETC  'INPUT'     SET IN/OUTPUT                        27500000
&XTARGETPTR      SETC  '&TARGETPTR(1)'          SET XVARIABLE           27550000
                 AIF   (N'&TARGETPTR GT 1).ZG11B  MULTI PARMS           27600000
&XTARGETPTR      SETC  '&TARGETPTR'             SET XVARIABLE           27650000
.ZG11B           AIF   (K'&TARGETPTR(1) GT 0).ZG11C                     27700000
&ZXTARGETPTR     SETC  ''          RESET IN/OUTPUT                      27750000
&ZMS             SETC  ' '         *KRQDA*                              27800000
&ZMS             SETC  '&ZMS "TARGETPTR" KEY AND ITS'                   27850000
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 27900000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          27950000
.ZG11C           ANOP  ,                                                28000000
.*-------------------------------------------------------------------   28050000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    28100000
                 AIF   (K'&ZXTARGETPTR LE 0).ZG11R  NOT I/O             28150000
                 AIF   ('&XTARGETPTR'(1,1) NE '(').ZG11R                28200000
&ZCGPR           SETC  '&XTARGETPTR'(2,K'&XTARGETPTR-2)                 28250000
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                     28300000
                 AIF   (K'&ZCGPR GT 2).ZG11Q                            28350000
                 AIF   ('&ZCGPR' EQ '0').ZG11Q                          28400000
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    28450000
                 AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME        28500000
.ZG11P           ANOP  ,                                                28550000
                 AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC             28600000
                 AIF   ('&ZCGPR' LT '2').ZG11Q                          28650000
                 AIF   ('&ZCGPR' LE '12').ZG11R                         28700000
.ZG11Q           ANOP  ,                                                28750000
&ZMS             SETC  '"TARGETPTR='            *KGPRA* MNOTE           28800000
&ZMS             SETC  '&ZMS.&TARGETPTR"'                               28850000
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        28900000
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 28950000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          29000000
.ZG11R           ANOP  ,                                                29050000
.*------------------------------------------------------------------    29100000
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           29150000
&XTARGETSTATE    SETC  ''          INITIALIZE XVARIABLE                 29200000
.*-------------------------------------------------------------------   29250000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           29300000
.ZG15            ANOP  ,                                                29350000
                 AIF   (K'&TARGETSTATE(1) LE 0).ZG15A                   29400000
&ZTLC            SETC 'PROB'                                            29450000
                 AIF   ('&TARGETSTATE(1)' NE '&ZTLC').ZG16              29500000
&XTARGETSTATE    SETC  'PROB'      SET KEYWORD                          29550000
                 AIF   (N'&TARGETSTATE LE 1).ZG15A  CK NUM              29600000
&ZMS             SETC  '"TARGETSTATE='          *KPOSA* MNOTE           29650000
&ZMS             SETC  '&ZMS.&TARGETSTATE"'                             29700000
&ZMS             SETC  '&ZMS "TARGETSTATE"'                             29750000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              29800000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          29850000
.ZG15A           ANOP  ,                                                29900000
.*-------------------------------------------------------------------   29950000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           30000000
.ZG16            ANOP  ,                                                30050000
&ZTLC            SETC 'SUP'                                             30100000
                 AIF   ('&TARGETSTATE(1)' NE '&ZTLC').ZG17              30150000
&XTARGETSTATE    SETC  'SUP'       SET KEYWORD                          30200000
                 AIF   (N'&TARGETSTATE LE 1).ZG16A  CK NUM              30250000
&ZMS             SETC  '"TARGETSTATE='          *KPOSA* MNOTE           30300000
&ZMS             SETC  '&ZMS.&TARGETSTATE"'                             30350000
&ZMS             SETC  '&ZMS "TARGETSTATE"'                             30400000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              30450000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          30500000
.ZG16A           ANOP  ,                                                30550000
.*------------------------------------------------------------------    30600000
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           30650000
.ZG17            ANOP  ,                                                30700000
&ZXTARGETSTATE   SETC  'INPUT'     SET IN/OUTPUT                        30750000
                 AIF   (K'&XTARGETSTATE GT 0).ZG17E  VALID ARG          30800000
                 AIF   (T'&TARGETSTATE EQ 'O').ZG17D  OMITTED           30850000
&ZASYSLNDX       SETA  0                                                30900000
.ZG17A           ANOP  ,           POSITIONAL MACRO KEY                 30950000
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     31000000
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG17C                 31050000
&ZTLC            SETC 'TARGETSTATE'                                     31100000
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG17A        31150000
.ZG17B           ANOP  ,                                                31200000
&ZXTARGETSTATE   SETC  ''          RESET IN/OUTPUT                      31250000
&ZMS             SETC  'THE "TARGETSTATE" KEY'  *KOPTA* MNOTE           31300000
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          31350000
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 31400000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          31450000
                 AGO   .ZG17E                                           31500000
.ZG17C           ANOP  ,                                                31550000
&ZXTARGETSTATE   SETC  ''          RESET IN/OUTPUT                      31600000
&ZMS             SETC  '"TARGETSTATE='          *KUKWA* MNOTE           31650000
&ZMS             SETC  '&ZMS.&TARGETSTATE"'                             31700000
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        31750000
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              31800000
&ZMS             SETC  '&ZMS "PROB"'                                    31850000
&ZMS             SETC  '&ZMS OR "SUP".'                                 31900000
                 MNOTE 8,' &ZMS '                                       31950000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          32000000
                 AGO   .ZG17E                                           32050000
.ZG17D           ANOP  ,                                                32100000
&XTARGETSTATE    SETC  'PROB'      SET DEFAULT KEYWORD                  32150000
.ZG17E           ANOP  ,                                                32200000
.*------------------------------------------------------------------    32250000
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           32300000
                 AIF   (K'&TARGETSTATE(1) GT 0).ZG17F  PARM             32350000
&XTARGETSTATE    SETC  ''          ENSURE NULL KEYWORD                  32400000
&ZXTARGETSTATE   SETC  ''          RESET IN/OUTPUT                      32450000
&ZMS             SETC  'THE'                                            32500000
&ZMS             SETC  '&ZMS "TARGETSTATE" KEY AND ITS'                 32550000
&ZMS             SETC  '&ZMS ARGUMENT ARE REQUIRED.'                    32600000
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              32650000
&ZMS             SETC  '&ZMS "PROB"'                                    32700000
&ZMS             SETC  '&ZMS OR "SUP".'                                 32750000
                 MNOTE 8,' &ZMS '                                       32800000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          32850000
.ZG17F           ANOP  ,                                                32900000
.******************************************************************     32950000
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        33000000
.******************************************************************     33050000
                 ACTR  10000                                            33100000
.*----------------------------------------------------------------***   33150000
.***AH.P02 EXTRA POSITIONALS                                            33200000
                 AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS             33250000
                 AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL             33300000
                 AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL         33350000
                 AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL          33400000
.ZGLISTX1        ANOP  ,                                                33450000
&ZCVAL           SETC  ''          ERROR FIELD                          33500000
&ZAWRK           SETA  0           POSITIONAL NUMBER                    33550000
.ZGLIST2         ANOP  ,                                                33600000
&ZAWRK           SETA  &ZAWRK+1    NEXT POSITIONAL                      33650000
                 AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE             33700000
&ZCVAL           SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                  33750000
                 AGO   .ZGLIST2                                         33800000
.*                                                                      33850000
.ZGLIST3         ANOP  ,                                                33900000
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)    STRIP COMMA             33950000
&ZMS             SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE         34000000
&ZMS             SETC  '&ZMS "&ZCVAL"'                                  34050000
&ZMS             SETC  '&ZMS CANNOT BE USED.'                           34100000
&ZMS             SETC  '&ZMS NO POSITIONAL ARGUMENTS'                   34150000
                 MNOTE 8,' &ZMS ARE ALLOWED.'                           34200000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          34250000
.ZGLISTX         ANOP  ,                                                34300000
&ZASYSLNDX       SETA  0                                                34350000
.*******************************************************************    34400000
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       34450000
.*******************************************************************    34500000
                 AIF   (&ZMACRET NE 0).ZLX2     ERROR DETECTED          34550000
.*******************************************************************    34600000
.***AE.01  START OF IEAARR MACRO CODE                                   34650000
.*******************************************************************    34700000
                 LCLC  &M0M0001                 NAME                    34750000
&M0M0001         SETC  '&XLABEL'                SET NAME                34800000
                 AIF   (K'&XLABEL NE 0).XLAB2                           34850000
&M0M0001         SETC  'M00M&SYSNDX'            DEFAULT NAME            34900000
.*                                                                      34950000
.XLAB2           ANOP  ,                                                35000000
&M0M0001 DS    0H                             IEAARR-0                  35050000
.*******************************************************************    35100000
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              35150000
.*******************************************************************    35200000
              PUSH  PRINT                                               35250000
                 AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON       35300000
                 PRINT OFF         ++ PR01                              35350000
                 AGO   .ZPRNTXX                                         35400000
.ZPRINTX         PRINT ON                                               35450000
.ZPRNTXX         ANOP  ,                                                35500000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  35550000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  35600000
.********************************************************************   35650000
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                    35700000
.********************************************************************   35750000
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       35800000
                      LCLA  &ZOPN1         INVOCATION INDEX             35850000
                      LCLC  &ZOPL(4095)    LABEL                        35900000
                      LCLC  &ZOPO(4095)    OPERATION                    35950000
                      LCLC  &ZOPV(4095)    VALUE                        36000000
                      LCLC  &ZOPD(4095)    DESCRIPTION                  36050000
.*                                                                      36100000
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     36150000
.*-------------------------------------------------------------------   36200000
&ZOPN1                SETA &ZOPN                                        36250000
.*******************************************************************    36300000
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               36350000
.*******************************************************************    36400000
                      ACTR  10000                                       36450000
.*                                                                      36500000
                      LCLA  &ZLC           COLUMN POSITION              36550000
                      LCLA  &ZOPX          LIST TABLE INDEX             36600000
                      LCLC  &ZLL           LABEL                        36650000
                      LCLC  &ZLOP          OPERATION                    36700000
                      LCLC  &ZLV           VALUE                        36750000
                      LCLC  &ZLD           DESCRIPTION                  36800000
.*                                                                      36850000
&ZOPX                 SETA  1                                           36900000
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            36950000
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              37000000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              37050000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              37100000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              37150000
                      AIF   (K'&ZLD LE 0).ZL5                           37200000
&ZLC                  SETA  35             COMMENT COLUMN               37250000
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    37300000
&ZLC                  SETA  33             COMMMENT COLUMN              37350000
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   37400000
&ZLV                  SETC  '&ZLV'.' '                                  37450000
                      AGO   .ZL3                                        37500000
.*                                                                      37550000
.ZL4                  ANOP  ,                                           37600000
&ZLV                  SETC  '&ZLV'.' '                                  37650000
.ZL5                  ANOP  ,                                           37700000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               37750000
.*                                                                      37800000
&ZLL     &ZLOP &ZLV                                                     37850000
.*                                                                      37900000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               37950000
                      AGO   .ZL2           CONTINUE LOOPING             38000000
.*                                                                      38050000
.ZLX                  ANOP  ,                                           38100000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  38150000
         AIF   ('&ARRPTR'(1,1) EQ '(').ARRPAREN                    @L1A 38200000
         L     1,&ARRPTR               Save ARR address            @L1A 38250000
         AGO   .ARREND                                             @L1A 38300000
.ARRPAREN  ANOP                                                    @L1A 38350000
&ZC      SETC  '&ARRPTR'(2,K'&ARRPTR-2)                            @L1A 38400000
         L     1,0(,&ZC)               Save ARR address            @L1A 38450000
.ARREND  ANOP                                                      @L1A 38500000
         AIF   ('&ARRPARAMPTR'(1,1) EQ '(').ARRPARAMPTRPAREN       @L1A 38550000
         L     0,&ARRPARAMPTR          Save ARRPARAM address       @L1A 38600000
         AGO   .ARRPARAMPTREND                                     @L1A 38650000
.ARRPARAMPTRPAREN ANOP                                             @L1A 38700000
&ZC      SETC  '&ARRPARAMPTR'(2,K'&ARRPARAMPTR-2)                  @L1A 38750000
         L     0,0(0,&ZC)              Save ARR address            @L1A 38800000
.ARRPARAMPTREND ANOP                                               @L1A 38850000
         AIF   ('&PARAMPTR'(1,1) EQ '(').PARAMPTRPAREN             @L1A 38900000
         L     14,&PARAMPTR            Get parameter address       @L1A 38950000
         SAR   0,14                    Pass parameter address      @L1A 39000000
         AGO   .PARAMPTREND                                        @L1A 39050000
.PARAMPTRPAREN ANOP                                                @L1A 39100000
&ZC      SETC  '&PARAMPTR'(2,K'&PARAMPTR-2)                        @L1A 39150000
         L     14,0(0,&ZC)             Save ARR address            @L1A 39200000
         SAR   0,14                    Pass parameter address      @L1A 39250000
.PARAMPTREND ANOP                                                  @L1A 39300000
         AIF   ('&TARGETPTR'(1,1) EQ '(').TARGETPTRPAREN           @L1A 39350000
         L     15,&TARGETPTR           Pass TARGET address         @L1A 39400000
         AGO   .TARGETPTREND                                       @L1A 39450000
.TARGETPTRPAREN ANOP                                               @L1A 39500000
&ZC      SETC  '&TARGETPTR'(2,K'&TARGETPTR-2)                      @L1A 39550000
         L     15,0(0,&ZC)             Save ARR address            @L1A 39600000
.TARGETPTREND ANOP                                                 @L1A 39650000
         L     14,16(0,0)              GET CVT ADDRESS             @L1A 39700000
         L     14,772(14,0)            GET SFT ADDRESS             @L1A 39750000
         AIF   ('&TARGETSTATE' EQ 'SUP').DOSUP                     @L1A 39800000
         L     14,500(14,0)            GET LX/EX FOR SERVICE RTN   @L1A 39850000
         PC    0(14)                                               @L1A 39900000
         AGO   .DONE                                               @L1A 39950000
.DOSUP   ANOP                                                      @L1A 40000000
         L     14,504(14,0)            GET LX/EX FOR SERVICE RTN   @L1A 40050000
         PC    0(14)                                               @L1A 40100000
.DONE    ANOP                                                      @L1A 40150000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  40200000
.*******************************************************************    40250000
.***AP.X01  FORMAT GENERATED CODE                                       40300000
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            40350000
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              40400000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              40450000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              40500000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              40550000
                      AIF   (K'&ZLD LE 0).ZL51                          40600000
&ZLC                  SETA  35             COMMENT COLUMN               40650000
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   40700000
&ZLC                  SETA  33             COMMENT COLUMN               40750000
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  40800000
&ZLV                  SETC  '&ZLV'.' '                                  40850000
                      AGO   .ZL31                                       40900000
.*                                                                      40950000
.ZL41                 ANOP  ,                                           41000000
&ZLV                  SETC  '&ZLV'.' '                                  41050000
.ZL51                 ANOP  ,                                           41100000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               41150000
.*                                                                      41200000
&ZLL     &ZLOP &ZLV                                                     41250000
.*                                                                      41300000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               41350000
                      AGO   .ZL21          CONTINUE LOOPING             41400000
.*                                                                      41450000
.ZLX1                 ANOP  ,                                           41500000
.*******************************************************************    41550000
.***AP.X02  END OF IEAARR MACRO                                         41600000
&ZIEAARR              SETC  'YES'          SET IEAARR USED              41650000
         POP   PRINT                                                    41700000
*                                            IEAARR-0                   41750000
         SPACE 1                                                        41800000
.ZLX2                 ANOP  ,                                           41850000
         MEND                                                           41900000
**********************************************************************/ 41950000
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  42000000
*%IEAARR: MACRO KEYS(ARRPTR,ARRPARAMPTR,PARAMPTR,TARGETPTR,             42050000
*                 TARGETSTATE);                                         42100000
*  ANS('?'||MACLABEL||' '||'IEAARRP '||MACLIST||                        42150000
*         ' '||MACKEYS||';') COL(MACLMAR);                              42200000
*%END IEAARR;                                                           42250000
