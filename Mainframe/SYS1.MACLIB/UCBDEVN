* %/*                                                                   00050000
         MACRO                                                          00100000
&NAME    UCBDEVN  &UCBPTR=,&DEVN=,&NONBASE=                        @L1C 00150000
.********************************************************************** 00200000
.*01* MODULE NAME  -  UCBDEVN                                         * 00250000
.*                                                                    * 00300000
.*01* MACRO CALL                                                      * 00350000
.*         ASSEMBLER-H -                                              * 00400000
.*    LABEL UCBDEVN   UCBPTR=addr,DEVN=addr,NONBASE=opt               * 00450000
.*                                                                    * 00500000
.*          PL/AS or PL/S                                             * 00550000
.*    ?LABEL: UCBDEVN  UCBPTR(variable name) DEVN(variable name)      * 00600000
.*                     NONBASE(option)                                * 00625000
.*                                                                    * 00650000
.*01* COPYRIGHT -                                                     * 00700000
.*    5655-068                                                        * 00750000
.*    THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00800000
.*    (C) COPYRIGHT IBM CORP. 1988, 1994                              * 00850000
.*    LICENSED MATERIALS - PROPERTY OF IBM                            * 00900000
.*                                                                    * 01000000
.*01* STATUS  -  HBB5520                                              * 01050000
.*                                                                    * 01150000
.*01* FUNCTION - UCBDEVN is an IOS service routine which allows       * 01200000
.*               the caller to obtain the EBCDIC form of a            * 01250000
.*               device number.                                       * 01300000
.*                                                                    * 01350000
.*01* RESTRICTIONS                                                    * 01366600
.*     - A UCBCOPY of a bound Pav-Alias will always return the        * 01383200
.*       device number of the Alias UCB regardless of the             * 01399800
.*       NONBASE keyword.  This is because UCBBASE cannot be          * 01416400
.*       relied upon for UCB copies.                              @01A* 01433000
.*                                                                    * 01450000
.*01* REGISTER CONVENTIONS -                                          * 01500000
.*           ENTRY REGISTERS                                          * 01550000
.*                   0   Used by macro to pass a flag indicating      * 01570000
.*                       whether the caller wants the alias device    * 01590000
.*                       number returned for an alias UCB of a        * 01610000
.*                       parallel access volume.                 @L1A * 01630000
.*                   1   Will be used to pass the UCB common segment  * 01650000
.*                       address to the service routine.              * 01700000
.*                  13   Must point to an 18 word save area.          * 01750000
.*                  14   Return address.                              * 01800000
.*                  15   Entry point address.                         * 01850000
.*                                                                    * 01900000
.*           EXIT REGISTERS                                           * 01950000
.*                   1        Will contain the information for the    * 02000000
.*                            DEVN operand upon return.               * 02050000
.*                   0,14,15  Destroyed                               * 02100000
.*                                                                    * 02150000
.*01* INPUT -                                                         * 02200000
.*           LABEL  - Optional                                        * 02250000
.*                                                                    * 02300000
.*           UCBPTR=  Optional, if not specified, addressability      * 02350000
.*                    to the UCB will be assumed to be defined        * 02400000
.*                    via the invoking module. Otherwise, a           * 02450000
.*                    fullword value which contains the address       * 02500000
.*                    of the common segment of the UCB which will     * 02550000
.*                    have its device number converted to EBCDIC.     * 02600000
.*                    If the UCBPTR points to an alias UCB of a       * 02650000
.*                    parallel access volume, then UCBDEVN returns    * 02700000
.*                    the base device number in printable EBCDIC      * 02750000
.*                    (unless NONBASE=YES is specified, OR, the       * 02783300
.*                    input UCB is a UCB Copy)                    @01C* 02816600
.*                                                                    * 02850000
.*           DEVN=    Four character field that is to contain the     * 02900000
.*                    EBCDIC form of the UCB name upon return.        * 02950000
.*                                                                    * 02958300
.*           NONBASE= Optional, if set to YES, then UCBDEVN returns   * 02966600
.*                    the alias device number when the input UCB is   * 02974900
.*                    an alias UCB of a parallel access volume.       * 02983200
.*                    Else, the base device number is returned.       * 02986500
.*                    Note: If a copy of a Pav-Alias UCB is passed    * 02989800
.*                    as input then the alias device number is        * 02993100
.*                    returned regardless of this parameter       @01C* 02996400
.*                                                                    * 03000000
.*01* OUTPUT -                                                        * 03050000
.*           DEVN  -  Contains the requested information              * 03100000
.*                                                                    * 03150000
.*01* DEPENDENCIES -  None                                            * 03200000
.*                                                                    * 03250000
.*01* ATTRIBUTES - A bilingual executable macro.                      * 03300000
.*                                                                    * 03350000
.*01* RESTRICTIONS -  FOR PL/AS PROGRAMS:                             * 03400000
.*                       - The UCBPTR if specified, must be PTR(31)   * 03450000
.*                       - The OUTPUT variable must be CHAR(4)        * 03500000
.*                                                                    * 03550000
.*01* MODULE TYPE  -  MACRO                                           * 03600000
.*                                                                    * 03650000
.*01* PROCESSOR    -  ASSEMBLER-H AND PL/AS or PL/S                   * 03700000
.*                                                                    * 03750000
.*01* NOTES - None                                                    * 03800000
.*                                                                    * 03850000
.*         THE FOLLOWING MACROS ARE REQUIRED:                         * 03900000
.*                PSA                                                 * 03950000
.*                EPILOG (necessary only in PL/AS or PL/S)            * 04000000
.*                                                                    * 04050000
.*         Registers 14, 15, 0, and 1 will be used by this macro      * 04100000
.*         and the service routine.                                   * 04150000
.*         All other registers will be maintained across the          * 04200000
.*         interface                                                  * 04250000
.*                                                                    * 04300000
.*01* EXTERNAL CLASSIFICATION: GUPI                               @P3A* 04312500
.*    END OF EXTERNAL CLASSIFICATION                              @P3A* 04325000
.*                                                                    * 04337500
.*01* CHANGE ACTIVITY -                                               * 04350000
.*    $MAC(UCBDEVN) COMP(SC1C3): EBCDIC device number conversion.     * 04400000
.*    $L0=XDEVNUM HBB3310 850909 PDLJ: EBCDIC device number conversion* 04433300
.*    $L1=PAVS    HBB5520 940214 PDLP: PAV support - Add NONBASE      * 04444400
.*                                     keyword for an alias           * 04455500
.*    $P1=PC41744 HBB3310 871110 PDLC: Correct load of CVT address    * 04466600
.*    $P2=PN71652 HBB5520 941020 PDLC: Change BASSM to CALL in PL/X   * 04473200
.*                                     expansion (to avoid compiler   * 04479800
.*                                     problem in PL/AS and certain   * 04486400
.*                                     levels of PL/X)            @P2A* 04493000
.*    $P3=PN71743 HBB5520 941020 PDLP: Add External Classification    * 04495300
.*                                     in the PROLOG              @P3A* 04497600
.*    $01=OW37980 HBB6603 990531 PDNO: Dynamic PAV Support        @01A* 04498800
.*                                                                    * 04500000
.********************************************************************** 04550000
.*                                                                      04600000
.*                                                                      04650000
         LCLC  &UCBREG,&DEVNREG                                         04700000
         LCLC  &ERR,&LABEL                                              04750000
.*                                                                      04800000
&LABEL   SETC  '&NAME'                     SET UP LABEL                 04850000
&UCBREG  SETC  '1'                         REGISTER FOR &UCBPTR         04900000
&DEVNREG SETC  '1'                         REGISTER FOR &DEVN           04950000
.*                                                                      05000000
         AIF   ('&DEVN' NE '').TEST1                                    05050000
         MNOTE 8,'*** DEVN PARAMETER IS REQUIRED.'                      05100000
&ERR     SETC  '8'                         INDICATE ERROR               05150000
         AGO   .END                        DO NOT GENERATE CODE         05200000
.*                                                                      05250000
.TEST1   AIF   ('&UCBPTR' NE '').TEST2                                  05300000
&LABEL   LA    1,UCBOB                     GET UCB ADDRESS              05350000
         AGO   .GETADDR                                                 05400000
.*                                                                      05450000
.TEST2   ANOP                                                           05500000
&LABEL   L     &UCBREG,&UCBPTR             LOAD UCB ADDRESS             05550000
.*                                                                      05600000
.*    GENERATE ASSEMBLER CODE                                           05650000
.*                                        PUT UCB ADDRESS IN &UCBREG    05700000
.GETADDR ANOP                              SET LABEL NULL               05750000
.*                                                                      05800000
         SLR   0,0                         SET FLAGS                    05850000
         AIF   ('&NONBASE(1)' NE 'YES').TEST4                           05900000
         LA    0,1                         SET FLAG INDICATING THAT    *05964200
                                           CALLER WANTS ALIAS DEVICE   *05969800
                                           NUMBER RETURNED IF UCB      *05975400
                                           IS ALIAS UCB                *05981000
                                                                   @L1A 05986600
.TEST4   ANOP                                                           05992600
         L     15,16(0,0)                  GET CVT POINTER         @P1C 05995000
         L     15,1052(0,15)               GET IOSVDEVN POINTER         05997400
         BASSM 14,15                       EBCDIC UCB DEVICE NUMBER     06000000
.*                                                                      06050000
         STCM  &DEVNREG,B'1111',&DEVN      STORE EBCDIC UCB NAME        06100000
.*                                                                      06150000
         MEXIT                                                          06200000
.*                                                                      06250000
.END     MEND                                                           06300000
         EJECT                                                          06350000
         */                                                             06400000
 UCBDEVN:                                                               06450000
   MACRO                                                                06500000
   KEYS(UCBPTR,DEVN,NONBASE);      /*                            @L1C*/ 06550000
   /*  EXTERNAL VARIABLES                                            */ 06600000
   DCL  EHAREGS  CHAR   EXT;       /* REGS TO BE DCLD BY EPILOG      */ 06650000
   DCL  EHAMAPS  CHAR   EXT;       /* AREAS TO BE DCLD BY EPILOG     */ 06700000
   /*  INTERNAL VARIABLES                                            */ 06750000
   DCL  ERR      FIXED;            /* FLAG FOR ERROR FOUND           */ 06800000
   DCL  ERRMSG   CHAR;             /* ERROR MESSAGE TO PRINT         */ 06850000
   DCL  GPR0     CHAR;             /* REG 0  MUST BE RESPECIFIED @L1A*/ 06875000
   DCL  GPR1     CHAR;             /* REG 1  MUST BE RESPECIFIED     */ 06900000
   DCL  GPR14    CHAR;             /* REG 14 MUST BE RESPECIFIED     */ 06950000
   DCL  GPR15    CHAR;             /* REG 15 MUST BE RESPECIFIED     */ 07000000
   DCL  INDENT   FIXED;            /* INDENT VALUE FOR LISTING       */ 07050000
   DCL  IMACRO   CHAR;             /* MACRO PARAMETERS               */ 07100000
  @SPACE(1);                                                            07150000
   IMACRO=' ?'||MACLABEL||MACNAME||MACLIST||' '||MACKEYS||' ';          07200000
   GPR0  =  ' GPR00F';             /* REG 0  MUST BE RESPECIFIED     */ 07250000
   GPR1  =  ',GPR01F';             /* REG 1  MUST BE RESPECIFIED     */ 07300000
   GPR14 =  ',GPR14F';             /* REG 14 MUST BE RESPECIFIED     */ 07350000
   GPR15 =  ',GPR15F';             /* REG 15 MUST BE RESPECIFIED     */ 07400000
   ERR = 0;                        /* ERROR SEVERITY                 */ 07450000
   IF (MACCOL > 42) THEN                                                07500000
      INDENT=MACLMAR+3;            /* ENSURE BAL GEN'D ON ONE LINE   */ 07550000
   ELSE INDENT=MACCOL+2;           /* INDENT TWO COLUMNS FOR FORMAT  */ 07600000
  @SPACE(1);                                                            07650000
   IF MACLABEL^='' THEN            /* GENERATE MACLABEL              */ 07700000
      ANS(MACLABEL)  COL(MACLMAR);                                      07750000
   ANS('DO; '|| COMMENT(IMACRO)) COL(MACCOL); /* START CODE & LIST      07800000
                                                 MACRO PARAMETERS*/     07850000
   IF NUMBER(MACLIST) > 0 THEN DO;        /* CHECK FOR POSITIONALS   */ 07900000
     ERRMSG = 'A POSITIONAL PARAMETER HAS BEEN SUPPLIED, NONE EXIST.';  07950000
     ERR = 8;                                                           08000000
     ANS MSG(ERRMSG);                                                   08050000
     ANS (COMMENT(ERRMSG)) COL(INDENT);                                 08100000
     END;                                                               08150000
   IF DEVN = '' THEN DO;                         /* OUTPUT AREA    */   08200000
      ERRMSG ='DEVN PARAMETER IS REQUIRED.';                            08250000
      ERR = 8;                                                          08300000
      ANS MSG(ERRMSG);                                                  08350000
      ANS(COMMENT(ERRMSG)) COL(INDENT);                                 08400000
      END;                                                              08450000
    @SPACE;                                                             08500000
 IF ERR = 0  THEN                  /* NO PARAMETER ERRORS?           */ 08550000
    DO;                                                                 08600000
 /*                 DECLARE CVT ACCESS VARIABLES                     */ 08650000
 IF INDEX(EHAMAPS,'XM@')=0 THEN    /*                                */ 08700000
    EHAMAPS=EHAMAPS||'XM@';        /*  NO, ADD TO EHAMAPS            */ 08750000
 /*                 DECLARE REGISTERS IF NECESSARY                   */ 08800000
 IF INDEX(EHAREGS,'00F')=0 THEN    /* HAS REG0 BEEN DECLARED         */ 08850000
    EHAREGS=EHAREGS||'00F';        /*  NO, ADD TO EHAREGS            */ 08900000
 IF INDEX(EHAREGS,'01F')=0 THEN    /* HAS REG1 BEEN DECLARED         */ 08950000
    EHAREGS=EHAREGS||'01F';        /*  NO, ADD TO EHAREGS            */ 09000000
 IF INDEX(EHAREGS,'14F')=0 THEN    /* HAS REG14 BEEN DECLARED        */ 09050000
    EHAREGS=EHAREGS||'14F';        /*  NO, ADD TO EHAREGS            */ 09100000
 IF INDEX(EHAREGS,'15F')=0 THEN    /* HAS REG15 BEEN DECLARED        */ 09150000
    EHAREGS=EHAREGS||'15F';        /*  NO, ADD TO EHAREGS            */ 09200000
 /*                 PRODUCE PL/AS-PL/S CODE                          */ 09250000
 ANS('RFY('||GPR0||GPR1||') RSTD; ')    COL(INDENT);  /*         @P2C*/ 09300000
 IF UCBPTR = '' THEN                                                    09350000
 ANS('GPR01F=ADDR(UCBOB); '    ||                                       09400000
    COMMENT(' REG1 = UCB ADDRESS '))     COL(INDENT);                   09450000
 ELSE                                                                   09500000
 ANS('GPR01F='||UCBPTR(1)||'; '    ||                                   09550000
    COMMENT(' REG1 = UCB ADDRESS '))     COL(INDENT);                   09600000
 ANS('GPR00F=0; '||                                                     09650000
    COMMENT(' SET FLAGS '))        COL(INDENT);                         09700000
 IF NONBASE(1) = 'YES' THEN                                             09812500
 ANS('GPR00F=1; '    ||                                                 09825000
    COMMENT(' REG0 = 1, CALLER WANTS ALIAS DEVICE NUMBER'))             09845800
                                                 COL(INDENT);           09866600
 ANS('CALL (XM@CVT+1052)->I031P->I31ANY;'         ||                    09887400
    COMMENT(' CALL CONVERT DEVICE NUMBER ROUTINE ')) COL(INDENT); /*    09908200
                                      Change from BASSM to CALL  @P2C*/ 09929000
 ANS(DEVN(1) ||'=GPR01F; '    ||                                        09950000
    COMMENT(' STORE EBCDIC UCB NAME '))              COL(INDENT);       10000000
 ANS('RFY('||GPR0||GPR1||') UNRSTD; ')  COL(INDENT); /*          @P2C*/ 10050000
 ANS('END; '||COMMENT(IMACRO))  COL(MACCOL); /* END CODE & LIST         10100000
                                                MACRO PARAMETERS    */  10150000
 END;                                                                   10200000
 RETURN;                           /* RETURN SUCCESSFUL             */  10250000
 %END UCBDEVN;                                                          10300000
