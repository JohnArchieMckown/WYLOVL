*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMESQRY                              -03/05/96-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Enclave State Query                           * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5645-001 (C) COPYRIGHT IBM CORP. 1997                           * 00001300
*                                                                     * 00001400
* STATUS= HBB6603                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*01* FUNCTION:                                                        * 00001900
*                                                                     * 00002000
*                                                                     * 00002100
*      The purpose of this service is to query whether or not the     * 00002200
*      current dispatchable workunit is associated with an Enclave.   * 00002300
*      The output is an Enclave token associated with the caller's    * 00002400
*      workunit.                                                      * 00002500
*                                                                     * 00002600
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00002700
*                                                                     * 00002800
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00002900
*                                                                     * 00003000
*01* ENVIRONMENT:                                                     * 00003100
*                                                                     * 00003200
*                                                                     * 00003300
*      Minimum authorization: Supervisor state. Any PSW key.          * 00003400
*                                                                     * 00003500
*      Dispatchable unit mode: Task or SRB mode.                      * 00003600
*                                                                     * 00003700
*      Cross Memory Mode: Non-XMEM or XMEM. Any PASN, HASN, SASN.     * 00003800
*                                                                     * 00003900
*      AMODE:            31-bit.                                      * 00004000
*                                                                     * 00004100
*      ASC mode:         Primary.                                     * 00004200
*                                                                     * 00004300
*      Interrupt status: Enabled or disabled for I/O and external     * 00004400
*                        interrupts.                                  * 00004500
*                                                                     * 00004600
*      Locks:            No locks are required.                       * 00004700
*                                                                     * 00004800
*      Control parameters: Control parameters must be in the primary  * 00004900
*                        address space.                               * 00005000
*                                                                     * 00005100
*                                                                     * 00005200
*                                                                     * 00005300
*01* PROGRAMMING REQUIREMENTS:                                        * 00005400
*                                                                     * 00005500
*                                                                     * 00005600
*    1.  The macro IWMYCON must be included to use this macro.        * 00005700
*                                                                     * 00005800
*    2.  The macro IWMPB must be in the library concatenation, since  * 00005900
*        it is included by IWMYCON.                                   * 00006000
*                                                                     * 00006100
*    3.  Note that the high order halfword of register 0, and the     * 00006200
*        reason code variable when specified, may be non-zero and     * 00006300
*        represents diagnostic data which is NOT part of the external * 00006400
*        interface.  The high order halfword should thus be excluded  * 00006500
*        from comparison with the reason code values described above. * 00006600
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00006700
*        be used for this purpose.                                    * 00006800
*                                                                     * 00006900
*    4.  Caller is responsible for error recovery.                    * 00007000
*                                                                     * 00007100
*                                                                     * 00007200
*                                                                     * 00007300
*01* RESTRICTIONS:                                                    * 00007400
*                                                                     * 00007500
*                                                                     * 00007600
*    1.  This macro may not be used prior to the completion of WLM    * 00007700
*        address space initialization.                                * 00007800
*                                                                     * 00007900
*    2.  This macro may only be used on MVS/ESA HBB6603 or higher.    * 00008000
*                                                                     * 00008100
*                                                                     * 00008200
*                                                                     * 00008300
*01* INPUT REGISTER INFORMATION:                                      * 00008400
*                                                                     * 00008500
*    Before issuing the IWMESQRY macro, the caller does not have to   * 00008600
*    place any information into any register unless using it in       * 00008700
*    register notation for a particular parameter, or using it as a   * 00008800
*    base register.                                                   * 00008900
*                                                                     * 00009000
*01* OUTPUT REGISTER INFORMATION:                                     * 00009100
*                                                                     * 00009200
*    When control returns to the caller, the GPRs contain:            * 00009300
*                                                                     * 00009400
*                                                                     * 00009500
*    REGISTER  CONTENTS                                               * 00009600
*                                                                     * 00009700
*    0         Reason code if GR15 return code is non-zero            * 00009800
*                                                                     * 00009900
*    1         Used as work registers by the system                   * 00010000
*                                                                     * 00010100
*    2-13      Unchanged                                              * 00010200
*                                                                     * 00010300
*    14        Used as work registers by the system                   * 00010400
*                                                                     * 00010500
*    15        Return code                                            * 00010600
*                                                                     * 00010700
*                                                                     * 00010800
*                                                                     * 00010900
*    When control returns to the caller, the ARs contain:             * 00011000
*                                                                     * 00011100
*                                                                     * 00011200
*    REGISTER  CONTENTS                                               * 00011300
*                                                                     * 00011400
*    0-1       Used as work registers by the system                   * 00011500
*                                                                     * 00011600
*    2-13      Unchanged                                              * 00011700
*                                                                     * 00011800
*    14-15     Used as work registers by the system                   * 00011900
*                                                                     * 00012000
*                                                                     * 00012100
*                                                                     * 00012200
*    Some callers depend on register contents remaining the same      * 00012300
*    before and after issuing a service.  If the system changes the   * 00012400
*    contents of registers on which the caller depends, the caller    * 00012500
*    must save them before issuing the service, and restore them      * 00012600
*    after the system returns control.                                * 00012700
*                                                                     * 00012800
*01* PERFORMANCE IMPLICATIONS:                                        * 00012900
*                                                                     * 00013000
*    None                                                             * 00013100
*                                                                     * 00013200
*01* SYNTAX:                                                          * 00013300
*                                                                     * 00013400
*[xlabel]  IWMESQRY     ETOKEN=xetoken                                * 00013500
*                     [,RETCODE=xretcode]                             * 00013600
*                     [,RSNCODE=xrsncode]                             * 00013700
*                     [,PLISTVER=xplistver|IMPLIED_VERSION]         * 00013800
*                    [,MF=S]                                         * 00013900
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00014000
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00014100
*                                                                     * 00014200
*                                                                     * 00014300
*      Where:                                                         * 00014400
*                                                                     * 00014500
*                                                                     * 00014600
*      [xlabel]                                                       * 00014700
*          is an optional symbol, starting in column 1, that is the   * 00014800
*          name on the IWMESQRY macro invocation.  The name must      * 00014900
*          conform to the rules for an ordinary assembler language    * 00015000
*          symbol.                                                    * 00015100
*          DEFAULT: No name.                                          * 00015200
*                                                                     * 00015300
*                                                                     * 00015400
*                                                                     * 00015500
*                                                                     * 00015600
*      ETOKEN=xetoken                                                 * 00015700
*          is the name (RS-type), or address in register (2)-(12), of * 00015800
*          a required 8 character output which will receive the       * 00015900
*          Enclave token if the current dispatchable workunit is      * 00016000
*          associated with an Enclave.                                * 00016100
*                                                                     * 00016200
*                                                                     * 00016300
*                                                                     * 00016400
*                                                                     * 00016500
*      [RETCODE=xretcode]                                             * 00016600
*          is the name (RS-type) of an optional fullword output       * 00016700
*          variable, or register (2)-(12), into which the return code * 00016800
*          is to be copied from GPR 15.                               * 00016900
*                                                                     * 00017000
*                                                                     * 00017100
*                                                                     * 00017200
*                                                                     * 00017300
*      [RSNCODE=xrsncode]                                             * 00017400
*          is the name (RS-type) of an optional fullword output       * 00017500
*          variable, or register (2)-(12), into which the reason code * 00017600
*          is to be copied from GPR 0.                                * 00017700
*                                                                     * 00017800
*                                                                     * 00017900
*                                                                     * 00018000
*                                                                     * 00018100
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00018200
*          is an optional byte input decimal value in the "0-0" range * 00018300
*          that specifies the macro version.  PLISTVER is the only    * 00018400
*          key allowed on the list form of MF and determines which    * 00018500
*          parameter list is generated.  Note that MAX may be         * 00018600
*          specified instead of a number, and the parameter list will * 00018700
*          be of the largest size currently supported. This size may  * 00018800
*          grow from release to release (thus possibly affecting the  * 00018900
*          amount of storage needed by your program).  If your        * 00019000
*          program can tolerate this, IBM recommends that you always  * 00019100
*          specify MAX when creating the list form parameter list as  * 00019200
*          that will ensure that the list form parameter list is      * 00019300
*          always long enough to hold whatever parameters might be    * 00019400
*          specified on the execute form.                             * 00019500
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00019600
*          default is the lowest version which allows all of the      * 00019700
*          parameters specified on the invocation to be processed.    * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*                                                                     * 00020100
*                                                                     * 00020200
*      [MF=S|L|E]                                                   * 00020300
*          is an optional keyword input which specifies the macro     * 00020400
*          form.                                                      * 00020500
*          DEFAULT: S                                                 * 00020600
*                                                                     * 00020700
*                                                                     * 00020800
*          [MF=S]                                                     * 00020900
*              specifies the standard form of the macro.  The "S"     * 00021000
*              form generates code to put the parameters into an      * 00021100
*              in-line parameter list and invoke the desired service. * 00021200
*              Full checking for required macro keys is done along    * 00021300
*              with supplying defaults for omitted optional           * 00021400
*              parameters.                                            * 00021500
*                                                                     * 00021600
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00021700
*              specifies the list form of the macro.  The "L" form    * 00021800
*              defines an area to be used for the parameter list.     * 00021900
*              Only the PLISTVER key may be specified on the          * 00022000
*              invocation.  All other macro parameters are flagged as * 00022100
*              errors.  If PLISTVER is not specified, the original    * 00022200
*              parameter list definition is used.                     * 00022300
*                                                                     * 00022400
*            ,xmfctrl                                                 * 00022500
*              is a required input.  It is the name of a storage area * 00022600
*              for the parameter list.                                * 00022700
*                                                                     * 00022800
*            ,xmfattr|0D                                            * 00022900
*              is an optional 60 character input string that varies   * 00023000
*              from 1 to 60 characters. It can contain any value that * 00023100
*              is valid on an assembler DS pseudo-op. You can use     * 00023200
*              this parameter to force boundary alignment of the      * 00023300
*              parameter list.                                        * 00023400
*              DEFAULT: 0D which forces the parameter list to a       * 00023500
*              doubleword boundary.                                   * 00023600
*                                                                     * 00023700
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00023800
*              specifies the execute form of the macro.  The "E" form * 00023900
*              generates code to put the parameters into the          * 00024000
*              parameter list specified by xmfctrl and provides full  * 00024100
*              syntax checking with default setting.                  * 00024200
*                                                                     * 00024300
*            ,xmfctrl                                                 * 00024400
*              is a required input.  It is the name (RS-type), or     * 00024500
*              address in register (1)-(12), of a storage area for    * 00024600
*              the parameter list.                                    * 00024700
*                                                                     * 00024800
*            ,COMPLETE                                              * 00024900
*              is an optional keyword input which specifies the       * 00025000
*              degree of macro parameter syntax checking.             * 00025100
*              DEFAULT: COMPLETE                                      * 00025200
*                                                                     * 00025300
*                                                                     * 00025400
*              COMPLETE                                               * 00025500
*                  Checking for required macro keys is done and       * 00025600
*                  defaults are supplied for omitted optional         * 00025700
*                  parameters.                                        * 00025800
*                                                                     * 00025900
*                                                                     * 00026000
*                                                                     * 00026100
*                                                                     * 00026200
*                                                                     * 00026300
*                                                                     * 00026400
*                                                                     * 00026500
*01* ABEND CODES:  None.                                              * 00026600
*                                                                     * 00026700
*01* RETURN CODES:                                                    * 00026800
*                                                                     * 00026900
*                                                                     * 00027000
*            0    Name: IwmRetCodeOk                                  * 00027100
*                                                                     * 00027200
*                 Meaning: Successful completion.                     * 00027300
*                                                                     * 00027400
*                 Action: None required.                              * 00027500
*                                                                     * 00027600
*            4    Name: IwmRetCodeWarning                             * 00027700
*                                                                     * 00027800
*                 Meaning: Successful completion, unusual conditions  * 00027900
*                 noted.                                              * 00028000
*                                                                     * 00028100
*                                                                     * 00028200
*                 HEX REASON  MEANING/ACTION                          * 00028300
*                 CODE                                                * 00028400
*                                                                     * 00028500
*                 xxxx041C    Name: IwmRsnCodeNotEnclave              * 00028600
*                                                                     * 00028700
*                             Meaning:  The current dispatchable      * 00028800
*                             workunit is not associated with an      * 00028900
*                             Enclave.                                * 00029000
*                                                                     * 00029100
*                             Action: None required.                  * 00029200
*                                                                     * 00029300
*                                                                     * 00029400
*                                                                     * 00029500
*                                                                     * 00029600
*                                                                     * 00029700
*01* REASON CODES:                                                    * 00029800
*                                                                     * 00029900
*       A unique reason code will be returned whenever the return     * 00030000
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00030100
*       under their corresponding return code.  Reason code and       * 00030200
*       return code constants are defined within IWMYCON.  Note that  * 00030300
*       the high order halfword of register 0, and the reason code    * 00030400
*       variable when specified, may be non-zero and represents       * 00030500
*       diagnostic data which is NOT part of the external interface.  * 00030600
*       The high order halfword should thus be excluded from          * 00030700
*       comparison with the reason code values described above.  The  * 00030800
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00030900
*       used for this purpose.                                        * 00031000
*                                                                     * 00031100
*01* MODULE TYPE:  ASSEM MACRO                                        * 00031200
*                                                                     * 00031300
*02*   PROCESSOR:  ASSEM                                              * 00031400
*                                                                     * 00031500
*01* COMPONENT:  SCWLM                                                * 00031600
*                                                                     * 00031700
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00031800
*                                                                     * 00031900
*01* EXAMPLES:                                                        * 00032000
*                                                                     * 00032100
*    To query whether the current dispatchable workunit is            * 00032200
*    associated with an Enclave:                                      * 00032300
*                                                                     * 00032400
*               IWMESQRY ETOKEN=ENCTOKEN,RETCODE=RC,RSNCODE=RSN       * 00032500
*      *                                                              * 00032600
*      * Storage areas                                                * 00032700
*      *                                                              * 00032800
*      ENCTOKEN DS    CL8             Enclave token                   * 00032900
*      RC       DS    F               Return code                     * 00033000
*      RSN      DS    F               Reason code                     * 00033100
*                                                                     * 00033200
*                                                                     * 00033300
*01* MACRO USAGE NOTES:                                               * 00033400
*                                                                     * 00033500
*                                                                     * 00033600
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00033700
*        global macro variable.  Any value other than 'NO' will       * 00033800
*        result in the macro expansion being printed.  The default is * 00033900
*        'YES'.  The following examples illustrate how the ZPRINT     * 00034000
*        variable should be set.                                      * 00034100
*                                                                     * 00034200
*                    GBLC &ZPRINT                                     * 00034300
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00034400
*                                                                     * 00034500
*                                                                     * 00034600
*    2.  All   keys   currently   contained  in  the  IWMESQRY  macro * 00034700
*        correspond  to  version  0.   If you specify PLISTVER, use a * 00034800
*        value of 0 or MAX.                                           * 00034900
*                                                                     * 00035000
*                                                                     * 00035100
*                                                                     * 00035200
*                                                                     * 00035300
*01* CHANGE ACTIVITY:                                                 * 00035400
*                                                                     * 00035500
*   Flag LineItem  FMID    Date   ID    Comment                       * 00035600
*                                                                     * 00035700
*    $L0=WLMP0AMG HBB6603 950223 PD88RK:  Enclave State Query         * 00035800
****** END OF SPECIFICATIONS *****************************************/ 00035900
*/********************************************************************* 00036000
         MACRO                                                          00036100
&XLABEL  IWMESQRY &ETOKEN=,&RETCODE=,&RSNCODE=,&PLISTVER=,&MF=          00036200
.*                                                                      00036300
*              MACDATE -03/05/96-<0>                                    00036400
.*                                                                      00036500
.*******************************************************************    00036600
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00036700
.*******************************************************************    00036800
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   00036900
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     00037000
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             00037100
.*                                                                      00037200
              GBLC  &ZIWMESQRY  YES=MACRO USED AT LEAST ONCE            00037300
.*******************************************************************    00037400
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00037500
.*******************************************************************    00037600
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 00037700
              LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS            00037800
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              00037900
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             00038000
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             00038100
              LCLA  &ZAWRK      USED AS A WORK AREA                     00038200
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  00038300
              LCLA  &ZN         NUMERIC WORK VARIABLE                   00038400
              LCLC  &ZC         CHARACTER WORK VARIABLE                 00038500
              LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE             00038600
              LCLA  &ZTLA       VALUE TOO LONG VARIABLE                 00038700
              LCLA  &ZMACRET    MACRO RETURN CODE                       00038800
&ZMACRET      SETA  0           ASSUME NO ERRORS                        00038900
.*                                                                      00039000
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      00039100
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              00039200
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   00039300
              LCLC  &ZENDBASEPL                 End of base PL          00039400
              LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                   00039500
.*******************************************************************    00039600
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00039700
.*******************************************************************    00039800
              LCLA  &ZI         INDEX FOR ARRAY                         00039900
              LCLA  &ZJ         INDEX FOR PARMS                         00040000
              LCLA  &ZK         INDEX FOR PARSE                         00040100
              LCLA  &ZLO        LOW RANGE VALUE                         00040200
              LCLA  &ZHI        HIGH RANGE VALUE                        00040300
              LCLC  &ZW         WORK AREA FOR PARM                      00040400
.********************************************************************   00040500
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00040600
.********************************************************************   00040700
              GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                 00040800
              GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE          00040900
.*                                                                      00041000
              AIF   (K'&SYSASCE GT 0).ZSYS4     SYS STATE DEFINED       00041100
              AIF   (K'&SYSSPLV GT 0).ZSYS2     SP LEVEL DEFINED        00041200
              SPLEVEL  TEST                                             00041300
.ZSYS2        ANOP  ,                                                   00041400
              AIF   ('&SYSSPLV' EQ '1').ZSYS3   PRE SP 3.1              00041500
              AIF   ('&SYSSPLV' EQ '2').ZSYS3   PRE SP 3.1              00041600
              SYSSTATE TEST                                             00041700
              AGO   .ZSYS4                                              00041800
.ZSYS3        ANOP  ,                                                   00041900
&SYSASCE      SETC  'P'         ASSUME SYSSTATE PRIMARY                 00042000
.ZSYS4        ANOP  ,                                                   00042100
.*******************************************************************    00042200
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00042300
.*******************************************************************    00042400
              LCLC  &XETOKEN    ++ NAME                                 00042500
              LCLC  &XRETCODE   ++ NAME                                 00042600
              LCLC  &XRSNCODE   ++ NAME                                 00042700
              LCLA  &XPLISTVER  ++ VALUE                                00042800
              LCLC  &XMF        ++ VALUE                                00042900
              LCLC  &XMFCTRL    ++ NAME                                 00043000
              LCLC  &XMFATTR    ++ VALUE                                00043100
              LCLC  &XMFSCK     ++ VALUE                                00043200
.*******************************************************************    00043300
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00043400
.*******************************************************************    00043500
              LCLC  &ZXETOKEN   ++ OUTPUT NAME                          00043600
              LCLC  &ZXRETCODE  ++ OUTPUT NAME                          00043700
              LCLC  &ZXRSNCODE  ++ OUTPUT NAME                          00043800
              LCLC  &ZXPLISTVER                 ++ INPUT VALUE          00043900
              LCLC  &ZXMF       ++ INPUT VALUE                          00044000
              LCLC  &ZXMFCTRL   ++ INPUT NAME                           00044100
              LCLC  &ZXMFATTR   ++ INPUT VALUE                          00044200
              LCLC  &ZXMFSCK    ++ INPUT VALUE                          00044300
.********************************************************************   00044400
.***AC.PLV01  PROCESS PLISTVER                                      *   00044500
.********************************************************************   00044600
&XPLISTVER      SETA  0                                                 00044700
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00044800
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00044900
&XPLISTVER      SETA  0                                                 00045000
.ZPLV0          ANOP  ,                                                 00045100
.*                                                                      00045200
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00045300
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00045400
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00045500
.*-------------------------------------------------------------------   00045600
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00045700
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00045800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00045900
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00046000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00046100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00046200
                AGO   .ZPVCK2                                           00046300
.ZPVCK3         ANOP  ,                                                 00046400
.*-------------------------------------------------------------------   00046500
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00046600
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00046700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00046800
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00046900
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00047000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00047100
                AGO   .ZPVCKE                                           00047200
.ZPVCK2         ANOP  ,                                                 00047300
.*-------------------------------------------------------------------   00047400
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00047500
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00047600
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00047700
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00047800
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00047900
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00048000
                MNOTE 8,' &ZMS IS REQUIRED.'                            00048100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00048200
                AGO   .ZPVCK5                                           00048300
.ZPVCK4         ANOP  ,                                                 00048400
&XPLISTVER      SETA  &PLISTVER(1)                                      00048500
.ZPVCK5         ANOP  ,                                                 00048600
.*-------------------------------------------------------------------   00048700
&ZCVAL          SETC  '&PLISTVER(1)'                                    00048800
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00048900
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00049000
                AIF   (&XPLISTVER LT 0).ZPVCK6  TOO LOW                 00049100
                AIF   (&XPLISTVER LE 0).ZPVCKE  NOT HIGH                00049200
.ZPVCK6         ANOP   ,                                                00049300
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00049400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00049500
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00049600
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00049700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00049800
.ZPVCKE         ANOP   ,                                                00049900
.********************************************************************   00050000
.***AG.MF01 PROCESS MF MACRO FORMS                                      00050100
.********************************************************************   00050200
              ACTR  10000                                               00050300
.*------------------------------------------------------------------    00050400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00050500
&XMF          SETC  ''          INITIALIZE XVARIABLE                    00050600
.*-------------------------------------------------------------------   00050700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00050800
.ZG15         ANOP  ,                                                   00050900
&ZTLC         SETC 'S'                                                  00051000
              AIF   ('&MF(1)' NE '&ZTLC').ZG16                          00051100
&XMF          SETC  'S'         SET KEYWORD                             00051200
              AIF   (N'&MF LE 1).ZG15A          CK NUM                  00051300
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00051400
&ZMS          SETC  '&ZMS.&MF"'                                         00051500
&ZMS          SETC  '&ZMS "MF"'                                         00051600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00051700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00051800
.ZG15A        ANOP  ,                                                   00051900
.*-------------------------------------------------------------------   00052000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00052100
.ZG16         ANOP  ,                                                   00052200
&ZTLC         SETC 'L'                                                  00052300
              AIF   ('&MF(1)' NE '&ZTLC').ZG23                          00052400
&XMF          SETC  'L'         SET KEYWORD                             00052500
              AIF   (N'&MF LE 3).ZG16A          CK NUM                  00052600
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00052700
&ZMS          SETC  '&ZMS.&MF"'                                         00052800
&ZMS          SETC  '&ZMS "MF"'                                         00052900
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00053000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00053100
.ZG16A        ANOP  ,                                                   00053200
.*-------------------------------------------------------------------   00053300
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00053400
              AIF   (N'&SYSLIST NE 0).ZG16B     POSITIONALS?            00053500
              AIF   ('&ETOKEN' NE '').ZG16B     KEYS?                   00053600
              AIF   ('&RETCODE' NE '').ZG16B    KEYS?                   00053700
              AIF   ('&RSNCODE' NE '').ZG16B    KEYS?                   00053800
              AGO    .ZG16C     INVOCATION OKAY                         00053900
.ZG16B        ANOP  ,                                                   00054000
&ZMS          SETC  'THE "L" FORM OF "MF"'      *MFLA* MNOTE            00054100
&ZMS          SETC  '&ZMS CAN ONLY HAVE'                                00054200
&ZMS          SETC  '&ZMS THE "PLISTVER" KEY'                           00054300
              MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'              00054400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00054500
.ZG16C        ANOP  ,                                                   00054600
.*-------------------------------------------------------------------   00054700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00054800
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00054900
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00055000
              AIF   (N'&MF(2) GT 1).ZG18B       MULTI PARMS             00055100
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00055200
.ZG18B        AIF   (K'&MF(2) GT 0).ZG18C                               00055300
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00055400
&ZMS          SETC  'WHEN "L" IS SPECIFIED'     *KRQDA*                 00055500
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00055600
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00055700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00055800
.ZG18C        ANOP  ,                                                   00055900
.*-------------------------------------------------------------------   00056000
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00056100
              AIF   (K'&ZXMFCTRL LE 0).ZG18P    NOT I/O                 00056200
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG18P                      00056300
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00056400
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00056500
&ZMS          SETC  '&ZMS.&MF"'                                         00056600
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00056700
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                   00056800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00056900
.ZG18P        ANOP  ,                                                   00057000
.*-------------------------------------------------------------------   00057100
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00057200
&ZXMFATTR     SETC  'INPUT'     SET IN/OUTPUT                           00057300
&XMFATTR      SETC  '0D'                                                00057400
              AIF   (K'&MF(3) LE 0).ZG21B       PARM                    00057500
&XMFATTR      SETC  '&MF(3,1)'  SET XVARIABLE                           00057600
              AIF   (N'&MF(3) GT 1).ZG21B       MULTI PARMS             00057700
&XMFATTR      SETC  '&MF(3)'    SET XVARIABLE                           00057800
.ZG21B        ANOP  ,                                                   00057900
.*-------------------------------------------------------------------   00058000
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00058100
              AIF   (K'&ZXMFATTR LE 0).ZG21P    NOT I/O                 00058200
              AIF   ('&XMFATTR'(1,1) NE '(').ZG21P                      00058300
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00058400
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00058500
&ZMS          SETC  '&ZMS.&MF"'                                         00058600
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00058700
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                   00058800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00058900
.ZG21P        ANOP  ,                                                   00059000
.*-------------------------------------------------------------------   00059100
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00059200
              AIF   (K'&ZXMFATTR LE 0).ZG21S    NOT I/O                 00059300
              AIF   (K'&XMFATTR LE 60).ZG21S    LNG OK                  00059400
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00059500
&ZMS          SETC  '"MF='      *KLNGA* MNOTE                           00059600
&ZMS          SETC  '&ZMS.&MF"'                                         00059700
&ZMS          SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'               00059800
              MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                  00059900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00060000
.ZG21S        ANOP  ,                                                   00060100
.*-------------------------------------------------------------------   00060200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00060300
.ZG23         ANOP  ,                                                   00060400
&ZTLC         SETC 'E'                                                  00060500
              AIF   ('&MF(1)' NE '&ZTLC').ZG31                          00060600
&XMF          SETC  'E'         SET KEYWORD                             00060700
              AIF   (N'&MF LE 3).ZG23A          CK NUM                  00060800
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00060900
&ZMS          SETC  '&ZMS.&MF"'                                         00061000
&ZMS          SETC  '&ZMS "MF"'                                         00061100
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00061200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00061300
.ZG23A        ANOP  ,                                                   00061400
.*-------------------------------------------------------------------   00061500
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00061600
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00061700
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00061800
              AIF   (N'&MF(2) GT 1).ZG25B       MULTI PARMS             00061900
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00062000
.ZG25B        AIF   (K'&MF(2) GT 0).ZG25C                               00062100
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00062200
&ZMS          SETC  'WHEN "E" IS SPECIFIED'     *KRQDA*                 00062300
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00062400
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00062500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00062600
.ZG25C        ANOP  ,                                                   00062700
.*-------------------------------------------------------------------   00062800
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00062900
              AIF   (K'&ZXMFCTRL LE 0).ZG25R    NOT I/O                 00063000
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG25R                      00063100
&ZCGPR        SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                          00063200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG25P                        00063300
              AIF   (K'&ZCGPR GT 2).ZG25Q                               00063400
              AIF   ('&ZCGPR' EQ '0').ZG25Q                             00063500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00063600
              AIF   (T'&ZCGPR NE 'N').ZG25Q     INVALID REG NAME        00063700
.ZG25P        ANOP  ,                                                   00063800
              AIF   (T'&ZCGPR NE 'N').ZG25R     NON NUMERIC             00063900
              AIF   ('&ZCGPR' LT '1').ZG25Q                             00064000
              AIF   ('&ZCGPR' LE '12').ZG25R                            00064100
.ZG25Q        ANOP  ,                                                   00064200
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00064300
&ZMS          SETC  '&ZMS.&MF"'                                         00064400
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'           00064500
              MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                    00064600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00064700
.ZG25R        ANOP  ,                                                   00064800
.*-------------------------------------------------------------------   00064900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00065000
&XMFSCK       SETC  ''          INITIALIZE XVARIABLE                    00065100
.ZG29A   AIF   ('&MF(3)' NE 'COMPLETE').ZG30A                           00065200
&XMFSCK       SETC  'COMPLETE'  SET KEYWORD                             00065300
.*-------------------------------------------------------------------   00065400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00065500
.ZG30A        AIF   (K'&XMFSCK GT 0).ZG30C      KEYWORD                 00065600
              AIF   (K'&MF(3) LE 0).ZG30B                               00065700
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           00065800
&ZMS          SETC  '&ZMS.&MF"'                                         00065900
&ZMS          SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '           00066000
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00066100
&ZMS          SETC  '&ZMS "COMPLETE".'          VALID KEYWORD           00066200
              MNOTE 8,' &ZMS '                                          00066300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00066400
.ZG30B        ANOP  ,                                                   00066500
&XMFSCK       SETC  'COMPLETE'  SET DEFAULT KEYWORD                     00066600
.ZG30C        ANOP  ,                                                   00066700
&ZXMFSCK      SETC  'INPUT'     SET IN/OUTPUT                           00066800
.*------------------------------------------------------------------    00066900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00067000
.ZG31         ANOP  ,                                                   00067100
&ZXMF         SETC  'INPUT'     SET IN/OUTPUT                           00067200
              AIF   (K'&XMF GT 0).ZG31E         VALID ARG               00067300
              AIF   (T'&MF EQ 'O').ZG31D        OMITTED                 00067400
&ZASYSLNDX    SETA  0                                                   00067500
.ZG31A        ANOP  ,           POSITIONAL MACRO KEY                    00067600
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        00067700
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG31C                    00067800
&ZTLC         SETC 'MF'                                                 00067900
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG31A           00068000
.ZG31B        ANOP  ,                                                   00068100
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00068200
&ZMS          SETC  'THE "MF" KEY'              *KOPTA* MNOTE           00068300
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             00068400
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    00068500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00068600
              AGO   .ZG31E                                              00068700
.ZG31C        ANOP  ,                                                   00068800
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00068900
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           00069000
&ZMS          SETC  '&ZMS.&MF"'                                         00069100
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00069200
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00069300
&ZMS          SETC  '&ZMS "S",'                 VALID KEYWORD           00069400
&ZMS          SETC  '&ZMS "L",'                 VALID KEYWORD           00069500
&ZMS          SETC  '&ZMS OR "E".'              VALID KEYWORD           00069600
              MNOTE 8,' &ZMS '                                          00069700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00069800
              AGO   .ZG31E                                              00069900
.ZG31D        ANOP  ,                                                   00070000
&XMF          SETC  'S'         SET DEFAULT KEYWORD                     00070100
&XMFSCK       SETC  'COMPLETE'  COMPLETE CHECKING                       00070200
.ZG31E        ANOP  ,                                                   00070300
.********************************************************************   00070400
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00070500
.********************************************************************   00070600
              ACTR  10000                                               00070700
.*-------------------------------------------------------------------   00070800
.***AG.MF03 MF=(SLE)                                                    00070900
              AIF   ('&XMF' EQ 'L').ZGMFX                               00071000
.*----------------------------------------------------------------***   00071100
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00071200
              AIF   (N'&ETOKEN LE 1).ZG2A       CK NUM                  00071300
&ZMS          SETC  '"ETOKEN='  *KPOSA* MNOTE                           00071400
&ZMS          SETC  '&ZMS.&ETOKEN"'                                     00071500
&ZMS          SETC  '&ZMS "ETOKEN"'                                     00071600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00071700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00071800
.ZG2A         ANOP  ,                                                   00071900
.*-------------------------------------------------------------------   00072000
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00072100
&ZXETOKEN     SETC  'OUTPUT'    SET IN/OUTPUT                           00072200
&XETOKEN      SETC  '&ETOKEN(1)'                SET XVARIABLE           00072300
              AIF   (N'&ETOKEN GT 1).ZG2B       MULTI PARMS             00072400
&XETOKEN      SETC  '&ETOKEN'   SET XVARIABLE                           00072500
.ZG2B         AIF   (K'&ETOKEN(1) GT 0).ZG2C                            00072600
&ZXETOKEN     SETC  ''          RESET IN/OUTPUT                         00072700
&ZMS          SETC  ' '         *KRQDA*                                 00072800
&ZMS          SETC  '&ZMS "ETOKEN" KEY AND ITS ARGUMENT'                00072900
              MNOTE 8,' &ZMS ARE REQUIRED.'                             00073000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00073100
.ZG2C         ANOP  ,                                                   00073200
.*-------------------------------------------------------------------   00073300
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00073400
              AIF   (K'&ZXETOKEN LE 0).ZG2R     NOT I/O                 00073500
              AIF   ('&XETOKEN'(1,1) NE '(').ZG2R                       00073600
&ZCGPR        SETC  '&XETOKEN'(2,K'&XETOKEN-2)                          00073700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                         00073800
              AIF   (K'&ZCGPR GT 2).ZG2Q                                00073900
              AIF   ('&ZCGPR' EQ '0').ZG2Q                              00074000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00074100
              AIF   (T'&ZCGPR NE 'N').ZG2Q      INVALID REG NAME        00074200
.ZG2P         ANOP  ,                                                   00074300
              AIF   (T'&ZCGPR NE 'N').ZG2R      NON NUMERIC             00074400
              AIF   ('&ZCGPR' LT '2').ZG2Q                              00074500
              AIF   ('&ZCGPR' LE '12').ZG2R                             00074600
.ZG2Q         ANOP  ,                                                   00074700
&ZMS          SETC  '"ETOKEN='  *KGPRA* MNOTE                           00074800
&ZMS          SETC  '&ZMS.&ETOKEN"'                                     00074900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00075000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00075100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00075200
.ZG2R         ANOP  ,                                                   00075300
.*----------------------------------------------------------------***   00075400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00075500
              AIF   (N'&RETCODE LE 1).ZG5A      CK NUM                  00075600
&ZMS          SETC  '"RETCODE='                 *KPOSA* MNOTE           00075700
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00075800
&ZMS          SETC  '&ZMS "RETCODE"'                                    00075900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00076000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00076100
.ZG5A         ANOP  ,                                                   00076200
.*-------------------------------------------------------------------   00076300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00076400
              AIF   (K'&RETCODE(1) LE 0).ZG5C   NO PARM                 00076500
&ZXRETCODE    SETC  'OUTPUT'    SET OUTPUT                              00076600
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE           00076700
              AIF   (N'&RETCODE GT 1).ZG5C                              00076800
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                           00076900
.ZG5C         ANOP  ,                                                   00077000
.*-------------------------------------------------------------------   00077100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00077200
              AIF   (K'&ZXRETCODE LE 0).ZG5R    NOT I/O                 00077300
              AIF   ('&XRETCODE'(1,1) NE '(').ZG5R                      00077400
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                        00077500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                         00077600
              AIF   (K'&ZCGPR GT 2).ZG5Q                                00077700
              AIF   ('&ZCGPR' EQ '0').ZG5Q                              00077800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00077900
              AIF   (T'&ZCGPR NE 'N').ZG5Q      INVALID REG NAME        00078000
.ZG5P         ANOP  ,                                                   00078100
              AIF   (T'&ZCGPR NE 'N').ZG5R      NON NUMERIC             00078200
              AIF   ('&ZCGPR' LT '2').ZG5Q                              00078300
              AIF   ('&ZCGPR' LE '12').ZG5R                             00078400
.ZG5Q         ANOP  ,                                                   00078500
&ZMS          SETC  '"RETCODE='                 *KGPRA* MNOTE           00078600
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00078700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00078800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00078900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00079000
.ZG5R         ANOP  ,                                                   00079100
.*----------------------------------------------------------------***   00079200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00079300
              AIF   (N'&RSNCODE LE 1).ZG8A      CK NUM                  00079400
&ZMS          SETC  '"RSNCODE='                 *KPOSA* MNOTE           00079500
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00079600
&ZMS          SETC  '&ZMS "RSNCODE"'                                    00079700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00079800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00079900
.ZG8A         ANOP  ,                                                   00080000
.*-------------------------------------------------------------------   00080100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00080200
              AIF   (K'&RSNCODE(1) LE 0).ZG8C   NO PARM                 00080300
&ZXRSNCODE    SETC  'OUTPUT'    SET OUTPUT                              00080400
&XRSNCODE     SETC  '&RSNCODE(1)'               SET XVARIABLE           00080500
              AIF   (N'&RSNCODE GT 1).ZG8C                              00080600
&XRSNCODE     SETC  '&RSNCODE'  SET XVARIABLE                           00080700
.ZG8C         ANOP  ,                                                   00080800
.*-------------------------------------------------------------------   00080900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00081000
              AIF   (K'&ZXRSNCODE LE 0).ZG8R    NOT I/O                 00081100
              AIF   ('&XRSNCODE'(1,1) NE '(').ZG8R                      00081200
&ZCGPR        SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                        00081300
              AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                         00081400
              AIF   (K'&ZCGPR GT 2).ZG8Q                                00081500
              AIF   ('&ZCGPR' EQ '0').ZG8Q                              00081600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00081700
              AIF   (T'&ZCGPR NE 'N').ZG8Q      INVALID REG NAME        00081800
.ZG8P         ANOP  ,                                                   00081900
              AIF   (T'&ZCGPR NE 'N').ZG8R      NON NUMERIC             00082000
              AIF   ('&ZCGPR' LT '2').ZG8Q                              00082100
              AIF   ('&ZCGPR' LE '12').ZG8R                             00082200
.ZG8Q         ANOP  ,                                                   00082300
&ZMS          SETC  '"RSNCODE='                 *KGPRA* MNOTE           00082400
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00082500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00082600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00082700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00082800
.ZG8R         ANOP  ,                                                   00082900
.******************************************************************     00083000
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00083100
.******************************************************************     00083200
              ACTR  10000                                               00083300
.*----------------------------------------------------------------***   00083400
.***AH.P02 EXTRA POSITIONALS                                            00083500
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS               00083600
              AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL                00083700
              AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL            00083800
              AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL             00083900
.ZGLISTX1     ANOP  ,                                                   00084000
&ZCVAL        SETC  ''          ERROR FIELD                             00084100
&ZAWRK        SETA  0           POSITIONAL NUMBER                       00084200
.ZGLIST2      ANOP  ,                                                   00084300
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         00084400
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                00084500
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   00084600
              AGO   .ZGLIST2                                            00084700
.*                                                                      00084800
.ZGLIST3      ANOP  ,                                                   00084900
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             00085000
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'   *PPOSA* MNOTE           00085100
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     00085200
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              00085300
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      00085400
              MNOTE 8,' &ZMS ARE ALLOWED.'                              00085500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00085600
.ZGLISTX      ANOP  ,                                                   00085700
&ZASYSLNDX    SETA  0                                                   00085800
.*-------------------------------------------------------------------   00085900
.***AG.MF04 MF=(SLE)                                                    00086000
.ZGMFX        ANOP  ,           END OF FULL SYNTAX CHECK                00086100
.*******************************************************************    00086200
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00086300
.*******************************************************************    00086400
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          00086500
.*******************************************************************    00086600
.***AE.01  START OF IWMESQRY MACRO CODE                                 00086700
.*******************************************************************    00086800
              LCLC  &M0M0001                 NAME                       00086900
&M0M0001      SETC  '&XLABEL'                SET NAME                   00087000
              AIF   (K'&XLABEL NE 0).XLAB2                              00087100
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT NAME               00087200
.*                                                                      00087300
.XLAB2        ANOP  ,                                                   00087400
&M0M0001 DS    0H                             IWMESQRY-0                00087500
.*******************************************************************    00087600
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00087700
.*******************************************************************    00087800
              PUSH  PRINT                                               00087900
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          00088000
              PRINT OFF         ++ PR01                                 00088100
              AGO   .ZPRNTXX                                            00088200
.ZPRINTX      PRINT ON                                                  00088300
.ZPRNTXX      ANOP  ,                                                   00088400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00088500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00088600
.********************************************************************   00088700
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00088800
.********************************************************************   00088900
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00089000
                      LCLA  &ZOPN1         INVOCATION INDEX             00089100
                      LCLC  &ZOPL(4095)    LABEL                        00089200
                      LCLC  &ZOPO(4095)    OPERATION                    00089300
                      LCLC  &ZOPV(4095)    VALUE                        00089400
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00089500
.*                                                                      00089600
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00089700
.******************************************************************     00089800
.***AL.L10 IWMESQRY FMT=LIST MF=S|L PARAMETERS                          00089900
.******************************************************************     00090000
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00090100
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00090200
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00090300
&XMFATTR              SETC  '0D'                                        00090400
.*                                                                      00090500
&ZOPN                 SETA  &ZOPN+1                                     00090600
&ZOPL(&ZOPN)          SETC  ' '                                         00090700
&ZOPO(&ZOPN)          SETC  'B'                                         00090800
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00090900
&ZOPD(&ZOPN)          SETC  '++ IWMESQRY ARG PARMS'                     00091000
.*                                                                      00091100
&ZOPN                 SETA  &ZOPN+1                                     00091200
&ZOPL(&ZOPN)          SETC  ' '                                         00091300
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00091400
&ZOPV(&ZOPN)          SETC  '1'                                         00091500
&ZOPD(&ZOPN)          SETC  ' '                                         00091600
.*                                                                      00091700
.ZLMFSL2              ANOP  ,                                           00091800
.*-------------------------------------------------------------------   00091900
.***AM.L01  IWMESQRY FMT=LIST PARAMETERS                                00092000
&ZOPN                 SETA &ZOPN+1                                      00092100
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00092200
&ZOPO(&ZOPN)          SETC 'DS'                                         00092300
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00092400
&ZOPD(&ZOPN)          SETC '++ IWMESQRY PARM LIST'                      00092500
.*-------------------------------------------------------------------   00092600
.***AM.L02 XVERSION XL1                                                 00092700
&ZOPN                 SETA &ZOPN+1                                      00092800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00092900
&ZOPO(&ZOPN)          SETC 'DS'                                         00093000
&ZOPV(&ZOPN)          SETC 'XL1'                                        00093100
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00093200
.*-------------------------------------------------------------------   00093300
.***AM.L09  XRSV0001 CL1                                                00093400
&ZOPN                 SETA &ZOPN+1                                      00093500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00093600
&ZOPO(&ZOPN)          SETC 'DS'                                         00093700
&ZOPV(&ZOPN)          SETC 'CL1'                                        00093800
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0001'                      00093900
.*-------------------------------------------------------------------   00094000
.***AM.L09  XPLISTLEN XL2                                               00094100
&ZOPN                 SETA &ZOPN+1                                      00094200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00094300
&ZOPO(&ZOPN)          SETC 'DS'                                         00094400
&ZOPV(&ZOPN)          SETC 'XL2'                                        00094500
&ZOPD(&ZOPN)          SETC '++ INPUT  XPLISTLEN'                        00094600
.*-------------------------------------------------------------------   00094700
.***AM.L09  XETOKEN CL8                                                 00094800
&ZOPN                 SETA &ZOPN+1                                      00094900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XETOKEN'                          00095000
&ZOPO(&ZOPN)          SETC 'DS'                                         00095100
&ZOPV(&ZOPN)          SETC 'CL8'                                        00095200
&ZOPD(&ZOPN)          SETC '++ &ZXETOKEN  XETOKEN'                      00095300
.*-------------------------------------------------------------------   00095400
.***AM.L10 END OF IWMESQRY LIST PARAMETERS                              00095500
&ZOPN                 SETA &ZOPN+1                                      00095600
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00095700
&ZOPO(&ZOPN)          SETC 'EQU'                                        00095800
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00095900
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00096000
.*                                                                      00096100
&ZOPN                 SETA &ZOPN+1                                      00096200
&ZOPL(&ZOPN)          SETC ' '                                          00096300
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00096400
&ZOPV(&ZOPN)          SETC '1'                                          00096500
&ZOPD(&ZOPN)          SETC ' '                                          00096600
.*-------------------------------------------------------------------   00096700
.***AL.L12 IWMESQRY FMT=LIST MF=S|L PARAMETERS                          00096800
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00096900
.*                                                                      00097000
&ZOPN                 SETA  &ZOPN+1                                     00097100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00097200
&ZOPO(&ZOPN)          SETC  'DC'                                        00097300
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00097400
&ZOPD(&ZOPN)          SETC  '++ IWMESQRY ARG PARMS'                     00097500
.*                                                                      00097600
.ZLMFSLX              ANOP  ,                                           00097700
.*-------------------------------------------------------------------   00097800
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00097900
&ZPLLEN               SETA 12                                           00098000
.*                                                                      00098100
.******************************************************************     00098200
.***AI.L01 IWMESQRY FMT=LIST FILL IN PARAMETER AREA                     00098300
.******************************************************************     00098400
                      ACTR  10000                                       00098500
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00098600
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00098700
&ZCVAL                SETC  'LAE'          XAX MODE                     00098800
.ZIMFXA               ANOP ,                                            00098900
.*                                                                      00099000
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00099100
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00099200
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00099300
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00099400
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00099500
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00099600
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00099700
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00099800
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00099900
&ZOPN                 SETA  &ZOPN+1                                     00100000
&ZOPL(&ZOPN)          SETC  ' '                                         00100100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00100200
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00100300
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00100400
                      AGO   .ZIMFNX                                     00100500
.*                                                                      00100600
.ZIMFN2               ANOP ,                                            00100700
&ZOPN                 SETA  &ZOPN+1                                     00100800
&ZOPL(&ZOPN)          SETC  ' '                                         00100900
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00101000
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00101100
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00101200
.ZIMFNX               ANOP ,                                            00101300
.********************************************************************   00101400
.***AI.L02 IWMESQRY FMT=LIST INITIALIZE PARAMETER AREA                  00101500
.********************************************************************   00101600
.***AI.L03 MF=(SLE)                                                     00101700
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00101800
.*                                                                      00101900
&ZOPN                 SETA  &ZOPN+1                                     00102000
&ZOPL(&ZOPN)          SETC  ' '                                         00102100
&ZOPO(&ZOPN)          SETC  'XC'                                        00102200
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00102300
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00102400
.ZIMFLX               ANOP  ,                                           00102500
.*-------------------------------------------------------------------   00102600
.***AI.L04 XPLISTLEN XL2                                                00102700
&ZOPN                 SETA  &ZOPN+1                                     00102800
&ZOPL(&ZOPN)          SETC  ' '                                         00102900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00103000
&ZOPV(&ZOPN)          SETC  '2(2,1),=AL2(&ZPLLEN)'                      00103100
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00103200
.*-------------------------------------------------------------------   00103300
&ZOPN1                SETA &ZOPN                                        00103400
.*******************************************************************    00103500
.***  PROCESS IWMESQRY OUTPUT PARAMETERS                                00103600
.*******************************************************************    00103700
                      ACTR  10000                                       00103800
.*------------------------------------------------------------------    00103900
.***AO.L02 XETOKEN CL8                                                  00104000
         AIF   ('&ZXETOKEN' EQ 'OUTPUT').ZO4A  OUTPUT                   00104100
         AIF   ('&ZXETOKEN' NE 'INOUT').ZO4C  INOUT                     00104200
.ZO4A    AIF   ('&XETOKEN'(1,1) NE '(').ZO4B  ADDR IN GPR               00104300
&ZCGPR   SETC  '&XETOKEN'(2,K'&XETOKEN-2)                               00104400
&ZOPN                 SETA  &ZOPN+1                                     00104500
&ZOPL(&ZOPN)          SETC  ' '                                         00104600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00104700
&ZOPV(&ZOPN)          SETC  '0(8,&ZCGPR),4(1)'                          00104800
&ZOPD(&ZOPN)          SETC  '++ XETOKEN CL8'                            00104900
                      AGO   .ZO4C                                       00105000
.*                                                                      00105100
.ZO4B                 ANOP  ,                                           00105200
&ZAWRK   SETA  K'&XETOKEN                                               00105300
         AIF   ('&XETOKEN'(&ZAWRK,1) NE ')').ZO4G                       00105400
&ZN      SETA  2                                                        00105500
.ZO4H    ANOP                                                           00105600
         AIF   (&ZN GE &ZAWRK).ZO4G                                     00105700
         AIF   ('&XETOKEN'(&ZN,1) NE '(').ZO4I                          00105800
&ZC      SETC  '&XETOKEN'(1,&ZN).'8'.','                                00105900
&ZC      SETC  '&ZC'.'&XETOKEN'(&ZN+1,&ZAWRK-&ZN).',4(1)'               00106000
         AGO   .ZO4J                                                    00106100
.ZO4I    ANOP                                                           00106200
&ZN      SETA  &ZN+1                                                    00106300
         AGO   .ZO4H                                                    00106400
.ZO4G    ANOP                                                           00106500
&ZC      SETC  '&XETOKEN.(8),4(1)'                                      00106600
.ZO4J    ANOP                                                           00106700
&ZOPN                 SETA  &ZOPN+1                                     00106800
&ZOPL(&ZOPN)          SETC  ' '                                         00106900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00107000
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00107100
&ZOPD(&ZOPN)          SETC  '++ XETOKEN CL8'                            00107200
.ZO4C                 ANOP  ,                                           00107300
.*******************************************************************    00107400
.***AO.X02  RETURN CODE PROCESSING                                      00107500
.*******************************************************************    00107600
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00107700
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00107800
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00107900
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00108000
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00108100
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00108200
&ZOPN                 SETA  &ZOPN+1                                     00108300
&ZOPL(&ZOPN)          SETC  ' '                                         00108400
&ZOPO(&ZOPN)          SETC  'ST'                                        00108500
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00108600
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00108700
                      AGO   .ZMRETX                                     00108800
.*                                                                      00108900
.ZMRET2               ANOP  ,                                           00109000
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00109100
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00109200
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00109300
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00109400
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00109500
&ZOPN                 SETA  &ZOPN+1                                     00109600
&ZOPL(&ZOPN)          SETC  ' '                                         00109700
&ZOPO(&ZOPN)          SETC  'LR'                                        00109800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00109900
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00110000
.ZMRETX               ANOP  ,                                           00110100
.*******************************************************************    00110200
.***AO.X03  REASON CODE PROCESSING                                      00110300
.*******************************************************************    00110400
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00110500
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00110600
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00110700
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00110800
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00110900
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00111000
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00111100
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00111200
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00111300
&ZOPN                 SETA  &ZOPN+1                                     00111400
&ZOPL(&ZOPN)          SETC  ' '                                         00111500
&ZOPO(&ZOPN)          SETC  'ST'                                        00111600
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00111700
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00111800
                      AGO   .ZMRSNX                                     00111900
.*                                                                      00112000
.ZMRSN2               ANOP  ,                                           00112100
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00112200
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00112300
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00112400
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00112500
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00112600
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00112700
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00112800
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00112900
&ZOPN                 SETA  &ZOPN+1                                     00113000
&ZOPL(&ZOPN)          SETC  ' '                                         00113100
&ZOPO(&ZOPN)          SETC  'LR'                                        00113200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00113300
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00113400
.ZMRSNX               ANOP  ,                                           00113500
.*******************************************************************    00113600
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00113700
.*******************************************************************    00113800
.ZMFLX                ANOP  ,              MF=L PROCESSING              00113900
.*******************************************************************    00114000
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00114100
.*******************************************************************    00114200
                      ACTR  10000                                       00114300
.*                                                                      00114400
                      LCLA  &ZLC           COLUMN POSITION              00114500
                      LCLA  &ZOPX          LIST TABLE INDEX             00114600
                      LCLC  &ZLL           LABEL                        00114700
                      LCLC  &ZLOP          OPERATION                    00114800
                      LCLC  &ZLV           VALUE                        00114900
                      LCLC  &ZLD           DESCRIPTION                  00115000
.*                                                                      00115100
&ZOPX                 SETA  1                                           00115200
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00115300
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00115400
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00115500
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00115600
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00115700
                      AIF   (K'&ZLD LE 0).ZL5                           00115800
&ZLC                  SETA  35             COMMENT COLUMN               00115900
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00116000
&ZLC                  SETA  33             COMMMENT COLUMN              00116100
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00116200
&ZLV                  SETC  '&ZLV'.' '                                  00116300
                      AGO   .ZL3                                        00116400
.*                                                                      00116500
.ZL4                  ANOP  ,                                           00116600
&ZLV                  SETC  '&ZLV'.' '                                  00116700
.ZL5                  ANOP  ,                                           00116800
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00116900
.*                                                                      00117000
&ZLL     &ZLOP &ZLV                                                     00117100
.*                                                                      00117200
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00117300
                      AGO   .ZL2           CONTINUE LOOPING             00117400
.*                                                                      00117500
.ZLX                  ANOP  ,                                           00117600
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00117700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00117800
     L     14,16(0,0)              GET CVT ADDRESS                      00117900
     L     14,X'8C'(14,0)          GET ECVT ADDRESS                     00118000
     L     14,X'C4'(14,0)          GET WMVT ADDRESS                     00118100
     L     15,X'124'(14,0)         GET ESQRY RTN ENTRY POINT ADDR       00118200
     BASR  14,15                   CALL ESQRY ROUTINE                   00118300
END&SYSNDX DS    0H                END LABEL                            00118400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00118500
.ZLINKX               ANOP  ,                                           00118600
.*******************************************************************    00118700
.***AP.X01  FORMAT GENERATED CODE                                       00118800
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00118900
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00119000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00119100
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00119200
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00119300
                      AIF   (K'&ZLD LE 0).ZL51                          00119400
&ZLC                  SETA  35             COMMENT COLUMN               00119500
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00119600
&ZLC                  SETA  33             COMMENT COLUMN               00119700
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00119800
&ZLV                  SETC  '&ZLV'.' '                                  00119900
                      AGO   .ZL31                                       00120000
.*                                                                      00120100
.ZL41                 ANOP  ,                                           00120200
&ZLV                  SETC  '&ZLV'.' '                                  00120300
.ZL51                 ANOP  ,                                           00120400
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00120500
.*                                                                      00120600
&ZLL     &ZLOP &ZLV                                                     00120700
.*                                                                      00120800
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00120900
                      AGO   .ZL21          CONTINUE LOOPING             00121000
.*                                                                      00121100
.ZLX1                 ANOP  ,                                           00121200
.*******************************************************************    00121300
.***AP.X02  END OF IWMESQRY MACRO                                       00121400
&ZIWMESQRY            SETC  'YES'          SET IWMESQRY USED            00121500
         POP   PRINT                                                    00121600
*                                            IWMESQRY-0                 00121700
         SPACE 1                                                        00121800
.ZLX2                 ANOP  ,                                           00121900
         MEND                                                           00122000
**********************************************************************/ 00122100
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00122200
*%IWMESQRY: MACRO KEYS(ETOKEN,RETCODE,RSNCODE,PLISTVER,MF);             00122300
*  ANS('?'||MACLABEL||' '||'IWMESQRP '||MACLIST||                       00122400
*         ' '||MACKEYS||';') COL(MACLMAR);                              00122500
*%END IWMESQRY;                                                         00122600
