*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXZXIXRM                              -93/05/10-<1> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Receive a JES XCF Message                     * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5645-001 (C) COPYRIGHT IBM CORP. 1996, 1997                     * 00001300
*                                                                     * 00001400
* STATUS= HBB6603                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*01* FUNCTION:                                                        * 00001900
*                                                                     * 00002000
*                                                                     * 00002100
*      Purpose:  The IXZXIXRM service will retrieve messages from the * 00002200
*      specified mailbox. The JDU will be notified that a message is  * 00002300
*      ready for processing, by the POST exit, and will then invoke   * 00002400
*      the IXZXIXRM macro to retrieve the message. The content of the * 00002500
*      message is dependent on the type of message being processed.   * 00002600
*      For system event records, the message is mapped by the         * 00002700
*      IXZYIXSE mapping macro.  For acknowledgements, the message is  * 00002800
*      mapped by IXZYIXAC.  General messages are mapped by an agreed  * 00002900
*      to format between the sender and receiver.                     * 00003000
*                                                                     * 00003100
*      IBM use of the interface:  IBM will use the interface as part  * 00003200
*      internal communications between JES members or with in JES     * 00003300
*      members                                                        * 00003400
*                                                                     * 00003500
*      Customer use of the interface:  Customers can use the          * 00003600
*      interface along with IXZXIXSM to send and receive messages     * 00003700
*      between exits or JES3 DSPs.                                    * 00003800
*                                                                     * 00003900
*      CDPI Implications:                                             * 00004000
*                                                                     * 00004100
*      This macro is a General Use Programming Interface.  It is      * 00004200
*      intended to be used as part of JES exits and JES3 dynamic      * 00004300
*      support programs. The macro is only used in JES environments.  * 00004400
*                                                                     * 00004500
*      EEC Implications:                                              * 00004600
*                                                                     * 00004700
*      This macro is not an EEC interface.                            * 00004800
*                                                                     * 00004900
*      Related Macros:                                                * 00005000
*                                                                     * 00005100
*      The following macros are required in order to use this macro   * 00005200
*      service:                                                       * 00005300
*                                                                     * 00005400
*                                                                     * 00005500
*      o   JES2:                                                      * 00005600
*                                                                     * 00005700
*                                                                     * 00005800
*          -   $MODULE - must be included in the module and must have * 00005900
*              been invoked before the IXZXIXRM macro service.        * 00006000
*                                                                     * 00006100
*                                                                     * 00006200
*                                                                     * 00006300
*      o   JES3:                                                      * 00006400
*                                                                     * 00006500
*                                                                     * 00006600
*          -   IATYMOD - must be included in the module and must have * 00006700
*              been invoked before the IXZXIXRM macro service.        * 00006800
*                                                                     * 00006900
*                                                                     * 00007000
*                                                                     * 00007100
*                                                                     * 00007200
*                                                                     * 00007300
*      The following macros are used with this macro to manage the    * 00007400
*      transport of data and monitoring of system events:             * 00007500
*                                                                     * 00007600
*                                                                     * 00007700
*      o   IXZXIXMB - Build a mailbox                                 * 00007800
*                                                                     * 00007900
*      o   IXZXIXMC - Clear a mailbox                                 * 00008000
*                                                                     * 00008100
*      o   IXZXIXMD - Delete XCF Mailbox                              * 00008200
*                                                                     * 00008300
*      o   IXZXIXRM - Receive a message from a mailbox                * 00008400
*                                                                     * 00008500
*      o   IXZXIXAC - Acknowledge receive of a message                * 00008600
*                                                                     * 00008700
*      o   IXZXIXIF - Obtain member information                       * 00008800
*                                                                     * 00008900
*                                                                     * 00009000
*                                                                     * 00009100
*      Requirements                                                   * 00009200
*                                                                     * 00009300
*                                                                     * 00009400
*      o   Authorization: Supervisor state - key 0 or 1               * 00009500
*                                                                     * 00009600
*      o   Dispatchable unit mode: Task                               * 00009700
*                                                                     * 00009800
*      o   Cross memory mode: PASN = HASN = SASN                      * 00009900
*                                                                     * 00010000
*      o   AMODE: 31                                                  * 00010100
*                                                                     * 00010200
*      o   ASC mode: Primary                                          * 00010300
*                                                                     * 00010400
*      o   Serialization: Enabled for interrupts                      * 00010500
*                                                                     * 00010600
*      o   Locks:  This service assumes no locks are held by the      * 00010700
*          user.                                                      * 00010800
*                                                                     * 00010900
*      o   Control Parameters:  None                                  * 00011000
*                                                                     * 00011100
*      o   JES Environments:                                          * 00011200
*                                                                     * 00011300
*                                                                     * 00011400
*          -   JES2 Main Task                                         * 00011500
*                                                                     * 00011600
*          -   JES3 Main Task                                         * 00011700
*                                                                     * 00011800
*          -   JES2 Subtask                                           * 00011900
*                                                                     * 00012000
*          -   JES3 Subtask                                           * 00012100
*                                                                     * 00012200
*          -   JES XCF subtask                                        * 00012300
*                                                                     * 00012400
*                                                                     * 00012500
*                                                                     * 00012600
*                                                                     * 00012700
*                                                                     * 00012800
*      Register Information                                           * 00012900
*                                                                     * 00013000
*                                                                     * 00013100
*      o   Input registers                                            * 00013200
*                                                                     * 00013300
*                                                                     * 00013400
*          -   R0-R15 - Undefined                                     * 00013500
*                                                                     * 00013600
*                                                                     * 00013700
*                                                                     * 00013800
*      o   Output registers                                           * 00013900
*                                                                     * 00014000
*                                                                     * 00014100
*          -   R0 - Reason code                                       * 00014200
*                                                                     * 00014300
*          -   R1 - Unpredictable                                     * 00014400
*                                                                     * 00014500
*          -   R2-R13 - Unchanged                                     * 00014600
*                                                                     * 00014700
*          -   R14 - Unpredictable                                    * 00014800
*                                                                     * 00014900
*          -   R15 - Return code                                      * 00015000
*                                                                     * 00015100
*                                                                     * 00015200
*                                                                     * 00015300
*                                                                     * 00015400
*                                                                     * 00015500
*      Programming Notes/Requirements                                 * 00015600
*                                                                     * 00015700
*                                                                     * 00015800
*      1.  The programmer must supply a mailbox name. A mailbox name  * 00015900
*          is a 1 to 16 byte identifier that is used to identify      * 00016000
*          where data is to be sent. This identifier is used to       * 00016100
*          inform JES XCF of where messages can be retrieved.         * 00016200
*                                                                     * 00016300
*      2.  For multi-segmented messages, each segment must be         * 00016400
*          retrieved separately and each segment must be              * 00016500
*          acknowledged.                                              * 00016600
*                                                                     * 00016700
*      3.  An acknowledgement message will be returned to the sender  * 00016800
*          (messages sent with the REQTYPE(SYNC|ASYNCACK)) once the   * 00016900
*          last line of the message is acknowledged.                  * 00017000
*                                                                     * 00017100
*      4.  If a message is aborted by the sender (a final segment is  * 00017200
*          sent with a SEGTYPE of ABORT specified), the receiver will * 00017300
*          receive an indication of the aborted status in the         * 00017400
*          envelope (ABORT_SEGMENT in the IXZYIXEN is on) for the     * 00017500
*          first segment and last segment of the message.             * 00017600
*                                                                     * 00017700
*      5.  Messages that are received, but not acknowledged will      * 00017800
*          cause buffers to be obtained in the JES address space, but * 00017900
*          not freed.  You MUST acknowledge each message segment      * 00018000
*          received.                                                  * 00018100
*                                                                     * 00018200
*                                                                     * 00018300
*                                                                     * 00018400
*      Restrictions                                                   * 00018500
*                                                                     * 00018600
*                                                                     * 00018700
*      o   Can not be issued until JES initialization has attached    * 00018800
*          and initializes the JES Common XCF Task.                   * 00018900
*                                                                     * 00019000
*      o   This macro must be issued from the same task that created  * 00019100
*          the mailbox.                                               * 00019200
*                                                                     * 00019300
*                                                                     * 00019400
*                                                                     * 00019500
*      Performance Implications:                                      * 00019600
*                                                                     * 00019700
*      This macro has minimal performance impact, the service routine * 00019800
*      causes a subtasked function to be performed.                   * 00019900
*                                                                     * 00020000
*01* EXTERNAL CLASSIFICATION:   GUPI                                  * 00020100
*                                                                     * 00020200
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00020300
*                                                                     * 00020400
*01* SYNTAX:                                                          * 00020500
*                                                                     * 00020600
*[xlabel]  IXZXIXRM    MBOXNAME=xmboxname                             * 00020700
*                     [,MSGFETCH=ALL|MESSAGES|SYSEVENT|ACKS]        * 00020800
*                      ,DATA=xdata                                    * 00020900
*                      ,DATALEN=xdatalen                              * 00021000
*                      ,MSGTOKEN=xmsgtoken                            * 00021100
*                      ,GROUPTOKEN=xgrouptoken                        * 00021200
*                     [,RTNCODE=xrtncode]                             * 00021300
*                     [,RSNCODE=xrsncode]                             * 00021400
*                     [,PLISTVER=xplistver|IMPLIED_VERSION]         * 00021500
*                    [,MF=S]                                         * 00021600
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00021700
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00021800
*                                                                     * 00021900
*                                                                     * 00022000
*      Where:                                                         * 00022100
*                                                                     * 00022200
*                                                                     * 00022300
*      [xlabel]                                                       * 00022400
*          is an optional symbol, starting in column 1, that is the   * 00022500
*          name on the IXZXIXRM macro invocation.  The name must      * 00022600
*          conform to the rules for an ordinary assembler language    * 00022700
*          symbol.                                                    * 00022800
*          DEFAULT: No name.                                          * 00022900
*                                                                     * 00023000
*                                                                     * 00023100
*                                                                     * 00023200
*                                                                     * 00023300
*      The following is a set of mutually exclusive keys.  This set   * 00023400
*      is required; only one key must be specified.                   * 00023500
*                                                                     * 00023600
*                                                                     * 00023700
*      MBOXNAME=xmboxname                                             * 00023800
*          belongs to a set of mutually exclusive keys. It is the     * 00023900
*          name (RS-type), or address in register (2)-(12), of a 16   * 00024000
*          character input which contains the name of the mailbox     * 00024100
*          from which the message is to be retrieved.                 * 00024200
*                                                                     * 00024300
*                                                                     * 00024400
*                                                                     * 00024500
*      End of a set of mutually exclusive required keys.              * 00024600
*                                                                     * 00024700
*                                                                     * 00024800
*                                                                     * 00024900
*      [MSGFETCH=ALL|MESSAGES|SYSEVENT|ACKS]                        * 00025000
*          is an optional keyword input that specifies the type of    * 00025100
*          messages to be retrieved from the mailbox.  The messages   * 00025200
*          are returned in the time order for the type of message     * 00025300
*          requested.                                                 * 00025400
*          DEFAULT: ALL                                               * 00025500
*                                                                     * 00025600
*                                                                     * 00025700
*          MSGFETCH=ALL                                               * 00025800
*              Retrieve all messages. In the order                    * 00025900
*                                                                     * 00026000
*                                                                     * 00026100
*              o   System Events                                      * 00026200
*                                                                     * 00026300
*              o   Acknowledgements                                   * 00026400
*                                                                     * 00026500
*              o   Messages                                           * 00026600
*                                                                     * 00026700
*                                                                     * 00026800
*                                                                     * 00026900
*          MSGFETCH=MESSAGES                                          * 00027000
*              Messages from this or other processes in the &Sysplex. * 00027100
*                                                                     * 00027200
*          MSGFETCH=SYSEVENT                                          * 00027300
*              Control messages, which indicate state changes in the  * 00027400
*              &Sysplex.                                              * 00027500
*                                                                     * 00027600
*          MSGFETCH=ACKS                                              * 00027700
*              Acknowledgments from previous IXZXIXSM macro           * 00027800
*              invocations.                                           * 00027900
*                                                                     * 00028000
*                                                                     * 00028100
*                                                                     * 00028200
*                                                                     * 00028300
*                                                                     * 00028400
*                                                                     * 00028500
*      DATA=xdata                                                     * 00028600
*          is the name (RS-type), or address in register (2)-(12), of * 00028700
*          a required 4 byte output that will contain the address of  * 00028800
*          the message that is being received.  The JES XCF receive   * 00028900
*          message will ensure that the message buffer is in the      * 00029000
*          caller's address space. The data will be freed by the JES  * 00029100
*          XCF acknowledgement service.                               * 00029200
*                                                                     * 00029300
*                                                                     * 00029400
*                                                                     * 00029500
*                                                                     * 00029600
*      DATALEN=xdatalen                                               * 00029700
*          is the name (RS-type), or address in register (2)-(12), of * 00029800
*          a required fullword output that contains the length of the * 00029900
*          message received.                                          * 00030000
*                                                                     * 00030100
*                                                                     * 00030200
*                                                                     * 00030300
*                                                                     * 00030400
*      MSGTOKEN=xmsgtoken                                             * 00030500
*          is the name (RS-type), or address in register (2)-(12), of * 00030600
*          a required 64 bit output that contains a token that        * 00030700
*          represents the message. The token is returned to the XCF   * 00030800
*          Subtask via the IXZXIXAC macro service once the message    * 00030900
*          has been processed. The IXZXIXAC macro will return any     * 00031000
*          resources held by the message and will perform the         * 00031100
*          required acknowledgment processing.                        * 00031200
*                                                                     * 00031300
*                                                                     * 00031400
*                                                                     * 00031500
*                                                                     * 00031600
*      GROUPTOKEN=xgrouptoken                                         * 00031700
*          is the name (RS-type), or address in register (2)-(12), of * 00031800
*          a required fullword input that contains the JES XCF group  * 00031900
*          token.                                                     * 00032000
*                                                                     * 00032100
*                                                                     * 00032200
*                                                                     * 00032300
*                                                                     * 00032400
*      [RTNCODE=xrtncode]                                             * 00032500
*          is the name (RS-type) of an optional fullword output       * 00032600
*          variable, or register (2)-(12), into which the return code * 00032700
*          is to be copied from GPR 15.                               * 00032800
*                                                                     * 00032900
*                                                                     * 00033000
*                                                                     * 00033100
*                                                                     * 00033200
*      [RSNCODE=xrsncode]                                             * 00033300
*          is the name (RS-type) of an optional fullword output       * 00033400
*          variable, or register (2)-(12), into which the reason code * 00033500
*          is to be copied from GPR 0.                                * 00033600
*                                                                     * 00033700
*                                                                     * 00033800
*                                                                     * 00033900
*                                                                     * 00034000
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00034100
*          is an optional byte input decimal value in the "1-1" range * 00034200
*          that specifies the macro version.  PLISTVER is the only    * 00034300
*          key allowed on the list form of MF and determines which    * 00034400
*          parameter list is generated.  Note that MAX may be         * 00034500
*          specified instead of a number, and the parameter list will * 00034600
*          be of the largest size currently supported. This size may  * 00034700
*          grow from release to release (thus possibly affecting the  * 00034800
*          amount of storage needed by your program).  If your        * 00034900
*          program can tolerate this, IBM recommends that you always  * 00035000
*          specify MAX when creating the list form parameter list as  * 00035100
*          that will ensure that the list form parameter list is      * 00035200
*          always long enough to hold whatever parameters might be    * 00035300
*          specified on the execute form.                             * 00035400
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00035500
*          default is the lowest version which allows all of the      * 00035600
*          parameters specified on the invocation to be processed.    * 00035700
*                                                                     * 00035800
*                                                                     * 00035900
*                                                                     * 00036000
*                                                                     * 00036100
*      [MF=S|L|E]                                                   * 00036200
*          is an optional keyword input which specifies the macro     * 00036300
*          form.                                                      * 00036400
*          DEFAULT: S                                                 * 00036500
*                                                                     * 00036600
*                                                                     * 00036700
*          [MF=S]                                                     * 00036800
*              specifies the standard form of the macro.  The "S"     * 00036900
*              form generates code to put the parameters into an      * 00037000
*              in-line parameter list and invoke the desired service. * 00037100
*              Full checking for required macro keys is done along    * 00037200
*              with supplying defaults for omitted optional           * 00037300
*              parameters.                                            * 00037400
*                                                                     * 00037500
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00037600
*              specifies the list form of the macro.  The "L" form    * 00037700
*              defines an area to be used for the parameter list.     * 00037800
*              Only the PLISTVER key may be specified on the          * 00037900
*              invocation.  All other macro parameters are flagged as * 00038000
*              errors.  If PLISTVER is not specified, the original    * 00038100
*              parameter list definition is used.                     * 00038200
*                                                                     * 00038300
*            ,xmfctrl                                                 * 00038400
*              is a required input.  It is the name of a storage area * 00038500
*              for the parameter list.                                * 00038600
*                                                                     * 00038700
*            ,xmfattr|0D                                            * 00038800
*              is an optional 60 character input string that varies   * 00038900
*              from 1 to 60 characters. It can contain any value that * 00039000
*              is valid on an assembler DS pseudo-op. You can use     * 00039100
*              this parameter to force boundary alignment of the      * 00039200
*              parameter list.                                        * 00039300
*              DEFAULT: 0D which forces the parameter list to a       * 00039400
*              doubleword boundary.                                   * 00039500
*                                                                     * 00039600
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00039700
*              specifies the execute form of the macro.  The "E" form * 00039800
*              generates code to put the parameters into the          * 00039900
*              parameter list specified by xmfctrl and provides full  * 00040000
*              syntax checking with default setting.                  * 00040100
*                                                                     * 00040200
*            ,xmfctrl                                                 * 00040300
*              is a required input.  It is the name (RS-type), or     * 00040400
*              address in register (1)-(12), of a storage area for    * 00040500
*              the parameter list.                                    * 00040600
*                                                                     * 00040700
*            ,COMPLETE                                              * 00040800
*              is an optional keyword input which specifies the       * 00040900
*              degree of macro parameter syntax checking.             * 00041000
*              DEFAULT: COMPLETE                                      * 00041100
*                                                                     * 00041200
*                                                                     * 00041300
*              COMPLETE                                               * 00041400
*                  Checking for required macro keys is done and       * 00041500
*                  defaults are supplied for omitted optional         * 00041600
*                  parameters.                                        * 00041700
*                                                                     * 00041800
*                                                                     * 00041900
*                                                                     * 00042000
*                                                                     * 00042100
*                                                                     * 00042200
*                                                                     * 00042300
*                                                                     * 00042400
*01* RETURN CODES:                                                    * 00042500
*                                                                     * 00042600
*                                                                     * 00042700
*            0    Processing was successful, an envelope containing a * 00042800
*                 message was returned.                               * 00042900
*                                                                     * 00043000
*            4    Invalid user input was received by the service.     * 00043100
*                                                                     * 00043200
*            8    An system error has occurred while trying to        * 00043300
*                 retrieve a message.                                 * 00043400
*                                                                     * 00043500
*            C    An system abend has occurred while trying to        * 00043600
*                 retrieve a message.                                 * 00043700
*                                                                     * 00043800
*                                                                     * 00043900
*                                                                     * 00044000
*01* REASON CODES:                                                    * 00044100
*                                                                     * 00044200
*       REASON    RETURN                                              * 00044300
*       CODE      CODE      DESCRIPTION                               * 00044400
*                                          * 00044500
*                                                                     * 00044600
*                                                                     * 00044700
*              0  0         Processing  was successful.   An envelope * 00044800
*                           containing a message was returned.        * 00044900
*                                                                     * 00045000
*              4  4         Processing  failed  because the parameter * 00045100
*                           list   passed  to  the  IXZXIXRM  service * 00045200
*                           routine had an invalid eyecatcher.        * 00045300
*                                                                     * 00045400
*              8  4         Processing  failed because, the parameter * 00045500
*                           list   passed  to  the  IXZXIXRM  service * 00045600
*                           routine had an invalid version indicator. * 00045700
*                           The caller may need to be recompiled.     * 00045800
*                                                                     * 00045900
*              C  4         Processing failed because, the grouptoken * 00046000
*                           passed  to  the  IXZXIXRM service routine * 00046100
*                           was not valid.                            * 00046200
*                                                                     * 00046300
*             10  4         Processing  failed because, the parameter * 00046400
*                           list   passed  to  the  IXZXIXRM  service * 00046500
*                           routine  had  an  invalid  mailbox  name. * 00046600
*                           Only A-Z, 0-9 and $ @ # are valid.        * 00046700
*                                                                     * 00046800
*             14  4         Processing  failed  because, there are no * 00046900
*                           messages  in  the  mailbox  passed to the * 00047000
*                           IXZIXRM service routine.                  * 00047100
*                                                                     * 00047200
*             18  4         Processing failed because,the ASCB and or * 00047300
*                           TCB  of  the caller invoking the IXZXIXRM * 00047400
*                           service routine do not match those of the * 00047500
*                           specified  mailbox  (those of the callers * 00047600
*                           of the IXZIXBM service routine).          * 00047700
*                                                                     * 00047800
*             1C  4         Processing   failed  because,the  mailbox * 00047900
*                           name   passed   to  the  IXZIXRM  service * 00048000
*                           routine does not exist.                   * 00048100
*                                                                     * 00048200
*             20  4         Processing   failed  because,the  IXZIXRM * 00048300
*                           service  routine  was  called on a member * 00048400
*                           that is detaching.                        * 00048500
*                                                                     * 00048600
*              0  C         Processing   failed  because  he  IXZIXRM * 00048700
*                           service routine abended.                  * 00048800
*                                                                     * 00048900
*                                                                     * 00049000
*                                                                     * 00049100
*01* MODULE TYPE:  ASSEM MACRO                                        * 00049200
*                                                                     * 00049300
*02*   PROCESSOR:  ASSEM                                              * 00049400
*                                                                     * 00049500
*01* COMPONENT:  SCJSC                                                * 00049600
*                                                                     * 00049700
*01* MACRO USAGE NOTES:                                               * 00049800
*                                                                     * 00049900
*                                                                     * 00050000
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00050100
*        global macro variable.  Any value other than 'NO' will       * 00050200
*        result in the macro expansion being printed.  The default is * 00050300
*        'YES'.  The following examples illustrate how the ZPRINT     * 00050400
*        variable should be set.                                      * 00050500
*                                                                     * 00050600
*                    GBLC &ZPRINT                                     * 00050700
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00050800
*                                                                     * 00050900
*                                                                     * 00051000
*    2.  All   keys   currently   contained  in  the  IXZXIXRM  macro * 00051100
*        correspond  to  version  1.   If you specify PLISTVER, use a * 00051200
*        value of 1 or MAX.                                           * 00051300
*                                                                     * 00051400
*                                                                     * 00051500
*                                                                     * 00051600
*                                                                     * 00051700
*01* CHANGE ACTIVITY:                                                 * 00051800
*                                                                     * 00051900
*   Flag LineItem  FMID    Date   ID    Comment                       * 00052000
*                                                                     * 00052100
*    $N0=JESXCF   HBB5510 921201 PD0AL:                               * 00052200
****** END OF SPECIFICATIONS *****************************************/ 00052300
*/********************************************************************* 00052400
         MACRO                                                          00052500
&XLABEL  IXZXIXRM &MBOXNAME=,&MSGFETCH=,&DATA=,&DATALEN=,&MSGTOKEN=,   *00052600
               &GROUPTOKEN=,&RTNCODE=,&RSNCODE=,&PLISTVER=,&MF=         00052700
.*                                                                      00052800
*                MACDATE -93/05/10-<1>                                  00052900
.*                                                                      00053000
.*******************************************************************    00053100
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00053200
.*******************************************************************    00053300
                GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                 00053400
                GBLC  &ZTEST      YES=TEST NO=NO TEST                   00053500
                GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX           00053600
.*                                                                      00053700
                GBLC  &ZIXZXIXRM  YES=MACRO USED AT LEAST ONCE          00053800
.*******************************************************************    00053900
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00054000
.*******************************************************************    00054100
                LCLC  &ZMS        ERROR MESSAGE WORK AREA               00054200
                LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS          00054300
                LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED            00054400
                LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR           00054500
                LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE           00054600
                LCLA  &ZAWRK      USED AS A WORK AREA                   00054700
                LCLA  &ZASIZ      USED FOR SIZE OF VALUE                00054800
                LCLA  &ZN         NUMERIC WORK VARIABLE                 00054900
                LCLC  &ZC         CHARACTER WORK VARIABLE               00055000
                LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE           00055100
                LCLA  &ZTLA       VALUE TOO LONG VARIABLE               00055200
                LCLA  &ZMACRET    MACRO RETURN CODE                     00055300
&ZMACRET        SETA  0           ASSUME NO ERRORS                      00055400
.*                                                                      00055500
                LCLC  &ZCSYSLIST(255)           NONXKEY, POS ARRAY      00055600
                LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()            00055700
                LCLA  &ZPLLEN     PARAMETER LIST LENGTH                 00055800
                LCLC  &ZENDBASEPL               End of base PL          00055900
                LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                 00056000
.*******************************************************************    00056100
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00056200
.*******************************************************************    00056300
                LCLA  &ZI         INDEX FOR ARRAY                       00056400
                LCLA  &ZJ         INDEX FOR PARMS                       00056500
                LCLA  &ZK         INDEX FOR PARSE                       00056600
                LCLA  &ZLO        LOW RANGE VALUE                       00056700
                LCLA  &ZHI        HIGH RANGE VALUE                      00056800
                LCLC  &ZW         WORK AREA FOR PARM                    00056900
.********************************************************************   00057000
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00057100
.********************************************************************   00057200
                GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL               00057300
                GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE        00057400
.*                                                                      00057500
                AIF   (K'&SYSASCE GT 0).ZSYS4   SYS STATE DEFINED       00057600
                AIF   (K'&SYSSPLV GT 0).ZSYS2   SP LEVEL DEFINED        00057700
                SPLEVEL  TEST                                           00057800
.ZSYS2          ANOP  ,                                                 00057900
                AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1             00058000
                AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1             00058100
                SYSSTATE TEST                                           00058200
                AGO   .ZSYS4                                            00058300
.ZSYS3          ANOP  ,                                                 00058400
&SYSASCE        SETC  'P'         ASSUME SYSSTATE PRIMARY               00058500
.ZSYS4          ANOP  ,                                                 00058600
.*******************************************************************    00058700
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00058800
.*******************************************************************    00058900
                LCLC  &XMBOX      ++ NAME                               00059000
                LCLC  &XMBOXNAME  ++ NAME                               00059100
                LCLC  &XMSGFETCH  ++ VALUE                              00059200
                LCLC  &XDATA      ++ NAME                               00059300
                LCLC  &XDATALEN   ++ NAME                               00059400
                LCLC  &XMSGTOKEN  ++ NAME                               00059500
                LCLC  &XGROUPTOKEN              ++ NAME                 00059600
                LCLC  &XRTNCODE   ++ NAME                               00059700
                LCLC  &XRSNCODE   ++ NAME                               00059800
                LCLA  &XPLISTVER  ++ VALUE                              00059900
                LCLC  &XMF        ++ VALUE                              00060000
                LCLC  &XMFCTRL    ++ NAME                               00060100
                LCLC  &XMFATTR    ++ VALUE                              00060200
                LCLC  &XMFSCK     ++ VALUE                              00060300
.*******************************************************************    00060400
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00060500
.*******************************************************************    00060600
                LCLC  &ZXMBOX     ++ INPUT NAME                         00060700
                LCLC  &ZXMBOXNAME               ++ INPUT NAME           00060800
                LCLC  &ZXMSGFETCH               ++ INPUT VALUE          00060900
                LCLC  &ZXDATA     ++ OUTPUT NAME                        00061000
                LCLC  &ZXDATALEN  ++ OUTPUT NAME                        00061100
                LCLC  &ZXMSGTOKEN               ++ OUTPUT NAME          00061200
                LCLC  &ZXGROUPTOKEN             ++ INPUT NAME           00061300
                LCLC  &ZXRTNCODE  ++ OUTPUT NAME                        00061400
                LCLC  &ZXRSNCODE  ++ OUTPUT NAME                        00061500
                LCLC  &ZXPLISTVER               ++ INPUT VALUE          00061600
                LCLC  &ZXMF       ++ INPUT VALUE                        00061700
                LCLC  &ZXMFCTRL   ++ INPUT NAME                         00061800
                LCLC  &ZXMFATTR   ++ INPUT VALUE                        00061900
                LCLC  &ZXMFSCK    ++ INPUT VALUE                        00062000
.********************************************************************   00062100
.***AC.PLV01  PROCESS PLISTVER                                      *   00062200
.********************************************************************   00062300
&XPLISTVER      SETA  1                                                 00062400
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00062500
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00062600
&XPLISTVER      SETA  1                                                 00062700
.ZPLV0          ANOP  ,                                                 00062800
.*                                                                      00062900
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00063000
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00063100
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00063200
.*-------------------------------------------------------------------   00063300
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00063400
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00063500
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00063600
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00063700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00063800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00063900
                AGO   .ZPVCK2                                           00064000
.ZPVCK3         ANOP  ,                                                 00064100
.*-------------------------------------------------------------------   00064200
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00064300
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00064400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00064500
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00064600
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00064700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00064800
                AGO   .ZPVCKE                                           00064900
.ZPVCK2         ANOP  ,                                                 00065000
.*-------------------------------------------------------------------   00065100
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00065200
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00065300
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00065400
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00065500
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00065600
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00065700
                MNOTE 8,' &ZMS IS REQUIRED.'                            00065800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00065900
                AGO   .ZPVCK5                                           00066000
.ZPVCK4         ANOP  ,                                                 00066100
&XPLISTVER      SETA  &PLISTVER(1)                                      00066200
.ZPVCK5         ANOP  ,                                                 00066300
.*-------------------------------------------------------------------   00066400
&ZCVAL          SETC  '&PLISTVER(1)'                                    00066500
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00066600
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00066700
                AIF   (&XPLISTVER LT 1).ZPVCK6  TOO LOW                 00066800
                AIF   (&XPLISTVER LE 1).ZPVCKE  NOT HIGH                00066900
.ZPVCK6         ANOP   ,                                                00067000
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00067100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00067200
&ZMS            SETC  '&ZMS THE RANGE IS "1-1"'                         00067300
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00067400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00067500
.ZPVCKE         ANOP   ,                                                00067600
.********************************************************************   00067700
.***AG.MF01 PROCESS MF MACRO FORMS                                      00067800
.********************************************************************   00067900
                ACTR  10000                                             00068000
.*------------------------------------------------------------------    00068100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00068200
&XMF            SETC  ''          INITIALIZE XVARIABLE                  00068300
.*-------------------------------------------------------------------   00068400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00068500
.ZG34           ANOP  ,                                                 00068600
&ZTLC           SETC 'S'                                                00068700
                AIF   ('&MF(1)' NE '&ZTLC').ZG35                        00068800
&XMF            SETC  'S'         SET KEYWORD                           00068900
                AIF   (N'&MF LE 1).ZG34A        CK NUM                  00069000
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         00069100
&ZMS            SETC  '&ZMS.&MF"'                                       00069200
&ZMS            SETC  '&ZMS "MF"'                                       00069300
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00069400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00069500
.ZG34A          ANOP  ,                                                 00069600
.*-------------------------------------------------------------------   00069700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00069800
.ZG35           ANOP  ,                                                 00069900
&ZTLC           SETC 'L'                                                00070000
                AIF   ('&MF(1)' NE '&ZTLC').ZG42                        00070100
&XMF            SETC  'L'         SET KEYWORD                           00070200
                AIF   (N'&MF LE 3).ZG35A        CK NUM                  00070300
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         00070400
&ZMS            SETC  '&ZMS.&MF"'                                       00070500
&ZMS            SETC  '&ZMS "MF"'                                       00070600
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              00070700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00070800
.ZG35A          ANOP  ,                                                 00070900
.*-------------------------------------------------------------------   00071000
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00071100
                AIF   (N'&SYSLIST NE 0).ZG35B   POSITIONALS?            00071200
                AIF   ('&MBOXNAME' NE '').ZG35B  KEYS?                  00071300
                AIF   ('&MSGFETCH' NE '').ZG35B  KEYS?                  00071400
                AIF   ('&DATA' NE '').ZG35B     KEYS?                   00071500
                AIF   ('&DATALEN' NE '').ZG35B  KEYS?                   00071600
                AIF   ('&MSGTOKEN' NE '').ZG35B  KEYS?                  00071700
                AIF   ('&GROUPTOKEN' NE '').ZG35B  KEYS?                00071800
                AIF   ('&RTNCODE' NE '').ZG35B  KEYS?                   00071900
                AIF   ('&RSNCODE' NE '').ZG35B  KEYS?                   00072000
                AGO    .ZG35C     INVOCATION OKAY                       00072100
.ZG35B          ANOP  ,                                                 00072200
&ZMS            SETC  'THE "L" FORM OF "MF"'    *MFLA* MNOTE            00072300
&ZMS            SETC  '&ZMS CAN ONLY HAVE'                              00072400
&ZMS            SETC  '&ZMS THE "PLISTVER" KEY'                         00072500
                MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'            00072600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00072700
.ZG35C          ANOP  ,                                                 00072800
.*-------------------------------------------------------------------   00072900
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00073000
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         00073100
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         00073200
                AIF   (N'&MF(2) GT 1).ZG37B     MULTI PARMS             00073300
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         00073400
.ZG37B          AIF   (K'&MF(2) GT 0).ZG37C                             00073500
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00073600
&ZMS            SETC  'WHEN "L" IS SPECIFIED'   *KRQDA*                 00073700
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               00073800
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      00073900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00074000
.ZG37C          ANOP  ,                                                 00074100
.*-------------------------------------------------------------------   00074200
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00074300
                AIF   (K'&ZXMFCTRL LE 0).ZG37P  NOT I/O                 00074400
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG37P                    00074500
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00074600
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         00074700
&ZMS            SETC  '&ZMS.&MF"'                                       00074800
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00074900
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                 00075000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00075100
.ZG37P          ANOP  ,                                                 00075200
.*-------------------------------------------------------------------   00075300
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00075400
&ZXMFATTR       SETC  'INPUT'     SET IN/OUTPUT                         00075500
&XMFATTR        SETC  '0D'                                              00075600
                AIF   (K'&MF(3) LE 0).ZG40B     PARM                    00075700
&XMFATTR        SETC  '&MF(3,1)'  SET XVARIABLE                         00075800
                AIF   (N'&MF(3) GT 1).ZG40B     MULTI PARMS             00075900
&XMFATTR        SETC  '&MF(3)'    SET XVARIABLE                         00076000
.ZG40B          ANOP  ,                                                 00076100
.*-------------------------------------------------------------------   00076200
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00076300
                AIF   (K'&ZXMFATTR LE 0).ZG40P  NOT I/O                 00076400
                AIF   ('&XMFATTR'(1,1) NE '(').ZG40P                    00076500
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       00076600
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         00076700
&ZMS            SETC  '&ZMS.&MF"'                                       00076800
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00076900
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                 00077000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00077100
.ZG40P          ANOP  ,                                                 00077200
.*-------------------------------------------------------------------   00077300
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00077400
                AIF   (K'&ZXMFATTR LE 0).ZG40S  NOT I/O                 00077500
                AIF   (K'&XMFATTR LE 60).ZG40S  LNG OK                  00077600
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       00077700
&ZMS            SETC  '"MF='      *KLNGA* MNOTE                         00077800
&ZMS            SETC  '&ZMS.&MF"'                                       00077900
&ZMS            SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'             00078000
                MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                00078100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00078200
.ZG40S          ANOP  ,                                                 00078300
.*-------------------------------------------------------------------   00078400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00078500
.ZG42           ANOP  ,                                                 00078600
&ZTLC           SETC 'E'                                                00078700
                AIF   ('&MF(1)' NE '&ZTLC').ZG50                        00078800
&XMF            SETC  'E'         SET KEYWORD                           00078900
                AIF   (N'&MF LE 3).ZG42A        CK NUM                  00079000
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         00079100
&ZMS            SETC  '&ZMS.&MF"'                                       00079200
&ZMS            SETC  '&ZMS "MF"'                                       00079300
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              00079400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00079500
.ZG42A          ANOP  ,                                                 00079600
.*-------------------------------------------------------------------   00079700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00079800
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         00079900
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         00080000
                AIF   (N'&MF(2) GT 1).ZG44B     MULTI PARMS             00080100
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         00080200
.ZG44B          AIF   (K'&MF(2) GT 0).ZG44C                             00080300
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00080400
&ZMS            SETC  'WHEN "E" IS SPECIFIED'   *KRQDA*                 00080500
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               00080600
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      00080700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00080800
.ZG44C          ANOP  ,                                                 00080900
.*-------------------------------------------------------------------   00081000
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00081100
                AIF   (K'&ZXMFCTRL LE 0).ZG44R  NOT I/O                 00081200
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG44R                    00081300
&ZCGPR          SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                        00081400
                AIF   ('&ZCGPR'(1,1) NE '0').ZG44P                      00081500
                AIF   (K'&ZCGPR GT 2).ZG44Q                             00081600
                AIF   ('&ZCGPR' EQ '0').ZG44Q                           00081700
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00081800
                AIF   (T'&ZCGPR NE 'N').ZG44Q   INVALID REG NAME        00081900
.ZG44P          ANOP  ,                                                 00082000
                AIF   (T'&ZCGPR NE 'N').ZG44R   NON NUMERIC             00082100
                AIF   ('&ZCGPR' LT '1').ZG44Q                           00082200
                AIF   ('&ZCGPR' LE '12').ZG44R                          00082300
.ZG44Q          ANOP  ,                                                 00082400
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         00082500
&ZMS            SETC  '&ZMS.&MF"'                                       00082600
&ZMS            SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'         00082700
                MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                  00082800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00082900
.ZG44R          ANOP  ,                                                 00083000
.*-------------------------------------------------------------------   00083100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00083200
&XMFSCK         SETC  ''          INITIALIZE XVARIABLE                  00083300
.ZG48A   AIF   ('&MF(3)' NE 'COMPLETE').ZG49A                           00083400
&XMFSCK         SETC  'COMPLETE'  SET KEYWORD                           00083500
.*-------------------------------------------------------------------   00083600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00083700
.ZG49A          AIF   (K'&XMFSCK GT 0).ZG49C    KEYWORD                 00083800
                AIF   (K'&MF(3) LE 0).ZG49B                             00083900
&ZMS            SETC  '"MF='      *KUKWA* MNOTE                         00084000
&ZMS            SETC  '&ZMS.&MF"'                                       00084100
&ZMS            SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '         00084200
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00084300
&ZMS            SETC  '&ZMS "COMPLETE".'        VALID KEYWORD           00084400
                MNOTE 8,' &ZMS '                                        00084500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00084600
.ZG49B          ANOP  ,                                                 00084700
&XMFSCK         SETC  'COMPLETE'  SET DEFAULT KEYWORD                   00084800
.ZG49C          ANOP  ,                                                 00084900
&ZXMFSCK        SETC  'INPUT'     SET IN/OUTPUT                         00085000
.*------------------------------------------------------------------    00085100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00085200
.ZG50           ANOP  ,                                                 00085300
&ZXMF           SETC  'INPUT'     SET IN/OUTPUT                         00085400
                AIF   (K'&XMF GT 0).ZG50E       VALID ARG               00085500
                AIF   (T'&MF EQ 'O').ZG50D      OMITTED                 00085600
&ZASYSLNDX      SETA  0                                                 00085700
.ZG50A          ANOP  ,           POSITIONAL MACRO KEY                  00085800
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00085900
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG50C                  00086000
&ZTLC           SETC 'MF'                                               00086100
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG50A         00086200
.ZG50B          ANOP  ,                                                 00086300
&ZXMF           SETC  ''          RESET IN/OUTPUT                       00086400
&ZMS            SETC  'THE "MF" KEY'            *KOPTA* MNOTE           00086500
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00086600
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00086700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00086800
                AGO   .ZG50E                                            00086900
.ZG50C          ANOP  ,                                                 00087000
&ZXMF           SETC  ''          RESET IN/OUTPUT                       00087100
&ZMS            SETC  '"MF='      *KUKWA* MNOTE                         00087200
&ZMS            SETC  '&ZMS.&MF"'                                       00087300
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00087400
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00087500
&ZMS            SETC  '&ZMS "S",'               VALID KEYWORD           00087600
&ZMS            SETC  '&ZMS "L",'               VALID KEYWORD           00087700
&ZMS            SETC  '&ZMS OR "E".'            VALID KEYWORD           00087800
                MNOTE 8,' &ZMS '                                        00087900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00088000
                AGO   .ZG50E                                            00088100
.ZG50D          ANOP  ,                                                 00088200
&XMF            SETC  'S'         SET DEFAULT KEYWORD                   00088300
&XMFSCK         SETC  'COMPLETE'  COMPLETE CHECKING                     00088400
.ZG50E          ANOP  ,                                                 00088500
.********************************************************************   00088600
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00088700
.********************************************************************   00088800
                ACTR  10000                                             00088900
.*-------------------------------------------------------------------   00089000
.***AG.MF03 MF=(SLE)                                                    00089100
                AIF   ('&XMF' EQ 'L').ZGMFX                             00089200
.*----------------------------------------------------------------***   00089300
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00089400
&XMBOX          SETC  ''          INITIALIZE XVARIABLE                  00089500
                AIF   (K'&MBOXNAME LE 0).ZG2C                           00089600
&ZXMBOX         SETC  'INPUT'     SET IN/OUTPUT                         00089700
&XMBOX          SETC  'MBOXNAME'  SET XVARIABLE                         00089800
&ZXMBOXNAME     SETC  'INPUT'     SET IN/OUTPUT                         00089900
&XMBOXNAME      SETC  '&MBOXNAME(1)'            SET XVARIABLE PARM      00090000
                AIF   (N'&MBOXNAME GT 1).ZG2A   MULTIPLE PARMS          00090100
&XMBOXNAME      SETC  '&MBOXNAME'               SET XVARIABLE PARM      00090200
.ZG2A           AIF   (N'&MBOXNAME LE 1).ZG2B   CK NUM                  00090300
&ZMS            SETC  '"MBOXNAME='              *KPOSA* MNOTE           00090400
&ZMS            SETC  '&ZMS.&MBOXNAME"'                                 00090500
&ZMS            SETC  '&ZMS "MBOXNAME"'                                 00090600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00090700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00090800
.ZG2B           AIF   (K'&XMBOXNAME GT 0).ZG2C  ONE PARM                00090900
&ZXMBOX         SETC  ''          RESET IN/OUTPUT                       00091000
&ZXMBOXNAME     SETC  ''          RESET IN/OUTPUT                       00091100
&ZMS            SETC  ' '         *KRQDA*                               00091200
&ZMS            SETC  '&ZMS "MBOXNAME" KEY AND ITS ARGUMENT'            00091300
                MNOTE 8,' &ZMS ARE REQUIRED.'                           00091400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00091500
.ZG2C           ANOP  ,                                                 00091600
.*------------------------------------------------------------------    00091700
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00091800
                AIF   (K'&XMBOX GT 0).ZG3B                              00091900
&ZXMBOX         SETC  ''          RESET IN/OUTPUT                       00092000
&ZXMBOXNAME     SETC  ''          RESET IN/OUTPUT                       00092100
&XMBOX          SETC  ''          ENSURE NULL                           00092200
&XMBOXNAME      SETC  ''          ENSURE NULL                           00092300
&ZMS            SETC  'ONE OF THE FOLLOWING'    *KMERA* MNOTE           00092400
&ZMS            SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'               00092500
&ZMS            SETC  '&ZMS REQUIRED:'                                  00092600
&ZMS            SETC  '&ZMS "MBOXNAME".'        VALID ME KEY            00092700
                MNOTE 8,' &ZMS '                                        00092800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00092900
.ZG3B           ANOP  ,                                                 00093000
.*-------------------------------------------------------------------   00093100
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00093200
.ZG2            AIF   ('&XMBOX' NE 'MBOXNAME').ZG3                      00093300
.*-------------------------------------------------------------------   00093400
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00093500
                AIF   (K'&ZXMBOXNAME LE 0).ZG2R  NOT I/O                00093600
                AIF   ('&XMBOXNAME'(1,1) NE '(').ZG2R                   00093700
&ZCGPR          SETC  '&XMBOXNAME'(2,K'&XMBOXNAME-2)                    00093800
                AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                       00093900
                AIF   (K'&ZCGPR GT 2).ZG2Q                              00094000
                AIF   ('&ZCGPR' EQ '0').ZG2Q                            00094100
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00094200
                AIF   (T'&ZCGPR NE 'N').ZG2Q    INVALID REG NAME        00094300
.ZG2P           ANOP  ,                                                 00094400
                AIF   (T'&ZCGPR NE 'N').ZG2R    NON NUMERIC             00094500
                AIF   ('&ZCGPR' LT '2').ZG2Q                            00094600
                AIF   ('&ZCGPR' LE '12').ZG2R                           00094700
.ZG2Q           ANOP  ,                                                 00094800
&ZMS            SETC  '"MBOXNAME='              *KGPRA* MNOTE           00094900
&ZMS            SETC  '&ZMS.&MBOXNAME"'                                 00095000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00095100
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00095200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00095300
.ZG2R           ANOP  ,                                                 00095400
.*-------------------------------------------------------------------   00095500
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00095600
.ZG3            ANOP  ,           END MUTUALLY EXCLUSIVE KEYS           00095700
.*----------------------------------------------------------------***   00095800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00095900
                AIF   (N'&MSGFETCH LE 1).ZG5A   CK NUM                  00096000
&ZMS            SETC  '"MSGFETCH='              *KPOSA* MNOTE           00096100
&ZMS            SETC  '&ZMS.&MSGFETCH"'                                 00096200
&ZMS            SETC  '&ZMS "MSGFETCH"'                                 00096300
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00096400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00096500
.ZG5A           ANOP  ,                                                 00096600
.*-------------------------------------------------------------------   00096700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00096800
&XMSGFETCH      SETC  ''          INITIALIZE XVARIABLE                  00096900
.ZG6A   AIF   ('&MSGFETCH(1)' NE 'ALL').ZG7A                            00097000
&XMSGFETCH      SETC  'ALL'       SET KEYWORD                           00097100
.*-------------------------------------------------------------------   00097200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00097300
.ZG7A   AIF   ('&MSGFETCH(1)' NE 'MESSAGES').ZG8A                       00097400
&XMSGFETCH      SETC  'MESSAGES'  SET KEYWORD                           00097500
.*-------------------------------------------------------------------   00097600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00097700
.ZG8A   AIF   ('&MSGFETCH(1)' NE 'SYSEVENT').ZG9A                       00097800
&XMSGFETCH      SETC  'SYSEVENT'  SET KEYWORD                           00097900
.*-------------------------------------------------------------------   00098000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00098100
.ZG9A   AIF   ('&MSGFETCH(1)' NE 'ACKS').ZG10A                          00098200
&XMSGFETCH      SETC  'ACKS'      SET KEYWORD                           00098300
.*-------------------------------------------------------------------   00098400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00098500
.ZG10A          AIF   (K'&XMSGFETCH GT 0).ZG10C  KEYWORD                00098600
                AIF   (K'&MSGFETCH(1) LE 0).ZG10B                       00098700
&ZMS            SETC  '"MSGFETCH='              *KUKWA* MNOTE           00098800
&ZMS            SETC  '&ZMS.&MSGFETCH"'                                 00098900
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00099000
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00099100
&ZMS            SETC  '&ZMS "ALL",'             VALID KEYWORD           00099200
&ZMS            SETC  '&ZMS "MESSAGES",'        VALID KEYWORD           00099300
&ZMS            SETC  '&ZMS "SYSEVENT",'        VALID KEYWORD           00099400
&ZMS            SETC  '&ZMS OR "ACKS".'         VALID KEYWORD           00099500
                MNOTE 8,' &ZMS '                                        00099600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00099700
.ZG10B          ANOP  ,                                                 00099800
&XMSGFETCH      SETC  'ALL'       SET DEFAULT KEYWORD                   00099900
.ZG10C          ANOP  ,                                                 00100000
&ZXMSGFETCH     SETC  'INPUT'     SET IN/OUTPUT                         00100100
.*----------------------------------------------------------------***   00100200
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00100300
                AIF   (N'&DATA LE 1).ZG12A      CK NUM                  00100400
&ZMS            SETC  '"DATA='    *KPOSA* MNOTE                         00100500
&ZMS            SETC  '&ZMS.&DATA"'                                     00100600
&ZMS            SETC  '&ZMS "DATA"'                                     00100700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00100800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00100900
.ZG12A          ANOP  ,                                                 00101000
.*-------------------------------------------------------------------   00101100
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00101200
&ZXDATA         SETC  'OUTPUT'    SET IN/OUTPUT                         00101300
&XDATA          SETC  '&DATA(1)'  SET XVARIABLE                         00101400
                AIF   (N'&DATA GT 1).ZG12B      MULTI PARMS             00101500
&XDATA          SETC  '&DATA'     SET XVARIABLE                         00101600
.ZG12B          AIF   (K'&DATA(1) GT 0).ZG12C                           00101700
&ZXDATA         SETC  ''          RESET IN/OUTPUT                       00101800
&ZMS            SETC  ' '         *KRQDA*                               00101900
&ZMS            SETC  '&ZMS "DATA" KEY AND ITS ARGUMENT'                00102000
                MNOTE 8,' &ZMS ARE REQUIRED.'                           00102100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00102200
.ZG12C          ANOP  ,                                                 00102300
.*-------------------------------------------------------------------   00102400
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00102500
                AIF   (K'&ZXDATA LE 0).ZG12R    NOT I/O                 00102600
                AIF   ('&XDATA'(1,1) NE '(').ZG12R                      00102700
&ZCGPR          SETC  '&XDATA'(2,K'&XDATA-2)                            00102800
                AIF   ('&ZCGPR'(1,1) NE '0').ZG12P                      00102900
                AIF   (K'&ZCGPR GT 2).ZG12Q                             00103000
                AIF   ('&ZCGPR' EQ '0').ZG12Q                           00103100
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00103200
                AIF   (T'&ZCGPR NE 'N').ZG12Q   INVALID REG NAME        00103300
.ZG12P          ANOP  ,                                                 00103400
                AIF   (T'&ZCGPR NE 'N').ZG12R   NON NUMERIC             00103500
                AIF   ('&ZCGPR' LT '2').ZG12Q                           00103600
                AIF   ('&ZCGPR' LE '12').ZG12R                          00103700
.ZG12Q          ANOP  ,                                                 00103800
&ZMS            SETC  '"DATA='    *KGPRA* MNOTE                         00103900
&ZMS            SETC  '&ZMS.&DATA"'                                     00104000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00104100
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00104200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00104300
.ZG12R          ANOP  ,                                                 00104400
.*----------------------------------------------------------------***   00104500
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00104600
                AIF   (N'&DATALEN LE 1).ZG15A   CK NUM                  00104700
&ZMS            SETC  '"DATALEN='               *KPOSA* MNOTE           00104800
&ZMS            SETC  '&ZMS.&DATALEN"'                                  00104900
&ZMS            SETC  '&ZMS "DATALEN"'                                  00105000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00105100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00105200
.ZG15A          ANOP  ,                                                 00105300
.*-------------------------------------------------------------------   00105400
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00105500
&ZXDATALEN      SETC  'OUTPUT'    SET IN/OUTPUT                         00105600
&XDATALEN       SETC  '&DATALEN(1)'             SET XVARIABLE           00105700
                AIF   (N'&DATALEN GT 1).ZG15B   MULTI PARMS             00105800
&XDATALEN       SETC  '&DATALEN'  SET XVARIABLE                         00105900
.ZG15B          AIF   (K'&DATALEN(1) GT 0).ZG15C                        00106000
&ZXDATALEN      SETC  ''          RESET IN/OUTPUT                       00106100
&ZMS            SETC  ' '         *KRQDA*                               00106200
&ZMS            SETC  '&ZMS "DATALEN" KEY AND ITS ARGUMENT'             00106300
                MNOTE 8,' &ZMS ARE REQUIRED.'                           00106400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00106500
.ZG15C          ANOP  ,                                                 00106600
.*-------------------------------------------------------------------   00106700
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00106800
                AIF   (K'&ZXDATALEN LE 0).ZG15R  NOT I/O                00106900
                AIF   ('&XDATALEN'(1,1) NE '(').ZG15R                   00107000
&ZCGPR          SETC  '&XDATALEN'(2,K'&XDATALEN-2)                      00107100
                AIF   ('&ZCGPR'(1,1) NE '0').ZG15P                      00107200
                AIF   (K'&ZCGPR GT 2).ZG15Q                             00107300
                AIF   ('&ZCGPR' EQ '0').ZG15Q                           00107400
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00107500
                AIF   (T'&ZCGPR NE 'N').ZG15Q   INVALID REG NAME        00107600
.ZG15P          ANOP  ,                                                 00107700
                AIF   (T'&ZCGPR NE 'N').ZG15R   NON NUMERIC             00107800
                AIF   ('&ZCGPR' LT '2').ZG15Q                           00107900
                AIF   ('&ZCGPR' LE '12').ZG15R                          00108000
.ZG15Q          ANOP  ,                                                 00108100
&ZMS            SETC  '"DATALEN='               *KGPRA* MNOTE           00108200
&ZMS            SETC  '&ZMS.&DATALEN"'                                  00108300
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00108400
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00108500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00108600
.ZG15R          ANOP  ,                                                 00108700
.*----------------------------------------------------------------***   00108800
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00108900
                AIF   (N'&MSGTOKEN LE 1).ZG18A  CK NUM                  00109000
&ZMS            SETC  '"MSGTOKEN='              *KPOSA* MNOTE           00109100
&ZMS            SETC  '&ZMS.&MSGTOKEN"'                                 00109200
&ZMS            SETC  '&ZMS "MSGTOKEN"'                                 00109300
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00109400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00109500
.ZG18A          ANOP  ,                                                 00109600
.*-------------------------------------------------------------------   00109700
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00109800
&ZXMSGTOKEN     SETC  'OUTPUT'    SET IN/OUTPUT                         00109900
&XMSGTOKEN      SETC  '&MSGTOKEN(1)'            SET XVARIABLE           00110000
                AIF   (N'&MSGTOKEN GT 1).ZG18B  MULTI PARMS             00110100
&XMSGTOKEN      SETC  '&MSGTOKEN'               SET XVARIABLE           00110200
.ZG18B          AIF   (K'&MSGTOKEN(1) GT 0).ZG18C                       00110300
&ZXMSGTOKEN     SETC  ''          RESET IN/OUTPUT                       00110400
&ZMS            SETC  ' '         *KRQDA*                               00110500
&ZMS            SETC  '&ZMS "MSGTOKEN" KEY AND ITS ARGUMENT'            00110600
                MNOTE 8,' &ZMS ARE REQUIRED.'                           00110700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00110800
.ZG18C          ANOP  ,                                                 00110900
.*-------------------------------------------------------------------   00111000
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00111100
                AIF   (K'&ZXMSGTOKEN LE 0).ZG18R  NOT I/O               00111200
                AIF   ('&XMSGTOKEN'(1,1) NE '(').ZG18R                  00111300
&ZCGPR          SETC  '&XMSGTOKEN'(2,K'&XMSGTOKEN-2)                    00111400
                AIF   ('&ZCGPR'(1,1) NE '0').ZG18P                      00111500
                AIF   (K'&ZCGPR GT 2).ZG18Q                             00111600
                AIF   ('&ZCGPR' EQ '0').ZG18Q                           00111700
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00111800
                AIF   (T'&ZCGPR NE 'N').ZG18Q   INVALID REG NAME        00111900
.ZG18P          ANOP  ,                                                 00112000
                AIF   (T'&ZCGPR NE 'N').ZG18R   NON NUMERIC             00112100
                AIF   ('&ZCGPR' LT '2').ZG18Q                           00112200
                AIF   ('&ZCGPR' LE '12').ZG18R                          00112300
.ZG18Q          ANOP  ,                                                 00112400
&ZMS            SETC  '"MSGTOKEN='              *KGPRA* MNOTE           00112500
&ZMS            SETC  '&ZMS.&MSGTOKEN"'                                 00112600
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00112700
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00112800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00112900
.ZG18R          ANOP  ,                                                 00113000
.*----------------------------------------------------------------***   00113100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00113200
                AIF   (N'&GROUPTOKEN LE 1).ZG21A  CK NUM                00113300
&ZMS            SETC  '"GROUPTOKEN='            *KPOSA* MNOTE           00113400
&ZMS            SETC  '&ZMS.&GROUPTOKEN"'                               00113500
&ZMS            SETC  '&ZMS "GROUPTOKEN"'                               00113600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00113700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00113800
.ZG21A          ANOP  ,                                                 00113900
.*-------------------------------------------------------------------   00114000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00114100
&ZXGROUPTOKEN   SETC  'INPUT'     SET IN/OUTPUT                         00114200
&XGROUPTOKEN    SETC  '&GROUPTOKEN(1)'          SET XVARIABLE           00114300
                AIF   (N'&GROUPTOKEN GT 1).ZG21B  MULTI PARMS           00114400
&XGROUPTOKEN    SETC  '&GROUPTOKEN'             SET XVARIABLE           00114500
.ZG21B          AIF   (K'&GROUPTOKEN(1) GT 0).ZG21C                     00114600
&ZXGROUPTOKEN   SETC  ''          RESET IN/OUTPUT                       00114700
&ZMS            SETC  ' '         *KRQDA*                               00114800
&ZMS            SETC  '&ZMS "GROUPTOKEN" KEY AND ITS ARGUMENT'          00114900
                MNOTE 8,' &ZMS ARE REQUIRED.'                           00115000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00115100
.ZG21C          ANOP  ,                                                 00115200
.*-------------------------------------------------------------------   00115300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00115400
                AIF   (K'&ZXGROUPTOKEN LE 0).ZG21R  NOT I/O             00115500
                AIF   ('&XGROUPTOKEN'(1,1) NE '(').ZG21R                00115600
&ZCGPR          SETC  '&XGROUPTOKEN'(2,K'&XGROUPTOKEN-2)                00115700
                AIF   ('&ZCGPR'(1,1) NE '0').ZG21P                      00115800
                AIF   (K'&ZCGPR GT 2).ZG21Q                             00115900
                AIF   ('&ZCGPR' EQ '0').ZG21Q                           00116000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00116100
                AIF   (T'&ZCGPR NE 'N').ZG21Q   INVALID REG NAME        00116200
.ZG21P          ANOP  ,                                                 00116300
                AIF   (T'&ZCGPR NE 'N').ZG21R   NON NUMERIC             00116400
                AIF   ('&ZCGPR' LT '2').ZG21Q                           00116500
                AIF   ('&ZCGPR' LE '12').ZG21R                          00116600
.ZG21Q          ANOP  ,                                                 00116700
&ZMS            SETC  '"GROUPTOKEN='            *KGPRA* MNOTE           00116800
&ZMS            SETC  '&ZMS.&GROUPTOKEN"'                               00116900
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00117000
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00117100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00117200
.ZG21R          ANOP  ,                                                 00117300
.*----------------------------------------------------------------***   00117400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00117500
                AIF   (N'&RTNCODE LE 1).ZG24A   CK NUM                  00117600
&ZMS            SETC  '"RTNCODE='               *KPOSA* MNOTE           00117700
&ZMS            SETC  '&ZMS.&RTNCODE"'                                  00117800
&ZMS            SETC  '&ZMS "RTNCODE"'                                  00117900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00118000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00118100
.ZG24A          ANOP  ,                                                 00118200
.*-------------------------------------------------------------------   00118300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00118400
                AIF   (K'&RTNCODE(1) LE 0).ZG24C  NO PARM               00118500
&ZXRTNCODE      SETC  'OUTPUT'    SET OUTPUT                            00118600
&XRTNCODE       SETC  '&RTNCODE(1)'             SET XVARIABLE           00118700
                AIF   (N'&RTNCODE GT 1).ZG24C                           00118800
&XRTNCODE       SETC  '&RTNCODE'  SET XVARIABLE                         00118900
.ZG24C          ANOP  ,                                                 00119000
.*-------------------------------------------------------------------   00119100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00119200
                AIF   (K'&ZXRTNCODE LE 0).ZG24R  NOT I/O                00119300
                AIF   ('&XRTNCODE'(1,1) NE '(').ZG24R                   00119400
&ZCGPR          SETC  '&XRTNCODE'(2,K'&XRTNCODE-2)                      00119500
                AIF   ('&ZCGPR'(1,1) NE '0').ZG24P                      00119600
                AIF   (K'&ZCGPR GT 2).ZG24Q                             00119700
                AIF   ('&ZCGPR' EQ '0').ZG24Q                           00119800
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00119900
                AIF   (T'&ZCGPR NE 'N').ZG24Q   INVALID REG NAME        00120000
.ZG24P          ANOP  ,                                                 00120100
                AIF   (T'&ZCGPR NE 'N').ZG24R   NON NUMERIC             00120200
                AIF   ('&ZCGPR' LT '2').ZG24Q                           00120300
                AIF   ('&ZCGPR' LE '12').ZG24R                          00120400
.ZG24Q          ANOP  ,                                                 00120500
&ZMS            SETC  '"RTNCODE='               *KGPRA* MNOTE           00120600
&ZMS            SETC  '&ZMS.&RTNCODE"'                                  00120700
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00120800
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00120900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00121000
.ZG24R          ANOP  ,                                                 00121100
.*----------------------------------------------------------------***   00121200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00121300
                AIF   (N'&RSNCODE LE 1).ZG27A   CK NUM                  00121400
&ZMS            SETC  '"RSNCODE='               *KPOSA* MNOTE           00121500
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00121600
&ZMS            SETC  '&ZMS "RSNCODE"'                                  00121700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00121800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00121900
.ZG27A          ANOP  ,                                                 00122000
.*-------------------------------------------------------------------   00122100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00122200
                AIF   (K'&RSNCODE(1) LE 0).ZG27C  NO PARM               00122300
&ZXRSNCODE      SETC  'OUTPUT'    SET OUTPUT                            00122400
&XRSNCODE       SETC  '&RSNCODE(1)'             SET XVARIABLE           00122500
                AIF   (N'&RSNCODE GT 1).ZG27C                           00122600
&XRSNCODE       SETC  '&RSNCODE'  SET XVARIABLE                         00122700
.ZG27C          ANOP  ,                                                 00122800
.*-------------------------------------------------------------------   00122900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00123000
                AIF   (K'&ZXRSNCODE LE 0).ZG27R  NOT I/O                00123100
                AIF   ('&XRSNCODE'(1,1) NE '(').ZG27R                   00123200
&ZCGPR          SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                      00123300
                AIF   ('&ZCGPR'(1,1) NE '0').ZG27P                      00123400
                AIF   (K'&ZCGPR GT 2).ZG27Q                             00123500
                AIF   ('&ZCGPR' EQ '0').ZG27Q                           00123600
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00123700
                AIF   (T'&ZCGPR NE 'N').ZG27Q   INVALID REG NAME        00123800
.ZG27P          ANOP  ,                                                 00123900
                AIF   (T'&ZCGPR NE 'N').ZG27R   NON NUMERIC             00124000
                AIF   ('&ZCGPR' LT '2').ZG27Q                           00124100
                AIF   ('&ZCGPR' LE '12').ZG27R                          00124200
.ZG27Q          ANOP  ,                                                 00124300
&ZMS            SETC  '"RSNCODE='               *KGPRA* MNOTE           00124400
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00124500
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00124600
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00124700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00124800
.ZG27R          ANOP  ,                                                 00124900
.******************************************************************     00125000
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00125100
.******************************************************************     00125200
                ACTR  10000                                             00125300
.*----------------------------------------------------------------***   00125400
.***AH.P02 EXTRA POSITIONALS                                            00125500
                AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS              00125600
                AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL              00125700
                AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL          00125800
                AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL           00125900
.ZGLISTX1       ANOP  ,                                                 00126000
&ZCVAL          SETC  ''          ERROR FIELD                           00126100
&ZAWRK          SETA  0           POSITIONAL NUMBER                     00126200
.ZGLIST2        ANOP  ,                                                 00126300
&ZAWRK          SETA  &ZAWRK+1    NEXT POSITIONAL                       00126400
                AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE              00126500
&ZCVAL          SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                   00126600
                AGO   .ZGLIST2                                          00126700
.*                                                                      00126800
.ZGLIST3        ANOP  ,                                                 00126900
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)     STRIP COMMA             00127000
&ZMS            SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE          00127100
&ZMS            SETC  '&ZMS "&ZCVAL"'                                   00127200
&ZMS            SETC  '&ZMS CANNOT BE USED.'                            00127300
&ZMS            SETC  '&ZMS NO POSITIONAL ARGUMENTS'                    00127400
                MNOTE 8,' &ZMS ARE ALLOWED.'                            00127500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00127600
.ZGLISTX        ANOP  ,                                                 00127700
&ZASYSLNDX      SETA  0                                                 00127800
.*-------------------------------------------------------------------   00127900
.***AG.MF04 MF=(SLE)                                                    00128000
.ZGMFX          ANOP  ,           END OF FULL SYNTAX CHECK              00128100
.*******************************************************************    00128200
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00128300
.*******************************************************************    00128400
                AIF   (&ZMACRET NE 0).ZLX2      ERROR DETECTED          00128500
.*******************************************************************    00128600
.***AE.01  START OF IXZXIXRM MACRO CODE                                 00128700
.*******************************************************************    00128800
                LCLC  &M0M0001                 NAME                     00128900
&M0M0001        SETC  '&XLABEL'                SET NAME                 00129000
                AIF   (K'&XLABEL NE 0).XLAB2                            00129100
&M0M0001        SETC  'M00M&SYSNDX'            DEFAULT NAME             00129200
.*                                                                      00129300
.XLAB2          ANOP  ,                                                 00129400
&M0M0001 DS    0H                             IXZXIXRM-1                00129500
.*******************************************************************    00129600
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00129700
.*******************************************************************    00129800
              PUSH  PRINT                                               00129900
                AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON        00130000
                PRINT OFF         ++ PR01                               00130100
                AGO   .ZPRNTXX                                          00130200
.ZPRINTX        PRINT ON                                                00130300
.ZPRNTXX        ANOP  ,                                                 00130400
.********************************************************************   00130500
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00130600
.********************************************************************   00130700
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00130800
                      LCLA  &ZOPN1         INVOCATION INDEX             00130900
                      LCLC  &ZOPL(4095)    LABEL                        00131000
                      LCLC  &ZOPO(4095)    OPERATION                    00131100
                      LCLC  &ZOPV(4095)    VALUE                        00131200
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00131300
.*                                                                      00131400
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00131500
.******************************************************************     00131600
.***AL.L10 IXZXIXRM FMT=LIST MF=S|L PARAMETERS                          00131700
.******************************************************************     00131800
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00131900
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00132000
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00132100
&XMFATTR              SETC  '0D'                                        00132200
.*                                                                      00132300
&ZOPN                 SETA  &ZOPN+1                                     00132400
&ZOPL(&ZOPN)          SETC  ' '                                         00132500
&ZOPO(&ZOPN)          SETC  'B'                                         00132600
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00132700
&ZOPD(&ZOPN)          SETC  '++ IXZXIXRM ARG PARMS'                     00132800
.*                                                                      00132900
&ZOPN                 SETA  &ZOPN+1                                     00133000
&ZOPL(&ZOPN)          SETC  ' '                                         00133100
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00133200
&ZOPV(&ZOPN)          SETC  '1'                                         00133300
&ZOPD(&ZOPN)          SETC  ' '                                         00133400
.*                                                                      00133500
.ZLMFSL2              ANOP  ,                                           00133600
.*-------------------------------------------------------------------   00133700
.***AM.L01  IXZXIXRM FMT=LIST PARAMETERS                                00133800
&ZOPN                 SETA &ZOPN+1                                      00133900
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00134000
&ZOPO(&ZOPN)          SETC 'DS'                                         00134100
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00134200
&ZOPD(&ZOPN)          SETC '++ IXZXIXRM PARM LIST'                      00134300
.*-------------------------------------------------------------------   00134400
.***AM.L02 XVERSION XL1                                                 00134500
&ZOPN                 SETA &ZOPN+1                                      00134600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00134700
&ZOPO(&ZOPN)          SETC 'DS'                                         00134800
&ZOPV(&ZOPN)          SETC 'XL1'                                        00134900
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00135000
.*-------------------------------------------------------------------   00135100
.***AM.L09  XEYECATCH CL6                                               00135200
&ZOPN                 SETA &ZOPN+1                                      00135300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEYECATCH'                        00135400
&ZOPO(&ZOPN)          SETC 'DS'                                         00135500
&ZOPV(&ZOPN)          SETC 'CL6'                                        00135600
&ZOPD(&ZOPN)          SETC '++ CONSTANT  XEYECATCH'                     00135700
.*-------------------------------------------------------------------   00135800
.***AM.L09  XRSV0001 CL1                                                00135900
&ZOPN                 SETA &ZOPN+1                                      00136000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00136100
&ZOPO(&ZOPN)          SETC 'DS'                                         00136200
&ZOPV(&ZOPN)          SETC 'CL1'                                        00136300
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0001'                      00136400
.*-------------------------------------------------------------------   00136500
.***AM.L09  XMBOXNAME CL16                                              00136600
&ZOPN                 SETA &ZOPN+1                                      00136700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMBOXNAME'                        00136800
&ZOPO(&ZOPN)          SETC 'DS'                                         00136900
&ZOPV(&ZOPN)          SETC 'CL16'                                       00137000
&ZOPD(&ZOPN)          SETC '++ &ZXMBOXNAME  XMBOXNAME'                  00137100
.*-------------------------------------------------------------------   00137200
.***AM.L09  XDATA A                                                     00137300
&ZOPN                 SETA &ZOPN+1                                      00137400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATA'                            00137500
&ZOPO(&ZOPN)          SETC 'DS'                                         00137600
&ZOPV(&ZOPN)          SETC 'A'                                          00137700
&ZOPD(&ZOPN)          SETC '++ &ZXDATA  XDATA'                          00137800
.*-------------------------------------------------------------------   00137900
.***AM.L09  XDATALEN F                                                  00138000
&ZOPN                 SETA &ZOPN+1                                      00138100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATALEN'                         00138200
&ZOPO(&ZOPN)          SETC 'DS'                                         00138300
&ZOPV(&ZOPN)          SETC 'F'                                          00138400
&ZOPD(&ZOPN)          SETC '++ &ZXDATALEN  XDATALEN'                    00138500
.*-------------------------------------------------------------------   00138600
.***AM.L09  XMSGTOKEN BL.64                                             00138700
&ZOPN                 SETA &ZOPN+1                                      00138800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGTOKEN'                        00138900
&ZOPO(&ZOPN)          SETC 'DS'                                         00139000
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00139100
&ZOPD(&ZOPN)          SETC '++ &ZXMSGTOKEN  XMSGTOKEN'                  00139200
.*-------------------------------------------------------------------   00139300
.***AM.L09  XGROUPTOKEN F                                               00139400
&ZOPN                 SETA &ZOPN+1                                      00139500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XGROUPTOKEN'                      00139600
&ZOPO(&ZOPN)          SETC 'DS'                                         00139700
&ZOPV(&ZOPN)          SETC 'F'                                          00139800
&ZOPD(&ZOPN)          SETC '++ &ZXGROUPTOKEN  XGROUPTOKEN'              00139900
.*-------------------------------------------------------------------   00140000
.***AM.L03 XMSGFETCH BL.8                                               00140100
&ZOPN                 SETA &ZOPN+1                                      00140200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGFETCH'                        00140300
&ZOPO(&ZOPN)          SETC 'DS'                                         00140400
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00140500
&ZOPD(&ZOPN)          SETC '++ INPUT'                                   00140600
.*                                                                      00140700
&ZOPN                 SETA  &ZOPN+1                                     00140800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMSGFETCH_ALL'                   00140900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00141000
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00141100
&ZOPD(&ZOPN)          SETC  '++ XMSGFETCH.'                             00141200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ALL'                          00141300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00141400
.*                                                                      00141500
&ZOPN                 SETA  &ZOPN+1                                     00141600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMSGFETCH_MESSAGES'              00141700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00141800
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00141900
&ZOPD(&ZOPN)          SETC  '++ XMSGFETCH.'                             00142000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MESSAGES'                     00142100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00142200
.*                                                                      00142300
&ZOPN                 SETA  &ZOPN+1                                     00142400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMSGFETCH_SYSEVENT'              00142500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00142600
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00142700
&ZOPD(&ZOPN)          SETC  '++ XMSGFETCH.'                             00142800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYSEVENT'                     00142900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00143000
.*                                                                      00143100
&ZOPN                 SETA  &ZOPN+1                                     00143200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMSGFETCH_ACKS'                  00143300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00143400
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00143500
&ZOPD(&ZOPN)          SETC  '++ XMSGFETCH.'                             00143600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ACKS'                         00143700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00143800
.*-------------------------------------------------------------------   00143900
.***AM.L03 XKEYS BL.8                                                   00144000
&ZOPN                 SETA &ZOPN+1                                      00144100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEYS'                            00144200
&ZOPO(&ZOPN)          SETC 'DS'                                         00144300
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00144400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00144500
.*                                                                      00144600
&ZOPN                 SETA  &ZOPN+1                                     00144700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_MSGFETCH'                00144800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00144900
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00145000
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00145100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MSGFETCH'                     00145200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00145300
.*-------------------------------------------------------------------   00145400
.***AM.L10 END OF IXZXIXRM LIST PARAMETERS                              00145500
&ZOPN                 SETA &ZOPN+1                                      00145600
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00145700
&ZOPO(&ZOPN)          SETC 'EQU'                                        00145800
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00145900
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00146000
.*                                                                      00146100
&ZOPN                 SETA &ZOPN+1                                      00146200
&ZOPL(&ZOPN)          SETC ' '                                          00146300
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00146400
&ZOPV(&ZOPN)          SETC '1'                                          00146500
&ZOPD(&ZOPN)          SETC ' '                                          00146600
.*-------------------------------------------------------------------   00146700
.***AL.L12 IXZXIXRM FMT=LIST MF=S|L PARAMETERS                          00146800
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00146900
.*                                                                      00147000
&ZOPN                 SETA  &ZOPN+1                                     00147100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00147200
&ZOPO(&ZOPN)          SETC  'DC'                                        00147300
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00147400
&ZOPD(&ZOPN)          SETC  '++ IXZXIXRM ARG PARMS'                     00147500
.*                                                                      00147600
.ZLMFSLX              ANOP  ,                                           00147700
.*-------------------------------------------------------------------   00147800
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00147900
&ZPLLEN               SETA 46                                           00148000
.*                                                                      00148100
.******************************************************************     00148200
.***AI.L01 IXZXIXRM FMT=LIST FILL IN PARAMETER AREA                     00148300
.******************************************************************     00148400
                      ACTR  10000                                       00148500
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00148600
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00148700
&ZCVAL                SETC  'LAE'          XAX MODE                     00148800
.ZIMFXA               ANOP ,                                            00148900
.*                                                                      00149000
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00149100
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00149200
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00149300
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00149400
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00149500
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00149600
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00149700
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00149800
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00149900
&ZOPN                 SETA  &ZOPN+1                                     00150000
&ZOPL(&ZOPN)          SETC  ' '                                         00150100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00150200
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00150300
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00150400
                      AGO   .ZIMFNX                                     00150500
.*                                                                      00150600
.ZIMFN2               ANOP ,                                            00150700
&ZOPN                 SETA  &ZOPN+1                                     00150800
&ZOPL(&ZOPN)          SETC  ' '                                         00150900
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00151000
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00151100
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00151200
.ZIMFNX               ANOP ,                                            00151300
.********************************************************************   00151400
.***AI.L02 IXZXIXRM FMT=LIST INITIALIZE PARAMETER AREA                  00151500
.********************************************************************   00151600
.***AI.L03 MF=(SLE)                                                     00151700
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00151800
.*                                                                      00151900
&ZOPN                 SETA  &ZOPN+1                                     00152000
&ZOPL(&ZOPN)          SETC  ' '                                         00152100
&ZOPO(&ZOPN)          SETC  'XC'                                        00152200
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00152300
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00152400
.ZIMFLX               ANOP  ,                                           00152500
.*-------------------------------------------------------------------   00152600
.***AI.L04B XVERSION XL1                                                00152700
                      AIF   (&XPLISTVER EQ 0).ZIMFVX                    00152800
&ZOPN                 SETA  &ZOPN+1                                     00152900
&ZOPL(&ZOPN)          SETC  ' '                                         00153000
&ZOPO(&ZOPN)          SETC  'MVI'                                       00153100
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00153200
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00153300
.ZIMFVX               ANOP  ,                                           00153400
.*-------------------------------------------------------------------   00153500
.***AI.L60 XEYECATCH CL6                                                00153600
&ZOPN                 SETA  &ZOPN+1                                     00153700
&ZOPL(&ZOPN)          SETC  ' '                                         00153800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00153900
&ZOPV(&ZOPN)          SETC  '1(6,1),=CL6''YIXRM '''                     00154000
&ZOPD(&ZOPN)          SETC  '++ CL6 CONSTANT'                           00154100
.*-------------------------------------------------------------------   00154200
.***AI.L25  XMBOXNAME CL16                                              00154300
                      AIF   ('&ZXMBOXNAME' EQ '').ZI4E                  00154400
                      AIF   ('&ZXMBOXNAME' EQ 'OUTPUT').ZI4E            00154500
&ZCGPR                SETC  '&XMBOXNAME'                                00154600
.*                                                                      00154700
                      AIF   ('&XMBOXNAME'(1,1) NE '(').ZI4B             00154800
&ZCGPR   SETC  '0('.'&XMBOXNAME'(2,K'&XMBOXNAME-2).')'                  00154900
.ZI4B                 ANOP  ,                                           00155000
.*                                                                      00155100
&ZOPN                 SETA  &ZOPN+1                                     00155200
&ZOPL(&ZOPN)          SETC  ' '                                         00155300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00155400
&ZOPV(&ZOPN)          SETC  '8(16,1),&ZCGPR'                            00155500
&ZOPD(&ZOPN)          SETC  '++ &ZXMBOXNAME XMBOXNAME'                  00155600
.*                                                                      00155700
.ZI4E                 ANOP  ,                                           00155800
.*-------------------------------------------------------------------   00155900
.***AI.L25  XGROUPTOKEN F                                               00156000
                      AIF   ('&ZXGROUPTOKEN' EQ '').ZI8E                00156100
                      AIF   ('&ZXGROUPTOKEN' EQ 'OUTPUT').ZI8E          00156200
&ZCGPR                SETC  '&XGROUPTOKEN'                              00156300
.*                                                                      00156400
                      AIF   ('&XGROUPTOKEN'(1,1) NE '(').ZI8B           00156500
&ZCGPR   SETC  '0('.'&XGROUPTOKEN'(2,K'&XGROUPTOKEN-2).')'              00156600
                      AGO   .ZI8D                                       00156700
.ZI8B                 ANOP  ,                                           00156800
.*                                                                      00156900
&ZC                   SETC  '&XGROUPTOKEN'(1,1)                         00157000
                      AIF   (T'&ZC NE 'N').ZI8D                         00157100
&ZC                   SETC  '&XGROUPTOKEN'                              00157200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI8D                00157300
&ZCGPR                SETC  '=FL4''&XGROUPTOKEN'''                      00157400
.*                                                                      00157500
.ZI8D                 ANOP  ,                                           00157600
.*                                                                      00157700
&ZOPN                 SETA  &ZOPN+1                                     00157800
&ZOPL(&ZOPN)          SETC  ' '                                         00157900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00158000
&ZOPV(&ZOPN)          SETC  '40(4,1),&ZCGPR'                            00158100
&ZOPD(&ZOPN)          SETC  '++ &ZXGROUPTOKEN XGROUPTOKEN'              00158200
.*                                                                      00158300
.ZI8E                 ANOP  ,                                           00158400
.*-------------------------------------------------------------------   00158500
.***AI.L05 XMSGFETCH BL1                                                00158600
&ZW                   SETC  ''                                          00158700
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00158800
.*-------------------------------------------------------------------   00158900
.***AI.L08 XMSGFETCH "ALL"                                              00159000
.***      BL1'1XXXXXXX'                                                 00159100
         AIF   ('&XMSGFETCH' NE 'ALL').ZI10A                            00159200
&ZW                   SETC  '&ZW.1'                                     00159300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00159400
                      AGO   .ZI10C                                      00159500
.*                                                                      00159600
.ZI10A                ANOP  ,                                           00159700
&ZW                   SETC  '&ZW.0'                                     00159800
.ZI10C                ANOP  ,                                           00159900
.*-------------------------------------------------------------------   00160000
.***AI.L08 XMSGFETCH "MESSAGES"                                         00160100
.***      BL1'X1XXXXXX'                                                 00160200
         AIF   ('&XMSGFETCH' NE 'MESSAGES').ZI11A                       00160300
&ZW                   SETC  '&ZW.1'                                     00160400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00160500
                      AGO   .ZI11C                                      00160600
.*                                                                      00160700
.ZI11A                ANOP  ,                                           00160800
&ZW                   SETC  '&ZW.0'                                     00160900
.ZI11C                ANOP  ,                                           00161000
.*-------------------------------------------------------------------   00161100
.***AI.L08 XMSGFETCH "SYSEVENT"                                         00161200
.***      BL1'XX1XXXXX'                                                 00161300
         AIF   ('&XMSGFETCH' NE 'SYSEVENT').ZI12A                       00161400
&ZW                   SETC  '&ZW.1'                                     00161500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00161600
                      AGO   .ZI12C                                      00161700
.*                                                                      00161800
.ZI12A                ANOP  ,                                           00161900
&ZW                   SETC  '&ZW.0'                                     00162000
.ZI12C                ANOP  ,                                           00162100
.*-------------------------------------------------------------------   00162200
.***AI.L08 XMSGFETCH "ACKS"                                             00162300
.***      BL1'XXX1XXXX'                                                 00162400
         AIF   ('&XMSGFETCH' NE 'ACKS').ZI13A                           00162500
&ZW                   SETC  '&ZW.10000'                                 00162600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00162700
                      AGO   .ZI13C                                      00162800
.*                                                                      00162900
.ZI13A                ANOP  ,                                           00163000
&ZW                   SETC  '&ZW.00000'                                 00163100
.ZI13C                ANOP  ,                                           00163200
.*-------------------------------------------------------------------   00163300
.***AI.L11 XMSGFETCH BL1                                                00163400
                      AIF   ('&ZCLNG' NE 'YES').ZI13E  ALL ZERO BITS    00163500
&ZOPN                 SETA  &ZOPN+1                                     00163600
&ZOPL(&ZOPN)          SETC  ' '                                         00163700
&ZOPO(&ZOPN)          SETC  'OI'                                        00163800
&ZOPV(&ZOPN)          SETC  '44(1),B''&ZW'''                            00163900
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00164000
.ZI13E                ANOP  ,                                           00164100
.*-------------------------------------------------------------------   00164200
.***AI.L05 XKEYS BL1                                                    00164300
&ZW                   SETC  ''                                          00164400
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00164500
.*-------------------------------------------------------------------   00164600
.***AI.L08 XKEYS "MSGFETCH"                                             00164700
.***      BL1'1XXXXXXX'                                                 00164800
         AIF   ('&MSGFETCH' EQ '').ZI15A                                00164900
&ZW                   SETC  '&ZW.10000000'                              00165000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00165100
                      AGO   .ZI15C                                      00165200
.*                                                                      00165300
.ZI15A                ANOP  ,                                           00165400
&ZW                   SETC  '&ZW.00000000'                              00165500
.ZI15C                ANOP  ,                                           00165600
.*-------------------------------------------------------------------   00165700
.***AI.L11 XKEYS BL1                                                    00165800
                      AIF   ('&ZCLNG' NE 'YES').ZI15E  ALL ZERO BITS    00165900
&ZOPN                 SETA  &ZOPN+1                                     00166000
&ZOPL(&ZOPN)          SETC  ' '                                         00166100
&ZOPO(&ZOPN)          SETC  'OI'                                        00166200
&ZOPV(&ZOPN)          SETC  '45(1),B''&ZW'''                            00166300
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00166400
.ZI15E                ANOP  ,                                           00166500
.*-------------------------------------------------------------------   00166600
&ZOPN1                SETA &ZOPN                                        00166700
.*******************************************************************    00166800
.***  PROCESS IXZXIXRM OUTPUT PARAMETERS                                00166900
.*******************************************************************    00167000
                      ACTR  10000                                       00167100
.*------------------------------------------------------------------    00167200
.***AO.LVER01                                                           00167300
                      AIF  (&XPLISTVER LT 1).ZO5Z  PLVER                00167400
.*------------------------------------------------------------------    00167500
.***AO.L02 XDATA A                                                      00167600
         AIF   ('&ZXDATA' EQ 'OUTPUT').ZO5A  OUTPUT                     00167700
         AIF   ('&ZXDATA' NE 'INOUT').ZO5C  INOUT                       00167800
.ZO5A    AIF   ('&XDATA'(1,1) NE '(').ZO5B  ADDR IN GPR                 00167900
&ZCGPR   SETC  '&XDATA'(2,K'&XDATA-2)                                   00168000
&ZOPN                 SETA  &ZOPN+1                                     00168100
&ZOPL(&ZOPN)          SETC  ' '                                         00168200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00168300
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),24(1)'                         00168400
&ZOPD(&ZOPN)          SETC  '++ XDATA A'                                00168500
                      AGO   .ZO5C                                       00168600
.*                                                                      00168700
.ZO5B                 ANOP  ,                                           00168800
&ZAWRK   SETA  K'&XDATA                                                 00168900
         AIF   ('&XDATA'(&ZAWRK,1) NE ')').ZO5G                         00169000
&ZN      SETA  2                                                        00169100
.ZO5H    ANOP                                                           00169200
         AIF   (&ZN GE &ZAWRK).ZO5G                                     00169300
         AIF   ('&XDATA'(&ZN,1) NE '(').ZO5I                            00169400
&ZC      SETC  '&XDATA'(1,&ZN).'4'.','                                  00169500
&ZC      SETC  '&ZC'.'&XDATA'(&ZN+1,&ZAWRK-&ZN).',24(1)'                00169600
         AGO   .ZO5J                                                    00169700
.ZO5I    ANOP                                                           00169800
&ZN      SETA  &ZN+1                                                    00169900
         AGO   .ZO5H                                                    00170000
.ZO5G    ANOP                                                           00170100
&ZC      SETC  '&XDATA.(4),24(1)'                                       00170200
.ZO5J    ANOP                                                           00170300
&ZOPN                 SETA  &ZOPN+1                                     00170400
&ZOPL(&ZOPN)          SETC  ' '                                         00170500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00170600
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00170700
&ZOPD(&ZOPN)          SETC  '++ XDATA A'                                00170800
.ZO5C                 ANOP  ,                                           00170900
.*------------------------------------------------------------------    00171000
.***AO.LVER02                                                           00171100
.ZO5Z                 ANOP  ,                                           00171200
.*------------------------------------------------------------------    00171300
.***AO.LVER01                                                           00171400
                      AIF  (&XPLISTVER LT 1).ZO6Z  PLVER                00171500
.*------------------------------------------------------------------    00171600
.***AO.L02 XDATALEN F                                                   00171700
         AIF   ('&ZXDATALEN' EQ 'OUTPUT').ZO6A  OUTPUT                  00171800
         AIF   ('&ZXDATALEN' NE 'INOUT').ZO6C  INOUT                    00171900
.ZO6A    AIF   ('&XDATALEN'(1,1) NE '(').ZO6B  ADDR IN GPR              00172000
&ZCGPR   SETC  '&XDATALEN'(2,K'&XDATALEN-2)                             00172100
&ZOPN                 SETA  &ZOPN+1                                     00172200
&ZOPL(&ZOPN)          SETC  ' '                                         00172300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00172400
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),28(1)'                         00172500
&ZOPD(&ZOPN)          SETC  '++ XDATALEN F'                             00172600
                      AGO   .ZO6C                                       00172700
.*                                                                      00172800
.ZO6B                 ANOP  ,                                           00172900
&ZAWRK   SETA  K'&XDATALEN                                              00173000
         AIF   ('&XDATALEN'(&ZAWRK,1) NE ')').ZO6G                      00173100
&ZN      SETA  2                                                        00173200
.ZO6H    ANOP                                                           00173300
         AIF   (&ZN GE &ZAWRK).ZO6G                                     00173400
         AIF   ('&XDATALEN'(&ZN,1) NE '(').ZO6I                         00173500
&ZC      SETC  '&XDATALEN'(1,&ZN).'4'.','                               00173600
&ZC      SETC  '&ZC'.'&XDATALEN'(&ZN+1,&ZAWRK-&ZN).',28(1)'             00173700
         AGO   .ZO6J                                                    00173800
.ZO6I    ANOP                                                           00173900
&ZN      SETA  &ZN+1                                                    00174000
         AGO   .ZO6H                                                    00174100
.ZO6G    ANOP                                                           00174200
&ZC      SETC  '&XDATALEN.(4),28(1)'                                    00174300
.ZO6J    ANOP                                                           00174400
&ZOPN                 SETA  &ZOPN+1                                     00174500
&ZOPL(&ZOPN)          SETC  ' '                                         00174600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00174700
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00174800
&ZOPD(&ZOPN)          SETC  '++ XDATALEN F'                             00174900
.ZO6C                 ANOP  ,                                           00175000
.*------------------------------------------------------------------    00175100
.***AO.LVER02                                                           00175200
.ZO6Z                 ANOP  ,                                           00175300
.*------------------------------------------------------------------    00175400
.***AO.LVER01                                                           00175500
                      AIF  (&XPLISTVER LT 1).ZO7Z  PLVER                00175600
.*------------------------------------------------------------------    00175700
.***AO.L02 XMSGTOKEN XL8                                                00175800
         AIF   ('&ZXMSGTOKEN' EQ 'OUTPUT').ZO7A  OUTPUT                 00175900
         AIF   ('&ZXMSGTOKEN' NE 'INOUT').ZO7C  INOUT                   00176000
.ZO7A    AIF   ('&XMSGTOKEN'(1,1) NE '(').ZO7B  ADDR IN GPR             00176100
&ZCGPR   SETC  '&XMSGTOKEN'(2,K'&XMSGTOKEN-2)                           00176200
&ZOPN                 SETA  &ZOPN+1                                     00176300
&ZOPL(&ZOPN)          SETC  ' '                                         00176400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00176500
&ZOPV(&ZOPN)          SETC  '0(8,&ZCGPR),32(1)'                         00176600
&ZOPD(&ZOPN)          SETC  '++ XMSGTOKEN XL8'                          00176700
                      AGO   .ZO7C                                       00176800
.*                                                                      00176900
.ZO7B                 ANOP  ,                                           00177000
&ZAWRK   SETA  K'&XMSGTOKEN                                             00177100
         AIF   ('&XMSGTOKEN'(&ZAWRK,1) NE ')').ZO7G                     00177200
&ZN      SETA  2                                                        00177300
.ZO7H    ANOP                                                           00177400
         AIF   (&ZN GE &ZAWRK).ZO7G                                     00177500
         AIF   ('&XMSGTOKEN'(&ZN,1) NE '(').ZO7I                        00177600
&ZC      SETC  '&XMSGTOKEN'(1,&ZN).'8'.','                              00177700
&ZC      SETC  '&ZC'.'&XMSGTOKEN'(&ZN+1,&ZAWRK-&ZN).',32(1)'            00177800
         AGO   .ZO7J                                                    00177900
.ZO7I    ANOP                                                           00178000
&ZN      SETA  &ZN+1                                                    00178100
         AGO   .ZO7H                                                    00178200
.ZO7G    ANOP                                                           00178300
&ZC      SETC  '&XMSGTOKEN.(8),32(1)'                                   00178400
.ZO7J    ANOP                                                           00178500
&ZOPN                 SETA  &ZOPN+1                                     00178600
&ZOPL(&ZOPN)          SETC  ' '                                         00178700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00178800
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00178900
&ZOPD(&ZOPN)          SETC  '++ XMSGTOKEN XL8'                          00179000
.ZO7C                 ANOP  ,                                           00179100
.*------------------------------------------------------------------    00179200
.***AO.LVER02                                                           00179300
.ZO7Z                 ANOP  ,                                           00179400
.*******************************************************************    00179500
.***AO.X01  LABEL TO BYPASS INVOCATION                                  00179600
.*******************************************************************    00179700
&ZOPN                 SETA  &ZOPN+1                                     00179800
&ZOPL(&ZOPN)          SETC  'AMGE&SYSNDX'                               00179900
&ZOPO(&ZOPN)          SETC  'DS'                                        00180000
&ZOPV(&ZOPN)          SETC  '0H'                                        00180100
&ZOPD(&ZOPN)          SETC  '++ BYPASS INVOCATION'                      00180200
.*******************************************************************    00180300
.***AO.X02  RETURN CODE PROCESSING                                      00180400
.*******************************************************************    00180500
                      AIF   (N'&RTNCODE LE 0).ZMRETX                    00180600
                      AIF   ('&XRTNCODE'(1,1) EQ '(').ZMRET2            00180700
                      AIF   ('&XRTNCODE' EQ 'GPR15').ZMRETX             00180800
                      AIF   ('&XRTNCODE' EQ 'REG15').ZMRETX             00180900
                      AIF   ('&XRTNCODE' EQ 'R15').ZMRETX               00181000
                      AIF   ('&XRTNCODE' EQ '15').ZMRETX                00181100
&ZOPN                 SETA  &ZOPN+1                                     00181200
&ZOPL(&ZOPN)          SETC  ' '                                         00181300
&ZOPO(&ZOPN)          SETC  'ST'                                        00181400
&ZOPV(&ZOPN)          SETC  '15,&XRTNCODE'                              00181500
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00181600
                      AGO   .ZMRETX                                     00181700
.*                                                                      00181800
.ZMRET2               ANOP  ,                                           00181900
&ZCGPR                SETC  '&XRTNCODE'(2,K'&XRTNCODE-2)                00182000
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00182100
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00182200
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00182300
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00182400
&ZOPN                 SETA  &ZOPN+1                                     00182500
&ZOPL(&ZOPN)          SETC  ' '                                         00182600
&ZOPO(&ZOPN)          SETC  'LR'                                        00182700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00182800
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00182900
.ZMRETX               ANOP  ,                                           00183000
.*******************************************************************    00183100
.***AO.X03  REASON CODE PROCESSING                                      00183200
.*******************************************************************    00183300
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00183400
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00183500
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00183600
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00183700
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00183800
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00183900
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00184000
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00184100
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00184200
&ZOPN                 SETA  &ZOPN+1                                     00184300
&ZOPL(&ZOPN)          SETC  ' '                                         00184400
&ZOPO(&ZOPN)          SETC  'ST'                                        00184500
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00184600
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00184700
                      AGO   .ZMRSNX                                     00184800
.*                                                                      00184900
.ZMRSN2               ANOP  ,                                           00185000
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00185100
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00185200
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00185300
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00185400
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00185500
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00185600
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00185700
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00185800
&ZOPN                 SETA  &ZOPN+1                                     00185900
&ZOPL(&ZOPN)          SETC  ' '                                         00186000
&ZOPO(&ZOPN)          SETC  'LR'                                        00186100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00186200
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00186300
.ZMRSNX               ANOP  ,                                           00186400
.*******************************************************************    00186500
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00186600
.*******************************************************************    00186700
.ZMFLX                ANOP  ,              MF=L PROCESSING              00186800
.*******************************************************************    00186900
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00187000
.*******************************************************************    00187100
                      ACTR  10000                                       00187200
.*                                                                      00187300
                      LCLA  &ZLC           COLUMN POSITION              00187400
                      LCLA  &ZOPX          LIST TABLE INDEX             00187500
                      LCLC  &ZLL           LABEL                        00187600
                      LCLC  &ZLOP          OPERATION                    00187700
                      LCLC  &ZLV           VALUE                        00187800
                      LCLC  &ZLD           DESCRIPTION                  00187900
.*                                                                      00188000
&ZOPX                 SETA  1                                           00188100
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00188200
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00188300
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00188400
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00188500
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00188600
                      AIF   (K'&ZLD LE 0).ZL5                           00188700
&ZLC                  SETA  35             COMMENT COLUMN               00188800
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00188900
&ZLC                  SETA  33             COMMMENT COLUMN              00189000
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00189100
&ZLV                  SETC  '&ZLV'.' '                                  00189200
                      AGO   .ZL3                                        00189300
.*                                                                      00189400
.ZL4                  ANOP  ,                                           00189500
&ZLV                  SETC  '&ZLV'.' '                                  00189600
.ZL5                  ANOP  ,                                           00189700
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00189800
.*                                                                      00189900
&ZLL     &ZLOP &ZLV                                                     00190000
.*                                                                      00190100
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00190200
                      AGO   .ZL2           CONTINUE LOOPING             00190300
.*                                                                      00190400
.ZLX                  ANOP  ,                                           00190500
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00190600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00190700
         GBLC  &ANVIRON           JES2 environment variable             00190800
         GBLB  &J3MN              JES3 Main Task environment            00190900
         GBLB  &J3ST              JES3 Subtask environment              00191000
         GBLB  &J3FSS             JES3 FSS environment                  00191100
         GBLB  &JSXCF             JESXCF environment                    00191200
         AIF   ('&ANVIRON' EQ 'JES2').IXRM050 JES2 Main task            00191300
         AIF   ('&ANVIRON' EQ 'SUBTASK').IXRM050  JES2 Sub task         00191400
         AIF   (&J3MN).IXRM050    Are we running under JES3 Main task   00191500
         AIF   (&J3ST).IXRM050    Are we running under JES3 Sub task    00191600
         AIF   (&J3FSS).IXRM050   Are we running under JES3 FSS         00191700
         MNOTE 8,'IXZ0001 Running in an invalid environment'            00191800
.IXRM050 ANOP                                                           00191900
         AIF   ('&GROUPTOKEN'(1,1) NE '(').IXRM100                      00192000
         LR    14,&GROUPTOKEN     Load the address of the group token   00192100
         L     14,0(14)           Load the group token                  00192200
         AGO   .IXRM150                                                 00192300
.IXRM100 ANOP                                                           00192400
         L     14,&GROUPTOKEN     Load the group token                  00192500
.IXRM150 ANOP                                                           00192600
         L     14,56(14)          Load the PC number of the             00192700
*                                 routine to be called                  00192800
         PC    0(14)              Call the mailbox retrieve message     00192900
*                                 routine                               00193000
         AIF   ('&XMFCTRL'(1,1) NE '(').IXRM200                         00193100
         LR    1,&XMFCTRL         Restore the parameter list address    00193200
         AGO   .IXRM250                                                 00193300
.IXRM200 ANOP                                                           00193400
         LA    1,&XMFCTRL         Restore the parameter list address    00193500
.IXRM250 ANOP                                                           00193600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00193700
.ZLINKX               ANOP  ,                                           00193800
.*******************************************************************    00193900
.***AP.X01  FORMAT GENERATED CODE                                       00194000
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00194100
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00194200
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00194300
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00194400
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00194500
                      AIF   (K'&ZLD LE 0).ZL51                          00194600
&ZLC                  SETA  35             COMMENT COLUMN               00194700
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00194800
&ZLC                  SETA  33             COMMENT COLUMN               00194900
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00195000
&ZLV                  SETC  '&ZLV'.' '                                  00195100
                      AGO   .ZL31                                       00195200
.*                                                                      00195300
.ZL41                 ANOP  ,                                           00195400
&ZLV                  SETC  '&ZLV'.' '                                  00195500
.ZL51                 ANOP  ,                                           00195600
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00195700
.*                                                                      00195800
&ZLL     &ZLOP &ZLV                                                     00195900
.*                                                                      00196000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00196100
                      AGO   .ZL21          CONTINUE LOOPING             00196200
.*                                                                      00196300
.ZLX1                 ANOP  ,                                           00196400
.*******************************************************************    00196500
.***AP.X02  END OF IXZXIXRM MACRO                                       00196600
&ZIXZXIXRM            SETC  'YES'          SET IXZXIXRM USED            00196700
         POP   PRINT                                                    00196800
*                                            IXZXIXRM-1                 00196900
         SPACE 1                                                        00197000
.ZLX2                 ANOP  ,                                           00197100
         MEND                                                           00197200
**********************************************************************/ 00197300
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00197400
*%IXZXIXRM: MACRO KEYS(MBOXNAME,MSGFETCH,DATA,DATALEN,MSGTOKEN,         00197500
*                 GROUPTOKEN,RTNCODE,RSNCODE,PLISTVER,MF);              00197600
*  ANS('?'||MACLABEL||' '||'IXZPIXRM '||MACLIST||                       00197700
*         ' '||MACKEYS||';') COL(MACLMAR);                              00197800
*%END IXZXIXRM;                                                         00197900
