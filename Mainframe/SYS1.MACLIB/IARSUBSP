*/**** START OF SPECIFICATIONS **************************************** 00001000
*                                                                     * 00002000
*                                                                     * 00003000
*01* MACRO NAME:  IARSUBSP                              -11/10/99-<0> * 00004000
*                                                                     * 00005000
*                                                                     * 00006000
*01* DESCRIPTIVE NAME:  Subspace Services                             * 00007000
*                                                                     * 00008000
*01* PROPRIETARY STATEMENT:                                           * 00009000
*                                                                     * 00010000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00011000
*     5647-A01 (C) COPYRIGHT IBM CORP. 1993, 2000                     * 00013000
*                                                                     * 00015000
* STATUS= HBB7703                                                     * 00016000
*                                                                     * 00017000
*                                                                     * 00018000
*                                                                     * 00019000
*01* FUNCTION:                                                        * 00020000
*                                                                     * 00021000
*                                                                     * 00022000
*      Subspace services (IARSUBSP) provides an interface to          * 00023000
*      identify, use, and manage subspaces.                           * 00024000
*                                                                     * 00025000
*      The IARSUBSP service is a GUPI interface.  The following       * 00026000
*      services are provided:                                         * 00027000
*                                                                     * 00028000
*                                                                     * 00029000
*      IDENTIFY       Identify ranges of the address space storage    * 00030000
*                     eligible to be assigned to a subspace.          * 00031000
*                                                                     * 00032000
*      CREATE         Create a subspace.                              * 00033000
*                                                                     * 00034000
*      ASSIGN         Assign an identified range of storage to a      * 00035000
*                     subspace.                                       * 00036000
*                                                                     * 00037000
*      UNASSIGN       Unassign an identified range of storage from a  * 00038000
*                     subspace.                                       * 00039000
*                                                                     * 00040000
*      DELETE         Delete a subspace.                              * 00041000
*                                                                     * 00042000
*      UNIDENTIFY     Unidentify address space storage, making        * 00043000
*                     storage ineligible to be assigned to a          * 00044000
*                     subspace.                                       * 00045000
*                                                                     * 00045200
*      SHARE          To indicate to RSM that a Subspace Task has     * 00045400
*                     been created.                                   * 00045600
*                                                                     * 00046000
*                                                                     * 00047000
*                                                                     * 00047500
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00048000
*                                                                     * 00049000
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00050000
*                                                                     * 00051000
*01* ENVIRONMENT:                                                     * 00052000
*                                                                     * 00053000
*                                                                     * 00054000
*      Minimum authorization: Supervisor state or system (0-7) PSW    * 00055000
*                        key for the IDENTIFY, CREATE, DELETE, and    * 00056000
*                        UNIDENTIFY services.                         * 00057000
*                                                                     * 00058000
*                        Any state and any PSW key for the ASSIGN and * 00059000
*                        UNASSIGN services.                           * 00060000
*                                                                     * 00061000
*      Dispatchable unit mode: Task mode for the IDENTIFY, CREATE,    * 00061600
*                        DELETE, and UNIDENTIFY services.             * 00062200
*                                                                     * 00063000
*                        Task mode or SRB mode for the ASSIGN and     * 00063200
*                        UNASSIGN services.                           * 00063400
*                                                                     * 00063600
*      Cross Memory Mode: PASN=HASN=SASN for the IDENTIFY, CREATE,    * 00063800
*                        DELETE, and UNIDENTIFY services.             * 00064000
*                                                                     * 00064200
*                        PASN=HASN for the ASSIGN and UNASSIGN        * 00064400
*                        services.                                    * 00064600
*                                                                     * 00065000
*      AMODE:            31-bit.                                      * 00066000
*                                                                     * 00067000
*      ASC mode:         Primary or Access Register.                  * 00068000
*                                                                     * 00069000
*      Interrupt status: Enabled for I/O and external interrupts.     * 00070000
*                                                                     * 00071000
*      Locks:            No locks held.                               * 00072000
*                                                                     * 00073000
*      Control parameters: Control parameters must be in the primary  * 00074000
*                        address space.                               * 00075000
*                                                                     * 00076000
*                                                                     * 00077000
*                                                                     * 00077500
*   PROGRAMMING REQUIREMENTS:                                         * 00089200
*                                                                     * 00101000
*                                                                     * 00102000
*      o   The user must GETMAIN (or STORAGE (OBTAIN)) the storage    * 00103000
*          prior to a SUBSPACE IDENTIFY.  Also, this storage must not * 00104000
*          be FREEMAINed (or freed via STORAGE (RELEASE)) until after * 00105000
*          the IARSUBSP UNIDENTIFY.                                   * 00106000
*                                                                     * 00107000
*      o   The GETMAINed storage must be within a pageable private    * 00108000
*          subpool.                                                   * 00109000
*                                                                     * 00110000
*      o   The user must use the IARSUBSP IDENTIFY service to         * 00110700
*          identify the storage prior to using the IARSUBSP ASSIGN    * 00111400
*          service.                                                   * 00112100
*                                                                     * 00113000
*      o   The user must use the IARSUBSP CREATE service to create    * 00114000
*          subspaces prior to using the IARSUBSP ASSIGN service.      * 00115000
*                                                                     * 00116000
*                                                                     * 00117000
*                                                                     * 00117500
*   RESTRICTIONS:  None.                                              * 00118200
*                                                                     * 00119000
*   PERFORMANCE IMPLICATIONS:  None.                                  * 00120000
*                                                                     * 00121000
*01* SYNTAX:                                                          * 00122000
*                                                                     * 00123000
*[xlabel]  IARSUBSP    IDENTIFY                                      * 00124000
*                    |    [,NUMRANGE=xnumrange|1]                   * 00125000
*                    |     ,RANGLIST=xranglist                        * 00126000
*                     ,CREATE                                        * 00127000
*                    |     ,NAME=xname                                * 00128000
*                    |   [,GENNAME=NO]                               * 00129000
*                    |   [,GENNAME=COND                              * 00130000
*                    |   |    [,OUTNAME=xoutname]]                    * 00131000
*                    |   [,GENNAME=YES                               * 00132000
*                    |        [,OUTNAME=xoutname]]                    * 00133000
*                    |     ,STOKEN=xstoken                            * 00134000
*                     ,ASSIGN                                        * 00135000
*                    |     ,STOKEN=xstoken                            * 00136000
*                    |    [,NUMRANGE=xnumrange|1]                   * 00137000
*                    |     ,RANGLIST=xranglist                        * 00138000
*                     ,UNASSIGN                                      * 00139000
*                    |     ,STOKEN=xstoken                            * 00140000
*                    |    [,NUMRANGE=xnumrange|1]                   * 00141000
*                    |     ,RANGLIST=xranglist                        * 00142000
*                     ,DELETE                                        * 00143000
*                    |     ,STOKEN=xstoken                            * 00144000
*                     ,UNIDENTIFY                                    * 00144500
*                    |    [,NUMRANGE=xnumrange|1]                   * 00145000
*                    |     ,RANGLIST=xranglist                        * 00145500
*                     ,SHARE                                         * 00146000
*                        [,ACTION=ATTACH                             * 00146500
*                        |     ,ASASTEO=xasasteo]                     * 00147000
*                     [,PLISTVER=xplistver|IMPLIED_VERSION]         * 00147500
*                    [,MF=S]                                         * 00148000
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00149000
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00150000
*                                                                     * 00151000
*                                                                     * 00152000
*      Where:                                                         * 00153000
*                                                                     * 00154000
*                                                                     * 00155000
*      [xlabel]                                                       * 00156000
*          is an optional symbol, starting in column 1, that is the   * 00157000
*          name on the IARSUBSP macro invocation.  The name must      * 00158000
*          conform to the rules for an ordinary assembler language    * 00159000
*          symbol.                                                    * 00160000
*          DEFAULT: No name.                                          * 00161000
*                                                                     * 00162000
*                                                                     * 00163000
*                                                                     * 00164000
*                                                                     * 00164500
*      The following is a set of mutually exclusive keys.  This set   * 00165000
*      is required; only one key must be specified.                   * 00166000
*                                                                     * 00167000
*                                                                     * 00168000
*      IDENTIFY                                                       * 00169000
*          Requests that the system identify ranges of the address    * 00170000
*          space storage eligible to be assigned to a subspace.       * 00171000
*                                                                     * 00172000
*          If the system does not support subspace processing, then   * 00173000
*          the IDENTIFY request will fail with a non-zero return      * 00174000
*          code.                                                      * 00175000
*                                                                     * 00176000
*          Once the identify service is complete, the range(s) of     * 00177000
*          storage may not be referenced by any program executing     * 00178000
*          with subspace active.  Identified areas of storage cannot  * 00179000
*          be referenced with subspace active until the storage is    * 00180000
*          assigned.                                                  * 00181000
*                                                                     * 00182000
*          Note that the address space storage may not be released    * 00183000
*          (via a FREEMAIN or STORAGE (RELEASE)) while an IDENTIFY is * 00184000
*          outstanding. An attempt to do so will result in an abend.  * 00185000
*                                                                     * 00186000
*          The identified storage ranges must be owned by the task    * 00187000
*          requesting the identify, or must be owned by a task higher * 00188000
*          in the task hierarchy.  Additionally, the identified       * 00189000
*          storage may not be passed to a lower task (via GSPL        * 00190000
*          (give-subpool) on the ATTACH macro).  If an attempt is     * 00191000
*          made to pass identified storage to a subtask, the ATTACH   * 00192000
*          will be ABENDed.                                           * 00193000
*                                                                     * 00194000
*          Note also that the ranges of storage specified must be     * 00195000
*          within the pageable private storage of the address space.  * 00196000
*                                                                     * 00197000
*          If a range in the IDENTIFY range list contains a subrange  * 00197100
*          which is not valid to be IDENTIFY'ed, then the storage     * 00197200
*          ranges up to the error subrange are IDENTIFY'ed and the    * 00197300
*          storage ranges starting at the error subrange are not      * 00197400
*          processed.  An abend will be issued and general purpose    * 00197500
*          registers two and three will contain the address of the    * 00197600
*          range list element containing the error subrange and the   * 00197700
*          storage address of the error subrange, respectively.       * 00197800
*                                                                     * 00197900
*          The system will assign ownership of the IDENTIFY attribute * 00198000
*          of the storage to the first task in the address space      * 00199000
*          which successfully performs the IARSUBSP IDENTIFY.  On a   * 00199500
*          subsequent IDENTIFY, the storage must be owned by the      * 00200000
*          IDENTIFY-owning task or must be owned by a task higher in  * 00200500
*          the task hierarchy.  If the IDENTIFY-owning task           * 00201000
*          terminates without requesting the IARSUBSP UNIDENTIFY      * 00201500
*          service, the system will perform the UNIDENTIFY.  Once all * 00202000
*          UNIDENTIFYs are complete, the next IDENTIFY is considered  * 00202500
*          to be the first IDENTIFY.                                  * 00203000
*                                                                     * 00204000
*                                                                     * 00205000
*          [NUMRANGE=xnumrange|1]                                   * 00206000
*              is the name (RS-type), or address in register          * 00207000
*              (2)-(12), of an optional fullword input variable that  * 00208000
*              specifies the number of entries in the supplied range  * 00209000
*              list.  The range list is used to specify one or more   * 00210000
*              virtual storage ranges which are to be used to         * 00211000
*              identify local storage ranges for each subspace.  The  * 00212000
*              value specified must be a positive integer, no greater * 00213000
*              than 16.                                               * 00214000
*                                                                     * 00215000
*              DEFAULT: 1.                                            * 00216000
*                                                                     * 00217000
*              If NUMRANGE is omitted, then only one virtual range    * 00218000
*              will be identified.                                    * 00219000
*                                                                     * 00220000
*                                                                     * 00221000
*                                                                     * 00222000
*                                                                     * 00222500
*          RANGLIST=xranglist                                         * 00223000
*              is the name (RS-type), or address in register          * 00224000
*              (2)-(12), of a required 4 byte input that contains the * 00225000
*              address of a range list.  The range list consists of a * 00226000
*              number of entries (as specified by NUMRANGE) where     * 00227000
*              each entry specifies the start address of the address  * 00228000
*              space storage to be IDENTIFY'ed and the amount of      * 00229000
*              storage to be IDENTIFY'ed.                             * 00230000
*                                                                     * 00231000
*              More specifically, each entry consists of two words as * 00232000
*              follows:                                               * 00233000
*                                                                     * 00234000
*                                                                     * 00235000
*                 FIRST WORD    contains the starting virtual address * 00235800
*                               of the storage range to be            * 00236600
*                               identified.  The specified address    * 00237400
*                               must be on a segment (1 Megabyte)     * 00238200
*                               boundary.                             * 00239000
*                                                                     * 00240000
*                 SECOND WORD   contains the number of pages (4K      * 00240800
*                               bytes) to be IDENTIFY'ed.  This value * 00241600
*                               must be a multiple of 256, thereby    * 00242400
*                               resulting in storage ranges being     * 00243200
*                               full segments, on segment boundaries. * 00244000
*                                                                     * 00244800
*                                                                     * 00246000
*              An example of how to code the RANGLIST parameter when  * 00247000
*              NUMRANGE=3 is as follows:                              * 00248000
*                                                                     * 00249000
*                                                                     * 00250000
*                 NUMRANGE=3,RANGLIST=(5)                             * 00251000
*                    or                                               * 00252000
*                 NUMRANGE=3,RANGLIST=RANGADDR                        * 00253000
*                                              <------8 bytes------>  * 00254000
*                 .-------.     .-------.     .---------------------. * 00255000
*                 |       +---->|       +---->|Start addr| amount   | * 00256000
*                 '-------'     '-------'     |----------+----------| * 00257000
*                 Register 5    RANGADDR      |Start addr| amount   | * 00258000
*                               (fullword)    |----------+----------| * 00259000
*                                             |Start addr| amount   | * 00260000
*                                             '---------------------' * 00261000
*                                                                     * 00262000
*                                                                     * 00263000
*              The range list must be addressable in the caller's     * 00264000
*              primary address space.  Each range (i.e., each storage * 00264700
*              range listed in the range list) must reside in a       * 00265400
*              single subpool and must be a pageable subpool.         * 00266100
*                                                                     * 00267000
*                                                                     * 00268000
*                                                                     * 00268500
*      CREATE                                                         * 00269000
*          Requests that the system create a subspace.                * 00270000
*                                                                     * 00271000
*          If the system does not support subspace processing, then   * 00272000
*          the CREATE request will fail with a non-zero return code.  * 00273000
*                                                                     * 00274000
*          Note that even though the subspace is created, it may not  * 00275000
*          be referenced (i.e., a program may not execute in this     * 00276000
*          subspace) until after the STOKEN is added onto an address  * 00277000
*          space's dispatchable unit access list (via ALESERV macro). * 00278000
*                                                                     * 00279000
*          The system will assign ownership of the subspace to the    * 00280000
*          current task which performed the IARSUBSP CREATE. If this  * 00281000
*          task terminates without requesting the IARSUBSP DELETE     * 00282000
*          service, the system will perform the DELETE.               * 00283000
*                                                                     * 00284000
*                                                                     * 00285000
*          NAME=xname                                                 * 00286000
*              is the name (RS-type), or address in register          * 00287000
*              (2)-(12), of a required 8 character input variable or  * 00288000
*              constant that contains either (1) the name to be       * 00289000
*              assigned to the subspace being created (if GENNAME=YES * 00290000
*              is not specified) or (2) the suffix for the subspace   * 00291000
*              name being created (if GENNAME=YES is specified).      * 00292000
*              Subspace names must be unique within the owning        * 00293000
*              address space.                                         * 00294000
*                                                                     * 00295000
*              If GENNAME=NO is specified or defaulted or             * 00296000
*              GENNAME=COND is specified, the input name must be made * 00297000
*              up of alphanumeric or national characters, left        * 00297700
*              justified, and padded on the right with blanks, and    * 00298400
*              may not start with a numeric.                          * 00299100
*                                                                     * 00300000
*              If GENNAME=COND is specified and the input name is not * 00301000
*              unique, a unique one will be returned, of the format:  * 00302000
*              xxxxxPPP, where xxxxx is generated and PPP is taken    * 00303000
*              from the PREFIX of the input name.                     * 00304000
*                                                                     * 00305000
*              If GENNAME=YES is specified, the NAME field will be    * 00306000
*              used as the suffix for the subspace name being         * 00307000
*              created.  This suffix must follow the rules of a       * 00308000
*              subspace name stated above except that the leading     * 00309000
*              character may be a numeric.                            * 00310000
*                                                                     * 00311000
*              The subspace name is used to identify the subspace.    * 00312000
*                                                                     * 00313000
*                                                                     * 00314000
*                                                                     * 00315000
*                                                                     * 00315500
*          [GENNAME=NO|COND|YES]                                    * 00316000
*              is an optional keyword input that indicates whether    * 00317000
*              the system should generate a subspace name for the new * 00318000
*              subspace to be created.                                * 00319000
*                                                                     * 00320000
*              If the system does generate a subspace name, it will   * 00321000
*              be returned in the variable specified by the OUTNAME   * 00322000
*              keyword.  The generated name will start with a         * 00323000
*              numeric, followed by four additional characters,       * 00324000
*              followed by the first three characters of the user     * 00325000
*              supplied name (or the entire name if less than three   * 00326000
*              characters).                                           * 00327000
*                                                                     * 00328000
*              If the system needs to generate a subspace name and    * 00329000
*              the set of unique name prefixes for the address space  * 00330000
*              is currently exhausted, then the request will be       * 00331000
*              rejected with a return code of 08 and a reason code of * 00332000
*              xx0212xx.                                              * 00333000
*                                                                     * 00334000
*              DEFAULT: NO                                            * 00335000
*                                                                     * 00336000
*                                                                     * 00337000
*              [GENNAME=NO]                                           * 00338000
*                  Specifies that the system is not to generate a     * 00339000
*                  subspace name.  The user must supply a subspace    * 00340000
*                  name that is unique within the address space of    * 00341000
*                  the subspace owner for the request to be accepted. * 00342000
*                                                                     * 00343000
*              [GENNAME=COND                                          * 00344000
*                  Specifies that the system should generate a unique * 00345000
*                  name for the subspace only if the user supplied    * 00346000
*                  name is found to be already in use in the address  * 00347000
*                  space of the subspace owner.                       * 00348000
*                                                                     * 00349000
*                                                                     * 00350000
*                  [OUTNAME=xoutname]]                                * 00351000
*                      is the name (RS-type), or address in register  * 00352000
*                      (2)-(12), of an optional 8 character output    * 00353000
*                      variable that will contain the name assigned   * 00354000
*                      to the subspace created.                       * 00355000
*                                                                     * 00356000
*                                                                     * 00357000
*                                                                     * 00357500
*              [GENNAME=YES                                           * 00358000
*                  Specifies that the system should always generate a * 00359000
*                  unique name for the subspace.  The user must still * 00360000
*                  supply a subspace name via the NAME keyword since  * 00361000
*                  the system generated name will consist, in part,   * 00362000
*                  of this supplied name.                             * 00363000
*                                                                     * 00364000
*                                                                     * 00365000
*                  [OUTNAME=xoutname]]                                * 00366000
*                      is the name (RS-type), or address in register  * 00367000
*                      (2)-(12), of an optional 8 character output    * 00368000
*                      variable that will contain the name assigned   * 00369000
*                      to the subspace created.                       * 00370000
*                                                                     * 00371000
*                                                                     * 00372000
*                                                                     * 00373000
*                                                                     * 00374000
*                                                                     * 00375000
*                                                                     * 00375200
*                                                                     * 00375400
*                                                                     * 00375600
*          STOKEN=xstoken                                             * 00376000
*              is the name (RS-type), or address in register          * 00377000
*              (2)-(12), of a required 8 character output variable    * 00378000
*              that will contain the STOKEN for the subspace being    * 00379000
*              created.  The STOKEN is a unique identifier for a      * 00380000
*              subspace.                                              * 00381000
*                                                                     * 00382000
*              The STOKEN is used to specify the subspace to other    * 00383000
*              IARSUBSP services.  It is also used to gain access to  * 00384000
*              the subspace via the ALESERV macro.                    * 00385000
*                                                                     * 00386000
*                                                                     * 00387000
*                                                                     * 00387500
*      ASSIGN                                                         * 00388000
*          Requests that the system assign an identified range of     * 00389000
*          storage to a subspace.                                     * 00390000
*                                                                     * 00391000
*          Once the assign service is complete, the assigned range(s) * 00392000
*          of storage may be referenced while executing subspace      * 00393000
*          active for that subspace.                                  * 00394000
*                                                                     * 00395000
*          A range of storage may be ASSIGNed only after it has been  * 00396000
*          IDENTIFY'ed.  And once ASSIGNed to a subspace, that        * 00397000
*          storage range may not be ASSIGNed to any other subspace    * 00398000
*          until after the storage range is UNASSIGNed.  If a range   * 00398400
*          of storage is already assigned to the specified subspace,  * 00398800
*          that range is skipped and the assign will complete with a  * 00399200
*          return code of 4.                                          * 00399600
*                                                                     * 00400000
*          If a range in the ASSIGN range list contains a subrange    * 00400300
*          which is not valid to be assigned, then the storage ranges * 00400600
*          up to the error subrange are assigned and the storage      * 00400900
*          ranges starting at the error subrange are not processed.   * 00401200
*          An abend will be issued and general purpose registers two  * 00401500
*          and three will contain the address of the range list       * 00401800
*          element containing the error subrange and the storage      * 00402100
*          address of the error subrange, respectively.               * 00402400
*                                                                     * 00403000
*                                                                     * 00404000
*          STOKEN=xstoken                                             * 00405000
*              is the name (RS-type), or address in register          * 00406000
*              (2)-(12), of a required 8 character input variable     * 00407000
*              that specifies the subspace.  The STOKEN was returned  * 00408000
*              by the CREATE service.                                 * 00409000
*                                                                     * 00410000
*                                                                     * 00411000
*                                                                     * 00412000
*                                                                     * 00412500
*          [NUMRANGE=xnumrange|1]                                   * 00413000
*              is the name (RS-type), or address in register          * 00414000
*              (2)-(12), of an optional fullword input variable that  * 00415000
*              specifies the number of entries in the supplied range  * 00416000
*              list.  The range list is used to specify one or more   * 00417000
*              virtual storage ranges which are to be used to assign  * 00418000
*              local storage ranges for the subspace.  The value      * 00419000
*              specified must be a positive integer, no greater than  * 00420000
*              16.                                                    * 00421000
*                                                                     * 00422000
*              DEFAULT: 1.                                            * 00423000
*                                                                     * 00424000
*              If NUMRANGE is omitted, then only one virtual range    * 00425000
*              will be assigned.                                      * 00426000
*                                                                     * 00427000
*                                                                     * 00428000
*                                                                     * 00429000
*                                                                     * 00429500
*          RANGLIST=xranglist                                         * 00430000
*              is the name (RS-type), or address in register          * 00431000
*              (2)-(12), of a required 4 byte input that contains the * 00432000
*              address of a range list.  The range list consists of a * 00433000
*              number of entries (as specified by NUMRANGE) where     * 00434000
*              each entry specifies the start address of the address  * 00435000
*              space storage to be ASSIGNed and the amount of storage * 00436000
*              to be ASSIGNed.                                        * 00437000
*                                                                     * 00438000
*              More specifically, each entry consists of two words as * 00439000
*              follows:                                               * 00440000
*                                                                     * 00441000
*                                                                     * 00442000
*                 FIRST WORD    contains the starting virtual address * 00443000
*                               of the storage range to be assigned   * 00444000
*                               to the subspace.  The specified       * 00445000
*                               address must be on a page (4K byte)   * 00446000
*                               boundary for storage below 16-Meg,    * 00447000
*                               and must be on a segment (1 Megabyte) * 00448000
*                               boundary for storage above 16-Meg.    * 00449000
*                                                                     * 00450000
*                 SECOND WORD   contains the number of pages (4K      * 00450800
*                               bytes) to be ASSIGNed.  For storage   * 00451600
*                               above 16-Meg, this value must be a    * 00452400
*                               multiple of 256, thereby resulting in * 00453200
*                               storage ranges being full segments,   * 00454000
*                               on segment boundaries.  For storage   * 00454800
*                               below 16-Meg, this value may be any   * 00455600
*                               positive value, thereby resulting in  * 00456400
*                               storage ranges being full pages, on   * 00457200
*                               page boundaries.                      * 00458000
*                                                                     * 00458800
*                                                                     * 00460000
*                                                                     * 00461000
*              The range list must be addressable in the caller's     * 00462000
*              primary address space.                                 * 00463000
*                                                                     * 00464000
*                                                                     * 00465000
*                                                                     * 00465500
*      UNASSIGN                                                       * 00466000
*          Requests that the system unassign an identified range of   * 00467000
*          storage from a subspace.                                   * 00468000
*                                                                     * 00469000
*          Once the unassign service is complete, the unassigned      * 00470000
*          range(s) of storage may no longer be referenced in the     * 00471000
*          subspace.  If a range of storage is not assigned to the    * 00471200
*          specified subspace, that range is skipped and the unassign * 00471400
*          will complete with a return code of 4.  Note that a        * 00471600
*          storage range may not have a starting address below 16-meg * 00471800
*          and an ending range which results in an address above      * 00472000
*          16-meg.  In that case, the user is abended rather than     * 00472200
*          returned to with a return code of 4.                       * 00472400
*                                                                     * 00473000
*          If a range in the UNASSIGN range list contains a subrange  * 00473300
*          which is not valid to be unassigned, then the storage      * 00473600
*          ranges up to the error subrange are unassigned and the     * 00473900
*          storage ranges starting at the error subrange are not      * 00474200
*          processed.  An abend will be issued and general purpose    * 00474500
*          registers two and three will contain the address of the    * 00474800
*          range list element containing the error subrange and the   * 00475100
*          storage address of the error subrange, respectively.       * 00475400
*                                                                     * 00476000
*                                                                     * 00477000
*          STOKEN=xstoken                                             * 00478000
*              is the name (RS-type), or address in register          * 00479000
*              (2)-(12), of a required 8 character input variable     * 00480000
*              that specifies the subspace.  The STOKEN was returned  * 00481000
*              by the CREATE service.                                 * 00482000
*                                                                     * 00483000
*                                                                     * 00484000
*                                                                     * 00485000
*                                                                     * 00485500
*          [NUMRANGE=xnumrange|1]                                   * 00486000
*              is the name (RS-type), or address in register          * 00487000
*              (2)-(12), of an optional fullword input variable that  * 00488000
*              specifies the number of entries in the supplied range  * 00489000
*              list.  The range list is used to specify one or more   * 00490000
*              virtual storage ranges which are to be used to         * 00491000
*              unassign local storage ranges for the subspace.  The   * 00492000
*              value specified must be a positive integer, no greater * 00493000
*              than 16.                                               * 00494000
*                                                                     * 00495000
*              DEFAULT: 1.                                            * 00496000
*                                                                     * 00497000
*              If NUMRANGE is omitted, then only one virtual range    * 00498000
*              will be unassigned.                                    * 00499000
*                                                                     * 00500000
*                                                                     * 00501000
*                                                                     * 00502000
*                                                                     * 00502500
*          RANGLIST=xranglist                                         * 00503000
*              is the name (RS-type), or address in register          * 00504000
*              (2)-(12), of a required 4 byte input that contains the * 00505000
*              address of a range list.  The range list consists of a * 00506000
*              number of entries (as specified by NUMRANGE) where     * 00507000
*              each entry specifies the start address of the address  * 00508000
*              space storage to be UNASSIGNed and the amount of       * 00509000
*              storage to be UNASSIGNed.                              * 00510000
*                                                                     * 00511000
*              More specifically, each entry consists of two words as * 00512000
*              follows:                                               * 00513000
*                                                                     * 00514000
*                                                                     * 00515000
*                 FIRST WORD    contains the starting virtual address * 00516000
*                               of the storage range to be unassigned * 00517000
*                               from the subspace.  The specified     * 00518000
*                               address must be on a page (4K byte)   * 00519000
*                               boundary for storage below 16-Meg,    * 00520000
*                               and must be on a segment (1 Megabyte) * 00521000
*                               boundary for storage above 16-Meg.    * 00522000
*                                                                     * 00523000
*                 SECOND WORD   contains the number of pages (4K      * 00523800
*                               bytes) to be UNASSIGNed.  For storage * 00524600
*                               above 16-Meg, this value must be a    * 00525400
*                               multiple of 256, thereby resulting in * 00526200
*                               storage ranges being full segments,   * 00527000
*                               on segment boundaries.  For storage   * 00527800
*                               below 16-Meg, this value may be any   * 00528600
*                               positive value, thereby resulting in  * 00529400
*                               storage ranges being full pages, on   * 00530200
*                               page boundaries.                      * 00531000
*                                                                     * 00531800
*                                                                     * 00533000
*                                                                     * 00534000
*              The range list must be addressable in the caller's     * 00535000
*              primary address space.                                 * 00536000
*                                                                     * 00537000
*                                                                     * 00538000
*                                                                     * 00538500
*      DELETE                                                         * 00539000
*          Requests that the system delete a subspace.                * 00540000
*                                                                     * 00541000
*          The DELETE request must be done by the task which is the   * 00542000
*          owner of the subspace.  The caller must not be processing  * 00543000
*          subspace active in the subspace requested to be deleted.   * 00544000
*          Furthermore, no programs (RB's) in the address space are   * 00545000
*          to be processing subspace active in the subspace requested * 00546000
*          to be deleted.                                             * 00547000
*                                                                     * 00548000
*          Note that when the subspace is deleted, any outstanding    * 00549000
*          storage assigned to that subspace will become unassigned.  * 00550000
*                                                                     * 00551000
*                                                                     * 00552000
*          STOKEN=xstoken                                             * 00553000
*              is the name (RS-type), or address in register          * 00554000
*              (2)-(12), of a required 8 character input variable     * 00555000
*              that specifies the subspace.  The STOKEN was returned  * 00556000
*              by the CREATE service.                                 * 00557000
*                                                                     * 00558000
*                                                                     * 00559000
*                                                                     * 00559500
*      UNIDENTIFY                                                     * 00560000
*          Requests that the system unidentify address space storage  * 00561000
*          ranges that are identified as eligible to be assigned to a * 00562000
*          subspace.                                                  * 00563000
*                                                                     * 00563100
*          If a range in the UNIDENTIFY range list contains a         * 00563200
*          subrange which is not valid to be UNIDENTIFY'ed, then the  * 00563300
*          storage ranges up to the error subrange are UNIDENTIFY'ed  * 00563400
*          and the storage ranges starting at the error subrange are  * 00563500
*          not processed.  An abend will be issued and general        * 00563600
*          purpose registers two and three will contain the address   * 00563700
*          of the range list element containing the error subrange    * 00563800
*          and the storage address of the error subrange,             * 00563900
*          respectively.                                              * 00564000
*                                                                     * 00564100
*          Note that if the storage ranges being UNIDENTIFY'ed        * 00565000
*          contain ranges of storage which are still assigned to a    * 00566000
*          subspace, then for each such storage range the system will * 00567000
*          perform the UNASSIGN of that storage range.                * 00568500
*                                                                     * 00570000
*                                                                     * 00571000
*          [NUMRANGE=xnumrange|1]                                   * 00572000
*              is the name (RS-type), or address in register          * 00573000
*              (2)-(12), of an optional fullword input variable that  * 00574000
*              specifies the number of entries in the supplied range  * 00575000
*              list.  The range list is used to specify one or more   * 00576000
*              virtual storage ranges which are to be used to         * 00577000
*              unidentify local storage ranges.  The value specified  * 00578000
*              must be a positive integer, no greater than 16.        * 00579000
*                                                                     * 00580000
*              DEFAULT: 1.                                            * 00581000
*                                                                     * 00582000
*              If NUMRANGE is omitted, then only one virtual range    * 00583000
*              will be unidentified.                                  * 00584000
*                                                                     * 00585000
*                                                                     * 00586000
*                                                                     * 00587000
*                                                                     * 00587500
*          RANGLIST=xranglist                                         * 00588000
*              is the name (RS-type), or address in register          * 00589000
*              (2)-(12), of a required 4 byte input that contains the * 00590000
*              address of a range list.  The range list consists of a * 00591000
*              number of entries (as specified by NUMRANGE) where     * 00592000
*              each entry specifies the start address of the address  * 00593000
*              space storage to be UNIDENTIFY'ed and the amount of    * 00594000
*              storage to be UNIDENTIFY'ed.                           * 00595000
*                                                                     * 00596000
*              More specifically, each entry consists of two words as * 00597000
*              follows:                                               * 00598000
*                                                                     * 00599000
*                                                                     * 00600000
*                 FIRST WORD    contains the starting virtual address * 00600800
*                               of the storage range to be            * 00601600
*                               unidentified.  The specified address  * 00602400
*                               must be on a segment (1 Megabyte)     * 00603200
*                               boundary.                             * 00604000
*                                                                     * 00605000
*                 SECOND WORD   contains the number of pages (4K      * 00605700
*                               bytes) to be UNIDENTIFY'ed.  This     * 00606400
*                               value must be a multiple of 256,      * 00607100
*                               thereby resulting in storage ranges   * 00607800
*                               being full segments, on segment       * 00608500
*                               boundaries.                           * 00609200
*                                                                     * 00609900
*                                                                     * 00611000
*                                                                     * 00612000
*              The range list must be addressable in the caller's     * 00613000
*              primary address space.                                 * 00614000
*                                                                     * 00615000
*                                                                     * 00616000
*                                                                     * 00617000
*      SHARE                                                          * 00617100
*          Tells RSM that a SHAREing operation has taken place.       * 00617200
*                                                                     * 00617300
*                                                                     * 00617400
*          [ACTION=ATTACH]                                           * 00617500
*              is an optional keyword input that indicates what SHARE * 00617600
*              action to take.                                        * 00617700
*                                                                     * 00617800
*              DEFAULT: ATTACH                                        * 00617900
*                                                                     * 00618000
*                                                                     * 00618100
*              [ACTION=ATTACH                                         * 00618200
*                  Indicates ATTACH has created a subspace task.      * 00618300
*                                                                     * 00618400
*                                                                     * 00618500
*                  ASASTEO=xasasteo]                                  * 00618600
*                      is the name (RS-type), or address in register  * 00618700
*                      (2)-(12), of a required 4 byte input that      * 00618800
*                      contains the address variable that will        * 00618900
*                      contain the ASTE Real storage address.         * 00619000
*                                                                     * 00619100
*                                                                     * 00619200
*                                                                     * 00619300
*                                                                     * 00619400
*                                                                     * 00619500
*                                                                     * 00619600
*                                                                     * 00619700
*                                                                     * 00619800
*                                                                     * 00619900
*      End of a set of mutually exclusive required keys.              * 00620000
*                                                                     * 00620100
*                                                                     * 00620200
*                                                                     * 00620300
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00620400
*          is an optional byte input decimal value in the "0-0" range * 00620500
*          that specifies the macro version.  PLISTVER is the only    * 00620600
*          key allowed on the list form of MF and determines which    * 00620700
*          parameter list is generated.  Note that MAX may be         * 00620800
*          specified instead of a number, and the parameter list will * 00620900
*          be of the largest size currently supported. This size may  * 00621000
*          grow from release to release (thus possibly affecting the  * 00621100
*          amount of storage needed by your program).  If your        * 00621200
*          program can tolerate this, IBM recommends that you always  * 00621300
*          specify MAX when creating the list form parameter list as  * 00621400
*          that will ensure that the list form parameter list is      * 00621500
*          always long enough to hold whatever parameters might be    * 00621600
*          specified on the execute form.                             * 00621700
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00621800
*          default is the lowest version which allows all of the      * 00621900
*          parameters specified on the invocation to be processed.    * 00622000
*                                                                     * 00622100
*                                                                     * 00622200
*                                                                     * 00622300
*                                                                     * 00622400
*      [MF=S|L|E]                                                   * 00622500
*          is an optional keyword input which specifies the macro     * 00623000
*          form.                                                      * 00624000
*          DEFAULT: S                                                 * 00625000
*                                                                     * 00626000
*                                                                     * 00627000
*          [MF=S]                                                     * 00628000
*              specifies the standard form of the macro.  The "S"     * 00629000
*              form generates code to put the parameters into an      * 00630000
*              in-line parameter list and invoke the desired service. * 00631000
*              Full checking for required macro keys is done along    * 00632000
*              with supplying defaults for omitted optional           * 00633000
*              parameters.                                            * 00634000
*                                                                     * 00635000
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00636000
*              specifies the list form of the macro.  The "L" form    * 00637000
*              defines an area to be used for the parameter list.     * 00638000
*              Only the PLISTVER key may be specified on the          * 00638400
*              invocation.  All other macro parameters are flagged as * 00638800
*              errors.  If PLISTVER is not specified, the original    * 00639200
*              parameter list definition is used.                     * 00639600
*                                                                     * 00640000
*            ,xmfctrl                                                 * 00641000
*              is a required input.  It is the name of a storage area * 00642000
*              for the parameter list.                                * 00643000
*                                                                     * 00644000
*            ,xmfattr|0D                                            * 00645000
*              is an optional 60 character input string that varies   * 00646000
*              from 1 to 60 characters. Use it to force boundary      * 00647600
*              alignment of the parameter list. Use only 0F or 0D.    * 00649200
*              DEFAULT: 0D which forces the parameter list to a       * 00651000
*              doubleword boundary.                                   * 00652000
*                                                                     * 00653000
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00654000
*              specifies the execute form of the macro.  The "E" form * 00655000
*              generates code to put the parameters into the          * 00656000
*              parameter list specified by xmfctrl and provides full  * 00657000
*              syntax checking with default setting.                  * 00658000
*                                                                     * 00659000
*            ,xmfctrl                                                 * 00660000
*              is a required input.  It is the name (RS-type), or     * 00661000
*              address in register (1)-(12), of a storage area for    * 00662000
*              the parameter list.                                    * 00663000
*                                                                     * 00664000
*            ,COMPLETE                                              * 00665000
*              is an optional keyword input which specifies the       * 00666000
*              degree of macro parameter syntax checking.             * 00667000
*              DEFAULT: COMPLETE                                      * 00668000
*                                                                     * 00669000
*                                                                     * 00670000
*              COMPLETE                                               * 00670600
*                  Checking for required macro keys is done and       * 00671200
*                  defaults are supplied for omitted optional         * 00671800
*                  parameters.                                        * 00672400
*                                                                     * 00673200
*                                                                     * 00673400
*                                                                     * 00673600
*                                                                     * 00674000
*                                                                     * 00675000
*                                                                     * 00676000
*                                                                     * 00677000
*01* RETURN CODES:                                                    * 00678000
*                                                                     * 00679000
*                                                                     * 00680000
*       00 (0)    Successful completion.                              * 00681000
*                                                                     * 00682000
*       04 (4)    Successful completion, with exception.              * 00682300
*                                                                     * 00682600
*       08 (8)    The request is rejected due to non-system failure.  * 00683000
*                                                                     * 00684000
*       0C (12)   The request is rejected due to system failure.      * 00685000
*                                                                     * 00686000
*                                                                     * 00687000
*                                                                     * 00687500
*01* REASON CODES:                                                    * 00688000
*                                                                     * 00689000
*       In the following IARSUBSP reason codes, the bytes designated  * 00695000
*       "xx" are for diagnostic purposes and have no significance to  * 00701000
*       the external interface.                                       * 00707000
*                                                                     * 00713000
*       REASON    RETURN                                              * 00714000
*       CODE      CODE      DESCRIPTION                               * 00715000
*                                          * 00716000
*                                                                     * 00717000
*                                                                     * 00717100
*       xx0115xx  04(04)    IARSUBSP-IDENTIFY completed successfully, * 00717200
*                           but  some  ranges of storage were already * 00717300
*                           IDENTIFY'ed.                              * 00717400
*                                                                     * 00717500
*       xx0315xx  04(04)    IARSUBSP-ASSIGN  completed  successfully, * 00717600
*                           but some ranges of storage  were  already * 00717700
*                           ASSIGN'ed to the specified subspace.      * 00717800
*                                                                     * 00717900
*       xx0415xx  04(04)    IARSUBSP-UNASSIGN completed successfully, * 00718000
*                           but  some  ranges of storage were already * 00718100
*                           UNASSIGN'ed  from  the specified subspace * 00718200
*                           (or were never ASSIGN'ed).                * 00718300
*                                                                     * 00718400
*       xx0615xx  04(04)    IARSUBSP-UNIDENTIFY             completed * 00718500
*                           successfully, but some ranges of  storage * 00718600
*                           were already UNIDENTIFY'ed (or were never * 00718700
*                           IDENTIFY'ed).                             * 00718800
*                                                                     * 00718900
*       xx0513xx  04(04)    IARSUBSP-DELETE   was   rejected.     The * 00719000
*                           subspace is being used  by  one  or  more * 00719100
*                           subspace tasks.  Re-issue IARSUBSP-DELETE * 00719200
*                           when all subspace tasks have terminated.  * 00719300
*                                                                     * 00719400
*       xxFF00xx  08(8)     IARSUBSP  failed,  the  system  does  not * 00719500
*                           support subspaces.                        * 00720000
*                                                                     * 00721000
*       xx0212xx  08(8)     IARSUBSP-CREATE  failed, the system's set * 00722000
*                           of generated names for subspaces has been * 00723000
*                           temporarily exhausted.                    * 00724000
*                                                                     * 00725000
*       xx0213xx  08(8)     IARSUBSP-CREATE     failed,     specified * 00726000
*                           subspace name is not  unique  within  the * 00727000
*                           address space.                            * 00728000
*                                                                     * 00729000
*       xx0114xx  0C(12)    IARSUBSP-IDENTIFY   failed,   the  system * 00729300
*                           cannot perform any subspaces services  at * 00729600
*                           this   time  because  of  a  shortage  of * 00729900
*                           resources.                                * 00730200
*                                                                     * 00730500
*       xx0214xx  0C(12)    IARSUBSP-CREATE failed, the system cannot * 00730800
*                           perform  any  subspaces  services at this * 00731100
*                           time because of a shortage of resources.  * 00732000
*                                                                     * 00732100
*       xx0314xx  0C(12)    IARSUBSP-ASSIGN failed, the system cannot * 00732200
*                           perform  any  subspaces  services at this * 00732300
*                           time because of a shortage of resources.  * 00732400
*                                                                     * 00732500
*       xx0411xx  0C(12)    IARSUBSP-UNASSIGN  failed, range contains * 00732600
*                           a page which cannot be processed due to a * 00732700
*                           system error.                             * 00732800
*                                                                     * 00733000
*                                                                     * 00734000
*                                                                     * 00734500
*01* ABEND CODES:                                                     * 00735000
*                                                                     * 00736000
*                                                                     * 00737000
*       3C6       Subspace service failed due to invalid request.     * 00738000
*                                                                     * 00739000
*                                                                     * 00740000
*                                                                     * 00740500
*01* ABEND REASON CODES:                                              * 00741000
*                                                                     * 00742000
*       In  the  following  IARSUBSP  abend  reason  codes, the bytes * 00748000
*       designated  "xx"  are  for  diagnostic  purposes  and have no * 00754000
*       significance to the external interface.                       * 00760000
*                                                                     * 00766000
*       NOTE:   when  an  abend  is  for  a range element, additional * 00767000
*       diagnostic  information  will be provided (at time of abend); * 00768000
*       namely, register 2 will contain the address of the range list * 00769000
*       element  in  error and register 3 will contain the address of * 00770000
*       the current storage being processed.                          * 00771000
*                                                                     * 00772000
*       REASON    ABEND                                               * 00773000
*       CODE      CODE      DESCRIPTION                               * 00774000
*                                          * 00775000
*                                                                     * 00776000
*                                                                     * 00777000
*       xxFF01xx  3C6       IARSUBSP  failed,  caller must be running * 00778000
*                           with PASN=HASN=SASN.                      * 00779000
*                                                                     * 00780000
*       xxFF02xx  3C6       IARSUBSP failed, caller held lock(s).     * 00781000
*                                                                     * 00782000
*       xxFF03xx  3C6       IARSUBSP  failed,  a protection exception * 00783000
*                           occurred while referencing the  parameter * 00784000
*                           list by the requester.                    * 00785000
*                                                                     * 00786000
*       xxFF04xx  3C6       IARSUBSP  failed,  caller  issued a macro * 00787000
*                           version that is not valid.                * 00788000
*                                                                     * 00789000
*       xxFF05xx  3C6       IARSUBSP   failed,   reserved  fields  in * 00790000
*                           callers  macro  parameter  list  are  not * 00791000
*                           zeros.                                    * 00792000
*                                                                     * 00793000
*       xxFF06xx  3C6       IARSUBSP failed, user requested a service * 00794000
*                           which is not valid.                       * 00795000
*                                                                     * 00796000
*       xxFF07xx  3C6       IARSUBSP failed, caller must be in 31 bit * 00797000
*                           addressing   mode  to  use  any  IARSUBSP * 00798000
*                           service.                                  * 00799000
*                                                                     * 00800000
*       xxFF0Dxx  3C6       IARSUBSP    failed,    caller   must   be * 00811000
*                           authorized (supervisor  state  or  system * 00822000
*                           (0-7) PSW key).                           * 00823000
*                                                                     * 00824000
*       xxFF0Exx  3C6       IARSUBSP    failed,    caller   must   be * 00825000
*                           processing in task mode.                  * 00826000
*                                                                     * 00827000
*       xx0108xx  3C6       IARSUBSP-IDENTIFY  failed,  range element * 00827200
*                           count (NUMRANGE)  must  be  greater  than * 00827400
*                           zero and not greater than 16.             * 00827600
*                                                                     * 00827800
*       xx0109xx  3C6       IARSUBSP-IDENTIFY  failed,  range element * 00828000
*                           is not valid (valid value must be greater * 00828200
*                           than  zero and must specify a multiple of * 00828400
*                           256 pages).                               * 00828600
*                                                                     * 00828800
*       xx010Axx  3C6       IARSUBSP-IDENTIFY  failed,  range element * 00829000
*                           is not boundary aligned (must be  aligned * 00829200
*                           on a megabyte boundary).                  * 00829400
*                                                                     * 00830000
*       xx0112xx  3C6       IARSUBSP-IDENTIFY    failed,    specified * 00834000
*                           storage    is    not    GETMAINed     (or * 00834500
*                           STORAGE-OBTAINed) as part of the pageable * 00835000
*                           private  region  of  the caller's address * 00835500
*                           space.      I.e.,   the  storage  is  not * 00836000
*                           GETMAINed  or  it  is part of COMMON area * 00836500
*                           storage  or  it  is  GETMAINed but not as * 00837000
*                           part of pageable private.                 * 00837500
*                                                                     * 00838000
*       xx0113xx  3C6       IARSUBSP-IDENTIFY    failed,    specified * 00839000
*                           storage is not owned by the calling  task * 00840000
*                           (or  the  task which previously performed * 00840500
*                           an  IDENTIFY)  or by a task higher in the * 00841000
*                           heirarchy.                                * 00841500
*                                                                     * 00842000
*       xx0211xx  3C6       IARSUBSP-CREATE   failed,  subspace  name * 00843000
*                           incorrectly specified -  either  name  is * 00844000
*                           blank, or not left justified, or contains * 00845000
*                           characters other than alphabetic, numeric * 00846000
*                           and national characters, or not padded on * 00847000
*                           the  right  with  blanks,  or name starts * 00848000
*                           with numeric.                             * 00849000
*                                                                     * 00850000
*       xx0301xx  3C6       IARSUBSP-ASSIGN  failed,  caller  must be * 00850100
*                           running with PASN=HASN.                   * 00850200
*                                                                     * 00850300
*       xx0302xx  3C6       IARSUBSP-ASSIGN   failed,   caller   held * 00850400
*                           lock(s).                                  * 00850500
*                                                                     * 00850600
*       xx0303xx  3C6       IARSUBSP-ASSIGN   failed,   a  protection * 00850700
*                           exception occurred while referencing  the * 00850800
*                           parameter list by the requester.          * 00850900
*                                                                     * 00851000
*       xx0304xx  3C6       IARSUBSP-ASSIGN  failed,  caller issued a * 00851100
*                           macro version that is not valid.          * 00851200
*                                                                     * 00851300
*       xx0308xx  3C6       IARSUBSP-ASSIGN   failed,  range  element * 00851400
*                           count (NUMRANGE)  must  be  greater  than * 00851500
*                           zero and not greater than 16.             * 00851600
*                                                                     * 00851700
*       xx0309xx  3C6       IARSUBSP-ASSIGN  failed, range element is * 00851800
*                           not valid (valid value  must  be  greater * 00851900
*                           than  zero and must specify a multiple of * 00852000
*                           256  pages  for storage addresses greater * 00852100
*                           than 16-Meg).                             * 00852200
*                                                                     * 00852300
*       xx030Axx  3C6       IARSUBSP-ASSIGN  failed, range element is * 00852400
*                           not boundary aligned (must be aligned  on * 00852500
*                           a megabyte boundary for storage addresses * 00852600
*                           greater than 16-Meg).                     * 00852700
*                                                                     * 00852800
*       xx030Bxx  3C6       IARSUBSP-ASSIGN  failed, range element is * 00852900
*                           not  boundary  aligned  (must   be   page * 00853000
*                           aligned)  for storage addresses less than * 00853100
*                           16-Meg.                                   * 00853200
*                                                                     * 00853300
*       xx030Cxx  3C6       IARSUBSP-ASSIGN  failed, specified STOKEN * 00853400
*                           does not represent a valid subspace.      * 00853500
*                                                                     * 00853600
*       xx0310xx  3C6       IARSUBSP-ASSIGN  failed, range not within * 00853700
*                           an identified range of storage.           * 00853800
*                                                                     * 00853900
*       xx0311xx  3C6       IARSUBSP-ASSIGN   failed,  range  already * 00854000
*                           assigned to another subspace.             * 00855000
*                                                                     * 00856000
*       xx0312xx  3C6       IARSUBSP-ASSIGN   failed,  range  is  too * 00857000
*                           large --  spans  across  the  16-megabyte * 00858000
*                           boundary or across 2-gigabyte boundary.   * 00859000
*                                                                     * 00860000
*       xx0401xx  3C6       IARSUBSP-UNASSIGN  failed, caller must be * 00860100
*                           running with PASN=HASN.                   * 00860200
*                                                                     * 00860300
*       xx0402xx  3C6       IARSUBSP-UNASSIGN   failed,  caller  held * 00860400
*                           lock(s).                                  * 00860500
*                                                                     * 00860600
*       xx0403xx  3C6       IARSUBSP-UNASSIGN  failed,  a  protection * 00860700
*                           exception occurred while referencing  the * 00860800
*                           parameter list by the requester.          * 00860900
*                                                                     * 00861000
*       xx0404xx  3C6       IARSUBSP-UNASSIGN failed, caller issued a * 00861100
*                           macro version that is not valid.          * 00861200
*                                                                     * 00861300
*       xx0408xx  3C6       IARSUBSP-UNASSIGN  failed,  range element * 00861400
*                           count (NUMRANGE)  must  be  greater  than * 00861500
*                           zero and not greater than 16.             * 00861600
*                                                                     * 00861700
*       xx0409xx  3C6       IARSUBSP-UNASSIGN  failed,  range element * 00861800
*                           is not valid (valid value must be greater * 00861900
*                           than  zero and must specify a multiple of * 00862000
*                           256  pages  for storage addresses greater * 00862100
*                           than 16-Meg).                             * 00862200
*                                                                     * 00862300
*       xx040Axx  3C6       IARSUBSP-UNASSIGN  failed,  range element * 00862400
*                           is not boundary aligned (must be  aligned * 00862500
*                           on   a   megabyte  boundary  for  storage * 00862600
*                           addresses greater than 16-Meg).           * 00862700
*                                                                     * 00862800
*       xx040Bxx  3C6       IARSUBSP-UNASSIGN  failed,  range element * 00862900
*                           is not boundary  aligned  (must  be  page * 00863000
*                           aligned)  for storage addresses less than * 00863100
*                           16-Meg.                                   * 00863200
*                                                                     * 00863300
*       xx040Cxx  3C6       IARSUBSP-UNASSIGN    failed,    specified * 00863400
*                           STOKEN  does  not   represent   a   valid * 00863500
*                           subspace.                                 * 00863600
*                                                                     * 00863700
*       xx0412xx  3C6       IARSUBSP-UNASSIGN  failed,  range  is too * 00863800
*                           large --  spans  across  the  16-megabyte * 00863900
*                           boundary or across 2-gigabyte boundary.   * 00864000
*                                                                     * 00864100
*       xx050Cxx  3C6       IARSUBSP-DELETE  failed, specified STOKEN * 00864200
*                           does not represent a valid subspace.      * 00864300
*                                                                     * 00864400
*       xx0510xx  3C6       IARSUBSP-DELETE  failed,  the  caller  is * 00865000
*                           subspace active in the subspace requested * 00866000
*                           to be deleted.                            * 00867000
*                                                                     * 00868000
*       xx0511xx  3C6       IARSUBSP-DELETE  failed, there is another * 00869000
*                           program that is subspace  active  in  the * 00870000
*                           subspace requested to be deleted.         * 00871000
*                                                                     * 00872000
*       xx0512xx  3C6       IARSUBSP-DELETE failed, the caller is not * 00873000
*                           the owner of the subspace requested to be * 00874000
*                           deleted.                                  * 00875000
*                                                                     * 00876000
*       xx0608xx  3C6       IARSUBSP-UNIDENTIFY failed, range element * 00876200
*                           count  (NUMRANGE)  must  be  greater than * 00876400
*                           zero and not greater than 16.             * 00876600
*                                                                     * 00876800
*       xx0609xx  3C6       IARSUBSP-UNIDENTIFY failed, range element * 00877000
*                           is not valid (valid value must be greater * 00877200
*                           than  zero and must specify a multiple of * 00877400
*                           256 pages).                               * 00877600
*                                                                     * 00877800
*       xx060Axx  3C6       IARSUBSP-UNIDENTIFY failed, range element * 00878000
*                           is  not boundary aligned (must be aligned * 00878200
*                           on a megabyte boundary).                  * 00878400
*                                                                     * 00879000
*       xx0701xx  3C6       IARSUBSP-SHARE failed.  The input ASTE is * 00879300
*                           not owned by the current task.            * 00879600
*                                                                     * 00880000
*                                                                     * 00880200
*                                                                     * 00880500
*01* MODULE TYPE:  ASSEM MACRO                                        * 00881000
*                                                                     * 00882000
*02*   PROCESSOR:  ASSEM                                              * 00883000
*                                                                     * 00884000
*01* COMPONENT:  SC1CR                                                * 00885000
*                                                                     * 00886000
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00887000
*                                                                     * 00888000
*01* MACRO USAGE NOTES:                                               * 00889000
*                                                                     * 00890000
*                                                                     * 00891000
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00892000
*        global macro variable.  Any value other than 'NO' will       * 00893000
*        result in the macro expansion being printed.  The default is * 00894000
*        'YES'.  The following examples illustrate how the ZPRINT     * 00895000
*        variable should be set.                                      * 00896000
*                                                                     * 00897000
*                    GBLC &ZPRINT                                     * 00898000
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00899000
*                                                                     * 00900000
*                                                                     * 00901000
*    2.  All   keys   currently   contained  in  the  IARSUBSP  macro * 00901100
*        correspond  to  version  0.   If you specify PLISTVER, use a * 00901200
*        value of 0 or MAX.                                           * 00901300
*                                                                     * 00901700
*                                                                     * 00901900
*                                                                     * 00902100
*                                                                     * 00902300
*01* CHANGE ACTIVITY:                                                 * 00902500
*                                                                     * 00903000
*   Flag LineItem  FMID    Date   ID    Comment                       * 00904000
*                                                                     * 00905000
*    $L0=SUBSP    HBB5510 921209 PD00G1:  Subspaces support.          * 00906000
*    $L1=SUBSP    HBB5510 930414 PD00G1:  Subspaces support, stage 2. * 00906500
*    $L2=OTE      HBB6606 971203 PD00CS:  OTE support.                * 00906700
****** END OF SPECIFICATIONS *****************************************/ 00907000
*/* TLINE 1 *********************************************************** 00908000
         MACRO                                                          00909000
&XLABEL  IARSUBSP &NUMRANGE=,&RANGLIST=,&NAME=,&GENNAME=,&OUTNAME=,    *00910000
               &STOKEN=,&ACTION=,&ASASTEO=,&PLISTVER=,&MF=              00911000
.*                                                                      00912000
*                MACDATE -11/10/99-<0>                                  00913000
.*                                                                      00914000
.*******************************************************************    00915000
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00916000
.*******************************************************************    00917000
                GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                 00918000
                GBLC  &ZTEST      YES=TEST NO=NO TEST                   00919000
                GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX           00920000
.*                                                                      00921000
                GBLC  &ZIARSUBSP  YES=MACRO USED AT LEAST ONCE          00922000
.*******************************************************************    00923000
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00924000
.*******************************************************************    00925000
                LCLC  &ZMS        ERROR MESSAGE WORK AREA               00926000
                LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS          00927000
                LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED            00928000
                LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR           00929000
                LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE           00930000
                LCLA  &ZAWRK      USED AS A WORK AREA                   00931000
                LCLA  &ZASIZ      USED FOR SIZE OF VALUE                00932000
                LCLA  &ZN         NUMERIC WORK VARIABLE                 00933000
                LCLC  &ZC         CHARACTER WORK VARIABLE               00934000
                LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE           00935000
                LCLA  &ZTLA       VALUE TOO LONG VARIABLE               00936000
                LCLA  &ZMACRET    MACRO RETURN CODE                     00937000
&ZMACRET        SETA  0           ASSUME NO ERRORS                      00938000
.*                                                                      00939000
                LCLC  &ZCSYSLIST(255)           NONXKEY, POS ARRAY      00940000
                LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()            00941000
                LCLA  &ZPLLEN     PARAMETER LIST LENGTH                 00942000
                LCLC  &ZENDBASEPL               End of base PL          00942100
                LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                 00942200
.*******************************************************************    00942300
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00942400
.*******************************************************************    00942500
                LCLA  &ZI         INDEX FOR ARRAY                       00942600
                LCLA  &ZJ         INDEX FOR PARMS                       00942700
                LCLA  &ZK         INDEX FOR PARSE                       00942800
                LCLA  &ZLO        LOW RANGE VALUE                       00942900
                LCLA  &ZHI        HIGH RANGE VALUE                      00943000
                LCLC  &ZW         WORK AREA FOR PARM                    00943100
.********************************************************************   00943200
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00944000
.********************************************************************   00945000
                GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL               00946000
                GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE        00947000
                GBLA  &SYSALVL    SYSSTATE ARCHLVL                      00947500
.*                                                                      00948000
                AIF   (K'&SYSASCE GT 0).ZSYS4   SYS STATE DEFINED       00949000
                AIF   (K'&SYSSPLV GT 0).ZSYS2   SP LEVEL DEFINED        00950000
                SPLEVEL  TEST                                           00951000
.ZSYS2          ANOP  ,                                                 00952000
                AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1             00953000
                AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1             00954000
                SYSSTATE TEST                                           00955000
                AGO   .ZSYS4                                            00956000
.ZSYS3          ANOP  ,                                                 00957000
&SYSASCE        SETC  'P'         ASSUME SYSSTATE PRIMARY               00958000
.ZSYS4          ANOP  ,                                                 00959000
.*******************************************************************    00960000
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00961000
.*******************************************************************    00962000
                LCLC  &XSERVICE   ++ VALUE                              00963000
                LCLC  &XIDENTIFY  ++ VALUE                              00964000
                LCLC  &XNUMRANGE  ++ NAME                               00965000
                LCLC  &XRANGLIST  ++ NAME                               00966000
                LCLC  &XCREATE    ++ VALUE                              00967000
                LCLC  &XNAME      ++ NAME                               00968000
                LCLC  &XGENNAME   ++ VALUE                              00969000
                LCLC  &XOUTNAME   ++ NAME                               00970000
                LCLC  &XSTOKEN    ++ NAME                               00971000
                LCLC  &XASSIGN    ++ VALUE                              00972000
                LCLC  &XUNASSIGN  ++ VALUE                              00973000
                LCLC  &XDELETE    ++ VALUE                              00974000
                LCLC  &XUNIDENTIFY              ++ VALUE                00975000
                LCLC  &XSHARE     ++ VALUE                              00975200
                LCLC  &XACTION    ++ VALUE                              00975400
                LCLC  &XASASTEO   ++ NAME                               00975600
                LCLA  &XPLISTVER  ++ VALUE                              00975800
                LCLC  &XMF        ++ VALUE                              00976000
                LCLC  &XMFCTRL    ++ NAME                               00977000
                LCLC  &XMFATTR    ++ VALUE                              00978000
                LCLC  &XMFSCK     ++ VALUE                              00979000
.*******************************************************************    00980000
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00981000
.*******************************************************************    00982000
                LCLC  &ZXSERVICE  ++ INPUT VALUE                        00983000
                LCLC  &ZXIDENTIFY               ++ INPUT VALUE          00984000
                LCLC  &ZXNUMRANGE               ++ INPUT NAME           00985000
                LCLC  &ZXRANGLIST               ++ INPUT NAME           00986000
                LCLC  &ZXCREATE   ++ INPUT VALUE                        00987000
                LCLC  &ZXNAME     ++ INPUT NAME                         00988000
                LCLC  &ZXGENNAME  ++ INPUT VALUE                        00989000
                LCLC  &ZXOUTNAME  ++ OUTPUT NAME                        00990000
                LCLC  &ZXSTOKEN   ++ OUTPUT NAME                        00991000
                LCLC  &ZXASSIGN   ++ INPUT VALUE                        00992000
                LCLC  &ZXUNASSIGN               ++ INPUT VALUE          00993000
                LCLC  &ZXDELETE   ++ INPUT VALUE                        00994000
                LCLC  &ZXUNIDENTIFY             ++ INPUT VALUE          00995000
                LCLC  &ZXSHARE    ++ INPUT VALUE                        00995200
                LCLC  &ZXACTION   ++ INPUT VALUE                        00995400
                LCLC  &ZXASASTEO  ++ INPUT NAME                         00995600
                LCLC  &ZXPLISTVER               ++ INPUT VALUE          00995800
                LCLC  &ZXMF       ++ INPUT VALUE                        00996000
                LCLC  &ZXMFCTRL   ++ INPUT NAME                         00997000
                LCLC  &ZXMFATTR   ++ INPUT VALUE                        00998000
                LCLC  &ZXMFSCK    ++ INPUT VALUE                        00999000
.********************************************************************   00999100
.***AC.PLV01  PROCESS PLISTVER                                      *   00999200
.********************************************************************   00999300
&XPLISTVER      SETA  0                                                 00999400
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00999500
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00999600
&XPLISTVER      SETA  0                                                 00999700
.ZPLV0          ANOP  ,                                                 00999800
.*                                                                      00999900
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      01000000
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      01000100
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  01000200
.*-------------------------------------------------------------------   01000300
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 01000400
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                01000500
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 01000600
&ZMS            SETC  '&ZMS "PLISTVER"'                                 01000700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               01000800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                01000900
                AGO   .ZPVCK2                                           01001000
.ZPVCK3         ANOP  ,                                                 01001100
.*-------------------------------------------------------------------   01001200
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  01001300
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                01001400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 01001500
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         01001600
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 01001700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                01001800
                AGO   .ZPVCKE                                           01001900
.ZPVCK2         ANOP  ,                                                 01002000
.*-------------------------------------------------------------------   01002100
&ZCVAL          SETC  '&PLISTVER(1)'                                    01002200
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             01002300
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             01002400
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        01002500
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      01002600
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     01002700
.ZPVCK6         ANOP  ,                                                 01002800
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                01002900
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 01003000
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         01003100
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         01003200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                01003300
&XPLISTVER      SETA  0                                                 01003400
                AGO   .ZPVCKE                                           01003500
.*-------------------------------------------------------------------   01003600
.ZPVCK4A        ANOP  ,                                                 01003700
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        01003800
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                01003900
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               01004000
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          01004100
&ZMS            SETC  '&ZMS &XPLISTVER'                                 01004200
                MNOTE 8,' &ZMS IS REQUIRED.'                            01004300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                01004400
                AGO   .ZPVCK5                                           01004500
.ZPVCK4         ANOP  ,                                                 01004600
&XPLISTVER      SETA  &PLISTVER(1)                                      01004700
.ZPVCK5         ANOP  ,                                                 01004800
.ZPVCKE         ANOP  ,                                                 01004900
.********************************************************************   01005000
.***AG.MF01 PROCESS MF MACRO FORMS                                      01005100
.********************************************************************   01005200
                ACTR  10000                                             01005300
.*------------------------------------------------------------------    01005400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01005500
&XMF            SETC  ''          INITIALIZE XVARIABLE                  01006000
.*-------------------------------------------------------------------   01007000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01008000
.ZG79           ANOP  ,                                                 01009000
&ZTLC           SETC 'S'                                                01010000
                AIF   ('&MF(1)' NE '&ZTLC').ZG80                        01011000
&XMF            SETC  'S'         SET KEYWORD                           01012000
                AIF   (N'&MF LE 1).ZG79A        CK NUM                  01013000
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         01014000
&ZMS            SETC  '&ZMS.&MF"'                                       01015000
&ZMS            SETC  '&ZMS "MF"'                                       01016000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               01017000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01018000
.ZG79A          ANOP  ,                                                 01019000
.*-------------------------------------------------------------------   01020000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01021000
.ZG80           ANOP  ,                                                 01022000
&ZTLC           SETC 'L'                                                01023000
                AIF   ('&MF(1)' NE '&ZTLC').ZG87                        01024000
&XMF            SETC  'L'         SET KEYWORD                           01025000
                AIF   (N'&MF LE 3).ZG80A        CK NUM                  01026000
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         01027000
&ZMS            SETC  '&ZMS.&MF"'                                       01028000
&ZMS            SETC  '&ZMS "MF"'                                       01029000
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              01030000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01031000
.ZG80A          ANOP  ,                                                 01032000
.*-------------------------------------------------------------------   01033000
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     01034000
                AIF   (N'&SYSLIST NE 0).ZG80B   POSITIONALS?            01034800
                AIF   ('&NUMRANGE' NE '').ZG80B  KEYS?                  01035600
                AIF   ('&RANGLIST' NE '').ZG80B  KEYS?                  01036400
                AIF   ('&NAME' NE '').ZG80B     KEYS?                   01037200
                AIF   ('&GENNAME' NE '').ZG80B  KEYS?                   01038000
                AIF   ('&OUTNAME' NE '').ZG80B  KEYS?                   01038800
                AIF   ('&STOKEN' NE '').ZG80B   KEYS?                   01039600
                AIF   ('&ACTION' NE '').ZG80B   KEYS?                   01040400
                AIF   ('&ASASTEO' NE '').ZG80B  KEYS?                   01041200
                AGO    .ZG80C     INVOCATION OKAY                       01042000
.ZG80B          ANOP  ,                                                 01042800
&ZMS            SETC  'THE "L" FORM OF "MF"'    *MFLA* MNOTE            01043600
&ZMS            SETC  '&ZMS CAN ONLY HAVE'                              01044400
&ZMS            SETC  '&ZMS THE "PLISTVER" KEY'                         01045200
                MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'            01046000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01048000
.ZG80C          ANOP  ,                                                 01049000
.*-------------------------------------------------------------------   01050000
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   01051000
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         01052000
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         01053000
                AIF   (N'&MF(2) GT 1).ZG82B     MULTI PARMS             01054000
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         01055000
.ZG82B          AIF   (K'&MF(2) GT 0).ZG82C                             01056000
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       01057000
&ZMS            SETC  'WHEN "L" IS SPECIFIED'   *KRQDA*                 01058000
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               01059000
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      01060000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01061000
.ZG82C          ANOP  ,                                                 01062000
.*-------------------------------------------------------------------   01063000
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               01064000
                AIF   (K'&ZXMFCTRL LE 0).ZG82P  NOT I/O                 01065000
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG82P                    01066000
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       01067000
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         01068000
&ZMS            SETC  '&ZMS.&MF"'                                       01069000
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         01070000
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                 01071000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01072000
.ZG82P          ANOP  ,                                                 01073000
.*-------------------------------------------------------------------   01074000
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      01075000
&ZXMFATTR       SETC  'INPUT'     SET IN/OUTPUT                         01076000
&XMFATTR        SETC  '0D'                                              01077000
                AIF   (K'&MF(3) LE 0).ZG85B     PARM                    01078000
&XMFATTR        SETC  '&MF(3,1)'  SET XVARIABLE                         01079000
                AIF   (N'&MF(3) GT 1).ZG85B     MULTI PARMS             01080000
&XMFATTR        SETC  '&MF(3)'    SET XVARIABLE                         01081000
.ZG85B          ANOP  ,                                                 01082000
.*-------------------------------------------------------------------   01083000
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  01084000
                AIF   (K'&ZXMFATTR LE 0).ZG85P  NOT I/O                 01085000
                AIF   ('&XMFATTR'(1,1) NE '(').ZG85P                    01086000
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       01087000
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         01088000
&ZMS            SETC  '&ZMS.&MF"'                                       01089000
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         01090000
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                 01091000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01092000
.ZG85P          ANOP  ,                                                 01093000
.*-------------------------------------------------------------------   01094000
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 01095000
                AIF   (K'&ZXMFATTR LE 0).ZG85S  NOT I/O                 01096000
                AIF   (K'&XMFATTR LE 60).ZG85S  LNG OK                  01097000
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       01098000
&ZMS            SETC  '"MF='      *KLNGA* MNOTE                         01099000
&ZMS            SETC  '&ZMS.&MF"'                                       01100000
&ZMS            SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'             01101000
                MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                01102000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01103000
.ZG85S          ANOP  ,                                                 01104000
.*-------------------------------------------------------------------   01105000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01106000
.ZG87           ANOP  ,                                                 01107000
&ZTLC           SETC 'E'                                                01108000
                AIF   ('&MF(1)' NE '&ZTLC').ZG95                        01109000
&XMF            SETC  'E'         SET KEYWORD                           01110000
                AIF   (N'&MF LE 3).ZG87A        CK NUM                  01111000
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         01112000
&ZMS            SETC  '&ZMS.&MF"'                                       01113000
&ZMS            SETC  '&ZMS "MF"'                                       01114000
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              01115000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01116000
.ZG87A          ANOP  ,                                                 01117000
.*-------------------------------------------------------------------   01118000
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   01119000
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         01120000
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         01121000
                AIF   (N'&MF(2) GT 1).ZG89B     MULTI PARMS             01122000
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         01123000
.ZG89B          AIF   (K'&MF(2) GT 0).ZG89C                             01124000
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       01125000
&ZMS            SETC  'WHEN "E" IS SPECIFIED'   *KRQDA*                 01126000
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               01127000
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      01128000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01129000
.ZG89C          ANOP  ,                                                 01130000
.*-------------------------------------------------------------------   01131000
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              01132000
                AIF   (K'&ZXMFCTRL LE 0).ZG89R  NOT I/O                 01133000
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG89R                    01134000
&ZCGPR          SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                        01135000
                AIF   ('&ZCGPR'(1,1) NE '0').ZG89P                      01136000
                AIF   (K'&ZCGPR GT 2).ZG89Q                             01137000
                AIF   ('&ZCGPR' EQ '0').ZG89Q                           01138000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     01139000
                AIF   (T'&ZCGPR NE 'N').ZG89Q   INVALID REG NAME        01140000
.ZG89P          ANOP  ,                                                 01141000
                AIF   (T'&ZCGPR NE 'N').ZG89R   NON NUMERIC             01142000
                AIF   ('&ZCGPR' LT '1').ZG89Q                           01143000
                AIF   ('&ZCGPR' LE '12').ZG89R                          01144000
.ZG89Q          ANOP  ,                                                 01145000
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         01146000
&ZMS            SETC  '&ZMS.&MF"'                                       01147000
&ZMS            SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'         01148000
                MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                  01149000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01150000
.ZG89R          ANOP  ,                                                 01151000
.*-------------------------------------------------------------------   01152000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01153000
&XMFSCK         SETC  ''          INITIALIZE XVARIABLE                  01154000
.ZG93A   AIF   ('&MF(3)' NE 'COMPLETE').ZG94A                           01155000
&XMFSCK         SETC  'COMPLETE'  SET KEYWORD                           01156000
.*-------------------------------------------------------------------   01157000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01158000
.ZG94A          AIF   (K'&XMFSCK GT 0).ZG94C    KEYWORD                 01159000
                AIF   (K'&MF(3) LE 0).ZG94B                             01160000
&ZMS            SETC  '"MF='      *KUKWA* MNOTE                         01161000
&ZMS            SETC  '&ZMS.&MF"'                                       01162000
&ZMS            SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '         01163000
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               01164000
&ZMS            SETC  '&ZMS "COMPLETE".'                                01165000
                MNOTE 8,' &ZMS '                                        01166000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01167000
.ZG94B          ANOP  ,                                                 01168000
&XMFSCK         SETC  'COMPLETE'  SET DEFAULT KEYWORD                   01169000
.ZG94C          ANOP  ,                                                 01170000
&ZXMFSCK        SETC  'INPUT'     SET IN/OUTPUT                         01171000
.*------------------------------------------------------------------    01172000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01173000
.ZG95           ANOP  ,                                                 01174000
&ZXMF           SETC  'INPUT'     SET IN/OUTPUT                         01175000
                AIF   (K'&XMF GT 0).ZG95E       VALID ARG               01176000
                AIF   (T'&MF EQ 'O').ZG95D      OMITTED                 01177000
&ZASYSLNDX      SETA  0                                                 01178000
.ZG95A          ANOP  ,           POSITIONAL MACRO KEY                  01179000
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      01180000
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG95C                  01181000
&ZTLC           SETC 'MF'                                               01182000
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG95A         01183000
.ZG95B          ANOP  ,                                                 01184000
&ZXMF           SETC  ''          RESET IN/OUTPUT                       01185000
&ZMS            SETC  'THE "MF" KEY'            *KOPTA* MNOTE           01186000
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           01187000
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  01188000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01189000
                AGO   .ZG95E                                            01190000
.ZG95C          ANOP  ,                                                 01191000
&ZXMF           SETC  ''          RESET IN/OUTPUT                       01192000
&ZMS            SETC  '"MF='      *KUKWA* MNOTE                         01193000
&ZMS            SETC  '&ZMS.&MF"'                                       01194000
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         01195000
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               01196000
&ZMS            SETC  '&ZMS "S",'                                       01197000
&ZMS            SETC  '&ZMS "L",'                                       01198000
&ZMS            SETC  '&ZMS OR "E".'                                    01199000
                MNOTE 8,' &ZMS '                                        01200000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01201000
                AGO   .ZG95E                                            01202000
.ZG95D          ANOP  ,                                                 01203000
&XMF            SETC  'S'         SET DEFAULT KEYWORD                   01204000
&XMFSCK         SETC  'COMPLETE'  COMPLETE CHECKING                     01205000
.ZG95E          ANOP  ,                                                 01206000
.********************************************************************   01207000
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 01208000
.********************************************************************   01209000
                ACTR  10000                                             01210000
.*-------------------------------------------------------------------   01211000
.***AG.MF03 MF=(SLE)                                                    01212000
                AIF   ('&XMF' EQ 'L').ZGMFX                             01213000
.*-------------------------------------------------------------------   01214000
.***AG.KMEKY05 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  01215000
&XSERVICE       SETC  ''          INITIALIZE XVARIABLE                  01216000
&ZASYSLNDX      SETA  0                                                 01217000
.ZG2A           ANOP  ,           POSITIONAL KEY SEARCH                 01218000
&ZASYSLNDX      SETA  &ZASYSLNDX+1              NEXT POSITIONAL         01219000
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG2B  DONE                    01220000
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG2A             01221000
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'IDENTIFY').ZG2A              01222000
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         01223000
&ZXSERVICE      SETC  'INPUT'     SET IN/OUTPUT                         01224000
&XSERVICE       SETC  'IDENTIFY'  SET XVARIABLE                         01225000
&ZXIDENTIFY     SETC  'INPUT'     SET IN/OUTPUT                         01226000
&XIDENTIFY      SETC  'IDENTIFY'  SET XVARIABLE PARM                    01227000
.ZG2B           ANOP  ,                                                 01228000
.*-------------------------------------------------------------------   01229000
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  01230000
&ZASYSLNDX      SETA  0                                                 01231000
.ZG9A           ANOP  ,           POSITIONAL KEY SEARCH                 01232000
&ZASYSLNDX      SETA  &ZASYSLNDX+1              NEXT POSITIONAL         01233000
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG9C  DONE                    01234000
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG9A             01235000
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'CREATE').ZG9A                01236000
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         01237000
                AIF   (K'&XSERVICE LE 0).ZG9B   VALID                   01238000
&ZMS            SETC  '"CREATE'   *KMEKA* MNOTE                         01239000
&ZMS            SETC  '&ZMS."'                                          01240000
&ZMS            SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'             01241000
&ZMS            SETC  '&ZMS "&XSERVICE"'                                01242000
                MNOTE 8,' &ZMS KEY.'                                    01243000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01244000
                AGO   .ZG9C                                             01245000
.*                                                                      01246000
.ZG9B           ANOP  ,                                                 01247000
&ZXSERVICE      SETC  'INPUT'     SET IN/OUTPUT                         01248000
&XSERVICE       SETC  'CREATE'    SET XVARIABLE                         01249000
&ZXCREATE       SETC  'INPUT'     SET IN/OUTPUT                         01250000
&XCREATE        SETC  'CREATE'    SET XVARIABLE PARM                    01251000
.ZG9C           ANOP  ,                                                 01252000
.*-------------------------------------------------------------------   01253000
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  01254000
&ZASYSLNDX      SETA  0                                                 01255000
.ZG28A          ANOP  ,           POSITIONAL KEY SEARCH                 01256000
&ZASYSLNDX      SETA  &ZASYSLNDX+1              NEXT POSITIONAL         01257000
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG28C  DONE                   01258000
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG28A            01259000
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'ASSIGN').ZG28A               01260000
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         01261000
                AIF   (K'&XSERVICE LE 0).ZG28B  VALID                   01262000
&ZMS            SETC  '"ASSIGN'   *KMEKA* MNOTE                         01263000
&ZMS            SETC  '&ZMS."'                                          01264000
&ZMS            SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'             01265000
&ZMS            SETC  '&ZMS "&XSERVICE"'                                01266000
                MNOTE 8,' &ZMS KEY.'                                    01267000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01268000
                AGO   .ZG28C                                            01269000
.*                                                                      01270000
.ZG28B          ANOP  ,                                                 01271000
&ZXSERVICE      SETC  'INPUT'     SET IN/OUTPUT                         01272000
&XSERVICE       SETC  'ASSIGN'    SET XVARIABLE                         01273000
&ZXASSIGN       SETC  'INPUT'     SET IN/OUTPUT                         01274000
&XASSIGN        SETC  'ASSIGN'    SET XVARIABLE PARM                    01275000
.ZG28C          ANOP  ,                                                 01276000
.*-------------------------------------------------------------------   01277000
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  01278000
&ZASYSLNDX      SETA  0                                                 01279000
.ZG38A          ANOP  ,           POSITIONAL KEY SEARCH                 01280000
&ZASYSLNDX      SETA  &ZASYSLNDX+1              NEXT POSITIONAL         01281000
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG38C  DONE                   01282000
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG38A            01283000
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'UNASSIGN').ZG38A             01284000
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         01285000
                AIF   (K'&XSERVICE LE 0).ZG38B  VALID                   01286000
&ZMS            SETC  '"UNASSIGN'               *KMEKA* MNOTE           01287000
&ZMS            SETC  '&ZMS."'                                          01288000
&ZMS            SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'             01289000
&ZMS            SETC  '&ZMS "&XSERVICE"'                                01290000
                MNOTE 8,' &ZMS KEY.'                                    01291000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01292000
                AGO   .ZG38C                                            01293000
.*                                                                      01294000
.ZG38B          ANOP  ,                                                 01295000
&ZXSERVICE      SETC  'INPUT'     SET IN/OUTPUT                         01296000
&XSERVICE       SETC  'UNASSIGN'  SET XVARIABLE                         01297000
&ZXUNASSIGN     SETC  'INPUT'     SET IN/OUTPUT                         01298000
&XUNASSIGN      SETC  'UNASSIGN'  SET XVARIABLE PARM                    01299000
.ZG38C          ANOP  ,                                                 01300000
.*-------------------------------------------------------------------   01301000
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  01302000
&ZASYSLNDX      SETA  0                                                 01303000
.ZG48A          ANOP  ,           POSITIONAL KEY SEARCH                 01304000
&ZASYSLNDX      SETA  &ZASYSLNDX+1              NEXT POSITIONAL         01305000
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG48C  DONE                   01306000
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG48A            01307000
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'DELETE').ZG48A               01308000
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         01309000
                AIF   (K'&XSERVICE LE 0).ZG48B  VALID                   01310000
&ZMS            SETC  '"DELETE'   *KMEKA* MNOTE                         01311000
&ZMS            SETC  '&ZMS."'                                          01312000
&ZMS            SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'             01313000
&ZMS            SETC  '&ZMS "&XSERVICE"'                                01314000
                MNOTE 8,' &ZMS KEY.'                                    01315000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01316000
                AGO   .ZG48C                                            01317000
.*                                                                      01318000
.ZG48B          ANOP  ,                                                 01319000
&ZXSERVICE      SETC  'INPUT'     SET IN/OUTPUT                         01320000
&XSERVICE       SETC  'DELETE'    SET XVARIABLE                         01321000
&ZXDELETE       SETC  'INPUT'     SET IN/OUTPUT                         01322000
&XDELETE        SETC  'DELETE'    SET XVARIABLE PARM                    01323000
.ZG48C          ANOP  ,                                                 01324000
.*-------------------------------------------------------------------   01325000
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  01326000
&ZASYSLNDX      SETA  0                                                 01327000
.ZG52A          ANOP  ,           POSITIONAL KEY SEARCH                 01328000
&ZASYSLNDX      SETA  &ZASYSLNDX+1              NEXT POSITIONAL         01329000
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG52C  DONE                   01330000
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG52A            01331000
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'UNIDENTIFY').ZG52A           01332000
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         01333000
                AIF   (K'&XSERVICE LE 0).ZG52B  VALID                   01334000
&ZMS            SETC  '"UNIDENTIFY'             *KMEKA* MNOTE           01335000
&ZMS            SETC  '&ZMS."'                                          01336000
&ZMS            SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'             01337000
&ZMS            SETC  '&ZMS "&XSERVICE"'                                01338000
                MNOTE 8,' &ZMS KEY.'                                    01339000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01340000
                AGO   .ZG52C                                            01341000
.*                                                                      01342000
.ZG52B          ANOP  ,                                                 01343000
&ZXSERVICE      SETC  'INPUT'     SET IN/OUTPUT                         01344000
&XSERVICE       SETC  'UNIDENTIFY'              SET XVARIABLE           01345000
&ZXUNIDENTIFY   SETC  'INPUT'     SET IN/OUTPUT                         01346000
&XUNIDENTIFY    SETC  'UNIDENTIFY'              SET XVARIABLE PARM      01347000
.ZG52C          ANOP  ,                                                 01348000
.*-------------------------------------------------------------------   01348100
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  01348200
&ZASYSLNDX      SETA  0                                                 01348300
.ZG59A          ANOP  ,           POSITIONAL KEY SEARCH                 01348400
&ZASYSLNDX      SETA  &ZASYSLNDX+1              NEXT POSITIONAL         01348500
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG59C  DONE                   01348600
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG59A            01348700
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'SHARE').ZG59A                01348800
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         01348900
                AIF   (K'&XSERVICE LE 0).ZG59B  VALID                   01349000
&ZMS            SETC  '"SHARE'    *KMEKA* MNOTE                         01349100
&ZMS            SETC  '&ZMS."'                                          01349200
&ZMS            SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'             01349300
&ZMS            SETC  '&ZMS "&XSERVICE"'                                01349400
                MNOTE 8,' &ZMS KEY.'                                    01349500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01349600
                AGO   .ZG59C                                            01349700
.*                                                                      01349800
.ZG59B          ANOP  ,                                                 01349900
&ZXSERVICE      SETC  'INPUT'     SET IN/OUTPUT                         01350000
&XSERVICE       SETC  'SHARE'     SET XVARIABLE                         01350100
&ZXSHARE        SETC  'INPUT'     SET IN/OUTPUT                         01350200
&XSHARE         SETC  'SHARE'     SET XVARIABLE PARM                    01350300
.ZG59C          ANOP  ,                                                 01350400
.*------------------------------------------------------------------    01350500
.***AG.KME4Y09 VALUE, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED          01350600
                AIF   (K'&XSERVICE GT 0).ZG67B                          01350700
&ZXSERVICE      SETC  ''          RESET IN/OUTPUT                       01352000
&ZXIDENTIFY     SETC  ''          RESET IN/OUTPUT                       01353000
&XSERVICE       SETC  ''          ENSURE NULL                           01354000
&XIDENTIFY      SETC  ''          ENSURE NULL                           01355000
&ZMS            SETC  'ONE OF THE FOLLOWING'    *KMERA* MNOTE           01356000
&ZMS            SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'               01357000
&ZMS            SETC  '&ZMS REQUIRED:'                                  01358000
&ZMS            SETC  '&ZMS "IDENTIFY",'        VALID ME KEY            01359000
&ZMS            SETC  '&ZMS "CREATE",'          VALID ME KEY            01360000
&ZMS            SETC  '&ZMS "ASSIGN",'          VALID ME KEY            01361000
&ZMS            SETC  '&ZMS "UNASSIGN",'        VALID ME KEY            01362000
&ZMS            SETC  '&ZMS "DELETE",'          VALID ME KEY            01363000
&ZMS            SETC  '&ZMS "UNIDENTIFY",'      VALID ME KEY            01363600
&ZMS            SETC  '&ZMS OR "SHARE".'        VALID ME KEY            01364200
                MNOTE 8,' &ZMS '                                        01365000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01366000
.ZG67B          ANOP  ,                                                 01367000
.*-------------------------------------------------------------------   01368000
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          01369000
.ZG2            AIF   ('&XSERVICE' NE 'IDENTIFY').ZG9                   01370000
.*-------------------------------------------------------------------   01371000
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               01372000
&ZCVAL          SETC ''           ERROR KEY FIELD                       01373000
.ZG2I0          AIF   (K'&NAME LE 0).ZG2I1                              01374000
&ZCVAL          SETC '&ZCVAL NAME'              DISALLOWED KEY          01375000
.ZG2I1          AIF   (K'&GENNAME LE 0).ZG2I2                           01376000
&ZCVAL          SETC '&ZCVAL GENNAME'           DISALLOWED KEY          01377000
.ZG2I2          AIF   (K'&OUTNAME LE 0).ZG2I3                           01378000
&ZCVAL          SETC '&ZCVAL OUTNAME'           DISALLOWED KEY          01379000
.ZG2I3          AIF   (K'&STOKEN LE 0).ZG2I4                            01380000
&ZCVAL          SETC '&ZCVAL STOKEN'            DISALLOWED KEY          01381000
.ZG2I4          AIF   (K'&ACTION LE 0).ZG2I5                            01381300
&ZCVAL          SETC '&ZCVAL ACTION'            DISALLOWED KEY          01381600
.ZG2I5          AIF   (K'&ASASTEO LE 0).ZG2I6                           01381900
&ZCVAL          SETC '&ZCVAL ASASTEO'           DISALLOWED KEY          01382200
.ZG2I6          AIF   (K'&ZCVAL LE 0).ZG2J      KEY                     01382500
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             01383000
&ZMS            SETC  '"IDENTIFY'               *KMEIA* MNOTE           01384000
&ZMS            SETC  '&ZMS."'                                          01385000
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              01386000
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              01387000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01388000
.ZG2J           ANOP  ,                                                 01389000
.*----------------------------------------------------------------***   01411000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01412000
                AIF   (N'&NUMRANGE LE 1).ZG4A   CK NUM                  01413000
&ZMS            SETC  '"NUMRANGE='              *KPOSA* MNOTE           01414000
&ZMS            SETC  '&ZMS.&NUMRANGE"'                                 01415000
&ZMS            SETC  '&ZMS "NUMRANGE"'                                 01416000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               01417000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01418000
.ZG4A           ANOP  ,                                                 01419000
.*-------------------------------------------------------------------   01420000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01421000
&ZXNUMRANGE     SETC  'INPUT'     SET IN/OUTPUT                         01422000
&XNUMRANGE      SETC  '1'                                               01423000
                AIF   (K'&NUMRANGE(1) LE 0).ZG4B  PARM                  01424000
&XNUMRANGE      SETC  '&NUMRANGE(1)'            SET XVARIABLE           01425000
                AIF   (N'&NUMRANGE GT 1).ZG4B   MULTI PARMS             01426000
&XNUMRANGE      SETC  '&NUMRANGE'               SET XVARIABLE           01427000
.ZG4B           ANOP  ,                                                 01428000
.*-------------------------------------------------------------------   01429000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01430000
                AIF   (K'&ZXNUMRANGE LE 0).ZG4R  NOT I/O                01431000
                AIF   ('&XNUMRANGE'(1,1) NE '(').ZG4R                   01432000
&ZCGPR          SETC  '&XNUMRANGE'(2,K'&XNUMRANGE-2)                    01433000
                AIF   ('&ZCGPR'(1,1) NE '0').ZG4P                       01434000
                AIF   (K'&ZCGPR GT 2).ZG4Q                              01435000
                AIF   ('&ZCGPR' EQ '0').ZG4Q                            01436000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     01437000
                AIF   (T'&ZCGPR NE 'N').ZG4Q    INVALID REG NAME        01438000
.ZG4P           ANOP  ,                                                 01439000
                AIF   (T'&ZCGPR NE 'N').ZG4R    NON NUMERIC             01440000
                AIF   ('&ZCGPR' LT '2').ZG4Q                            01441000
                AIF   ('&ZCGPR' LE '12').ZG4R                           01442000
.ZG4Q           ANOP  ,                                                 01443000
&ZMS            SETC  '"NUMRANGE='              *KGPRA* MNOTE           01444000
&ZMS            SETC  '&ZMS.&NUMRANGE"'                                 01445000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         01446000
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  01447000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01448000
.ZG4R           ANOP  ,                                                 01449000
.*----------------------------------------------------------------***   01450000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01451000
                AIF   (N'&RANGLIST LE 1).ZG7A   CK NUM                  01452000
&ZMS            SETC  '"RANGLIST='              *KPOSA* MNOTE           01453000
&ZMS            SETC  '&ZMS.&RANGLIST"'                                 01454000
&ZMS            SETC  '&ZMS "RANGLIST"'                                 01455000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               01456000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01457000
.ZG7A           ANOP  ,                                                 01458000
.*-------------------------------------------------------------------   01459000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01460000
&ZXRANGLIST     SETC  'INPUT'     SET IN/OUTPUT                         01461000
&XRANGLIST      SETC  '&RANGLIST(1)'            SET XVARIABLE           01462000
                AIF   (N'&RANGLIST GT 1).ZG7B   MULTI PARMS             01463000
&XRANGLIST      SETC  '&RANGLIST'               SET XVARIABLE           01464000
.ZG7B           AIF   (K'&RANGLIST(1) GT 0).ZG7C                        01465000
&ZXRANGLIST     SETC  ''          RESET IN/OUTPUT                       01466000
&ZMS            SETC  ' '         *KRQDA*                               01467000
&ZMS            SETC  '&ZMS "RANGLIST" KEY AND ITS'                     01468000
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  01469000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01470000
.ZG7C           ANOP  ,                                                 01471000
.*-------------------------------------------------------------------   01472000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01473000
                AIF   (K'&ZXRANGLIST LE 0).ZG7R  NOT I/O                01474000
                AIF   ('&XRANGLIST'(1,1) NE '(').ZG7R                   01475000
&ZCGPR          SETC  '&XRANGLIST'(2,K'&XRANGLIST-2)                    01476000
                AIF   ('&ZCGPR'(1,1) NE '0').ZG7P                       01477000
                AIF   (K'&ZCGPR GT 2).ZG7Q                              01478000
                AIF   ('&ZCGPR' EQ '0').ZG7Q                            01479000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     01480000
                AIF   (T'&ZCGPR NE 'N').ZG7Q    INVALID REG NAME        01481000
.ZG7P           ANOP  ,                                                 01482000
                AIF   (T'&ZCGPR NE 'N').ZG7R    NON NUMERIC             01483000
                AIF   ('&ZCGPR' LT '2').ZG7Q                            01484000
                AIF   ('&ZCGPR' LE '12').ZG7R                           01485000
.ZG7Q           ANOP  ,                                                 01486000
&ZMS            SETC  '"RANGLIST='              *KGPRA* MNOTE           01487000
&ZMS            SETC  '&ZMS.&RANGLIST"'                                 01488000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         01489000
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  01490000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01491000
.ZG7R           ANOP  ,                                                 01492000
.*-------------------------------------------------------------------   01493000
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          01494000
.ZG9            AIF   ('&XSERVICE' NE 'CREATE').ZG28                    01495000
.*-------------------------------------------------------------------   01496000
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               01497000
&ZCVAL          SETC ''           ERROR KEY FIELD                       01498000
.ZG9I0          AIF   (K'&NUMRANGE LE 0).ZG9I1                          01499000
&ZCVAL          SETC '&ZCVAL NUMRANGE'          DISALLOWED KEY          01500000
.ZG9I1          AIF   (K'&RANGLIST LE 0).ZG9I2                          01501000
&ZCVAL          SETC '&ZCVAL RANGLIST'          DISALLOWED KEY          01502000
.ZG9I2          AIF   (K'&ACTION LE 0).ZG9I3                            01502300
&ZCVAL          SETC '&ZCVAL ACTION'            DISALLOWED KEY          01502600
.ZG9I3          AIF   (K'&ASASTEO LE 0).ZG9I4                           01502900
&ZCVAL          SETC '&ZCVAL ASASTEO'           DISALLOWED KEY          01503200
.ZG9I4          AIF   (K'&ZCVAL LE 0).ZG9J      KEY                     01503500
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             01504000
&ZMS            SETC  '"CREATE'   *KMEIA* MNOTE                         01505000
&ZMS            SETC  '&ZMS."'                                          01506000
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              01507000
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              01508000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01509000
.ZG9J           ANOP  ,                                                 01510000
.*----------------------------------------------------------------***   01532000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01533000
                AIF   (N'&NAME LE 1).ZG11A      CK NUM                  01534000
&ZMS            SETC  '"NAME='    *KPOSA* MNOTE                         01535000
&ZMS            SETC  '&ZMS.&NAME"'                                     01536000
&ZMS            SETC  '&ZMS "NAME"'                                     01537000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               01538000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01539000
.ZG11A          ANOP  ,                                                 01540000
.*-------------------------------------------------------------------   01541000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01542000
&ZXNAME         SETC  'INPUT'     SET IN/OUTPUT                         01543000
&XNAME          SETC  '&NAME(1)'  SET XVARIABLE                         01544000
                AIF   (N'&NAME GT 1).ZG11B      MULTI PARMS             01545000
&XNAME          SETC  '&NAME'     SET XVARIABLE                         01546000
.ZG11B          AIF   (K'&NAME(1) GT 0).ZG11C                           01547000
&ZXNAME         SETC  ''          RESET IN/OUTPUT                       01548000
&ZMS            SETC  ' '         *KRQDA*                               01549000
&ZMS            SETC  '&ZMS "NAME" KEY AND ITS'                         01550000
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  01551000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01552000
.ZG11C          ANOP  ,                                                 01553000
.*-------------------------------------------------------------------   01554000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01555000
                AIF   (K'&ZXNAME LE 0).ZG11R    NOT I/O                 01556000
                AIF   ('&XNAME'(1,1) NE '(').ZG11R                      01557000
&ZCGPR          SETC  '&XNAME'(2,K'&XNAME-2)                            01558000
                AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                      01559000
                AIF   (K'&ZCGPR GT 2).ZG11Q                             01560000
                AIF   ('&ZCGPR' EQ '0').ZG11Q                           01561000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     01562000
                AIF   (T'&ZCGPR NE 'N').ZG11Q   INVALID REG NAME        01563000
.ZG11P          ANOP  ,                                                 01564000
                AIF   (T'&ZCGPR NE 'N').ZG11R   NON NUMERIC             01565000
                AIF   ('&ZCGPR' LT '2').ZG11Q                           01566000
                AIF   ('&ZCGPR' LE '12').ZG11R                          01567000
.ZG11Q          ANOP  ,                                                 01568000
&ZMS            SETC  '"NAME='    *KGPRA* MNOTE                         01569000
&ZMS            SETC  '&ZMS.&NAME"'                                     01570000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         01571000
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  01572000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01573000
.ZG11R          ANOP  ,                                                 01574000
.*------------------------------------------------------------------    01575000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01576000
&XGENNAME       SETC  ''          INITIALIZE XVARIABLE                  01577000
.*-------------------------------------------------------------------   01578000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01579000
.ZG15           ANOP  ,                                                 01580000
                AIF   (K'&GENNAME(1) LE 0).ZG15A                        01581000
&ZTLC           SETC 'NO'                                               01582000
                AIF   ('&GENNAME(1)' NE '&ZTLC').ZG16                   01583000
&XGENNAME       SETC  'NO'        SET KEYWORD                           01584000
                AIF   (N'&GENNAME LE 1).ZG15A   CK NUM                  01585000
&ZMS            SETC  '"GENNAME='               *KPOSA* MNOTE           01586000
&ZMS            SETC  '&ZMS.&GENNAME"'                                  01587000
&ZMS            SETC  '&ZMS "GENNAME"'                                  01588000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               01589000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01590000
.ZG15A          ANOP  ,                                                 01591000
.*------------------------------------------------------------------    01592000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01593000
&ZCVAL          SETC ''           CLEAR ERROR KEY ACCUMULATOR           01594000
.ZG15A0         AIF   (K'&OUTNAME LE 0).ZG15A1  OK                      01595000
&ZCVAL          SETC '&ZCVAL OUTNAME'           INCORRECT KEY USED      01596000
.ZG15A1         AIF   (K'&ZCVAL LE 0).ZG15A2    OK                      01597000
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             01598000
&ZMS            SETC  '"GENNAME'  *KMEIA* MNOTE                         01599000
&ZMS            SETC  '&ZMS.=&GENNAME"'                                 01600000
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              01601000
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              01602000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01603000
.ZG15A2         ANOP  ,                                                 01604000
.*-------------------------------------------------------------------   01605000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01606000
.ZG16           ANOP  ,                                                 01607000
&ZTLC           SETC 'COND'                                             01608000
                AIF   ('&GENNAME(1)' NE '&ZTLC').ZG20                   01609000
&XGENNAME       SETC  'COND'      SET KEYWORD                           01610000
                AIF   (N'&GENNAME LE 1).ZG16A   CK NUM                  01611000
&ZMS            SETC  '"GENNAME='               *KPOSA* MNOTE           01612000
&ZMS            SETC  '&ZMS.&GENNAME"'                                  01613000
&ZMS            SETC  '&ZMS "GENNAME"'                                  01614000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               01615000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01616000
.ZG16A          ANOP  ,                                                 01617000
.*----------------------------------------------------------------***   01618000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    01619000
                AIF   (N'&OUTNAME LE 1).ZG18A   CK NUM                  01620000
&ZMS            SETC  '"OUTNAME='               *KPOSA* MNOTE           01621000
&ZMS            SETC  '&ZMS.&OUTNAME"'                                  01622000
&ZMS            SETC  '&ZMS "OUTNAME"'                                  01623000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               01624000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01625000
.ZG18A          ANOP  ,                                                 01626000
.*-------------------------------------------------------------------   01627000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        01628000
                AIF   (K'&OUTNAME(1) LE 0).ZG18C  NO PARM               01629000
&ZXOUTNAME      SETC  'OUTPUT'    SET OUTPUT                            01630000
&XOUTNAME       SETC  '&OUTNAME(1)'             SET XVARIABLE           01631000
                AIF   (N'&OUTNAME GT 1).ZG18C                           01632000
&XOUTNAME       SETC  '&OUTNAME'  SET XVARIABLE                         01633000
.ZG18C          ANOP  ,                                                 01634000
.*-------------------------------------------------------------------   01635000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   01636000
                AIF   (K'&ZXOUTNAME LE 0).ZG18R  NOT I/O                01637000
                AIF   ('&XOUTNAME'(1,1) NE '(').ZG18R                   01638000
&ZCGPR          SETC  '&XOUTNAME'(2,K'&XOUTNAME-2)                      01639000
                AIF   ('&ZCGPR'(1,1) NE '0').ZG18P                      01640000
                AIF   (K'&ZCGPR GT 2).ZG18Q                             01641000
                AIF   ('&ZCGPR' EQ '0').ZG18Q                           01642000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     01643000
                AIF   (T'&ZCGPR NE 'N').ZG18Q   INVALID REG NAME        01644000
.ZG18P          ANOP  ,                                                 01645000
                AIF   (T'&ZCGPR NE 'N').ZG18R   NON NUMERIC             01646000
                AIF   ('&ZCGPR' LT '2').ZG18Q                           01647000
                AIF   ('&ZCGPR' LE '12').ZG18R                          01648000
.ZG18Q          ANOP  ,                                                 01649000
&ZMS            SETC  '"OUTNAME='               *KGPRA* MNOTE           01650000
&ZMS            SETC  '&ZMS.&OUTNAME"'                                  01651000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         01652000
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  01653000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01654000
.ZG18R          ANOP  ,                                                 01655000
.*-------------------------------------------------------------------   01656000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01657000
.ZG20           ANOP  ,                                                 01658000
&ZTLC           SETC 'YES'                                              01659000
                AIF   ('&GENNAME(1)' NE '&ZTLC').ZG24                   01660000
&XGENNAME       SETC  'YES'       SET KEYWORD                           01661000
                AIF   (N'&GENNAME LE 1).ZG20A   CK NUM                  01662000
&ZMS            SETC  '"GENNAME='               *KPOSA* MNOTE           01663000
&ZMS            SETC  '&ZMS.&GENNAME"'                                  01664000
&ZMS            SETC  '&ZMS "GENNAME"'                                  01665000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               01666000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01667000
.ZG20A          ANOP  ,                                                 01668000
.*----------------------------------------------------------------***   01669000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    01670000
                AIF   (N'&OUTNAME LE 1).ZG22A   CK NUM                  01671000
&ZMS            SETC  '"OUTNAME='               *KPOSA* MNOTE           01672000
&ZMS            SETC  '&ZMS.&OUTNAME"'                                  01673000
&ZMS            SETC  '&ZMS "OUTNAME"'                                  01674000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               01675000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01676000
.ZG22A          ANOP  ,                                                 01677000
.*-------------------------------------------------------------------   01678000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        01679000
                AIF   (K'&OUTNAME(1) LE 0).ZG22C  NO PARM               01680000
&ZXOUTNAME      SETC  'OUTPUT'    SET OUTPUT                            01681000
&XOUTNAME       SETC  '&OUTNAME(1)'             SET XVARIABLE           01682000
                AIF   (N'&OUTNAME GT 1).ZG22C                           01683000
&XOUTNAME       SETC  '&OUTNAME'  SET XVARIABLE                         01684000
.ZG22C          ANOP  ,                                                 01685000
.*-------------------------------------------------------------------   01686000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   01687000
                AIF   (K'&ZXOUTNAME LE 0).ZG22R  NOT I/O                01688000
                AIF   ('&XOUTNAME'(1,1) NE '(').ZG22R                   01689000
&ZCGPR          SETC  '&XOUTNAME'(2,K'&XOUTNAME-2)                      01690000
                AIF   ('&ZCGPR'(1,1) NE '0').ZG22P                      01691000
                AIF   (K'&ZCGPR GT 2).ZG22Q                             01692000
                AIF   ('&ZCGPR' EQ '0').ZG22Q                           01693000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     01694000
                AIF   (T'&ZCGPR NE 'N').ZG22Q   INVALID REG NAME        01695000
.ZG22P          ANOP  ,                                                 01696000
                AIF   (T'&ZCGPR NE 'N').ZG22R   NON NUMERIC             01697000
                AIF   ('&ZCGPR' LT '2').ZG22Q                           01698000
                AIF   ('&ZCGPR' LE '12').ZG22R                          01699000
.ZG22Q          ANOP  ,                                                 01700000
&ZMS            SETC  '"OUTNAME='               *KGPRA* MNOTE           01701000
&ZMS            SETC  '&ZMS.&OUTNAME"'                                  01702000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         01703000
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  01704000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01705000
.ZG22R          ANOP  ,                                                 01706000
.*------------------------------------------------------------------    01707000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01708000
.ZG24           ANOP  ,                                                 01709000
&ZXGENNAME      SETC  'INPUT'     SET IN/OUTPUT                         01710000
                AIF   (K'&XGENNAME GT 0).ZG24E  VALID ARG               01711000
                AIF   (T'&GENNAME EQ 'O').ZG24D  OMITTED                01712000
&ZASYSLNDX      SETA  0                                                 01713000
.ZG24A          ANOP  ,           POSITIONAL MACRO KEY                  01714000
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      01715000
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG24C                  01716000
&ZTLC           SETC 'GENNAME'                                          01717000
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG24A         01718000
.ZG24B          ANOP  ,                                                 01719000
&ZXGENNAME      SETC  ''          RESET IN/OUTPUT                       01720000
&ZMS            SETC  'THE "GENNAME" KEY'       *KOPTA* MNOTE           01721000
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           01722000
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  01723000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01724000
                AGO   .ZG24E                                            01725000
.ZG24C          ANOP  ,                                                 01726000
&ZXGENNAME      SETC  ''          RESET IN/OUTPUT                       01727000
&ZMS            SETC  '"GENNAME='               *KUKWA* MNOTE           01728000
&ZMS            SETC  '&ZMS.&GENNAME"'                                  01729000
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         01730000
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               01731000
&ZMS            SETC  '&ZMS "NO",'                                      01732000
&ZMS            SETC  '&ZMS "COND",'                                    01733000
&ZMS            SETC  '&ZMS OR "YES".'                                  01734000
                MNOTE 8,' &ZMS '                                        01735000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01736000
                AGO   .ZG24E                                            01737000
.ZG24D          ANOP  ,                                                 01738000
&XGENNAME       SETC  'NO'        SET DEFAULT KEYWORD                   01739000
.ZG24E          ANOP  ,                                                 01740000
.*----------------------------------------------------------------***   01741000
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    01742000
                AIF   (N'&STOKEN LE 1).ZG26A    CK NUM                  01743000
&ZMS            SETC  '"STOKEN='  *KPOSA* MNOTE                         01744000
&ZMS            SETC  '&ZMS.&STOKEN"'                                   01745000
&ZMS            SETC  '&ZMS "STOKEN"'                                   01746000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               01747000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01748000
.ZG26A          ANOP  ,                                                 01749000
.*-------------------------------------------------------------------   01750000
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        01751000
&ZXSTOKEN       SETC  'OUTPUT'    SET IN/OUTPUT                         01752000
&XSTOKEN        SETC  '&STOKEN(1)'              SET XVARIABLE           01753000
                AIF   (N'&STOKEN GT 1).ZG26B    MULTI PARMS             01754000
&XSTOKEN        SETC  '&STOKEN'   SET XVARIABLE                         01755000
.ZG26B          AIF   (K'&STOKEN(1) GT 0).ZG26C                         01756000
&ZXSTOKEN       SETC  ''          RESET IN/OUTPUT                       01757000
&ZMS            SETC  ' '         *KRQDA*                               01758000
&ZMS            SETC  '&ZMS "STOKEN" KEY AND ITS'                       01759000
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  01760000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01761000
.ZG26C          ANOP  ,                                                 01762000
.*-------------------------------------------------------------------   01763000
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   01764000
                AIF   (K'&ZXSTOKEN LE 0).ZG26R  NOT I/O                 01765000
                AIF   ('&XSTOKEN'(1,1) NE '(').ZG26R                    01766000
&ZCGPR          SETC  '&XSTOKEN'(2,K'&XSTOKEN-2)                        01767000
                AIF   ('&ZCGPR'(1,1) NE '0').ZG26P                      01768000
                AIF   (K'&ZCGPR GT 2).ZG26Q                             01769000
                AIF   ('&ZCGPR' EQ '0').ZG26Q                           01770000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     01771000
                AIF   (T'&ZCGPR NE 'N').ZG26Q   INVALID REG NAME        01772000
.ZG26P          ANOP  ,                                                 01773000
                AIF   (T'&ZCGPR NE 'N').ZG26R   NON NUMERIC             01774000
                AIF   ('&ZCGPR' LT '2').ZG26Q                           01775000
                AIF   ('&ZCGPR' LE '12').ZG26R                          01776000
.ZG26Q          ANOP  ,                                                 01777000
&ZMS            SETC  '"STOKEN='  *KGPRA* MNOTE                         01778000
&ZMS            SETC  '&ZMS.&STOKEN"'                                   01779000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         01780000
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  01781000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01782000
.ZG26R          ANOP  ,                                                 01783000
.*-------------------------------------------------------------------   01784000
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          01785000
.ZG28           AIF   ('&XSERVICE' NE 'ASSIGN').ZG38                    01786000
.*-------------------------------------------------------------------   01787000
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               01788000
&ZCVAL          SETC ''           ERROR KEY FIELD                       01789000
.ZG28I0         AIF   (K'&NAME LE 0).ZG28I1                             01790000
&ZCVAL          SETC '&ZCVAL NAME'              DISALLOWED KEY          01791000
.ZG28I1         AIF   (K'&GENNAME LE 0).ZG28I2                          01792000
&ZCVAL          SETC '&ZCVAL GENNAME'           DISALLOWED KEY          01793000
.ZG28I2         AIF   (K'&OUTNAME LE 0).ZG28I3                          01794000
&ZCVAL          SETC '&ZCVAL OUTNAME'           DISALLOWED KEY          01795000
.ZG28I3         AIF   (K'&ACTION LE 0).ZG28I4                           01795300
&ZCVAL          SETC '&ZCVAL ACTION'            DISALLOWED KEY          01795600
.ZG28I4         AIF   (K'&ASASTEO LE 0).ZG28I5                          01795900
&ZCVAL          SETC '&ZCVAL ASASTEO'           DISALLOWED KEY          01796200
.ZG28I5         AIF   (K'&ZCVAL LE 0).ZG28J     KEY                     01796500
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             01797000
&ZMS            SETC  '"ASSIGN'   *KMEIA* MNOTE                         01798000
&ZMS            SETC  '&ZMS."'                                          01799000
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              01800000
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              01801000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01802000
.ZG28J          ANOP  ,                                                 01803000
.*----------------------------------------------------------------***   01825000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01826000
                AIF   (N'&STOKEN LE 1).ZG30A    CK NUM                  01827000
&ZMS            SETC  '"STOKEN='  *KPOSA* MNOTE                         01828000
&ZMS            SETC  '&ZMS.&STOKEN"'                                   01829000
&ZMS            SETC  '&ZMS "STOKEN"'                                   01830000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               01831000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01832000
.ZG30A          ANOP  ,                                                 01833000
.*-------------------------------------------------------------------   01834000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01835000
&ZXSTOKEN       SETC  'INPUT'     SET IN/OUTPUT                         01836000
&XSTOKEN        SETC  '&STOKEN(1)'              SET XVARIABLE           01837000
                AIF   (N'&STOKEN GT 1).ZG30B    MULTI PARMS             01838000
&XSTOKEN        SETC  '&STOKEN'   SET XVARIABLE                         01839000
.ZG30B          AIF   (K'&STOKEN(1) GT 0).ZG30C                         01840000
&ZXSTOKEN       SETC  ''          RESET IN/OUTPUT                       01841000
&ZMS            SETC  ' '         *KRQDA*                               01842000
&ZMS            SETC  '&ZMS "STOKEN" KEY AND ITS'                       01843000
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  01844000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01845000
.ZG30C          ANOP  ,                                                 01846000
.*-------------------------------------------------------------------   01847000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01848000
                AIF   (K'&ZXSTOKEN LE 0).ZG30R  NOT I/O                 01849000
                AIF   ('&XSTOKEN'(1,1) NE '(').ZG30R                    01850000
&ZCGPR          SETC  '&XSTOKEN'(2,K'&XSTOKEN-2)                        01851000
                AIF   ('&ZCGPR'(1,1) NE '0').ZG30P                      01852000
                AIF   (K'&ZCGPR GT 2).ZG30Q                             01853000
                AIF   ('&ZCGPR' EQ '0').ZG30Q                           01854000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     01855000
                AIF   (T'&ZCGPR NE 'N').ZG30Q   INVALID REG NAME        01856000
.ZG30P          ANOP  ,                                                 01857000
                AIF   (T'&ZCGPR NE 'N').ZG30R   NON NUMERIC             01858000
                AIF   ('&ZCGPR' LT '2').ZG30Q                           01859000
                AIF   ('&ZCGPR' LE '12').ZG30R                          01860000
.ZG30Q          ANOP  ,                                                 01861000
&ZMS            SETC  '"STOKEN='  *KGPRA* MNOTE                         01862000
&ZMS            SETC  '&ZMS.&STOKEN"'                                   01863000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         01864000
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  01865000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01866000
.ZG30R          ANOP  ,                                                 01867000
.*----------------------------------------------------------------***   01868000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01869000
                AIF   (N'&NUMRANGE LE 1).ZG33A  CK NUM                  01870000
&ZMS            SETC  '"NUMRANGE='              *KPOSA* MNOTE           01871000
&ZMS            SETC  '&ZMS.&NUMRANGE"'                                 01872000
&ZMS            SETC  '&ZMS "NUMRANGE"'                                 01873000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               01874000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01875000
.ZG33A          ANOP  ,                                                 01876000
.*-------------------------------------------------------------------   01877000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01878000
&ZXNUMRANGE     SETC  'INPUT'     SET IN/OUTPUT                         01879000
&XNUMRANGE      SETC  '1'                                               01880000
                AIF   (K'&NUMRANGE(1) LE 0).ZG33B  PARM                 01881000
&XNUMRANGE      SETC  '&NUMRANGE(1)'            SET XVARIABLE           01882000
                AIF   (N'&NUMRANGE GT 1).ZG33B  MULTI PARMS             01883000
&XNUMRANGE      SETC  '&NUMRANGE'               SET XVARIABLE           01884000
.ZG33B          ANOP  ,                                                 01885000
.*-------------------------------------------------------------------   01886000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01887000
                AIF   (K'&ZXNUMRANGE LE 0).ZG33R  NOT I/O               01888000
                AIF   ('&XNUMRANGE'(1,1) NE '(').ZG33R                  01889000
&ZCGPR          SETC  '&XNUMRANGE'(2,K'&XNUMRANGE-2)                    01890000
                AIF   ('&ZCGPR'(1,1) NE '0').ZG33P                      01891000
                AIF   (K'&ZCGPR GT 2).ZG33Q                             01892000
                AIF   ('&ZCGPR' EQ '0').ZG33Q                           01893000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     01894000
                AIF   (T'&ZCGPR NE 'N').ZG33Q   INVALID REG NAME        01895000
.ZG33P          ANOP  ,                                                 01896000
                AIF   (T'&ZCGPR NE 'N').ZG33R   NON NUMERIC             01897000
                AIF   ('&ZCGPR' LT '2').ZG33Q                           01898000
                AIF   ('&ZCGPR' LE '12').ZG33R                          01899000
.ZG33Q          ANOP  ,                                                 01900000
&ZMS            SETC  '"NUMRANGE='              *KGPRA* MNOTE           01901000
&ZMS            SETC  '&ZMS.&NUMRANGE"'                                 01902000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         01903000
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  01904000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01905000
.ZG33R          ANOP  ,                                                 01906000
.*----------------------------------------------------------------***   01907000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01908000
                AIF   (N'&RANGLIST LE 1).ZG36A  CK NUM                  01909000
&ZMS            SETC  '"RANGLIST='              *KPOSA* MNOTE           01910000
&ZMS            SETC  '&ZMS.&RANGLIST"'                                 01911000
&ZMS            SETC  '&ZMS "RANGLIST"'                                 01912000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               01913000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01914000
.ZG36A          ANOP  ,                                                 01915000
.*-------------------------------------------------------------------   01916000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01917000
&ZXRANGLIST     SETC  'INPUT'     SET IN/OUTPUT                         01918000
&XRANGLIST      SETC  '&RANGLIST(1)'            SET XVARIABLE           01919000
                AIF   (N'&RANGLIST GT 1).ZG36B  MULTI PARMS             01920000
&XRANGLIST      SETC  '&RANGLIST'               SET XVARIABLE           01921000
.ZG36B          AIF   (K'&RANGLIST(1) GT 0).ZG36C                       01922000
&ZXRANGLIST     SETC  ''          RESET IN/OUTPUT                       01923000
&ZMS            SETC  ' '         *KRQDA*                               01924000
&ZMS            SETC  '&ZMS "RANGLIST" KEY AND ITS'                     01925000
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  01926000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01927000
.ZG36C          ANOP  ,                                                 01928000
.*-------------------------------------------------------------------   01929000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01930000
                AIF   (K'&ZXRANGLIST LE 0).ZG36R  NOT I/O               01931000
                AIF   ('&XRANGLIST'(1,1) NE '(').ZG36R                  01932000
&ZCGPR          SETC  '&XRANGLIST'(2,K'&XRANGLIST-2)                    01933000
                AIF   ('&ZCGPR'(1,1) NE '0').ZG36P                      01934000
                AIF   (K'&ZCGPR GT 2).ZG36Q                             01935000
                AIF   ('&ZCGPR' EQ '0').ZG36Q                           01936000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     01937000
                AIF   (T'&ZCGPR NE 'N').ZG36Q   INVALID REG NAME        01938000
.ZG36P          ANOP  ,                                                 01939000
                AIF   (T'&ZCGPR NE 'N').ZG36R   NON NUMERIC             01940000
                AIF   ('&ZCGPR' LT '2').ZG36Q                           01941000
                AIF   ('&ZCGPR' LE '12').ZG36R                          01942000
.ZG36Q          ANOP  ,                                                 01943000
&ZMS            SETC  '"RANGLIST='              *KGPRA* MNOTE           01944000
&ZMS            SETC  '&ZMS.&RANGLIST"'                                 01945000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         01946000
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  01947000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01948000
.ZG36R          ANOP  ,                                                 01949000
.*-------------------------------------------------------------------   01950000
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          01951000
.ZG38           AIF   ('&XSERVICE' NE 'UNASSIGN').ZG48                  01952000
.*-------------------------------------------------------------------   01953000
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               01954000
&ZCVAL          SETC ''           ERROR KEY FIELD                       01955000
.ZG38I0         AIF   (K'&NAME LE 0).ZG38I1                             01956000
&ZCVAL          SETC '&ZCVAL NAME'              DISALLOWED KEY          01957000
.ZG38I1         AIF   (K'&GENNAME LE 0).ZG38I2                          01958000
&ZCVAL          SETC '&ZCVAL GENNAME'           DISALLOWED KEY          01959000
.ZG38I2         AIF   (K'&OUTNAME LE 0).ZG38I3                          01960000
&ZCVAL          SETC '&ZCVAL OUTNAME'           DISALLOWED KEY          01961000
.ZG38I3         AIF   (K'&ACTION LE 0).ZG38I4                           01961300
&ZCVAL          SETC '&ZCVAL ACTION'            DISALLOWED KEY          01961600
.ZG38I4         AIF   (K'&ASASTEO LE 0).ZG38I5                          01961900
&ZCVAL          SETC '&ZCVAL ASASTEO'           DISALLOWED KEY          01962200
.ZG38I5         AIF   (K'&ZCVAL LE 0).ZG38J     KEY                     01962500
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             01963000
&ZMS            SETC  '"UNASSIGN'               *KMEIA* MNOTE           01964000
&ZMS            SETC  '&ZMS."'                                          01965000
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              01966000
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              01967000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01968000
.ZG38J          ANOP  ,                                                 01969000
.*----------------------------------------------------------------***   01991000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01992000
                AIF   (N'&STOKEN LE 1).ZG40A    CK NUM                  01993000
&ZMS            SETC  '"STOKEN='  *KPOSA* MNOTE                         01994000
&ZMS            SETC  '&ZMS.&STOKEN"'                                   01995000
&ZMS            SETC  '&ZMS "STOKEN"'                                   01996000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               01997000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           01998000
.ZG40A          ANOP  ,                                                 01999000
.*-------------------------------------------------------------------   02000000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02001000
&ZXSTOKEN       SETC  'INPUT'     SET IN/OUTPUT                         02002000
&XSTOKEN        SETC  '&STOKEN(1)'              SET XVARIABLE           02003000
                AIF   (N'&STOKEN GT 1).ZG40B    MULTI PARMS             02004000
&XSTOKEN        SETC  '&STOKEN'   SET XVARIABLE                         02005000
.ZG40B          AIF   (K'&STOKEN(1) GT 0).ZG40C                         02006000
&ZXSTOKEN       SETC  ''          RESET IN/OUTPUT                       02007000
&ZMS            SETC  ' '         *KRQDA*                               02008000
&ZMS            SETC  '&ZMS "STOKEN" KEY AND ITS'                       02009000
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  02010000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           02011000
.ZG40C          ANOP  ,                                                 02012000
.*-------------------------------------------------------------------   02013000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02014000
                AIF   (K'&ZXSTOKEN LE 0).ZG40R  NOT I/O                 02015000
                AIF   ('&XSTOKEN'(1,1) NE '(').ZG40R                    02016000
&ZCGPR          SETC  '&XSTOKEN'(2,K'&XSTOKEN-2)                        02017000
                AIF   ('&ZCGPR'(1,1) NE '0').ZG40P                      02018000
                AIF   (K'&ZCGPR GT 2).ZG40Q                             02019000
                AIF   ('&ZCGPR' EQ '0').ZG40Q                           02020000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     02021000
                AIF   (T'&ZCGPR NE 'N').ZG40Q   INVALID REG NAME        02022000
.ZG40P          ANOP  ,                                                 02023000
                AIF   (T'&ZCGPR NE 'N').ZG40R   NON NUMERIC             02024000
                AIF   ('&ZCGPR' LT '2').ZG40Q                           02025000
                AIF   ('&ZCGPR' LE '12').ZG40R                          02026000
.ZG40Q          ANOP  ,                                                 02027000
&ZMS            SETC  '"STOKEN='  *KGPRA* MNOTE                         02028000
&ZMS            SETC  '&ZMS.&STOKEN"'                                   02029000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         02030000
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  02031000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           02032000
.ZG40R          ANOP  ,                                                 02033000
.*----------------------------------------------------------------***   02034000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02035000
                AIF   (N'&NUMRANGE LE 1).ZG43A  CK NUM                  02036000
&ZMS            SETC  '"NUMRANGE='              *KPOSA* MNOTE           02037000
&ZMS            SETC  '&ZMS.&NUMRANGE"'                                 02038000
&ZMS            SETC  '&ZMS "NUMRANGE"'                                 02039000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               02040000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           02041000
.ZG43A          ANOP  ,                                                 02042000
.*-------------------------------------------------------------------   02043000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02044000
&ZXNUMRANGE     SETC  'INPUT'     SET IN/OUTPUT                         02045000
&XNUMRANGE      SETC  '1'                                               02046000
                AIF   (K'&NUMRANGE(1) LE 0).ZG43B  PARM                 02047000
&XNUMRANGE      SETC  '&NUMRANGE(1)'            SET XVARIABLE           02048000
                AIF   (N'&NUMRANGE GT 1).ZG43B  MULTI PARMS             02049000
&XNUMRANGE      SETC  '&NUMRANGE'               SET XVARIABLE           02050000
.ZG43B          ANOP  ,                                                 02051000
.*-------------------------------------------------------------------   02052000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02053000
                AIF   (K'&ZXNUMRANGE LE 0).ZG43R  NOT I/O               02054000
                AIF   ('&XNUMRANGE'(1,1) NE '(').ZG43R                  02055000
&ZCGPR          SETC  '&XNUMRANGE'(2,K'&XNUMRANGE-2)                    02056000
                AIF   ('&ZCGPR'(1,1) NE '0').ZG43P                      02057000
                AIF   (K'&ZCGPR GT 2).ZG43Q                             02058000
                AIF   ('&ZCGPR' EQ '0').ZG43Q                           02059000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     02060000
                AIF   (T'&ZCGPR NE 'N').ZG43Q   INVALID REG NAME        02061000
.ZG43P          ANOP  ,                                                 02062000
                AIF   (T'&ZCGPR NE 'N').ZG43R   NON NUMERIC             02063000
                AIF   ('&ZCGPR' LT '2').ZG43Q                           02064000
                AIF   ('&ZCGPR' LE '12').ZG43R                          02065000
.ZG43Q          ANOP  ,                                                 02066000
&ZMS            SETC  '"NUMRANGE='              *KGPRA* MNOTE           02067000
&ZMS            SETC  '&ZMS.&NUMRANGE"'                                 02068000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         02069000
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  02070000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           02071000
.ZG43R          ANOP  ,                                                 02072000
.*----------------------------------------------------------------***   02073000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02074000
                AIF   (N'&RANGLIST LE 1).ZG46A  CK NUM                  02075000
&ZMS            SETC  '"RANGLIST='              *KPOSA* MNOTE           02076000
&ZMS            SETC  '&ZMS.&RANGLIST"'                                 02077000
&ZMS            SETC  '&ZMS "RANGLIST"'                                 02078000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               02079000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           02080000
.ZG46A          ANOP  ,                                                 02081000
.*-------------------------------------------------------------------   02082000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02083000
&ZXRANGLIST     SETC  'INPUT'     SET IN/OUTPUT                         02084000
&XRANGLIST      SETC  '&RANGLIST(1)'            SET XVARIABLE           02085000
                AIF   (N'&RANGLIST GT 1).ZG46B  MULTI PARMS             02086000
&XRANGLIST      SETC  '&RANGLIST'               SET XVARIABLE           02087000
.ZG46B          AIF   (K'&RANGLIST(1) GT 0).ZG46C                       02088000
&ZXRANGLIST     SETC  ''          RESET IN/OUTPUT                       02089000
&ZMS            SETC  ' '         *KRQDA*                               02090000
&ZMS            SETC  '&ZMS "RANGLIST" KEY AND ITS'                     02091000
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  02092000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           02093000
.ZG46C          ANOP  ,                                                 02094000
.*-------------------------------------------------------------------   02095000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02096000
                AIF   (K'&ZXRANGLIST LE 0).ZG46R  NOT I/O               02097000
                AIF   ('&XRANGLIST'(1,1) NE '(').ZG46R                  02098000
&ZCGPR          SETC  '&XRANGLIST'(2,K'&XRANGLIST-2)                    02099000
                AIF   ('&ZCGPR'(1,1) NE '0').ZG46P                      02100000
                AIF   (K'&ZCGPR GT 2).ZG46Q                             02101000
                AIF   ('&ZCGPR' EQ '0').ZG46Q                           02102000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     02103000
                AIF   (T'&ZCGPR NE 'N').ZG46Q   INVALID REG NAME        02104000
.ZG46P          ANOP  ,                                                 02105000
                AIF   (T'&ZCGPR NE 'N').ZG46R   NON NUMERIC             02106000
                AIF   ('&ZCGPR' LT '2').ZG46Q                           02107000
                AIF   ('&ZCGPR' LE '12').ZG46R                          02108000
.ZG46Q          ANOP  ,                                                 02109000
&ZMS            SETC  '"RANGLIST='              *KGPRA* MNOTE           02110000
&ZMS            SETC  '&ZMS.&RANGLIST"'                                 02111000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         02112000
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  02113000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           02114000
.ZG46R          ANOP  ,                                                 02115000
.*-------------------------------------------------------------------   02116000
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          02117000
.ZG48           AIF   ('&XSERVICE' NE 'DELETE').ZG52                    02118000
.*-------------------------------------------------------------------   02119000
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               02120000
&ZCVAL          SETC ''           ERROR KEY FIELD                       02121000
.ZG48I0         AIF   (K'&NUMRANGE LE 0).ZG48I1                         02122000
&ZCVAL          SETC '&ZCVAL NUMRANGE'          DISALLOWED KEY          02123000
.ZG48I1         AIF   (K'&RANGLIST LE 0).ZG48I2                         02124000
&ZCVAL          SETC '&ZCVAL RANGLIST'          DISALLOWED KEY          02125000
.ZG48I2         AIF   (K'&NAME LE 0).ZG48I3                             02126000
&ZCVAL          SETC '&ZCVAL NAME'              DISALLOWED KEY          02127000
.ZG48I3         AIF   (K'&GENNAME LE 0).ZG48I4                          02128000
&ZCVAL          SETC '&ZCVAL GENNAME'           DISALLOWED KEY          02129000
.ZG48I4         AIF   (K'&OUTNAME LE 0).ZG48I5                          02130000
&ZCVAL          SETC '&ZCVAL OUTNAME'           DISALLOWED KEY          02131000
.ZG48I5         AIF   (K'&ACTION LE 0).ZG48I6                           02131300
&ZCVAL          SETC '&ZCVAL ACTION'            DISALLOWED KEY          02131600
.ZG48I6         AIF   (K'&ASASTEO LE 0).ZG48I7                          02131900
&ZCVAL          SETC '&ZCVAL ASASTEO'           DISALLOWED KEY          02132200
.ZG48I7         AIF   (K'&ZCVAL LE 0).ZG48J     KEY                     02132500
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             02133000
&ZMS            SETC  '"DELETE'   *KMEIA* MNOTE                         02134000
&ZMS            SETC  '&ZMS."'                                          02135000
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              02136000
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              02137000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           02138000
.ZG48J          ANOP  ,                                                 02139000
.*----------------------------------------------------------------***   02161000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02162000
                AIF   (N'&STOKEN LE 1).ZG50A    CK NUM                  02163000
&ZMS            SETC  '"STOKEN='  *KPOSA* MNOTE                         02164000
&ZMS            SETC  '&ZMS.&STOKEN"'                                   02165000
&ZMS            SETC  '&ZMS "STOKEN"'                                   02166000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               02167000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           02168000
.ZG50A          ANOP  ,                                                 02169000
.*-------------------------------------------------------------------   02170000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02171000
&ZXSTOKEN       SETC  'INPUT'     SET IN/OUTPUT                         02172000
&XSTOKEN        SETC  '&STOKEN(1)'              SET XVARIABLE           02173000
                AIF   (N'&STOKEN GT 1).ZG50B    MULTI PARMS             02174000
&XSTOKEN        SETC  '&STOKEN'   SET XVARIABLE                         02175000
.ZG50B          AIF   (K'&STOKEN(1) GT 0).ZG50C                         02176000
&ZXSTOKEN       SETC  ''          RESET IN/OUTPUT                       02177000
&ZMS            SETC  ' '         *KRQDA*                               02178000
&ZMS            SETC  '&ZMS "STOKEN" KEY AND ITS'                       02179000
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  02180000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           02181000
.ZG50C          ANOP  ,                                                 02182000
.*-------------------------------------------------------------------   02183000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02184000
                AIF   (K'&ZXSTOKEN LE 0).ZG50R  NOT I/O                 02185000
                AIF   ('&XSTOKEN'(1,1) NE '(').ZG50R                    02186000
&ZCGPR          SETC  '&XSTOKEN'(2,K'&XSTOKEN-2)                        02187000
                AIF   ('&ZCGPR'(1,1) NE '0').ZG50P                      02188000
                AIF   (K'&ZCGPR GT 2).ZG50Q                             02189000
                AIF   ('&ZCGPR' EQ '0').ZG50Q                           02190000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     02191000
                AIF   (T'&ZCGPR NE 'N').ZG50Q   INVALID REG NAME        02192000
.ZG50P          ANOP  ,                                                 02193000
                AIF   (T'&ZCGPR NE 'N').ZG50R   NON NUMERIC             02194000
                AIF   ('&ZCGPR' LT '2').ZG50Q                           02195000
                AIF   ('&ZCGPR' LE '12').ZG50R                          02196000
.ZG50Q          ANOP  ,                                                 02197000
&ZMS            SETC  '"STOKEN='  *KGPRA* MNOTE                         02198000
&ZMS            SETC  '&ZMS.&STOKEN"'                                   02199000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         02200000
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  02201000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           02202000
.ZG50R          ANOP  ,                                                 02203000
.*-------------------------------------------------------------------   02204000
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          02205000
.ZG52           AIF   ('&XSERVICE' NE 'UNIDENTIFY').ZG59                02206000
.*-------------------------------------------------------------------   02207000
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               02208000
&ZCVAL          SETC ''           ERROR KEY FIELD                       02209000
.ZG52I0         AIF   (K'&NAME LE 0).ZG52I1                             02210000
&ZCVAL          SETC '&ZCVAL NAME'              DISALLOWED KEY          02211000
.ZG52I1         AIF   (K'&GENNAME LE 0).ZG52I2                          02212000
&ZCVAL          SETC '&ZCVAL GENNAME'           DISALLOWED KEY          02213000
.ZG52I2         AIF   (K'&OUTNAME LE 0).ZG52I3                          02214000
&ZCVAL          SETC '&ZCVAL OUTNAME'           DISALLOWED KEY          02215000
.ZG52I3         AIF   (K'&STOKEN LE 0).ZG52I4                           02216000
&ZCVAL          SETC '&ZCVAL STOKEN'            DISALLOWED KEY          02217000
.ZG52I4         AIF   (K'&ACTION LE 0).ZG52I5                           02217300
&ZCVAL          SETC '&ZCVAL ACTION'            DISALLOWED KEY          02217600
.ZG52I5         AIF   (K'&ASASTEO LE 0).ZG52I6                          02217900
&ZCVAL          SETC '&ZCVAL ASASTEO'           DISALLOWED KEY          02218200
.ZG52I6         AIF   (K'&ZCVAL LE 0).ZG52J     KEY                     02218500
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             02219000
&ZMS            SETC  '"UNIDENTIFY'             *KMEIA* MNOTE           02220000
&ZMS            SETC  '&ZMS."'                                          02221000
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              02222000
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              02223000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           02224000
.ZG52J          ANOP  ,                                                 02225000
.*----------------------------------------------------------------***   02247000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02248000
                AIF   (N'&NUMRANGE LE 1).ZG54A  CK NUM                  02249000
&ZMS            SETC  '"NUMRANGE='              *KPOSA* MNOTE           02250000
&ZMS            SETC  '&ZMS.&NUMRANGE"'                                 02251000
&ZMS            SETC  '&ZMS "NUMRANGE"'                                 02252000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               02253000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           02254000
.ZG54A          ANOP  ,                                                 02255000
.*-------------------------------------------------------------------   02256000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02257000
&ZXNUMRANGE     SETC  'INPUT'     SET IN/OUTPUT                         02258000
&XNUMRANGE      SETC  '1'                                               02259000
                AIF   (K'&NUMRANGE(1) LE 0).ZG54B  PARM                 02260000
&XNUMRANGE      SETC  '&NUMRANGE(1)'            SET XVARIABLE           02261000
                AIF   (N'&NUMRANGE GT 1).ZG54B  MULTI PARMS             02262000
&XNUMRANGE      SETC  '&NUMRANGE'               SET XVARIABLE           02263000
.ZG54B          ANOP  ,                                                 02264000
.*-------------------------------------------------------------------   02265000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02266000
                AIF   (K'&ZXNUMRANGE LE 0).ZG54R  NOT I/O               02267000
                AIF   ('&XNUMRANGE'(1,1) NE '(').ZG54R                  02268000
&ZCGPR          SETC  '&XNUMRANGE'(2,K'&XNUMRANGE-2)                    02269000
                AIF   ('&ZCGPR'(1,1) NE '0').ZG54P                      02270000
                AIF   (K'&ZCGPR GT 2).ZG54Q                             02271000
                AIF   ('&ZCGPR' EQ '0').ZG54Q                           02272000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     02273000
                AIF   (T'&ZCGPR NE 'N').ZG54Q   INVALID REG NAME        02274000
.ZG54P          ANOP  ,                                                 02275000
                AIF   (T'&ZCGPR NE 'N').ZG54R   NON NUMERIC             02276000
                AIF   ('&ZCGPR' LT '2').ZG54Q                           02277000
                AIF   ('&ZCGPR' LE '12').ZG54R                          02278000
.ZG54Q          ANOP  ,                                                 02279000
&ZMS            SETC  '"NUMRANGE='              *KGPRA* MNOTE           02280000
&ZMS            SETC  '&ZMS.&NUMRANGE"'                                 02281000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         02282000
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  02283000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           02284000
.ZG54R          ANOP  ,                                                 02285000
.*----------------------------------------------------------------***   02286000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02287000
                AIF   (N'&RANGLIST LE 1).ZG57A  CK NUM                  02288000
&ZMS            SETC  '"RANGLIST='              *KPOSA* MNOTE           02289000
&ZMS            SETC  '&ZMS.&RANGLIST"'                                 02290000
&ZMS            SETC  '&ZMS "RANGLIST"'                                 02291000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               02292000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           02293000
.ZG57A          ANOP  ,                                                 02294000
.*-------------------------------------------------------------------   02295000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02296000
&ZXRANGLIST     SETC  'INPUT'     SET IN/OUTPUT                         02297000
&XRANGLIST      SETC  '&RANGLIST(1)'            SET XVARIABLE           02298000
                AIF   (N'&RANGLIST GT 1).ZG57B  MULTI PARMS             02299000
&XRANGLIST      SETC  '&RANGLIST'               SET XVARIABLE           02300000
.ZG57B          AIF   (K'&RANGLIST(1) GT 0).ZG57C                       02301000
&ZXRANGLIST     SETC  ''          RESET IN/OUTPUT                       02302000
&ZMS            SETC  ' '         *KRQDA*                               02303000
&ZMS            SETC  '&ZMS "RANGLIST" KEY AND ITS'                     02304000
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  02305000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           02306000
.ZG57C          ANOP  ,                                                 02307000
.*-------------------------------------------------------------------   02308000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02309000
                AIF   (K'&ZXRANGLIST LE 0).ZG57R  NOT I/O               02310000
                AIF   ('&XRANGLIST'(1,1) NE '(').ZG57R                  02311000
&ZCGPR          SETC  '&XRANGLIST'(2,K'&XRANGLIST-2)                    02312000
                AIF   ('&ZCGPR'(1,1) NE '0').ZG57P                      02313000
                AIF   (K'&ZCGPR GT 2).ZG57Q                             02314000
                AIF   ('&ZCGPR' EQ '0').ZG57Q                           02315000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     02316000
                AIF   (T'&ZCGPR NE 'N').ZG57Q   INVALID REG NAME        02317000
.ZG57P          ANOP  ,                                                 02318000
                AIF   (T'&ZCGPR NE 'N').ZG57R   NON NUMERIC             02319000
                AIF   ('&ZCGPR' LT '2').ZG57Q                           02320000
                AIF   ('&ZCGPR' LE '12').ZG57R                          02321000
.ZG57Q          ANOP  ,                                                 02322000
&ZMS            SETC  '"RANGLIST='              *KGPRA* MNOTE           02323000
&ZMS            SETC  '&ZMS.&RANGLIST"'                                 02324000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         02325000
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  02326000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           02327000
.ZG57R          ANOP  ,                                                 02328000
.*-------------------------------------------------------------------   02329000
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          02329100
.ZG59           AIF   ('&XSERVICE' NE 'SHARE').ZG67                     02329200
.*-------------------------------------------------------------------   02329300
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               02329400
&ZCVAL          SETC ''           ERROR KEY FIELD                       02329500
.ZG59I0         AIF   (K'&NUMRANGE LE 0).ZG59I1                         02329600
&ZCVAL          SETC '&ZCVAL NUMRANGE'          DISALLOWED KEY          02329700
.ZG59I1         AIF   (K'&RANGLIST LE 0).ZG59I2                         02329800
&ZCVAL          SETC '&ZCVAL RANGLIST'          DISALLOWED KEY          02329900
.ZG59I2         AIF   (K'&NAME LE 0).ZG59I3                             02330000
&ZCVAL          SETC '&ZCVAL NAME'              DISALLOWED KEY          02330100
.ZG59I3         AIF   (K'&GENNAME LE 0).ZG59I4                          02330200
&ZCVAL          SETC '&ZCVAL GENNAME'           DISALLOWED KEY          02330300
.ZG59I4         AIF   (K'&OUTNAME LE 0).ZG59I5                          02330400
&ZCVAL          SETC '&ZCVAL OUTNAME'           DISALLOWED KEY          02330500
.ZG59I5         AIF   (K'&STOKEN LE 0).ZG59I6                           02330600
&ZCVAL          SETC '&ZCVAL STOKEN'            DISALLOWED KEY          02330700
.ZG59I6         AIF   (K'&ZCVAL LE 0).ZG59J     KEY                     02330800
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             02330900
&ZMS            SETC  '"SHARE'    *KMEIA* MNOTE                         02331000
&ZMS            SETC  '&ZMS."'                                          02331100
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              02331200
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              02331300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           02331400
.ZG59J          ANOP  ,                                                 02331500
.*------------------------------------------------------------------    02331600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02331700
&XACTION        SETC  ''          INITIALIZE XVARIABLE                  02331800
.*-------------------------------------------------------------------   02331900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02332000
.ZG62           ANOP  ,                                                 02332100
                AIF   (K'&ACTION(1) LE 0).ZG62A                         02332200
&ZTLC           SETC 'ATTACH'                                           02332300
                AIF   ('&ACTION(1)' NE '&ZTLC').ZG66                    02332400
&XACTION        SETC  'ATTACH'    SET KEYWORD                           02332500
                AIF   (N'&ACTION LE 1).ZG62A    CK NUM                  02332600
&ZMS            SETC  '"ACTION='  *KPOSA* MNOTE                         02332700
&ZMS            SETC  '&ZMS.&ACTION"'                                   02332800
&ZMS            SETC  '&ZMS "ACTION"'                                   02332900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               02333000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           02333100
.ZG62A          ANOP  ,                                                 02333200
.*----------------------------------------------------------------***   02333300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02333400
                AIF   (N'&ASASTEO LE 1).ZG64A   CK NUM                  02333500
&ZMS            SETC  '"ASASTEO='               *KPOSA* MNOTE           02333600
&ZMS            SETC  '&ZMS.&ASASTEO"'                                  02333700
&ZMS            SETC  '&ZMS "ASASTEO"'                                  02333800
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               02333900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           02334000
.ZG64A          ANOP  ,                                                 02334100
.*-------------------------------------------------------------------   02334200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02334300
&ZXASASTEO      SETC  'INPUT'     SET IN/OUTPUT                         02334400
&XASASTEO       SETC  '&ASASTEO(1)'             SET XVARIABLE           02334500
                AIF   (N'&ASASTEO GT 1).ZG64B   MULTI PARMS             02334600
&XASASTEO       SETC  '&ASASTEO'  SET XVARIABLE                         02334700
.ZG64B          AIF   (K'&ASASTEO(1) GT 0).ZG64C                        02334800
&ZXASASTEO      SETC  ''          RESET IN/OUTPUT                       02334900
&ZMS            SETC  'WHEN "ATTACH" IS SPECIFIED'  *KRQDA*             02335000
&ZMS            SETC  '&ZMS , "ASASTEO" KEY AND ITS'                    02335100
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  02335200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           02335300
.ZG64C          ANOP  ,                                                 02335400
.*-------------------------------------------------------------------   02335500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02335600
                AIF   (K'&ZXASASTEO LE 0).ZG64R  NOT I/O                02335700
                AIF   ('&XASASTEO'(1,1) NE '(').ZG64R                   02335800
&ZCGPR          SETC  '&XASASTEO'(2,K'&XASASTEO-2)                      02335900
                AIF   ('&ZCGPR'(1,1) NE '0').ZG64P                      02336000
                AIF   (K'&ZCGPR GT 2).ZG64Q                             02336100
                AIF   ('&ZCGPR' EQ '0').ZG64Q                           02336200
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     02336300
                AIF   (T'&ZCGPR NE 'N').ZG64Q   INVALID REG NAME        02336400
.ZG64P          ANOP  ,                                                 02336500
                AIF   (T'&ZCGPR NE 'N').ZG64R   NON NUMERIC             02336600
                AIF   ('&ZCGPR' LT '2').ZG64Q                           02336700
                AIF   ('&ZCGPR' LE '12').ZG64R                          02336800
.ZG64Q          ANOP  ,                                                 02336900
&ZMS            SETC  '"ASASTEO='               *KGPRA* MNOTE           02337000
&ZMS            SETC  '&ZMS.&ASASTEO"'                                  02337100
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         02337200
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  02337300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           02337400
.ZG64R          ANOP  ,                                                 02337500
.*------------------------------------------------------------------    02337600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02337700
.ZG66           ANOP  ,                                                 02337800
&ZXACTION       SETC  'INPUT'     SET IN/OUTPUT                         02337900
                AIF   (K'&XACTION GT 0).ZG66E   VALID ARG               02338000
                AIF   (T'&ACTION EQ 'O').ZG66D  OMITTED                 02338100
&ZASYSLNDX      SETA  0                                                 02338200
.ZG66A          ANOP  ,           POSITIONAL MACRO KEY                  02338300
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      02338400
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG66C                  02338500
&ZTLC           SETC 'ACTION'                                           02338600
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG66A         02338700
.ZG66B          ANOP  ,                                                 02338800
&ZXACTION       SETC  ''          RESET IN/OUTPUT                       02338900
&ZMS            SETC  'THE "ACTION" KEY'        *KOPTA* MNOTE           02339000
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           02339100
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  02339200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           02339300
                AGO   .ZG66E                                            02339400
.ZG66C          ANOP  ,                                                 02339500
&ZXACTION       SETC  ''          RESET IN/OUTPUT                       02339600
&ZMS            SETC  '"ACTION='  *KUKWA* MNOTE                         02339700
&ZMS            SETC  '&ZMS.&ACTION"'                                   02339800
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         02339900
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               02340000
&ZMS            SETC  '&ZMS "ATTACH".'                                  02340100
                MNOTE 8,' &ZMS '                                        02340200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           02340300
                AGO   .ZG66E                                            02340400
.ZG66D          ANOP  ,                                                 02340500
&XACTION        SETC  'ATTACH'    SET DEFAULT KEYWORD                   02340600
.ZG66E          ANOP  ,                                                 02340700
.*-------------------------------------------------------------------   02340800
.***AG.KMEKY15 VALUE, RQD INPUT, ME KEYS -END                           02340900
.ZG67           ANOP  ,           END MUTUALLY EXCLUSIVE KEYS           02341000
.******************************************************************     02341100
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        02341200
.******************************************************************     02341300
                ACTR  10000                                             02341400
.*-------------------------------------------------------------------   02341500
.***AH.P03 EXTRA POSITIONALS AMONG NON-X KEYS                           02341600
&ZCVAL          SETC  ''          ERROR FIELD                           02341700
&ZAWRK          SETA  0           POSITIONAL COUNTER                    02341800
&ZASYSLNDX      SETA  0           NON-X KEY COUNTER                     02341900
.ZGLIST2        ANOP  ,                                                 02342000
&ZASYSLNDX      SETA  &ZASYSLNDX+1              NEXT NON-X KEY          02342100
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZGLIST3  DONE                 02343000
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZGLIST2          02344000
&ZAWRK          SETA  &ZAWRK+1    NEXT POSITIONAL                       02345000
                AIF   (&ZAWRK LE 0).ZGLIST2                             02346000
&ZCVAL          SETC '&ZCVAL,&SYSLIST(&ZASYSLNDX)'  EXTRA               02347000
                AGO   .ZGLIST2                                          02348000
.*                                                                      02349000
.ZGLIST3  AIF  (K'&ZCVAL LE 0).ZGLISTX                                  02350000
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)     STRIP COMMA             02351000
&ZMS            SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE          02352000
&ZMS            SETC  '&ZMS "&ZCVAL"'                                   02353000
&ZMS            SETC  '&ZMS CANNOT BE USED.'                            02354000
&ZMS            SETC  '&ZMS NO POSITIONAL ARGUMENTS'                    02355000
                MNOTE 8,' &ZMS ARE ALLOWED.'                            02356000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           02357000
.ZGLISTX        ANOP  ,                                                 02358000
&ZASYSLNDX      SETA  0                                                 02359000
.*-------------------------------------------------------------------   02360000
.***AG.MF04 MF=(SLE)                                                    02361000
.ZGMFX          ANOP  ,           END OF FULL SYNTAX CHECK              02362000
.*******************************************************************    02363000
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       02364000
.*******************************************************************    02365000
                AIF   (&ZMACRET NE 0).ZLX2      ERROR DETECTED          02366000
.*******************************************************************    02367000
.***AE.01  START OF IARSUBSP MACRO CODE                                 02368000
.*******************************************************************    02369000
                LCLC  &M0M0001                 NAME                     02370000
&M0M0001        SETC  '&XLABEL'                SET NAME                 02371000
                AIF   (K'&XLABEL NE 0).XLAB2                            02372000
&M0M0001        SETC  'M00M&SYSNDX'            DEFAULT NAME             02373000
.*                                                                      02374000
.XLAB2          ANOP  ,                                                 02375000
                AIF   ('&XMF' EQ 'L').XLAB3                             02375500
&M0M0001 DS    0H                             IARSUBSP-0                02376000
.XLAB3          ANOP  ,                                                 02376500
.*******************************************************************    02377000
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              02378000
.*******************************************************************    02379000
              PUSH  PRINT                                               02380000
                AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON        02381000
                PRINT OFF         ++ PR01                               02382000
                AGO   .ZPRNTXX                                          02383000
.ZPRINTX        PRINT ON                                                02384000
.ZPRNTXX        ANOP  ,                                                 02385000
.********************************************************************   02386000
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     02387000
.********************************************************************   02388000
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       02389000
                      LCLA  &ZOPN1         INVOCATION INDEX             02390000
                      LCLC  &ZOPL(4095)    LABEL                        02391000
                      LCLC  &ZOPO(4095)    OPERATION                    02392000
                      LCLC  &ZOPV(4095)    VALUE                        02393000
                      LCLC  &ZOPD(4095)    DESCRIPTION                  02394000
.*                                                                      02395000
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     02396000
.******************************************************************     02397000
.***AL.L10 IARSUBSP FMT=LIST MF=S|L PARAMETERS                          02398000
.******************************************************************     02399000
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     02400000
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     02401000
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     02402000
&XMFATTR              SETC  '0D'                                        02403000
.*                                                                      02404000
&ZOPN                 SETA  &ZOPN+1                                     02405000
&ZOPL(&ZOPN)          SETC  ' '                                         02406000
                      AIF   (&SYSALVL NE 0).ZALVL6A                     02406500
&ZOPO(&ZOPN)          SETC  'B'                                         02407000
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                02408000
                      AGO   .ZALVL6B                                    02408100
.ZALVL6A              ANOP                                              02408200
&ZOPO(&ZOPN)          SETC  'BRAS'                                      02408300
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              02408400
.ZALVL6B              ANOP                                              02408500
&ZOPD(&ZOPN)          SETC  '++ IARSUBSP ARG PARMS'                     02409000
.*                                                                      02410000
&ZOPN                 SETA  &ZOPN+1                                     02411000
&ZOPL(&ZOPN)          SETC  ' '                                         02412000
&ZOPO(&ZOPN)          SETC  'SPACE'                                     02413000
&ZOPV(&ZOPN)          SETC  '1'                                         02414000
&ZOPD(&ZOPN)          SETC  ' '                                         02415000
.*                                                                      02416000
.ZLMFSL2              ANOP  ,                                           02417000
.*-------------------------------------------------------------------   02417100
.***AM.L00  IARSUBSP FMT=LIST name                                      02417200
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    02417300
&ZOPN                 SETA &ZOPN+1                                      02417400
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   02417500
&ZOPO(&ZOPN)          SETC 'EQU'                                        02417600
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   02417700
&ZOPD(&ZOPN)          SETC '++ IARSUBSP NAME'                           02417800
.ZLMFSL2M             ANOP  ,                                           02417900
.*-------------------------------------------------------------------   02418000
.***AM.L01  IARSUBSP FMT=LIST PARAMETERS                                02419000
&ZOPN                 SETA &ZOPN+1                                      02420000
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   02421000
&ZOPO(&ZOPN)          SETC 'DS'                                         02422000
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   02423000
&ZOPD(&ZOPN)          SETC '++ IARSUBSP PARM LIST'                      02424000
.*-------------------------------------------------------------------   02425000
.***AM.L02 XVERSION XL1                                                 02426000
&ZOPN                 SETA &ZOPN+1                                      02427000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         02428000
&ZOPO(&ZOPN)          SETC 'DS'                                         02429000
&ZOPV(&ZOPN)          SETC 'XL1'                                        02430000
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          02431000
.*-------------------------------------------------------------------   02432000
.***AM.L05 XSERVICE XL1                                                 02433000
&ZOPN                 SETA &ZOPN+1                                      02434000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSERVICE'                         02435000
&ZOPO(&ZOPN)          SETC 'DS'                                         02436000
&ZOPV(&ZOPN)          SETC 'XL1'                                        02437000
&ZOPD(&ZOPN)          SETC '++ &ZXSERVICE XSERVICE'                     02438000
.*                                                                      02439000
&ZOPN                 SETA  &ZOPN+1                                     02440000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._IDENTIFY'                        02441000
&ZOPO(&ZOPN)          SETC  'EQU'                                       02442000
&ZOPV(&ZOPN)          SETC  '1'                                         02443000
&ZOPD(&ZOPN)          SETC  '++ XSERVICE.'                              02444000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IDENTIFY'                     02445000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      02446000
.*                                                                      02447000
&ZOPN                 SETA  &ZOPN+1                                     02448000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._CREATE'                          02449000
&ZOPO(&ZOPN)          SETC  'EQU'                                       02450000
&ZOPV(&ZOPN)          SETC  '2'                                         02451000
&ZOPD(&ZOPN)          SETC  '++ XSERVICE.'                              02452000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CREATE'                       02453000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      02454000
.*                                                                      02455000
&ZOPN                 SETA  &ZOPN+1                                     02456000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._ASSIGN'                          02457000
&ZOPO(&ZOPN)          SETC  'EQU'                                       02458000
&ZOPV(&ZOPN)          SETC  '3'                                         02459000
&ZOPD(&ZOPN)          SETC  '++ XSERVICE.'                              02460000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASSIGN'                       02461000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      02462000
.*                                                                      02463000
&ZOPN                 SETA  &ZOPN+1                                     02464000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._UNASSIGN'                        02465000
&ZOPO(&ZOPN)          SETC  'EQU'                                       02466000
&ZOPV(&ZOPN)          SETC  '4'                                         02467000
&ZOPD(&ZOPN)          SETC  '++ XSERVICE.'                              02468000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).UNASSIGN'                     02469000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      02470000
.*                                                                      02471000
&ZOPN                 SETA  &ZOPN+1                                     02472000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._DELETE'                          02473000
&ZOPO(&ZOPN)          SETC  'EQU'                                       02474000
&ZOPV(&ZOPN)          SETC  '5'                                         02475000
&ZOPD(&ZOPN)          SETC  '++ XSERVICE.'                              02476000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DELETE'                       02477000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      02478000
.*                                                                      02479000
&ZOPN                 SETA  &ZOPN+1                                     02480000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._UNIDENTIFY'                      02481000
&ZOPO(&ZOPN)          SETC  'EQU'                                       02482000
&ZOPV(&ZOPN)          SETC  '6'                                         02483000
&ZOPD(&ZOPN)          SETC  '++ XSERVICE.'                              02484000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).UNIDENTIFY'                   02485000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      02486000
.*                                                                      02486100
&ZOPN                 SETA  &ZOPN+1                                     02486200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._SHARE'                           02486300
&ZOPO(&ZOPN)          SETC  'EQU'                                       02486400
&ZOPV(&ZOPN)          SETC  '7'                                         02486500
&ZOPD(&ZOPN)          SETC  '++ XSERVICE.'                              02486600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SHARE'                        02486700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      02486800
.*-------------------------------------------------------------------   02487000
.***AM.L03 XFLAGS1 BL.8                                                 02488000
&ZOPN                 SETA &ZOPN+1                                      02489000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS1'                          02490000
&ZOPO(&ZOPN)          SETC 'DS'                                         02491000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       02492000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             02493000
.*                                                                      02494000
&ZOPN                 SETA  &ZOPN+1                                     02495000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._GENNAME_COND'                    02496000
&ZOPO(&ZOPN)          SETC  'EQU'                                       02497000
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             02498000
&ZOPD(&ZOPN)          SETC  '++ XGENNAME.'                              02499000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).COND'                         02500000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      02501000
.*                                                                      02502000
&ZOPN                 SETA  &ZOPN+1                                     02503000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._GENNAME_YES'                     02504000
&ZOPO(&ZOPN)          SETC  'EQU'                                       02505000
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             02506000
&ZOPD(&ZOPN)          SETC  '++ XGENNAME.'                              02507000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          02508000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      02509000
.*-------------------------------------------------------------------   02510000
.***AM.L09  XRSV0000 CL1                                                02511000
&ZOPN                 SETA &ZOPN+1                                      02512000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0000'                         02513000
&ZOPO(&ZOPN)          SETC 'DS'                                         02514000
&ZOPV(&ZOPN)          SETC 'CL1'                                        02515000
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0000'                      02516000
.*-------------------------------------------------------------------   02517000
.***AM.L09  XOUTNAME CL8                                                02518000
&ZOPN                 SETA &ZOPN+1                                      02519000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOUTNAME'                         02520000
&ZOPO(&ZOPN)          SETC 'DS'                                         02521000
&ZOPV(&ZOPN)          SETC 'CL8'                                        02522000
&ZOPD(&ZOPN)          SETC '++ &ZXOUTNAME  XOUTNAME'                    02523000
.*-------------------------------------------------------------------   02524000
.***AM.L09  XSTOKEN CL8                                                 02525000
&ZOPN                 SETA &ZOPN+1                                      02526000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTOKEN'                          02527000
&ZOPO(&ZOPN)          SETC 'DS'                                         02528000
&ZOPV(&ZOPN)          SETC 'CL8'                                        02529000
&ZOPD(&ZOPN)          SETC '++ &ZXSTOKEN  XSTOKEN'                      02530000
.*-------------------------------------------------------------------   02531000
.***AM.L09  XNUMRANGE F                                                 02532000
&ZOPN                 SETA &ZOPN+1                                      02533000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNUMRANGE'                        02534000
&ZOPO(&ZOPN)          SETC 'DS'                                         02535000
&ZOPV(&ZOPN)          SETC 'F'                                          02536000
&ZOPD(&ZOPN)          SETC '++ &ZXNUMRANGE  XNUMRANGE'                  02537000
.*-------------------------------------------------------------------   02538000
.***AM.L09  XRANGLIST A                                                 02539000
&ZOPN                 SETA &ZOPN+1                                      02540000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRANGLIST'                        02541000
&ZOPO(&ZOPN)          SETC 'DS'                                         02542000
&ZOPV(&ZOPN)          SETC 'A'                                          02543000
&ZOPD(&ZOPN)          SETC '++ &ZXRANGLIST  XRANGLIST'                  02544000
.*-------------------------------------------------------------------   02545000
.***AM.MLM1 SAVED LOCATION COUNTER                                      02546000
                      AIF  ('&ZENDBASEPL' NE '').ZL17LB                 02546300
&ZENDBASEPL           SETC 'YES'                                        02546600
&ZOPN                 SETA &ZOPN+1                                      02547000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           02548000
&ZOPO(&ZOPN)          SETC 'EQU'                                        02549000
&ZOPV(&ZOPN)          SETC '*'                                          02550000
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       02551000
.ZL17LB               ANOP  ,                                           02551500
.*-------------------------------------------------------------------   02552000
.***AM.PJR1 DEFINED ON XOUTNAME                                         02553000
&ZOPN                 SETA &ZOPN+1                                      02554000
&ZOPL(&ZOPN)          SETC ' '                                          02555000
&ZOPO(&ZOPN)          SETC 'ORG'                                        02556000
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+4'                                02557000
&ZOPD(&ZOPN)          SETC ' '                                          02558000
.*-------------------------------------------------------------------   02559000
.***AM.L09  XNAME CL8                                                   02560000
&ZOPN                 SETA &ZOPN+1                                      02561000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNAME'                            02562000
&ZOPO(&ZOPN)          SETC 'DS'                                         02563000
&ZOPV(&ZOPN)          SETC 'CL8'                                        02564000
&ZOPD(&ZOPN)          SETC '++ &ZXNAME  XNAME'                          02565000
.*-------------------------------------------------------------------   02565100
.***AM.L09  XASASTEO A                                                  02565200
&ZOPN                 SETA &ZOPN+1                                      02565300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XASASTEO'                         02565400
&ZOPO(&ZOPN)          SETC 'DS'                                         02565500
&ZOPV(&ZOPN)          SETC 'A'                                          02565600
&ZOPD(&ZOPN)          SETC '++ &ZXASASTEO  XASASTEO'                    02565700
&ZOPN                 SETA &ZOPN+1                                      02566000
&ZOPL(&ZOPN)          SETC ' '                                          02567000
&ZOPO(&ZOPN)          SETC 'ORG'                                        02568000
&ZOPV(&ZOPN)          SETC '&XMFCTRL._PL_END'                           02569000
&ZOPD(&ZOPN)          SETC 'RESET LOCATION COUNTER'                     02570000
.*-------------------------------------------------------------------   02571000
.***AM.L10 END OF IARSUBSP LIST PARAMETERS                              02572000
&ZOPN                 SETA &ZOPN+1                                      02573000
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 02574000
&ZOPO(&ZOPN)          SETC 'EQU'                                        02575000
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 02576000
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         02577000
.*                                                                      02578000
&ZOPN                 SETA &ZOPN+1                                      02579000
&ZOPL(&ZOPN)          SETC ' '                                          02580000
&ZOPO(&ZOPN)          SETC 'SPACE'                                      02581000
&ZOPV(&ZOPN)          SETC '1'                                          02582000
&ZOPD(&ZOPN)          SETC ' '                                          02583000
.*-------------------------------------------------------------------   02584000
.***AL.L12 IARSUBSP FMT=LIST MF=S|L PARAMETERS                          02585000
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         02586000
.*                                                                      02587000
&ZOPN                 SETA  &ZOPN+1                                     02588000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                02589000
&ZOPO(&ZOPN)          SETC  'DC'                                        02590000
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   02591000
&ZOPD(&ZOPN)          SETC  '++ IARSUBSP ARG PARMS'                     02592000
.*                                                                      02593000
.ZLMFSLX              ANOP  ,                                           02594000
.*-------------------------------------------------------------------   02595000
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          02596000
&ZPLLEN               SETA 28                                           02597000
.*                                                                      02598000
.******************************************************************     02599000
.***AI.L01 IARSUBSP FMT=LIST FILL IN PARAMETER AREA                     02600000
.******************************************************************     02601000
                      ACTR  10000                                       02602000
&ZCVAL                SETC  'LA'           ASSUME XA MODE               02603000
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    02604000
&ZCVAL                SETC  'LAE'          XAX MODE                     02605000
.ZIMFXA               ANOP ,                                            02606000
.*                                                                      02607000
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    02608000
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         02609000
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 02610000
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                02611000
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 02612000
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                02613000
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   02614000
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    02615000
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   02616000
&ZOPN                 SETA  &ZOPN+1                                     02617000
&ZOPL(&ZOPN)          SETC  ' '                                         02618000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    02619000
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              02620000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       02621000
                      AGO   .ZIMFNX                                     02622000
.*                                                                      02623000
.ZIMFN2               ANOP ,                                            02624000
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     02624100
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     02624200
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  02624300
&ZOPN                 SETA  &ZOPN+1                                     02624400
&ZOPL(&ZOPN)          SETC  ' '                                         02624500
&ZOPO(&ZOPN)          SETC  'LAE'                                       02624600
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  02624700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       02624800
                      AGO   .ZIMFNX                                     02624900
.ZIMFNX1              ANOP ,                                            02625000
&ZOPN                 SETA  &ZOPN+1                                     02625100
&ZOPL(&ZOPN)          SETC  ' '                                         02626000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    02627000
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                02628000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       02629000
.ZIMFNX               ANOP ,                                            02630000
.********************************************************************   02631000
.***AI.L02 IARSUBSP FMT=LIST INITIALIZE PARAMETER AREA                  02632000
.********************************************************************   02633000
.***AI.L03 MF=(SLE)                                                     02634000
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      02635000
.*                                                                      02636000
&ZOPN                 SETA  &ZOPN+1                                     02637000
&ZOPL(&ZOPN)          SETC  ' '                                         02638000
&ZOPO(&ZOPN)          SETC  'XC'                                        02639000
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         02640000
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             02641000
.ZIMFLX               ANOP  ,                                           02642000
.*-------------------------------------------------------------------   02643000
.***AI.L07 XSERVICE AL1                                                 02644000
&ZW                   SETC  ''                                          02645000
.*-------------------------------------------------------------------   02646000
.***AI.L15 XSERVICE "IDENTIFY" AL1                                      02647000
         AIF   ('&XSERVICE' NE 'IDENTIFY').ZI3A                         02648000
&ZW                   SETC  '1'                                         02649000
.ZI3A                 ANOP  ,                                           02650000
.*-------------------------------------------------------------------   02651000
.***AI.L15 XSERVICE "CREATE" AL1                                        02652000
         AIF   ('&XSERVICE' NE 'CREATE').ZI4A                           02653000
&ZW                   SETC  '2'                                         02654000
.ZI4A                 ANOP  ,                                           02655000
.*-------------------------------------------------------------------   02656000
.***AI.L15 XSERVICE "ASSIGN" AL1                                        02657000
         AIF   ('&XSERVICE' NE 'ASSIGN').ZI5A                           02658000
&ZW                   SETC  '3'                                         02659000
.ZI5A                 ANOP  ,                                           02660000
.*-------------------------------------------------------------------   02661000
.***AI.L15 XSERVICE "UNASSIGN" AL1                                      02662000
         AIF   ('&XSERVICE' NE 'UNASSIGN').ZI6A                         02663000
&ZW                   SETC  '4'                                         02664000
.ZI6A                 ANOP  ,                                           02665000
.*-------------------------------------------------------------------   02666000
.***AI.L15 XSERVICE "DELETE" AL1                                        02667000
         AIF   ('&XSERVICE' NE 'DELETE').ZI7A                           02668000
&ZW                   SETC  '5'                                         02669000
.ZI7A                 ANOP  ,                                           02670000
.*-------------------------------------------------------------------   02671000
.***AI.L15 XSERVICE "UNIDENTIFY" AL1                                    02672000
         AIF   ('&XSERVICE' NE 'UNIDENTIFY').ZI8A                       02673000
&ZW                   SETC  '6'                                         02674000
.ZI8A                 ANOP  ,                                           02675000
.*-------------------------------------------------------------------   02676000
.***AI.L15 XSERVICE "SHARE" AL1                                         02676100
         AIF   ('&XSERVICE' NE 'SHARE').ZI9A                            02676200
&ZW                   SETC  '7'                                         02676300
.ZI9A                 ANOP  ,                                           02676400
.*-------------------------------------------------------------------   02676500
.***AI.L17 XSERVICE AL1                                                 02677000
                      AIF   ('&ZW' EQ '0').ZI9B                         02678000
                      AIF   ('&ZW' EQ '').ZI9B                          02679000
.*                                                                      02680000
&ZOPN                 SETA  &ZOPN+1                                     02681000
&ZOPL(&ZOPN)          SETC  ' '                                         02682000
&ZOPO(&ZOPN)          SETC  'MVI'                                       02683000
&ZOPV(&ZOPN)          SETC  '1(1),&ZW'                                  02684000
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVICE XSERVICE'                    02685000
.ZI9B                 ANOP  ,                                           02686000
.*-------------------------------------------------------------------   02687000
.***AI.L05 XFLAGS1 BL1                                                  02688000
&ZW                   SETC  ''                                          02689000
&ZCLNG                SETC  ''             RESET BIT ON FLAG            02690000
.*-------------------------------------------------------------------   02691000
.***AI.L08 XFLAGS1 "COND"                                               02692000
.***      BL1'1XXXXXXX'                                                 02693000
         AIF   ('&XGENNAME' NE 'COND').ZI11A                            02694000
&ZW                   SETC  '&ZW.1'                                     02695000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              02707000
                      AGO   .ZI11C                                      02708000
.*                                                                      02709000
.ZI11A                ANOP  ,                                           02710000
&ZW                   SETC  '&ZW.0'                                     02711000
.ZI11C                ANOP  ,                                           02712000
.*-------------------------------------------------------------------   02713000
.***AI.L08 XFLAGS1 "YES"                                                02713200
.***      BL1'X1XXXXXX'                                                 02713400
         AIF   ('&XGENNAME' NE 'YES').ZI12A                             02713600
&ZW                   SETC  '&ZW.1000000'                               02713800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              02714000
                      AGO   .ZI12C                                      02714200
.*                                                                      02714400
.ZI12A                ANOP  ,                                           02714600
&ZW                   SETC  '&ZW.0000000'                               02714800
.ZI12C                ANOP  ,                                           02715000
.*-------------------------------------------------------------------   02715200
.***AI.L11 XFLAGS1 BL1                                                  02715400
                      AIF   ('&ZCLNG' NE 'YES').ZI12E  ALL ZERO BITS    02715600
&ZOPN                 SETA  &ZOPN+1                                     02716000
&ZOPL(&ZOPN)          SETC  ' '                                         02717000
&ZOPO(&ZOPN)          SETC  'OI'                                        02718000
&ZOPV(&ZOPN)          SETC  '2(1),B''&ZW'''                             02719000
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              02720000
.ZI12E                ANOP  ,                                           02721000
.*-------------------------------------------------------------------   02722000
.***AI.L25  XSTOKEN CL8                                                 02723000
                      AIF   ('&ZXSTOKEN' EQ '').ZI15E                   02724000
                      AIF   ('&ZXSTOKEN' EQ 'OUTPUT').ZI15E             02725000
&ZCGPR                SETC  '&XSTOKEN'                                  02726000
.*                                                                      02727000
                      AIF   ('&XSTOKEN'(1,1) NE '(').ZI15B              02728000
&ZCGPR   SETC  '0('.'&XSTOKEN'(2,K'&XSTOKEN-2).')'                      02729000
.ZI15B                ANOP  ,                                           02730000
.*                                                                      02731000
&ZOPN                 SETA  &ZOPN+1                                     02732000
&ZOPL(&ZOPN)          SETC  ' '                                         02733000
&ZOPO(&ZOPN)          SETC  'MVC'                                       02734000
&ZOPV(&ZOPN)          SETC  '12(8,1),&ZCGPR'                            02735000
&ZOPD(&ZOPN)          SETC  '++ &ZXSTOKEN XSTOKEN'                      02749000
.*                                                                      02763000
.ZI15E                ANOP  ,                                           02764000
.*-------------------------------------------------------------------   02765000
.***AI.L25  XNUMRANGE F                                                 02766000
                      AIF   ('&ZXNUMRANGE' EQ '').ZI16E                 02767000
                      AIF   ('&ZXNUMRANGE' EQ 'OUTPUT').ZI16E           02768000
&ZCGPR                SETC  '&XNUMRANGE'                                02769000
.*                                                                      02770000
                      AIF   ('&XNUMRANGE'(1,1) NE '(').ZI16B            02771000
&ZCGPR   SETC  '0('.'&XNUMRANGE'(2,K'&XNUMRANGE-2).')'                  02772000
                      AGO   .ZI16D                                      02773000
.ZI16B                ANOP  ,                                           02774000
.*                                                                      02775000
&ZC                   SETC  '&XNUMRANGE'(1,1)                           02776000
                      AIF   (T'&ZC NE 'N').ZI16D                        02777000
&ZC                   SETC  '&XNUMRANGE'                                02778000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI16D               02779000
&ZCGPR                SETC  '=FL4''&XNUMRANGE'''                        02780000
.*                                                                      02781000
.ZI16D                ANOP  ,                                           02782000
.*                                                                      02783000
&ZOPN                 SETA  &ZOPN+1                                     02784000
&ZOPL(&ZOPN)          SETC  ' '                                         02785000
&ZOPO(&ZOPN)          SETC  'MVC'                                       02786000
&ZOPV(&ZOPN)          SETC  '20(4,1),&ZCGPR'                            02787000
&ZOPD(&ZOPN)          SETC  '++ &ZXNUMRANGE XNUMRANGE'                  02788000
.*                                                                      02789000
.ZI16E                ANOP  ,                                           02790000
.*-------------------------------------------------------------------   02791000
.***AI.L25  XRANGLIST AL4                                               02791100
                      AIF   ('&ZXRANGLIST' EQ '').ZI17E                 02791200
                      AIF   ('&ZXRANGLIST' EQ 'OUTPUT').ZI17E           02791300
&ZCGPR                SETC  '&XRANGLIST'                                02791400
.*                                                                      02791500
                      AIF   ('&XRANGLIST'(1,1) NE '(').ZI17B            02791600
&ZCGPR   SETC  '0('.'&XRANGLIST'(2,K'&XRANGLIST-2).')'                  02791700
                      AGO   .ZI17D                                      02791800
.ZI17B                ANOP  ,                                           02791900
.*                                                                      02792000
&ZC                   SETC  '&XRANGLIST'(1,1)                           02792100
                      AIF   (T'&ZC NE 'N').ZI17D                        02792200
&ZC                   SETC  '&XRANGLIST'                                02792300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI17D               02792400
&ZCGPR                SETC  '=AL4(&XRANGLIST)'                          02792500
.*                                                                      02792600
.ZI17D                ANOP  ,                                           02792700
.*                                                                      02792800
&ZOPN                 SETA  &ZOPN+1                                     02792900
&ZOPL(&ZOPN)          SETC  ' '                                         02793000
&ZOPO(&ZOPN)          SETC  'MVC'                                       02793100
&ZOPV(&ZOPN)          SETC  '24(4,1),&ZCGPR'                            02793200
&ZOPD(&ZOPN)          SETC  '++ &ZXRANGLIST XRANGLIST'                  02793300
.*                                                                      02793400
.ZI17E                ANOP  ,                                           02793500
.*-------------------------------------------------------------------   02793600
.***AI.L25  XNAME CL8                                                   02793700
                      AIF   ('&ZXNAME' EQ '').ZI19E                     02793800
                      AIF   ('&ZXNAME' EQ 'OUTPUT').ZI19E               02793900
&ZCGPR                SETC  '&XNAME'                                    02795000
.*                                                                      02796000
                      AIF   ('&XNAME'(1,1) NE '(').ZI19B                02797000
&ZCGPR   SETC  '0('.'&XNAME'(2,K'&XNAME-2).')'                          02798000
.ZI19B                ANOP  ,                                           02799000
.*                                                                      02800000
&ZOPN                 SETA  &ZOPN+1                                     02801000
&ZOPL(&ZOPN)          SETC  ' '                                         02802000
&ZOPO(&ZOPN)          SETC  'MVC'                                       02803000
&ZOPV(&ZOPN)          SETC  '4(8,1),&ZCGPR'                             02804000
&ZOPD(&ZOPN)          SETC  '++ &ZXNAME XNAME'                          02805000
.*                                                                      02806000
.ZI19E                ANOP  ,                                           02806100
.*-------------------------------------------------------------------   02806200
.***AI.L25  XASASTEO AL4                                                02806300
                      AIF   ('&ZXASASTEO' EQ '').ZI20E                  02806400
                      AIF   ('&ZXASASTEO' EQ 'OUTPUT').ZI20E            02806500
&ZCGPR                SETC  '&XASASTEO'                                 02806600
.*                                                                      02806700
                      AIF   ('&XASASTEO'(1,1) NE '(').ZI20B             02806800
&ZCGPR   SETC  '0('.'&XASASTEO'(2,K'&XASASTEO-2).')'                    02806900
                      AGO   .ZI20D                                      02807000
.ZI20B                ANOP  ,                                           02807100
.*                                                                      02807200
&ZC                   SETC  '&XASASTEO'(1,1)                            02807300
                      AIF   (T'&ZC NE 'N').ZI20D                        02807400
&ZC                   SETC  '&XASASTEO'                                 02807500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI20D               02807600
&ZCGPR                SETC  '=AL4(&XASASTEO)'                           02807700
.*                                                                      02807800
.ZI20D                ANOP  ,                                           02807900
.*                                                                      02808000
&ZOPN                 SETA  &ZOPN+1                                     02808100
&ZOPL(&ZOPN)          SETC  ' '                                         02808200
&ZOPO(&ZOPN)          SETC  'MVC'                                       02808300
&ZOPV(&ZOPN)          SETC  '12(4,1),&ZCGPR'                            02808400
&ZOPD(&ZOPN)          SETC  '++ &ZXASASTEO XASASTEO'                    02808500
.*                                                                      02808600
.ZI20E                ANOP  ,                                           02808700
.*-------------------------------------------------------------------   02808800
&ZOPN1                SETA &ZOPN                                        02809000
.*******************************************************************    02810000
.***  PROCESS IARSUBSP OUTPUT PARAMETERS                                02811000
.*******************************************************************    02812000
                      ACTR  10000                                       02813000
.*------------------------------------------------------------------    02814000
.***AO.L02 XOUTNAME CL8                                                 02815000
         AIF   ('&ZXOUTNAME' EQ 'OUTPUT').ZO14A  OUTPUT                 02816000
         AIF   ('&ZXOUTNAME' NE 'INOUT').ZO14C  INOUT                   02817000
.ZO14A    AIF   ('&XOUTNAME'(1,1) NE '(').ZO14B  ADDR IN GPR            02818000
&ZCGPR   SETC  '&XOUTNAME'(2,K'&XOUTNAME-2)                             02819000
&ZOPN                 SETA  &ZOPN+1                                     02820000
&ZOPL(&ZOPN)          SETC  ' '                                         02821000
&ZOPO(&ZOPN)          SETC  'MVC'                                       02822000
&ZOPV(&ZOPN)          SETC  '0(8,&ZCGPR),4(1)'                          02823000
&ZOPD(&ZOPN)          SETC  '++ XOUTNAME CL8'                           02824000
                      AGO   .ZO14C                                      02825000
.*                                                                      02826000
.ZO14B                ANOP  ,                                           02827000
&ZAWRK   SETA  K'&XOUTNAME                                              02828000
         AIF   ('&XOUTNAME'(&ZAWRK,1) NE ')').ZO14G                     02829000
&ZN      SETA  2                                                        02830000
.ZO14H    ANOP                                                          02831000
         AIF   (&ZN GE &ZAWRK).ZO14G                                    02832000
         AIF   ('&XOUTNAME'(&ZN,1) NE '(').ZO14I                        02833000
&ZC      SETC  '&XOUTNAME'(1,&ZN).'8'.','                               02834000
&ZC      SETC  '&ZC'.'&XOUTNAME'(&ZN+1,&ZAWRK-&ZN).',4(1)'              02835000
         AGO   .ZO14J                                                   02836000
.ZO14I    ANOP                                                          02837000
&ZN      SETA  &ZN+1                                                    02838000
         AGO   .ZO14H                                                   02839000
.ZO14G    ANOP                                                          02840000
&ZC      SETC  '&XOUTNAME.(8),4(1)'                                     02841000
.ZO14J    ANOP                                                          02842000
&ZOPN                 SETA  &ZOPN+1                                     02843000
&ZOPL(&ZOPN)          SETC  ' '                                         02844000
&ZOPO(&ZOPN)          SETC  'MVC'                                       02845000
&ZOPV(&ZOPN)          SETC  '&ZC'                                       02846000
&ZOPD(&ZOPN)          SETC  '++ XOUTNAME CL8'                           02847000
.ZO14C                ANOP  ,                                           02848000
.*------------------------------------------------------------------    02849000
.***AO.L02 XSTOKEN CL8                                                  02850000
         AIF   ('&ZXSTOKEN' EQ 'OUTPUT').ZO15A  OUTPUT                  02851000
         AIF   ('&ZXSTOKEN' NE 'INOUT').ZO15C  INOUT                    02852000
.ZO15A    AIF   ('&XSTOKEN'(1,1) NE '(').ZO15B  ADDR IN GPR             02853000
&ZCGPR   SETC  '&XSTOKEN'(2,K'&XSTOKEN-2)                               02854000
&ZOPN                 SETA  &ZOPN+1                                     02855000
&ZOPL(&ZOPN)          SETC  ' '                                         02856000
&ZOPO(&ZOPN)          SETC  'MVC'                                       02857000
&ZOPV(&ZOPN)          SETC  '0(8,&ZCGPR),12(1)'                         02858000
&ZOPD(&ZOPN)          SETC  '++ XSTOKEN CL8'                            02859000
                      AGO   .ZO15C                                      02860000
.*                                                                      02861000
.ZO15B                ANOP  ,                                           02862000
&ZAWRK   SETA  K'&XSTOKEN                                               02863000
         AIF   ('&XSTOKEN'(&ZAWRK,1) NE ')').ZO15G                      02864000
&ZN      SETA  2                                                        02865000
.ZO15H    ANOP                                                          02866000
         AIF   (&ZN GE &ZAWRK).ZO15G                                    02867000
         AIF   ('&XSTOKEN'(&ZN,1) NE '(').ZO15I                         02868000
&ZC      SETC  '&XSTOKEN'(1,&ZN).'8'.','                                02869000
&ZC      SETC  '&ZC'.'&XSTOKEN'(&ZN+1,&ZAWRK-&ZN).',12(1)'              02870000
         AGO   .ZO15J                                                   02871000
.ZO15I    ANOP                                                          02872000
&ZN      SETA  &ZN+1                                                    02873000
         AGO   .ZO15H                                                   02874000
.ZO15G    ANOP                                                          02875000
&ZC      SETC  '&XSTOKEN.(8),12(1)'                                     02876000
.ZO15J    ANOP                                                          02877000
&ZOPN                 SETA  &ZOPN+1                                     02878000
&ZOPL(&ZOPN)          SETC  ' '                                         02879000
&ZOPO(&ZOPN)          SETC  'MVC'                                       02880000
&ZOPV(&ZOPN)          SETC  '&ZC'                                       02881000
&ZOPD(&ZOPN)          SETC  '++ XSTOKEN CL8'                            02882000
.ZO15C                ANOP  ,                                           02883000
.*******************************************************************    02884000
.***AO.X04  LABEL FOR MF=L PROCESSING                                   02885000
.*******************************************************************    02886000
.ZMFLX                ANOP  ,              MF=L PROCESSING              02887000
.*******************************************************************    02888000
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               02889000
.*******************************************************************    02890000
                      ACTR  10000                                       02891000
.*                                                                      02892000
                      LCLA  &ZLC           COLUMN POSITION              02893000
                      LCLA  &ZOPX          LIST TABLE INDEX             02894000
                      LCLC  &ZLL           LABEL                        02895000
                      LCLC  &ZLOP          OPERATION                    02896000
                      LCLC  &ZLV           VALUE                        02897000
                      LCLC  &ZLD           DESCRIPTION                  02898000
.*                                                                      02899000
&ZOPX                 SETA  1                                           02900000
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            02901000
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              02902000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              02903000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              02904000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              02905000
                      AIF   (K'&ZLD LE 0).ZL5                           02906000
&ZLC                  SETA  35             COMMENT COLUMN               02907000
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    02908000
&ZLC                  SETA  33             COMMMENT COLUMN              02909000
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   02910000
&ZLV                  SETC  '&ZLV'.' '                                  02911000
                      AGO   .ZL3                                        02912000
.*                                                                      02913000
.ZL4                  ANOP  ,                                           02914000
&ZLV                  SETC  '&ZLV'.' '                                  02915000
.ZL5                  ANOP  ,                                           02916000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               02917000
.*                                                                      02918000
&ZLL     &ZLOP &ZLV                                                     02919000
.*                                                                      02920000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               02921000
                      AGO   .ZL2           CONTINUE LOOPING             02922000
.*                                                                      02923000
.ZLX                  ANOP  ,                                           02924000
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                02925000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  02926000
         L     14,16(0,0)        GET CVT ADDRESS                        02927000
         L     14,772(14,0)      GET SYSTEM FUNCTION TABLE ADDRESS      02928000
         L     14,208(14,0)      GET LX/EX FOR SERVICE ROUTINE          02929000
.KRE0           AIF   ('&XSERVICE' NE 'ASSIGN').KRE1                    02930000
         LA    15,10             EX OFFSET FOR IARSUBSP ASSIGN          02931000
                AGO   .KRE3                                             02932000
.KRE1           AIF   ('&XSERVICE' NE 'UNASSIGN').KRE2                  02933000
         LA    15,11             EX OFFSET FOR IARSUBSP UNASSIGN        02934000
                AGO   .KRE3                                             02935000
.KRE2           ANOP  ,                                                 02936000
         LA    15,9              EX OFFSET FOR IARSUBSP SERVICES        02937000
.KRE3           ANOP  ,                                                 02938000
         OR    14,15             GENERATE LX/EX COMBINATION             02939000
         PC    0(14)             PC TO IARSUBSP SERVICE                 02940000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  02941000
.ZLINKX               ANOP  ,                                           02942000
.*******************************************************************    02943000
.***AP.X01  FORMAT GENERATED CODE                                       02944000
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            02945000
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              02946000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              02947000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              02948000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              02949000
                      AIF   (K'&ZLD LE 0).ZL51                          02950000
&ZLC                  SETA  35             COMMENT COLUMN               02951000
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   02952000
&ZLC                  SETA  33             COMMENT COLUMN               02953000
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  02954000
&ZLV                  SETC  '&ZLV'.' '                                  02955000
                      AGO   .ZL31                                       02956000
.*                                                                      02957000
.ZL41                 ANOP  ,                                           02958000
&ZLV                  SETC  '&ZLV'.' '                                  02959000
.ZL51                 ANOP  ,                                           02960000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               02961000
.*                                                                      02962000
&ZLL     &ZLOP &ZLV                                                     02963000
.*                                                                      02964000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               02965000
                      AGO   .ZL21          CONTINUE LOOPING             02966000
.*                                                                      02967000
.ZLX1                 ANOP  ,                                           02968000
.*******************************************************************    02969000
.***AP.X02  END OF IARSUBSP MACRO                                       02970000
&ZIARSUBSP            SETC  'YES'          SET IARSUBSP USED            02971000
         POP   PRINT                                                    02972000
*                                            IARSUBSP-0                 02973000
         SPACE 1                                                        02974000
.ZLX2                 ANOP  ,                                           02975000
         MEND                                                           02976000
**********************************************************************/ 02977000
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  02978000
*%IARSUBSP: MACRO KEYS(IDENTIFY,NUMRANGE,RANGLIST,CREATE,NAME,GENNAME,  02979000
*                 OUTNAME,STOKEN,ASSIGN,UNASSIGN,DELETE,UNIDENTIFY,     02980000
*                 SHARE,ACTION,ASASTEO,RETCODE,RSNCODE,PLISTVER,MF);    02981000
*  ANS('?'||MACLABEL||' '||'IARSUBS2 '||MACLIST||                       02982000
*         ' '||MACKEYS||';') COL(MACLMAR);                              02983000
*%END IARSUBSP;                                                         02984000
