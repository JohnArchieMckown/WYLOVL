* % SJFREQ: MACRO KEYS(REQUEST,PARM,RETCODE);/*                 @L3C*/  00050000
*/********************************************************************/ 00100000
*/*                                                                  */ 00150000
*/* MODULE NAME = IEFSJREQ                                           */ 00200000
*/*                                                                  */ 00250000
*/* DESCRIPTIVE NAME = Scheduler JCL Facility Request Macro          */ 00300000
*/*                                                                  */ 00350000
*/* COPYRIGHT =                                                      */ 00376600
*/*             LICENSED MATERIALS - PROPERTY OF IBM                 */ 00403200
*/*             THIS MACRO IS "RESTRICTED MATERIALS OF IBM"          */ 00430000
*/*             5695-048 (C) COPYRIGHT IBM CORPORATION 1983, 1992    */ 00470000
*/*             SEE COPYRIGHT INSTRUCTIONS                           */ 00510000
*/*                                                              @L8C*/ 00550000
*/* STATUS = HBB4430                                             @L8C*/ 00600000
*/*                                                                  */ 00650000
*/* FUNCTION = The SJFREQ macro is used to invoke the Scheduler      */ 00700000
*/*            JCL Facility.                                         */ 00750000
*/*                                                                  */ 00800000
*/*   OPERATION =                                                    */ 00850000
*/*   - Verify the REQUEST parameter. If the REQUEST parameter       */ 00900000
*/*     specifies a valid function then generate the instructions    */ 00950000
*/*     to put the requested function mask into Register 0.          */ 01000000
*/*     Otherwise issue an error MNOTE specifying that the REQUEST   */ 01050000
*/*     parameter was specified incorrectly.                         */ 01100000
*/*   - If the PARM parameter has been coded, then generate the      */ 01150000
*/*     instructions for Register 1 to point to a word (SJFPTR)      */ 01200000
*/*     which contains the address of the parameter list.            */ 01250000
*/*   - Generate the instructions to invoke the Scheduler JCL        */ 01300000
*/*     Facility.  If pre-XA (SYSSPLV=1) then generate a call to @L5C*/ 01325000
*/*     the SJF router IEFSJRTE.  Otherwise call the SJF control @L5A*/ 01350000
*/*     routine (IEFSJCNL) directly.                             @L5A*/ 01375000
*/*                                                                  */ 01400000
*/* NOTES =                                                          */ 01450000
*/*                                                                  */ 01500000
*/*   DEPENDENCIES =                                                 */ 01550000
*/*   - The caller must include the CVT, and IEFJESCT mapping    @L1C*/ 01600000
*/*     macros.  The JESCT should be included before this macro. @D2C*/ 01650000
*/*   - In assembler, if the caller codes the PARM parameter,        */ 01700000
*/*     a 4 byte pointer SJFPTR must be declared.  If the caller @L1C*/ 01718700
*/*     does not code the PARM parameter, before SJFREQ is       @L1A*/ 01737400
*/*     invoked, R1 must contain the address of a 4 byte         @L1A*/ 01756100
*/*     pointer which contains the address of the called         @L1A*/ 01774800
*/*     function's parameter list.                               @L1A*/ 01793500
*/*   - In PLS, the caller must code the ?EPILOG macro, and          */ 01812200
*/*     define CVTPTR (equal to location 16)                         */ 01830900
*/*                                                                  */ 01850000
*/* MODULE TYPE = Macro                                              */ 01900000
*/*                                                                  */ 01950000
*/* ENTRY POINT = N/A                                                */ 02000000
*/*                                                                  */ 02050000
*/*   INPUT =                                                        */ 02100000
*/*   The following may be specified as parameters to SJFREQ:        */ 02150000
*/*                                                                  */ 02200000
*/*     BAL invocation -                                             */ 02250000
*/*                                                                  */ 02300000
*/*   REQUEST=value, where value is one of the following:            */ 02350000
*/*           TERMINATE                                              */ 02400000
*/*           DEFINEJDVT                                             */ 02450000
*/*           FINDSWB                                                */ 02500000
*/*           UPDATE                                                 */ 02550000
*/*           RETRIEVE                                               */ 02600000
*/*           WRITESWB                                               */ 02650000
*/*           GETSWB                                                 */ 02700000
*/*           PUTSWB                                                 */ 02750000
*/*           DELETESWB                                              */ 02800000
*/*           JDTEXTRACT                                             */ 02850000
*/*           FINDJDVT                                               */ 02900000
*/*           INITJDVT                                               */ 02950000
*/*           VERIFY    (indicates SJF Verify Function)          @L2A*/ 02966600
*/*           ACCESS    (indicates SJF Access Function)          @L1A*/ 02983200
*/*           ERASE     (indicates SJF Erase Function)           @D1A*/ 02991600
*/*           SERIALIZE (indicates SJF Serialize Function)       @L3A*/ 02995800
*/*           SCANSWB   (indicates SJF ScanSWB Function)         @L4A*/ 02997200
*/*           RETURNSWB (indicates SJF ReturnSWB Function)       @L4A*/ 02998600
*/*           KEYLIST   (indicates SJF Key List Function)        @L6A*/ 02998800
*/*           SWBTU_MERGE (indicates SJF SWBTU Merge Function)   @L6A*/ 02999000
*/*           MERGESWB  (indicates SJF SWB Merge Function)       @L7A*/ 02999500
*/*           VALIDATE  (indicates SJF Validate Function)        @L8A*/ 02999700
*/*                                                                  */ 03000000
*/*   PARM=address, where address may be:                        @L1C*/ 03020000
*/*        -the address of the parameter list                    @L1A*/ 03040000
*/*        -a register, in parenthesis, containing the address   @L1A*/ 03060000
*/*         of the parameter list                                @L1A*/ 03080000
*/*                                                                  */ 03100000
*/*     PLS Invocation -                                             */ 03150000
*/*                                                                  */ 03200000
*/*   REQUEST(value) where value is one of the following:            */ 03250000
*/*           TERMINATE                                              */ 03300000
*/*           DEFINEJDVT                                             */ 03350000
*/*           FINDSWB                                                */ 03400000
*/*           UPDATE                                                 */ 03450000
*/*           RETRIEVE                                               */ 03500000
*/*           WRITESWB                                               */ 03550000
*/*           GETSWB                                                 */ 03600000
*/*           PUTSWB                                                 */ 03650000
*/*           DELETESWB                                              */ 03700000
*/*           JDTEXTRACT                                             */ 03750000
*/*           FINDJDVT                                               */ 03800000
*/*           INITJDVT                                               */ 03850000
*/*           VERIFY    (indicates SJF Verify Function)          @L2A*/ 03866600
*/*           ACCESS    (indicates SJF Access Function)          @L1A*/ 03883200
*/*           ERASE     (indicates SJF Erase  Function)          @D1A*/ 03891600
*/*           SERIALIZE (indicates SJF Serialize Function)       @L3A*/ 03895800
*/*           SCANSWB   (indicates SJF ScanSWB Function)         @L4A*/ 03897200
*/*           RETURNSWB (indicates SJF ReturnSWB Function)       @L4A*/ 03898600
*/*           KEYLIST   (indicates SJF Key List Function)        @L6A*/ 03898700
*/*           SWBTU_MERGE (indicates SJF SWBTU Merge Function)   @L6A*/ 03898900
*/*           MERGESWB  (indicates SJF SWB Merge Function)       @L7A*/ 03899400
*/*           VALIDATE  (indicates SJF Validate Function)        @L8A*/ 03899700
*/*           INFO_RETRIEVAL  (indicate SJF Info Retrieval           */ 03899800
*/*                      Function)                               @L9A*/ 03899900
*/*                                                                  */ 03900000
*/*   PARM(name of the parameter list)                               */ 03950000
*/*                                                                  */ 04000000
*/*   RETCODE(name of variable to contain the return code)       @L3A*/ 04016600
*/*                                                                  */ 04020700
*/*   Note = INFO_RETRIEVAL service is invoked by PL/X modules       */ 04024800
*/*          only.                                               @L9A*/ 04028900
*/*                                                                  */ 04033200
*/*   OUTPUT =                                                       */ 04050000
*/*   The output from the SJFREQ macro consists of instructions to   */ 04100000
*/*   test if the SJF entry point is zero and if so set register 15, */ 04125000
*/*   put the function mask into register 0, put the address of the  */ 04150000
*/*   parameter list into SJFPTR and put the address of SJFPTR into  */ 04200000
*/*   register 1, and invoke the Scheduler JCL Facility.             */ 04250000
*/*                                                                  */ 04300000
*/*   Upon return from the Scheduler JCL Facility, if the        @L3A*/ 04308300
*/*   RETCODE parameter is specified (PLAS only), SJFREQ will    @L3A*/ 04316600
*/*   store the contents of register 15 into the variable        @L3A*/ 04324900
*/*   specified.                                                 @L3A*/ 04333200
*/*                                                                  */ 04341500
*/*   EXIT - NORMAL                                                  */ 04350000
*/*                                                                  */ 04400000
*/*      CONDITIONS = No errors detected                             */ 04450000
*/*      OUTPUT =                                                    */ 04500000
*/*                                                                  */ 04550000
*/*   EXIT - ERROR                                                   */ 04600000
*/*                                                                  */ 04650000
*/*      CONDITIONS = REQUEST parameter not specified or specified   */ 04700000
*/*                   incorrectly.                                   */ 04750000
*/*      OUTPUT = Error MNOTE issued                                 */ 04800000
*/*                                                                  */ 04850000
*/* EXTERNAL REFERENCES =                                            */ 04900000
*/*                                                                  */ 04950000
*/* TABLES = N/A                                                     */ 05000000
*/*                                                                  */ 05050000
*/* MESSAGES =                                                       */ 05100000
*/*   MNOTE 04,'AHA0051 THE MACLIST maclist IS NOT ALLOWED. IT IS    */ 05150000
*/*            IGNORED.'                                             */ 05200000
*/*   MNOTE 04,'AHA0031 parm IS TOO LONG. ARGUMENTS ARE IGNORED      */ 05250000
*/*            AFTER parm(1).'                                       */ 05300000
*/*   MNOTE 4,'AHA0053 SJFREQ: MACRO IEFJESCT REQUIRED BUT WAS NOT   */ 05310000
*/*     FOUND BEFORE THIS INVOCATION'                            @D2A*/ 05320000
*/*   MNOTE 4,'AHA0053 SJFREQ: INSERT OR MOVE THE INCLUDE OF         */ 05330000
*/*     IEFJESCT BEFORE THIS INVOCATION'                         @D2A*/ 05340000
*/*   MNOTE 04,'AHA0031 request IS TOO LONG. ARGUMENTS ARE IGNORED   */ 05350000
*/*            AFTER request(1).'                                    */ 05400000
*/*   MNOTE 12,'AHA0013 REQUEST IS REQUIRED BUT IS NOT SUPPLIED.     */ 05450000
*/*            NO TEXT IS GENERATED.'                                */ 05500000
*/*   MNOTE 12,'AHA0043 REQUEST MUST BE ONE OF THE SJF FUNCTIONS.    */ 05550000
*/*            NO TEXT IS GENERATED.'                                */ 05600000
*/*                                                                  */ 05650000
*/* ABEND CODES = N/A                                                */ 05700000
*/*                                                                  */ 05750000
*/* SERIALIZATION = N/A                                              */ 05800000
*/*                                                                  */ 05850000
*/* COMPONENT = BB131 (SJF)                                      @L6A*/ 05853700
*/*                                                              @L6A*/ 05857400
*/* DISTRIBUTION LIBRARY = AMACLIB                               @L6A*/ 05861100
*/*                                                              @L6A*/ 05864800
*/* CHANGE ACTIVITY = H0,R1,L1,L2,D1,L3,P1,P2,L4,L5,L6,P3,P4,D2, @L7C*/ 05872300
*/*                   L7,L8,L9                                   @L9C*/ 05879800
*/*                                                                  */ 05887400
*/* $H0= EXTJCL  JBB2110 820702 PD2Q: SUPPORT FOR EXTENDED JCL       */ 05906100
*/* $R1= PAxxx   JBB2110            : PTM                        @R1A*/ 05924800
*/* $L1= SMSSTG2 JBB2223 860127 PDY1: STOR MGMT SUBSYS STG2 SUPT @L1A*/ 05943500
*/* $L2= SMSSTG2 JBB2223 860623 PDT4: STOR MGMT SUBSYS STG2 SUPT @L2A*/ 05962200
*/* $D1= DCR55   JBB2223 870923 PDN4: DCR 55                     @D1A*/ 05971500
*/* $L3= SERVC   HBB4410 871102 PDN4: Serviceability             @L3A*/ 05973800
*/* $P1= PC20470 JBB2223 871214 PDN4: PC20470                    @P1A*/ 05976200
*/* $P2= PEO0187 HBB4410 880411 PDR6: PEO0187                    @P2A*/ 05978500
*/* $L4= EMVS2   HBB4410 881111 PDD1: Enterprise II support      @L4A*/ 05979700
*/* $L5= EMVS2   HBB4410 881227 PDKK: Enterprise II support      @L5A*/ 05980300
*/* $L6= EMVS2   HBB4410 890206 PDZ1: Enterprise II support      @L6A*/ 05980600
*/* $P3= PEO1355 HBB4410 890206 PDKK: Enterprise II support      @P3A*/ 05980700
*/* $P4= PEO1539 HBB4410 890403 PDKK: Enterprise II support      @P4A*/ 05980800
*/* $D2= DEO0265 HBB4410 890918 PDCC: Compile error checking     @D2A*/ 05987200
*/* $L7= APPC1   HBB4420 890421 PDKK: APPC SJF Merge SWB         @L7A*/ 05990400
*/* $L8= POSIX   HBB4430 911028 PDWL: Open/MVS Support           @L8A*/ 05992000
*/* $L9= POSIX   HBB4430 920108 PDWL: Open/MVS Support           @L9A*/ 05992800
*/*                                                                  */ 05993600
*/********************************************************************/ 06000000
*/* A 000000-999999                                              @H0A*/ 06050000
*/* A Added code to invoke SJF Access, function code 13          @L1A*/ 06062500
*/* A Added code to invoke SJF Verify, function code 12          @L2A*/ 06075000
*/* A Added code to test SJF entry point before calling SJF      @L2A*/ 06087500
*/* A Added code to invoke SJF Serialize, function code 15       @L3A*/ 06090600
*/* A Added code to invoke SJF Erase, function code 14           @D1A*/ 06093700
*/* A Added RETCODE keyword to the PLAS version, used to contain @L3A*/ 06094700
*/*   the contents of register 15 upon return from SJF.          @L3A*/ 06095700
*/* A Added code to branch to REQGOOD after ACCESS               @P1A*/ 06096800
*/* M Moved code added for RETCODE keyword so that the specified     */ 06097800
*/*   variable will be set in all situations.                    @P2A*/ 06098800
*/* A Added code to invoke SJF Scan, function code 16 and SJF    @L4A*/ 06099200
*/*   ReturnSWB, function code 17                                @L4A*/ 06099600
*/* A If running on an XA system (SPLEVEL > 1), then call the    @L5A*/ 06099700
*/*   SJF control routine (IEFSJCNL) directly.                   @L5A*/ 06099800
*/* A Added code to invoke SJF KEYLIST, function code 18, and    @L6A*/ 06111000
*/*   added code to invoke SJF SWBTU_MERGE, function code 19.    @L6A*/ 06122100
*/* C Changed BALR to BASSM for calling SJF Control Routine when @P3A*/ 06125800
*/*   runningin XA mode to switch AMODE if necessary.            @P3A*/ 06129500
*/* C Added ANOP to SJFNXA label                                 @P4A*/ 06131400
*/* A Added a check for the presence of the JESCT.  Return to    @D2A*/ 06132000
*/*   the caller with condition code 4 if it wasn't included.    @D2A*/ 06132600
*/* A Added code for SJF Merge SWB                               @L7A*/ 06132900
*/* A Added code for SJF Validate Function                       @L8A*/ 06133100
*/* A Added code for SJF Info Retrieval Function (PL/X only)     @L9A*/ 06133200
*                                                                       06133300
*/* External Declarations */                                            06150000
*                                                                       06200000
*  DCL EHAREGS CHAR EXT;          /* Regs to be declared by EPILOG  */  06250000
*  DCL EHARC FIXED EXT;           /* Return code                    */  06300000
*  DECLARE IEFJESCT CHARACTER EXTERNAL;  /* JESCT indicator     @D2A*/  06316600
*  DEACTIVATE IEFJESCT;                                      /* @D2A*/  06333200
*                                                                       06350000
*/* Initialize external variables */                                    06400000
*                                                                       06450000
*  EHARC=0;                       /* Initialize the return code     */  06500000
*                                                                       06550000
*/* Internal Declarations */                                            06600000
*                                                                       06650000
*  DCL IREQSTMT CHAR;             /* Input macro statement          */  06700000
*  DCL IERRMSG CHAR;              /* Error message                  */  06750000
*  DCL ICOMCOL FIXED;             /* Comment column                 */  06800000
*  DCL SYSSPLV CHAR EXT;          /* Global for SPLEVEL macro   @L5A*/  06825000
*                                                                       06850000
*/* Initialize internal variables */                                    06900000
*                                                                       06950000
*  ICOMCOL=MACRMAR-35;            /* Set comment column             */  07000000
*                                                                       07050000
*/*******************************************************************/  07100000
*/*                                                                 */  07150000
*/* Check for the presence of the JESCT.  If it isn't there, issue  */  07152100
*/* a error MNOTE saying that the JESCT macro is a requirement.     */  07154200
*/*                                                             @D2A*/  07156300
*/*******************************************************************/  07158400
*  IF IEFJESCT ^= 'IEFJESCT' THEN DO; /* Is the JESCT there?    @D2A*/  07160500
*                                                                       07162600
*    IERRMSG = 'AHA0053 SJFREQ: MACRO IEFJESCT REQUIRED BUT WAS ' ||    07164700
*              'NOT FOUND BEFORE THIS INVOCATION';   /* PRIME MESSAGE   07166800
*                                                       AREA     @D2A*/ 07168900
*    ANSWER MSG(IERRMSG) NORESCAN;  /* PUT OUT MESSAGE           @D2A*/ 07171000
*                                                                       07173100
*    ANSWER(COMMENT(IERRMSG)) COLUMN(10) NORESCAN;  /*           @D2A*/ 07173800
*                                                                       07174500
*    IERRMSG = 'AHA0053 SJFREQ: INSERT OR MOVE THE INCLUDE ' ||         07175200
*              'OF IEFJESCT BEFORE THIS INVOCATION';   /* PRIME MESSAGE 07177300
*                                                         AREA   @D2A*/ 07179400
*    ANSWER MSG(IERRMSG) NORESCAN;  /* PUT OUT MESSAGE           @D2A*/ 07181500
*                                                                       07183600
*    ANSWER(COMMENT(IERRMSG)) COLUMN(10) NORESCAN;  /*           @D2A*/ 07184300
*                                                                       07185000
*    EHARC = 4;                    /* WARNING FROM MACRO PHASE   @D2A*/ 07185700
*                                                                       07187800
*  END;                                                                 07187900
*/*******************************************************************/  07188000
*/*                                                                 */  07188100
*/* Check if any positional parameters were specified.  If so,      */  07188200
*/* issue an error MNOTE specifying that the positional parameters  */  07188300
*/* are ignored.                                                    */  07188400
*/*                                                                 */  07188500
*/*******************************************************************/  07188600
*  IF NUMBER(MACLIST) ^= 0 THEN DO;                                     07188700
*    EHARC = 4;                   /* Set warning return code        */  07188800
*    IERRMSG = 'AHA0051 THE MACLIST ' || MACLIST ||                     07188900
*               ' IS NOT ALLOWED. IT IS IGNORED.';                      07189000
*    ANSWER MSG(IERRMSG) NORESCAN;                                      07189100
*    ANSWER(COMMENT(IERRMSG)) COLUMN(10) NORESCAN;                      07189900
*    END;                                                               07192000
*/*******************************************************************/  07194100
*/*                                                                 */  07196200
*/* Check if more than one argument was specified for the REQUEST   */  07900000
*/* parameter.  If so, issue an error MNOTE specifying that the     */  07950000
*/* other arguments are ignored.                                    */  08000000
*/*                                                                 */  08050000
*/*******************************************************************/  08100000
*  IF NUMBER(REQUEST) > 1 THEN DO;                                      08150000
*    EHARC = 4;                                                         08200000
*    IERRMSG = 'AHA0031 ' || REQUEST ||                                 08250000
*    ' IS TOO LONG. ARGUMENTS ARE IGNORED AFTER ' ||                    08300000
*    REQUEST(1) || '.';                   /*                    @R1C*/  08350000
*    ANSWER MSG(IERRMSG) NORESCAN;                                      08400000
*    ANSWER(COMMENT(IERRMSG)) COLUMN(10) NORESCAN;                      08450000
*  END;                                                                 08500000
*/*******************************************************************/  08550000
*/*                                                                 */  08600000
*/* Check if more than one argument was specified for the PARM      */  08650000
*/* parameter.  If so, issue an error MNOTE specifying that the     */  08700000
*/* other arguments are ignored.                                    */  08750000
*/*                                                                 */  08800000
*/*******************************************************************/  08850000
*  IF NUMBER(PARM) > 1 THEN DO;                                         08900000
*    EHARC = 4;                                                         08950000
*    IERRMSG = 'AHA0031 ' || PARM ||                                    09000000
*      ' IS TOO LONG. ARGUMENTS ARE IGNORED AFTER ' ||                  09050000
*      PARM(1) || '.';                   /*                     @R1C*/  09100000
*    ANSWER MSG(IERRMSG) NORESCAN;                                      09150000
*    ANSWER(COMMENT(IERRMSG)) COLUMN(10) NORESCAN;                      09200000
*  END;                                                                 09250000
*/*******************************************************************/  09300000
*/*                                                                 */  09350000
*/* Check if more than one argument was specified for the RETCODE   */  09353100
*/* parameter.  If so, issue an error MNOTE specifying that the     */  09356200
*/* other arguments are ignored.                                    */  09359300
*/*                                                             @L3A*/  09362400
*/*******************************************************************/  09365500
*  IF NUMBER(RETCODE) > 1 THEN DO;   /*                         @L3A*/  09368600
*    EHARC = 4;                      /*                         @L3A*/  09371700
*    IERRMSG = 'AHA0031 ' || RETCODE ||                                 09374800
*      ' IS TOO LONG. ARGUMENTS ARE IGNORED AFTER ' ||                  09377900
*      RETCODE(1) || '.';            /*                         @L3A*/  09381000
*    ANSWER MSG(IERRMSG) NORESCAN;   /*                         @L3A*/  09384100
*    ANSWER(COMMENT(IERRMSG)) COLUMN(10) NORESCAN; /*           @L3A*/  09387200
*  END;                              /*                         @L3A*/  09390300
*/*******************************************************************/  09393400
*/*                                                                 */  09396500
*/* Verify the REQUEST parameter.                                   */  09400000
*/*                                                                 */  09450000
*/*******************************************************************/  09500000
*  IF REQUEST(1) = 'TERMINATE'  |                                       09550000
*     REQUEST(1) = 'DEFINEJDVT' |                                       09600000
*     REQUEST(1) = 'FINDSWB'    |                                       09650000
*     REQUEST(1) = 'UPDATE'     |                                       09700000
*     REQUEST(1) = 'RETRIEVE'   |                                       09750000
*     REQUEST(1) = 'WRITESWB'   |                                       09800000
*     REQUEST(1) = 'GETSWB'     |                                       09850000
*     REQUEST(1) = 'PUTSWB'     |                                       09900000
*     REQUEST(1) = 'DELETESWB'  |                                       09950000
*     REQUEST(1) = 'JDTEXTRACT' |                                       10000000
*     REQUEST(1) = 'FINDJDVT'   |                                       10010700
*     REQUEST(1) = 'INITJDVT'   |                                       10021400
*     REQUEST(1) = 'VERIFY'     |                                       10032100
*     REQUEST(1) = 'ACCESS'     |                                       10042800
*     REQUEST(1) = 'ERASE'      |                                       10053500
*     REQUEST(1) = 'SERIALIZE'  |                                       10064200
*     REQUEST(1) = 'SCANSWB'    |                                       10074900
*     REQUEST(1) = 'RETURNSWB'  |                                       10085600
*     REQUEST(1) = 'KEYLIST'    |                                       10089100
*     REQUEST(1) = 'SWBTU_MERGE'|         /*                    @L7C*/  10095000
*     REQUEST(1) = 'MERGESWB'   |         /*                    @L8C*/  10099000
*     REQUEST(1) = 'VALIDATE'   |         /*                    @L9C*/  10101600
*     REQUEST(1) = 'INFO_RETRIEVAL' THEN DO;    /*              @L9A*/  10104200
*  ANS('?SPLEVEL (TEST);') COLUMN(MACCOL);  /* Obtain default           10107000
*                                                      SYSSPLV  @L5A*/  10117700
*  IF INDEX(EHAREGS,'00F')=0 THEN                                       10150000
*    EHAREGS=EHAREGS || '00F';       /* Have EPILOG generate a          10200000
*                                       declare for register 0      */  10250000
*  IF INDEX(EHAREGS,'15F')=0 THEN                                       10262500
*    EHAREGS=EHAREGS || '15F';       /* Have EPILOG generate a          10275000
*                                       declare for register 15     */  10280000
*  IF INDEX(EHAREGS,'13P')=0 THEN                                       10285000
*    EHAREGS=EHAREGS || '13P';       /* Have EPILOG generate a          10290000
*                                       declare for register 13 @L5A*/  10295000
*/*******************************************************************/  10300000
*/*                                                                 */  10350000
*/* If the REQUEST parameter specifies a valid function             */  10400000
*/* then generate the instructions to put the function mask         */  10450000
*/* into Register 0.                                                */  10500000
*/*                                                                 */  10550000
*/*******************************************************************/  10600000
*  IF MACLABEL ^= '' THEN                                               10650000
*    ANSWER(MACLABEL) COLUMN(MACLMAR) NORESCAN;                         10700000
*                                                                       10750000
*  IREQSTMT = 'SJFREQ ' || MACLIST || ' ' || MACKEYS;                   10800000
*  ANSWER('DO;') COLUMN(MACCOL) NORESCAN;                               10850000
*  ANSWER(COMMENT(IREQSTMT)) COLUMN(ICOMCOL) NORESCAN;                  10900000
*  IF SYSSPLV = '1' THEN       /*  non-XA processing            @L5A*/  10902700
*  ANSWER('IF JESSJCNL ^= 0 THEN') COLUMN(MACCOL)                       10905500
*      NORESCAN;               /* Generate test for SJF exists  @L2A*/  10911000
*  ELSE                        /*  XA processing                @L5A*/  10912300
*  ANSWER('IF JESSJF ^= 0 THEN') COLUMN(MACCOL)                         10913600
*      NORESCAN;               /* Generate test for SJF exists  @L5A*/  10914900
*  ANSWER(COMMENT('Test SJF entry point for non-zero')) COLUMN(ICOMCOL) 10916500
*      NORESCAN;               /* Generate Comment              @L2A*/  10922000
*  ANSWER('DO;') COLUMN(MACCOL)                                         10927500
*      NORESCAN;               /* Generate DO statement         @L2A*/  10933000
*  ANSWER(COMMENT('SJF exists')) COLUMN(ICOMCOL)                        10938500
*      NORESCAN;               /* Generate Comment              @L2A*/  10944000
*  ANSWER('RFY GPR00F RSTD;') COLUMN(MACCOL+2) NORESCAN;                10950000
*                                                                       11000000
*  IF REQUEST(1)='TERMINATE' THEN DO;                                   11050000
*    ANSWER('GPR00F=0;') COLUMN(MACCOL+2) NORESCAN;                     11100000
*    ANSWER(COMMENT('SPECIFY TERMINATE REQUEST')) COLUMN(ICOMCOL)       11150000
*      NORESCAN;                                                        11200000
*  END;                                                                 11250000
*  IF REQUEST(1)='DEFINEJDVT' THEN DO;                                  11300000
*    ANSWER('GPR00F=1;') COLUMN(MACCOL+2) NORESCAN;                     11350000
*    ANSWER(COMMENT('SPECIFY DEFINEJDVT REQUEST')) COLUMN(ICOMCOL)      11400000
*      NORESCAN;                                                        11450000
*  END;                                                                 11500000
*  IF REQUEST(1)='FINDSWB' THEN DO;                                     11550000
*    ANSWER('GPR00F=2;') COLUMN(MACCOL+2) NORESCAN;                     11600000
*    ANSWER(COMMENT('SPECIFY FINDSWB REQUEST')) COLUMN(ICOMCOL)         11650000
*      NORESCAN;                                                        11700000
*  END;                                                                 11750000
*  IF REQUEST(1)='UPDATE' THEN DO;                                      11800000
*    ANSWER('GPR00F=3;') COLUMN(MACCOL+2) NORESCAN;                     11850000
*    ANSWER(COMMENT('SPECIFY UPDATE REQUEST')) COLUMN(ICOMCOL)          11900000
*      NORESCAN;                                                        11950000
*  END;                                                                 12000000
*  IF REQUEST(1)='RETRIEVE' THEN DO;                                    12050000
*    ANSWER('GPR00F=4;') COLUMN(MACCOL+2) NORESCAN;                     12100000
*    ANSWER(COMMENT('SPECIFY RETRIEVE REQUEST')) COLUMN(ICOMCOL)        12150000
*      NORESCAN;                                                        12200000
*  END;                                                                 12250000
*  IF REQUEST(1)='WRITESWB' THEN DO;                                    12300000
*    ANSWER('GPR00F=5;') COLUMN(MACCOL+2) NORESCAN;                     12350000
*    ANSWER(COMMENT('SPECIFY WRITESWB REQUEST')) COLUMN(ICOMCOL)        12400000
*      NORESCAN;                                                        12450000
*  END;                                                                 12500000
*  IF REQUEST(1)='GETSWB' THEN DO;                                      12550000
*    ANSWER('GPR00F=6;') COLUMN(MACCOL+2) NORESCAN;                     12600000
*    ANSWER(COMMENT('SPECIFY GETSWB REQUEST')) COLUMN(ICOMCOL)          12650000
*      NORESCAN;                                                        12700000
*  END;                                                                 12750000
*  IF REQUEST(1)='PUTSWB' THEN DO;                                      12800000
*    ANSWER('GPR00F=7;') COLUMN(MACCOL+2) NORESCAN;                     12850000
*    ANSWER(COMMENT('SPECIFY PUTSWB REQUEST')) COLUMN(ICOMCOL)          12900000
*      NORESCAN;                                                        12950000
*  END;                                                                 13000000
*  IF REQUEST(1)='DELETESWB' THEN DO;                                   13050000
*    ANSWER('GPR00F=8;') COLUMN(MACCOL+2) NORESCAN;                     13100000
*    ANSWER(COMMENT('SPECIFY DELETESWB REQUEST')) COLUMN(ICOMCOL)       13150000
*      NORESCAN;                                                        13200000
*  END;                                                                 13250000
*  IF REQUEST(1)='JDTEXTRACT' THEN DO;                                  13300000
*    ANSWER('GPR00F=9;') COLUMN(MACCOL+2) NORESCAN;                     13350000
*    ANSWER(COMMENT('SPECIFY JDTEXTRACT REQUEST')) COLUMN(ICOMCOL)      13400000
*      NORESCAN;                                                        13450000
*  END;                                                                 13500000
*  IF REQUEST(1)='FINDJDVT' THEN DO;                                    13550000
*    ANSWER('GPR00F=10;') COLUMN(MACCOL+2) NORESCAN;                    13600000
*    ANSWER(COMMENT('SPECIFY FINDJDVT REQUEST')) COLUMN(ICOMCOL)        13650000
*      NORESCAN;                                                        13700000
*  END;                                                                 13750000
*  IF REQUEST(1)='INITJDVT' THEN DO;                                    13800000
*    ANSWER('GPR00F=11;') COLUMN(MACCOL+2) NORESCAN;                    13850000
*    ANSWER(COMMENT('SPECIFY INITJDVT REQUEST')) COLUMN(ICOMCOL)        13900000
*      NORESCAN;                                                        13950000
*  END;                                                                 14000000
*  IF REQUEST(1)='VERIFY' THEN DO;     /* Test if a Verify request      14002300
*                                                               @L2A*/  14004600
*    ANSWER('GPR00F=12;') COLUMN(MACCOL+2) NORESCAN; /* Generate        14006900
*                                         code to put the function      14009200
*                                         mask in register zero @L2A*/  14011500
*    ANSWER(COMMENT('Specify SJF Verify request')) COLUMN(ICOMCOL)      14013800
*      NORESCAN;                       /* Generate line comment         14016100
*                                         to accompany code     @L2A*/  14018400
*  END;                                /* Test if a Verify request      14020700
*                                                               @L2A*/  14023000
*  IF REQUEST(1)='ACCESS' THEN DO;     /* Test if an access request     14025300
*                                                               @L1A*/  14027600
*    ANSWER('GPR00F=13;') COLUMN(MACCOL+2) NORESCAN; /* Generate        14029900
*                                         code to put the function      14032200
*                                         mask in register zero @L1A*/  14034500
*    ANSWER(COMMENT('SPECIFY SJF ACCESS REQUEST')) COLUMN(ICOMCOL)      14036800
*      NORESCAN;                       /* Generate line comment         14039100
*                                         to accompany code     @L1A*/  14041400
*  END;                                /* Test if an access request     14043700
*                                                               @L1A*/  14046000
*  IF REQUEST(1)='ERASE' THEN DO;      /* Test if an erase request      14046300
*                                                               @D1A*/  14046600
*    ANSWER('GPR00F=14;') COLUMN(MACCOL+2) NORESCAN; /* Generate        14046900
*                                         code to put the function      14047200
*                                         mask in register zero         14047500
*                                                               @D1A*/  14047800
*    ANSWER(COMMENT('Specify SJF Erase request')) COLUMN(ICOMCOL)       14048100
*      NORESCAN;                       /* Generate line comment         14048400
*                                         to accompany code     @D1A*/  14048500
*  END;                                /* Test if an erase request      14048600
*                                                               @D1A*/  14048700
*  IF REQUEST(1)='SERIALIZE' THEN DO;     /* Test if a serialize        14048800
*                                            request            @L3A*/  14048900
*    ANSWER('GPR00F=15;') COLUMN(MACCOL+2) NORESCAN; /* Generate        14049000
*                                         code to put the function      14049100
*                                         mask in register zero @L3A*/  14049200
*    ANSWER(COMMENT('Specify SJF Serialize request')) COLUMN(ICOMCOL)   14049300
*      NORESCAN;                       /* Generate line comment         14049400
*                                         to accompany code     @L3A*/  14049500
*  END;                                /* Test if a serialize           14049600
*                                         request               @L3A*/  14049700
*  IF REQUEST(1)='SCANSWB' THEN DO;    /* Test if it is a ScanSWB       14052200
*                                         request               @L4A*/  14054700
*    ANSWER('GPR00F=16;') COLUMN(MACCOL+2) NORESCAN; /* Generate code   14057200
*                                          to put the function mask     14059700
*                                          in register zero     @L4A*/  14062200
*    ANSWER(COMMENT('Specify SJF ScanSWB request')) COLUMN(ICOMCOL)     14064700
*      NORESCAN;                       /* Generate line comment to      14067200
*                                         accompany code        @L4A*/  14069700
*  END;                                /*                       @L4A*/  14072200
*  IF REQUEST(1)='RETURNSWB' THEN DO;  /* Test if it is a ReturnSWB     14074700
*                                         request               @L4A*/  14077200
*    ANSWER('GPR00F=17;') COLUMN(MACCOL+2) NORESCAN; /* Generate code   14079700
*                                          to put the function mask     14082200
*                                          in register zero     @L4A*/  14084700
*    ANSWER(COMMENT('Specify SJF ReturnSWB request')) COLUMN(ICOMCOL)   14087200
*      NORESCAN;                       /* Generate line comment to      14089700
*                                         accompany code        @L4A*/  14092200
*  END;                                /*                       @L4A*/  14094700
*  IF REQUEST(1)='KEYLIST'  THEN DO;   /* Test if it is a Keylist       14094800
*                                         request               @L6A*/  14094900
*    ANSWER('GPR00F=18;') COLUMN(MACCOL+2) NORESCAN; /* Generate code   14095000
*                                         to put the function mask      14095100
*                                         in register zero      @L6A*/  14095200
*    ANSWER(COMMENT('Specify SJF KEYLIST request')) COLUMN(ICOMCOL)     14095300
*      NORESCAN;                       /* Generate line comment to      14095400
*                                         accompany code        @L6A*/  14095500
*  END;                                /* End test if an KEYLIST        14095600
*                                         request               @L6A*/  14095700
*  IF REQUEST(1)='SWBTU_MERGE' THEN DO; /* Test if it is an             14095800
*                                         SWBTU_MERGE request   @L6A*/  14095900
*    ANSWER('GPR00F=19;') COLUMN(MACCOL+2) NORESCAN; /* Generate code   14096000
*                                         to put the function mask      14096100
*                                         in register zero      @L6A*/  14096200
*    ANSWER(COMMENT('Specify SJF SWBTU_MERGE request')) COLUMN(ICOMCOL) 14096300
*      NORESCAN;                       /* Generate line comment to      14096400
*                                         accompany code        @L6A*/  14096500
*  END;                                /* End test if an SWBTU_MERGE    14096600
*                                         request               @L6A*/  14096700
*  IF REQUEST(1)='MERGESWB' THEN DO;   /* Test if it is an              14096800
*                                         MERGESWB request      @L7A*/  14096900
*    ANSWER('GPR00F=20;') COLUMN(MACCOL+2) NORESCAN; /* Generate code   14097000
*                                         to put the function mask      14097100
*                                         in register zero      @L7A*/  14097200
*    ANSWER(COMMENT('Specify SJF MERGESWB request')) COLUMN(ICOMCOL)    14097300
*      NORESCAN;                       /* Generate line comment to      14097400
*                                         accompany code        @L7A*/  14097500
*  END;                                /* End test if an MERGESWB       14097600
*                                         request               @L7A*/  14097700
*  IF REQUEST(1)='VALIDATE' THEN DO;   /* Test if it is a               14097800
*                                         VALIDATE request      @L8A*/  14097900
*    ANSWER('GPR00F=21;') COLUMN(MACCOL+2) NORESCAN; /* Generate code   14098000
*                                         to put the function mask      14098100
*                                         in register zero      @L8A*/  14098200
*    ANSWER(COMMENT('Specify SJF VALIDATE request')) COLUMN(ICOMCOL)    14098300
*      NORESCAN;                       /* Generate line comment to      14098400
*                                         accompany code        @L8A*/  14098500
*  END;                                /* End test if a VALIDATE        14098600
*                                         request               @L8A*/  14098700
*  IF REQUEST(1)='INFO_RETRIEVAL' THEN DO;  /* Test if it is a Info     14098800
*                                         Retrieval Request     @L9A*/  14098900
*    ANSWER('GPR00F=22;') COLUMN(MACCOL+2) NORESCAN; /* Generate code   14099000
*                                         to put the function mask      14099100
*                                         in register zero      @L9A*/  14099200
*    ANSWER(COMMENT('Specify SJF Info Retrieval request'))              14099300
*      COLUMN(ICOMCOL) NORESCAN;       /* Generate line comment to      14099400
*                                         accompany code        @L9A*/  14099500
*  END;                                /* End test if an INFO_RETRIEVAL 14099600
*                                         request               @L9A*/  14099700
*                                                                       14099800
*/*******************************************************************/  14100000
*/*                                                                 */  14150000
*/* If the PARM parameter has been coded, then generate the         */  14200000
*/* instruction to invoke SJF passing the PARM.  Otherwise          */  14250000
*/* generate the instruction to invoke SJF without a parameter.     */  14300000
*/*                                                                 */  14350000
*/*******************************************************************/  14400000
*  IF SYSSPLV = '1' THEN         /* not XA - call glue routine  @L5A*/  14425000
*    IF PARM(1)=''                                                      14450000
*      THEN ANSWER('CALL SJF;') COLUMN(MACCOL+2) NORESCAN;              14500000
*    ELSE ANSWER('CALL SJF(' || PARM(1) || ');') COLUMN(MACCOL+2)       14550000
*      NORESCAN;                                                        14600000
*  ELSE DO;                      /* XA - call SJF directly      @L5A*/  14605000
*    ANSWER('GEN SETS(GPR13P) (LA   13,0(,13));') NORESCAN; /*  @L5A*/  14610000
*    ANS(COMMENT('Clean Up Save Area register')) COLUMN(ICOMCOL)        14615000
*       NORESCAN;                /*                             @L5A*/  14620000
*    IF PARM(1)=''                                                      14625000
*      THEN ANSWER('CALL SJFCNL;') COLUMN(MACCOL+2) NORESCAN;/* @L5A*/  14630000
*    ELSE ANSWER('CALL SJFCNL(' || PARM(1) || ');') COLUMN(MACCOL+2)    14635000
*      NORESCAN;                 /*                             @L5A*/  14640000
*  END;                          /*                             @L5A*/  14645000
*    ANSWER(COMMENT('Invoke SCHEDULER JCL FACILITY')) COLUMN(ICOMCOL)   14650000
*      NORESCAN;                                                        14700000
*    ANSWER('RFY GPR00F UNRSTD;') COLUMN(MACCOL+2) NORESCAN;            14750000
*    ANSWER('END;') COLUMN(MACCOL) NORESCAN;                            14800000
*    ANSWER(COMMENT('End SJF exists processing')) COLUMN(ICOMCOL)       14802500
*      NORESCAN;                                           /*    @L2A*/ 14805000
*    ANSWER('ELSE DO;') COLUMN(MACCOL) NORESCAN; /* Generate the else   14807500
*                                         for the test if SJF is loaded 14810000
*                                                                @L2A*/ 14812500
*    ANSWER(COMMENT('SJF entry point is zero      ')) COLUMN(ICOMCOL)   14815000
*      NORESCAN;                                           /*    @L2A*/ 14817500
*    ANSWER('RFY GPR15F RSTD;') COLUMN(MACCOL+2) NORESCAN; /*    @L2A*/ 14820000
*    ANSWER('GPR15F = 24;') COLUMN(MACCOL+2) NORESCAN; /* The return    14822500
*                                         code is set to 24      @L2A*/ 14825000
*    ANSWER(COMMENT('Indicate SJF does not exist')) COLUMN(ICOMCOL)     14827500
*      NORESCAN;                                           /*    @L2A*/ 14830000
*    ANSWER('RFY GPR15F UNRSTD;') COLUMN(MACCOL+2)                      14832500
*      NORESCAN;                                           /*    @L2A*/ 14835000
*    ANSWER('END;') COLUMN(MACCOL) NORESCAN; /* SJF isn't loaded @L2A*/ 14837500
*    ANSWER(COMMENT('End SJF entry point zero')) COLUMN(ICOMCOL)        14840000
*      NORESCAN;                                           /*    @L2A*/ 14842500
*/*******************************************************************/  14842600
*/*                                                                 */  14842700
*/* If the RETCODE parameter has been coded, then generate the      */  14842800
*/* instructions to store register 15 in the variable name          */  14842900
*/* specified.                                                      */  14843000
*/*                                                             @P2M*/  14843100
*/*******************************************************************/  14843200
*    IF RETCODE(1)^='' THEN DO;      /* Test for RETCODE parameter      14843300
*                                                                @P2M*/ 14843400
*      ANSWER('RFY GPR15F RSTD;') COLUMN(MACCOL)                        14843500
*      NORESCAN;                     /* Generate code to restrict       14843600
*                                       register 15              @P2M*/ 14843700
*      ANSWER(RETCODE(1) || ' = ' || 'GPR15F;') COLUMN(MACCOL)          14843800
*      NORESCAN;                                           /*    @P2M*/ 14843900
*      ANSWER(COMMENT('Save return code')) COLUMN(ICOMCOL)              14844000
*      NORESCAN;                                           /*    @P2M*/ 14844100
*      ANSWER('RFY GPR15F UNRSTD;') COLUMN(MACCOL)                      14844200
*      NORESCAN;                                           /*    @P2M*/ 14844300
*    END;                                                  /*    @P2M*/ 14844400
*    ANSWER('END;') COLUMN(MACCOL) NORESCAN; /* SJF macro invocation    14845000
*                                                                @L2A*/ 14847500
*    ANSWER(COMMENT(IREQSTMT)) COLUMN(ICOMCOL) NORESCAN;                14850000
*  END;                                                                 14900000
*/*******************************************************************/  14950000
*/*                                                                 */  15000000
*/* If the REQUEST parameter does not specify a valid function      */  15050000
*/* then issue an error MNOTE specifying that the REQUEST           */  15100000
*/* parameter was specified incorrectly.                            */  15150000
*/*                                                                 */  15200000
*/*******************************************************************/  15250000
*  ELSE DO;                                                             15300000
*    EHARC=12;                                                          15350000
*    IF NUMBER(REQUEST) = 0 THEN DO;                                    15400000
*      IERRMSG = 'AHA0013 REQUEST IS REQUIRED BUT IS NOT SUPPLIED.'     15450000
*        || ' NO TEXT IS GENERATED.';                                   15500000
*      ANSWER MSG(IERRMSG) NORESCAN;                                    15550000
*      ANSWER(COMMENT(IERRMSG)) COLUMN(10) NORESCAN;                    15600000
*    END;                                                               15650000
*    ELSE DO;                                                           15700000
*      IERRMSG = 'AHA0043 REQUEST MUST BE ONE OF THE SJF FUNCTIONS.'    15750000
*        || ' NO TEXT IS GENERATED.';                                   15800000
*      ANSWER MSG(IERRMSG) NORESCAN;                                    15850000
*      ANSWER(COMMENT(IERRMSG)) COLUMN(10) NORESCAN;                    15900000
*    END;                                                               15950000
*  END;                                                                 16000000
*                                                                       16050000
*  RETURN CODE(EHARC);                                                  16100000
* % END SJFREQ;                                                         16150000
* % GOTO ENDMAC;                               /*                       16200000
         MACRO                                                          16250000
&NAME    SJFREQ &REQUEST=,&PARM=                                        16300000
         GBLC  &SYSSPLV          Global for SPLEVEL Macro          @L5A 16325000
         LCLC  &REG              Register specified for PARM            16350000
         LCLC  &FSTPARM          First parameter for PARM               16400000
.********************************************************************** 16450000
.*                                                                    * 16500000
.* Check if any positional parameters were specified.  If so,         * 16550000
.* issue an error MNOTE specifying that the positional parameters     * 16600000
.* are ignored.                                                       * 16650000
.*                                                                    * 16700000
.********************************************************************** 16750000
         AIF   ('&SYSLIST(1)' EQ '').CHKREQ                             16800000
         MNOTE 04,'AHA0051 THE MACLIST &SYSLIST(1) IS NOT ALLOWED. IT IX16850000
               S IGNORED.'                                              16900000
.********************************************************************** 16950000
.*                                                                    * 17000000
.* Check if more than one argument was specified for the REQUEST      * 17050000
.* parameter.  If so, issue an error MNOTE specifying that the        * 17100000
.* other arguments are ignored.                                       * 17150000
.*                                                                    * 17200000
.********************************************************************** 17250000
.CHKREQ  ANOP                                                           17300000
         AIF  (N'&REQUEST LE 1).CHKPARM                                 17350000
         MNOTE 04,'AHA0031 &REQUEST IS TOO LONG. ARGUMENTS ARE IGNORED X17400000
               AFTER &REQUEST(1) .'                                     17450000
.********************************************************************** 17500000
.*                                                                    * 17550000
.* Check if more than one argument was specified for the PARM         * 17600000
.* parameter.  If so, issue an error MNOTE specifying that the        * 17650000
.* other arguments are ignored.                                       * 17700000
.*                                                                    * 17750000
.********************************************************************** 17800000
.CHKPARM ANOP                                                           17850000
         AIF (N'&PARM LE 1).CHKLBL                                      17900000
         MNOTE 04,'AHA0031 &PARM IS TOO LONG. ARGUMENTS ARE IGNORED AFTX17950000
               ER &PARM(1) .'                                           18000000
.*********************************************************************  18050000
.*                                                                   *  18100000
.* If a label was specified on the macro invocation then             *  18150000
.* generate an EQU for the label.                                    *  18200000
.*                                                                   *  18250000
.*********************************************************************  18300000
.CHKLBL  ANOP                                                           18350000
         AIF   ('&NAME' EQ '').SKIPLBL                                  18400000
&NAME    EQU   *                                                        18450000
.SKIPLBL ANOP                                                           18500000
.*********************************************************************  18550000
.*                                                                   *  18600000
.* Verify the REQUEST parameter.  If the REQUEST parameter           *  18650000
.* specifies a valid function then generate the instructions         *  18700000
.* to put the function mask into Register 0.                         *  18750000
.*                                                                   *  18800000
.*********************************************************************  18850000
         AIF   ('&REQUEST(1)' NE 'TERMINATE').DEFINE                    18900000
         LA    0,0                        SPECIFY TERMINATE REQUEST     18950000
         AGO   .REQGOOD                                                 19000000
.DEFINE  ANOP                                                           19050000
         AIF   ('&REQUEST(1)' NE 'DEFINEJDVT').FIND                     19100000
         LA    0,1                        SPECIFY DEFINEJDVT REQUEST    19150000
         AGO   .REQGOOD                                                 19200000
.FIND    ANOP                                                           19250000
         AIF   ('&REQUEST(1)' NE 'FINDSWB').UPDATE                      19300000
         LA    0,2                        SPECIFY FINDSWB REQUEST       19350000
         AGO   .REQGOOD                                                 19400000
.UPDATE  ANOP                                                           19450000
         AIF   ('&REQUEST(1)' NE 'UPDATE').RETRVE                       19500000
         LA    0,3                        SPECIFY UPDATE REQUEST        19550000
         AGO   .REQGOOD                                                 19600000
.RETRVE  ANOP                                                           19650000
         AIF   ('&REQUEST(1)' NE 'RETRIEVE').WRITE                      19700000
         LA    0,4                        SPECIFY RETRIEVE REQUEST      19750000
         AGO   .REQGOOD                                                 19800000
.WRITE   ANOP                                                           19850000
         AIF   ('&REQUEST(1)' NE 'WRITESWB').GET                        19900000
         LA    0,5                        SPECIFY WRITESWB REQUEST      19950000
         AGO   .REQGOOD                                                 20000000
.GET     ANOP                                                           20050000
         AIF   ('&REQUEST(1)' NE 'GETSWB').PUT                          20100000
         LA    0,6                        SPECIFY GETSWB REQUEST        20150000
         AGO   .REQGOOD                                                 20200000
.PUT     ANOP                                                           20250000
         AIF   ('&REQUEST(1)' NE 'PUTSWB').DELETE                       20300000
         LA    0,7                        SPECIFY PUTSWB REQUEST        20350000
         AGO   .REQGOOD                                                 20400000
.DELETE  ANOP                                                           20450000
         AIF   ('&REQUEST(1)' NE 'DELETESWB').EXTRACT                   20500000
         LA    0,8                        SPECIFY DELETESWB REQUEST     20550000
         AGO   .REQGOOD                                                 20600000
.EXTRACT ANOP                                                           20650000
         AIF   ('&REQUEST(1)' NE 'JDTEXTRACT').FNDJDVT                  20700000
         LA    0,9                        SPECIFY EXTRACT REQUEST       20750000
         AGO   .REQGOOD                                                 20800000
.FNDJDVT ANOP                                                           20850000
         AIF   ('&REQUEST(1)' NE 'FINDJDVT').INTJDVT                    20900000
         LA    0,10                       SPECIFY FINDJDVT REQUEST      20950000
         AGO   .REQGOOD                                                 21000000
.INTJDVT ANOP                                                           21050000
         AIF   ('&REQUEST(1)' NE 'INITJDVT').VERIFY  If not INITJDVT    21083300
.*                                        request, branch around  @L2C  21116600
         LA    0,11                       SPECIFY INITJDVT REQUEST      21150000
         AGO   .REQGOOD                   Branch to continue valid      21153300
.*                                        invocation processing   @L1A  21156600
.VERIFY  ANOP                             Verify request processing     21159900
         AIF   ('&REQUEST(1)' NE 'VERIFY').ACCESS  If not VERIFY        21163200
.*                                        request, branch around  @L2C  21166500
         LA    0,12                       SPECIFY VERIFY REQUEST        21169800
         AGO   .REQGOOD                   Branch to continue valid      21173100
.*                                        invocation processing   @L2A  21176400
.ACCESS  ANOP                             ACCESS request processing     21179700
.*                                                                @L1A  21183000
         AIF   ('&REQUEST(1)' NE 'ACCESS').ERASE   If not an ACCESS     21186300
.*                                        request, branch around  @L5C  21191200
         LA    0,13                       SPECIFY ACCESS REQUEST  @L1A  21196200
         AGO   .REQGOOD                   Branch to continue valid      21196300
.*                                        invocation processing   @P1A  21196400
.ERASE   ANOP                             ERASE request processing      21196600
.*                                                                @D1A  21197000
         AIF   ('&REQUEST(1)' NE 'ERASE').SERIAL   If not an ERASE      21197400
.*                                        request, branch around  @L5C  21198000
         LA    0,14                       SPECIFY ERASE REQUEST         21198600
.*                                                                @D1A  21198700
         AGO   .REQGOOD                   Branch to continue valid      21198800
.SERIAL  ANOP                             SERIALIZE request processing  21198900
.*                                                                @L3A  21199000
         AIF   ('&REQUEST(1)' NE 'SERIALIZE').SCAN    If not a          21199100
.*                                        SERIALIZE request, branch     21199200
.*                                        around                  @L6C  21199300
         LA    0,15                     SPECIFY SERIALIZE REQUEST @L3A  21199500
         AGO   .REQGOOD                   Branch to continue valid      21202000
.*                                        invocation processing   @L4A  21204500
.SCAN    ANOP                             SCANSWB request processing    21207000
.*                                                                @L4A  21209500
         AIF   ('&REQUEST(1)' NE 'SCANSWB').RETURN  If not a            21212000
.*                                        SCANSWB request, branch       21214500
.*                                        around                  @L5C  21217000
         LA    0,16                     SPECIFY SCANSWB REQUEST   @L4A  21222000
         AGO   .REQGOOD                   Branch to continue valid      21224500
.*                                        invocation processing   @L4A  21227000
.RETURN  ANOP                             RETURNSWB request processing  21229500
.*                                                                @L4A  21230300
         AIF   ('&REQUEST(1)' NE 'RETURNSWB').KEYLIST  If not a         21231100
.*                                        RETURNSWB request, branch     21231900
.*                                        around                  @L6C  21232700
         LA    0,17                     SPECIFY RETURNSWB REQUEST @L4A  21233500
         AGO   .REQGOOD                   Branch to continue valid      21234300
.*                                        invocation processing   @L4A  21234400
.KEYLIST ANOP                            KEYLIST request processing     21234500
.*                                                                @L6A  21234600
         AIF   ('&REQUEST(1)' NE 'KEYLIST').SWBTUMR If not a KEYLIST    21234700
.*                                        request, branch around  @L6A  21234800
         LA    0,18                     SPECIFY KEYLIST REQUEST   @L6A  21234900
         AGO   .REQGOOD                   Branch to continue valid      21235000
.*                                        invocation processing   @L6A  21235100
.SWBTUMR ANOP                            SWBTU_MERGE request processing 21235200
.*                                                                @L6A  21235300
         AIF   ('&REQUEST(1)' NE 'SWBTU_MERGE').MERGE  If not a         21235400
.*                                        SWBTU_MERGE request, check    21235500
.*                                        for MERGESWB            @L7C  21235600
         LA    0,19                   SPECIFY SWBTU_MERGE REQUEST @L6A  21235700
         AGO   .REQGOOD                   Branch to continue valid      21235800
.*                                        invocation processing   @L6A  21235900
.MERGE   ANOP                            MERGESWB request processing    21237100
.*                                                                @L7A  21238300
         AIF   ('&REQUEST(1)' NE 'MERGESWB').VALIDAT If not a           21239500
.*                                        MERGESWB request, check       21240700
.*                                        for VALIDATE            @L8C  21241900
         LA    0,20                   Specify MERGESWB Request    @L7A  21243100
         AGO   .REQGOOD                   Branch to continue valid      21244300
.*                                        invocation processing   @L7A  21245500
.VALIDAT ANOP                            VALIDATE request processing    21245600
.*                                                                @L8A  21245700
         AIF   ('&REQUEST(1)' NE 'VALIDATE').REQERR  If not a           21245800
.*                                        VALIDATE request, branch      21245900
.*                                        to error processing     @L8A  21246000
         LA    0,21                   Specify VALIDATE Request    @L8A  21246100
         AGO   .REQGOOD                   Branch to continue valid      21246200
.*                                        invocation processing   @L8A  21246300
.*********************************************************************  21249600
.*                                                                   *  21250000
.* If the PARM parameter has been coded, then generate the           *  21300000
.* instructions for Register 1 to point to a word (SJFPTR)           *  21350000
.* which contains the address of the parameter list.                 *  21400000
.*                                                                   *  21450000
.*********************************************************************  21500000
.REQGOOD ANOP                                                           21550000
         SPLEVEL TEST                     Obtain default SYSSPLV   @L5A 21575000
         AIF   (N'&PARM EQ 0).INVOKE      Parm not specified            21600000
         AIF   (N'&PARM GT 1).TWOPARM More than one parm specified      21650000
         AIF   ('&PARM'(1,1) EQ '(').REGPARM                            21700000
         LA    1,&PARM                    GET ADDRESS OF PARAMETER      21750000
         ST    1,SJFPTR                   PUT ADDRESS INTO SJFPTR       21800000
         LA    1,SJFPTR                   SET REGISTER 1                21850000
         AGO   .INVOKE                                                  21900000
.REGPARM ANOP                                                           21950000
&REG     SETC  '&PARM'(2,K'&PARM-2)       Register specified for PARM   22000000
         ST    &REG,SJFPTR                PUT ADDRESS INTO SJFPTR       22050000
         LA    1,SJFPTR                   SET REGISTER 1                22100000
         AGO   .INVOKE                                                  22150000
.TWOPARM ANOP                                                           22200000
&FSTPARM SETC  '&PARM(1)'                                               22250000
         AIF   ('&FSTPARM'(1,1) EQ '(').TWOREG                          22300000
         LA    1,&PARM(1)                                               22350000
         ST    1,SJFPTR                                                 22400000
         LA    1,SJFPTR                                                 22450000
         AGO   .INVOKE                                                  22500000
.TWOREG  ANOP                                                           22550000
&REG     SETC  '&FSTPARM'(2,K'&FSTPARM-2) Register specified            22600000
         ST    &REG,SJFPTR                                              22650000
         LA    1,SJFPTR                                                 22700000
.*********************************************************************  22750000
.*                                                                   *  22800000
.* Generate the instructions to invoke SJF.                          *  22850000
.*                                                                   *  22900000
.*********************************************************************  22950000
.INVOKE  ANOP                                                           23000000
         L     15,CVTPTR                  GET ADDRESS OF CVT            23050000
         USING CVTMAP,15                  SET ADDRESSIBILITY TO CVT     23100000
         L     15,CVTJESCT                GET ADDRESS OF JESCT          23150000
         USING JESCT,15                   SET ADDRESSIBILITY TO JESCT   23200000
         L     15,JESCTEXT                GET ADDRESS OF JESCT          23250000
*                                         PAGABLE EXTENSION             23300000
         USING JESPEXT,15                 SET ADDRESSIBILITY TO THE     23350000
*                                         JESCT PAGABLE EXTENSION       23400000
         AIF   ('&SYSSPLV' NE '1').SJFXA  Running on XA system ?   @L5A 23425000
         L     15,JESSJCNL                GET ADDRESS OF THE SJF @L5A   23430200
         LTR   15,15                      Test if the SJF entry point  X23435400
                                          is zero                  @L5A 23440600
         BZ    NSJF&SYSNDX                If SJF is not loaded then    X23445800
                                          branch around the call   @L5A 23451000
         BALR  14,15                      Invoke SJF               @L5A 23456200
         AGO   .SJFNXA                    GO load glue routine     @L5A 23461400
.SJFXA   ANOP                                                      @L5A 23466600
         LA    13,0(,13)                  Clean up Save Area Reg   @L5A 23474900
         L     15,JESSJF                  GET ADDRESS OF THE SJF   @L5A 23483200
*                                         CONTROL ROUTINE               23500000
         LTR   15,15                      Test if the SJF entry point  X23508300
                                          is zero                  @L2A 23516600
         BZ    NSJF&SYSNDX                If SJF is not loaded then    X23524900
                                          branch around the call   @L2A 23533200
         BASSM 14,15                      Invoke SJF               @P3C 23538700
.SJFNXA  ANOP                                                      @P4C 23544200
         B     XSJF&SYSNDX                Branch around the call   @L2A 23549800
NSJF&SYSNDX   EQU *                                                @L2A 23558100
         LA    15,24                      Set the return code in       X23566400
                                          register 15 to indicate SJF  X23574700
                                          not loaded               @L2A 23583000
XSJF&SYSNDX   EQU *                                                @L2A 23591300
         DROP  15                                                       23600000
         AGO   .END                                                     23650000
.*********************************************************************  23700000
.*                                                                   *  23750000
.* If the REQUEST parameter was not specified or specified           *  23800000
.* incorrectly then generate a MNOTE.                                *  23850000
.*                                                                   *  23900000
.*********************************************************************  23950000
.REQERR  ANOP                                                           24000000
         AIF   ('&REQUEST' NE '').REQMSG2                               24050000
.REQMSG1 ANOP                                                           24100000
         MNOTE 12,'AHA0013 REQUEST IS REQUIRED BUT IS NOT SUPPLIED. NO X24150000
               TEXT IS GENERATED.'                                      24200000
         AGO   .END                                                     24250000
.REQMSG2 ANOP                                                           24300000
         MNOTE 12,'AHA0043 REQUEST MUST BE ONE OF THE SJF FUNCTIONS. NOX24350000
                TEXT IS GENERATED.'                                     24400000
.END     ANOP                                                           24450000
         MEND                                                           24500000
**/                                                                     24550000
*%ENDMAC: ;                            /* Target of macro GOTO   @L1C*/ 24600000
