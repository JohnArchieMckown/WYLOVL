*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  COFIDENT                              -06/27/91-<1> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  IDENTIFY USER                                 * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     5695-047                                                        * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     (C) COPYRIGHT IBM CORP. 1988 1991                               * 00001300
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001400
*                                                                     * 00001500
* STATUS= JBB4422                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*                                                                     * 00001900
*01* FUNCTION:                                                        * 00002000
*                                                                     * 00002100
*      This macro provides the interface to the IDENTIFY USER         * 00002200
*      function provided by the Virtual Lookaside Facility.  This     * 00002300
*      function identifies an end user and associated major name      * 00002400
*      search order to VLF.  Once the end user is identified, the     * 00002500
*      invoking service or component is able to retrieve data from    * 00002600
*      the specified class of VLF objects on behalf of the end user   * 00002700
*      as well as to create VLF objects in the class on the user's    * 00002800
*      behalf.                                                        * 00002900
*                                                                     * 00003000
*      VLF regards the dispatched (HOME) address space at the time    * 00003100
*      the IDENTIFY function is invoked to be the end user address    * 00003200
*      space.  Thus, the COFIDENT macro should be issued while        * 00003300
*      running under an end user task.  VLF considers the end of a    * 00003400
*      cross-memory-resource-owning job step or a logoff of a TSO     * 00003500
*      user as the termination of the end user and removes the end    * 00003600
*      user from identification to VLF.                               * 00003700
*                                                                     * 00003800
*      A search order of major names unique to the user must be       * 00003900
*      provided; either directly via the MAJNLST keyword or           * 00004000
*      indirectly via the DDNAME keyword.  The IDENTIFY function      * 00004100
*      returns a unique user token that identifies this user and      * 00004200
*      associated major name search order to the other VLF functions  * 00004300
*      (CREATE, RETRIEVE, REMOVE) which may be issued on behalf of    * 00004400
*      the user.                                                      * 00004500
*                                                                     * 00004600
*      It is the caller's responsibility to assure that the user is   * 00004700
*      authorized to access any data sets (for those classes          * 00004800
*      specified in the COFVLFxx PARMLIB member with the EDSN         * 00004900
*      keyword) or other entities which correspond to the major names * 00005000
*      at the time the IDENTIFY function is invoked.  This implies    * 00005100
*      that the component using VLF should OPEN the DDNAME or perform * 00005200
*      authority checking prior to issuing the COFIDENT macro.        * 00005300
*                                                                     * 00005400
*      If the end user has private data sets in a DDNAME              * 00005500
*      concatenation (e.g., data sets not included in the COFVLFxx    * 00005600
*      parmlib description for this class), they are not used as a    * 00005700
*      source of data for VLF objects.                                * 00005800
*                                                                     * 00005900
*      The value of the UTOKEN (user token) returned by this function * 00006000
*      is never zero.  Thus, the component using VLF may check a      * 00006100
*      saved user token field for zero to determine if an end user    * 00006200
*      has been identified to VLF.                                    * 00006300
*                                                                     * 00006400
*01* INVOCATION REQUIREMENTS:                                         * 00006500
*                                                                     * 00006600
*                                                                     * 00006700
*      Execution Mode:   Task mode.                                   * 00006800
*                                                                     * 00006900
*      Authorization:    Supervisor state or PSW key mask (PKM) 0-7.  * 00007000
*                                                                     * 00007100
*      Addressing Mode:  24 or 31 bit addressing mode. All address    * 00007200
*                        parameters passed must be valid 31 bit       * 00007300
*                        addresses.                                   * 00007400
*                                                                     * 00007500
*      ASC mode:         Primary or Access Register ASC mode.         * 00007600
*                                                                     * 00007700
*      Serialization:    Enabled.                                     * 00007800
*                                                                     * 00007900
*      Restrictions:                                                  * 00008000
*                                                                     * 00008100
*                                                                     * 00008200
*                        1.  The storage area to be used for the      * 00008300
*                            parameter list must reside in the        * 00008400
*                            caller's PRIMARY address space.  Any     * 00008500
*                            ALET used to qualify this storage must   * 00008600
*                            be 0.                                    * 00008700
*                                                                     * 00008800
*                        2.  When the DDNAME keyword is specified,    * 00008900
*                            the COFIDENT macro must be invoked from  * 00009000
*                            the address space of the task which      * 00009100
*                            allocated the DDNAME.                    * 00009200
*                                                                     * 00009300
*                        3.  When SCOPE(HOME) is specified or         * 00009400
*                            defaulted, the UTOKEN returned by the    * 00009500
*                            IDENTIFY function is considered valid    * 00009600
*                            only for tasks with the same HOME ASID   * 00009700
*                            as the issuer of the COFIDENT macro.     * 00009800
*                            Subsequent invocations of the VLF        * 00009900
*                            functions CREATE, RETRIEVE, or REMOVE    * 00010000
*                            which supply this UTOKEN must also       * 00010100
*                            satisfy the HOME ASID requirement.       * 00010200
*                                                                     * 00010300
*                        4.  When SCOPE(SYSTEM) is specified, the     * 00010400
*                            CREATE and REMOVE functions must satisfy * 00010500
*                            the same restriction as SCOPE(HOME).     * 00010600
*                            However the VLF RETRIEVE function may be * 00010700
*                            invoked by tasks which have a different  * 00010800
*                            HOME ASID than the issuer of the         * 00010900
*                            COFIDENT macro.  In this case, a         * 00011000
*                            RETRIEVE request issued with this UTOKEN * 00011100
*                            is treated as if the request had come    * 00011200
*                            from the same end user that issued the   * 00011300
*                            COFIDENT macro.  Note that any problem   * 00011400
*                            or supervisor state task is permitted to * 00011500
*                            RETRIEVE objects created with this       * 00011600
*                            UTOKEN provided the UTOKEN is presented  * 00011700
*                            on the RETRIEVE request.                 * 00011800
*                                                                     * 00011900
*                                                                     * 00012000
*                                                                     * 00012100
*01* INVOCATION FORMAT:                                               * 00012200
*                                                                     * 00012300
*[xlabel]  COFIDENT    DDNAME=xddname                                * 00012400
*                     ,MAJNLST=xmajnlst                              * 00012500
*                      ,CLASS=xclass                                  * 00012600
*                     [,SCOPE=HOME|SYSTEM]                          * 00012700
*                      ,UTOKEN=xutoken                                * 00012800
*                     [,RETCODE=xretcode]                             * 00012900
*                     [,RSNCODE=xrsncode]                             * 00013000
*                    [,MF=S]                                         * 00013100
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00013200
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00013300
*                                                                     * 00013400
*                                                                     * 00013500
*      Where:                                                         * 00013600
*                                                                     * 00013700
*                                                                     * 00013800
*      [xlabel]                                                       * 00013900
*          is an optional 1 to 8 alphanumeric character input string, * 00014000
*          starting in column 1, that is the assembler label on the   * 00014100
*          COFIDENT macro.                                            * 00014200
*          DEFAULT: Null label.                                       * 00014300
*                                                                     * 00014400
*                                                                     * 00014500
*                                                                     * 00014600
*      The following is a set of mutually exclusive keys.  This set   * 00014700
*      is required; only one key must be specified.                   * 00014800
*                                                                     * 00014900
*                                                                     * 00015000
*      DDNAME=xddname                                                 * 00015100
*          is the name (RX-type), or address in register (2)-(12), of * 00015200
*          a 8 character input belonging to a group of mutually       * 00015300
*          exclusive keys of which only one is required, variable or  * 00015400
*          constant containing the DDNAME of the concatenated data    * 00015500
*          set list which is the major name search order              * 00015600
*          corresponding to this IDENTIFY.                            * 00015700
*                                                                     * 00015800
*          This keyword is only valid for classes of VLF objects      * 00015900
*          which correspond to members of partitioned data sets.  The * 00016000
*          major names for these classes are described in the         * 00016100
*          COFVLFxx PARMLIB member with the EDSN keyword.             * 00016200
*                                                                     * 00016300
*          NOTE:  It is the caller's responsibility to assure that    * 00016400
*          the end user is authorized to access any data sets         * 00016500
*          referenced by this DDNAME.  The caller of the IDENTIFY     * 00016600
*          function must OPEN the DDNAME prior to issuing the         * 00016700
*          COFIDENT macro in order to guarantee that the end user has * 00016800
*          the correct authority to access the data sets in the       * 00016900
*          DDNAME concatenation.                                      * 00017000
*                                                                     * 00017100
*      MAJNLST=xmajnlst                                               * 00017200
*          is an input.  It is the name (RX-type), or address in      * 00017300
*          register (2)-(12), of a major name list belonging to a     * 00017400
*          group of mutually exclusive keys of which only one is      * 00017500
*          required, which controls the major name search order for   * 00017600
*          the user being identified to the class of objects          * 00017700
*          specified by the CLASS keyword.  The list consists of a    * 00017800
*          4-byte field containing the number of entries in the list, * 00017900
*          followed by a contiguous list of from 1 to 256 major       * 00018000
*          names.  Each name in the list must be the same length,     * 00018100
*          padded with blanks on the right if necessary.  The length  * 00018200
*          of each name in the list must be equal to the length       * 00018300
*          supplied by the MAJLEN keyword on the COFDEFIN macro when  * 00018400
*          the class was defined.                                     * 00018500
*                                                                     * 00018600
*          This keyword is only valid for classes of VLF objects      * 00018700
*          which do not correspond to members of partitioned data     * 00018800
*          sets.  The major names for these classes are described in  * 00018900
*          the COFVLFxx PARMLIB member with the EMAJ keyword.         * 00019000
*                                                                     * 00019100
*          Note that the variable name of the major name list may be  * 00019200
*          ALET qualified, but that an ALET of 1, referencing the     * 00019300
*          SASN of the caller, or ALETs referencing entries on the    * 00019400
*          PASN access list of the caller are not allowed.            * 00019500
*                                                                     * 00019600
*                                                                     * 00019700
*      End of a set of mutually exclusive required keys.              * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*                                                                     * 00020100
*      CLASS=xclass                                                   * 00020200
*          is the name (RX-type), or address in register (2)-(12), of * 00020300
*          a required 7 character input variable or constant          * 00020400
*          containing the class name.  The class must have been       * 00020500
*          previously defined via the VLF DEFINE function.            * 00020600
*                                                                     * 00020700
*                                                                     * 00020800
*                                                                     * 00020900
*      [SCOPE=HOME|SYSTEM]                                          * 00021000
*          is an optional keyword input that indicates the scope of   * 00021100
*          services which may validly inovoke the RETRIEVE function   * 00021200
*          with the UTOKEN corresponding to this IDENTIFY.            * 00021300
*          DEFAULT: HOME                                              * 00021400
*                                                                     * 00021500
*                                                                     * 00021600
*          HOME      indicates that only services with the same HOME  * 00021700
*                    ASID as the task issuing the COFIDENT macro is   * 00021800
*                    allowed to invoke the RETRIEVE function using    * 00021900
*                    the UTOKEN corresponding to this IDENTIFY.       * 00022000
*                                                                     * 00022100
*          SYSTEM    indicates that services with a HOME ASID that is * 00022200
*                    different from the task issuing the COFIDENT     * 00022300
*                    macro is allowed to invoke the RETRIEVE function * 00022400
*                    using the UTOKEN corresponding to this IDENTIFY. * 00022500
*                    In this case, a COFRETRI macro issued with this  * 00022600
*                    UTOKEN is treated as if the request had come     * 00022700
*                    from the same end user that issued the COFIDENT  * 00022800
*                    macro.                                           * 00022900
*                                                                     * 00023000
*                    This keyword allows a service running under a    * 00023100
*                    particular HOME ASID to control a set of objects * 00023200
*                    stored by VLF and to allow all tasks in the      * 00023300
*                    system to access those objects.                  * 00023400
*                                                                     * 00023500
*                                                                     * 00023600
*                                                                     * 00023700
*                                                                     * 00023800
*      UTOKEN=xutoken                                                 * 00023900
*          is the name (RX-type), or address in register (2)-(12), of * 00024000
*          a required 16 character output variable that contains the  * 00024100
*          returned user token value that must be passed back to VLF  * 00024200
*          in order to CREATE or RETRIEVE VLF objects on behalf of    * 00024300
*          the user being identified.                                 * 00024400
*                                                                     * 00024500
*                                                                     * 00024600
*                                                                     * 00024700
*      [RETCODE=xretcode]                                             * 00024800
*          is the name (RX-type) of an optional fullword output       * 00024900
*          variable, or register (2)-(12), into which the return code * 00025000
*          is to be copied from GPR 15.                               * 00025100
*                                                                     * 00025200
*                                                                     * 00025300
*                                                                     * 00025400
*      [RSNCODE=xrsncode]                                             * 00025500
*          is the name (RX-type) of an optional fullword output       * 00025600
*          variable, or register (2)-(12), into which the reason code * 00025700
*          is to be copied from GPR 0.                                * 00025800
*                                                                     * 00025900
*                                                                     * 00026000
*                                                                     * 00026100
*      [MF=S|L|E]                                                   * 00026200
*          is an optional keyword input which specifies the macro     * 00026300
*          form.                                                      * 00026400
*          DEFAULT: S                                                 * 00026500
*                                                                     * 00026600
*                                                                     * 00026700
*          [MF=S]                                                     * 00026800
*              specifies the standard form of the macro.  The "S"     * 00026900
*              form generates code to put the parameters into an      * 00027000
*              in-line parameter list and invoke the desired service. * 00027100
*              Full checking for required macro keys is done along    * 00027200
*              with supplying defaults for optional parameters that   * 00027300
*              are not specified.                                     * 00027400
*                                                                     * 00027500
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00027600
*              specifies the list form of the macro.  The "L" form    * 00027700
*              defines an area to be used for the parameter list.     * 00027800
*              Any other macro parameters are flagged as errors.      * 00027900
*                                                                     * 00028000
*            ,xmfctrl                                                 * 00028100
*              is a required input.  It is the name of a storage area * 00028200
*              for the parameter list.                                * 00028300
*                                                                     * 00028400
*            ,xmfattr|0D                                            * 00028500
*              is an optional 60 character input string that varies   * 00028600
*              from 1 to 60 characters. It can contain any value that * 00028700
*              is valid on an assembler DS pseudo-op. You can use     * 00028800
*              this parameter to force boundary alignment of the      * 00028900
*              parameter list.                                        * 00029000
*              DEFAULT: 0D which forces the parameter list to a       * 00029100
*              doubleword boundary.                                   * 00029200
*                                                                     * 00029300
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00029400
*              specifies the execute form of the macro.  The "E" form * 00029500
*              generates code to put the parameters into the          * 00029600
*              parameter list specified by xmfctrl and provides full  * 00029700
*              syntax checking with default setting.                  * 00029800
*                                                                     * 00029900
*            ,xmfctrl                                                 * 00030000
*              is a required input.  It is the name (RX-type), or     * 00030100
*              address in register (2)-(12), of a storage area for    * 00030200
*              the parameter list.                                    * 00030300
*                                                                     * 00030400
*            ,COMPLETE                                              * 00030500
*              is an optional keyword input which specifies the       * 00030600
*              degree of macro parameter syntax checking.             * 00030700
*              DEFAULT: COMPLETE                                      * 00030800
*                                                                     * 00030900
*                                                                     * 00031000
*              COMPLETE   Checking for required macro keys is done    * 00031100
*                        and defaults are supplied for optional       * 00031200
*                        parameters that were not specified.          * 00031300
*                                                                     * 00031400
*                                                                     * 00031500
*                                                                     * 00031600
*                                                                     * 00031700
*01* RETURN CODES:                                                    * 00031800
*                                                                     * 00031900
*                                                                     * 00032000
*       0         Success.  The user has been identified to VLF with  * 00032100
*                 the specified major name search order.              * 00032200
*                                                                     * 00032300
*       2         The user is already identified to VLF for this      * 00032400
*                 class.                                              * 00032500
*                                                                     * 00032600
*       4         The IDENTIFY request cannot be completed.  Another  * 00032700
*                 IDENTIFY request from the same HOME ASID is         * 00032800
*                 currently in progress for the same Class and        * 00032900
*                 DDNAME.                                             * 00033000
*                                                                     * 00033100
*       8         There are no majors in the search order whose       * 00033200
*                 objects are eligible to be stored in VLF.           * 00033300
*                                                                     * 00033400
*       12(0C)    The CLASS has not been defined to VLF.              * 00033500
*                                                                     * 00033600
*       16(10)    Unable to obtain the list of partitioned data sets  * 00033700
*                 for the input DDNAME.  The task invoking VLF may    * 00033800
*                 not have been running under the same HOME ASID as   * 00033900
*                 the task which allocated the DDNAME.                * 00034000
*                                                                     * 00034100
*       20(14)    Incorrect input parameter specified.  Either the    * 00034200
*                 DDNAME keyword was not specified for an input class * 00034300
*                 that corresponds to PDS members, or the DDNAME      * 00034400
*                 keyword was specified for a non-PDS class.          * 00034500
*                                                                     * 00034600
*       24(18)    Parameter list error.                               * 00034700
*                                                                     * 00034800
*       28(1C)    An error was detected during processing of the      * 00034900
*                 DDNAME for a PDS class.  See reason codes.          * 00035000
*                                                                     * 00035100
*       40(28)    VLF is not active.                                  * 00035200
*                                                                     * 00035300
*       44(2C)    Unexpected error in VLF.                            * 00035400
*                                                                     * 00035500
*                                                                     * 00035600
*01* REASON CODES:                                                    * 00035700
*                                                                     * 00035800
*       REASON    RETURN                                              * 00035900
*       CODE      CODE      DESCRIPTION                               * 00036000
*                                          * 00036100
*                                                                     * 00036200
*                                                                     * 00036300
*              0  0         Success.  The user has been identified to * 00036400
*                           VLF  with the specified major name search * 00036500
*                           order.                                    * 00036600
*                                                                     * 00036700
*              8  2         The user is already identified to VLF for * 00036800
*                           this  class.  The UTOKEN representing the * 00036900
*                           previous  IDENTIFY  has  been returned in * 00037000
*                           the UTOKEN field.                         * 00037100
*                                                                     * 00037200
*              8  24(18)    The  number  of  major  names in a search * 00037300
*                           order is not in the range 1-256.          * 00037400
*                                                                     * 00037500
*          12(C)  24(18)    The  input  major name list was qualified * 00037600
*                           using  either  a SASN ALET or an ALET not * 00037700
*                           on the Dispatchable Unit Access List.     * 00037800
*                                                                     * 00037900
*              4  28(1C)    The DDNAME was not open.                  * 00038000
*                                                                     * 00038100
*              8  28(1C)    The DDNAME was not allocated.             * 00038200
*                                                                     * 00038300
*          12(C)  28(1C)    The   DDNAME  concatenation  was  changed * 00038400
*                           without  deallocating  the  DDNAME.   The * 00038500
*                           DDNAME is not eligible for use by the VLF * 00038600
*                           IDENTIFY function.                        * 00038700
*                                                                     * 00038800
*         16(10)  28(1C)    DDNAME was specified on an SRB mode call. * 00038900
*                                                                     * 00039000
*         (nnnn)  44(2C)    The  reason  code  associated with return * 00039100
*                           code   44   (X'2C')   is   for   internal * 00039200
*                           diagnostic  purposes only.   It should be * 00039300
*                           recorded  and supplied to the appropriate * 00039400
*                           IBM Support personnel.                    * 00039500
*                                                                     * 00039600
*                                                                     * 00039700
*01* MODULE TYPE:  ASSEM MACRO                                        * 00039800
*                                                                     * 00039900
*02*   PROCESSOR:  ASSEM                                              * 00040000
*                                                                     * 00040100
*01* COMPONENT:  SC164                                                * 00040200
*                                                                     * 00040300
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00040400
*                                                                     * 00040500
*01* MACRO USAGE NOTES:                                               * 00040600
*                                                                     * 00040700
*                                                                     * 00040800
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00040900
*        global macro variable.  Any value other than 'NO' will       * 00041000
*        result in the macro expansion being printed.  The default is * 00041100
*        'YES'.  The following examples illustrate how the ZPRINT     * 00041200
*        variable should be set.                                      * 00041300
*                                                                     * 00041400
*                    GBLC &ZPRINT                                     * 00041500
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00041600
*                                                                     * 00041700
*                                                                     * 00041800
*01* CHANGE ACTIVITY:                                                 * 00041900
*                                                                     * 00042000
*   Flag LineItem  FMID    Date   ID    Comment                       * 00042100
*                                                                     * 00042200
*    $L0=VLF      HBB3310 870921 PDAM:  Virtual Lookaside Facility    * 00042300
*    $D1=DEN1048  HBB3310 880114 PDAM:  Return/reason code changes    * 00042400
*    $P2=PC42084  HBB3310 880125 PDAM:  Return codes from IEFAB4C9    * 00042500
*    $L1=APPC1    JBB4422 900630 PDXB:  SRB mode support              * 00042600
****** END OF SPECIFICATIONS *****************************************/ 00042700
*/********************************************************************* 00042800
         MACRO                                                          00042900
&XLABEL  COFIDENT &DDNAME=,&MAJNLST=,&CLASS=,&SCOPE=,&UTOKEN=,         *00043000
               &RETCODE=,&RSNCODE=,&MF=                                 00043100
.*                                                                      00043200
*              MACDATE -06/27/91-<1>                                    00043300
.*                                                                      00043400
.*******************************************************************    00043500
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00043600
.*******************************************************************    00043700
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   00043800
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     00043900
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             00044000
.*                                                                      00044100
              GBLC  &ZCOFIDENT  YES=MACRO USED AT LEAST ONCE            00044200
.*******************************************************************    00044300
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00044400
.*******************************************************************    00044500
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 00044600
              LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS            00044700
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              00044800
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             00044900
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             00045000
              LCLA  &ZAWRK      USED AS A WORK AREA                     00045100
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  00045200
              LCLA  &ZN         NUMERIC WORK VARIABLE                   00045300
              LCLC  &ZC         CHARACTER WORK VARIABLE                 00045400
              LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE             00045500
              LCLA  &ZTLA       VALUE TOO LONG VARIABLE                 00045600
              LCLA  &ZMACRET    MACRO RETURN CODE                       00045700
&ZMACRET      SETA  0           ASSUME NO ERRORS                        00045800
.*                                                                      00045900
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      00046000
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              00046100
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   00046200
.********************************************************************   00046300
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00046400
.********************************************************************   00046500
              GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                 00046600
              GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE          00046700
.*                                                                      00046800
              AIF   (K'&SYSASCE GT 0).ZSYS4     SYS STATE DEFINED       00046900
              AIF   (K'&SYSSPLV GT 0).ZSYS2     SP LEVEL DEFINED        00047000
              SPLEVEL  TEST                                             00047100
.ZSYS2        ANOP  ,                                                   00047200
              AIF   ('&SYSSPLV' EQ '1').ZSYS3   PRE SP 3.1              00047300
              AIF   ('&SYSSPLV' EQ '2').ZSYS3   PRE SP 3.1              00047400
              SYSSTATE TEST                                             00047500
              AGO   .ZSYS4                                              00047600
.ZSYS3        ANOP  ,                                                   00047700
&SYSASCE      SETC  'P'         ASSUME SYSSTATE PRIMARY                 00047800
.ZSYS4        ANOP  ,                                                   00047900
.*******************************************************************    00048000
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00048100
.*******************************************************************    00048200
              LCLC  &XMEDDNAME  ++ NAME                                 00048300
              LCLC  &XDDNAME    ++ NAME                                 00048400
              LCLC  &XMAJNLST   ++ NAME                                 00048500
              LCLC  &XCLASS     ++ NAME                                 00048600
              LCLC  &XSCOPE     ++ VALUE                                00048700
              LCLC  &XUTOKEN    ++ NAME                                 00048800
              LCLC  &XRETCODE   ++ NAME                                 00048900
              LCLC  &XRSNCODE   ++ NAME                                 00049000
              LCLC  &XMF        ++ VALUE                                00049100
              LCLC  &XMFCTRL    ++ NAME                                 00049200
              LCLC  &XMFATTR    ++ VALUE                                00049300
              LCLC  &XMFSCK     ++ VALUE                                00049400
.*******************************************************************    00049500
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00049600
.*******************************************************************    00049700
              LCLC  &ZXMEDDNAME                 ++ INPUT NAME           00049800
              LCLC  &ZXDDNAME   ++ INPUT NAME                           00049900
              LCLC  &ZXMAJNLST  ++ INPUT NAME                           00050000
              LCLC  &ZXCLASS    ++ INPUT NAME                           00050100
              LCLC  &ZXSCOPE    ++ INPUT VALUE                          00050200
              LCLC  &ZXUTOKEN   ++ OUTPUT NAME                          00050300
              LCLC  &ZXRETCODE  ++ OUTPUT NAME                          00050400
              LCLC  &ZXRSNCODE  ++ OUTPUT NAME                          00050500
              LCLC  &ZXMF       ++ INPUT VALUE                          00050600
              LCLC  &ZXMFCTRL   ++ INPUT NAME                           00050700
              LCLC  &ZXMFATTR   ++ INPUT VALUE                          00050800
              LCLC  &ZXMFSCK    ++ INPUT VALUE                          00050900
.********************************************************************   00051000
.***AG.MF01 PROCESS MF MACRO FORMS                                      00051100
.********************************************************************   00051200
              ACTR  10000                                               00051300
.*------------------------------------------------------------------    00051400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00051500
&XMF          SETC  ''          INITIALIZE XVARIABLE                    00051600
.*-------------------------------------------------------------------   00051700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00051800
.ZG24         ANOP  ,                                                   00051900
&ZTLC         SETC 'S'                                                  00052000
              AIF   ('&MF(1)' NE '&ZTLC').ZG25                          00052100
&XMF          SETC  'S'         SET KEYWORD                             00052200
              AIF   (N'&MF LE 1).ZG24A          CK NUM                  00052300
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00052400
&ZMS          SETC  '&ZMS.&MF"'                                         00052500
&ZMS          SETC  '&ZMS "MF"'                                         00052600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00052700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00052800
.ZG24A        ANOP  ,                                                   00052900
.*-------------------------------------------------------------------   00053000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00053100
.ZG25         ANOP  ,                                                   00053200
&ZTLC         SETC 'L'                                                  00053300
              AIF   ('&MF(1)' NE '&ZTLC').ZG32                          00053400
&XMF          SETC  'L'         SET KEYWORD                             00053500
              AIF   (N'&MF LE 3).ZG25A          CK NUM                  00053600
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00053700
&ZMS          SETC  '&ZMS.&MF"'                                         00053800
&ZMS          SETC  '&ZMS "MF"'                                         00053900
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00054000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00054100
.ZG25A        ANOP  ,                                                   00054200
.*-------------------------------------------------------------------   00054300
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00054400
              AIF   (N'&SYSLIST NE 0).ZG25B     POSITIONALS?            00054500
              AIF   ('&DDNAME' NE '').ZG25B     KEYS?                   00054600
              AIF   ('&MAJNLST' NE '').ZG25B    KEYS?                   00054700
              AIF   ('&CLASS' NE '').ZG25B      KEYS?                   00054800
              AIF   ('&SCOPE' NE '').ZG25B      KEYS?                   00054900
              AIF   ('&UTOKEN' NE '').ZG25B     KEYS?                   00055000
              AIF   ('&RETCODE' NE '').ZG25B    KEYS?                   00055100
              AIF   ('&RSNCODE' NE '').ZG25B    KEYS?                   00055200
              AGO    .ZG25C     INVOCATION OKAY                         00055300
.ZG25B        ANOP  ,                                                   00055400
&ZMS          SETC  'THE "L" FORM OF "MF" CANNOT'  *MFLA* MNOTE         00055500
&ZMS          SETC  '&ZMS HAVE ANY OTHER KEYWORDS OR'                   00055600
&ZMS          SETC  '&ZMS POSITIONAL PARAMETERS SPECIFIED'              00055700
              MNOTE 8,' &ZMS ON THE INVOCATION.'                        00055800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00055900
.ZG25C        ANOP  ,                                                   00056000
.*-------------------------------------------------------------------   00056100
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00056200
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00056300
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00056400
              AIF   (N'&MF(2) GT 1).ZG27B       MULTI PARMS             00056500
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00056600
.ZG27B        AIF   (K'&MF(2) GT 0).ZG27C                               00056700
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00056800
&ZMS          SETC  'WHEN "L" IS SPECIFIED'     *KRQDA*                 00056900
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00057000
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00057100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00057200
.ZG27C        ANOP  ,                                                   00057300
.*-------------------------------------------------------------------   00057400
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00057500
              AIF   (K'&ZXMFCTRL LE 0).ZG27P    NOT I/O                 00057600
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG27P                      00057700
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00057800
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00057900
&ZMS          SETC  '&ZMS.&MF"'                                         00058000
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00058100
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                   00058200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00058300
.ZG27P        ANOP  ,                                                   00058400
.*-------------------------------------------------------------------   00058500
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00058600
&ZXMFATTR     SETC  'INPUT'     SET IN/OUTPUT                           00058700
&XMFATTR      SETC  '0D'                                                00058800
              AIF   (K'&MF(3) LE 0).ZG30B       PARM                    00058900
&XMFATTR      SETC  '&MF(3,1)'  SET XVARIABLE                           00059000
              AIF   (N'&MF(3) GT 1).ZG30B       MULTI PARMS             00059100
&XMFATTR      SETC  '&MF(3)'    SET XVARIABLE                           00059200
.ZG30B        ANOP  ,                                                   00059300
.*-------------------------------------------------------------------   00059400
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00059500
              AIF   (K'&ZXMFATTR LE 0).ZG30P    NOT I/O                 00059600
              AIF   ('&XMFATTR'(1,1) NE '(').ZG30P                      00059700
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00059800
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00059900
&ZMS          SETC  '&ZMS.&MF"'                                         00060000
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00060100
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                   00060200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00060300
.ZG30P        ANOP  ,                                                   00060400
.*-------------------------------------------------------------------   00060500
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00060600
              AIF   (K'&ZXMFATTR LE 0).ZG30S    NOT I/O                 00060700
              AIF   (K'&XMFATTR LE 60).ZG30S    LNG OK                  00060800
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00060900
&ZMS          SETC  '"MF='      *KLNGA* MNOTE                           00061000
&ZMS          SETC  '&ZMS.&MF"'                                         00061100
&ZMS          SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'               00061200
              MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                  00061300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00061400
.ZG30S        ANOP  ,                                                   00061500
.*-------------------------------------------------------------------   00061600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00061700
.ZG32         ANOP  ,                                                   00061800
&ZTLC         SETC 'E'                                                  00061900
              AIF   ('&MF(1)' NE '&ZTLC').ZG40                          00062000
&XMF          SETC  'E'         SET KEYWORD                             00062100
              AIF   (N'&MF LE 3).ZG32A          CK NUM                  00062200
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00062300
&ZMS          SETC  '&ZMS.&MF"'                                         00062400
&ZMS          SETC  '&ZMS "MF"'                                         00062500
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00062600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00062700
.ZG32A        ANOP  ,                                                   00062800
.*-------------------------------------------------------------------   00062900
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00063000
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00063100
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00063200
              AIF   (N'&MF(2) GT 1).ZG34B       MULTI PARMS             00063300
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00063400
.ZG34B        AIF   (K'&MF(2) GT 0).ZG34C                               00063500
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00063600
&ZMS          SETC  'WHEN "E" IS SPECIFIED'     *KRQDA*                 00063700
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00063800
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00063900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00064000
.ZG34C        ANOP  ,                                                   00064100
.*-------------------------------------------------------------------   00064200
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00064300
              AIF   (K'&ZXMFCTRL LE 0).ZG34R    NOT I/O                 00064400
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG34R                      00064500
&ZCGPR        SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                          00064600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG34P                        00064700
              AIF   (K'&ZCGPR GT 2).ZG34Q                               00064800
              AIF   ('&ZCGPR' EQ '0').ZG34Q                             00064900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00065000
              AIF   (T'&ZCGPR NE 'N').ZG34Q     INVALID REG NAME        00065100
.ZG34P        ANOP  ,                                                   00065200
              AIF   (T'&ZCGPR NE 'N').ZG34R     NON NUMERIC             00065300
              AIF   ('&ZCGPR' LT '2').ZG34Q                             00065400
              AIF   ('&ZCGPR' LE '12').ZG34R                            00065500
.ZG34Q        ANOP  ,                                                   00065600
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00065700
&ZMS          SETC  '&ZMS.&MF"'                                         00065800
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'           00065900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00066000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00066100
.ZG34R        ANOP  ,                                                   00066200
.*-------------------------------------------------------------------   00066300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00066400
&XMFSCK       SETC  ''          INITIALIZE XVARIABLE                    00066500
.ZG38A   AIF   ('&MF(3)' NE 'COMPLETE').ZG39A                           00066600
&XMFSCK       SETC  'COMPLETE'  SET KEYWORD                             00066700
.*-------------------------------------------------------------------   00066800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00066900
.ZG39A        AIF   (K'&XMFSCK GT 0).ZG39C      KEYWORD                 00067000
              AIF   (K'&MF(3) LE 0).ZG39B                               00067100
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           00067200
&ZMS          SETC  '&ZMS.&MF"'                                         00067300
&ZMS          SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '           00067400
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00067500
              MNOTE 8,' &ZMS "COMPLETE".'                               00067600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00067700
.ZG39B        ANOP  ,                                                   00067800
&XMFSCK       SETC  'COMPLETE'  SET DEFAULT KEYWORD                     00067900
.ZG39C        ANOP  ,                                                   00068000
&ZXMFSCK      SETC  'INPUT'     SET IN/OUTPUT                           00068100
.*------------------------------------------------------------------    00068200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00068300
.ZG40         ANOP  ,                                                   00068400
&ZXMF         SETC  'INPUT'     SET IN/OUTPUT                           00068500
              AIF   (K'&XMF GT 0).ZG40E         VALID ARG               00068600
              AIF   (T'&MF EQ 'O').ZG40D        OMITTED                 00068700
&ZASYSLNDX    SETA  0                                                   00068800
.ZG40A        ANOP  ,           POSITIONAL MACRO KEY                    00068900
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        00069000
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG40C                    00069100
&ZTLC         SETC 'MF'                                                 00069200
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG40A           00069300
.ZG40B        ANOP  ,                                                   00069400
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00069500
&ZMS          SETC  'THE "MF" KEY'              *KOPTA* MNOTE           00069600
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             00069700
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    00069800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00069900
              AGO   .ZG40E                                              00070000
.ZG40C        ANOP  ,                                                   00070100
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00070200
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           00070300
&ZMS          SETC  '&ZMS.&MF"'                                         00070400
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00070500
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00070600
&ZMS          SETC  '&ZMS "S",'                 VALID KEYWORD           00070700
&ZMS          SETC  '&ZMS "L",'                 VALID KEYWORD           00070800
              MNOTE 8,' &ZMS OR "E".'                                   00070900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00071000
              AGO   .ZG40E                                              00071100
.ZG40D        ANOP  ,                                                   00071200
&XMF          SETC  'S'         SET DEFAULT KEYWORD                     00071300
&XMFSCK       SETC  'COMPLETE'  COMPLETE CHECKING                       00071400
.ZG40E        ANOP  ,                                                   00071500
.********************************************************************   00071600
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00071700
.********************************************************************   00071800
              ACTR  10000                                               00071900
.*-------------------------------------------------------------------   00072000
.***AG.MF03 MF=(SLE)                                                    00072100
              AIF   ('&XMF' EQ 'L').ZGMFX                               00072200
.*----------------------------------------------------------------***   00072300
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00072400
&XMEDDNAME    SETC  ''          INITIALIZE XVARIABLE                    00072500
              AIF   (K'&DDNAME LE 0).ZG2C                               00072600
&ZXMEDDNAME   SETC  'INPUT'     SET IN/OUTPUT                           00072700
&XMEDDNAME    SETC  'DDNAME'    SET XVARIABLE                           00072800
&ZXDDNAME     SETC  'INPUT'     SET IN/OUTPUT                           00072900
&XDDNAME      SETC  '&DDNAME(1)'                SET XVARIABLE PARM      00073000
              AIF   (N'&DDNAME GT 1).ZG2A       MULTIPLE PARMS          00073100
&XDDNAME      SETC  '&DDNAME'   SET XVARIABLE PARM                      00073200
.ZG2A         AIF   (N'&DDNAME LE 1).ZG2B       CK NUM                  00073300
&ZMS          SETC  '"DDNAME='  *KPOSA* MNOTE                           00073400
&ZMS          SETC  '&ZMS.&DDNAME"'                                     00073500
&ZMS          SETC  '&ZMS "DDNAME"'                                     00073600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00073700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00073800
.ZG2B         AIF   (K'&XDDNAME GT 0).ZG2C      ONE PARM                00073900
&ZXMEDDNAME   SETC  ''          RESET IN/OUTPUT                         00074000
&ZXDDNAME     SETC  ''          RESET IN/OUTPUT                         00074100
&ZMS          SETC  ' '         *KRQDA*                                 00074200
&ZMS          SETC  '&ZMS "DDNAME" KEY AND ITS ARGUMENT'                00074300
              MNOTE 8,' &ZMS ARE REQUIRED.'                             00074400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00074500
.ZG2C         ANOP  ,                                                   00074600
.*----------------------------------------------------------------***   00074700
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00074800
              AIF   (K'&MAJNLST LE 0).ZG3D      NO ME KEY               00074900
              AIF   (N'&MAJNLST LE 1).ZG3A      CK NUM                  00075000
&ZMS          SETC  '"MAJNLST='                 *KPOSA* MNOTE           00075100
&ZMS          SETC  '&ZMS.&MAJNLST"'                                    00075200
&ZMS          SETC  '&ZMS "MAJNLST"'                                    00075300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00075400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00075500
.ZG3A         AIF   (K'&XMEDDNAME LE 0).ZG3B                            00075600
&ZMS          SETC  '"MAJNLST'  *KMEKA* MNOTE                           00075700
&ZMS          SETC  '&ZMS.=&MAJNLST"'                                   00075800
&ZMS          SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'               00075900
&ZMS          SETC  '&ZMS "&XMEDDNAME"'                                 00076000
              MNOTE 8,' &ZMS KEY.'                                      00076100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00076200
              AGO   .ZG3D                                               00076300
.*                                                                      00076400
.ZG3B         ANOP  ,                                                   00076500
&ZXMEDDNAME   SETC  'INPUT'     SET IN/OUTPUT                           00076600
&XMEDDNAME    SETC  'MAJNLST'   SET XVARIABLE                           00076700
&ZXMAJNLST    SETC  'INPUT'     SET IN/OUTPUT                           00076800
&XMAJNLST     SETC  '&MAJNLST(1)'               SET XVARIABLE PARM      00076900
              AIF   (N'&MAJNLST GT 1).ZG3C      MULTIPLE PARMS          00077000
&XMAJNLST     SETC  '&MAJNLST'  SET XVARIABLE PARM                      00077100
.ZG3C         AIF   (K'&XMAJNLST GT 0).ZG3D     ONE PARM                00077200
&ZXMEDDNAME   SETC  ''          RESET IN/OUTPUT                         00077300
&ZXMAJNLST    SETC  ''          RESET IN/OUTPUT                         00077400
&ZMS          SETC  ' '         *KRQDA*                                 00077500
&ZMS          SETC  '&ZMS "MAJNLST" KEY AND ITS ARGUMENT'               00077600
              MNOTE 8,' &ZMS ARE REQUIRED.'                             00077700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00077800
.ZG3D         ANOP  ,                                                   00077900
.*------------------------------------------------------------------    00078000
.***AG.KMEKY09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00078100
              AIF   (K'&XMEDDNAME GT 0).ZG4B                            00078200
&ZXMEDDNAME   SETC  ''          RESET IN/OUTPUT                         00078300
&ZXDDNAME     SETC  ''          RESET IN/OUTPUT                         00078400
&XMEDDNAME    SETC  ''          ENSURE NULL                             00078500
&XDDNAME      SETC  ''          ENSURE NULL                             00078600
&ZMS          SETC  'ONE OF THE FOLLOWING'      *KMERA* MNOTE           00078700
&ZMS          SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'                 00078800
&ZMS          SETC  '&ZMS REQUIRED:'                                    00078900
&ZMS          SETC  '&ZMS "XDDNAME"'            VALID ME KEY            00079000
              MNOTE 8,' &ZMS OR "XMAJNLST".'                            00079100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00079200
.ZG4B         ANOP  ,                                                   00079300
.*-------------------------------------------------------------------   00079400
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00079500
.ZG2          AIF   ('&XMEDDNAME' NE 'DDNAME').ZG3                      00079600
.*-------------------------------------------------------------------   00079700
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00079800
              AIF   (K'&ZXDDNAME LE 0).ZG2R     NOT I/O                 00079900
              AIF   ('&XDDNAME'(1,1) NE '(').ZG2R                       00080000
&ZCGPR        SETC  '&XDDNAME'(2,K'&XDDNAME-2)                          00080100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                         00080200
              AIF   (K'&ZCGPR GT 2).ZG2Q                                00080300
              AIF   ('&ZCGPR' EQ '0').ZG2Q                              00080400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00080500
              AIF   (T'&ZCGPR NE 'N').ZG2Q      INVALID REG NAME        00080600
.ZG2P         ANOP  ,                                                   00080700
              AIF   (T'&ZCGPR NE 'N').ZG2R      NON NUMERIC             00080800
              AIF   ('&ZCGPR' LT '2').ZG2Q                              00080900
              AIF   ('&ZCGPR' LE '12').ZG2R                             00081000
.ZG2Q         ANOP  ,                                                   00081100
&ZMS          SETC  '"DDNAME='  *KGPRA* MNOTE                           00081200
&ZMS          SETC  '&ZMS.&DDNAME"'                                     00081300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00081400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00081500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00081600
.ZG2R         ANOP  ,                                                   00081700
.*-------------------------------------------------------------------   00081800
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00081900
.ZG3          AIF   ('&XMEDDNAME' NE 'MAJNLST').ZG4                     00082000
.*-------------------------------------------------------------------   00082100
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00082200
              AIF   (K'&ZXMAJNLST LE 0).ZG3R    NOT I/O                 00082300
              AIF   ('&XMAJNLST'(1,1) NE '(').ZG3R                      00082400
&ZCGPR        SETC  '&XMAJNLST'(2,K'&XMAJNLST-2)                        00082500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG3P                         00082600
              AIF   (K'&ZCGPR GT 2).ZG3Q                                00082700
              AIF   ('&ZCGPR' EQ '0').ZG3Q                              00082800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00082900
              AIF   (T'&ZCGPR NE 'N').ZG3Q      INVALID REG NAME        00083000
.ZG3P         ANOP  ,                                                   00083100
              AIF   (T'&ZCGPR NE 'N').ZG3R      NON NUMERIC             00083200
              AIF   ('&ZCGPR' LT '2').ZG3Q                              00083300
              AIF   ('&ZCGPR' LE '12').ZG3R                             00083400
.ZG3Q         ANOP  ,                                                   00083500
&ZMS          SETC  '"MAJNLST='                 *KGPRA* MNOTE           00083600
&ZMS          SETC  '&ZMS.&MAJNLST"'                                    00083700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00083800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00083900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00084000
.ZG3R         ANOP  ,                                                   00084100
.*-------------------------------------------------------------------   00084200
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00084300
.ZG4          ANOP  ,           END MUTUALLY EXCLUSIVE KEYS             00084400
.*----------------------------------------------------------------***   00084500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00084600
              AIF   (N'&CLASS LE 1).ZG6A        CK NUM                  00084700
&ZMS          SETC  '"CLASS='   *KPOSA* MNOTE                           00084800
&ZMS          SETC  '&ZMS.&CLASS"'                                      00084900
&ZMS          SETC  '&ZMS "CLASS"'                                      00085000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00085100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00085200
.ZG6A         ANOP  ,                                                   00085300
.*-------------------------------------------------------------------   00085400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00085500
&ZXCLASS      SETC  'INPUT'     SET IN/OUTPUT                           00085600
&XCLASS       SETC  '&CLASS(1)'                 SET XVARIABLE           00085700
              AIF   (N'&CLASS GT 1).ZG6B        MULTI PARMS             00085800
&XCLASS       SETC  '&CLASS'    SET XVARIABLE                           00085900
.ZG6B         AIF   (K'&CLASS(1) GT 0).ZG6C                             00086000
&ZXCLASS      SETC  ''          RESET IN/OUTPUT                         00086100
&ZMS          SETC  ' '         *KRQDA*                                 00086200
&ZMS          SETC  '&ZMS "CLASS" KEY AND ITS ARGUMENT'                 00086300
              MNOTE 8,' &ZMS ARE REQUIRED.'                             00086400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00086500
.ZG6C         ANOP  ,                                                   00086600
.*-------------------------------------------------------------------   00086700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00086800
              AIF   (K'&ZXCLASS LE 0).ZG6R      NOT I/O                 00086900
              AIF   ('&XCLASS'(1,1) NE '(').ZG6R                        00087000
&ZCGPR        SETC  '&XCLASS'(2,K'&XCLASS-2)                            00087100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG6P                         00087200
              AIF   (K'&ZCGPR GT 2).ZG6Q                                00087300
              AIF   ('&ZCGPR' EQ '0').ZG6Q                              00087400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00087500
              AIF   (T'&ZCGPR NE 'N').ZG6Q      INVALID REG NAME        00087600
.ZG6P         ANOP  ,                                                   00087700
              AIF   (T'&ZCGPR NE 'N').ZG6R      NON NUMERIC             00087800
              AIF   ('&ZCGPR' LT '2').ZG6Q                              00087900
              AIF   ('&ZCGPR' LE '12').ZG6R                             00088000
.ZG6Q         ANOP  ,                                                   00088100
&ZMS          SETC  '"CLASS='   *KGPRA* MNOTE                           00088200
&ZMS          SETC  '&ZMS.&CLASS"'                                      00088300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00088400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00088500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00088600
.ZG6R         ANOP  ,                                                   00088700
.*----------------------------------------------------------------***   00088800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00088900
              AIF   (N'&SCOPE LE 1).ZG9A        CK NUM                  00089000
&ZMS          SETC  '"SCOPE='   *KPOSA* MNOTE                           00089100
&ZMS          SETC  '&ZMS.&SCOPE"'                                      00089200
&ZMS          SETC  '&ZMS "SCOPE"'                                      00089300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00089400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00089500
.ZG9A         ANOP  ,                                                   00089600
.*-------------------------------------------------------------------   00089700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00089800
&XSCOPE       SETC  ''          INITIALIZE XVARIABLE                    00089900
.ZG10A   AIF   ('&SCOPE(1)' NE 'HOME').ZG11A                            00090000
&XSCOPE       SETC  'HOME'      SET KEYWORD                             00090100
.*-------------------------------------------------------------------   00090200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00090300
.ZG11A   AIF   ('&SCOPE(1)' NE 'SYSTEM').ZG12A                          00090400
&XSCOPE       SETC  'SYSTEM'    SET KEYWORD                             00090500
.*-------------------------------------------------------------------   00090600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00090700
.ZG12A        AIF   (K'&XSCOPE GT 0).ZG12C      KEYWORD                 00090800
              AIF   (K'&SCOPE(1) LE 0).ZG12B                            00090900
&ZMS          SETC  '"SCOPE='   *KUKWA* MNOTE                           00091000
&ZMS          SETC  '&ZMS.&SCOPE"'                                      00091100
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00091200
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00091300
&ZMS          SETC  '&ZMS "HOME"'               VALID KEYWORD           00091400
              MNOTE 8,' &ZMS OR "SYSTEM".'                              00091500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00091600
.ZG12B        ANOP  ,                                                   00091700
&XSCOPE       SETC  'HOME'      SET DEFAULT KEYWORD                     00091800
.ZG12C        ANOP  ,                                                   00091900
&ZXSCOPE      SETC  'INPUT'     SET IN/OUTPUT                           00092000
.*----------------------------------------------------------------***   00092100
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00092200
              AIF   (N'&UTOKEN LE 1).ZG14A      CK NUM                  00092300
&ZMS          SETC  '"UTOKEN='  *KPOSA* MNOTE                           00092400
&ZMS          SETC  '&ZMS.&UTOKEN"'                                     00092500
&ZMS          SETC  '&ZMS "UTOKEN"'                                     00092600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00092700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00092800
.ZG14A        ANOP  ,                                                   00092900
.*-------------------------------------------------------------------   00093000
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00093100
&ZXUTOKEN     SETC  'OUTPUT'    SET IN/OUTPUT                           00093200
&XUTOKEN      SETC  '&UTOKEN(1)'                SET XVARIABLE           00093300
              AIF   (N'&UTOKEN GT 1).ZG14B      MULTI PARMS             00093400
&XUTOKEN      SETC  '&UTOKEN'   SET XVARIABLE                           00093500
.ZG14B        AIF   (K'&UTOKEN(1) GT 0).ZG14C                           00093600
&ZXUTOKEN     SETC  ''          RESET IN/OUTPUT                         00093700
&ZMS          SETC  ' '         *KRQDA*                                 00093800
&ZMS          SETC  '&ZMS "UTOKEN" KEY AND ITS ARGUMENT'                00093900
              MNOTE 8,' &ZMS ARE REQUIRED.'                             00094000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00094100
.ZG14C        ANOP  ,                                                   00094200
.*-------------------------------------------------------------------   00094300
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00094400
              AIF   (K'&ZXUTOKEN LE 0).ZG14R    NOT I/O                 00094500
              AIF   ('&XUTOKEN'(1,1) NE '(').ZG14R                      00094600
&ZCGPR        SETC  '&XUTOKEN'(2,K'&XUTOKEN-2)                          00094700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                        00094800
              AIF   (K'&ZCGPR GT 2).ZG14Q                               00094900
              AIF   ('&ZCGPR' EQ '0').ZG14Q                             00095000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00095100
              AIF   (T'&ZCGPR NE 'N').ZG14Q     INVALID REG NAME        00095200
.ZG14P        ANOP  ,                                                   00095300
              AIF   (T'&ZCGPR NE 'N').ZG14R     NON NUMERIC             00095400
              AIF   ('&ZCGPR' LT '2').ZG14Q                             00095500
              AIF   ('&ZCGPR' LE '12').ZG14R                            00095600
.ZG14Q        ANOP  ,                                                   00095700
&ZMS          SETC  '"UTOKEN='  *KGPRA* MNOTE                           00095800
&ZMS          SETC  '&ZMS.&UTOKEN"'                                     00095900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00096000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00096100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00096200
.ZG14R        ANOP  ,                                                   00096300
.*----------------------------------------------------------------***   00096400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00096500
              AIF   (N'&RETCODE LE 1).ZG17A     CK NUM                  00096600
&ZMS          SETC  '"RETCODE='                 *KPOSA* MNOTE           00096700
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00096800
&ZMS          SETC  '&ZMS "RETCODE"'                                    00096900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00097000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00097100
.ZG17A        ANOP  ,                                                   00097200
.*-------------------------------------------------------------------   00097300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00097400
              AIF   (K'&RETCODE(1) LE 0).ZG17C  NO PARM                 00097500
&ZXRETCODE    SETC  'OUTPUT'    SET OUTPUT                              00097600
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE           00097700
              AIF   (N'&RETCODE GT 1).ZG17C                             00097800
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                           00097900
.ZG17C        ANOP  ,                                                   00098000
.*-------------------------------------------------------------------   00098100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00098200
              AIF   (K'&ZXRETCODE LE 0).ZG17R   NOT I/O                 00098300
              AIF   ('&XRETCODE'(1,1) NE '(').ZG17R                     00098400
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                        00098500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG17P                        00098600
              AIF   (K'&ZCGPR GT 2).ZG17Q                               00098700
              AIF   ('&ZCGPR' EQ '0').ZG17Q                             00098800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00098900
              AIF   (T'&ZCGPR NE 'N').ZG17Q     INVALID REG NAME        00099000
.ZG17P        ANOP  ,                                                   00099100
              AIF   (T'&ZCGPR NE 'N').ZG17R     NON NUMERIC             00099200
              AIF   ('&ZCGPR' LT '2').ZG17Q                             00099300
              AIF   ('&ZCGPR' LE '12').ZG17R                            00099400
.ZG17Q        ANOP  ,                                                   00099500
&ZMS          SETC  '"RETCODE='                 *KGPRA* MNOTE           00099600
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00099700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00099800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00099900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00100000
.ZG17R        ANOP  ,                                                   00100100
.*----------------------------------------------------------------***   00100200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00100300
              AIF   (N'&RSNCODE LE 1).ZG20A     CK NUM                  00100400
&ZMS          SETC  '"RSNCODE='                 *KPOSA* MNOTE           00100500
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00100600
&ZMS          SETC  '&ZMS "RSNCODE"'                                    00100700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00100800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00100900
.ZG20A        ANOP  ,                                                   00101000
.*-------------------------------------------------------------------   00101100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00101200
              AIF   (K'&RSNCODE(1) LE 0).ZG20C  NO PARM                 00101300
&ZXRSNCODE    SETC  'OUTPUT'    SET OUTPUT                              00101400
&XRSNCODE     SETC  '&RSNCODE(1)'               SET XVARIABLE           00101500
              AIF   (N'&RSNCODE GT 1).ZG20C                             00101600
&XRSNCODE     SETC  '&RSNCODE'  SET XVARIABLE                           00101700
.ZG20C        ANOP  ,                                                   00101800
.*-------------------------------------------------------------------   00101900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00102000
              AIF   (K'&ZXRSNCODE LE 0).ZG20R   NOT I/O                 00102100
              AIF   ('&XRSNCODE'(1,1) NE '(').ZG20R                     00102200
&ZCGPR        SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                        00102300
              AIF   ('&ZCGPR'(1,1) NE '0').ZG20P                        00102400
              AIF   (K'&ZCGPR GT 2).ZG20Q                               00102500
              AIF   ('&ZCGPR' EQ '0').ZG20Q                             00102600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00102700
              AIF   (T'&ZCGPR NE 'N').ZG20Q     INVALID REG NAME        00102800
.ZG20P        ANOP  ,                                                   00102900
              AIF   (T'&ZCGPR NE 'N').ZG20R     NON NUMERIC             00103000
              AIF   ('&ZCGPR' LT '2').ZG20Q                             00103100
              AIF   ('&ZCGPR' LE '12').ZG20R                            00103200
.ZG20Q        ANOP  ,                                                   00103300
&ZMS          SETC  '"RSNCODE='                 *KGPRA* MNOTE           00103400
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00103500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00103600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00103700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00103800
.ZG20R        ANOP  ,                                                   00103900
.******************************************************************     00104000
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00104100
.******************************************************************     00104200
              ACTR  10000                                               00104300
.*----------------------------------------------------------------***   00104400
.***AH.P02 EXTRA POSITIONALS                                            00104500
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS               00104600
&ZCVAL        SETC  ''          ERROR FIELD                             00104700
&ZAWRK        SETA  0           POSITIONAL NUMBER                       00104800
.ZGLIST2      ANOP  ,                                                   00104900
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         00105000
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                00105100
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   00105200
              AGO   .ZGLIST2                                            00105300
.*                                                                      00105400
.ZGLIST3      ANOP  ,                                                   00105500
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             00105600
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'   *PPOSA* MNOTE           00105700
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     00105800
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              00105900
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      00106000
              MNOTE 8,' &ZMS ARE ALLOWED.'                              00106100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00106200
.ZGLISTX      ANOP  ,                                                   00106300
&ZASYSLNDX    SETA  0                                                   00106400
.*-------------------------------------------------------------------   00106500
.***AG.MF04 MF=(SLE)                                                    00106600
.ZGMFX        ANOP  ,           END OF FULL SYNTAX CHECK                00106700
.*******************************************************************    00106800
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00106900
.*******************************************************************    00107000
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          00107100
.*******************************************************************    00107200
.***AE.01  START OF COFIDENT MACRO CODE                                 00107300
.*******************************************************************    00107400
              LCLC  &M0M0001                 LABEL NAME                 00107500
&M0M0001      SETC  '&XLABEL'                SET LABEL                  00107600
              AIF   (K'&XLABEL NE 0).XLAB2                              00107700
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT LABEL              00107800
.*                                                                      00107900
.XLAB2        ANOP  ,                                                   00108000
&M0M0001 DS    0H                             COFIDENT-1                00108100
.*******************************************************************    00108200
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00108300
.*******************************************************************    00108400
              PUSH  PRINT                                               00108500
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          00108600
              PRINT OFF         ++ PR01                                 00108700
              AGO   .ZPRNTXX                                            00108800
.ZPRINTX      PRINT ON                                                  00108900
.ZPRNTXX      ANOP  ,                                                   00109000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00109100
.*-----------BAL macro code-------------                                00109200
         AIF    ('&XMF' EQ 'L').LFORM1                                  00109300
         LA     15,40               .Set VLF not active return code     00109400
         SLR    0,0                 .Clear VLF reason code              00109500
         AIF    ('&SYSASCE' EQ 'P').NOTAR1  Systate Primary             00109600
         SAR    14,0                .Clear the AR                       00109700
.NOTAR1  ANOP                                                           00109800
         L      14,16               .Get CVT addressability             00109900
         L      14,200(14)          .Get SCVT addressability            00110000
         ICM    14,15,156(14)                                           00110100
         BZ     AMGE&SYSNDX         .Bypass if VLF is not active        00110200
         ICM    14,15,8(14)                                             00110300
         BZ     AMGE&SYSNDX         .Bypass if VLF is not active        00110400
         ICM    14,15,12(14)                                            00110500
         BZ     AMGE&SYSNDX         .Bypass if VLF is not active        00110600
         LR     15,14               .Save value around parm list build  00110700
.LFORM1  ANOP                                                           00110800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00110900
.********************************************************************   00111000
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00111100
.********************************************************************   00111200
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00111300
                      LCLA  &ZOPN1         INVOCATION INDEX             00111400
                      LCLC  &ZOPL(4095)    LABEL                        00111500
                      LCLC  &ZOPO(4095)    OPERATION                    00111600
                      LCLC  &ZOPV(4095)    VALUE                        00111700
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00111800
.*                                                                      00111900
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00112000
.******************************************************************     00112100
.***AL.L10 COFIDENT FMT=LIST MF=S|L PARAMETERS                          00112200
.******************************************************************     00112300
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00112400
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00112500
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(2,3).'A'                     00112600
&XMFATTR              SETC  '0D'                                        00112700
.*                                                                      00112800
&ZOPN                 SETA  &ZOPN+1                                     00112900
&ZOPL(&ZOPN)          SETC  ' '                                         00113000
&ZOPO(&ZOPN)          SETC  'B'                                         00113100
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00113200
&ZOPD(&ZOPN)          SETC  '++ COFIDENT ARG PARMS'                     00113300
.*                                                                      00113400
&ZOPN                 SETA  &ZOPN+1                                     00113500
&ZOPL(&ZOPN)          SETC  ' '                                         00113600
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00113700
&ZOPV(&ZOPN)          SETC  '1'                                         00113800
&ZOPD(&ZOPN)          SETC  ' '                                         00113900
.*                                                                      00114000
.ZLMFSL2              ANOP  ,                                           00114100
.*-------------------------------------------------------------------   00114200
.***AM.L01  COFIDENT FMT=LIST PARAMETERS                                00114300
&ZOPN                 SETA &ZOPN+1                                      00114400
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00114500
&ZOPO(&ZOPN)          SETC 'DS'                                         00114600
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00114700
&ZOPD(&ZOPN)          SETC '++ COFIDENT PARM LIST'                      00114800
.*-------------------------------------------------------------------   00114900
.***AM.L02 XVERSION XL1                                                 00115000
&ZOPN                 SETA &ZOPN+1                                      00115100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00115200
&ZOPO(&ZOPN)          SETC 'DS'                                         00115300
&ZOPV(&ZOPN)          SETC 'XL1'                                        00115400
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00115500
.*-------------------------------------------------------------------   00115600
.***AM.L09  XRSV01 CL1                                                  00115700
&ZOPN                 SETA &ZOPN+1                                      00115800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV01'                           00115900
&ZOPO(&ZOPN)          SETC 'DS'                                         00116000
&ZOPV(&ZOPN)          SETC 'CL1'                                        00116100
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV01'                        00116200
.*-------------------------------------------------------------------   00116300
.***AM.L03 XFLAGS BL.8                                                  00116400
&ZOPN                 SETA &ZOPN+1                                      00116500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS'                           00116600
&ZOPO(&ZOPN)          SETC 'DS'                                         00116700
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00116800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00116900
.*                                                                      00117000
&ZOPN                 SETA  &ZOPN+1                                     00117100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_DDNAME'                  00117200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00117300
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00117400
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00117500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DDNAME'                       00117600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00117700
.*                                                                      00117800
&ZOPN                 SETA  &ZOPN+1                                     00117900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_MAJNLST'                 00118000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00118100
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00118200
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00118300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MAJNLST'                      00118400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00118500
.*                                                                      00118600
&ZOPN                 SETA  &ZOPN+1                                     00118700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSCOPE_SYSTEM'                   00118800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00118900
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00119000
&ZOPD(&ZOPN)          SETC  '++ XSCOPE.'                                00119100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYSTEM'                       00119200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00119300
.*                                                                      00119400
&ZOPN                 SETA  &ZOPN+1                                     00119500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSCOPE_HOME'                     00119600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00119700
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00119800
&ZOPD(&ZOPN)          SETC  '++ XSCOPE.'                                00119900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).HOME'                         00120000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00120100
.*-------------------------------------------------------------------   00120200
.***AM.L09  XRSV02 CL1                                                  00120300
&ZOPN                 SETA &ZOPN+1                                      00120400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV02'                           00120500
&ZOPO(&ZOPN)          SETC 'DS'                                         00120600
&ZOPV(&ZOPN)          SETC 'CL1'                                        00120700
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV02'                        00120800
.*-------------------------------------------------------------------   00120900
.***AM.L09  XRSV03 CL4                                                  00121000
&ZOPN                 SETA &ZOPN+1                                      00121100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV03'                           00121200
&ZOPO(&ZOPN)          SETC 'DS'                                         00121300
&ZOPV(&ZOPN)          SETC 'CL4'                                        00121400
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV03'                        00121500
.*-------------------------------------------------------------------   00121600
.***AM.L09  XDDNAME CL8                                                 00121700
&ZOPN                 SETA &ZOPN+1                                      00121800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDDNAME'                          00121900
&ZOPO(&ZOPN)          SETC 'DS'                                         00122000
&ZOPV(&ZOPN)          SETC 'CL8'                                        00122100
&ZOPD(&ZOPN)          SETC '++ &ZXDDNAME  XDDNAME'                      00122200
.*-------------------------------------------------------------------   00122300
.***AM.L09  XMAJNLST A                                                  00122400
&ZOPN                 SETA &ZOPN+1                                      00122500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMAJNLST'                         00122600
&ZOPO(&ZOPN)          SETC 'DS'                                         00122700
&ZOPV(&ZOPN)          SETC 'A'                                          00122800
&ZOPD(&ZOPN)          SETC '++ &ZXMAJNLST  XMAJNLST'                    00122900
.*-------------------------------------------------------------------   00123000
.***AM.L09 ALET XMAJNLST F                                              00123100
&ZOPN                 SETA &ZOPN+1                                      00123200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMAJNLST_ALET'                    00123300
&ZOPO(&ZOPN)          SETC 'DS'                                         00123400
&ZOPV(&ZOPN)          SETC 'F'                                          00123500
&ZOPD(&ZOPN)          SETC '++ &ZXMAJNLST ALET XMAJNLST'                00123600
.*-------------------------------------------------------------------   00123700
.***AM.L09  XCLASS CL7                                                  00123800
&ZOPN                 SETA &ZOPN+1                                      00123900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCLASS'                           00124000
&ZOPO(&ZOPN)          SETC 'DS'                                         00124100
&ZOPV(&ZOPN)          SETC 'CL7'                                        00124200
&ZOPD(&ZOPN)          SETC '++ &ZXCLASS  XCLASS'                        00124300
.*-------------------------------------------------------------------   00124400
.***AM.L09  XRSV04 CL1                                                  00124500
&ZOPN                 SETA &ZOPN+1                                      00124600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV04'                           00124700
&ZOPO(&ZOPN)          SETC 'DS'                                         00124800
&ZOPV(&ZOPN)          SETC 'CL1'                                        00124900
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV04'                        00125000
.*-------------------------------------------------------------------   00125100
.***AM.L09  XUTOKEN CL16                                                00125200
&ZOPN                 SETA &ZOPN+1                                      00125300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUTOKEN'                          00125400
&ZOPO(&ZOPN)          SETC 'DS'                                         00125500
&ZOPV(&ZOPN)          SETC 'CL16'                                       00125600
&ZOPD(&ZOPN)          SETC '++ &ZXUTOKEN  XUTOKEN'                      00125700
.*-------------------------------------------------------------------   00125800
.***AM.L10 END OF COFIDENT LIST PARAMETERS                              00125900
&ZOPN                 SETA &ZOPN+1                                      00126000
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00126100
&ZOPO(&ZOPN)          SETC 'EQU'                                        00126200
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00126300
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00126400
.*                                                                      00126500
&ZOPN                 SETA &ZOPN+1                                      00126600
&ZOPL(&ZOPN)          SETC ' '                                          00126700
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00126800
&ZOPV(&ZOPN)          SETC '1'                                          00126900
&ZOPD(&ZOPN)          SETC ' '                                          00127000
.*-------------------------------------------------------------------   00127100
.***AL.L12 COFIDENT FMT=LIST MF=S|L PARAMETERS                          00127200
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00127300
.*                                                                      00127400
&ZOPN                 SETA  &ZOPN+1                                     00127500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00127600
&ZOPO(&ZOPN)          SETC  'DC'                                        00127700
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00127800
&ZOPD(&ZOPN)          SETC  '++ COFIDENT ARG PARMS'                     00127900
.*                                                                      00128000
.ZLMFSLX              ANOP  ,                                           00128100
.*-------------------------------------------------------------------   00128200
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00128300
&ZPLLEN               SETA 48                                           00128400
.*                                                                      00128500
.******************************************************************     00128600
.***AI.L01 COFIDENT FMT=LIST FILL IN PARAMETER AREA                     00128700
.******************************************************************     00128800
                      ACTR  10000                                       00128900
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00129000
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00129100
&ZCVAL                SETC  'LAE'          XAX MODE                     00129200
.ZIMFXA               ANOP ,                                            00129300
.*                                                                      00129400
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00129500
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00129600
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00129700
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00129800
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00129900
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00130000
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00130100
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00130200
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00130300
&ZOPN                 SETA  &ZOPN+1                                     00130400
&ZOPL(&ZOPN)          SETC  ' '                                         00130500
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00130600
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00130700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00130800
                      AGO   .ZIMFNX                                     00130900
.*                                                                      00131000
.ZIMFN2               ANOP ,                                            00131100
&ZOPN                 SETA  &ZOPN+1                                     00131200
&ZOPL(&ZOPN)          SETC  ' '                                         00131300
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00131400
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00131500
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00131600
.ZIMFNX               ANOP ,                                            00131700
.********************************************************************   00131800
.***AI.L02 COFIDENT FMT=LIST INITIALIZE PARAMETER AREA                  00131900
.********************************************************************   00132000
.***AI.L03 MF=(SLE)                                                     00132100
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00132200
.*                                                                      00132300
&ZOPN                 SETA  &ZOPN+1                                     00132400
&ZOPL(&ZOPN)          SETC  ' '                                         00132500
&ZOPO(&ZOPN)          SETC  'XC'                                        00132600
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00132700
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00132800
.ZIMFLX               ANOP  ,                                           00132900
.*-------------------------------------------------------------------   00133000
.***AI.L04A XVERSION XL1                                                00133100
&ZOPN                 SETA  &ZOPN+1                                     00133200
&ZOPL(&ZOPN)          SETC  ' '                                         00133300
&ZOPO(&ZOPN)          SETC  'MVI'                                       00133400
&ZOPV(&ZOPN)          SETC  '0(1),1'                                    00133500
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00133600
.*-------------------------------------------------------------------   00133700
.***AI.L05 XFLAGS BL1                                                   00133800
&ZW                   SETC  ''                                          00133900
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00134000
.*-------------------------------------------------------------------   00134100
.***AI.L08 XFLAGS "DDNAME"                                              00134200
.***      BL1'1XXXXXXX'                                                 00134300
         AIF   ('&DDNAME' EQ '').ZI4A                                   00134400
&ZW                   SETC  '&ZW.1'                                     00134500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00134600
                      AGO   .ZI4C                                       00134700
.*                                                                      00134800
.ZI4A                 ANOP  ,                                           00134900
&ZW                   SETC  '&ZW.0'                                     00135000
.ZI4C                 ANOP  ,                                           00135100
.*-------------------------------------------------------------------   00135200
.***AI.L08 XFLAGS "MAJNLST"                                             00135300
.***      BL1'X1XXXXXX'                                                 00135400
         AIF   ('&MAJNLST' EQ '').ZI5A                                  00135500
&ZW                   SETC  '&ZW.1'                                     00135600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00135700
                      AGO   .ZI5C                                       00135800
.*                                                                      00135900
.ZI5A                 ANOP  ,                                           00136000
&ZW                   SETC  '&ZW.0'                                     00136100
.ZI5C                 ANOP  ,                                           00136200
.*-------------------------------------------------------------------   00136300
.***AI.L08 XFLAGS "SYSTEM"                                              00136400
.***      BL1'XXXXXX1X'                                                 00136500
         AIF   ('&XSCOPE' NE 'SYSTEM').ZI6A                             00136600
&ZW                   SETC  '&ZW.00001'                                 00136700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00136800
                      AGO   .ZI6C                                       00136900
.*                                                                      00137000
.ZI6A                 ANOP  ,                                           00137100
&ZW                   SETC  '&ZW.00000'                                 00137200
.ZI6C                 ANOP  ,                                           00137300
.*-------------------------------------------------------------------   00137400
.***AI.L08 XFLAGS "HOME"                                                00137500
.***      BL1'XXXXXXX1'                                                 00137600
         AIF   ('&XSCOPE' NE 'HOME').ZI7A                               00137700
&ZW                   SETC  '&ZW.1'                                     00137800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00137900
                      AGO   .ZI7C                                       00138000
.*                                                                      00138100
.ZI7A                 ANOP  ,                                           00138200
&ZW                   SETC  '&ZW.0'                                     00138300
.ZI7C                 ANOP  ,                                           00138400
.*-------------------------------------------------------------------   00138500
.***AI.L11 XFLAGS BL1                                                   00138600
                      AIF   ('&ZCLNG' NE 'YES').ZI7E  ALL ZERO BITS     00138700
&ZOPN                 SETA  &ZOPN+1                                     00138800
&ZOPL(&ZOPN)          SETC  ' '                                         00138900
&ZOPO(&ZOPN)          SETC  'OI'                                        00139000
&ZOPV(&ZOPN)          SETC  '2(1),B''&ZW'''                             00139100
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00139200
.ZI7E                 ANOP  ,                                           00139300
.*-------------------------------------------------------------------   00139400
.***AI.L25  XDDNAME CL8                                                 00139500
                      AIF   ('&ZXDDNAME' EQ '').ZI10E  NOT USED         00139600
                      AIF   ('&ZXDDNAME' EQ 'OUTPUT').ZI10E             00139700
&ZCGPR                SETC  '&XDDNAME'                                  00139800
.*                                                                      00139900
                      AIF   ('&XDDNAME'(1,1) NE '(').ZI10B              00140000
&ZCGPR   SETC  '0('.'&XDDNAME'(2,K'&XDDNAME-2).')'                      00140100
.ZI10B                ANOP  ,                                           00140200
.*                                                                      00140300
&ZOPN                 SETA  &ZOPN+1                                     00140400
&ZOPL(&ZOPN)          SETC  ' '                                         00140500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00140600
&ZOPV(&ZOPN)          SETC  '8(8,1),&ZCGPR'                             00140700
&ZOPD(&ZOPN)          SETC  '++ &ZXDDNAME XDDNAME CL8'                  00140800
.*                                                                      00140900
.ZI10E                ANOP  ,                                           00141000
.*-------------------------------------------------------------------   00141100
.***AI.L19  XMAJNLST A                                                  00141200
                      AIF   ('&ZXMAJNLST' EQ '').ZI11H  NOT USED        00141300
&ZCLNG                SETC  '&XMAJNLST'                                 00141400
&ZCGPR                SETC  '14'                                        00141500
         AIF   ('&XMAJNLST'(1,1) EQ '(').ZI11F  IN GPR                  00141600
.*                                                                      00141700
&ZOPN                 SETA  &ZOPN+1                                     00141800
&ZOPL(&ZOPN)          SETC  ' '                                         00141900
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00142000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00142100
&ZOPD(&ZOPN)          SETC  '++ &ZXMAJNLST XMAJNLST A'                  00142200
.*                                                                      00142300
                      AGO   .ZI11G                                      00142400
.*                                                                      00142500
.ZI11F                ANOP  ,                                           00142600
&ZCGPR   SETC  '&XMAJNLST'(2,K'&XMAJNLST-2)                             00142700
.*                                                                      00142800
.ZI11G                ANOP  ,                                           00142900
.*                                                                      00143000
&ZOPN                 SETA  &ZOPN+1                                     00143100
&ZOPL(&ZOPN)          SETC  ' '                                         00143200
&ZOPO(&ZOPN)          SETC  'ST'                                        00143300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,16(,1)'                             00143400
&ZOPD(&ZOPN)          SETC  '++ &ZXMAJNLST XMAJNLST A'                  00143500
.*                                                                      00143600
.ZI11H                ANOP  ,                                           00143700
.*-------------------------------------------------------------------   00143800
.***AI.L23 ALET XMAJNLST F                                              00143900
         AIF   ('&ZXMAJNLST' EQ '').ZI12G  NOT USED                     00144000
         AIF   ('&SYSASCE' EQ 'P').ZI12G   SYSSTATE PRIMARY             00144100
&ZCLNG                SETC  '&XMAJNLST'                                 00144200
         AIF   ('&XMAJNLST'(1,1) EQ '(').ZI12E  IN AR                   00144300
.*                                                                      00144400
&ZCGPR                SETC  '14'                                        00144500
                      AGO   .ZI12F                                      00144600
.*                                                                      00144700
.ZI12E                ANOP  ,                                           00144800
&ZCGPR   SETC  '&XMAJNLST'(2,K'&XMAJNLST-2)                             00144900
.*                                                                      00145000
.ZI12F                ANOP  ,                                           00145100
.*                                                                      00145200
&ZOPN                 SETA  &ZOPN+1                                     00145300
&ZOPL(&ZOPN)          SETC  ' '                                         00145400
&ZOPO(&ZOPN)          SETC  'STAM'                                      00145500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,20(1)'                       00145600
&ZOPD(&ZOPN)          SETC  '++ &ZXMAJNLST XMAJNLST F'                  00145700
.*                                                                      00145800
.ZI12G                ANOP  ,                                           00145900
.*-------------------------------------------------------------------   00146000
.***AI.L25  XCLASS CL7                                                  00146100
                      AIF   ('&ZXCLASS' EQ '').ZI13E  NOT USED          00146200
                      AIF   ('&ZXCLASS' EQ 'OUTPUT').ZI13E              00146300
&ZCGPR                SETC  '&XCLASS'                                   00146400
.*                                                                      00146500
                      AIF   ('&XCLASS'(1,1) NE '(').ZI13B               00146600
&ZCGPR   SETC  '0('.'&XCLASS'(2,K'&XCLASS-2).')'                        00146700
.ZI13B                ANOP  ,                                           00146800
.*                                                                      00146900
&ZOPN                 SETA  &ZOPN+1                                     00147000
&ZOPL(&ZOPN)          SETC  ' '                                         00147100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00147200
&ZOPV(&ZOPN)          SETC  '24(7,1),&ZCGPR'                            00147300
&ZOPD(&ZOPN)          SETC  '++ &ZXCLASS XCLASS CL7'                    00147400
.*                                                                      00147500
.ZI13E                ANOP  ,                                           00147600
.*-------------------------------------------------------------------   00147700
&ZOPN1                SETA &ZOPN                                        00147800
.*******************************************************************    00147900
.***  PROCESS COFIDENT OUTPUT PARAMETERS                                00148000
.*******************************************************************    00148100
                      ACTR  10000                                       00148200
.*------------------------------------------------------------------    00148300
.***AO.L02 XUTOKEN CL16                                                 00148400
         AIF   ('&ZXUTOKEN' EQ 'OUTPUT').ZO15A  OUTPUT                  00148500
         AIF   ('&ZXUTOKEN' NE 'INOUT').ZO15C  INOUT                    00148600
.ZO15A    AIF   ('&XUTOKEN'(1,1) NE '(').ZO15B  ADDR IN GPR             00148700
&ZCGPR   SETC  '&XUTOKEN'(2,K'&XUTOKEN-2)                               00148800
&ZOPN                 SETA  &ZOPN+1                                     00148900
&ZOPL(&ZOPN)          SETC  ' '                                         00149000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00149100
&ZOPV(&ZOPN)          SETC  '0(16,&ZCGPR),32(1)'                        00149200
&ZOPD(&ZOPN)          SETC  '++ XUTOKEN CL16'                           00149300
                      AGO   .ZO15C                                      00149400
.*                                                                      00149500
.ZO15B                ANOP  ,                                           00149600
&ZAWRK   SETA  K'&XUTOKEN                                               00149700
         AIF   ('&XUTOKEN'(&ZAWRK,1) NE ')').ZO15G                      00149800
&ZN      SETA  2                                                        00149900
.ZO15H    ANOP                                                          00150000
         AIF   (&ZN GE &ZAWRK).ZO15G                                    00150100
         AIF   ('&XUTOKEN'(&ZN,1) NE '(').ZO15I                         00150200
&ZC      SETC  '&XUTOKEN'(1,&ZN).'16'.','                               00150300
&ZC      SETC  '&ZC'.'&XUTOKEN'(&ZN+1,&ZAWRK-&ZN).',32(1)'              00150400
         AGO   .ZO15J                                                   00150500
.ZO15I    ANOP                                                          00150600
&ZN      SETA  &ZN+1                                                    00150700
         AGO   .ZO15H                                                   00150800
.ZO15G    ANOP                                                          00150900
&ZC      SETC  '&XUTOKEN.(16),32(1)'                                    00151000
.ZO15J    ANOP                                                          00151100
&ZOPN                 SETA  &ZOPN+1                                     00151200
&ZOPL(&ZOPN)          SETC  ' '                                         00151300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00151400
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00151500
&ZOPD(&ZOPN)          SETC  '++ XUTOKEN CL16'                           00151600
.ZO15C                ANOP  ,                                           00151700
.*******************************************************************    00151800
.***AO.X01  LABEL TO BYPASS INVOCATION                                  00151900
.*******************************************************************    00152000
&ZOPN                 SETA  &ZOPN+1                                     00152100
&ZOPL(&ZOPN)          SETC  'AMGE&SYSNDX'                               00152200
&ZOPO(&ZOPN)          SETC  'DS'                                        00152300
&ZOPV(&ZOPN)          SETC  '0H'                                        00152400
&ZOPD(&ZOPN)          SETC  '++ BYPASS INVOCATION'                      00152500
.*******************************************************************    00152600
.***AO.X02  RETURN CODE PROCESSING                                      00152700
.*******************************************************************    00152800
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00152900
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00153000
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00153100
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00153200
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00153300
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00153400
&ZOPN                 SETA  &ZOPN+1                                     00153500
&ZOPL(&ZOPN)          SETC  ' '                                         00153600
&ZOPO(&ZOPN)          SETC  'ST'                                        00153700
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00153800
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00153900
                      AGO   .ZMRETX                                     00154000
.*                                                                      00154100
.ZMRET2               ANOP  ,                                           00154200
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00154300
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00154400
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00154500
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00154600
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00154700
&ZOPN                 SETA  &ZOPN+1                                     00154800
&ZOPL(&ZOPN)          SETC  ' '                                         00154900
&ZOPO(&ZOPN)          SETC  'LR'                                        00155000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00155100
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00155200
.ZMRETX               ANOP  ,                                           00155300
.*******************************************************************    00155400
.***AO.X03  REASON CODE PROCESSING                                      00155500
.*******************************************************************    00155600
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00155700
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00155800
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00155900
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00156000
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00156100
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00156200
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00156300
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00156400
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00156500
&ZOPN                 SETA  &ZOPN+1                                     00156600
&ZOPL(&ZOPN)          SETC  ' '                                         00156700
&ZOPO(&ZOPN)          SETC  'ST'                                        00156800
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00156900
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00157000
                      AGO   .ZMRSNX                                     00157100
.*                                                                      00157200
.ZMRSN2               ANOP  ,                                           00157300
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00157400
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00157500
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00157600
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00157700
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00157800
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00157900
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00158000
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00158100
&ZOPN                 SETA  &ZOPN+1                                     00158200
&ZOPL(&ZOPN)          SETC  ' '                                         00158300
&ZOPO(&ZOPN)          SETC  'LR'                                        00158400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00158500
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00158600
.ZMRSNX               ANOP  ,                                           00158700
.*******************************************************************    00158800
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00158900
.*******************************************************************    00159000
.ZMFLX                ANOP  ,              MF=L PROCESSING              00159100
.*******************************************************************    00159200
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00159300
.*******************************************************************    00159400
                      ACTR  10000                                       00159500
.*                                                                      00159600
                      LCLA  &ZLC           COLUMN POSITION              00159700
                      LCLA  &ZOPX          LIST TABLE INDEX             00159800
                      LCLC  &ZLL           LABEL                        00159900
                      LCLC  &ZLOP          OPERATION                    00160000
                      LCLC  &ZLV           VALUE                        00160100
                      LCLC  &ZLD           DESCRIPTION                  00160200
.*                                                                      00160300
&ZOPX                 SETA  1                                           00160400
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00160500
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00160600
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00160700
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00160800
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00160900
                      AIF   (K'&ZLD LE 0).ZL5                           00161000
&ZLC                  SETA  35             COMMENT COLUMN               00161100
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00161200
&ZLC                  SETA  33             COMMMENT COLUMN              00161300
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00161400
&ZLV                  SETC  '&ZLV'.' '                                  00161500
                      AGO   .ZL3                                        00161600
.*                                                                      00161700
.ZL4                  ANOP  ,                                           00161800
&ZLV                  SETC  '&ZLV'.' '                                  00161900
.ZL5                  ANOP  ,                                           00162000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00162100
.*                                                                      00162200
&ZLL     &ZLOP &ZLV                                                     00162300
.*                                                                      00162400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00162500
                      AGO   .ZL2           CONTINUE LOOPING             00162600
.*                                                                      00162700
.ZLX                  ANOP  ,                                           00162800
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00162900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00163000
         AIF    ('&XMF' EQ 'L').LFORM2                                  00163100
         PC     0(15)               .PC to COFMIDEN                     00163200
.LFORM2  ANOP                                                           00163300
.*-----------BAL macro code-------------                                00163400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00163500
.ZLINKX               ANOP  ,                                           00163600
.*******************************************************************    00163700
.***AP.X01  FORMAT GENERATED CODE                                       00163800
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00163900
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00164000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00164100
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00164200
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00164300
                      AIF   (K'&ZLD LE 0).ZL51                          00164400
&ZLC                  SETA  35             COMMENT COLUMN               00164500
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00164600
&ZLC                  SETA  33             COMMENT COLUMN               00164700
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00164800
&ZLV                  SETC  '&ZLV'.' '                                  00164900
                      AGO   .ZL31                                       00165000
.*                                                                      00165100
.ZL41                 ANOP  ,                                           00165200
&ZLV                  SETC  '&ZLV'.' '                                  00165300
.ZL51                 ANOP  ,                                           00165400
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00165500
.*                                                                      00165600
&ZLL     &ZLOP &ZLV                                                     00165700
.*                                                                      00165800
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00165900
                      AGO   .ZL21          CONTINUE LOOPING             00166000
.*                                                                      00166100
.ZLX1                 ANOP  ,                                           00166200
.*******************************************************************    00166300
.***AP.X02  END OF COFIDENT MACRO                                       00166400
&ZCOFIDENT            SETC  'YES'          SET COFIDENT USED            00166500
         POP   PRINT                                                    00166600
*                                            COFIDENT-1                 00166700
         SPACE 1                                                        00166800
.ZLX2                 ANOP  ,                                           00166900
         MEND                                                           00167000
**********************************************************************/ 00167100
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00167200
*%COFIDENT: MACRO KEYS(DDNAME,MAJNLST,CLASS,SCOPE,UTOKEN,RETCODE,       00167300
*                 RSNCODE,MF);                                          00167400
*  ANS('?'||MACLABEL||' '||'COFIDENP '||MACLIST||                       00167500
*         ' '||MACKEYS||';') COL(MACLMAR);                              00167600
*%END COFIDENT;                                                         00167700
