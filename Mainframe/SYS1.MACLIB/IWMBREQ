*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMBREQ                               -02/04/97-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  WLM Batch Initiator Request Service           * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5645-001 (C) COPYRIGHT IBM CORP. 1997                           * 00001300
*                                                                     * 00001400
* STATUS= JBB6604                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*01* FUNCTION:                                                        * 00001900
*                                                                     * 00002000
*                                                                     * 00002100
*      The IWMBREQ service requests WLM to start a demand batch       * 00002200
*      initiator on the system where this service is invoked.  The    * 00002300
*      initiator will attempt to select the job specified by          * 00002400
*      JOBTOKEN=.                                                     * 00002500
*                                                                     * 00002600
*01* EXTERNAL CLASSIFICATION:  NONE                                   * 00002700
*                                                                     * 00002800
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00002900
*                                                                     * 00003000
*01* ENVIRONMENT:                                                     * 00003100
*                                                                     * 00003200
*                                                                     * 00003300
*      Minimum authorization: Supervisor state or program key mask    * 00003400
*                        (PKM) allowing keys 0-7.                     * 00003500
*                                                                     * 00003600
*      Dispatchable unit mode: Task mode.                             * 00003700
*                                                                     * 00003800
*      Cross Memory Mode: PASN=HASN=SASN.                             * 00003900
*                                                                     * 00004000
*      AMODE:            31-bit.                                      * 00004100
*                                                                     * 00004200
*      ASC mode:         Primary.                                     * 00004300
*                                                                     * 00004400
*      Interrupt status: Enabled for I/O and external interrupts.     * 00004500
*                                                                     * 00004600
*      Locks:            No locks held.                               * 00004700
*                                                                     * 00004800
*      Control parameters: Control parameters must be in the primary  * 00004900
*                        address space.                               * 00005000
*                                                                     * 00005100
*                                                                     * 00005200
*                                                                     * 00005300
*01* PROGRAMMING REQUIREMENTS:                                        * 00005400
*                                                                     * 00005500
*                                                                     * 00005600
*    1.  The macro CVT must be included to use this macro.            * 00005700
*                                                                     * 00005800
*    2.  The macro IWMYCON must be included to use this macro.        * 00005900
*                                                                     * 00006000
*    3.  The macro IWMPB must be in the library concatenation, since  * 00006100
*        it is included by IWMYCON.                                   * 00006200
*                                                                     * 00006300
*    4.  Note that the high order halfword of register 0, and the     * 00006400
*        reason code variable when specified, may be non-zero and     * 00006500
*        represents diagnostic data which is NOT part of the external * 00006600
*        interface.  The high order halfword should thus be excluded  * 00006700
*        from comparison with the reason code values described above. * 00006800
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00006900
*        be used for this purpose.                                    * 00007000
*                                                                     * 00007100
*    5.  The address space from which this service is invoked must    * 00007200
*        have previously registered a batch job queue using the token * 00007300
*        specified on QTOKEN=.                                        * 00007400
*                                                                     * 00007500
*    6.  The caller must provide serialization so that the IWMDISC    * 00007600
*        service cannot be issued in parallel with this service.      * 00007700
*                                                                     * 00007800
*                                                                     * 00007900
*                                                                     * 00008000
*01* RESTRICTIONS:                                                    * 00008100
*                                                                     * 00008200
*                                                                     * 00008300
*    1.  This macro may not be used prior to the completion of WLM    * 00008400
*        address space initialization.                                * 00008500
*                                                                     * 00008600
*    2.  This macro may only be used on MVS/ESA JBB6604 or higher.    * 00008700
*                                                                     * 00008800
*                                                                     * 00008900
*                                                                     * 00009000
*01* INPUT REGISTER INFORMATION:                                      * 00009100
*                                                                     * 00009200
*    Before issuing the IWMBREQ macro, the caller does not have to    * 00009300
*    place any information into any register unless using it in       * 00009400
*    register notation for a particular parameter, or using it as a   * 00009500
*    base register.                                                   * 00009600
*                                                                     * 00009700
*01* OUTPUT REGISTER INFORMATION:                                     * 00009800
*                                                                     * 00009900
*    When control returns to the caller, the GPRs contain:            * 00010000
*                                                                     * 00010100
*                                                                     * 00010200
*    REGISTER  CONTENTS                                               * 00010300
*                                                                     * 00010400
*    0         Reason code if GR15 return code is non-zero            * 00010500
*                                                                     * 00010600
*    1         Used as work registers by the system                   * 00010700
*                                                                     * 00010800
*    2-13      Unchanged                                              * 00010900
*                                                                     * 00011000
*    14        Used as work registers by the system                   * 00011100
*                                                                     * 00011200
*    15        Return code                                            * 00011300
*                                                                     * 00011400
*                                                                     * 00011500
*                                                                     * 00011600
*    When control returns to the caller, the ARs contain:             * 00011700
*                                                                     * 00011800
*                                                                     * 00011900
*    REGISTER  CONTENTS                                               * 00012000
*                                                                     * 00012100
*    0-1       Used as work registers by the system                   * 00012200
*                                                                     * 00012300
*    2-13      Unchanged                                              * 00012400
*                                                                     * 00012500
*    14-15     Used as work registers by the system                   * 00012600
*                                                                     * 00012700
*                                                                     * 00012800
*                                                                     * 00012900
*    Some callers depend on register contents remaining the same      * 00013000
*    before and after issuing a service.  If the system changes the   * 00013100
*    contents of registers on which the caller depends, the caller    * 00013200
*    must save them before issuing the service, and restore them      * 00013300
*    after the system returns control.                                * 00013400
*                                                                     * 00013500
*01* PERFORMANCE IMPLICATIONS:                                        * 00013600
*                                                                     * 00013700
*    None                                                             * 00013800
*                                                                     * 00013900
*01* SYNTAX:                                                          * 00014000
*                                                                     * 00014100
*[xlabel]  IWMBREQ     JOBTOKEN=xjobtoken                             * 00014200
*                     ,QTOKEN=xqtoken                                 * 00014300
*                    [,RETCODE=xretcode]                              * 00014400
*                    [,RSNCODE=xrsncode]                              * 00014500
*                    [,PLISTVER=xplistver|IMPLIED_VERSION]          * 00014600
*                   [,MF=S]                                          * 00014700
*                   [,MF=(L,xmfctrl,xmfattr|0D)]                   * 00014800
*                   [,MF=(E,xmfctrl,COMPLETE)]                     * 00014900
*                                                                     * 00015000
*                                                                     * 00015100
*      Where:                                                         * 00015200
*                                                                     * 00015300
*                                                                     * 00015400
*      [xlabel]                                                       * 00015500
*          is an optional symbol, starting in column 1, that is the   * 00015600
*          name on the IWMBREQ macro invocation.  The name must       * 00015700
*          conform to the rules for an ordinary assembler language    * 00015800
*          symbol.                                                    * 00015900
*          DEFAULT: No name.                                          * 00016000
*                                                                     * 00016100
*                                                                     * 00016200
*                                                                     * 00016300
*                                                                     * 00016400
*      JOBTOKEN=xjobtoken                                             * 00016500
*          is the name (RS-type), or address in register (2)-(12), of * 00016600
*          a required 8 character input which contains a unique JES   * 00016700
*          job token for the demand batch job to be run.  A demand    * 00016800
*          batch initiator will pass this job token back to JES       * 00016900
*          through the job select SSI when it's ready to run the job. * 00017000
*                                                                     * 00017100
*                                                                     * 00017200
*                                                                     * 00017300
*                                                                     * 00017400
*      QTOKEN=xqtoken                                                 * 00017500
*          is the name (RS-type), or address in register (2)-(12), of * 00017600
*          a required 16 character input which identifies the batch   * 00017700
*          job queue where the demand batch job is currently queued.  * 00017800
*                                                                     * 00017900
*                                                                     * 00018000
*                                                                     * 00018100
*                                                                     * 00018200
*      [RETCODE=xretcode]                                             * 00018300
*          is the name (RS-type) of an optional fullword output       * 00018400
*          variable, or register (2)-(12), into which the return code * 00018500
*          is to be copied from GPR 15.                               * 00018600
*                                                                     * 00018700
*                                                                     * 00018800
*                                                                     * 00018900
*                                                                     * 00019000
*      [RSNCODE=xrsncode]                                             * 00019100
*          is the name (RS-type) of an optional fullword output       * 00019200
*          variable, or register (2)-(12), into which the reason code * 00019300
*          is to be copied from GPR 0.                                * 00019400
*                                                                     * 00019500
*                                                                     * 00019600
*                                                                     * 00019700
*                                                                     * 00019800
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00019900
*          is an optional byte input decimal value in the "0-0" range * 00020000
*          that specifies the macro version.  PLISTVER is the only    * 00020100
*          key allowed on the list form of MF and determines which    * 00020200
*          parameter list is generated.  Note that MAX may be         * 00020300
*          specified instead of a number, and the parameter list will * 00020400
*          be of the largest size currently supported. This size may  * 00020500
*          grow from release to release (thus possibly affecting the  * 00020600
*          amount of storage needed by your program).  If your        * 00020700
*          program can tolerate this, IBM recommends that you always  * 00020800
*          specify MAX when creating the list form parameter list as  * 00020900
*          that will ensure that the list form parameter list is      * 00021000
*          always long enough to hold whatever parameters might be    * 00021100
*          specified on the execute form.                             * 00021200
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00021300
*          default is the lowest version which allows all of the      * 00021400
*          parameters specified on the invocation to be processed.    * 00021500
*                                                                     * 00021600
*                                                                     * 00021700
*                                                                     * 00021800
*                                                                     * 00021900
*      [MF=S|L|E]                                                   * 00022000
*          is an optional keyword input which specifies the macro     * 00022100
*          form.                                                      * 00022200
*          DEFAULT: S                                                 * 00022300
*                                                                     * 00022400
*                                                                     * 00022500
*          [MF=S]                                                     * 00022600
*              specifies the standard form of the macro.  The "S"     * 00022700
*              form generates code to put the parameters into an      * 00022800
*              in-line parameter list and invoke the desired service. * 00022900
*              Full checking for required macro keys is done along    * 00023000
*              with supplying defaults for omitted optional           * 00023100
*              parameters.                                            * 00023200
*                                                                     * 00023300
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00023400
*              specifies the list form of the macro.  The "L" form    * 00023500
*              defines an area to be used for the parameter list.     * 00023600
*              Only the PLISTVER key may be specified on the          * 00023700
*              invocation.  All other macro parameters are flagged as * 00023800
*              errors.  If PLISTVER is not specified, the original    * 00023900
*              parameter list definition is used.                     * 00024000
*                                                                     * 00024100
*            ,xmfctrl                                                 * 00024200
*              is a required input.  It is the name of a storage area * 00024300
*              for the parameter list.                                * 00024400
*                                                                     * 00024500
*            ,xmfattr|0D                                            * 00024600
*              is an optional 60 character input string that varies   * 00024700
*              from 1 to 60 characters. Use it to force boundary      * 00024800
*              alignment of the parameter list. Use any value that    * 00024900
*              represents a boundary and is valid on an assembler DS  * 00025000
*              pseudo op.                                             * 00025100
*              DEFAULT: 0D which forces the parameter list to a       * 00025200
*              doubleword boundary.                                   * 00025300
*                                                                     * 00025400
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00025500
*              specifies the execute form of the macro.  The "E" form * 00025600
*              generates code to put the parameters into the          * 00025700
*              parameter list specified by xmfctrl and provides full  * 00025800
*              syntax checking with default setting.                  * 00025900
*                                                                     * 00026000
*            ,xmfctrl                                                 * 00026100
*              is a required input.  It is the name (RS-type), or     * 00026200
*              address in register (1)-(12), of a storage area for    * 00026300
*              the parameter list.                                    * 00026400
*                                                                     * 00026500
*            ,COMPLETE                                              * 00026600
*              is an optional keyword input which specifies the       * 00026700
*              degree of macro parameter syntax checking.             * 00026800
*              DEFAULT: COMPLETE                                      * 00026900
*                                                                     * 00027000
*                                                                     * 00027100
*              COMPLETE                                               * 00027200
*                  Checking for required macro keys is done and       * 00027300
*                  defaults are supplied for omitted optional         * 00027400
*                  parameters.                                        * 00027500
*                                                                     * 00027600
*                                                                     * 00027700
*                                                                     * 00027800
*                                                                     * 00027900
*                                                                     * 00028000
*                                                                     * 00028100
*                                                                     * 00028200
*01* ABEND CODES:  None.                                              * 00028300
*                                                                     * 00028400
*01* RETURN CODES:                                                    * 00028500
*                                                                     * 00028600
*                                                                     * 00028700
*            0    Name: IwmRetCodeOk                                  * 00028800
*                                                                     * 00028900
*                 Meaning: Successful completion.                     * 00029000
*                                                                     * 00029100
*                 Action: None required.                              * 00029200
*                                                                     * 00029300
*                                                                     * 00029400
*            8    Name: IwmRetCodeInvocError                          * 00029500
*                                                                     * 00029600
*                 Meaning: Invalid invocation environment or          * 00029700
*                 parameters.                                         * 00029800
*                                                                     * 00029900
*                                                                     * 00030000
*                                                                     * 00030100
*                 HEX REASON  MEANING/ACTION                          * 00030200
*                 CODE                                                * 00030300
*                                                                     * 00030400
*                 xxxx080B    Name: IwmRsnCodeBadPl                   * 00030500
*                                                                     * 00030600
*                             Meaning: Error accessing parameter      * 00030700
*                             list.                                   * 00030800
*                                                                     * 00030900
*                             Action: Check for possible storage      * 00031000
*                             overlay.                                * 00031100
*                                                                     * 00031200
*                 xxxx0827    Name: IwmRsnCodeRsvdNot0                * 00031300
*                                                                     * 00031400
*                             Meaning: Reserved field in parameter    * 00031500
*                             list was non-zero.                      * 00031600
*                                                                     * 00031700
*                             Action: Check for possible storage      * 00031800
*                             overlay of the parameter list.          * 00031900
*                                                                     * 00032000
*                 xxxx0828    Name: IwmRsnCodeBadVersion              * 00032100
*                                                                     * 00032200
*                             Meaning: Version number in parameter    * 00032300
*                             list is not valid.                      * 00032400
*                                                                     * 00032500
*                             Action: Check for possible storage      * 00032600
*                             overlay of the parameter list.          * 00032700
*                                                                     * 00032800
*                 xxxx0840    Name: IwmRsnCodeServiceNotEnabled       * 00032900
*                                                                     * 00033000
*                             Meaning: Caller's space connection is   * 00033100
*                             not enabled for this service.           * 00033200
*                                                                     * 00033300
*                             Action: The caller must register a      * 00033400
*                             batch job queue before requesting this  * 00033500
*                             service.                                * 00033600
*                                                                     * 00033700
*                 xxxx0842    Name: IwmRsnCodeNoWLMConnect            * 00033800
*                                                                     * 00033900
*                             Meaning: Caller's space is not          * 00034000
*                             connected to WLM.                       * 00034100
*                                                                     * 00034200
*                             Action:  Invoke the IWMCONN macro       * 00034300
*                             before invoking this macro.             * 00034400
*                                                                     * 00034500
*                 xxxx0861    Name: IwmRsnCodeQueueNotDefined         * 00034600
*                                                                     * 00034700
*                             Meaning: Input queue (QTOKEN=) is not   * 00034800
*                             defined to WLM                          * 00034900
*                                                                     * 00035000
*                             Action: Verify that the input queue     * 00035100
*                             token is correct and retry.             * 00035200
*                                                                     * 00035300
*                                                                     * 00035400
*                                                                     * 00035500
*                                                                     * 00035600
*                                                                     * 00035700
*            C    Name: IwmRetCodeEnvError                            * 00035800
*                                                                     * 00035900
*                 Meaning: Environmental error.                       * 00036000
*                                                                     * 00036100
*                                                                     * 00036200
*                                                                     * 00036300
*                 HEX REASON  MEANING/ACTION                          * 00036400
*                 CODE                                                * 00036500
*                                                                     * 00036600
*                 xxxx0C01    Name: IwmRsnCodeNoStg                   * 00036700
*                                                                     * 00036800
*                             Meaning: Storage is not available for   * 00036900
*                             the request.                            * 00037000
*                                                                     * 00037100
*                             Action: Caller must disconnect by       * 00037200
*                             invoking the IWMDISC macro.             * 00037300
*                                                                     * 00037400
*                 xxxx0C2E    Name: IwmRsnCodeWrongMode               * 00037500
*                                                                     * 00037600
*                             Meaning: This function is not available * 00037700
*                             in the current WLM system mode.         * 00037800
*                                                                     * 00037900
*                                                                     * 00038000
*                                                                     * 00038100
*                                                                     * 00038200
*            10   Name: IwmRetCodeCompError                           * 00038300
*                                                                     * 00038400
*                 Meaning: Component error.                           * 00038500
*                                                                     * 00038600
*                 Action: Contact your system programmer.             * 00038700
*                                                                     * 00038800
*                                                                     * 00038900
*                                                                     * 00039000
*                                                                     * 00039100
*01* REASON CODES:                                                    * 00039200
*                                                                     * 00039300
*       A unique reason code will be returned whenever the return     * 00039400
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00039500
*       under their corresponding return code.  Reason code and       * 00039600
*       return code constants are defined within IWMYCON.  Note that  * 00039700
*       the high order halfword of register 0, and the reason code    * 00039800
*       variable when specified, may be non-zero and represents       * 00039900
*       diagnostic data which is NOT part of the external interface.  * 00040000
*       The high order halfword should thus be excluded from          * 00040100
*       comparison with the reason code values described above.  The  * 00040200
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00040300
*       used for this purpose.                                        * 00040400
*                                                                     * 00040500
*01* MODULE TYPE:  ASSEM MACRO                                        * 00040600
*                                                                     * 00040700
*02*   PROCESSOR:  ASSEM                                              * 00040800
*                                                                     * 00040900
*01* COMPONENT:  SCWLM                                                * 00041000
*                                                                     * 00041100
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00041200
*                                                                     * 00041300
*01* EXAMPLES:                                                        * 00041400
*                                                                     * 00041500
*    To request a demand batch initiator;                             * 00041600
*                                                                     * 00041700
*               IWMBREQ  JOBTOKEN=JOBTOKEN,QTOKEN=QTOKEN,             * 00041800
*                     RETCODE=RC,RSNCODE=RSN                          * 00041900
*      *                                                              * 00042000
*      * Storage areas                                                * 00042100
*      *                                                              * 00042200
*      JOBTOKEN  DS   CL8             Contains a syspex unique JES    * 00042300
*      *                              job token of a demand batch job * 00042400
*      .                                                              * 00042500
*      QTOKEN    DS   CL16            Contains the JES batch job queu * 00042600
*      e                                                              * 00042700
*      *                              token where the demand batch    * 00042800
*      *                              job is currently queued.        * 00042900
*      RC       DS    F               Return code                     * 00043000
*      RSN      DS    F               Reason code                     * 00043100
*                                                                     * 00043200
*                                                                     * 00043300
*01* MACRO USAGE NOTES:                                               * 00043400
*                                                                     * 00043500
*                                                                     * 00043600
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00043700
*        global macro variable.  Any value other than 'NO' will       * 00043800
*        result in the macro expansion being printed.  The default is * 00043900
*        'YES'.  The following examples illustrate how the ZPRINT     * 00044000
*        variable should be set.                                      * 00044100
*                                                                     * 00044200
*                    GBLC &ZPRINT                                     * 00044300
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00044400
*                                                                     * 00044500
*                                                                     * 00044600
*    2.  All keys currently contained in the IWMBREQ macro correspond * 00044700
*        to  version 0.  If you specify PLISTVER, use a value of 0 or * 00044800
*        MAX.                                                         * 00044900
*                                                                     * 00045000
*                                                                     * 00045100
*                                                                     * 00045200
*                                                                     * 00045300
*01* CHANGE ACTIVITY:                                                 * 00045400
*                                                                     * 00045500
*   Flag LineItem  FMID    Date   ID    Comment                       * 00045600
*                                                                     * 00045700
*    $L0=WLMP     JBB6604 960826 B9HADB:  Batch Initiator Management  * 00045800
****** END OF SPECIFICATIONS *****************************************/ 00045900
*/* TLINE 1 *********************************************************** 00046000
         MACRO                                                          00046100
&XLABEL  IWMBREQ &JOBTOKEN=,&QTOKEN=,&RETCODE=,&RSNCODE=,&PLISTVER=,   *00046200
               &MF=                                                     00046300
.*                                                                      00046400
*              MACDATE -02/04/97-<0>                                    00046500
.*                                                                      00046600
.*******************************************************************    00046700
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00046800
.*******************************************************************    00046900
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   00047000
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     00047100
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             00047200
.*                                                                      00047300
              GBLC  &ZIWMBREQ   YES=MACRO USED AT LEAST ONCE            00047400
.*******************************************************************    00047500
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00047600
.*******************************************************************    00047700
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 00047800
              LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS            00047900
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              00048000
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             00048100
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             00048200
              LCLA  &ZAWRK      USED AS A WORK AREA                     00048300
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  00048400
              LCLA  &ZN         NUMERIC WORK VARIABLE                   00048500
              LCLC  &ZC         CHARACTER WORK VARIABLE                 00048600
              LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE             00048700
              LCLA  &ZTLA       VALUE TOO LONG VARIABLE                 00048800
              LCLA  &ZMACRET    MACRO RETURN CODE                       00048900
&ZMACRET      SETA  0           ASSUME NO ERRORS                        00049000
.*                                                                      00049100
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      00049200
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              00049300
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   00049400
              LCLC  &ZENDBASEPL                 End of base PL          00049500
              LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                   00049600
.*******************************************************************    00049700
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00049800
.*******************************************************************    00049900
              LCLA  &ZI         INDEX FOR ARRAY                         00050000
              LCLA  &ZJ         INDEX FOR PARMS                         00050100
              LCLA  &ZK         INDEX FOR PARSE                         00050200
              LCLA  &ZLO        LOW RANGE VALUE                         00050300
              LCLA  &ZHI        HIGH RANGE VALUE                        00050400
              LCLC  &ZW         WORK AREA FOR PARM                      00050500
.********************************************************************   00050600
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00050700
.********************************************************************   00050800
              GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                 00050900
              GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE          00051000
.*                                                                      00051100
              AIF   (K'&SYSASCE GT 0).ZSYS4     SYS STATE DEFINED       00051200
              AIF   (K'&SYSSPLV GT 0).ZSYS2     SP LEVEL DEFINED        00051300
              SPLEVEL  TEST                                             00051400
.ZSYS2        ANOP  ,                                                   00051500
              AIF   ('&SYSSPLV' EQ '1').ZSYS3   PRE SP 3.1              00051600
              AIF   ('&SYSSPLV' EQ '2').ZSYS3   PRE SP 3.1              00051700
              SYSSTATE TEST                                             00051800
              AGO   .ZSYS4                                              00051900
.ZSYS3        ANOP  ,                                                   00052000
&SYSASCE      SETC  'P'         ASSUME SYSSTATE PRIMARY                 00052100
.ZSYS4        ANOP  ,                                                   00052200
.*******************************************************************    00052300
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00052400
.*******************************************************************    00052500
              LCLC  &XJOBTOKEN  ++ NAME                                 00052600
              LCLC  &XQTOKEN    ++ NAME                                 00052700
              LCLC  &XRETCODE   ++ NAME                                 00052800
              LCLC  &XRSNCODE   ++ NAME                                 00052900
              LCLA  &XPLISTVER  ++ VALUE                                00053000
              LCLC  &XMF        ++ VALUE                                00053100
              LCLC  &XMFCTRL    ++ NAME                                 00053200
              LCLC  &XMFATTR    ++ VALUE                                00053300
              LCLC  &XMFSCK     ++ VALUE                                00053400
.*******************************************************************    00053500
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00053600
.*******************************************************************    00053700
              LCLC  &ZXJOBTOKEN                 ++ INPUT NAME           00053800
              LCLC  &ZXQTOKEN   ++ INPUT NAME                           00053900
              LCLC  &ZXRETCODE  ++ OUTPUT NAME                          00054000
              LCLC  &ZXRSNCODE  ++ OUTPUT NAME                          00054100
              LCLC  &ZXPLISTVER                 ++ INPUT VALUE          00054200
              LCLC  &ZXMF       ++ INPUT VALUE                          00054300
              LCLC  &ZXMFCTRL   ++ INPUT NAME                           00054400
              LCLC  &ZXMFATTR   ++ INPUT VALUE                          00054500
              LCLC  &ZXMFSCK    ++ INPUT VALUE                          00054600
.********************************************************************   00054700
.***AC.PLV01  PROCESS PLISTVER                                      *   00054800
.********************************************************************   00054900
&XPLISTVER      SETA  0                                                 00055000
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00055100
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00055200
&XPLISTVER      SETA  0                                                 00055300
.ZPLV0          ANOP  ,                                                 00055400
.*                                                                      00055500
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00055600
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00055700
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00055800
.*-------------------------------------------------------------------   00055900
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00056000
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00056100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00056200
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00056300
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00056400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00056500
                AGO   .ZPVCK2                                           00056600
.ZPVCK3         ANOP  ,                                                 00056700
.*-------------------------------------------------------------------   00056800
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00056900
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00057000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00057100
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00057200
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00057300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00057400
                AGO   .ZPVCKE                                           00057500
.ZPVCK2         ANOP  ,                                                 00057600
.*-------------------------------------------------------------------   00057700
&ZCVAL          SETC  '&PLISTVER(1)'                                    00057800
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00057900
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00058000
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00058100
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00058200
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00058300
.ZPVCK6         ANOP  ,                                                 00058400
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00058500
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00058600
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00058700
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00058800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00058900
&XPLISTVER      SETA  0                                                 00059000
                AGO   .ZPVCKE                                           00059100
.*-------------------------------------------------------------------   00059200
.ZPVCK4A        ANOP  ,                                                 00059300
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00059400
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00059500
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00059600
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00059700
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00059800
                MNOTE 8,' &ZMS IS REQUIRED.'                            00059900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00060000
                AGO   .ZPVCK5                                           00060100
.ZPVCK4         ANOP  ,                                                 00060200
&XPLISTVER      SETA  &PLISTVER(1)                                      00060300
.ZPVCK5         ANOP  ,                                                 00060400
.ZPVCKE         ANOP  ,                                                 00060500
.********************************************************************   00060600
.***AG.MF01 PROCESS MF MACRO FORMS                                      00060700
.********************************************************************   00060800
              ACTR  10000                                               00060900
.*------------------------------------------------------------------    00061000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00061100
&XMF          SETC  ''          INITIALIZE XVARIABLE                    00061200
.*-------------------------------------------------------------------   00061300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00061400
.ZG18         ANOP  ,                                                   00061500
&ZTLC         SETC 'S'                                                  00061600
              AIF   ('&MF(1)' NE '&ZTLC').ZG19                          00061700
&XMF          SETC  'S'         SET KEYWORD                             00061800
              AIF   (N'&MF LE 1).ZG18A          CK NUM                  00061900
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00062000
&ZMS          SETC  '&ZMS.&MF"'                                         00062100
&ZMS          SETC  '&ZMS "MF"'                                         00062200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00062300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00062400
.ZG18A        ANOP  ,                                                   00062500
.*-------------------------------------------------------------------   00062600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00062700
.ZG19         ANOP  ,                                                   00062800
&ZTLC         SETC 'L'                                                  00062900
              AIF   ('&MF(1)' NE '&ZTLC').ZG26                          00063000
&XMF          SETC  'L'         SET KEYWORD                             00063100
              AIF   (N'&MF LE 3).ZG19A          CK NUM                  00063200
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00063300
&ZMS          SETC  '&ZMS.&MF"'                                         00063400
&ZMS          SETC  '&ZMS "MF"'                                         00063500
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00063600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00063700
.ZG19A        ANOP  ,                                                   00063800
.*-------------------------------------------------------------------   00063900
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00064000
              AIF   (N'&SYSLIST NE 0).ZG19B     POSITIONALS?            00064100
              AIF   ('&JOBTOKEN' NE '').ZG19B   KEYS?                   00064200
              AIF   ('&QTOKEN' NE '').ZG19B     KEYS?                   00064300
              AIF   ('&RETCODE' NE '').ZG19B    KEYS?                   00064400
              AIF   ('&RSNCODE' NE '').ZG19B    KEYS?                   00064500
              AGO    .ZG19C     INVOCATION OKAY                         00064600
.ZG19B        ANOP  ,                                                   00064700
&ZMS          SETC  'THE "L" FORM OF "MF"'      *MFLA* MNOTE            00064800
&ZMS          SETC  '&ZMS CAN ONLY HAVE'                                00064900
&ZMS          SETC  '&ZMS THE "PLISTVER" KEY'                           00065000
              MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'              00065100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00065200
.ZG19C        ANOP  ,                                                   00065300
.*-------------------------------------------------------------------   00065400
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00065500
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00065600
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00065700
              AIF   (N'&MF(2) GT 1).ZG21B       MULTI PARMS             00065800
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00065900
.ZG21B        AIF   (K'&MF(2) GT 0).ZG21C                               00066000
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00066100
&ZMS          SETC  'WHEN "L" IS SPECIFIED'     *KRQDA*                 00066200
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00066300
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00066400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00066500
.ZG21C        ANOP  ,                                                   00066600
.*-------------------------------------------------------------------   00066700
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00066800
              AIF   (K'&ZXMFCTRL LE 0).ZG21P    NOT I/O                 00066900
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG21P                      00067000
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00067100
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00067200
&ZMS          SETC  '&ZMS.&MF"'                                         00067300
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00067400
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                   00067500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00067600
.ZG21P        ANOP  ,                                                   00067700
.*-------------------------------------------------------------------   00067800
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00067900
&ZXMFATTR     SETC  'INPUT'     SET IN/OUTPUT                           00068000
&XMFATTR      SETC  '0D'                                                00068100
              AIF   (K'&MF(3) LE 0).ZG24B       PARM                    00068200
&XMFATTR      SETC  '&MF(3,1)'  SET XVARIABLE                           00068300
              AIF   (N'&MF(3) GT 1).ZG24B       MULTI PARMS             00068400
&XMFATTR      SETC  '&MF(3)'    SET XVARIABLE                           00068500
.ZG24B        ANOP  ,                                                   00068600
.*-------------------------------------------------------------------   00068700
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00068800
              AIF   (K'&ZXMFATTR LE 0).ZG24P    NOT I/O                 00068900
              AIF   ('&XMFATTR'(1,1) NE '(').ZG24P                      00069000
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00069100
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00069200
&ZMS          SETC  '&ZMS.&MF"'                                         00069300
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00069400
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                   00069500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00069600
.ZG24P        ANOP  ,                                                   00069700
.*-------------------------------------------------------------------   00069800
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00069900
              AIF   (K'&ZXMFATTR LE 0).ZG24S    NOT I/O                 00070000
              AIF   (K'&XMFATTR LE 60).ZG24S    LNG OK                  00070100
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00070200
&ZMS          SETC  '"MF='      *KLNGA* MNOTE                           00070300
&ZMS          SETC  '&ZMS.&MF"'                                         00070400
&ZMS          SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'               00070500
              MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                  00070600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00070700
.ZG24S        ANOP  ,                                                   00070800
.*-------------------------------------------------------------------   00070900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00071000
.ZG26         ANOP  ,                                                   00071100
&ZTLC         SETC 'E'                                                  00071200
              AIF   ('&MF(1)' NE '&ZTLC').ZG34                          00071300
&XMF          SETC  'E'         SET KEYWORD                             00071400
              AIF   (N'&MF LE 3).ZG26A          CK NUM                  00071500
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00071600
&ZMS          SETC  '&ZMS.&MF"'                                         00071700
&ZMS          SETC  '&ZMS "MF"'                                         00071800
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00071900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00072000
.ZG26A        ANOP  ,                                                   00072100
.*-------------------------------------------------------------------   00072200
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00072300
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00072400
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00072500
              AIF   (N'&MF(2) GT 1).ZG28B       MULTI PARMS             00072600
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00072700
.ZG28B        AIF   (K'&MF(2) GT 0).ZG28C                               00072800
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00072900
&ZMS          SETC  'WHEN "E" IS SPECIFIED'     *KRQDA*                 00073000
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00073100
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00073200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00073300
.ZG28C        ANOP  ,                                                   00073400
.*-------------------------------------------------------------------   00073500
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00073600
              AIF   (K'&ZXMFCTRL LE 0).ZG28R    NOT I/O                 00073700
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG28R                      00073800
&ZCGPR        SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                          00073900
              AIF   ('&ZCGPR'(1,1) NE '0').ZG28P                        00074000
              AIF   (K'&ZCGPR GT 2).ZG28Q                               00074100
              AIF   ('&ZCGPR' EQ '0').ZG28Q                             00074200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00074300
              AIF   (T'&ZCGPR NE 'N').ZG28Q     INVALID REG NAME        00074400
.ZG28P        ANOP  ,                                                   00074500
              AIF   (T'&ZCGPR NE 'N').ZG28R     NON NUMERIC             00074600
              AIF   ('&ZCGPR' LT '1').ZG28Q                             00074700
              AIF   ('&ZCGPR' LE '12').ZG28R                            00074800
.ZG28Q        ANOP  ,                                                   00074900
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00075000
&ZMS          SETC  '&ZMS.&MF"'                                         00075100
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'           00075200
              MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                    00075300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00075400
.ZG28R        ANOP  ,                                                   00075500
.*-------------------------------------------------------------------   00075600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00075700
&XMFSCK       SETC  ''          INITIALIZE XVARIABLE                    00075800
.ZG32A   AIF   ('&MF(3)' NE 'COMPLETE').ZG33A                           00075900
&XMFSCK       SETC  'COMPLETE'  SET KEYWORD                             00076000
.*-------------------------------------------------------------------   00076100
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00076200
.ZG33A        AIF   (K'&XMFSCK GT 0).ZG33C      KEYWORD                 00076300
              AIF   (K'&MF(3) LE 0).ZG33B                               00076400
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           00076500
&ZMS          SETC  '&ZMS.&MF"'                                         00076600
&ZMS          SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '           00076700
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00076800
&ZMS          SETC  '&ZMS "COMPLETE".'          VALID KEYWORD           00076900
              MNOTE 8,' &ZMS '                                          00077000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00077100
.ZG33B        ANOP  ,                                                   00077200
&XMFSCK       SETC  'COMPLETE'  SET DEFAULT KEYWORD                     00077300
.ZG33C        ANOP  ,                                                   00077400
&ZXMFSCK      SETC  'INPUT'     SET IN/OUTPUT                           00077500
.*------------------------------------------------------------------    00077600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00077700
.ZG34         ANOP  ,                                                   00077800
&ZXMF         SETC  'INPUT'     SET IN/OUTPUT                           00077900
              AIF   (K'&XMF GT 0).ZG34E         VALID ARG               00078000
              AIF   (T'&MF EQ 'O').ZG34D        OMITTED                 00078100
&ZASYSLNDX    SETA  0                                                   00078200
.ZG34A        ANOP  ,           POSITIONAL MACRO KEY                    00078300
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        00078400
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG34C                    00078500
&ZTLC         SETC 'MF'                                                 00078600
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG34A           00078700
.ZG34B        ANOP  ,                                                   00078800
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00078900
&ZMS          SETC  'THE "MF" KEY'              *KOPTA* MNOTE           00079000
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             00079100
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    00079200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00079300
              AGO   .ZG34E                                              00079400
.ZG34C        ANOP  ,                                                   00079500
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00079600
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           00079700
&ZMS          SETC  '&ZMS.&MF"'                                         00079800
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00079900
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00080000
&ZMS          SETC  '&ZMS "S",'                 VALID KEYWORD           00080100
&ZMS          SETC  '&ZMS "L",'                 VALID KEYWORD           00080200
&ZMS          SETC  '&ZMS OR "E".'              VALID KEYWORD           00080300
              MNOTE 8,' &ZMS '                                          00080400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00080500
              AGO   .ZG34E                                              00080600
.ZG34D        ANOP  ,                                                   00080700
&XMF          SETC  'S'         SET DEFAULT KEYWORD                     00080800
&XMFSCK       SETC  'COMPLETE'  COMPLETE CHECKING                       00080900
.ZG34E        ANOP  ,                                                   00081000
.********************************************************************   00081100
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00081200
.********************************************************************   00081300
              ACTR  10000                                               00081400
.*-------------------------------------------------------------------   00081500
.***AG.MF03 MF=(SLE)                                                    00081600
              AIF   ('&XMF' EQ 'L').ZGMFX                               00081700
.*----------------------------------------------------------------***   00081800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00081900
              AIF   (N'&JOBTOKEN LE 1).ZG2A     CK NUM                  00082000
&ZMS          SETC  '"JOBTOKEN='                *KPOSA* MNOTE           00082100
&ZMS          SETC  '&ZMS.&JOBTOKEN"'                                   00082200
&ZMS          SETC  '&ZMS "JOBTOKEN"'                                   00082300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00082400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00082500
.ZG2A         ANOP  ,                                                   00082600
.*-------------------------------------------------------------------   00082700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00082800
&ZXJOBTOKEN   SETC  'INPUT'     SET IN/OUTPUT                           00082900
&XJOBTOKEN    SETC  '&JOBTOKEN(1)'              SET XVARIABLE           00083000
              AIF   (N'&JOBTOKEN GT 1).ZG2B     MULTI PARMS             00083100
&XJOBTOKEN    SETC  '&JOBTOKEN'                 SET XVARIABLE           00083200
.ZG2B         AIF   (K'&JOBTOKEN(1) GT 0).ZG2C                          00083300
&ZXJOBTOKEN   SETC  ''          RESET IN/OUTPUT                         00083400
&ZMS          SETC  ' '         *KRQDA*                                 00083500
&ZMS          SETC  '&ZMS "JOBTOKEN" KEY AND ITS ARGUMENT'              00083600
              MNOTE 8,' &ZMS ARE REQUIRED.'                             00083700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00083800
.ZG2C         ANOP  ,                                                   00083900
.*-------------------------------------------------------------------   00084000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00084100
              AIF   (K'&ZXJOBTOKEN LE 0).ZG2R   NOT I/O                 00084200
              AIF   ('&XJOBTOKEN'(1,1) NE '(').ZG2R                     00084300
&ZCGPR        SETC  '&XJOBTOKEN'(2,K'&XJOBTOKEN-2)                      00084400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                         00084500
              AIF   (K'&ZCGPR GT 2).ZG2Q                                00084600
              AIF   ('&ZCGPR' EQ '0').ZG2Q                              00084700
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00084800
              AIF   (T'&ZCGPR NE 'N').ZG2Q      INVALID REG NAME        00084900
.ZG2P         ANOP  ,                                                   00085000
              AIF   (T'&ZCGPR NE 'N').ZG2R      NON NUMERIC             00085100
              AIF   ('&ZCGPR' LT '2').ZG2Q                              00085200
              AIF   ('&ZCGPR' LE '12').ZG2R                             00085300
.ZG2Q         ANOP  ,                                                   00085400
&ZMS          SETC  '"JOBTOKEN='                *KGPRA* MNOTE           00085500
&ZMS          SETC  '&ZMS.&JOBTOKEN"'                                   00085600
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00085700
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00085800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00085900
.ZG2R         ANOP  ,                                                   00086000
.*----------------------------------------------------------------***   00086100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00086200
              AIF   (N'&QTOKEN LE 1).ZG5A       CK NUM                  00086300
&ZMS          SETC  '"QTOKEN='  *KPOSA* MNOTE                           00086400
&ZMS          SETC  '&ZMS.&QTOKEN"'                                     00086500
&ZMS          SETC  '&ZMS "QTOKEN"'                                     00086600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00086700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00086800
.ZG5A         ANOP  ,                                                   00086900
.*-------------------------------------------------------------------   00087000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00087100
&ZXQTOKEN     SETC  'INPUT'     SET IN/OUTPUT                           00087200
&XQTOKEN      SETC  '&QTOKEN(1)'                SET XVARIABLE           00087300
              AIF   (N'&QTOKEN GT 1).ZG5B       MULTI PARMS             00087400
&XQTOKEN      SETC  '&QTOKEN'   SET XVARIABLE                           00087500
.ZG5B         AIF   (K'&QTOKEN(1) GT 0).ZG5C                            00087600
&ZXQTOKEN     SETC  ''          RESET IN/OUTPUT                         00087700
&ZMS          SETC  ' '         *KRQDA*                                 00087800
&ZMS          SETC  '&ZMS "QTOKEN" KEY AND ITS ARGUMENT'                00087900
              MNOTE 8,' &ZMS ARE REQUIRED.'                             00088000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00088100
.ZG5C         ANOP  ,                                                   00088200
.*-------------------------------------------------------------------   00088300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00088400
              AIF   (K'&ZXQTOKEN LE 0).ZG5R     NOT I/O                 00088500
              AIF   ('&XQTOKEN'(1,1) NE '(').ZG5R                       00088600
&ZCGPR        SETC  '&XQTOKEN'(2,K'&XQTOKEN-2)                          00088700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                         00088800
              AIF   (K'&ZCGPR GT 2).ZG5Q                                00088900
              AIF   ('&ZCGPR' EQ '0').ZG5Q                              00089000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00089100
              AIF   (T'&ZCGPR NE 'N').ZG5Q      INVALID REG NAME        00089200
.ZG5P         ANOP  ,                                                   00089300
              AIF   (T'&ZCGPR NE 'N').ZG5R      NON NUMERIC             00089400
              AIF   ('&ZCGPR' LT '2').ZG5Q                              00089500
              AIF   ('&ZCGPR' LE '12').ZG5R                             00089600
.ZG5Q         ANOP  ,                                                   00089700
&ZMS          SETC  '"QTOKEN='  *KGPRA* MNOTE                           00089800
&ZMS          SETC  '&ZMS.&QTOKEN"'                                     00089900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00090000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00090100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00090200
.ZG5R         ANOP  ,                                                   00090300
.*----------------------------------------------------------------***   00090400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00090500
              AIF   (N'&RETCODE LE 1).ZG8A      CK NUM                  00090600
&ZMS          SETC  '"RETCODE='                 *KPOSA* MNOTE           00090700
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00090800
&ZMS          SETC  '&ZMS "RETCODE"'                                    00090900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00091000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00091100
.ZG8A         ANOP  ,                                                   00091200
.*-------------------------------------------------------------------   00091300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00091400
              AIF   (K'&RETCODE(1) LE 0).ZG8C   NO PARM                 00091500
&ZXRETCODE    SETC  'OUTPUT'    SET OUTPUT                              00091600
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE           00091700
              AIF   (N'&RETCODE GT 1).ZG8C                              00091800
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                           00091900
.ZG8C         ANOP  ,                                                   00092000
.*-------------------------------------------------------------------   00092100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00092200
              AIF   (K'&ZXRETCODE LE 0).ZG8R    NOT I/O                 00092300
              AIF   ('&XRETCODE'(1,1) NE '(').ZG8R                      00092400
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                        00092500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                         00092600
              AIF   (K'&ZCGPR GT 2).ZG8Q                                00092700
              AIF   ('&ZCGPR' EQ '0').ZG8Q                              00092800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00092900
              AIF   (T'&ZCGPR NE 'N').ZG8Q      INVALID REG NAME        00093000
.ZG8P         ANOP  ,                                                   00093100
              AIF   (T'&ZCGPR NE 'N').ZG8R      NON NUMERIC             00093200
              AIF   ('&ZCGPR' LT '2').ZG8Q                              00093300
              AIF   ('&ZCGPR' LE '12').ZG8R                             00093400
.ZG8Q         ANOP  ,                                                   00093500
&ZMS          SETC  '"RETCODE='                 *KGPRA* MNOTE           00093600
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00093700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00093800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00093900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00094000
.ZG8R         ANOP  ,                                                   00094100
.*----------------------------------------------------------------***   00094200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00094300
              AIF   (N'&RSNCODE LE 1).ZG11A     CK NUM                  00094400
&ZMS          SETC  '"RSNCODE='                 *KPOSA* MNOTE           00094500
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00094600
&ZMS          SETC  '&ZMS "RSNCODE"'                                    00094700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00094800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00094900
.ZG11A        ANOP  ,                                                   00095000
.*-------------------------------------------------------------------   00095100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00095200
              AIF   (K'&RSNCODE(1) LE 0).ZG11C  NO PARM                 00095300
&ZXRSNCODE    SETC  'OUTPUT'    SET OUTPUT                              00095400
&XRSNCODE     SETC  '&RSNCODE(1)'               SET XVARIABLE           00095500
              AIF   (N'&RSNCODE GT 1).ZG11C                             00095600
&XRSNCODE     SETC  '&RSNCODE'  SET XVARIABLE                           00095700
.ZG11C        ANOP  ,                                                   00095800
.*-------------------------------------------------------------------   00095900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00096000
              AIF   (K'&ZXRSNCODE LE 0).ZG11R   NOT I/O                 00096100
              AIF   ('&XRSNCODE'(1,1) NE '(').ZG11R                     00096200
&ZCGPR        SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                        00096300
              AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                        00096400
              AIF   (K'&ZCGPR GT 2).ZG11Q                               00096500
              AIF   ('&ZCGPR' EQ '0').ZG11Q                             00096600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00096700
              AIF   (T'&ZCGPR NE 'N').ZG11Q     INVALID REG NAME        00096800
.ZG11P        ANOP  ,                                                   00096900
              AIF   (T'&ZCGPR NE 'N').ZG11R     NON NUMERIC             00097000
              AIF   ('&ZCGPR' LT '2').ZG11Q                             00097100
              AIF   ('&ZCGPR' LE '12').ZG11R                            00097200
.ZG11Q        ANOP  ,                                                   00097300
&ZMS          SETC  '"RSNCODE='                 *KGPRA* MNOTE           00097400
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00097500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00097600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00097700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00097800
.ZG11R        ANOP  ,                                                   00097900
.******************************************************************     00098000
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00098100
.******************************************************************     00098200
              ACTR  10000                                               00098300
.*----------------------------------------------------------------***   00098400
.***AH.P02 EXTRA POSITIONALS                                            00098500
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS               00098600
              AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL                00098700
              AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL            00098800
              AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL             00098900
.ZGLISTX1     ANOP  ,                                                   00099000
&ZCVAL        SETC  ''          ERROR FIELD                             00099100
&ZAWRK        SETA  0           POSITIONAL NUMBER                       00099200
.ZGLIST2      ANOP  ,                                                   00099300
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         00099400
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                00099500
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   00099600
              AGO   .ZGLIST2                                            00099700
.*                                                                      00099800
.ZGLIST3      ANOP  ,                                                   00099900
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             00100000
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'   *PPOSA* MNOTE           00100100
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     00100200
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              00100300
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      00100400
              MNOTE 8,' &ZMS ARE ALLOWED.'                              00100500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00100600
.ZGLISTX      ANOP  ,                                                   00100700
&ZASYSLNDX    SETA  0                                                   00100800
.*-------------------------------------------------------------------   00100900
.***AG.MF04 MF=(SLE)                                                    00101000
.ZGMFX        ANOP  ,           END OF FULL SYNTAX CHECK                00101100
.*******************************************************************    00101200
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00101300
.*******************************************************************    00101400
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          00101500
.*******************************************************************    00101600
.***AE.01  START OF IWMBREQ MACRO CODE                                  00101700
.*******************************************************************    00101800
              LCLC  &M0M0001                 NAME                       00101900
&M0M0001      SETC  '&XLABEL'                SET NAME                   00102000
              AIF   (K'&XLABEL NE 0).XLAB2                              00102100
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT NAME               00102200
.*                                                                      00102300
.XLAB2        ANOP  ,                                                   00102400
              AIF   ('&XMF' EQ 'L').XLAB3                               00102500
&M0M0001 DS    0H                             IWMBREQ-0                 00102600
.XLAB3        ANOP  ,                                                   00102700
.*******************************************************************    00102800
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00102900
.*******************************************************************    00103000
              PUSH  PRINT                                               00103100
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          00103200
              PRINT OFF         ++ PR01                                 00103300
              AGO   .ZPRNTXX                                            00103400
.ZPRINTX      PRINT ON                                                  00103500
.ZPRNTXX      ANOP  ,                                                   00103600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00103700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00103800
.********************************************************************   00103900
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00104000
.********************************************************************   00104100
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00104200
                      LCLA  &ZOPN1         INVOCATION INDEX             00104300
                      LCLC  &ZOPL(4095)    LABEL                        00104400
                      LCLC  &ZOPO(4095)    OPERATION                    00104500
                      LCLC  &ZOPV(4095)    VALUE                        00104600
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00104700
.*                                                                      00104800
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00104900
.******************************************************************     00105000
.***AL.L10 IWMBREQ FMT=LIST MF=S|L PARAMETERS                           00105100
.******************************************************************     00105200
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00105300
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00105400
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00105500
&XMFATTR              SETC  '0D'                                        00105600
.*                                                                      00105700
&ZOPN                 SETA  &ZOPN+1                                     00105800
&ZOPL(&ZOPN)          SETC  ' '                                         00105900
&ZOPO(&ZOPN)          SETC  'B'                                         00106000
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00106100
&ZOPD(&ZOPN)          SETC  '++ IWMBREQ ARG PARMS'                      00106200
.*                                                                      00106300
&ZOPN                 SETA  &ZOPN+1                                     00106400
&ZOPL(&ZOPN)          SETC  ' '                                         00106500
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00106600
&ZOPV(&ZOPN)          SETC  '1'                                         00106700
&ZOPD(&ZOPN)          SETC  ' '                                         00106800
.*                                                                      00106900
.ZLMFSL2              ANOP  ,                                           00107000
.*-------------------------------------------------------------------   00107100
.***AM.L00  IWMBREQ FMT=LIST name                                       00107200
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00107300
&ZOPN                 SETA &ZOPN+1                                      00107400
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00107500
&ZOPO(&ZOPN)          SETC 'EQU'                                        00107600
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00107700
&ZOPD(&ZOPN)          SETC '++ IWMBREQ NAME'                            00107800
.ZLMFSL2M             ANOP  ,                                           00107900
.*-------------------------------------------------------------------   00108000
.***AM.L01  IWMBREQ FMT=LIST PARAMETERS                                 00108100
&ZOPN                 SETA &ZOPN+1                                      00108200
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00108300
&ZOPO(&ZOPN)          SETC 'DS'                                         00108400
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00108500
&ZOPD(&ZOPN)          SETC '++ IWMBREQ PARM LIST'                       00108600
.*-------------------------------------------------------------------   00108700
.***AM.L02 XVERSION XL1                                                 00108800
&ZOPN                 SETA &ZOPN+1                                      00108900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00109000
&ZOPO(&ZOPN)          SETC 'DS'                                         00109100
&ZOPV(&ZOPN)          SETC 'XL1'                                        00109200
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00109300
.*-------------------------------------------------------------------   00109400
.***AM.L09  XRSV0001 CL1                                                00109500
&ZOPN                 SETA &ZOPN+1                                      00109600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00109700
&ZOPO(&ZOPN)          SETC 'DS'                                         00109800
&ZOPV(&ZOPN)          SETC 'CL1'                                        00109900
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0001'                      00110000
.*-------------------------------------------------------------------   00110100
.***AM.L09  XPLISTLEN XL2                                               00110200
&ZOPN                 SETA &ZOPN+1                                      00110300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00110400
&ZOPO(&ZOPN)          SETC 'DS'                                         00110500
&ZOPV(&ZOPN)          SETC 'XL2'                                        00110600
&ZOPD(&ZOPN)          SETC '++ INPUT  XPLISTLEN'                        00110700
.*-------------------------------------------------------------------   00110800
.***AM.L09  XJOBTOKEN CL8                                               00110900
&ZOPN                 SETA &ZOPN+1                                      00111000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XJOBTOKEN'                        00111100
&ZOPO(&ZOPN)          SETC 'DS'                                         00111200
&ZOPV(&ZOPN)          SETC 'CL8'                                        00111300
&ZOPD(&ZOPN)          SETC '++ &ZXJOBTOKEN  XJOBTOKEN'                  00111400
.*-------------------------------------------------------------------   00111500
.***AM.L09  XQTOKEN CL16                                                00111600
&ZOPN                 SETA &ZOPN+1                                      00111700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XQTOKEN'                          00111800
&ZOPO(&ZOPN)          SETC 'DS'                                         00111900
&ZOPV(&ZOPN)          SETC 'CL16'                                       00112000
&ZOPD(&ZOPN)          SETC '++ &ZXQTOKEN  XQTOKEN'                      00112100
.*-------------------------------------------------------------------   00112200
.***AM.L09  XRSV001C CL8                                                00112300
&ZOPN                 SETA &ZOPN+1                                      00112400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV001C'                         00112500
&ZOPO(&ZOPN)          SETC 'DS'                                         00112600
&ZOPV(&ZOPN)          SETC 'CL8'                                        00112700
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV001C'                      00112800
.*-------------------------------------------------------------------   00112900
.***AM.L10 END OF IWMBREQ LIST PARAMETERS                               00113000
&ZOPN                 SETA &ZOPN+1                                      00113100
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00113200
&ZOPO(&ZOPN)          SETC 'EQU'                                        00113300
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00113400
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00113500
.*                                                                      00113600
&ZOPN                 SETA &ZOPN+1                                      00113700
&ZOPL(&ZOPN)          SETC ' '                                          00113800
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00113900
&ZOPV(&ZOPN)          SETC '1'                                          00114000
&ZOPD(&ZOPN)          SETC ' '                                          00114100
.*-------------------------------------------------------------------   00114200
.***AL.L12 IWMBREQ FMT=LIST MF=S|L PARAMETERS                           00114300
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00114400
.*                                                                      00114500
&ZOPN                 SETA  &ZOPN+1                                     00114600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00114700
&ZOPO(&ZOPN)          SETC  'DC'                                        00114800
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00114900
&ZOPD(&ZOPN)          SETC  '++ IWMBREQ ARG PARMS'                      00115000
.*                                                                      00115100
.ZLMFSLX              ANOP  ,                                           00115200
.*-------------------------------------------------------------------   00115300
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00115400
&ZPLLEN               SETA 36                                           00115500
.*                                                                      00115600
.******************************************************************     00115700
.***AI.L01 IWMBREQ FMT=LIST FILL IN PARAMETER AREA                      00115800
.******************************************************************     00115900
                      ACTR  10000                                       00116000
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00116100
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00116200
&ZCVAL                SETC  'LAE'          XAX MODE                     00116300
.ZIMFXA               ANOP ,                                            00116400
.*                                                                      00116500
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00116600
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00116700
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00116800
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00116900
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00117000
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00117100
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00117200
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00117300
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00117400
&ZOPN                 SETA  &ZOPN+1                                     00117500
&ZOPL(&ZOPN)          SETC  ' '                                         00117600
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00117700
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00117800
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00117900
                      AGO   .ZIMFNX                                     00118000
.*                                                                      00118100
.ZIMFN2               ANOP ,                                            00118200
&ZOPN                 SETA  &ZOPN+1                                     00118300
&ZOPL(&ZOPN)          SETC  ' '                                         00118400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00118500
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00118600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00118700
.ZIMFNX               ANOP ,                                            00118800
.********************************************************************   00118900
.***AI.L02 IWMBREQ FMT=LIST INITIALIZE PARAMETER AREA                   00119000
.********************************************************************   00119100
.***AI.L03 MF=(SLE)                                                     00119200
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00119300
.*                                                                      00119400
&ZOPN                 SETA  &ZOPN+1                                     00119500
&ZOPL(&ZOPN)          SETC  ' '                                         00119600
&ZOPO(&ZOPN)          SETC  'XC'                                        00119700
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00119800
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00119900
.ZIMFLX               ANOP  ,                                           00120000
.*-------------------------------------------------------------------   00120100
.***AI.L04 XPLISTLEN XL2                                                00120200
&ZOPN                 SETA  &ZOPN+1                                     00120300
&ZOPL(&ZOPN)          SETC  ' '                                         00120400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00120500
&ZOPV(&ZOPN)          SETC  '2(2,1),=AL2(&ZPLLEN)'                      00120600
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00120700
.*-------------------------------------------------------------------   00120800
.***AI.L25  XJOBTOKEN CL8                                               00120900
                      AIF   ('&ZXJOBTOKEN' EQ '').ZI4E                  00121000
                      AIF   ('&ZXJOBTOKEN' EQ 'OUTPUT').ZI4E            00121100
&ZCGPR                SETC  '&XJOBTOKEN'                                00121200
.*                                                                      00121300
                      AIF   ('&XJOBTOKEN'(1,1) NE '(').ZI4B             00121400
&ZCGPR   SETC  '0('.'&XJOBTOKEN'(2,K'&XJOBTOKEN-2).')'                  00121500
.ZI4B                 ANOP  ,                                           00121600
.*                                                                      00121700
&ZOPN                 SETA  &ZOPN+1                                     00121800
&ZOPL(&ZOPN)          SETC  ' '                                         00121900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00122000
&ZOPV(&ZOPN)          SETC  '4(8,1),&ZCGPR'                             00122100
&ZOPD(&ZOPN)          SETC  '++ &ZXJOBTOKEN XJOBTOKEN'                  00122200
.*                                                                      00122300
.ZI4E                 ANOP  ,                                           00122400
.*-------------------------------------------------------------------   00122500
.***AI.L25  XQTOKEN CL16                                                00122600
                      AIF   ('&ZXQTOKEN' EQ '').ZI5E                    00122700
                      AIF   ('&ZXQTOKEN' EQ 'OUTPUT').ZI5E              00122800
&ZCGPR                SETC  '&XQTOKEN'                                  00122900
.*                                                                      00123000
                      AIF   ('&XQTOKEN'(1,1) NE '(').ZI5B               00123100
&ZCGPR   SETC  '0('.'&XQTOKEN'(2,K'&XQTOKEN-2).')'                      00123200
.ZI5B                 ANOP  ,                                           00123300
.*                                                                      00123400
&ZOPN                 SETA  &ZOPN+1                                     00123500
&ZOPL(&ZOPN)          SETC  ' '                                         00123600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00123700
&ZOPV(&ZOPN)          SETC  '12(16,1),&ZCGPR'                           00123800
&ZOPD(&ZOPN)          SETC  '++ &ZXQTOKEN XQTOKEN'                      00123900
.*                                                                      00124000
.ZI5E                 ANOP  ,                                           00124100
.*-------------------------------------------------------------------   00124200
&ZOPN1                SETA &ZOPN                                        00124300
.*******************************************************************    00124400
.***  PROCESS IWMBREQ OUTPUT PARAMETERS                                 00124500
.*******************************************************************    00124600
                      ACTR  10000                                       00124700
.*******************************************************************    00124800
.***AO.X02  RETURN CODE PROCESSING                                      00124900
.*******************************************************************    00125000
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00125100
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00125200
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00125300
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00125400
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00125500
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00125600
&ZOPN                 SETA  &ZOPN+1                                     00125700
&ZOPL(&ZOPN)          SETC  ' '                                         00125800
&ZOPO(&ZOPN)          SETC  'ST'                                        00125900
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00126000
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00126100
                      AGO   .ZMRETX                                     00126200
.*                                                                      00126300
.ZMRET2               ANOP  ,                                           00126400
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00126500
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00126600
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00126700
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00126800
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00126900
&ZOPN                 SETA  &ZOPN+1                                     00127000
&ZOPL(&ZOPN)          SETC  ' '                                         00127100
&ZOPO(&ZOPN)          SETC  'LR'                                        00127200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00127300
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00127400
.ZMRETX               ANOP  ,                                           00127500
.*******************************************************************    00127600
.***AO.X03  REASON CODE PROCESSING                                      00127700
.*******************************************************************    00127800
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00127900
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00128000
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00128100
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00128200
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00128300
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00128400
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00128500
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00128600
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00128700
&ZOPN                 SETA  &ZOPN+1                                     00128800
&ZOPL(&ZOPN)          SETC  ' '                                         00128900
&ZOPO(&ZOPN)          SETC  'ST'                                        00129000
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00129100
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00129200
                      AGO   .ZMRSNX                                     00129300
.*                                                                      00129400
.ZMRSN2               ANOP  ,                                           00129500
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00129600
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00129700
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00129800
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00129900
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00130000
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00130100
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00130200
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00130300
&ZOPN                 SETA  &ZOPN+1                                     00130400
&ZOPL(&ZOPN)          SETC  ' '                                         00130500
&ZOPO(&ZOPN)          SETC  'LR'                                        00130600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00130700
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00130800
.ZMRSNX               ANOP  ,                                           00130900
.*******************************************************************    00131000
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00131100
.*******************************************************************    00131200
.ZMFLX                ANOP  ,              MF=L PROCESSING              00131300
.*******************************************************************    00131400
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00131500
.*******************************************************************    00131600
                      ACTR  10000                                       00131700
.*                                                                      00131800
                      LCLA  &ZLC           COLUMN POSITION              00131900
                      LCLA  &ZOPX          LIST TABLE INDEX             00132000
                      LCLC  &ZLL           LABEL                        00132100
                      LCLC  &ZLOP          OPERATION                    00132200
                      LCLC  &ZLV           VALUE                        00132300
                      LCLC  &ZLD           DESCRIPTION                  00132400
.*                                                                      00132500
&ZOPX                 SETA  1                                           00132600
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00132700
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00132800
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00132900
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00133000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00133100
                      AIF   (K'&ZLD LE 0).ZL5                           00133200
&ZLC                  SETA  35             COMMENT COLUMN               00133300
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00133400
&ZLC                  SETA  33             COMMMENT COLUMN              00133500
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00133600
&ZLV                  SETC  '&ZLV'.' '                                  00133700
                      AGO   .ZL3                                        00133800
.*                                                                      00133900
.ZL4                  ANOP  ,                                           00134000
&ZLV                  SETC  '&ZLV'.' '                                  00134100
.ZL5                  ANOP  ,                                           00134200
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00134300
.*                                                                      00134400
&ZLL     &ZLOP &ZLV                                                     00134500
.*                                                                      00134600
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00134700
                      AGO   .ZL2           CONTINUE LOOPING             00134800
.*                                                                      00134900
.ZLX                  ANOP  ,                                           00135000
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00135100
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00135200
         L     14,16(0,0)              GET CVT ADDRESS                  00135300
         L     14,772(14,0)            GET SFT ADDRESS                  00135400
         L     14,380(14,0)            GET LX FOR SERVICE ROUTINE       00135500
         LA    15,73                   GET EX FOR SERVICE ROUTINE       00135600
         OR    14,15                   GET PC NUMBER                    00135700
         PC    0(14)                                                    00135800
END&SYSNDX DS    0H                    END LABEL                        00135900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00136000
.ZLINKX               ANOP  ,                                           00136100
.*******************************************************************    00136200
.***AP.X01  FORMAT GENERATED CODE                                       00136300
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00136400
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00136500
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00136600
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00136700
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00136800
                      AIF   (K'&ZLD LE 0).ZL51                          00136900
&ZLC                  SETA  35             COMMENT COLUMN               00137000
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00137100
&ZLC                  SETA  33             COMMENT COLUMN               00137200
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00137300
&ZLV                  SETC  '&ZLV'.' '                                  00137400
                      AGO   .ZL31                                       00137500
.*                                                                      00137600
.ZL41                 ANOP  ,                                           00137700
&ZLV                  SETC  '&ZLV'.' '                                  00137800
.ZL51                 ANOP  ,                                           00137900
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00138000
.*                                                                      00138100
&ZLL     &ZLOP &ZLV                                                     00138200
.*                                                                      00138300
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00138400
                      AGO   .ZL21          CONTINUE LOOPING             00138500
.*                                                                      00138600
.ZLX1                 ANOP  ,                                           00138700
.*******************************************************************    00138800
.***AP.X02  END OF IWMBREQ MACRO                                        00138900
&ZIWMBREQ             SETC  'YES'          SET IWMBREQ USED             00139000
         POP   PRINT                                                    00139100
*                                            IWMBREQ-0                  00139200
         SPACE 1                                                        00139300
.ZLX2                 ANOP  ,                                           00139400
         MEND                                                           00139500
**********************************************************************/ 00139600
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00139700
*%IWMBREQ: MACRO KEYS(JOBTOKEN,QTOKEN,RETCODE,RSNCODE,PLISTVER,MF);     00139800
*  ANS('?'||MACLABEL||' '||'IWMBREQP '||MACLIST||                       00139900
*         ' '||MACKEYS||';') COL(MACLMAR);                              00140000
*%END IWMBREQ;                                                          00140100
