*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  COFDEFIN                              -03/29/95-<1> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  DEFINE CLASS                                  * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5655-068 (C) COPYRIGHT IBM CORP. 1988, 1995                     * 00001300
*                                                                     * 00001400
* STATUS= JBB5522                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*01* FUNCTION:                                                        * 00001900
*                                                                     * 00002000
*      This macro provides the interface to the DEFINE CLASS function * 00002100
*      provided by the Virtual Lookaside Facility.  This function     * 00002200
*      initializes the requested class to VLF.  The class attributes  * 00002300
*      are obtained from input variables on this macro as well as     * 00002400
*      from the PARMLIB declaration for the class.  The DEFINE CLASS  * 00002500
*      function causes storage to be acquired for the objects and     * 00002600
*      associated control blocks.                                     * 00002700
*                                                                     * 00002800
*      The DEFINE CLASS is rejected if the class currently exists.    * 00002900
*                                                                     * 00003000
*      The maximum amount of virtual storage used for any class of    * 00003100
*      objects can be controlled by the MAXVIRT keyword on the CLASS  * 00003200
*      statement in the COFVLFxx Parmlib member.                      * 00003300
*                                                                     * 00003400
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00003500
*                                                                     * 00003600
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00003700
*                                                                     * 00003800
*01* ENVIRONMENT:                                                     * 00003900
*                                                                     * 00004000
*                                                                     * 00004100
*      Dispatchable unit mode: Task mode.                             * 00004200
*                                                                     * 00004300
*      Minimum authorization: Supervisor state or PSW key mask (PKM)  * 00004400
*                        0-7.                                         * 00004500
*                                                                     * 00004600
*      AMODE:            24- or 31-bit.  All parameters must be valid * 00004700
*                        31-bit addresses                             * 00004800
*                                                                     * 00004900
*      ASC mode:         Primary or Access Register.                  * 00005000
*                                                                     * 00005100
*      Serialization:    Enabled.                                     * 00005200
*                                                                     * 00005300
*                                                                     * 00005400
*                                                                     * 00005500
*01* SYNTAX:                                                          * 00005600
*                                                                     * 00005700
*[xlabel]  COFDEFIN   [ PLISTVER                                      * 00005800
*                                =xplistver|IMPLIED_VERSION]        * 00005900
*                      ,CLASS=xclass                                  * 00006000
*                     [,MAJLEN=xmajlen|NO_DEFAULT]                  * 00006100
*                     [,MINLEN=xminlen|NO_DEFAULT]                  * 00006200
*                     [,TRIM=ON|OFF]                                * 00006300
*                     [,AUTHRET=NO|YES]                             * 00006400
*                     [,RETCODE=xretcode]                             * 00006500
*                     [,RSNCODE=xrsncode]                             * 00006600
*                    [,MF=S]                                         * 00006700
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00006800
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00006900
*                                                                     * 00007000
*                                                                     * 00007100
*      Where:                                                         * 00007200
*                                                                     * 00007300
*                                                                     * 00007400
*      [xlabel]                                                       * 00007500
*          is an optional symbol, starting in column 1, that is the   * 00007600
*          name on the COFDEFIN macro invocation.  The name must      * 00007700
*          conform to the rules for an ordinary assembler language    * 00007800
*          symbol.                                                    * 00007900
*          DEFAULT: No name.                                          * 00008000
*                                                                     * 00008100
*                                                                     * 00008200
*                                                                     * 00008300
*                                                                     * 00008400
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00008500
*          is an optional byte input decimal value in the "1-1" range * 00008600
*          that specifies the macro version.  PLISTVER is the only    * 00008700
*          key allowed on the list form of MF and determines which    * 00008800
*          parameter list is generated.  Note that MAX may be         * 00008900
*          specified instead of a number, and the parameter list will * 00009000
*          be of the largest size currently supported. This size may  * 00009100
*          grow from release to release (thus possibly affecting the  * 00009200
*          amount of storage needed by your program).  If your        * 00009300
*          program can tolerate this, IBM recommends that you always  * 00009400
*          specify MAX when creating the list form parameter list as  * 00009500
*          that will ensure that the list form parameter list is      * 00009600
*          always long enough to hold whatever parameters might be    * 00009700
*          specified on the execute form.                             * 00009800
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00009900
*          default is the lowest version which allows all of the      * 00010000
*          parameters specified on the invocation to be processed.    * 00010100
*                                                                     * 00010200
*                                                                     * 00010300
*                                                                     * 00010400
*                                                                     * 00010500
*      CLASS=xclass                                                   * 00010600
*          is the name (RS-type), or address in register (2)-(12), of * 00010700
*          a required 7 character input variable or constant          * 00010800
*          containing the class name of the class of objects to be    * 00010900
*          created.                                                   * 00011000
*                                                                     * 00011100
*                                                                     * 00011200
*                                                                     * 00011300
*                                                                     * 00011400
*      [MAJLEN=xmajlen|NO_DEFAULT]                                  * 00011500
*          is the name (RS-type), or address in register (2)-(12), of * 00011600
*          an optional byte input variable or constant that contains  * 00011700
*          the length of the major names for this class.  The minimum * 00011800
*          valid length is 1 byte.  The maximum valid length is 64    * 00011900
*          bytes.  This keyword is required for classes that do not   * 00012000
*          have major names which correspond to PDS classes.          * 00012100
*          DEFAULT: NO_DEFAULT is used for this keyword when a PDS    * 00012200
*          class is being defined, and the default value of fifty     * 00012300
*          (50) is assigned to the major name length for all major    * 00012400
*          names in the class.                                        * 00012500
*                                                                     * 00012600
*                                                                     * 00012700
*                                                                     * 00012800
*                                                                     * 00012900
*      [MINLEN=xminlen|NO_DEFAULT]                                  * 00013000
*          is the name (RS-type), or address in register (2)-(12), of * 00013100
*          an optional byte input variable or constant that contains  * 00013200
*          the length of the minor names for this class.  The minimum * 00013300
*          valid length is 1 byte.  The maximum valid length is 64    * 00013400
*          bytes.  This keyword is required for classes that do not   * 00013500
*          have major names which correspond to PDS classes.          * 00013600
*          DEFAULT: NO_DEFAULT is used for this keyword when a PDS    * 00013700
*          class is being defined, and the default value of eight (8) * 00013800
*          is assigned to the minor name length for all minor names   * 00013900
*          in the class.                                              * 00014000
*                                                                     * 00014100
*                                                                     * 00014200
*                                                                     * 00014300
*                                                                     * 00014400
*      [TRIM=ON|OFF]                                                * 00014500
*          is an optional keyword input that indicates whether VLF    * 00014600
*          should use its own algorithm for determining what should   * 00014700
*          be removed from VLF when there is a need to reclaim space. * 00014800
*          DEFAULT: ON                                                * 00014900
*                                                                     * 00015000
*                                                                     * 00015100
*          ON        indicates that VLF should remove objects from    * 00015200
*                    VLF as needed.                                   * 00015300
*                                                                     * 00015400
*          OFF       indicates that VLF should not remove objects     * 00015500
*                    from VLF except when notified of a change.       * 00015600
*                                                                     * 00015700
*                                                                     * 00015800
*                                                                     * 00015900
*                                                                     * 00016000
*                                                                     * 00016100
*                                                                     * 00016200
*      [AUTHRET=NO|YES]                                             * 00016300
*          is an optional keyword input that indicates whether or not * 00016400
*          a caller must be in Supervisor State or PSW Key Mask (PKM) * 00016500
*          0-7 in order to retrieve objects from this VLF class.      * 00016600
*          DEFAULT: NO                                                * 00016700
*                                                                     * 00016800
*                                                                     * 00016900
*          NO        indicates that any caller with a proper UTOKEN   * 00017000
*                    may issue a COFRETRI macro to retrieve objects   * 00017100
*                    from this class.                                 * 00017200
*                                                                     * 00017300
*          YES       indicates that a caller must be in Supervisor    * 00017400
*                    State or have PSW Key Mask (PKM) 0-7 when the    * 00017500
*                    COFRETRI macro is issued to retrieve objects     * 00017600
*                    from this VLF class.                             * 00017700
*                                                                     * 00017800
*                                                                     * 00017900
*                                                                     * 00018000
*                                                                     * 00018100
*                                                                     * 00018200
*                                                                     * 00018300
*      [RETCODE=xretcode]                                             * 00018400
*          is the name (RS-type) of an optional fullword output       * 00018500
*          variable, or register (2)-(12), into which the return code * 00018600
*          is to be copied from GPR 15.                               * 00018700
*                                                                     * 00018800
*                                                                     * 00018900
*                                                                     * 00019000
*                                                                     * 00019100
*      [RSNCODE=xrsncode]                                             * 00019200
*          is the name (RS-type) of an optional fullword output       * 00019300
*          variable, or register (2)-(12), into which the reason code * 00019400
*          is to be copied from GPR 0.                                * 00019500
*                                                                     * 00019600
*                                                                     * 00019700
*                                                                     * 00019800
*                                                                     * 00019900
*      [MF=S|L|E]                                                   * 00020000
*          is an optional keyword input which specifies the macro     * 00020100
*          form.                                                      * 00020200
*          DEFAULT: S                                                 * 00020300
*                                                                     * 00020400
*                                                                     * 00020500
*          [MF=S]                                                     * 00020600
*              specifies the standard form of the macro.  The "S"     * 00020700
*              form generates code to put the parameters into an      * 00020800
*              in-line parameter list and invoke the desired service. * 00020900
*              Full checking for required macro keys is done along    * 00021000
*              with supplying defaults for omitted optional           * 00021100
*              parameters.                                            * 00021200
*                                                                     * 00021300
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00021400
*              specifies the list form of the macro.  The "L" form    * 00021500
*              defines an area to be used for the parameter list.     * 00021600
*              Only the PLISTVER key may be specified on the          * 00021700
*              invocation.  All other macro parameters are flagged as * 00021800
*              errors.  If PLISTVER is not specified, the original    * 00021900
*              parameter list definition is used.                     * 00022000
*                                                                     * 00022100
*            ,xmfctrl                                                 * 00022200
*              is a required input.  It is the name of a storage area * 00022300
*              for the parameter list.                                * 00022400
*                                                                     * 00022500
*            ,xmfattr|0D                                            * 00022600
*              is an optional 60 character input string that varies   * 00022700
*              from 1 to 60 characters. It can contain any value that * 00022800
*              is valid on an assembler DS pseudo-op. You can use     * 00022900
*              this parameter to force boundary alignment of the      * 00023000
*              parameter list.                                        * 00023100
*              DEFAULT: 0D which forces the parameter list to a       * 00023200
*              doubleword boundary.                                   * 00023300
*                                                                     * 00023400
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00023500
*              specifies the execute form of the macro.  The "E" form * 00023600
*              generates code to put the parameters into the          * 00023700
*              parameter list specified by xmfctrl and provides full  * 00023800
*              syntax checking with default setting.                  * 00023900
*                                                                     * 00024000
*            ,xmfctrl                                                 * 00024100
*              is a required input.  It is the name (RS-type), or     * 00024200
*              address in register (1)-(12), of a storage area for    * 00024300
*              the parameter list.                                    * 00024400
*                                                                     * 00024500
*            ,COMPLETE                                              * 00024600
*              is an optional keyword input which specifies the       * 00024700
*              degree of macro parameter syntax checking.             * 00024800
*              DEFAULT: COMPLETE                                      * 00024900
*                                                                     * 00025000
*                                                                     * 00025100
*              COMPLETE   Checking for required macro keys is done    * 00025200
*                        and defaults are supplied for omitted        * 00025300
*                        optional parameters.                         * 00025400
*                                                                     * 00025500
*                                                                     * 00025600
*                                                                     * 00025700
*                                                                     * 00025800
*                                                                     * 00025900
*                                                                     * 00026000
*                                                                     * 00026100
*01* RETURN CODES:                                                    * 00026200
*                                                                     * 00026300
*                                                                     * 00026400
*            0    Success.                                            * 00026500
*                                                                     * 00026600
*            2    The specified class may already be defined.         * 00026700
*                                                                     * 00026800
*            4    DEFINE failed. The class is not in a recognizable   * 00026900
*                 class state.                                        * 00027000
*                                                                     * 00027100
*            8    A Purge request for the same class has overridden   * 00027200
*                 the Define request.  The class will not be defined  * 00027300
*                 at this time. See reason codes.                     * 00027400
*                                                                     * 00027500
*            12(0C) There was no description for the class in the     * 00027600
*                 COFVLFxx PARMLIB member.                            * 00027700
*                                                                     * 00027800
*            16(10) Parameter(s) not valid. See reason codes.         * 00027900
*                                                                     * 00028000
*            24(18) Parameter list ALET is not valid.                 * 00028100
*                                                                     * 00028200
*            40(28) VLF is not active.                                * 00028300
*                                                                     * 00028400
*            44(2C) Unexpected error in VLF.                          * 00028500
*                                                                     * 00028600
*                                                                     * 00028700
*                                                                     * 00028800
*01* REASON CODES:                                                    * 00028900
*                                                                     * 00029000
*       REASON    RETURN                                              * 00029100
*       CODE      CODE      DESCRIPTION                               * 00029200
*                                          * 00029300
*                                                                     * 00029400
*                                                                     * 00029500
*              0  0         Define was successful.                    * 00029600
*                                                                     * 00029700
*              4  2         A  Define for the same class is currently * 00029800
*                           in progress.                              * 00029900
*                                                                     * 00030000
*              8  2         The  class  is already defined.  COFPURGE * 00030100
*                           must  be  issued  before the class can be * 00030200
*                           redefined.                                * 00030300
*                                                                     * 00030400
*              C  2         The  class  is already defined.  COFPURGE * 00030500
*                           must  be  issued  before the class can be * 00030600
*                           redefined.  The existing class definition * 00030700
*                           has been changed to require the issuer of * 00030800
*                           the  COFRETRI  macro for this class to be * 00030900
*                           in  Supervisor State or have PSW Key Mask * 00031000
*                           (PKM) 0-7.                                * 00031100
*                                                                     * 00031200
*              0  8         A  Purge  request  for the same class was * 00031300
*                           issued  prior  to  the  completion of the * 00031400
*                           Define request                            * 00031500
*                                                                     * 00031600
*              4  8         The  class  was  being purged when Define * 00031700
*                           was invoked                               * 00031800
*                                                                     * 00031900
*              4  16(10)    Value   for  MAJLEN  not  within  allowed * 00032000
*                           range.                                    * 00032100
*                                                                     * 00032200
*              8  16(10)    Value   for  MINLEN  not  within  allowed * 00032300
*                           range.                                    * 00032400
*                                                                     * 00032500
*              C  16(10)    Values for both MAJLEN and MINLEN are not * 00032600
*                           within allowed ranges.                    * 00032700
*                                                                     * 00032800
*         (nnnn)  44(2C)    The  reason  code  associated with return * 00032900
*                           code   44   (X'2C')   is   for   internal * 00033000
*                           diagnostic  purposes only.   It should be * 00033100
*                           recorded  and supplied to the appropriate * 00033200
*                           IBM Support personnel.                    * 00033300
*                                                                     * 00033400
*                                                                     * 00033500
*                                                                     * 00033600
*01* MODULE TYPE:  ASSEM MACRO                                        * 00033700
*                                                                     * 00033800
*02*   PROCESSOR:  ASSEM                                              * 00033900
*                                                                     * 00034000
*01* COMPONENT:  SC164                                                * 00034100
*                                                                     * 00034200
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00034300
*                                                                     * 00034400
*01* MACRO USAGE NOTES:                                               * 00034500
*                                                                     * 00034600
*                                                                     * 00034700
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00034800
*        global macro variable.  Any value other than 'NO' will       * 00034900
*        result in the macro expansion being printed.  The default is * 00035000
*        'YES'.  The following examples illustrate how the ZPRINT     * 00035100
*        variable should be set.                                      * 00035200
*                                                                     * 00035300
*                    GBLC &ZPRINT                                     * 00035400
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00035500
*                                                                     * 00035600
*                                                                     * 00035700
*    2.  All   keys   currently   contained  in  the  COFDEFIN  macro * 00035800
*        correspond  to  version  1.   If you specify PLISTVER, use a * 00035900
*        value of 1 or MAX.                                           * 00036000
*                                                                     * 00036100
*                                                                     * 00036200
*                                                                     * 00036300
*                                                                     * 00036400
*01* CHANGE ACTIVITY:                                                 * 00036500
*                                                                     * 00036600
*   Flag LineItem  FMID    Date   ID    Comment                       * 00036700
*                                                                     * 00036800
*    $L0=VLF      HBB3310 870927 PDAR:  Virtual Lookaside Facility    * 00036900
*    $D1=DEN1048  HBB3310 880114 PDAM:  Return/reason code changes    * 00037000
*    $P1=PC42218  HBB3310 880205 PDAM:  Add AUTHRET keyword           * 00037100
****** END OF SPECIFICATIONS *****************************************/ 00037200
*/********************************************************************* 00037300
         MACRO                                                          00037400
&XLABEL  COFDEFIN &PLISTVER=,&CLASS=,&MAJLEN=,&MINLEN=,&TRIM=,         *00037500
               &AUTHRET=,&RETCODE=,&RSNCODE=,&MF=                       00037600
.*                                                                      00037700
*              MACDATE -03/29/95-<1>                                    00037800
.*                                                                      00037900
.*******************************************************************    00038000
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00038100
.*******************************************************************    00038200
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   00038300
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     00038400
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             00038500
.*                                                                      00038600
              GBLC  &ZCOFDEFIN  YES=MACRO USED AT LEAST ONCE            00038700
.*******************************************************************    00038800
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00038900
.*******************************************************************    00039000
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 00039100
              LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS            00039200
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              00039300
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             00039400
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             00039500
              LCLA  &ZAWRK      USED AS A WORK AREA                     00039600
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  00039700
              LCLA  &ZN         NUMERIC WORK VARIABLE                   00039800
              LCLC  &ZC         CHARACTER WORK VARIABLE                 00039900
              LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE             00040000
              LCLA  &ZTLA       VALUE TOO LONG VARIABLE                 00040100
              LCLA  &ZMACRET    MACRO RETURN CODE                       00040200
&ZMACRET      SETA  0           ASSUME NO ERRORS                        00040300
.*                                                                      00040400
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      00040500
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              00040600
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   00040700
              LCLC  &ZENDBASEPL                 End of base PL          00040800
              LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                   00040900
.*******************************************************************    00041000
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00041100
.*******************************************************************    00041200
              LCLA  &ZI         INDEX FOR ARRAY                         00041300
              LCLA  &ZJ         INDEX FOR PARMS                         00041400
              LCLA  &ZK         INDEX FOR PARSE                         00041500
              LCLA  &ZLO        LOW RANGE VALUE                         00041600
              LCLA  &ZHI        HIGH RANGE VALUE                        00041700
              LCLC  &ZW         WORK AREA FOR PARM                      00041800
.********************************************************************   00041900
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00042000
.********************************************************************   00042100
              GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                 00042200
              GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE          00042300
.*                                                                      00042400
              AIF   (K'&SYSASCE GT 0).ZSYS4     SYS STATE DEFINED       00042500
              AIF   (K'&SYSSPLV GT 0).ZSYS2     SP LEVEL DEFINED        00042600
              SPLEVEL  TEST                                             00042700
.ZSYS2        ANOP  ,                                                   00042800
              AIF   ('&SYSSPLV' EQ '1').ZSYS3   PRE SP 3.1              00042900
              AIF   ('&SYSSPLV' EQ '2').ZSYS3   PRE SP 3.1              00043000
              SYSSTATE TEST                                             00043100
              AGO   .ZSYS4                                              00043200
.ZSYS3        ANOP  ,                                                   00043300
&SYSASCE      SETC  'P'         ASSUME SYSSTATE PRIMARY                 00043400
.ZSYS4        ANOP  ,                                                   00043500
.*******************************************************************    00043600
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00043700
.*******************************************************************    00043800
              LCLA  &XPLISTVER  ++ VALUE                                00043900
              LCLC  &XCLASS     ++ NAME                                 00044000
              LCLC  &XMAJLEN    ++ NAME                                 00044100
              LCLC  &XMINLEN    ++ NAME                                 00044200
              LCLC  &XTRIM      ++ VALUE                                00044300
              LCLC  &XAUTHRET   ++ VALUE                                00044400
              LCLC  &XRETCODE   ++ NAME                                 00044500
              LCLC  &XRSNCODE   ++ NAME                                 00044600
              LCLC  &XMF        ++ VALUE                                00044700
              LCLC  &XMFCTRL    ++ NAME                                 00044800
              LCLC  &XMFATTR    ++ VALUE                                00044900
              LCLC  &XMFSCK     ++ VALUE                                00045000
.*******************************************************************    00045100
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00045200
.*******************************************************************    00045300
              LCLC  &ZXPLISTVER                 ++ INPUT VALUE          00045400
              LCLC  &ZXCLASS    ++ INPUT NAME                           00045500
              LCLC  &ZXMAJLEN   ++ INPUT NAME                           00045600
              LCLC  &ZXMINLEN   ++ INPUT NAME                           00045700
              LCLC  &ZXTRIM     ++ INPUT VALUE                          00045800
              LCLC  &ZXAUTHRET  ++ INPUT VALUE                          00045900
              LCLC  &ZXRETCODE  ++ OUTPUT NAME                          00046000
              LCLC  &ZXRSNCODE  ++ OUTPUT NAME                          00046100
              LCLC  &ZXMF       ++ INPUT VALUE                          00046200
              LCLC  &ZXMFCTRL   ++ INPUT NAME                           00046300
              LCLC  &ZXMFATTR   ++ INPUT VALUE                          00046400
              LCLC  &ZXMFSCK    ++ INPUT VALUE                          00046500
.********************************************************************   00046600
.***AC.PLV01  PROCESS PLISTVER                                      *   00046700
.********************************************************************   00046800
&XPLISTVER      SETA  1                                                 00046900
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00047000
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00047100
&XPLISTVER      SETA  1                                                 00047200
.ZPLV0          ANOP  ,                                                 00047300
.*                                                                      00047400
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00047500
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00047600
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00047700
.*-------------------------------------------------------------------   00047800
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00047900
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00048000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00048100
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00048200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00048300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00048400
                AGO   .ZPVCK2                                           00048500
.ZPVCK3         ANOP  ,                                                 00048600
.*-------------------------------------------------------------------   00048700
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00048800
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00048900
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00049000
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00049100
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00049200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00049300
                AGO   .ZPVCKE                                           00049400
.ZPVCK2         ANOP  ,                                                 00049500
.*-------------------------------------------------------------------   00049600
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00049700
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00049800
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00049900
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00050000
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00050100
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00050200
                MNOTE 8,' &ZMS IS REQUIRED.'                            00050300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00050400
                AGO   .ZPVCK5                                           00050500
.ZPVCK4         ANOP  ,                                                 00050600
&XPLISTVER      SETA  &PLISTVER(1)                                      00050700
.ZPVCK5         ANOP  ,                                                 00050800
.*-------------------------------------------------------------------   00050900
&ZCVAL          SETC  '&PLISTVER(1)'                                    00051000
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00051100
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00051200
                AIF   (&XPLISTVER LT 1).ZPVCK6  TOO LOW                 00051300
                AIF   (&XPLISTVER LE 1).ZPVCKE  NOT HIGH                00051400
.ZPVCK6         ANOP   ,                                                00051500
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00051600
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00051700
&ZMS            SETC  '&ZMS THE RANGE IS "1-1"'                         00051800
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00051900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00052000
.ZPVCKE         ANOP   ,                                                00052100
.********************************************************************   00052200
.***AG.MF01 PROCESS MF MACRO FORMS                                      00052300
.********************************************************************   00052400
              ACTR  10000                                               00052500
.*------------------------------------------------------------------    00052600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00052700
&XMF          SETC  ''          INITIALIZE XVARIABLE                    00052800
.*-------------------------------------------------------------------   00052900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00053000
.ZG31         ANOP  ,                                                   00053100
&ZTLC         SETC 'S'                                                  00053200
              AIF   ('&MF(1)' NE '&ZTLC').ZG32                          00053300
&XMF          SETC  'S'         SET KEYWORD                             00053400
              AIF   (N'&MF LE 1).ZG31A          CK NUM                  00053500
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00053600
&ZMS          SETC  '&ZMS.&MF"'                                         00053700
&ZMS          SETC  '&ZMS "MF"'                                         00053800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00053900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00054000
.ZG31A        ANOP  ,                                                   00054100
.*-------------------------------------------------------------------   00054200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00054300
.ZG32         ANOP  ,                                                   00054400
&ZTLC         SETC 'L'                                                  00054500
              AIF   ('&MF(1)' NE '&ZTLC').ZG39                          00054600
&XMF          SETC  'L'         SET KEYWORD                             00054700
              AIF   (N'&MF LE 3).ZG32A          CK NUM                  00054800
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00054900
&ZMS          SETC  '&ZMS.&MF"'                                         00055000
&ZMS          SETC  '&ZMS "MF"'                                         00055100
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00055200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00055300
.ZG32A        ANOP  ,                                                   00055400
.*-------------------------------------------------------------------   00055500
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00055600
              AIF   (N'&SYSLIST NE 0).ZG32B     POSITIONALS?            00055700
              AIF   ('&CLASS' NE '').ZG32B      KEYS?                   00055800
              AIF   ('&MAJLEN' NE '').ZG32B     KEYS?                   00055900
              AIF   ('&MINLEN' NE '').ZG32B     KEYS?                   00056000
              AIF   ('&TRIM' NE '').ZG32B       KEYS?                   00056100
              AIF   ('&AUTHRET' NE '').ZG32B    KEYS?                   00056200
              AIF   ('&RETCODE' NE '').ZG32B    KEYS?                   00056300
              AIF   ('&RSNCODE' NE '').ZG32B    KEYS?                   00056400
              AGO    .ZG32C     INVOCATION OKAY                         00056500
.ZG32B        ANOP  ,                                                   00056600
&ZMS          SETC  'THE "L" FORM OF "MF"'      *MFLA* MNOTE            00056700
&ZMS          SETC  '&ZMS CAN ONLY HAVE'                                00056800
&ZMS          SETC  '&ZMS THE "PLISTVER" KEY'                           00056900
              MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'              00057000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00057100
.ZG32C        ANOP  ,                                                   00057200
.*-------------------------------------------------------------------   00057300
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00057400
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00057500
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00057600
              AIF   (N'&MF(2) GT 1).ZG34B       MULTI PARMS             00057700
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00057800
.ZG34B        AIF   (K'&MF(2) GT 0).ZG34C                               00057900
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00058000
&ZMS          SETC  'WHEN "L" IS SPECIFIED'     *KRQDA*                 00058100
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00058200
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00058300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00058400
.ZG34C        ANOP  ,                                                   00058500
.*-------------------------------------------------------------------   00058600
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00058700
              AIF   (K'&ZXMFCTRL LE 0).ZG34P    NOT I/O                 00058800
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG34P                      00058900
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00059000
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00059100
&ZMS          SETC  '&ZMS.&MF"'                                         00059200
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00059300
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                   00059400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00059500
.ZG34P        ANOP  ,                                                   00059600
.*-------------------------------------------------------------------   00059700
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00059800
&ZXMFATTR     SETC  'INPUT'     SET IN/OUTPUT                           00059900
&XMFATTR      SETC  '0D'                                                00060000
              AIF   (K'&MF(3) LE 0).ZG37B       PARM                    00060100
&XMFATTR      SETC  '&MF(3,1)'  SET XVARIABLE                           00060200
              AIF   (N'&MF(3) GT 1).ZG37B       MULTI PARMS             00060300
&XMFATTR      SETC  '&MF(3)'    SET XVARIABLE                           00060400
.ZG37B        ANOP  ,                                                   00060500
.*-------------------------------------------------------------------   00060600
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00060700
              AIF   (K'&ZXMFATTR LE 0).ZG37P    NOT I/O                 00060800
              AIF   ('&XMFATTR'(1,1) NE '(').ZG37P                      00060900
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00061000
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00061100
&ZMS          SETC  '&ZMS.&MF"'                                         00061200
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00061300
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                   00061400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00061500
.ZG37P        ANOP  ,                                                   00061600
.*-------------------------------------------------------------------   00061700
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00061800
              AIF   (K'&ZXMFATTR LE 0).ZG37S    NOT I/O                 00061900
              AIF   (K'&XMFATTR LE 60).ZG37S    LNG OK                  00062000
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00062100
&ZMS          SETC  '"MF='      *KLNGA* MNOTE                           00062200
&ZMS          SETC  '&ZMS.&MF"'                                         00062300
&ZMS          SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'               00062400
              MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                  00062500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00062600
.ZG37S        ANOP  ,                                                   00062700
.*-------------------------------------------------------------------   00062800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00062900
.ZG39         ANOP  ,                                                   00063000
&ZTLC         SETC 'E'                                                  00063100
              AIF   ('&MF(1)' NE '&ZTLC').ZG47                          00063200
&XMF          SETC  'E'         SET KEYWORD                             00063300
              AIF   (N'&MF LE 3).ZG39A          CK NUM                  00063400
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00063500
&ZMS          SETC  '&ZMS.&MF"'                                         00063600
&ZMS          SETC  '&ZMS "MF"'                                         00063700
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00063800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00063900
.ZG39A        ANOP  ,                                                   00064000
.*-------------------------------------------------------------------   00064100
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00064200
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00064300
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00064400
              AIF   (N'&MF(2) GT 1).ZG41B       MULTI PARMS             00064500
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00064600
.ZG41B        AIF   (K'&MF(2) GT 0).ZG41C                               00064700
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00064800
&ZMS          SETC  'WHEN "E" IS SPECIFIED'     *KRQDA*                 00064900
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00065000
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00065100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00065200
.ZG41C        ANOP  ,                                                   00065300
.*-------------------------------------------------------------------   00065400
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00065500
              AIF   (K'&ZXMFCTRL LE 0).ZG41R    NOT I/O                 00065600
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG41R                      00065700
&ZCGPR        SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                          00065800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG41P                        00065900
              AIF   (K'&ZCGPR GT 2).ZG41Q                               00066000
              AIF   ('&ZCGPR' EQ '0').ZG41Q                             00066100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00066200
              AIF   (T'&ZCGPR NE 'N').ZG41Q     INVALID REG NAME        00066300
.ZG41P        ANOP  ,                                                   00066400
              AIF   (T'&ZCGPR NE 'N').ZG41R     NON NUMERIC             00066500
              AIF   ('&ZCGPR' LT '1').ZG41Q                             00066600
              AIF   ('&ZCGPR' LE '12').ZG41R                            00066700
.ZG41Q        ANOP  ,                                                   00066800
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00066900
&ZMS          SETC  '&ZMS.&MF"'                                         00067000
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'           00067100
              MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                    00067200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00067300
.ZG41R        ANOP  ,                                                   00067400
.*-------------------------------------------------------------------   00067500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00067600
&XMFSCK       SETC  ''          INITIALIZE XVARIABLE                    00067700
.ZG45A   AIF   ('&MF(3)' NE 'COMPLETE').ZG46A                           00067800
&XMFSCK       SETC  'COMPLETE'  SET KEYWORD                             00067900
.*-------------------------------------------------------------------   00068000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00068100
.ZG46A        AIF   (K'&XMFSCK GT 0).ZG46C      KEYWORD                 00068200
              AIF   (K'&MF(3) LE 0).ZG46B                               00068300
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           00068400
&ZMS          SETC  '&ZMS.&MF"'                                         00068500
&ZMS          SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '           00068600
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00068700
&ZMS          SETC  '&ZMS "COMPLETE".'          VALID KEYWORD           00068800
              MNOTE 8,' &ZMS '                                          00068900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00069000
.ZG46B        ANOP  ,                                                   00069100
&XMFSCK       SETC  'COMPLETE'  SET DEFAULT KEYWORD                     00069200
.ZG46C        ANOP  ,                                                   00069300
&ZXMFSCK      SETC  'INPUT'     SET IN/OUTPUT                           00069400
.*------------------------------------------------------------------    00069500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00069600
.ZG47         ANOP  ,                                                   00069700
&ZXMF         SETC  'INPUT'     SET IN/OUTPUT                           00069800
              AIF   (K'&XMF GT 0).ZG47E         VALID ARG               00069900
              AIF   (T'&MF EQ 'O').ZG47D        OMITTED                 00070000
&ZASYSLNDX    SETA  0                                                   00070100
.ZG47A        ANOP  ,           POSITIONAL MACRO KEY                    00070200
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        00070300
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG47C                    00070400
&ZTLC         SETC 'MF'                                                 00070500
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG47A           00070600
.ZG47B        ANOP  ,                                                   00070700
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00070800
&ZMS          SETC  'THE "MF" KEY'              *KOPTA* MNOTE           00070900
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             00071000
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    00071100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00071200
              AGO   .ZG47E                                              00071300
.ZG47C        ANOP  ,                                                   00071400
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00071500
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           00071600
&ZMS          SETC  '&ZMS.&MF"'                                         00071700
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00071800
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00071900
&ZMS          SETC  '&ZMS "S",'                 VALID KEYWORD           00072000
&ZMS          SETC  '&ZMS "L",'                 VALID KEYWORD           00072100
&ZMS          SETC  '&ZMS OR "E".'              VALID KEYWORD           00072200
              MNOTE 8,' &ZMS '                                          00072300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00072400
              AGO   .ZG47E                                              00072500
.ZG47D        ANOP  ,                                                   00072600
&XMF          SETC  'S'         SET DEFAULT KEYWORD                     00072700
&XMFSCK       SETC  'COMPLETE'  COMPLETE CHECKING                       00072800
.ZG47E        ANOP  ,                                                   00072900
.********************************************************************   00073000
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00073100
.********************************************************************   00073200
              ACTR  10000                                               00073300
.*-------------------------------------------------------------------   00073400
.***AG.MF03 MF=(SLE)                                                    00073500
              AIF   ('&XMF' EQ 'L').ZGMFX                               00073600
.*----------------------------------------------------------------***   00073700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00073800
              AIF   (N'&CLASS LE 1).ZG5A        CK NUM                  00073900
&ZMS          SETC  '"CLASS='   *KPOSA* MNOTE                           00074000
&ZMS          SETC  '&ZMS.&CLASS"'                                      00074100
&ZMS          SETC  '&ZMS "CLASS"'                                      00074200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00074300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00074400
.ZG5A         ANOP  ,                                                   00074500
.*-------------------------------------------------------------------   00074600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00074700
&ZXCLASS      SETC  'INPUT'     SET IN/OUTPUT                           00074800
&XCLASS       SETC  '&CLASS(1)'                 SET XVARIABLE           00074900
              AIF   (N'&CLASS GT 1).ZG5B        MULTI PARMS             00075000
&XCLASS       SETC  '&CLASS'    SET XVARIABLE                           00075100
.ZG5B         AIF   (K'&CLASS(1) GT 0).ZG5C                             00075200
&ZXCLASS      SETC  ''          RESET IN/OUTPUT                         00075300
&ZMS          SETC  ' '         *KRQDA*                                 00075400
&ZMS          SETC  '&ZMS "CLASS" KEY AND ITS ARGUMENT'                 00075500
              MNOTE 8,' &ZMS ARE REQUIRED.'                             00075600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00075700
.ZG5C         ANOP  ,                                                   00075800
.*-------------------------------------------------------------------   00075900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00076000
              AIF   (K'&ZXCLASS LE 0).ZG5R      NOT I/O                 00076100
              AIF   ('&XCLASS'(1,1) NE '(').ZG5R                        00076200
&ZCGPR        SETC  '&XCLASS'(2,K'&XCLASS-2)                            00076300
              AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                         00076400
              AIF   (K'&ZCGPR GT 2).ZG5Q                                00076500
              AIF   ('&ZCGPR' EQ '0').ZG5Q                              00076600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00076700
              AIF   (T'&ZCGPR NE 'N').ZG5Q      INVALID REG NAME        00076800
.ZG5P         ANOP  ,                                                   00076900
              AIF   (T'&ZCGPR NE 'N').ZG5R      NON NUMERIC             00077000
              AIF   ('&ZCGPR' LT '2').ZG5Q                              00077100
              AIF   ('&ZCGPR' LE '12').ZG5R                             00077200
.ZG5Q         ANOP  ,                                                   00077300
&ZMS          SETC  '"CLASS='   *KGPRA* MNOTE                           00077400
&ZMS          SETC  '&ZMS.&CLASS"'                                      00077500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00077600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00077700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00077800
.ZG5R         ANOP  ,                                                   00077900
.*----------------------------------------------------------------***   00078000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00078100
              AIF   (N'&MAJLEN LE 1).ZG8A       CK NUM                  00078200
&ZMS          SETC  '"MAJLEN='  *KPOSA* MNOTE                           00078300
&ZMS          SETC  '&ZMS.&MAJLEN"'                                     00078400
&ZMS          SETC  '&ZMS "MAJLEN"'                                     00078500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00078600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00078700
.ZG8A         ANOP  ,                                                   00078800
.*-------------------------------------------------------------------   00078900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00079000
&ZXMAJLEN     SETC  'INPUT'     SET IN/OUTPUT                           00079100
&XMAJLEN      SETC  'NO_DEFAULT'                                        00079200
              AIF   (K'&MAJLEN(1) LE 0).ZG8B    PARM                    00079300
&XMAJLEN      SETC  '&MAJLEN(1)'                SET XVARIABLE           00079400
              AIF   (N'&MAJLEN GT 1).ZG8B       MULTI PARMS             00079500
&XMAJLEN      SETC  '&MAJLEN'   SET XVARIABLE                           00079600
.ZG8B         ANOP  ,                                                   00079700
.*-------------------------------------------------------------------   00079800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00079900
              AIF   (K'&ZXMAJLEN LE 0).ZG8R     NOT I/O                 00080000
              AIF   ('&XMAJLEN' EQ 'NO_DEFAULT').ZG8R                   00080100
              AIF   ('&XMAJLEN'(1,1) NE '(').ZG8R                       00080200
&ZCGPR        SETC  '&XMAJLEN'(2,K'&XMAJLEN-2)                          00080300
              AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                         00080400
              AIF   (K'&ZCGPR GT 2).ZG8Q                                00080500
              AIF   ('&ZCGPR' EQ '0').ZG8Q                              00080600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00080700
              AIF   (T'&ZCGPR NE 'N').ZG8Q      INVALID REG NAME        00080800
.ZG8P         ANOP  ,                                                   00080900
              AIF   (T'&ZCGPR NE 'N').ZG8R      NON NUMERIC             00081000
              AIF   ('&ZCGPR' LT '2').ZG8Q                              00081100
              AIF   ('&ZCGPR' LE '12').ZG8R                             00081200
.ZG8Q         ANOP  ,                                                   00081300
&ZMS          SETC  '"MAJLEN='  *KGPRA* MNOTE                           00081400
&ZMS          SETC  '&ZMS.&MAJLEN"'                                     00081500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00081600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00081700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00081800
.ZG8R         ANOP  ,                                                   00081900
.*----------------------------------------------------------------***   00082000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00082100
              AIF   (N'&MINLEN LE 1).ZG11A      CK NUM                  00082200
&ZMS          SETC  '"MINLEN='  *KPOSA* MNOTE                           00082300
&ZMS          SETC  '&ZMS.&MINLEN"'                                     00082400
&ZMS          SETC  '&ZMS "MINLEN"'                                     00082500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00082600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00082700
.ZG11A        ANOP  ,                                                   00082800
.*-------------------------------------------------------------------   00082900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00083000
&ZXMINLEN     SETC  'INPUT'     SET IN/OUTPUT                           00083100
&XMINLEN      SETC  'NO_DEFAULT'                                        00083200
              AIF   (K'&MINLEN(1) LE 0).ZG11B   PARM                    00083300
&XMINLEN      SETC  '&MINLEN(1)'                SET XVARIABLE           00083400
              AIF   (N'&MINLEN GT 1).ZG11B      MULTI PARMS             00083500
&XMINLEN      SETC  '&MINLEN'   SET XVARIABLE                           00083600
.ZG11B        ANOP  ,                                                   00083700
.*-------------------------------------------------------------------   00083800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00083900
              AIF   (K'&ZXMINLEN LE 0).ZG11R    NOT I/O                 00084000
              AIF   ('&XMINLEN' EQ 'NO_DEFAULT').ZG11R                  00084100
              AIF   ('&XMINLEN'(1,1) NE '(').ZG11R                      00084200
&ZCGPR        SETC  '&XMINLEN'(2,K'&XMINLEN-2)                          00084300
              AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                        00084400
              AIF   (K'&ZCGPR GT 2).ZG11Q                               00084500
              AIF   ('&ZCGPR' EQ '0').ZG11Q                             00084600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00084700
              AIF   (T'&ZCGPR NE 'N').ZG11Q     INVALID REG NAME        00084800
.ZG11P        ANOP  ,                                                   00084900
              AIF   (T'&ZCGPR NE 'N').ZG11R     NON NUMERIC             00085000
              AIF   ('&ZCGPR' LT '2').ZG11Q                             00085100
              AIF   ('&ZCGPR' LE '12').ZG11R                            00085200
.ZG11Q        ANOP  ,                                                   00085300
&ZMS          SETC  '"MINLEN='  *KGPRA* MNOTE                           00085400
&ZMS          SETC  '&ZMS.&MINLEN"'                                     00085500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00085600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00085700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00085800
.ZG11R        ANOP  ,                                                   00085900
.*----------------------------------------------------------------***   00086000
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00086100
              AIF   (N'&TRIM LE 1).ZG14A        CK NUM                  00086200
&ZMS          SETC  '"TRIM='    *KPOSA* MNOTE                           00086300
&ZMS          SETC  '&ZMS.&TRIM"'                                       00086400
&ZMS          SETC  '&ZMS "TRIM"'                                       00086500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00086600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00086700
.ZG14A        ANOP  ,                                                   00086800
.*-------------------------------------------------------------------   00086900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00087000
&XTRIM        SETC  ''          INITIALIZE XVARIABLE                    00087100
.ZG15A   AIF   ('&TRIM(1)' NE 'ON').ZG16A                               00087200
&XTRIM        SETC  'ON'        SET KEYWORD                             00087300
.*-------------------------------------------------------------------   00087400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00087500
.ZG16A   AIF   ('&TRIM(1)' NE 'OFF').ZG17A                              00087600
&XTRIM        SETC  'OFF'       SET KEYWORD                             00087700
.*-------------------------------------------------------------------   00087800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00087900
.ZG17A        AIF   (K'&XTRIM GT 0).ZG17C       KEYWORD                 00088000
              AIF   (K'&TRIM(1) LE 0).ZG17B                             00088100
&ZMS          SETC  '"TRIM='    *KUKWA* MNOTE                           00088200
&ZMS          SETC  '&ZMS.&TRIM"'                                       00088300
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00088400
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00088500
&ZMS          SETC  '&ZMS "ON"'                 VALID KEYWORD           00088600
&ZMS          SETC  '&ZMS OR "OFF".'            VALID KEYWORD           00088700
              MNOTE 8,' &ZMS '                                          00088800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00088900
.ZG17B        ANOP  ,                                                   00089000
&XTRIM        SETC  'ON'        SET DEFAULT KEYWORD                     00089100
.ZG17C        ANOP  ,                                                   00089200
&ZXTRIM       SETC  'INPUT'     SET IN/OUTPUT                           00089300
.*----------------------------------------------------------------***   00089400
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00089500
              AIF   (N'&AUTHRET LE 1).ZG19A     CK NUM                  00089600
&ZMS          SETC  '"AUTHRET='                 *KPOSA* MNOTE           00089700
&ZMS          SETC  '&ZMS.&AUTHRET"'                                    00089800
&ZMS          SETC  '&ZMS "AUTHRET"'                                    00089900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00090000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00090100
.ZG19A        ANOP  ,                                                   00090200
.*-------------------------------------------------------------------   00090300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00090400
&XAUTHRET     SETC  ''          INITIALIZE XVARIABLE                    00090500
.ZG20A   AIF   ('&AUTHRET(1)' NE 'NO').ZG21A                            00090600
&XAUTHRET     SETC  'NO'        SET KEYWORD                             00090700
.*-------------------------------------------------------------------   00090800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00090900
.ZG21A   AIF   ('&AUTHRET(1)' NE 'YES').ZG22A                           00091000
&XAUTHRET     SETC  'YES'       SET KEYWORD                             00091100
.*-------------------------------------------------------------------   00091200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00091300
.ZG22A        AIF   (K'&XAUTHRET GT 0).ZG22C    KEYWORD                 00091400
              AIF   (K'&AUTHRET(1) LE 0).ZG22B                          00091500
&ZMS          SETC  '"AUTHRET='                 *KUKWA* MNOTE           00091600
&ZMS          SETC  '&ZMS.&AUTHRET"'                                    00091700
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00091800
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00091900
&ZMS          SETC  '&ZMS "NO"'                 VALID KEYWORD           00092000
&ZMS          SETC  '&ZMS OR "YES".'            VALID KEYWORD           00092100
              MNOTE 8,' &ZMS '                                          00092200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00092300
.ZG22B        ANOP  ,                                                   00092400
&XAUTHRET     SETC  'NO'        SET DEFAULT KEYWORD                     00092500
.ZG22C        ANOP  ,                                                   00092600
&ZXAUTHRET    SETC  'INPUT'     SET IN/OUTPUT                           00092700
.*----------------------------------------------------------------***   00092800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00092900
              AIF   (N'&RETCODE LE 1).ZG24A     CK NUM                  00093000
&ZMS          SETC  '"RETCODE='                 *KPOSA* MNOTE           00093100
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00093200
&ZMS          SETC  '&ZMS "RETCODE"'                                    00093300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00093400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00093500
.ZG24A        ANOP  ,                                                   00093600
.*-------------------------------------------------------------------   00093700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00093800
              AIF   (K'&RETCODE(1) LE 0).ZG24C  NO PARM                 00093900
&ZXRETCODE    SETC  'OUTPUT'    SET OUTPUT                              00094000
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE           00094100
              AIF   (N'&RETCODE GT 1).ZG24C                             00094200
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                           00094300
.ZG24C        ANOP  ,                                                   00094400
.*-------------------------------------------------------------------   00094500
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00094600
              AIF   (K'&ZXRETCODE LE 0).ZG24R   NOT I/O                 00094700
              AIF   ('&XRETCODE'(1,1) NE '(').ZG24R                     00094800
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                        00094900
              AIF   ('&ZCGPR'(1,1) NE '0').ZG24P                        00095000
              AIF   (K'&ZCGPR GT 2).ZG24Q                               00095100
              AIF   ('&ZCGPR' EQ '0').ZG24Q                             00095200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00095300
              AIF   (T'&ZCGPR NE 'N').ZG24Q     INVALID REG NAME        00095400
.ZG24P        ANOP  ,                                                   00095500
              AIF   (T'&ZCGPR NE 'N').ZG24R     NON NUMERIC             00095600
              AIF   ('&ZCGPR' LT '2').ZG24Q                             00095700
              AIF   ('&ZCGPR' LE '12').ZG24R                            00095800
.ZG24Q        ANOP  ,                                                   00095900
&ZMS          SETC  '"RETCODE='                 *KGPRA* MNOTE           00096000
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00096100
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00096200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00096300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00096400
.ZG24R        ANOP  ,                                                   00096500
.*----------------------------------------------------------------***   00096600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00096700
              AIF   (N'&RSNCODE LE 1).ZG27A     CK NUM                  00096800
&ZMS          SETC  '"RSNCODE='                 *KPOSA* MNOTE           00096900
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00097000
&ZMS          SETC  '&ZMS "RSNCODE"'                                    00097100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00097200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00097300
.ZG27A        ANOP  ,                                                   00097400
.*-------------------------------------------------------------------   00097500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00097600
              AIF   (K'&RSNCODE(1) LE 0).ZG27C  NO PARM                 00097700
&ZXRSNCODE    SETC  'OUTPUT'    SET OUTPUT                              00097800
&XRSNCODE     SETC  '&RSNCODE(1)'               SET XVARIABLE           00097900
              AIF   (N'&RSNCODE GT 1).ZG27C                             00098000
&XRSNCODE     SETC  '&RSNCODE'  SET XVARIABLE                           00098100
.ZG27C        ANOP  ,                                                   00098200
.*-------------------------------------------------------------------   00098300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00098400
              AIF   (K'&ZXRSNCODE LE 0).ZG27R   NOT I/O                 00098500
              AIF   ('&XRSNCODE'(1,1) NE '(').ZG27R                     00098600
&ZCGPR        SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                        00098700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG27P                        00098800
              AIF   (K'&ZCGPR GT 2).ZG27Q                               00098900
              AIF   ('&ZCGPR' EQ '0').ZG27Q                             00099000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00099100
              AIF   (T'&ZCGPR NE 'N').ZG27Q     INVALID REG NAME        00099200
.ZG27P        ANOP  ,                                                   00099300
              AIF   (T'&ZCGPR NE 'N').ZG27R     NON NUMERIC             00099400
              AIF   ('&ZCGPR' LT '2').ZG27Q                             00099500
              AIF   ('&ZCGPR' LE '12').ZG27R                            00099600
.ZG27Q        ANOP  ,                                                   00099700
&ZMS          SETC  '"RSNCODE='                 *KGPRA* MNOTE           00099800
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00099900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00100000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00100100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00100200
.ZG27R        ANOP  ,                                                   00100300
.******************************************************************     00100400
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00100500
.******************************************************************     00100600
              ACTR  10000                                               00100700
.*----------------------------------------------------------------***   00100800
.***AH.P02 EXTRA POSITIONALS                                            00100900
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS               00101000
              AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL                00101100
              AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL            00101200
              AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL             00101300
.ZGLISTX1     ANOP  ,                                                   00101400
&ZCVAL        SETC  ''          ERROR FIELD                             00101500
&ZAWRK        SETA  0           POSITIONAL NUMBER                       00101600
.ZGLIST2      ANOP  ,                                                   00101700
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         00101800
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                00101900
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   00102000
              AGO   .ZGLIST2                                            00102100
.*                                                                      00102200
.ZGLIST3      ANOP  ,                                                   00102300
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             00102400
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'   *PPOSA* MNOTE           00102500
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     00102600
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              00102700
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      00102800
              MNOTE 8,' &ZMS ARE ALLOWED.'                              00102900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00103000
.ZGLISTX      ANOP  ,                                                   00103100
&ZASYSLNDX    SETA  0                                                   00103200
.*-------------------------------------------------------------------   00103300
.***AG.MF04 MF=(SLE)                                                    00103400
.ZGMFX        ANOP  ,           END OF FULL SYNTAX CHECK                00103500
.*******************************************************************    00103600
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00103700
.*******************************************************************    00103800
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          00103900
.*******************************************************************    00104000
.***AE.01  START OF COFDEFIN MACRO CODE                                 00104100
.*******************************************************************    00104200
              LCLC  &M0M0001                 NAME                       00104300
&M0M0001      SETC  '&XLABEL'                SET NAME                   00104400
              AIF   (K'&XLABEL NE 0).XLAB2                              00104500
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT NAME               00104600
.*                                                                      00104700
.XLAB2        ANOP  ,                                                   00104800
&M0M0001 DS    0H                             COFDEFIN-1                00104900
.*******************************************************************    00105000
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00105100
.*******************************************************************    00105200
              PUSH  PRINT                                               00105300
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          00105400
              PRINT OFF         ++ PR01                                 00105500
              AGO   .ZPRNTXX                                            00105600
.ZPRINTX      PRINT ON                                                  00105700
.ZPRNTXX      ANOP  ,                                                   00105800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00105900
.*-----------BAL macro code-------------                                00106000
         AIF    ('&XMF' EQ 'L').LFORM1                                  00106100
         LA     15,40               .Set VLF not active return code     00106200
         SLR    0,0                 .Clear VLF reason code              00106300
         AIF    ('&SYSASCE' EQ 'P').NOTAR1  Systate Primary             00106400
         SAR    14,0                .Clear the AR                       00106500
.NOTAR1  ANOP                                                           00106600
         L      14,16               .Get CVT addressability             00106700
         L      14,200(14)          .Get SCVT addressability            00106800
         ICM    14,15,156(14)                                           00106900
         BZ     AMGE&SYSNDX         .Bypass if VLF is not active        00107000
         ICM    14,15,8(14)                                             00107100
         BZ     AMGE&SYSNDX         .Bypass if VLF is not active        00107200
         ICM    14,15,4(14)                                             00107300
         BZ     AMGE&SYSNDX         .Bypass if VLF is not active        00107400
         LR     15,14               .Save value around parm list build  00107500
.LFORM1  ANOP                                                           00107600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00107700
.********************************************************************   00107800
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00107900
.********************************************************************   00108000
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00108100
                      LCLA  &ZOPN1         INVOCATION INDEX             00108200
                      LCLC  &ZOPL(4095)    LABEL                        00108300
                      LCLC  &ZOPO(4095)    OPERATION                    00108400
                      LCLC  &ZOPV(4095)    VALUE                        00108500
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00108600
.*                                                                      00108700
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00108800
.******************************************************************     00108900
.***AL.L10 COFDEFIN FMT=LIST MF=S|L PARAMETERS                          00109000
.******************************************************************     00109100
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00109200
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00109300
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00109400
&XMFATTR              SETC  '0D'                                        00109500
.*                                                                      00109600
&ZOPN                 SETA  &ZOPN+1                                     00109700
&ZOPL(&ZOPN)          SETC  ' '                                         00109800
&ZOPO(&ZOPN)          SETC  'B'                                         00109900
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00110000
&ZOPD(&ZOPN)          SETC  '++ COFDEFIN ARG PARMS'                     00110100
.*                                                                      00110200
&ZOPN                 SETA  &ZOPN+1                                     00110300
&ZOPL(&ZOPN)          SETC  ' '                                         00110400
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00110500
&ZOPV(&ZOPN)          SETC  '1'                                         00110600
&ZOPD(&ZOPN)          SETC  ' '                                         00110700
.*                                                                      00110800
.ZLMFSL2              ANOP  ,                                           00110900
.*-------------------------------------------------------------------   00111000
.***AM.L01  COFDEFIN FMT=LIST PARAMETERS                                00111100
&ZOPN                 SETA &ZOPN+1                                      00111200
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00111300
&ZOPO(&ZOPN)          SETC 'DS'                                         00111400
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00111500
&ZOPD(&ZOPN)          SETC '++ COFDEFIN PARM LIST'                      00111600
.*-------------------------------------------------------------------   00111700
.***AM.L02 XVERSION XL1                                                 00111800
&ZOPN                 SETA &ZOPN+1                                      00111900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00112000
&ZOPO(&ZOPN)          SETC 'DS'                                         00112100
&ZOPV(&ZOPN)          SETC 'XL1'                                        00112200
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00112300
.*-------------------------------------------------------------------   00112400
.***AM.L03 XFLAGS BL.8                                                  00112500
&ZOPN                 SETA &ZOPN+1                                      00112600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS'                           00112700
&ZOPO(&ZOPN)          SETC 'DS'                                         00112800
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00112900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00113000
.*                                                                      00113100
&ZOPN                 SETA  &ZOPN+1                                     00113200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTRIM_ON'                        00113300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00113400
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00113500
&ZOPD(&ZOPN)          SETC  '++ XTRIM.'                                 00113600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ON'                           00113700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00113800
.*                                                                      00113900
&ZOPN                 SETA  &ZOPN+1                                     00114000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTRIM_OFF'                       00114100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00114200
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00114300
&ZOPD(&ZOPN)          SETC  '++ XTRIM.'                                 00114400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).OFF'                          00114500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00114600
.*                                                                      00114700
&ZOPN                 SETA  &ZOPN+1                                     00114800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XAUTHRET_NO'                     00114900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00115000
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00115100
&ZOPD(&ZOPN)          SETC  '++ XAUTHRET.'                              00115200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           00115300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00115400
.*                                                                      00115500
&ZOPN                 SETA  &ZOPN+1                                     00115600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XAUTHRET_YES'                    00115700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00115800
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00115900
&ZOPD(&ZOPN)          SETC  '++ XAUTHRET.'                              00116000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00116100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00116200
.*-------------------------------------------------------------------   00116300
.***AM.L09  XMINLEN XL1                                                 00116400
&ZOPN                 SETA &ZOPN+1                                      00116500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMINLEN'                          00116600
&ZOPO(&ZOPN)          SETC 'DS'                                         00116700
&ZOPV(&ZOPN)          SETC 'XL1'                                        00116800
&ZOPD(&ZOPN)          SETC '++ &ZXMINLEN  XMINLEN'                      00116900
.*-------------------------------------------------------------------   00117000
.***AM.L09  XMAJLEN XL1                                                 00117100
&ZOPN                 SETA &ZOPN+1                                      00117200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMAJLEN'                          00117300
&ZOPO(&ZOPN)          SETC 'DS'                                         00117400
&ZOPV(&ZOPN)          SETC 'XL1'                                        00117500
&ZOPD(&ZOPN)          SETC '++ &ZXMAJLEN  XMAJLEN'                      00117600
.*-------------------------------------------------------------------   00117700
.***AM.L09  XCLASS CL7                                                  00117800
&ZOPN                 SETA &ZOPN+1                                      00117900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCLASS'                           00118000
&ZOPO(&ZOPN)          SETC 'DS'                                         00118100
&ZOPV(&ZOPN)          SETC 'CL7'                                        00118200
&ZOPD(&ZOPN)          SETC '++ &ZXCLASS  XCLASS'                        00118300
.*-------------------------------------------------------------------   00118400
.***AM.L10 END OF COFDEFIN LIST PARAMETERS                              00118500
&ZOPN                 SETA &ZOPN+1                                      00118600
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00118700
&ZOPO(&ZOPN)          SETC 'EQU'                                        00118800
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00118900
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00119000
.*                                                                      00119100
&ZOPN                 SETA &ZOPN+1                                      00119200
&ZOPL(&ZOPN)          SETC ' '                                          00119300
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00119400
&ZOPV(&ZOPN)          SETC '1'                                          00119500
&ZOPD(&ZOPN)          SETC ' '                                          00119600
.*-------------------------------------------------------------------   00119700
.***AL.L12 COFDEFIN FMT=LIST MF=S|L PARAMETERS                          00119800
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00119900
.*                                                                      00120000
&ZOPN                 SETA  &ZOPN+1                                     00120100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00120200
&ZOPO(&ZOPN)          SETC  'DC'                                        00120300
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00120400
&ZOPD(&ZOPN)          SETC  '++ COFDEFIN ARG PARMS'                     00120500
.*                                                                      00120600
.ZLMFSLX              ANOP  ,                                           00120700
.*-------------------------------------------------------------------   00120800
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00120900
&ZPLLEN               SETA 11                                           00121000
.*                                                                      00121100
.******************************************************************     00121200
.***AI.L01 COFDEFIN FMT=LIST FILL IN PARAMETER AREA                     00121300
.******************************************************************     00121400
                      ACTR  10000                                       00121500
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00121600
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00121700
&ZCVAL                SETC  'LAE'          XAX MODE                     00121800
.ZIMFXA               ANOP ,                                            00121900
.*                                                                      00122000
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00122100
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00122200
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00122300
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00122400
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00122500
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00122600
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00122700
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00122800
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00122900
&ZOPN                 SETA  &ZOPN+1                                     00123000
&ZOPL(&ZOPN)          SETC  ' '                                         00123100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00123200
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00123300
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00123400
                      AGO   .ZIMFNX                                     00123500
.*                                                                      00123600
.ZIMFN2               ANOP ,                                            00123700
&ZOPN                 SETA  &ZOPN+1                                     00123800
&ZOPL(&ZOPN)          SETC  ' '                                         00123900
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00124000
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00124100
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00124200
.ZIMFNX               ANOP ,                                            00124300
.********************************************************************   00124400
.***AI.L02 COFDEFIN FMT=LIST INITIALIZE PARAMETER AREA                  00124500
.********************************************************************   00124600
.***AI.L03 MF=(SLE)                                                     00124700
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00124800
.*                                                                      00124900
&ZOPN                 SETA  &ZOPN+1                                     00125000
&ZOPL(&ZOPN)          SETC  ' '                                         00125100
&ZOPO(&ZOPN)          SETC  'XC'                                        00125200
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00125300
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00125400
.ZIMFLX               ANOP  ,                                           00125500
.*-------------------------------------------------------------------   00125600
.***AI.L04A XVERSION XL1                                                00125700
                      AIF   (&XPLISTVER EQ 0).ZIMFVW                    00125800
&ZOPN                 SETA  &ZOPN+1                                     00125900
&ZOPL(&ZOPN)          SETC  ' '                                         00126000
&ZOPO(&ZOPN)          SETC  'MVI'                                       00126100
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00126200
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00126300
.ZIMFVW               ANOP  ,                                           00126400
.*-------------------------------------------------------------------   00126500
.***AI.L05 XFLAGS BL1                                                   00126600
&ZW                   SETC  ''                                          00126700
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00126800
.*-------------------------------------------------------------------   00126900
.***AI.L08 XFLAGS "ON"                                                  00127000
.***      BL1'1XXXXXXX'                                                 00127100
         AIF   ('&XTRIM' NE 'ON').ZI3A                                  00127200
&ZW                   SETC  '&ZW.1'                                     00127300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00127400
                      AGO   .ZI3C                                       00127500
.*                                                                      00127600
.ZI3A                 ANOP  ,                                           00127700
&ZW                   SETC  '&ZW.0'                                     00127800
.ZI3C                 ANOP  ,                                           00127900
.*-------------------------------------------------------------------   00128000
.***AI.L08 XFLAGS "OFF"                                                 00128100
.***      BL1'X1XXXXXX'                                                 00128200
         AIF   ('&XTRIM' NE 'OFF').ZI4A                                 00128300
&ZW                   SETC  '&ZW.1'                                     00128400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00128500
                      AGO   .ZI4C                                       00128600
.*                                                                      00128700
.ZI4A                 ANOP  ,                                           00128800
&ZW                   SETC  '&ZW.0'                                     00128900
.ZI4C                 ANOP  ,                                           00129000
.*-------------------------------------------------------------------   00129100
.***AI.L08 XFLAGS "NO"                                                  00129200
.***      BL1'XX1XXXXX'                                                 00129300
         AIF   ('&XAUTHRET' NE 'NO').ZI5A                               00129400
&ZW                   SETC  '&ZW.1'                                     00129500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00129600
                      AGO   .ZI5C                                       00129700
.*                                                                      00129800
.ZI5A                 ANOP  ,                                           00129900
&ZW                   SETC  '&ZW.0'                                     00130000
.ZI5C                 ANOP  ,                                           00130100
.*-------------------------------------------------------------------   00130200
.***AI.L08 XFLAGS "YES"                                                 00130300
.***      BL1'XXX1XXXX'                                                 00130400
         AIF   ('&XAUTHRET' NE 'YES').ZI6A                              00130500
&ZW                   SETC  '&ZW.10000'                                 00130600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00130700
                      AGO   .ZI6C                                       00130800
.*                                                                      00130900
.ZI6A                 ANOP  ,                                           00131000
&ZW                   SETC  '&ZW.00000'                                 00131100
.ZI6C                 ANOP  ,                                           00131200
.*-------------------------------------------------------------------   00131300
.***AI.L11 XFLAGS BL1                                                   00131400
                      AIF   ('&ZCLNG' NE 'YES').ZI6E  ALL ZERO BITS     00131500
&ZOPN                 SETA  &ZOPN+1                                     00131600
&ZOPL(&ZOPN)          SETC  ' '                                         00131700
&ZOPO(&ZOPN)          SETC  'OI'                                        00131800
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZW'''                             00131900
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00132000
.ZI6E                 ANOP  ,                                           00132100
.*-------------------------------------------------------------------   00132200
.***AI.L18  XMINLEN XL1                                                 00132300
         AIF   ('&XMINLEN' NE 'NO_DEFAULT').ZI7                         00132400
&ZXMINLEN             SETC  ''             RESET INPUT/OUTPUT           00132500
.ZI7                  ANOP  ,                                           00132600
.*-------------------------------------------------------------------   00132700
.***AI.L25  XMINLEN XL1                                                 00132800
                      AIF   ('&ZXMINLEN' EQ '').ZI7E  NOT USED          00132900
                      AIF   ('&ZXMINLEN' EQ 'OUTPUT').ZI7E              00133000
&ZCGPR                SETC  '&XMINLEN'                                  00133100
.*                                                                      00133200
                      AIF   ('&XMINLEN'(1,1) NE '(').ZI7B               00133300
&ZCGPR   SETC  '0('.'&XMINLEN'(2,K'&XMINLEN-2).')'                      00133400
                      AGO   .ZI7D                                       00133500
.ZI7B                 ANOP  ,                                           00133600
.*                                                                      00133700
&ZC                   SETC  '&XMINLEN'(1,1)                             00133800
                      AIF   (T'&ZC NE 'N').ZI7D                         00133900
&ZC                   SETC  '&XMINLEN'                                  00134000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI7D                00134100
&ZCGPR                SETC  '=AL1(&XMINLEN)'                            00134200
.*                                                                      00134300
.ZI7D                 ANOP  ,                                           00134400
.*                                                                      00134500
&ZOPN                 SETA  &ZOPN+1                                     00134600
&ZOPL(&ZOPN)          SETC  ' '                                         00134700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00134800
&ZOPV(&ZOPN)          SETC  '2(1,1),&ZCGPR'                             00134900
&ZOPD(&ZOPN)          SETC  '++ &ZXMINLEN XMINLEN XL1'                  00135000
.*                                                                      00135100
.ZI7E                 ANOP  ,                                           00135200
.*-------------------------------------------------------------------   00135300
.***AI.L18  XMAJLEN XL1                                                 00135400
         AIF   ('&XMAJLEN' NE 'NO_DEFAULT').ZI8                         00135500
&ZXMAJLEN             SETC  ''             RESET INPUT/OUTPUT           00135600
.ZI8                  ANOP  ,                                           00135700
.*-------------------------------------------------------------------   00135800
.***AI.L25  XMAJLEN XL1                                                 00135900
                      AIF   ('&ZXMAJLEN' EQ '').ZI8E  NOT USED          00136000
                      AIF   ('&ZXMAJLEN' EQ 'OUTPUT').ZI8E              00136100
&ZCGPR                SETC  '&XMAJLEN'                                  00136200
.*                                                                      00136300
                      AIF   ('&XMAJLEN'(1,1) NE '(').ZI8B               00136400
&ZCGPR   SETC  '0('.'&XMAJLEN'(2,K'&XMAJLEN-2).')'                      00136500
                      AGO   .ZI8D                                       00136600
.ZI8B                 ANOP  ,                                           00136700
.*                                                                      00136800
&ZC                   SETC  '&XMAJLEN'(1,1)                             00136900
                      AIF   (T'&ZC NE 'N').ZI8D                         00137000
&ZC                   SETC  '&XMAJLEN'                                  00137100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI8D                00137200
&ZCGPR                SETC  '=AL1(&XMAJLEN)'                            00137300
.*                                                                      00137400
.ZI8D                 ANOP  ,                                           00137500
.*                                                                      00137600
&ZOPN                 SETA  &ZOPN+1                                     00137700
&ZOPL(&ZOPN)          SETC  ' '                                         00137800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00137900
&ZOPV(&ZOPN)          SETC  '3(1,1),&ZCGPR'                             00138000
&ZOPD(&ZOPN)          SETC  '++ &ZXMAJLEN XMAJLEN XL1'                  00138100
.*                                                                      00138200
.ZI8E                 ANOP  ,                                           00138300
.*-------------------------------------------------------------------   00138400
.***AI.L25  XCLASS CL7                                                  00138500
                      AIF   ('&ZXCLASS' EQ '').ZI9E  NOT USED           00138600
                      AIF   ('&ZXCLASS' EQ 'OUTPUT').ZI9E               00138700
&ZCGPR                SETC  '&XCLASS'                                   00138800
.*                                                                      00138900
                      AIF   ('&XCLASS'(1,1) NE '(').ZI9B                00139000
&ZCGPR   SETC  '0('.'&XCLASS'(2,K'&XCLASS-2).')'                        00139100
.ZI9B                 ANOP  ,                                           00139200
.*                                                                      00139300
&ZOPN                 SETA  &ZOPN+1                                     00139400
&ZOPL(&ZOPN)          SETC  ' '                                         00139500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00139600
&ZOPV(&ZOPN)          SETC  '4(7,1),&ZCGPR'                             00139700
&ZOPD(&ZOPN)          SETC  '++ &ZXCLASS XCLASS CL7'                    00139800
.*                                                                      00139900
.ZI9E                 ANOP  ,                                           00140000
.*-------------------------------------------------------------------   00140100
&ZOPN1                SETA &ZOPN                                        00140200
.*******************************************************************    00140300
.***  PROCESS COFDEFIN OUTPUT PARAMETERS                                00140400
.*******************************************************************    00140500
                      ACTR  10000                                       00140600
.*******************************************************************    00140700
.***AO.X01  LABEL TO BYPASS INVOCATION                                  00140800
.*******************************************************************    00140900
&ZOPN                 SETA  &ZOPN+1                                     00141000
&ZOPL(&ZOPN)          SETC  'AMGE&SYSNDX'                               00141100
&ZOPO(&ZOPN)          SETC  'DS'                                        00141200
&ZOPV(&ZOPN)          SETC  '0H'                                        00141300
&ZOPD(&ZOPN)          SETC  '++ BYPASS INVOCATION'                      00141400
.*******************************************************************    00141500
.***AO.X02  RETURN CODE PROCESSING                                      00141600
.*******************************************************************    00141700
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00141800
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00141900
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00142000
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00142100
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00142200
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00142300
&ZOPN                 SETA  &ZOPN+1                                     00142400
&ZOPL(&ZOPN)          SETC  ' '                                         00142500
&ZOPO(&ZOPN)          SETC  'ST'                                        00142600
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00142700
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00142800
                      AGO   .ZMRETX                                     00142900
.*                                                                      00143000
.ZMRET2               ANOP  ,                                           00143100
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00143200
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00143300
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00143400
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00143500
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00143600
&ZOPN                 SETA  &ZOPN+1                                     00143700
&ZOPL(&ZOPN)          SETC  ' '                                         00143800
&ZOPO(&ZOPN)          SETC  'LR'                                        00143900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00144000
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00144100
.ZMRETX               ANOP  ,                                           00144200
.*******************************************************************    00144300
.***AO.X03  REASON CODE PROCESSING                                      00144400
.*******************************************************************    00144500
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00144600
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00144700
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00144800
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00144900
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00145000
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00145100
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00145200
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00145300
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00145400
&ZOPN                 SETA  &ZOPN+1                                     00145500
&ZOPL(&ZOPN)          SETC  ' '                                         00145600
&ZOPO(&ZOPN)          SETC  'ST'                                        00145700
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00145800
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00145900
                      AGO   .ZMRSNX                                     00146000
.*                                                                      00146100
.ZMRSN2               ANOP  ,                                           00146200
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00146300
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00146400
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00146500
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00146600
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00146700
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00146800
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00146900
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00147000
&ZOPN                 SETA  &ZOPN+1                                     00147100
&ZOPL(&ZOPN)          SETC  ' '                                         00147200
&ZOPO(&ZOPN)          SETC  'LR'                                        00147300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00147400
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00147500
.ZMRSNX               ANOP  ,                                           00147600
.*******************************************************************    00147700
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00147800
.*******************************************************************    00147900
.ZMFLX                ANOP  ,              MF=L PROCESSING              00148000
.*******************************************************************    00148100
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00148200
.*******************************************************************    00148300
                      ACTR  10000                                       00148400
.*                                                                      00148500
                      LCLA  &ZLC           COLUMN POSITION              00148600
                      LCLA  &ZOPX          LIST TABLE INDEX             00148700
                      LCLC  &ZLL           LABEL                        00148800
                      LCLC  &ZLOP          OPERATION                    00148900
                      LCLC  &ZLV           VALUE                        00149000
                      LCLC  &ZLD           DESCRIPTION                  00149100
.*                                                                      00149200
&ZOPX                 SETA  1                                           00149300
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00149400
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00149500
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00149600
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00149700
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00149800
                      AIF   (K'&ZLD LE 0).ZL5                           00149900
&ZLC                  SETA  35             COMMENT COLUMN               00150000
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00150100
&ZLC                  SETA  33             COMMMENT COLUMN              00150200
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00150300
&ZLV                  SETC  '&ZLV'.' '                                  00150400
                      AGO   .ZL3                                        00150500
.*                                                                      00150600
.ZL4                  ANOP  ,                                           00150700
&ZLV                  SETC  '&ZLV'.' '                                  00150800
.ZL5                  ANOP  ,                                           00150900
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00151000
.*                                                                      00151100
&ZLL     &ZLOP &ZLV                                                     00151200
.*                                                                      00151300
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00151400
                      AGO   .ZL2           CONTINUE LOOPING             00151500
.*                                                                      00151600
.ZLX                  ANOP  ,                                           00151700
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00151800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00151900
        AIF      ('&XMF' EQ 'L').LFORM2                                 00152000
        PC       0(15)               .PC to COFMDEFI                    00152100
.LFORM2  ANOP                                                           00152200
.*-----------BAL macro code-------------                                00152300
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00152400
.ZLINKX               ANOP  ,                                           00152500
.*******************************************************************    00152600
.***AP.X01  FORMAT GENERATED CODE                                       00152700
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00152800
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00152900
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00153000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00153100
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00153200
                      AIF   (K'&ZLD LE 0).ZL51                          00153300
&ZLC                  SETA  35             COMMENT COLUMN               00153400
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00153500
&ZLC                  SETA  33             COMMENT COLUMN               00153600
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00153700
&ZLV                  SETC  '&ZLV'.' '                                  00153800
                      AGO   .ZL31                                       00153900
.*                                                                      00154000
.ZL41                 ANOP  ,                                           00154100
&ZLV                  SETC  '&ZLV'.' '                                  00154200
.ZL51                 ANOP  ,                                           00154300
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00154400
.*                                                                      00154500
&ZLL     &ZLOP &ZLV                                                     00154600
.*                                                                      00154700
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00154800
                      AGO   .ZL21          CONTINUE LOOPING             00154900
.*                                                                      00155000
.ZLX1                 ANOP  ,                                           00155100
.*******************************************************************    00155200
.***AP.X02  END OF COFDEFIN MACRO                                       00155300
&ZCOFDEFIN            SETC  'YES'          SET COFDEFIN USED            00155400
         POP   PRINT                                                    00155500
*                                            COFDEFIN-1                 00155600
         SPACE 1                                                        00155700
.ZLX2                 ANOP  ,                                           00155800
         MEND                                                           00155900
**********************************************************************/ 00156000
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00156100
*%COFDEFIN: MACRO KEYS(PLISTVER,CLASS,MAJLEN,MINLEN,TRIM,AUTHRET,       00156200
*                 RETCODE,RSNCODE,MF);                                  00156300
*  ANS('?'||MACLABEL||' '||'COFDEFIP '||MACLIST||                       00156400
*         ' '||MACKEYS||';') COL(MACLMAR);                              00156500
*%END COFDEFIN;                                                         00156600
