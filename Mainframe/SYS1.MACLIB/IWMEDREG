*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMEDREG                              -00/07/19-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  WLM Enclave Deregister Service                * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5647-A01 (C) COPYRIGHT IBM CORP. 1999                           * 00001200
*                                                                     * 00001300
* STATUS= JBB6607                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The IWMEDREG service allows the caller to deregister an        * 00002100
*      enclave which it previously registered using the IWMEREG       * 00002200
*      service.  Deregistration is required as soon as the caller has * 00002300
*      finished using the enclave so that the enclave can eventually  * 00002400
*      be deleted. If enclave deletion was requested while the        * 00002500
*      enclave was registered, deletion occurs when the last          * 00002600
*      deregistration takes place.                                    * 00002700
*                                                                     * 00002800
*      The caller can run in task or SRB mode.                        * 00002900
*                                                                     * 00003000
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00003100
*                                                                     * 00003200
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00003300
*                                                                     * 00003400
*01* ENVIRONMENT:                                                     * 00003500
*                                                                     * 00003600
*                                                                     * 00003700
*      Minimum authorization: Supervisor state or program key mask    * 00003800
*                        (PKM) allowing keys 0-7.                     * 00003900
*                                                                     * 00004000
*      Dispatchable unit mode: Task or SRB mode.                      * 00004100
*                                                                     * 00004200
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00004300
*                                                                     * 00004400
*      AMODE:            31-bit.                                      * 00004500
*                                                                     * 00004600
*      ASC mode:         Primary or Access Register.                  * 00004700
*                                                                     * 00004800
*      Interrupt status: Enabled for I/O and external interrupts.     * 00004900
*                                                                     * 00005000
*      Locks:            No locks held.                               * 00005100
*                                                                     * 00005200
*      Control parameters: Control parameters must be in the primary  * 00005300
*                        address space.                               * 00005400
*                                                                     * 00005500
*                                                                     * 00005600
*                                                                     * 00005700
*01* PROGRAMMING REQUIREMENTS:                                        * 00005800
*                                                                     * 00005900
*                                                                     * 00006000
*    1.  The macro CVT must be included to use this macro.            * 00006100
*                                                                     * 00006200
*    2.  The macro IWMYCON must be included to use this macro.        * 00006300
*                                                                     * 00006400
*    3.  The macro IWMPB must be in the library concatenation, since  * 00006500
*        it is included by IWMYCON.                                   * 00006600
*                                                                     * 00006700
*    4.  Note that the high order halfword of register 0, and the     * 00006800
*        reason code variable when specified, may be non-zero and     * 00006900
*        represents diagnostic data which is NOT part of the external * 00007000
*        interface.  The high order halfword should thus be excluded  * 00007100
*        from comparison with the reason code values described above. * 00007200
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00007300
*        be used for this purpose.                                    * 00007400
*                                                                     * 00007500
*    5.  All character data, unless otherwise specified, is assumed   * 00007600
*        to be left justified and padded with blanks on the right, as * 00007700
*        needed, to occupy the specified number of bytes.             * 00007800
*                                                                     * 00007900
*    6.  Since this service may only be used by system-like code,     * 00008000
*        some validity checking on the parameter list is not          * 00008100
*        performed. These checks would only be needed if the macro    * 00008200
*        were not used to invoke the service routine.                 * 00008300
*                                                                     * 00008400
*                                                                     * 00008500
*                                                                     * 00008600
*01* RESTRICTIONS:                                                    * 00008700
*                                                                     * 00008800
*                                                                     * 00008900
*    1.  This macro may not be used prior to the completion of WLM    * 00009000
*        address space initialization.                                * 00009100
*                                                                     * 00009200
*    2.  This macro may only be used on MVS/ESA JBB6607 or higher.    * 00009300
*                                                                     * 00009400
*                                                                     * 00009500
*                                                                     * 00009600
*01* INPUT REGISTER INFORMATION:                                      * 00009700
*                                                                     * 00009800
*    Before issuing the IWMEDREG macro, the caller does not have to   * 00009900
*    place any information into any register unless using it in       * 00010000
*    register notation for a particular parameter, or using it as a   * 00010100
*    base register.                                                   * 00010200
*                                                                     * 00010300
*01* OUTPUT REGISTER INFORMATION:                                     * 00010400
*                                                                     * 00010500
*    When control returns to the caller, the GPRs contain:            * 00010600
*                                                                     * 00010700
*                                                                     * 00010800
*    REGISTER  CONTENTS                                               * 00010900
*                                                                     * 00011000
*    0         Reason code if GR15 return code is non-zero            * 00011100
*                                                                     * 00011200
*    1         Used as work registers by the system                   * 00011300
*                                                                     * 00011400
*    2-13      Unchanged                                              * 00011500
*                                                                     * 00011600
*    14        Used as work registers by the system                   * 00011700
*                                                                     * 00011800
*    15        Return code                                            * 00011900
*                                                                     * 00012000
*                                                                     * 00012100
*                                                                     * 00012200
*    When control returns to the caller, the ARs contain:             * 00012300
*                                                                     * 00012400
*                                                                     * 00012500
*    REGISTER  CONTENTS                                               * 00012600
*                                                                     * 00012700
*    0-1       Used as work registers by the system                   * 00012800
*                                                                     * 00012900
*    2-13      Unchanged                                              * 00013000
*                                                                     * 00013100
*    14-15     Used as work registers by the system                   * 00013200
*                                                                     * 00013300
*                                                                     * 00013400
*                                                                     * 00013500
*    Some callers depend on register contents remaining the same      * 00013600
*    before and after issuing a service.  If the system changes the   * 00013700
*    contents of registers on which the caller depends, the caller    * 00013800
*    must save them before issuing the service, and restore them      * 00013900
*    after the system returns control.                                * 00014000
*                                                                     * 00014100
*01* PERFORMANCE IMPLICATIONS:                                        * 00014200
*                                                                     * 00014300
*    None                                                             * 00014400
*                                                                     * 00014500
*01* SYNTAX:                                                          * 00014600
*                                                                     * 00014700
*[xlabel]  IWMEDREG     REGTOKEN=xregtoken                            * 00014800
*                      ,ETOKEN=xetoken                                * 00014900
*                     [,RETCODE=xretcode]                             * 00015000
*                     [,RSNCODE=xrsncode]                             * 00015100
*                     [,PLISTVER=xplistver|IMPLIED_VERSION]         * 00015200
*                    [,MF=S]                                         * 00015300
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00015400
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00015500
*                                                                     * 00015600
*                                                                     * 00015700
*      Where:                                                         * 00015800
*                                                                     * 00015900
*                                                                     * 00016000
*      [xlabel]                                                       * 00016100
*          is an optional symbol, starting in column 1, that is the   * 00016200
*          name on the IWMEDREG macro invocation.  The name must      * 00016300
*          conform to the rules for an ordinary assembler language    * 00016400
*          symbol.                                                    * 00016500
*          DEFAULT: No name.                                          * 00016600
*                                                                     * 00016700
*                                                                     * 00016800
*                                                                     * 00016900
*                                                                     * 00017000
*      REGTOKEN=xregtoken                                             * 00017100
*          is the name (RS-type), or address in register (2)-(12), of * 00017200
*          a required 8 character input which passes the registration * 00017300
*          token obtained in a previous call to service IWMEREG.      * 00017400
*                                                                     * 00017500
*                                                                     * 00017600
*                                                                     * 00017700
*                                                                     * 00017800
*      ETOKEN=xetoken                                                 * 00017900
*          is the name (RS-type), or address in register (2)-(12), of * 00018000
*          a required 8 character input that contains the enclave     * 00018100
*          token.                                                     * 00018200
*                                                                     * 00018300
*                                                                     * 00018400
*                                                                     * 00018500
*                                                                     * 00018600
*      [RETCODE=xretcode]                                             * 00018700
*          is the name (RS-type) of an optional fullword output       * 00018800
*          variable, or register (2)-(12), into which the return code * 00018900
*          is to be copied from GPR 15.                               * 00019000
*                                                                     * 00019100
*                                                                     * 00019200
*                                                                     * 00019300
*                                                                     * 00019400
*      [RSNCODE=xrsncode]                                             * 00019500
*          is the name (RS-type) of an optional fullword output       * 00019600
*          variable, or register (2)-(12), into which the reason code * 00019700
*          is to be copied from GPR 0.                                * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*                                                                     * 00020100
*                                                                     * 00020200
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00020300
*          is an optional byte input decimal value in the "0-0" range * 00020400
*          that specifies the macro version.  PLISTVER is the only    * 00020500
*          key allowed on the list form of MF and determines which    * 00020600
*          parameter list is generated.  Note that MAX may be         * 00020700
*          specified instead of a number, and the parameter list will * 00020800
*          be of the largest size currently supported. This size may  * 00020900
*          grow from release to release (thus possibly affecting the  * 00021000
*          amount of storage needed by your program).  If your        * 00021100
*          program can tolerate this, IBM recommends that you always  * 00021200
*          specify MAX when creating the list form parameter list as  * 00021300
*          that will ensure that the list form parameter list is      * 00021400
*          always long enough to hold whatever parameters might be    * 00021500
*          specified on the execute form.                             * 00021600
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00021700
*          default is the lowest version which allows all of the      * 00021800
*          parameters specified on the invocation to be processed.    * 00021900
*                                                                     * 00022000
*                                                                     * 00022100
*                                                                     * 00022200
*                                                                     * 00022300
*      [MF=S|L|E]                                                   * 00022400
*          is an optional keyword input which specifies the macro     * 00022500
*          form.                                                      * 00022600
*          DEFAULT: S                                                 * 00022700
*                                                                     * 00022800
*                                                                     * 00022900
*          [MF=S]                                                     * 00023000
*              specifies the standard form of the macro.  The "S"     * 00023100
*              form generates code to put the parameters into an      * 00023200
*              in-line parameter list and invoke the desired service. * 00023300
*              Full checking for required macro keys is done along    * 00023400
*              with supplying defaults for omitted optional           * 00023500
*              parameters.                                            * 00023600
*                                                                     * 00023700
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00023800
*              specifies the list form of the macro.  The "L" form    * 00023900
*              defines an area to be used for the parameter list.     * 00024000
*              Only the PLISTVER key may be specified on the          * 00024100
*              invocation.  All other macro parameters are flagged as * 00024200
*              errors.  If PLISTVER is not specified, the original    * 00024300
*              parameter list definition is used.                     * 00024400
*                                                                     * 00024500
*            ,xmfctrl                                                 * 00024600
*              is a required input.  It is the name of a storage area * 00024700
*              for the parameter list.                                * 00024800
*                                                                     * 00024900
*            ,xmfattr|0D                                            * 00025000
*              is an optional 60 character input string that varies   * 00025100
*              from 1 to 60 characters. Use it to force boundary      * 00025200
*              alignment of the parameter list. Use only 0F or 0D.    * 00025300
*              DEFAULT: 0D which forces the parameter list to a       * 00025400
*              doubleword boundary.                                   * 00025500
*                                                                     * 00025600
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00025700
*              specifies the execute form of the macro.  The "E" form * 00025800
*              generates code to put the parameters into the          * 00025900
*              parameter list specified by xmfctrl and provides full  * 00026000
*              syntax checking with default setting.                  * 00026100
*                                                                     * 00026200
*            ,xmfctrl                                                 * 00026300
*              is a required input.  It is the name (RS-type), or     * 00026400
*              address in register (1)-(12), of a storage area for    * 00026500
*              the parameter list.                                    * 00026600
*                                                                     * 00026700
*            ,COMPLETE                                              * 00026800
*              is an optional keyword input which specifies the       * 00026900
*              degree of macro parameter syntax checking.             * 00027000
*              DEFAULT: COMPLETE                                      * 00027100
*                                                                     * 00027200
*                                                                     * 00027300
*              COMPLETE                                               * 00027400
*                  Checking for required macro keys is done and       * 00027500
*                  defaults are supplied for omitted optional         * 00027600
*                  parameters.                                        * 00027700
*                                                                     * 00027800
*                                                                     * 00027900
*                                                                     * 00028000
*                                                                     * 00028100
*                                                                     * 00028200
*                                                                     * 00028300
*                                                                     * 00028400
*01* ABEND CODES:  None.                                              * 00028500
*                                                                     * 00028600
*01* RETURN CODES:                                                    * 00028700
*                                                                     * 00028800
*                                                                     * 00028900
*            0    Name: IwmRetCodeOk                                  * 00029000
*                                                                     * 00029100
*                 Meaning: Successful completion.                     * 00029200
*                                                                     * 00029300
*                 Action: None required.                              * 00029400
*                                                                     * 00029500
*                                                                     * 00029600
*            8    Name: IwmRetCodeInvocError                          * 00029700
*                                                                     * 00029800
*                 Meaning: Invalid invocation environment or          * 00029900
*                 parameters.                                         * 00030000
*                                                                     * 00030100
*                                                                     * 00030200
*                                                                     * 00030300
*                 HEX REASON  MEANING/ACTION                          * 00030400
*                 CODE                                                * 00030500
*                                                                     * 00030600
*                 xxxx0803    Name: IwmRsnCodeDisabled                * 00030700
*                                                                     * 00030800
*                             Meaning: Caller is disabled.            * 00030900
*                                                                     * 00031000
*                             Action: Avoid requesting this function  * 00031100
*                             while disabled.                         * 00031200
*                                                                     * 00031300
*                 xxxx0804    Name: IwmRsnCodeLocked                  * 00031400
*                                                                     * 00031500
*                             Meaning: Caller is locked.              * 00031600
*                                                                     * 00031700
*                             Action: Avoid requesting this function  * 00031800
*                             while locked.                           * 00031900
*                                                                     * 00032000
*                 xxxx080B    Name: IwmRsnCodeBadPl                   * 00032100
*                                                                     * 00032200
*                             Meaning:  Error accessing parameter     * 00032300
*                             list.                                   * 00032400
*                                                                     * 00032500
*                             Action: Check for possible storage      * 00032600
*                             overlay.                                * 00032700
*                                                                     * 00032800
*                 xxxx0824    Name: IwmRsnCodeAmode24                 * 00032900
*                                                                     * 00033000
*                             Meaning: Caller invoked service but was * 00033100
*                             in 24 bit addressing mode.              * 00033200
*                                                                     * 00033300
*                             Action: Request this function only when * 00033400
*                             you are in 31 bit addressing mode.      * 00033500
*                                                                     * 00033600
*                 xxxx0828    Name: IwmRsnCodeBadVersion              * 00033700
*                                                                     * 00033800
*                             Meaning: Version number in parameter    * 00033900
*                             list is not valid.                      * 00034000
*                                                                     * 00034100
*                             Action: Check for possible storage      * 00034200
*                             overlay of the parameter list.          * 00034300
*                                                                     * 00034400
*                 xxxx083A    Name: IwmRsnCodeBadEnclave              * 00034500
*                                                                     * 00034600
*                             Meaning: Enclave token does not pass    * 00034700
*                             verification.                           * 00034800
*                                                                     * 00034900
*                             Action: Check for possible storage      * 00035000
*                             overlay of the enclave token, or        * 00035100
*                             asynchronous events which may have      * 00035200
*                             deleted the enclave.                    * 00035300
*                                                                     * 00035400
*                 xxxx0880    Name: IwmRsnCodeBadRegToken             * 00035500
*                                                                     * 00035600
*                             Meaning: The register token does not    * 00035700
*                             pass verification.                      * 00035800
*                                                                     * 00035900
*                             Action: Check for possible storage      * 00036000
*                             overlay of the register token, or       * 00036100
*                             asynchronous events which may have      * 00036200
*                             deregisted the enclave already.         * 00036300
*                                                                     * 00036400
*                                                                     * 00036500
*                                                                     * 00036600
*                                                                     * 00036700
*            10   Name: IwmRetCodeCompError                           * 00036800
*                                                                     * 00036900
*                 Meaning: Component error.                           * 00037000
*                                                                     * 00037100
*                 Action: No action required. The function may be     * 00037200
*                 successful if invoked again.                        * 00037300
*                                                                     * 00037400
*                                                                     * 00037500
*                                                                     * 00037600
*                                                                     * 00037700
*01* REASON CODES:                                                    * 00037800
*                                                                     * 00037900
*       A unique reason code will be returned whenever the return     * 00038000
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00038100
*       under their corresponding return code.  Reason code and       * 00038200
*       return code constants are defined within IWMYCON.  Note that  * 00038300
*       the high order halfword of register 0, and the reason code    * 00038400
*       variable when specified, may be non-zero and represents       * 00038500
*       diagnostic data which is NOT part of the external interface.  * 00038600
*       The high order halfword should thus be excluded from          * 00038700
*       comparison with the reason code values described above.  The  * 00038800
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00038900
*       used for this purpose.                                        * 00039000
*                                                                     * 00039100
*01* MODULE TYPE:  ASSEM MACRO                                        * 00039200
*                                                                     * 00039300
*02*   PROCESSOR:  ASSEM                                              * 00039400
*                                                                     * 00039500
*01* COMPONENT:  SCWLM                                                * 00039600
*                                                                     * 00039700
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00039800
*                                                                     * 00039900
*01* EXAMPLES:                                                        * 00040000
*                                                                     * 00040100
*               IWMEDREG REGTOKEN=REGTKN,ETOKEN=ENCTKN                * 00040200
*      *                                                              * 00040300
*      * Storage areas                                                * 00040400
*      *                                                              * 00040500
*      ENCTKN   DS    CL8             Enclave token                   * 00040600
*      REGTKN   DS    CL8             Register token                  * 00040700
*                                                                     * 00040800
*                                                                     * 00040900
*01* MACRO USAGE NOTES:                                               * 00041000
*                                                                     * 00041100
*                                                                     * 00041200
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00041300
*        global macro variable.  Any value other than 'NO' will       * 00041400
*        result in the macro expansion being printed.  The default is * 00041500
*        'YES'.  The following examples illustrate how the ZPRINT     * 00041600
*        variable should be set.                                      * 00041700
*                                                                     * 00041800
*                    GBLC &ZPRINT                                     * 00041900
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00042000
*                                                                     * 00042100
*                                                                     * 00042200
*    2.  All   keys   currently   contained  in  the  IWMEDREG  macro * 00042300
*        correspond  to  version  0.   If you specify PLISTVER, use a * 00042400
*        value of 0 or MAX.                                           * 00042500
*                                                                     * 00042600
*                                                                     * 00042700
*                                                                     * 00042800
*                                                                     * 00042900
*01* CHANGE ACTIVITY:                                                 * 00043000
*                                                                     * 00043100
*   Flag LineItem  FMID    Date   ID    Comment                       * 00043200
*                                                                     * 00043300
*    $L0=OW46363  HBB7703 000724 3241MO:  Michael Ostmeyer - Enclave  * 00043400
*                                         Registration Support        * 00043500
****** END OF SPECIFICATIONS *****************************************/ 00043600
*/* TLINE 1 *********************************************************** 00043700
         MACRO                                                          00043800
&XLABEL  IWMEDREG &REGTOKEN=,&ETOKEN=,&RETCODE=,&RSNCODE=,&PLISTVER=,  *00043900
               &MF=                                                     00044000
.*                                                                      00044100
*              MACDATE -00/07/19-<0>                                    00044200
.*                                                                      00044300
.*******************************************************************    00044400
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00044500
.*******************************************************************    00044600
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   00044700
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     00044800
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             00044900
.*                                                                      00045000
              GBLC  &ZIWMEDREG  YES=MACRO USED AT LEAST ONCE            00045100
.*******************************************************************    00045200
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00045300
.*******************************************************************    00045400
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 00045500
              LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS            00045600
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              00045700
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             00045800
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             00045900
              LCLA  &ZAWRK      USED AS A WORK AREA                     00046000
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  00046100
              LCLA  &ZN         NUMERIC WORK VARIABLE                   00046200
              LCLC  &ZC         CHARACTER WORK VARIABLE                 00046300
              LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE             00046400
              LCLA  &ZTLA       VALUE TOO LONG VARIABLE                 00046500
              LCLA  &ZMACRET    MACRO RETURN CODE                       00046600
&ZMACRET      SETA  0           ASSUME NO ERRORS                        00046700
.*                                                                      00046800
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      00046900
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              00047000
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   00047100
              LCLC  &ZENDBASEPL                 End of base PL          00047200
              LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                   00047300
.*******************************************************************    00047400
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00047500
.*******************************************************************    00047600
              LCLA  &ZI         INDEX FOR ARRAY                         00047700
              LCLA  &ZJ         INDEX FOR PARMS                         00047800
              LCLA  &ZK         INDEX FOR PARSE                         00047900
              LCLA  &ZLO        LOW RANGE VALUE                         00048000
              LCLA  &ZHI        HIGH RANGE VALUE                        00048100
              LCLC  &ZW         WORK AREA FOR PARM                      00048200
.********************************************************************   00048300
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00048400
.********************************************************************   00048500
              GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                 00048600
              GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE          00048700
              GBLA  &SYSALVL    SYSSTATE ARCHLVL                        00048800
.*                                                                      00048900
              AIF   (K'&SYSASCE GT 0).ZSYS4     SYS STATE DEFINED       00049000
              AIF   (K'&SYSSPLV GT 0).ZSYS2     SP LEVEL DEFINED        00049100
              SPLEVEL  TEST                                             00049200
.ZSYS2        ANOP  ,                                                   00049300
              AIF   ('&SYSSPLV' EQ '1').ZSYS3   PRE SP 3.1              00049400
              AIF   ('&SYSSPLV' EQ '2').ZSYS3   PRE SP 3.1              00049500
              SYSSTATE TEST                                             00049600
              AGO   .ZSYS4                                              00049700
.ZSYS3        ANOP  ,                                                   00049800
&SYSASCE      SETC  'P'         ASSUME SYSSTATE PRIMARY                 00049900
.ZSYS4        ANOP  ,                                                   00050000
.*******************************************************************    00050100
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00050200
.*******************************************************************    00050300
              LCLC  &XREGTOKEN  ++ NAME                                 00050400
              LCLC  &XETOKEN    ++ NAME                                 00050500
              LCLC  &XRETCODE   ++ NAME                                 00050600
              LCLC  &XRSNCODE   ++ NAME                                 00050700
              LCLA  &XPLISTVER  ++ VALUE                                00050800
              LCLC  &XMF        ++ VALUE                                00050900
              LCLC  &XMFCTRL    ++ NAME                                 00051000
              LCLC  &XMFATTR    ++ VALUE                                00051100
              LCLC  &XMFSCK     ++ VALUE                                00051200
.*******************************************************************    00051300
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00051400
.*******************************************************************    00051500
              LCLC  &ZXREGTOKEN                 ++ INPUT NAME           00051600
              LCLC  &ZXETOKEN   ++ INPUT NAME                           00051700
              LCLC  &ZXRETCODE  ++ OUTPUT NAME                          00051800
              LCLC  &ZXRSNCODE  ++ OUTPUT NAME                          00051900
              LCLC  &ZXPLISTVER                 ++ INPUT VALUE          00052000
              LCLC  &ZXMF       ++ INPUT VALUE                          00052100
              LCLC  &ZXMFCTRL   ++ INPUT NAME                           00052200
              LCLC  &ZXMFATTR   ++ INPUT VALUE                          00052300
              LCLC  &ZXMFSCK    ++ INPUT VALUE                          00052400
.********************************************************************   00052500
.***AC.PLV01  PROCESS PLISTVER                                      *   00052600
.********************************************************************   00052700
&XPLISTVER      SETA  0                                                 00052800
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00052900
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00053000
&XPLISTVER      SETA  0                                                 00053100
.ZPLV0          ANOP  ,                                                 00053200
.*                                                                      00053300
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00053400
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00053500
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00053600
.*-------------------------------------------------------------------   00053700
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00053800
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00053900
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00054000
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00054100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00054200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00054300
                AGO   .ZPVCK2                                           00054400
.ZPVCK3         ANOP  ,                                                 00054500
.*-------------------------------------------------------------------   00054600
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00054700
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00054800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00054900
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00055000
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00055100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00055200
                AGO   .ZPVCKE                                           00055300
.ZPVCK2         ANOP  ,                                                 00055400
.*-------------------------------------------------------------------   00055500
&ZCVAL          SETC  '&PLISTVER(1)'                                    00055600
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00055700
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00055800
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00055900
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00056000
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00056100
.ZPVCK6         ANOP  ,                                                 00056200
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00056300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00056400
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00056500
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00056600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00056700
&XPLISTVER      SETA  0                                                 00056800
                AGO   .ZPVCKE                                           00056900
.*-------------------------------------------------------------------   00057000
.ZPVCK4A        ANOP  ,                                                 00057100
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00057200
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00057300
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00057400
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00057500
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00057600
                MNOTE 8,' &ZMS IS REQUIRED.'                            00057700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00057800
                AGO   .ZPVCK5                                           00057900
.ZPVCK4         ANOP  ,                                                 00058000
&XPLISTVER      SETA  &PLISTVER(1)                                      00058100
.ZPVCK5         ANOP  ,                                                 00058200
.ZPVCKE         ANOP  ,                                                 00058300
.********************************************************************   00058400
.***AG.MF01 PROCESS MF MACRO FORMS                                      00058500
.********************************************************************   00058600
              ACTR  10000                                               00058700
.*------------------------------------------------------------------    00058800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00058900
&XMF          SETC  ''          INITIALIZE XVARIABLE                    00059000
.*-------------------------------------------------------------------   00059100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00059200
.ZG18         ANOP  ,                                                   00059300
&ZTLC         SETC 'S'                                                  00059400
              AIF   ('&MF(1)' NE '&ZTLC').ZG19                          00059500
&XMF          SETC  'S'         SET KEYWORD                             00059600
              AIF   (N'&MF LE 1).ZG18A          CK NUM                  00059700
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00059800
&ZMS          SETC  '&ZMS.&MF"'                                         00059900
&ZMS          SETC  '&ZMS "MF"'                                         00060000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00060100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00060200
.ZG18A        ANOP  ,                                                   00060300
.*-------------------------------------------------------------------   00060400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00060500
.ZG19         ANOP  ,                                                   00060600
&ZTLC         SETC 'L'                                                  00060700
              AIF   ('&MF(1)' NE '&ZTLC').ZG26                          00060800
&XMF          SETC  'L'         SET KEYWORD                             00060900
              AIF   (N'&MF LE 3).ZG19A          CK NUM                  00061000
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00061100
&ZMS          SETC  '&ZMS.&MF"'                                         00061200
&ZMS          SETC  '&ZMS "MF"'                                         00061300
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00061400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00061500
.ZG19A        ANOP  ,                                                   00061600
.*-------------------------------------------------------------------   00061700
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00061800
              AIF   (N'&SYSLIST NE 0).ZG19B     POSITIONALS?            00061900
              AIF   ('&REGTOKEN' NE '').ZG19B   KEYS?                   00062000
              AIF   ('&ETOKEN' NE '').ZG19B     KEYS?                   00062100
              AIF   ('&RETCODE' NE '').ZG19B    KEYS?                   00062200
              AIF   ('&RSNCODE' NE '').ZG19B    KEYS?                   00062300
              AGO    .ZG19C     INVOCATION OKAY                         00062400
.ZG19B        ANOP  ,                                                   00062500
&ZMS          SETC  'THE "L" FORM OF "MF"'      *MFLA* MNOTE            00062600
&ZMS          SETC  '&ZMS CAN ONLY HAVE'                                00062700
&ZMS          SETC  '&ZMS THE "PLISTVER" KEY'                           00062800
              MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'              00062900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00063000
.ZG19C        ANOP  ,                                                   00063100
.*-------------------------------------------------------------------   00063200
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00063300
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00063400
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00063500
              AIF   (N'&MF(2) GT 1).ZG21B       MULTI PARMS             00063600
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00063700
.ZG21B        AIF   (K'&MF(2) GT 0).ZG21C                               00063800
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00063900
&ZMS          SETC  'WHEN "L" IS SPECIFIED'     *KRQDA*                 00064000
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00064100
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00064200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00064300
.ZG21C        ANOP  ,                                                   00064400
.*-------------------------------------------------------------------   00064500
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00064600
              AIF   (K'&ZXMFCTRL LE 0).ZG21P    NOT I/O                 00064700
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG21P                      00064800
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00064900
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00065000
&ZMS          SETC  '&ZMS.&MF"'                                         00065100
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00065200
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                   00065300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00065400
.ZG21P        ANOP  ,                                                   00065500
.*-------------------------------------------------------------------   00065600
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00065700
&ZXMFATTR     SETC  'INPUT'     SET IN/OUTPUT                           00065800
&XMFATTR      SETC  '0D'                                                00065900
              AIF   (K'&MF(3) LE 0).ZG24B       PARM                    00066000
&XMFATTR      SETC  '&MF(3,1)'  SET XVARIABLE                           00066100
              AIF   (N'&MF(3) GT 1).ZG24B       MULTI PARMS             00066200
&XMFATTR      SETC  '&MF(3)'    SET XVARIABLE                           00066300
.ZG24B        ANOP  ,                                                   00066400
.*-------------------------------------------------------------------   00066500
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00066600
              AIF   (K'&ZXMFATTR LE 0).ZG24P    NOT I/O                 00066700
              AIF   ('&XMFATTR'(1,1) NE '(').ZG24P                      00066800
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00066900
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00067000
&ZMS          SETC  '&ZMS.&MF"'                                         00067100
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00067200
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                   00067300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00067400
.ZG24P        ANOP  ,                                                   00067500
.*-------------------------------------------------------------------   00067600
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00067700
              AIF   (K'&ZXMFATTR LE 0).ZG24S    NOT I/O                 00067800
              AIF   (K'&XMFATTR LE 60).ZG24S    LNG OK                  00067900
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00068000
&ZMS          SETC  '"MF='      *KLNGA* MNOTE                           00068100
&ZMS          SETC  '&ZMS.&MF"'                                         00068200
&ZMS          SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'               00068300
              MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                  00068400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00068500
.ZG24S        ANOP  ,                                                   00068600
.*-------------------------------------------------------------------   00068700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00068800
.ZG26         ANOP  ,                                                   00068900
&ZTLC         SETC 'E'                                                  00069000
              AIF   ('&MF(1)' NE '&ZTLC').ZG34                          00069100
&XMF          SETC  'E'         SET KEYWORD                             00069200
              AIF   (N'&MF LE 3).ZG26A          CK NUM                  00069300
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00069400
&ZMS          SETC  '&ZMS.&MF"'                                         00069500
&ZMS          SETC  '&ZMS "MF"'                                         00069600
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00069700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00069800
.ZG26A        ANOP  ,                                                   00069900
.*-------------------------------------------------------------------   00070000
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00070100
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00070200
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00070300
              AIF   (N'&MF(2) GT 1).ZG28B       MULTI PARMS             00070400
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00070500
.ZG28B        AIF   (K'&MF(2) GT 0).ZG28C                               00070600
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00070700
&ZMS          SETC  'WHEN "E" IS SPECIFIED'     *KRQDA*                 00070800
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00070900
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00071000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00071100
.ZG28C        ANOP  ,                                                   00071200
.*-------------------------------------------------------------------   00071300
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00071400
              AIF   (K'&ZXMFCTRL LE 0).ZG28R    NOT I/O                 00071500
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG28R                      00071600
&ZCGPR        SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                          00071700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG28P                        00071800
              AIF   (K'&ZCGPR GT 2).ZG28Q                               00071900
              AIF   ('&ZCGPR' EQ '0').ZG28Q                             00072000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00072100
              AIF   (T'&ZCGPR NE 'N').ZG28Q     INVALID REG NAME        00072200
.ZG28P        ANOP  ,                                                   00072300
              AIF   (T'&ZCGPR NE 'N').ZG28R     NON NUMERIC             00072400
              AIF   ('&ZCGPR' LT '1').ZG28Q                             00072500
              AIF   ('&ZCGPR' LE '12').ZG28R                            00072600
.ZG28Q        ANOP  ,                                                   00072700
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00072800
&ZMS          SETC  '&ZMS.&MF"'                                         00072900
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'           00073000
              MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                    00073100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00073200
.ZG28R        ANOP  ,                                                   00073300
.*-------------------------------------------------------------------   00073400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00073500
&XMFSCK       SETC  ''          INITIALIZE XVARIABLE                    00073600
.ZG32A   AIF   ('&MF(3)' NE 'COMPLETE').ZG33A                           00073700
&XMFSCK       SETC  'COMPLETE'  SET KEYWORD                             00073800
.*-------------------------------------------------------------------   00073900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00074000
.ZG33A        AIF   (K'&XMFSCK GT 0).ZG33C      KEYWORD                 00074100
              AIF   (K'&MF(3) LE 0).ZG33B                               00074200
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           00074300
&ZMS          SETC  '&ZMS.&MF"'                                         00074400
&ZMS          SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '           00074500
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00074600
&ZMS          SETC  '&ZMS "COMPLETE".'                                  00074700
              MNOTE 8,' &ZMS '                                          00074800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00074900
.ZG33B        ANOP  ,                                                   00075000
&XMFSCK       SETC  'COMPLETE'  SET DEFAULT KEYWORD                     00075100
.ZG33C        ANOP  ,                                                   00075200
&ZXMFSCK      SETC  'INPUT'     SET IN/OUTPUT                           00075300
.*------------------------------------------------------------------    00075400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00075500
.ZG34         ANOP  ,                                                   00075600
&ZXMF         SETC  'INPUT'     SET IN/OUTPUT                           00075700
              AIF   (K'&XMF GT 0).ZG34E         VALID ARG               00075800
              AIF   (T'&MF EQ 'O').ZG34D        OMITTED                 00075900
&ZASYSLNDX    SETA  0                                                   00076000
.ZG34A        ANOP  ,           POSITIONAL MACRO KEY                    00076100
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        00076200
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG34C                    00076300
&ZTLC         SETC 'MF'                                                 00076400
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG34A           00076500
.ZG34B        ANOP  ,                                                   00076600
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00076700
&ZMS          SETC  'THE "MF" KEY'              *KOPTA* MNOTE           00076800
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             00076900
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    00077000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00077100
              AGO   .ZG34E                                              00077200
.ZG34C        ANOP  ,                                                   00077300
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00077400
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           00077500
&ZMS          SETC  '&ZMS.&MF"'                                         00077600
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00077700
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00077800
&ZMS          SETC  '&ZMS "S",'                                         00077900
&ZMS          SETC  '&ZMS "L",'                                         00078000
&ZMS          SETC  '&ZMS OR "E".'                                      00078100
              MNOTE 8,' &ZMS '                                          00078200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00078300
              AGO   .ZG34E                                              00078400
.ZG34D        ANOP  ,                                                   00078500
&XMF          SETC  'S'         SET DEFAULT KEYWORD                     00078600
&XMFSCK       SETC  'COMPLETE'  COMPLETE CHECKING                       00078700
.ZG34E        ANOP  ,                                                   00078800
.********************************************************************   00078900
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00079000
.********************************************************************   00079100
              ACTR  10000                                               00079200
.*-------------------------------------------------------------------   00079300
.***AG.MF03 MF=(SLE)                                                    00079400
              AIF   ('&XMF' EQ 'L').ZGMFX                               00079500
.*----------------------------------------------------------------***   00079600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00079700
              AIF   (N'&REGTOKEN LE 1).ZG2A     CK NUM                  00079800
&ZMS          SETC  '"REGTOKEN='                *KPOSA* MNOTE           00079900
&ZMS          SETC  '&ZMS.&REGTOKEN"'                                   00080000
&ZMS          SETC  '&ZMS "REGTOKEN"'                                   00080100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00080200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00080300
.ZG2A         ANOP  ,                                                   00080400
.*-------------------------------------------------------------------   00080500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00080600
&ZXREGTOKEN   SETC  'INPUT'     SET IN/OUTPUT                           00080700
&XREGTOKEN    SETC  '&REGTOKEN(1)'              SET XVARIABLE           00080800
              AIF   (N'&REGTOKEN GT 1).ZG2B     MULTI PARMS             00080900
&XREGTOKEN    SETC  '&REGTOKEN'                 SET XVARIABLE           00081000
.ZG2B         AIF   (K'&REGTOKEN(1) GT 0).ZG2C                          00081100
&ZXREGTOKEN   SETC  ''          RESET IN/OUTPUT                         00081200
&ZMS          SETC  ' '         *KRQDA*                                 00081300
&ZMS          SETC  '&ZMS "REGTOKEN" KEY AND ITS'                       00081400
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00081500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00081600
.ZG2C         ANOP  ,                                                   00081700
.*-------------------------------------------------------------------   00081800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00081900
              AIF   (K'&ZXREGTOKEN LE 0).ZG2R   NOT I/O                 00082000
              AIF   ('&XREGTOKEN'(1,1) NE '(').ZG2R                     00082100
&ZCGPR        SETC  '&XREGTOKEN'(2,K'&XREGTOKEN-2)                      00082200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                         00082300
              AIF   (K'&ZCGPR GT 2).ZG2Q                                00082400
              AIF   ('&ZCGPR' EQ '0').ZG2Q                              00082500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00082600
              AIF   (T'&ZCGPR NE 'N').ZG2Q      INVALID REG NAME        00082700
.ZG2P         ANOP  ,                                                   00082800
              AIF   (T'&ZCGPR NE 'N').ZG2R      NON NUMERIC             00082900
              AIF   ('&ZCGPR' LT '2').ZG2Q                              00083000
              AIF   ('&ZCGPR' LE '12').ZG2R                             00083100
.ZG2Q         ANOP  ,                                                   00083200
&ZMS          SETC  '"REGTOKEN='                *KGPRA* MNOTE           00083300
&ZMS          SETC  '&ZMS.&REGTOKEN"'                                   00083400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00083500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00083600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00083700
.ZG2R         ANOP  ,                                                   00083800
.*----------------------------------------------------------------***   00083900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00084000
              AIF   (N'&ETOKEN LE 1).ZG5A       CK NUM                  00084100
&ZMS          SETC  '"ETOKEN='  *KPOSA* MNOTE                           00084200
&ZMS          SETC  '&ZMS.&ETOKEN"'                                     00084300
&ZMS          SETC  '&ZMS "ETOKEN"'                                     00084400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00084500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00084600
.ZG5A         ANOP  ,                                                   00084700
.*-------------------------------------------------------------------   00084800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00084900
&ZXETOKEN     SETC  'INPUT'     SET IN/OUTPUT                           00085000
&XETOKEN      SETC  '&ETOKEN(1)'                SET XVARIABLE           00085100
              AIF   (N'&ETOKEN GT 1).ZG5B       MULTI PARMS             00085200
&XETOKEN      SETC  '&ETOKEN'   SET XVARIABLE                           00085300
.ZG5B         AIF   (K'&ETOKEN(1) GT 0).ZG5C                            00085400
&ZXETOKEN     SETC  ''          RESET IN/OUTPUT                         00085500
&ZMS          SETC  ' '         *KRQDA*                                 00085600
&ZMS          SETC  '&ZMS "ETOKEN" KEY AND ITS'                         00085700
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00085800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00085900
.ZG5C         ANOP  ,                                                   00086000
.*-------------------------------------------------------------------   00086100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00086200
              AIF   (K'&ZXETOKEN LE 0).ZG5R     NOT I/O                 00086300
              AIF   ('&XETOKEN'(1,1) NE '(').ZG5R                       00086400
&ZCGPR        SETC  '&XETOKEN'(2,K'&XETOKEN-2)                          00086500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                         00086600
              AIF   (K'&ZCGPR GT 2).ZG5Q                                00086700
              AIF   ('&ZCGPR' EQ '0').ZG5Q                              00086800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00086900
              AIF   (T'&ZCGPR NE 'N').ZG5Q      INVALID REG NAME        00087000
.ZG5P         ANOP  ,                                                   00087100
              AIF   (T'&ZCGPR NE 'N').ZG5R      NON NUMERIC             00087200
              AIF   ('&ZCGPR' LT '2').ZG5Q                              00087300
              AIF   ('&ZCGPR' LE '12').ZG5R                             00087400
.ZG5Q         ANOP  ,                                                   00087500
&ZMS          SETC  '"ETOKEN='  *KGPRA* MNOTE                           00087600
&ZMS          SETC  '&ZMS.&ETOKEN"'                                     00087700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00087800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00087900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00088000
.ZG5R         ANOP  ,                                                   00088100
.*----------------------------------------------------------------***   00088200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00088300
              AIF   (N'&RETCODE LE 1).ZG8A      CK NUM                  00088400
&ZMS          SETC  '"RETCODE='                 *KPOSA* MNOTE           00088500
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00088600
&ZMS          SETC  '&ZMS "RETCODE"'                                    00088700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00088800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00088900
.ZG8A         ANOP  ,                                                   00089000
.*-------------------------------------------------------------------   00089100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00089200
              AIF   (K'&RETCODE(1) LE 0).ZG8C   NO PARM                 00089300
&ZXRETCODE    SETC  'OUTPUT'    SET OUTPUT                              00089400
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE           00089500
              AIF   (N'&RETCODE GT 1).ZG8C                              00089600
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                           00089700
.ZG8C         ANOP  ,                                                   00089800
.*-------------------------------------------------------------------   00089900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00090000
              AIF   (K'&ZXRETCODE LE 0).ZG8R    NOT I/O                 00090100
              AIF   ('&XRETCODE'(1,1) NE '(').ZG8R                      00090200
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                        00090300
              AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                         00090400
              AIF   (K'&ZCGPR GT 2).ZG8Q                                00090500
              AIF   ('&ZCGPR' EQ '0').ZG8Q                              00090600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00090700
              AIF   (T'&ZCGPR NE 'N').ZG8Q      INVALID REG NAME        00090800
.ZG8P         ANOP  ,                                                   00090900
              AIF   (T'&ZCGPR NE 'N').ZG8R      NON NUMERIC             00091000
              AIF   ('&ZCGPR' LT '2').ZG8Q                              00091100
              AIF   ('&ZCGPR' LE '12').ZG8R                             00091200
.ZG8Q         ANOP  ,                                                   00091300
&ZMS          SETC  '"RETCODE='                 *KGPRA* MNOTE           00091400
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00091500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00091600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00091700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00091800
.ZG8R         ANOP  ,                                                   00091900
.*----------------------------------------------------------------***   00092000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00092100
              AIF   (N'&RSNCODE LE 1).ZG11A     CK NUM                  00092200
&ZMS          SETC  '"RSNCODE='                 *KPOSA* MNOTE           00092300
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00092400
&ZMS          SETC  '&ZMS "RSNCODE"'                                    00092500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00092600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00092700
.ZG11A        ANOP  ,                                                   00092800
.*-------------------------------------------------------------------   00092900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00093000
              AIF   (K'&RSNCODE(1) LE 0).ZG11C  NO PARM                 00093100
&ZXRSNCODE    SETC  'OUTPUT'    SET OUTPUT                              00093200
&XRSNCODE     SETC  '&RSNCODE(1)'               SET XVARIABLE           00093300
              AIF   (N'&RSNCODE GT 1).ZG11C                             00093400
&XRSNCODE     SETC  '&RSNCODE'  SET XVARIABLE                           00093500
.ZG11C        ANOP  ,                                                   00093600
.*-------------------------------------------------------------------   00093700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00093800
              AIF   (K'&ZXRSNCODE LE 0).ZG11R   NOT I/O                 00093900
              AIF   ('&XRSNCODE'(1,1) NE '(').ZG11R                     00094000
&ZCGPR        SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                        00094100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                        00094200
              AIF   (K'&ZCGPR GT 2).ZG11Q                               00094300
              AIF   ('&ZCGPR' EQ '0').ZG11Q                             00094400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00094500
              AIF   (T'&ZCGPR NE 'N').ZG11Q     INVALID REG NAME        00094600
.ZG11P        ANOP  ,                                                   00094700
              AIF   (T'&ZCGPR NE 'N').ZG11R     NON NUMERIC             00094800
              AIF   ('&ZCGPR' LT '2').ZG11Q                             00094900
              AIF   ('&ZCGPR' LE '12').ZG11R                            00095000
.ZG11Q        ANOP  ,                                                   00095100
&ZMS          SETC  '"RSNCODE='                 *KGPRA* MNOTE           00095200
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00095300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00095400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00095500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00095600
.ZG11R        ANOP  ,                                                   00095700
.******************************************************************     00095800
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00095900
.******************************************************************     00096000
              ACTR  10000                                               00096100
.*----------------------------------------------------------------***   00096200
.***AH.P02 EXTRA POSITIONALS                                            00096300
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS               00096400
              AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL                00096500
              AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL            00096600
              AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL             00096700
.ZGLISTX1     ANOP  ,                                                   00096800
&ZCVAL        SETC  ''          ERROR FIELD                             00096900
&ZAWRK        SETA  0           POSITIONAL NUMBER                       00097000
.ZGLIST2      ANOP  ,                                                   00097100
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         00097200
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                00097300
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   00097400
              AGO   .ZGLIST2                                            00097500
.*                                                                      00097600
.ZGLIST3      ANOP  ,                                                   00097700
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             00097800
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'   *PPOSA* MNOTE           00097900
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     00098000
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              00098100
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      00098200
              MNOTE 8,' &ZMS ARE ALLOWED.'                              00098300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00098400
.ZGLISTX      ANOP  ,                                                   00098500
&ZASYSLNDX    SETA  0                                                   00098600
.*-------------------------------------------------------------------   00098700
.***AG.MF04 MF=(SLE)                                                    00098800
.ZGMFX        ANOP  ,           END OF FULL SYNTAX CHECK                00098900
.*******************************************************************    00099000
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00099100
.*******************************************************************    00099200
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          00099300
.*******************************************************************    00099400
.***AE.01  START OF IWMEDREG MACRO CODE                                 00099500
.*******************************************************************    00099600
              LCLC  &M0M0001                 NAME                       00099700
&M0M0001      SETC  '&XLABEL'                SET NAME                   00099800
              AIF   (K'&XLABEL NE 0).XLAB2                              00099900
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT NAME               00100000
.*                                                                      00100100
.XLAB2        ANOP  ,                                                   00100200
              AIF   ('&XMF' EQ 'L').XLAB3                               00100300
&M0M0001 DS    0H                             IWMEDREG-0                00100400
.XLAB3        ANOP  ,                                                   00100500
.*******************************************************************    00100600
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00100700
.*******************************************************************    00100800
              PUSH  PRINT                                               00100900
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          00101000
              PRINT OFF         ++ PR01                                 00101100
              AGO   .ZPRNTXX                                            00101200
.ZPRINTX      PRINT ON                                                  00101300
.ZPRNTXX      ANOP  ,                                                   00101400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00101500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00101600
.********************************************************************   00101700
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00101800
.********************************************************************   00101900
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00102000
                      LCLA  &ZOPN1         INVOCATION INDEX             00102100
                      LCLC  &ZOPL(4095)    LABEL                        00102200
                      LCLC  &ZOPO(4095)    OPERATION                    00102300
                      LCLC  &ZOPV(4095)    VALUE                        00102400
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00102500
.*                                                                      00102600
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00102700
.******************************************************************     00102800
.***AL.L10 IWMEDREG FMT=LIST MF=S|L PARAMETERS                          00102900
.******************************************************************     00103000
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00103100
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00103200
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00103300
&XMFATTR              SETC  '0D'                                        00103400
.*                                                                      00103500
&ZOPN                 SETA  &ZOPN+1                                     00103600
&ZOPL(&ZOPN)          SETC  ' '                                         00103700
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00103800
&ZOPO(&ZOPN)          SETC  'B'                                         00103900
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00104000
                      AGO   .ZALVL6B                                    00104100
.ZALVL6A              ANOP                                              00104200
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00104300
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00104400
.ZALVL6B              ANOP                                              00104500
&ZOPD(&ZOPN)          SETC  '++ IWMEDREG ARG PARMS'                     00104600
.*                                                                      00104700
&ZOPN                 SETA  &ZOPN+1                                     00104800
&ZOPL(&ZOPN)          SETC  ' '                                         00104900
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00105000
&ZOPV(&ZOPN)          SETC  '1'                                         00105100
&ZOPD(&ZOPN)          SETC  ' '                                         00105200
.*                                                                      00105300
.ZLMFSL2              ANOP  ,                                           00105400
.*-------------------------------------------------------------------   00105500
.***AM.L00  IWMEDREG FMT=LIST name                                      00105600
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00105700
&ZOPN                 SETA &ZOPN+1                                      00105800
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00105900
&ZOPO(&ZOPN)          SETC 'EQU'                                        00106000
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00106100
&ZOPD(&ZOPN)          SETC '++ IWMEDREG NAME'                           00106200
.ZLMFSL2M             ANOP  ,                                           00106300
.*-------------------------------------------------------------------   00106400
.***AM.L01  IWMEDREG FMT=LIST PARAMETERS                                00106500
&ZOPN                 SETA &ZOPN+1                                      00106600
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00106700
&ZOPO(&ZOPN)          SETC 'DS'                                         00106800
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00106900
&ZOPD(&ZOPN)          SETC '++ IWMEDREG PARM LIST'                      00107000
.*-------------------------------------------------------------------   00107100
.***AM.L02 XVERSION XL1                                                 00107200
&ZOPN                 SETA &ZOPN+1                                      00107300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00107400
&ZOPO(&ZOPN)          SETC 'DS'                                         00107500
&ZOPV(&ZOPN)          SETC 'XL1'                                        00107600
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00107700
.*-------------------------------------------------------------------   00107800
.***AM.L09  XRSV0001 CL1                                                00107900
&ZOPN                 SETA &ZOPN+1                                      00108000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00108100
&ZOPO(&ZOPN)          SETC 'DS'                                         00108200
&ZOPV(&ZOPN)          SETC 'CL1'                                        00108300
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0001'                      00108400
.*-------------------------------------------------------------------   00108500
.***AM.L09  XPLISTLEN XL2                                               00108600
&ZOPN                 SETA &ZOPN+1                                      00108700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00108800
&ZOPO(&ZOPN)          SETC 'DS'                                         00108900
&ZOPV(&ZOPN)          SETC 'XL2'                                        00109000
&ZOPD(&ZOPN)          SETC '++ INPUT  XPLISTLEN'                        00109100
.*-------------------------------------------------------------------   00109200
.***AM.L09  XETOKEN CL8                                                 00109300
&ZOPN                 SETA &ZOPN+1                                      00109400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XETOKEN'                          00109500
&ZOPO(&ZOPN)          SETC 'DS'                                         00109600
&ZOPV(&ZOPN)          SETC 'CL8'                                        00109700
&ZOPD(&ZOPN)          SETC '++ &ZXETOKEN  XETOKEN'                      00109800
.*-------------------------------------------------------------------   00109900
.***AM.L09  XREGTOKEN CL8                                               00110000
&ZOPN                 SETA &ZOPN+1                                      00110100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREGTOKEN'                        00110200
&ZOPO(&ZOPN)          SETC 'DS'                                         00110300
&ZOPV(&ZOPN)          SETC 'CL8'                                        00110400
&ZOPD(&ZOPN)          SETC '++ &ZXREGTOKEN  XREGTOKEN'                  00110500
.*-------------------------------------------------------------------   00110600
.***AM.L10 END OF IWMEDREG LIST PARAMETERS                              00110700
&ZOPN                 SETA &ZOPN+1                                      00110800
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00110900
&ZOPO(&ZOPN)          SETC 'EQU'                                        00111000
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00111100
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00111200
.*                                                                      00111300
&ZOPN                 SETA &ZOPN+1                                      00111400
&ZOPL(&ZOPN)          SETC ' '                                          00111500
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00111600
&ZOPV(&ZOPN)          SETC '1'                                          00111700
&ZOPD(&ZOPN)          SETC ' '                                          00111800
.*-------------------------------------------------------------------   00111900
.***AL.L12 IWMEDREG FMT=LIST MF=S|L PARAMETERS                          00112000
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00112100
.*                                                                      00112200
&ZOPN                 SETA  &ZOPN+1                                     00112300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00112400
&ZOPO(&ZOPN)          SETC  'DC'                                        00112500
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00112600
&ZOPD(&ZOPN)          SETC  '++ IWMEDREG ARG PARMS'                     00112700
.*                                                                      00112800
.ZLMFSLX              ANOP  ,                                           00112900
.*-------------------------------------------------------------------   00113000
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00113100
&ZPLLEN               SETA 20                                           00113200
.*                                                                      00113300
.******************************************************************     00113400
.***AI.L01 IWMEDREG FMT=LIST FILL IN PARAMETER AREA                     00113500
.******************************************************************     00113600
                      ACTR  10000                                       00113700
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00113800
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00113900
&ZCVAL                SETC  'LAE'          XAX MODE                     00114000
.ZIMFXA               ANOP ,                                            00114100
.*                                                                      00114200
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00114300
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00114400
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00114500
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00114600
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00114700
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00114800
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00114900
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00115000
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00115100
&ZOPN                 SETA  &ZOPN+1                                     00115200
&ZOPL(&ZOPN)          SETC  ' '                                         00115300
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00115400
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00115500
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00115600
                      AGO   .ZIMFNX                                     00115700
.*                                                                      00115800
.ZIMFN2               ANOP ,                                            00115900
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00116000
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00116100
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00116200
&ZOPN                 SETA  &ZOPN+1                                     00116300
&ZOPL(&ZOPN)          SETC  ' '                                         00116400
&ZOPO(&ZOPN)          SETC  'LAE'                                       00116500
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00116600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00116700
                      AGO   .ZIMFNX                                     00116800
.ZIMFNX1              ANOP ,                                            00116900
&ZOPN                 SETA  &ZOPN+1                                     00117000
&ZOPL(&ZOPN)          SETC  ' '                                         00117100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00117200
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00117300
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00117400
.ZIMFNX               ANOP ,                                            00117500
.********************************************************************   00117600
.***AI.L02 IWMEDREG FMT=LIST INITIALIZE PARAMETER AREA                  00117700
.********************************************************************   00117800
.***AI.L03 MF=(SLE)                                                     00117900
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00118000
.*                                                                      00118100
&ZOPN                 SETA  &ZOPN+1                                     00118200
&ZOPL(&ZOPN)          SETC  ' '                                         00118300
&ZOPO(&ZOPN)          SETC  'XC'                                        00118400
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00118500
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00118600
.ZIMFLX               ANOP  ,                                           00118700
.*-------------------------------------------------------------------   00118800
.***AI.L04 XPLISTLEN XL2                                                00118900
&ZOPN                 SETA  &ZOPN+1                                     00119000
&ZOPL(&ZOPN)          SETC  ' '                                         00119100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00119200
&ZOPV(&ZOPN)          SETC  '2(2,1),=AL2(&ZPLLEN)'                      00119300
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00119400
.*-------------------------------------------------------------------   00119500
.***AI.L25  XETOKEN CL8                                                 00119600
                      AIF   ('&ZXETOKEN' EQ '').ZI4E                    00119700
                      AIF   ('&ZXETOKEN' EQ 'OUTPUT').ZI4E              00119800
&ZCGPR                SETC  '&XETOKEN'                                  00119900
.*                                                                      00120000
                      AIF   ('&XETOKEN'(1,1) NE '(').ZI4B               00120100
&ZCGPR   SETC  '0('.'&XETOKEN'(2,K'&XETOKEN-2).')'                      00120200
.ZI4B                 ANOP  ,                                           00120300
.*                                                                      00120400
&ZOPN                 SETA  &ZOPN+1                                     00120500
&ZOPL(&ZOPN)          SETC  ' '                                         00120600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00120700
&ZOPV(&ZOPN)          SETC  '4(8,1),&ZCGPR'                             00120800
&ZOPD(&ZOPN)          SETC  '++ &ZXETOKEN XETOKEN'                      00120900
.*                                                                      00121000
.ZI4E                 ANOP  ,                                           00121100
.*-------------------------------------------------------------------   00121200
.***AI.L25  XREGTOKEN CL8                                               00121300
                      AIF   ('&ZXREGTOKEN' EQ '').ZI5E                  00121400
                      AIF   ('&ZXREGTOKEN' EQ 'OUTPUT').ZI5E            00121500
&ZCGPR                SETC  '&XREGTOKEN'                                00121600
.*                                                                      00121700
                      AIF   ('&XREGTOKEN'(1,1) NE '(').ZI5B             00121800
&ZCGPR   SETC  '0('.'&XREGTOKEN'(2,K'&XREGTOKEN-2).')'                  00121900
.ZI5B                 ANOP  ,                                           00122000
.*                                                                      00122100
&ZOPN                 SETA  &ZOPN+1                                     00122200
&ZOPL(&ZOPN)          SETC  ' '                                         00122300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00122400
&ZOPV(&ZOPN)          SETC  '12(8,1),&ZCGPR'                            00122500
&ZOPD(&ZOPN)          SETC  '++ &ZXREGTOKEN XREGTOKEN'                  00122600
.*                                                                      00122700
.ZI5E                 ANOP  ,                                           00122800
.*-------------------------------------------------------------------   00122900
&ZOPN1                SETA &ZOPN                                        00123000
.*******************************************************************    00123100
.***  PROCESS IWMEDREG OUTPUT PARAMETERS                                00123200
.*******************************************************************    00123300
                      ACTR  10000                                       00123400
.*******************************************************************    00123500
.***AO.X02  RETURN CODE PROCESSING                                      00123600
.*******************************************************************    00123700
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00123800
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00123900
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00124000
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00124100
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00124200
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00124300
&ZOPN                 SETA  &ZOPN+1                                     00124400
&ZOPL(&ZOPN)          SETC  ' '                                         00124500
&ZOPO(&ZOPN)          SETC  'ST'                                        00124600
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00124700
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00124800
                      AGO   .ZMRETX                                     00124900
.*                                                                      00125000
.ZMRET2               ANOP  ,                                           00125100
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00125200
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00125300
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00125400
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00125500
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00125600
&ZOPN                 SETA  &ZOPN+1                                     00125700
&ZOPL(&ZOPN)          SETC  ' '                                         00125800
&ZOPO(&ZOPN)          SETC  'LR'                                        00125900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00126000
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00126100
.ZMRETX               ANOP  ,                                           00126200
.*******************************************************************    00126300
.***AO.X03  REASON CODE PROCESSING                                      00126400
.*******************************************************************    00126500
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00126600
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00126700
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00126800
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00126900
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00127000
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00127100
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00127200
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00127300
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00127400
&ZOPN                 SETA  &ZOPN+1                                     00127500
&ZOPL(&ZOPN)          SETC  ' '                                         00127600
&ZOPO(&ZOPN)          SETC  'ST'                                        00127700
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00127800
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00127900
                      AGO   .ZMRSNX                                     00128000
.*                                                                      00128100
.ZMRSN2               ANOP  ,                                           00128200
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00128300
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00128400
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00128500
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00128600
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00128700
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00128800
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00128900
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00129000
&ZOPN                 SETA  &ZOPN+1                                     00129100
&ZOPL(&ZOPN)          SETC  ' '                                         00129200
&ZOPO(&ZOPN)          SETC  'LR'                                        00129300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00129400
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00129500
.ZMRSNX               ANOP  ,                                           00129600
.*******************************************************************    00129700
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00129800
.*******************************************************************    00129900
.ZMFLX                ANOP  ,              MF=L PROCESSING              00130000
.*******************************************************************    00130100
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00130200
.*******************************************************************    00130300
                      ACTR  10000                                       00130400
.*                                                                      00130500
                      LCLA  &ZLC           COLUMN POSITION              00130600
                      LCLA  &ZOPX          LIST TABLE INDEX             00130700
                      LCLC  &ZLL           LABEL                        00130800
                      LCLC  &ZLOP          OPERATION                    00130900
                      LCLC  &ZLV           VALUE                        00131000
                      LCLC  &ZLD           DESCRIPTION                  00131100
.*                                                                      00131200
&ZOPX                 SETA  1                                           00131300
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00131400
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00131500
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00131600
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00131700
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00131800
                      AIF   (K'&ZLD LE 0).ZL5                           00131900
&ZLC                  SETA  35             COMMENT COLUMN               00132000
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00132100
&ZLC                  SETA  33             COMMMENT COLUMN              00132200
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00132300
&ZLV                  SETC  '&ZLV'.' '                                  00132400
                      AGO   .ZL3                                        00132500
.*                                                                      00132600
.ZL4                  ANOP  ,                                           00132700
&ZLV                  SETC  '&ZLV'.' '                                  00132800
.ZL5                  ANOP  ,                                           00132900
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00133000
.*                                                                      00133100
&ZLL     &ZLOP &ZLV                                                     00133200
.*                                                                      00133300
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00133400
                      AGO   .ZL2           CONTINUE LOOPING             00133500
.*                                                                      00133600
.ZLX                  ANOP  ,                                           00133700
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00133800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00133900
         L     14,16(0,0)              GET CVT ADDRESS                  00134000
         L     14,772(14,0)            GET SFT ADDRESS                  00134100
         L     14,380(14,0)            GET LX FOR SERVICE ROUTINE       00134200
         LA    15,101                  GET EX FOR SERVICE ROUTINE       00134300
         OR    14,15                   GET PC NUMBER                    00134400
         PC    0(14)                                                    00134500
END&SYSNDX DS    0H                    END LABEL                        00134600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00134700
.ZLINKX               ANOP  ,                                           00134800
.*******************************************************************    00134900
.***AP.X01  FORMAT GENERATED CODE                                       00135000
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00135100
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00135200
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00135300
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00135400
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00135500
                      AIF   (K'&ZLD LE 0).ZL51                          00135600
&ZLC                  SETA  35             COMMENT COLUMN               00135700
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00135800
&ZLC                  SETA  33             COMMENT COLUMN               00135900
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00136000
&ZLV                  SETC  '&ZLV'.' '                                  00136100
                      AGO   .ZL31                                       00136200
.*                                                                      00136300
.ZL41                 ANOP  ,                                           00136400
&ZLV                  SETC  '&ZLV'.' '                                  00136500
.ZL51                 ANOP  ,                                           00136600
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00136700
.*                                                                      00136800
&ZLL     &ZLOP &ZLV                                                     00136900
.*                                                                      00137000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00137100
                      AGO   .ZL21          CONTINUE LOOPING             00137200
.*                                                                      00137300
.ZLX1                 ANOP  ,                                           00137400
.*******************************************************************    00137500
.***AP.X02  END OF IWMEDREG MACRO                                       00137600
&ZIWMEDREG            SETC  'YES'          SET IWMEDREG USED            00137700
         POP   PRINT                                                    00137800
*                                            IWMEDREG-0                 00137900
         SPACE 1                                                        00138000
.ZLX2                 ANOP  ,                                           00138100
         MEND                                                           00138200
**********************************************************************/ 00138300
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00138400
*%IWMEDREG: MACRO KEYS(REGTOKEN,ETOKEN,RETCODE,RSNCODE,PLISTVER,MF);    00138500
*  ANS('?'||MACLABEL||' '||'IWMEDREP '||MACLIST||                       00138600
*         ' '||MACKEYS||';') COL(MACLMAR);                              00138700
*%END IWMEDREG;                                                         00138800
