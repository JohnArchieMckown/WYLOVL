* %GOTO SHVBPRO;                  /* BEGIN COMMENT UNTIL LABEL SHVBPRO          
         MACRO                                                                  
         IRXSHVB                                                                
.*/ %SHVBPRO: ;                                                                 
*/***PROPRIETARY_STATEMENT********************************************/         
*/*01* PROPRIETARY STATEMENT=                                        */         
*/*                                                                  */         
*/*                                                                  */         
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */         
*/* THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      */         
*/* 5685-025 (C) COPYRIGHT IBM CORP. 1988, 1989                      */         
*/* SEE COPYRIGHT INSTRUCTIONS                                       */         
*/*                                                                  */         
*/* STATUS= JTE21X2                                                  */         
*/*                                                                  */         
*/***END_OF_PROPRIETARY_STATEMENT*************************************/         
* %GOTO PLAS_IRXSHVB;                                                           
************************* START OF SPECIFICATIONS ********************/         
*                                                                    */         
*    MACRO-NAME = IRXSHVB                                            */         
*                                                                    */         
*    DESCRIPTIVE-NAME = Shared REXX Variable Request Block mapping.  */         
*                                                                    */         
*                                                                    */         
*    FUNCTION = This macro maps a REXX Shared Variable Request Block.*/         
*                                                                    */         
*          The SHVBLOCK is passed as an interface to the REXX        */         
*          Variable Access Routines, and returns information         */         
*          from them.                                                */         
*                                                                    */         
*    MACRO-TYPE = Mapping macro                                      */         
*                                                                    */         
*    NOTES = None                                                    */         
*                                                                    */         
*    PROCESSOR = BAL                                                 */         
*                                                                    */         
*    MACRO-SIZE = See listing                                        */         
*                                                                    */         
*    INVOCATION =  IRXSHVB                                           */         
*                                                                    */         
*          Addressability to the SHVBLOCK can be established via a   */         
*          USING on SHVBLOCK                                         */         
*                                                                    */         
*    CHANGE-ACTIVITY =                                               */         
*                                                                    */         
*          - Created for TSO/E Version 2 Release 1           @E1502G9*/         
*                                                                    */         
************************ END OF SPECIFICATIONS ***********************/         
         EJECT                                                                  
SHVBLOCK DSECT                        SHARED VARIABLE REQUEST BLOCK             
SHVNEXT  DS  A                        Chain pointer to next SHVBLOCK            
SHVUSER  DS  F                        Used during "FETCH NEXT"                  
*                                      Contains length of buffer                
*                                      pointed to by SHVNAMA                    
SHVCODES DS  0F                                                                 
SHVCODE  DS  CL1                      Function code - indicates type            
*                                      of variable access request               
SHVRET   DS  XL1                      Return codes                              
         DS  H'0'                     Reserved (should be 0)                    
SHVBUFL  DS  F                        Length of fetch value buffer              
SHVNAMA  DS  A                        Address of variable name                  
SHVNAML  DS  F                        Length of variable name                   
SHVVALA  DS  A                        Address of value buffer                   
SHVVALL  DS  F                        Length of value buffer                    
*                                      (Set on fetch)                           
SHVBLEN  EQU *-SHVBLOCK               Length of SHVBLOCK                        
         SPACE 1                                                                
**********************************************************************/         
*   SHARED VARIABLE REQUEST BLOCK - function codes                   */         
**********************************************************************/         
         SPACE 1                                                                
SHVFETCH EQU   C'F'            Copy value of shared variable                    
SHVSTORE EQU   C'S'            Set variable from given value                    
SHVDROPV EQU   C'D'            Drop variable                                    
SHVSYFET EQU   C'f'            Symbolic name retrieve                           
SHVSYSET EQU   C's'            Symbolic name set                                
SHVSYDRO EQU   C'd'            Symbolic name drop                               
SHVNEXTV EQU   C'N'            Fetch "next" variable                            
SHVPRIV  EQU   C'P'            Fetch private information                        
         SPACE 1                                                                
**********************************************************************/         
*        SHARED VARIABLE REQUEST BLOCK - return codes (SHVRET)       */         
**********************************************************************/         
        SPACE 1                                                                 
SHVCLEAN EQU   X'00'           Execution was OK                                 
SHVNEWV  EQU   X'01'           Variable did not exist                           
SHVLVAR  EQU   X'02'           Last variable transferred ("N")                  
SHVTRUNC EQU   X'04'           Truncation occurred for "Fetch"                  
SHVBADN  EQU   X'08'           Invalid variable name                            
SHVBADV  EQU   X'10'           Invalid value specified                          
SHVBADF  EQU   X'80'           Invalid function code (SHVCODE)                  
         SPACE 1                                                                
**********************************************************************/         
*        R15 return codes                                            */         
**********************************************************************/         
         SPACE 1                                                                
SHVRCOK  EQU    0              Entire Plist chain processed                     
SHVRCINV EQU   -1              Invalid entry conditions                         
SHVRCIST EQU   -2              Insufficient storage available                   
         SPACE                                                                  
         MEND                                                                   
*                                                                               
*%PLAS_IRXSHVB: ;                                                               
*/*********************** START OF SPECIFICATIONS ********************/         
*/*                                                                  */         
*/*  MACRO-NAME = IRXSHVB                                            */         
*/*                                                                  */         
*/*  DESCRIPTIVE-NAME = Shared REXX Variable Request Block mapping.  */         
*/*                                                                  */         
*/*                                                                  */         
*/*  FUNCTION = This macro maps a REXX Shared Variable Request Block.*/         
*/*                                                                  */         
*/*        The SHVBLOCK is passed as an interface to the REXX        */         
*/*        Variable Access Routines, and returns information         */         
*/*        from them.                                                */         
*/*                                                                  */         
*/*  MACRO-TYPE = Mapping macro                                      */         
*/*                                                                  */         
*/*  NOTES = None                                                    */         
*/*                                                                  */         
*/*  PROCESSOR = PL/AS                                               */         
*/*                                                                  */         
*/*  MACRO-SIZE = See assembler listing                              */         
*/*                                                                  */         
*/*  INVOCATION =                                                    */         
*/*                                                                  */         
*/*      %SHVBBASE = '... attributes ...'                            */         
*/*      %INCLUDE SYSLIB(IRXSHVB)                                    */         
*/*                                                                  */         
*/*      Note:                                                       */         
*/*          %SHVBBASE is a Macro variable which may be used to      */         
*/*          establish the attributes for the declaration.  If       */         
*/*          not specified, 'BASED' will be used as the default      */         
*/*          attribute.                                              */         
*/*                                                                  */         
*/*  CHANGE-ACTIVITY =                                               */         
*/*                                                                  */         
*/*        - Created for TSO/E Version 2 Release 1           @E1502G9*/         
*/*                                                                  */         
*/********************** END OF SPECIFICATIONS ***********************/         
*@EJECT;                                                                        
* %IF SHVBBASE = '' %THEN           /* Any Attributes specified?     */         
*   %PLASBASE = 'BASED';            /* No, set default Attributes    */         
* %ELSE                                                                         
*   %PLASBASE = SHVBBASE;           /* Else use what was specified   */         
*                                                                               
*DCL 1 SHVBLOCK PLASBASE,           /* SHARED VARIABLE REQUEST BLOCK */         
*      2 SHVNEXT PTR(31),           /* Chain pointer to next SHVBLOCK*/         
*      2 SHVUSER FIXED(31),         /* Used during "FETCH NEXT"                 
*                                      Contains length of buffer                
*                                      pointed to by SHVNAMA         */         
*      2 SHVCODES FIXED(31),                                                    
*        3 SHVCODE CHAR(1),         /* Function code - indicates type           
*                                      of variable access request    */         
*        3 SHVRET  FIXED(8),        /* Return codes                  */         
*        3 *       FIXED(16),       /* Reserved                      */         
*      2 SHVBUFL FIXED(31),         /* Length of fetch value buffer  */         
*      2 SHVNAMA PTR(31),           /* Address of variable name      */         
*      2 SHVNAML FIXED(31),         /* Length of variable name       */         
*      2 SHVVALA PTR(31),           /* Address of value buffer       */         
*      2 SHVVALL FIXED(31);         /* Length of value buffer                   
*                                      (Set on fetch)                */         
*@SPACE;                                                                        
*/********************************************************************/         
*/* SHARED VARIABLE REQUEST BLOCK - function codes                   */         
*/********************************************************************/         
*                                                                               
*DCL SHVSTORE CONSTANT('S') CHAR(1), /* Set variable from given value*/         
*    SHVFETCH CONSTANT('F') CHAR(1), /* Copy value of variable to               
*                                       Buffer                       */         
*    SHVDROPV CONSTANT('D') CHAR(1), /* Drop variable                */         
*    SHVSYSET CONSTANT('s') CHAR(1), /* Symbolic name Set variable   */         
*    SHVSYFET CONSTANT('f') CHAR(1), /* Symbolic name Fetch variable */         
*    SHVSYDRO CONSTANT('d') CHAR(1), /* Symbolic name DROP variable  */         
*    SHVNEXTV CONSTANT('N') CHAR(1), /* Fetch next variable          */         
*    SHVPRIV  CONSTANT('P') CHAR(1); /* Fetch private information    */         
*                                                                               
*@SPACE;                                                                        
*/********************************************************************/         
*/*      R15 return codes                                            */         
*/********************************************************************/         
*                                                                               
*DCL SHVRCOK  CONSTANT(0),          /* Entire Plist chain processed  */         
*    SHVRCINV CONSTANT(-1),         /* Invalid entry conditions      */         
*    SHVRCIST CONSTANT(-2);         /* Insufficient storage available*/         
*                                                                               
*@EJECT;                                                                        
*/********************************************************************/         
*/*      SHARED VARIABLE REQUEST BLOCK - return codes                */         
*/********************************************************************/         
*                                                                               
*DCL SHVCLEAN CONSTANT('00'X) BIT(8), /* Successful execution        */         
*    SHVNEWV  CONSTANT('01'X) BIT(8), /* Variable did not exist      */         
*    SHVLVAR  CONSTANT('02'X) BIT(8), /* Last variable transferred              
*                                        (for N function code)       */         
*    SHVTRUNC CONSTANT('04'X) BIT(8), /* Truncation occurred during             
*                                        fetch                       */         
*    SHVBADN  CONSTANT('08'X) BIT(8), /* Invalid variable name       */         
*    SHVBADV  CONSTANT('10'X) BIT(8), /* Reserved in REXX            */         
*    SHVBADF  CONSTANT('80'X) BIT(8); /* Invalid function code       */         
