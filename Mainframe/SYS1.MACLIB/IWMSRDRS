*%IWMSRDRS: MACRO KEYS(LOCATION,NETWORK_ID,LUNAME,HOST,RETCODE,         00000100
*                 RSNCODE,PLISTVER,MF);                                 00000200
*/**** START OF SPECIFICATIONS **************************************** 00000300
*                                                                     * 00000400
*                                                                     * 00000500
*01* MACRO NAME:  IWMSRDRS                              -02/24/97-<1> * 00000600
*                                                                     * 00000700
*                                                                     * 00000800
*01* DESCRIPTIVE NAME:  Sysplex Routing Deregistration                * 00000900
*                                                                     * 00001000
*01* PROPRIETARY STATEMENT:                                           * 00001100
*                                                                     * 00001200
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001300
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001400
*     5645-001 (C) COPYRIGHT IBM CORP. 1994, 1997                     * 00001500
*                                                                     * 00001600
* STATUS= JBB6604                                                     * 00001700
*                                                                     * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*01* FUNCTION:                                                        * 00002100
*                                                                     * 00002200
*      IWMSRDRS will deregister a server that had previously          * 00002300
*      registered via IWMSRSRG, the Sysplex Router Registration       * 00002400
*      macro, for sysplex workload balancing. Deregistration removes  * 00002500
*      the specified server as a candidate from the Sysplex Routing   * 00002600
*      Selection service, IWMSRSRS.  Since the propagation of the     * 00002700
*      deregistration to other systems is asynchronous, a newly       * 00002800
*      deregistered triplet will continue to be eligible for          * 00002900
*      selection by other systems for a period of time after return   * 00003000
*      from the IWMSRDRS invocation.  If the server was registered    * 00003100
*      with a host name the caller must provide the host name in      * 00003200
*      order to deregister the server.                                * 00003300
*                                                                     * 00003400
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00003500
*                                                                     * 00003600
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00003700
*                                                                     * 00003800
*01* ENVIRONMENT:                                                     * 00003900
*                                                                     * 00004000
*                                                                     * 00004100
*      Dispatchable unit mode: Task or SRB mode.                      * 00004200
*                                                                     * 00004300
*      Minimum authorization: Problem state with any PSW key.         * 00004400
*                                                                     * 00004500
*      AMODE:            31-bit.                                      * 00004600
*                                                                     * 00004700
*      ASC mode:         Primary.                                     * 00004800
*                                                                     * 00004900
*      Serialization:    Enabled.  Unlocked.  FRRs may be             * 00005000
*                        established.                                 * 00005100
*                                                                     * 00005200
*      Restrictions:                                                  * 00005300
*                                                                     * 00005400
*                                                                     * 00005500
*                        1.  This macro may not be used prior to the  * 00005600
*                            completion of WLM address space          * 00005700
*                            initialization                           * 00005800
*                                                                     * 00005900
*                        2.  All parameter areas must reside in       * 00006000
*                            current primary.                         * 00006100
*                                                                     * 00006200
*                                                                     * 00006300
*                                                                     * 00006400
*                                                                     * 00006500
*                                                                     * 00006600
*01* INPUT REGISTERS:  GR0-GR1     Reserved                           * 00006700
*                      GR2-GR13    Undefined                          * 00006800
*                      GR14-GR15   Reserved                           * 00006900
*                      AR0-AR1     Reserved                           * 00007000
*                      AR2-AR13    Undefined                          * 00007100
*                      AR14-AR15   Reserved                           * 00007200
*                                                                     * 00007300
*01* OUTPUT REGISTERS: GR0         Reason code if GR15 return code is * 00007400
*                                  non-zero                           * 00007500
*                      GR1         Used as a work register by the     * 00007600
*                                  macro                              * 00007700
*                      GR2-GR13    Unchanged                          * 00007800
*                      GR14        Used as a work register by the     * 00007900
*                                  macro                              * 00008000
*                      GR15        Return code                        * 00008100
*                      AR0-AR1     Used as a work register by the     * 00008200
*                                  macro                              * 00008300
*                      AR2-AR13    Unchanged                          * 00008400
*                      AR14-AR15   Used as a work register by the     * 00008500
*                                  macro                              * 00008600
*                                                                     * 00008700
*01* SYNTAX:                                                          * 00008800
*                                                                     * 00008900
*[xlabel]  IWMSRDRS     LOCATION=xlocation                            * 00009000
*                      ,NETWORK_ID=xnetwork_id                        * 00009100
*                      ,LUNAME=xluname                                * 00009200
*                     [,HOST=xhost|NO_HOST]                         * 00009300
*                     [,RETCODE=xretcode]                             * 00009400
*                     [,RSNCODE=xrsncode]                             * 00009500
*                     [,PLISTVER=xplistver|IMPLIED_VERSION]         * 00009600
*                    [,MF=S]                                         * 00009700
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00009800
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00009900
*                                                                     * 00010000
*                                                                     * 00010100
*      Where:                                                         * 00010200
*                                                                     * 00010300
*                                                                     * 00010400
*      [xlabel]                                                       * 00010500
*          is an optional symbol, starting in column 1, that is the   * 00010600
*          name on the IWMSRDRS macro invocation.  The name must      * 00010700
*          conform to the rules for an ordinary assembler language    * 00010800
*          symbol.                                                    * 00010900
*          DEFAULT: No name.                                          * 00011000
*                                                                     * 00011100
*                                                                     * 00011200
*                                                                     * 00011300
*                                                                     * 00011400
*      LOCATION(xlocation)                                            * 00011500
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00011600
*          only) of a required 18 character input which contains the  * 00011700
*          server LOCATION associated with the registered address     * 00011800
*          space.                                                     * 00011900
*                                                                     * 00012000
*                                                                     * 00012100
*                                                                     * 00012200
*                                                                     * 00012300
*      NETWORK_ID(xnetwork_id)                                        * 00012400
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00012500
*          only) of a required 8 character input which contains the   * 00012600
*          Network ID associated with the registered address space.   * 00012700
*                                                                     * 00012800
*                                                                     * 00012900
*                                                                     * 00013000
*                                                                     * 00013100
*      LUNAME(xluname)                                                * 00013200
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00013300
*          only) of a required 8 character input which contains the   * 00013400
*          server Logical Unit name associated with the registered    * 00013500
*          address space.                                             * 00013600
*                                                                     * 00013700
*                                                                     * 00013800
*                                                                     * 00013900
*                                                                     * 00014000
*      [HOST(xhost|NO_HOST)]                                        * 00014100
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00014200
*          only) of an optional 64 character input which contains the * 00014300
*          server HOST name associated with the address space to be   * 00014400
*          deregistered. The value should be padded on the right with * 00014500
*          blanks for any unused characters.                          * 00014600
*          DEFAULT: NO_HOST indicates that a HOST name was not        * 00014700
*          passed.                                                    * 00014800
*                                                                     * 00014900
*                                                                     * 00015000
*                                                                     * 00015100
*                                                                     * 00015200
*      [RETCODE(xretcode)]                                            * 00015300
*          is the name (RS-type) of an optional fullword output       * 00015400
*          variable (or register (2)-(12) ASM only) into which the    * 00015500
*          return code is to be copied from GPR 15.                   * 00015600
*                                                                     * 00015700
*                                                                     * 00015800
*                                                                     * 00015900
*                                                                     * 00016000
*      [RSNCODE(xrsncode)]                                            * 00016100
*          is the name (RS-type) of an optional fullword output       * 00016200
*          variable (or register (2)-(12) ASM only) into which the    * 00016300
*          reason code is to be copied from GPR 0.                    * 00016400
*                                                                     * 00016500
*                                                                     * 00016600
*                                                                     * 00016700
*                                                                     * 00016800
*      [PLISTVER(xplistver|IMPLIED_VERSION)]                        * 00016900
*          is an optional byte input decimal value in the "0-1" range * 00017000
*          that specifies the macro version.  PLISTVER is the only    * 00017100
*          key allowed on the list form of MF and determines which    * 00017200
*          parameter list is generated.  The macro keys associated    * 00017300
*          with each supported version of the macro are listed in     * 00017400
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00017500
*          instead of a number, and the parameter list will be of the * 00017600
*          largest size currently supported. This size may grow from  * 00017700
*          release to release (thus possibly affecting the amount of  * 00017800
*          storage needed by your program).  If your program can      * 00017900
*          tolerate this, IBM recommends that you always specify MAX  * 00018000
*          when creating the list form parameter list as that will    * 00018100
*          ensure that the list form parameter list is always long    * 00018200
*          enough to hold whatever parameters might be specified on   * 00018300
*          the execute form.                                          * 00018400
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00018500
*          default is the lowest version which allows all of the      * 00018600
*          parameters specified on the invocation to be processed.    * 00018700
*                                                                     * 00018800
*                                                                     * 00018900
*                                                                     * 00019000
*                                                                     * 00019100
*      [MF(S|L|E)]                                                  * 00019200
*          is an optional keyword input which specifies the macro     * 00019300
*          form.                                                      * 00019400
*          DEFAULT: S                                                 * 00019500
*                                                                     * 00019600
*                                                                     * 00019700
*          [MF(S)]                                                    * 00019800
*              specifies the standard form of the macro.  The "S"     * 00019900
*              form generates code to put the parameters into the     * 00020000
*              parameter list and invoke the desired service.  Full   * 00020100
*              checking for required macro keys is done along with    * 00020200
*              supplying defaults for omitted optional parameters.    * 00020300
*              The ?EPILOG macro must be invoked at the end of the    * 00020400
*              module.                                                * 00020500
*                                                                     * 00020600
*              For assembly language code modules, the "S" form       * 00020700
*              generates code to put the parameters into an in-line   * 00020800
*              parameter list and invoke the desired service.  Full   * 00020900
*              checking for required macro keys is done along with    * 00021000
*              supplying defaults for omitted optional parameters.    * 00021100
*                                                                     * 00021200
*          [MF(L,xmfctrl,xmfattr|BDY(DWORD))]                       * 00021300
*              specifies the list form of the macro.  The "L" form    * 00021400
*              defines an area to be used for the parameter list.     * 00021500
*              Only the PLISTVER key may be specified on the          * 00021600
*              invocation.  All other macro parameters are flagged as * 00021700
*              errors.  If PLISTVER is not specified, the original    * 00021800
*              parameter list definition is used.                     * 00021900
*                                                                     * 00022000
*            ,xmfctrl                                                 * 00022100
*              is a required input.  It is the name of a storage area * 00022200
*              for the parameter list.                                * 00022300
*                                                                     * 00022400
*            ,xmfattr|BDY(DWORD)                                    * 00022500
*              is an optional 60 character input string that varies   * 00022600
*              from 1 to 60 characters. Use it to force boundary      * 00022700
*              alignment of the parameter list. Use any value that    * 00022800
*              represents a boundary and is valid on an assembler DS  * 00022900
*              pseudo op (assembler-only).                            * 00023000
*              DEFAULT: 0D for Assembler, BDY(DWORD) for PL/X, which  * 00023100
*              forces the parameter list to a doubleword boundary.    * 00023200
*                                                                     * 00023300
*          [MF(E,xmfctrl,COMPLETE)]                                 * 00023400
*              specifies the execute form of the macro.  The "E" form * 00023500
*              generates code to put the parameters into the          * 00023600
*              parameter list specified by xmfctrl and provides full  * 00023700
*              syntax checking with default setting.                  * 00023800
*                                                                     * 00023900
*            ,xmfctrl                                                 * 00024000
*              is a required input.  It is the name (RS-type) (or     * 00024100
*              address in register (1)-(12) ASM only) of a storage    * 00024200
*              area for the parameter list.                           * 00024300
*                                                                     * 00024400
*            ,COMPLETE                                              * 00024500
*              is an optional keyword input which specifies the       * 00024600
*              degree of macro parameter syntax checking.             * 00024700
*              DEFAULT: COMPLETE                                      * 00024800
*                                                                     * 00024900
*                                                                     * 00025000
*              COMPLETE                                               * 00025100
*                  Checking for required macro keys is done and       * 00025200
*                  defaults are supplied for omitted optional         * 00025300
*                  parameters.                                        * 00025400
*                                                                     * 00025500
*                                                                     * 00025600
*                                                                     * 00025700
*                                                                     * 00025800
*                                                                     * 00025900
*                                                                     * 00026000
*                                                                     * 00026100
*01* RETURN CODES:                                                    * 00026200
*                                                                     * 00026300
*                                                                     * 00026400
*            0    IwmRetCodeOk:  Successful completion.               * 00026500
*                                                                     * 00026600
*            4    IwmRetCodeWarning:  Successful completion, unusual  * 00026700
*                 conditions noted.                                   * 00026800
*                                                                     * 00026900
*                 HEX REASON  MEANING                                 * 00027000
*                 CODE                                                * 00027100
*                                                                     * 00027200
*                                                                     * 00027300
*                 xxxx0418    IwmRsnCodeServerNotRegistered:  Server  * 00027400
*                             not registered                          * 00027500
*                                                                     * 00027600
*                                                                     * 00027700
*                                                                     * 00027800
*                                                                     * 00027900
*            8    IwmRetCodeInvocError:  Invalid invocation           * 00028000
*                 environment or parameters                           * 00028100
*                                                                     * 00028200
*                 HEX REASON  MEANING                                 * 00028300
*                 CODE                                                * 00028400
*                                                                     * 00028500
*                                                                     * 00028600
*                 xxxx0803    IwmRsnCodeDisabled:  Caller is          * 00028700
*                             disabled.                               * 00028800
*                                                                     * 00028900
*                 xxxx0804    IwmRsnCodeLocked:  Caller is locked.    * 00029000
*                                                                     * 00029100
*                 xxxx080B    IwmRsnCodeBadPl:  Error accessing       * 00029200
*                             parameter list                          * 00029300
*                                                                     * 00029400
*                 xxxx0823    IwmRsnCodeDatoff:  Caller invoked       * 00029500
*                             service while DATOFF                    * 00029600
*                                                                     * 00029700
*                 xxxx0824    IwmRsnCodeAmode24:  Caller invoked      * 00029800
*                             service but was in 24 bit addressing    * 00029900
*                             mode.                                   * 00030000
*                                                                     * 00030100
*                 xxxx0825    IwmRsnCodeAscModeNotPrimary:  Caller    * 00030200
*                             invoked service but was not DAT on      * 00030300
*                             Primary ASC mode.                       * 00030400
*                                                                     * 00030500
*                 xxxx0828    IwmRsnCodeBadVersion:  Version number   * 00030600
*                             in parameter list or version length     * 00030700
*                             field is not valid.  This reason code   * 00030800
*                             is only set when the MVS release is on  * 00030900
*                             MVS/ESA HBB6603 or higher levels.       * 00031000
*                                                                     * 00031100
*                                                                     * 00031200
*                                                                     * 00031300
*                                                                     * 00031400
*                                                                     * 00031500
*           10    IwmRetCodeCompError:  Component error (no reason    * 00031600
*                 codes)                                              * 00031700
*                                                                     * 00031800
*                                                                     * 00031900
*                                                                     * 00032000
*                                                                     * 00032100
*                                                                     * 00032200
*01* REASON CODES:                                                    * 00032300
*                                                                     * 00032400
*       A unique reason code will be returned whenever the return     * 00032500
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00032600
*       under their corresponding return code.  Reason code and       * 00032700
*       return code constants are defined within IWMYCON.  Note that  * 00032800
*       the high order halfword of register 0, and the reason code    * 00032900
*       variable when specified, may be non-zero and represents       * 00033000
*       diagnostic data which is NOT part of the external interface.  * 00033100
*       The high order halfword should thus be excluded from          * 00033200
*       comparison with the reason code values described above.  The  * 00033300
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00033400
*       used for this purpose.                                        * 00033500
*                                                                     * 00033600
*01* MODULE TYPE:  ASSEM-PL/AS MACRO                                  * 00033700
*                                                                     * 00033800
*02*   PROCESSOR:  ASSEM-PL/AS                                        * 00033900
*                                                                     * 00034000
*01* COMPONENT:  SCWLM                                                * 00034100
*                                                                     * 00034200
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00034300
*                                                                     * 00034400
*01* MACRO USAGE NOTES:                                               * 00034500
*                                                                     * 00034600
*                                                                     * 00034700
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00034800
*        global macro variable.  Any value other than 'NO' will       * 00034900
*        result in the macro expansion being printed.  The default is * 00035000
*        'YES'.  The following examples illustrate how the ZPRINT     * 00035100
*        variable should be set.                                      * 00035200
*                                                                     * 00035300
*                    GBLC &ZPRINT                                     * 00035400
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00035500
*                                                                     * 00035600
*                                                                     * 00035700
*    2.  The IWMSRDRS macro supports multiple versions. The macro key * 00035800
*        list  below  contains the version level in which the key was * 00035900
*        first  introduced.  Positionals  are  identified by the word * 00036000
*        'Positional'  followed by the numeric value of its position. * 00036100
*        Nested  positionals  are  preceded  by their outer key.  The * 00036200
*        lowest value represents the original version and the highest * 00036300
*        value  represents  the  most  recent version of the IWMSRDRS * 00036400
*        macro.    When  specifying  PLISTVER,  be sure that it is as * 00036500
*        least  as high as the highest version number of all the keys * 00036600
*        being used.                                                  * 00036700
*                                                                     * 00036800
*        VERSION   KEY                                                * 00036900
*                                                                     * 00037000
*              0      LOCATION                                        * 00037100
*                     LUNAME                                          * 00037200
*                     NETWORK_ID                                      * 00037300
*              1      HOST                                            * 00037400
*                                                                     * 00037500
*    3.  This  macro  may  only  be  used  on MVS/ESA SP5.2 or higher * 00037600
*        levels.                                                      * 00037700
*                                                                     * 00037800
*    4.  The macro IWMYCON must be included to use this macro.        * 00037900
*                                                                     * 00038000
*    5.  The  macro IWMPB must be in the library concatenation, since * 00038100
*        it is included by IWMYCON.                                   * 00038200
*                                                                     * 00038300
*    6.  Note  that  the  high  order halfword of register 0, and the * 00038400
*        reason  code  variable  when  specified, may be non-zero and * 00038500
*        represents diagnostic data which is NOT part of the external * 00038600
*        interface.   The high order halfword should thus be excluded * 00038700
*        from comparison with the reason code values described above. * 00038800
*        The  constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may * 00038900
*        be used for this purpose.                                    * 00039000
*                                                                     * 00039100
*    7.  The  PL/AS version of the macro needs the EPILOG macro to be * 00039200
*        included.                                                    * 00039300
*                                                                     * 00039400
*    8.  All  character  inputs are assumed to be padded on the right * 00039500
*        with blanks, when needed to fill out the entire length.      * 00039600
*                                                                     * 00039700
*                                                                     * 00039800
*                                                                     * 00039900
*01* CHANGE ACTIVITY:                                                 * 00040000
*                                                                     * 00040100
*   Flag LineItem  FMID    Date   ID    Comment                       * 00040200
*                                                                     * 00040300
*    $L0=ENCLV    HBB5520 940222 PDDD:  Sysplex Router.               * 00040400
*    $L1=WLMPDNS  JBB6604 961031 PDKP:  Host name Support.            * 00040500
*    $P1=PSY0190  JBB6604 970115 PDKP:  Add reason code Doc.          * 00040600
****** END OF SPECIFICATIONS *****************************************/ 00040700
*/* TLINE 1 *********************************************************** 00040800
         MACRO                                                          00040900
&XLABEL  IWMSRDRS &LOCATION=,&NETWORK_ID=,&LUNAME=,&HOST=,&RETCODE=,   *00041000
               &RSNCODE=,&PLISTVER=,&MF=                                00041100
.*                                                                      00041200
*                MACDATE -02/24/97-<1>                                  00041300
.*                                                                      00041400
.*******************************************************************    00041500
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00041600
.*******************************************************************    00041700
                GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                 00041800
                GBLC  &ZTEST      YES=TEST NO=NO TEST                   00041900
                GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX           00042000
.*                                                                      00042100
                GBLC  &ZIWMSRDRS  YES=MACRO USED AT LEAST ONCE          00042200
.*******************************************************************    00042300
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00042400
.*******************************************************************    00042500
                LCLC  &ZMS        ERROR MESSAGE WORK AREA               00042600
                LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS          00042700
                LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED            00042800
                LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR           00042900
                LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE           00043000
                LCLA  &ZAWRK      USED AS A WORK AREA                   00043100
                LCLA  &ZASIZ      USED FOR SIZE OF VALUE                00043200
                LCLA  &ZN         NUMERIC WORK VARIABLE                 00043300
                LCLC  &ZC         CHARACTER WORK VARIABLE               00043400
                LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE           00043500
                LCLA  &ZTLA       VALUE TOO LONG VARIABLE               00043600
                LCLA  &ZMACRET    MACRO RETURN CODE                     00043700
&ZMACRET        SETA  0           ASSUME NO ERRORS                      00043800
.*                                                                      00043900
                LCLC  &ZCSYSLIST(255)           NONXKEY, POS ARRAY      00044000
                LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()            00044100
                LCLA  &ZPLLEN     PARAMETER LIST LENGTH                 00044200
                LCLC  &ZENDBASEPL               End of base PL          00044300
                LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                 00044400
.*******************************************************************    00044500
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00044600
.*******************************************************************    00044700
                LCLA  &ZI         INDEX FOR ARRAY                       00044800
                LCLA  &ZJ         INDEX FOR PARMS                       00044900
                LCLA  &ZK         INDEX FOR PARSE                       00045000
                LCLA  &ZLO        LOW RANGE VALUE                       00045100
                LCLA  &ZHI        HIGH RANGE VALUE                      00045200
                LCLC  &ZW         WORK AREA FOR PARM                    00045300
.********************************************************************   00045400
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00045500
.********************************************************************   00045600
                GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL               00045700
                GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE        00045800
.*                                                                      00045900
                AIF   (K'&SYSASCE GT 0).ZSYS4   SYS STATE DEFINED       00046000
                AIF   (K'&SYSSPLV GT 0).ZSYS2   SP LEVEL DEFINED        00046100
                SPLEVEL  TEST                                           00046200
.ZSYS2          ANOP  ,                                                 00046300
                AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1             00046400
                AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1             00046500
                SYSSTATE TEST                                           00046600
                AGO   .ZSYS4                                            00046700
.ZSYS3          ANOP  ,                                                 00046800
&SYSASCE        SETC  'P'         ASSUME SYSSTATE PRIMARY               00046900
.ZSYS4          ANOP  ,                                                 00047000
.*******************************************************************    00047100
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00047200
.*******************************************************************    00047300
                LCLC  &XLOCATION  ++ NAME                               00047400
                LCLC  &XNETWORK_ID              ++ NAME                 00047500
                LCLC  &XLUNAME    ++ NAME                               00047600
                LCLC  &XHOST      ++ NAME                               00047700
                LCLC  &XRETCODE   ++ NAME                               00047800
                LCLC  &XRSNCODE   ++ NAME                               00047900
                LCLA  &XPLISTVER  ++ VALUE                              00048000
                LCLC  &XMF        ++ VALUE                              00048100
                LCLC  &XMFCTRL    ++ NAME                               00048200
                LCLC  &XMFATTR    ++ VALUE                              00048300
                LCLC  &XMFSCK     ++ VALUE                              00048400
.*******************************************************************    00048500
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00048600
.*******************************************************************    00048700
                LCLC  &ZXLOCATION               ++ INPUT NAME           00048800
                LCLC  &ZXNETWORK_ID             ++ INPUT NAME           00048900
                LCLC  &ZXLUNAME   ++ INPUT NAME                         00049000
                LCLC  &ZXHOST     ++ INPUT NAME                         00049100
                LCLC  &ZXRETCODE  ++ OUTPUT NAME                        00049200
                LCLC  &ZXRSNCODE  ++ OUTPUT NAME                        00049300
                LCLC  &ZXPLISTVER               ++ INPUT VALUE          00049400
                LCLC  &ZXMF       ++ INPUT VALUE                        00049500
                LCLC  &ZXMFCTRL   ++ INPUT NAME                         00049600
                LCLC  &ZXMFATTR   ++ INPUT VALUE                        00049700
                LCLC  &ZXMFSCK    ++ INPUT VALUE                        00049800
.********************************************************************   00049900
.***AC.PLV01  PROCESS PLISTVER                                      *   00050000
.********************************************************************   00050100
&XPLISTVER      SETA  0                                                 00050200
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00050300
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00050400
&XPLISTVER      SETA  1                                                 00050500
.ZPLV0          ANOP  ,                                                 00050600
.*                                                                      00050700
                AIF   ('&HOST' EQ '').ZPLV1E                            00050800
                AIF   (&XPLISTVER GE 1).ZPLV1E                          00050900
&XPLISTVER      SETA  1                                                 00051000
.ZPLV1E         ANOP  ,                                                 00051100
.*                                                                      00051200
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00051300
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00051400
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00051500
.*-------------------------------------------------------------------   00051600
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00051700
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00051800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00051900
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00052000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00052100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00052200
                AGO   .ZPVCK2                                           00052300
.ZPVCK3         ANOP  ,                                                 00052400
.*-------------------------------------------------------------------   00052500
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00052600
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00052700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00052800
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00052900
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00053000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00053100
                AGO   .ZPVCKE                                           00053200
.ZPVCK2         ANOP  ,                                                 00053300
.*-------------------------------------------------------------------   00053400
&ZCVAL          SETC  '&PLISTVER(1)'                                    00053500
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00053600
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00053700
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00053800
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00053900
                AIF   (&ZN LE 1).ZPVCK4A   NOT HIGH                     00054000
.ZPVCK6         ANOP  ,                                                 00054100
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00054200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00054300
&ZMS            SETC  '&ZMS THE RANGE IS "0-1"'                         00054400
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00054500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00054600
&XPLISTVER      SETA  1                                                 00054700
                AGO   .ZPVCKE                                           00054800
.*-------------------------------------------------------------------   00054900
.ZPVCK4A        ANOP  ,                                                 00055000
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00055100
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00055200
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00055300
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00055400
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00055500
                MNOTE 8,' &ZMS IS REQUIRED.'                            00055600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00055700
                AGO   .ZPVCK5                                           00055800
.ZPVCK4         ANOP  ,                                                 00055900
&XPLISTVER      SETA  &PLISTVER(1)                                      00056000
.ZPVCK5         ANOP  ,                                                 00056100
.ZPVCKE         ANOP  ,                                                 00056200
.********************************************************************   00056300
.***AG.MF01 PROCESS MF MACRO FORMS                                      00056400
.********************************************************************   00056500
                ACTR  10000                                             00056600
.*------------------------------------------------------------------    00056700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00056800
&XMF            SETC  ''          INITIALIZE XVARIABLE                  00056900
.*-------------------------------------------------------------------   00057000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00057100
.ZG24           ANOP  ,                                                 00057200
&ZTLC           SETC 'S'                                                00057300
                AIF   ('&MF(1)' NE '&ZTLC').ZG25                        00057400
&XMF            SETC  'S'         SET KEYWORD                           00057500
                AIF   (N'&MF LE 1).ZG24A        CK NUM                  00057600
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         00057700
&ZMS            SETC  '&ZMS.&MF"'                                       00057800
&ZMS            SETC  '&ZMS "MF"'                                       00057900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00058000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00058100
.ZG24A          ANOP  ,                                                 00058200
.*-------------------------------------------------------------------   00058300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00058400
.ZG25           ANOP  ,                                                 00058500
&ZTLC           SETC 'L'                                                00058600
                AIF   ('&MF(1)' NE '&ZTLC').ZG32                        00058700
&XMF            SETC  'L'         SET KEYWORD                           00058800
                AIF   (N'&MF LE 3).ZG25A        CK NUM                  00058900
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         00059000
&ZMS            SETC  '&ZMS.&MF"'                                       00059100
&ZMS            SETC  '&ZMS "MF"'                                       00059200
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              00059300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00059400
.ZG25A          ANOP  ,                                                 00059500
.*-------------------------------------------------------------------   00059600
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00059700
                AIF   (N'&SYSLIST NE 0).ZG25B   POSITIONALS?            00059800
                AIF   ('&LOCATION' NE '').ZG25B  KEYS?                  00059900
                AIF   ('&NETWORK_ID' NE '').ZG25B  KEYS?                00060000
                AIF   ('&LUNAME' NE '').ZG25B   KEYS?                   00060100
                AIF   ('&HOST' NE '').ZG25B     KEYS?                   00060200
                AIF   ('&RETCODE' NE '').ZG25B  KEYS?                   00060300
                AIF   ('&RSNCODE' NE '').ZG25B  KEYS?                   00060400
                AGO    .ZG25C     INVOCATION OKAY                       00060500
.ZG25B          ANOP  ,                                                 00060600
&ZMS            SETC  'THE "L" FORM OF "MF"'    *MFLA* MNOTE            00060700
&ZMS            SETC  '&ZMS CAN ONLY HAVE'                              00060800
&ZMS            SETC  '&ZMS THE "PLISTVER" KEY'                         00060900
                MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'            00061000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00061100
.ZG25C          ANOP  ,                                                 00061200
.*-------------------------------------------------------------------   00061300
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00061400
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         00061500
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         00061600
                AIF   (N'&MF(2) GT 1).ZG27B     MULTI PARMS             00061700
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         00061800
.ZG27B          AIF   (K'&MF(2) GT 0).ZG27C                             00061900
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00062000
&ZMS            SETC  'WHEN "L" IS SPECIFIED'   *KRQDA*                 00062100
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               00062200
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      00062300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00062400
.ZG27C          ANOP  ,                                                 00062500
.*-------------------------------------------------------------------   00062600
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00062700
                AIF   (K'&ZXMFCTRL LE 0).ZG27P  NOT I/O                 00062800
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG27P                    00062900
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00063000
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         00063100
&ZMS            SETC  '&ZMS.&MF"'                                       00063200
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00063300
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                 00063400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00063500
.ZG27P          ANOP  ,                                                 00063600
.*-------------------------------------------------------------------   00063700
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00063800
&ZXMFATTR       SETC  'INPUT'     SET IN/OUTPUT                         00063900
&XMFATTR        SETC  '0D'                                              00064000
                AIF   (K'&MF(3) LE 0).ZG30B     PARM                    00064100
&XMFATTR        SETC  '&MF(3,1)'  SET XVARIABLE                         00064200
                AIF   (N'&MF(3) GT 1).ZG30B     MULTI PARMS             00064300
&XMFATTR        SETC  '&MF(3)'    SET XVARIABLE                         00064400
.ZG30B          ANOP  ,                                                 00064500
.*-------------------------------------------------------------------   00064600
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00064700
                AIF   (K'&ZXMFATTR LE 0).ZG30P  NOT I/O                 00064800
                AIF   ('&XMFATTR'(1,1) NE '(').ZG30P                    00064900
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       00065000
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         00065100
&ZMS            SETC  '&ZMS.&MF"'                                       00065200
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00065300
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                 00065400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00065500
.ZG30P          ANOP  ,                                                 00065600
.*-------------------------------------------------------------------   00065700
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00065800
                AIF   (K'&ZXMFATTR LE 0).ZG30S  NOT I/O                 00065900
                AIF   (K'&XMFATTR LE 60).ZG30S  LNG OK                  00066000
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       00066100
&ZMS            SETC  '"MF='      *KLNGA* MNOTE                         00066200
&ZMS            SETC  '&ZMS.&MF"'                                       00066300
&ZMS            SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'             00066400
                MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                00066500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00066600
.ZG30S          ANOP  ,                                                 00066700
.*-------------------------------------------------------------------   00066800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00066900
.ZG32           ANOP  ,                                                 00067000
&ZTLC           SETC 'E'                                                00067100
                AIF   ('&MF(1)' NE '&ZTLC').ZG40                        00067200
&XMF            SETC  'E'         SET KEYWORD                           00067300
                AIF   (N'&MF LE 3).ZG32A        CK NUM                  00067400
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         00067500
&ZMS            SETC  '&ZMS.&MF"'                                       00067600
&ZMS            SETC  '&ZMS "MF"'                                       00067700
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              00067800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00067900
.ZG32A          ANOP  ,                                                 00068000
.*-------------------------------------------------------------------   00068100
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00068200
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         00068300
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         00068400
                AIF   (N'&MF(2) GT 1).ZG34B     MULTI PARMS             00068500
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         00068600
.ZG34B          AIF   (K'&MF(2) GT 0).ZG34C                             00068700
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00068800
&ZMS            SETC  'WHEN "E" IS SPECIFIED'   *KRQDA*                 00068900
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               00069000
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      00069100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00069200
.ZG34C          ANOP  ,                                                 00069300
.*-------------------------------------------------------------------   00069400
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00069500
                AIF   (K'&ZXMFCTRL LE 0).ZG34R  NOT I/O                 00069600
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG34R                    00069700
&ZCGPR          SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                        00069800
                AIF   ('&ZCGPR'(1,1) NE '0').ZG34P                      00069900
                AIF   (K'&ZCGPR GT 2).ZG34Q                             00070000
                AIF   ('&ZCGPR' EQ '0').ZG34Q                           00070100
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00070200
                AIF   (T'&ZCGPR NE 'N').ZG34Q   INVALID REG NAME        00070300
.ZG34P          ANOP  ,                                                 00070400
                AIF   (T'&ZCGPR NE 'N').ZG34R   NON NUMERIC             00070500
                AIF   ('&ZCGPR' LT '1').ZG34Q                           00070600
                AIF   ('&ZCGPR' LE '12').ZG34R                          00070700
.ZG34Q          ANOP  ,                                                 00070800
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         00070900
&ZMS            SETC  '&ZMS.&MF"'                                       00071000
&ZMS            SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'         00071100
                MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                  00071200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00071300
.ZG34R          ANOP  ,                                                 00071400
.*-------------------------------------------------------------------   00071500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00071600
&XMFSCK         SETC  ''          INITIALIZE XVARIABLE                  00071700
.ZG38A   AIF   ('&MF(3)' NE 'COMPLETE').ZG39A                           00071800
&XMFSCK         SETC  'COMPLETE'  SET KEYWORD                           00071900
.*-------------------------------------------------------------------   00072000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00072100
.ZG39A          AIF   (K'&XMFSCK GT 0).ZG39C    KEYWORD                 00072200
                AIF   (K'&MF(3) LE 0).ZG39B                             00072300
&ZMS            SETC  '"MF='      *KUKWA* MNOTE                         00072400
&ZMS            SETC  '&ZMS.&MF"'                                       00072500
&ZMS            SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '         00072600
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00072700
&ZMS            SETC  '&ZMS "COMPLETE".'        VALID KEYWORD           00072800
                MNOTE 8,' &ZMS '                                        00072900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00073000
.ZG39B          ANOP  ,                                                 00073100
&XMFSCK         SETC  'COMPLETE'  SET DEFAULT KEYWORD                   00073200
.ZG39C          ANOP  ,                                                 00073300
&ZXMFSCK        SETC  'INPUT'     SET IN/OUTPUT                         00073400
.*------------------------------------------------------------------    00073500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00073600
.ZG40           ANOP  ,                                                 00073700
&ZXMF           SETC  'INPUT'     SET IN/OUTPUT                         00073800
                AIF   (K'&XMF GT 0).ZG40E       VALID ARG               00073900
                AIF   (T'&MF EQ 'O').ZG40D      OMITTED                 00074000
&ZASYSLNDX      SETA  0                                                 00074100
.ZG40A          ANOP  ,           POSITIONAL MACRO KEY                  00074200
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00074300
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG40C                  00074400
&ZTLC           SETC 'MF'                                               00074500
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG40A         00074600
.ZG40B          ANOP  ,                                                 00074700
&ZXMF           SETC  ''          RESET IN/OUTPUT                       00074800
&ZMS            SETC  'THE "MF" KEY'            *KOPTA* MNOTE           00074900
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00075000
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00075100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00075200
                AGO   .ZG40E                                            00075300
.ZG40C          ANOP  ,                                                 00075400
&ZXMF           SETC  ''          RESET IN/OUTPUT                       00075500
&ZMS            SETC  '"MF='      *KUKWA* MNOTE                         00075600
&ZMS            SETC  '&ZMS.&MF"'                                       00075700
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00075800
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00075900
&ZMS            SETC  '&ZMS "S",'               VALID KEYWORD           00076000
&ZMS            SETC  '&ZMS "L",'               VALID KEYWORD           00076100
&ZMS            SETC  '&ZMS OR "E".'            VALID KEYWORD           00076200
                MNOTE 8,' &ZMS '                                        00076300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00076400
                AGO   .ZG40E                                            00076500
.ZG40D          ANOP  ,                                                 00076600
&XMF            SETC  'S'         SET DEFAULT KEYWORD                   00076700
&XMFSCK         SETC  'COMPLETE'  COMPLETE CHECKING                     00076800
.ZG40E          ANOP  ,                                                 00076900
.********************************************************************   00077000
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00077100
.********************************************************************   00077200
                ACTR  10000                                             00077300
.*-------------------------------------------------------------------   00077400
.***AG.MF03 MF=(SLE)                                                    00077500
                AIF   ('&XMF' EQ 'L').ZGMFX                             00077600
.*----------------------------------------------------------------***   00077700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00077800
                AIF   (N'&LOCATION LE 1).ZG2A   CK NUM                  00077900
&ZMS            SETC  '"LOCATION='              *KPOSA* MNOTE           00078000
&ZMS            SETC  '&ZMS.&LOCATION"'                                 00078100
&ZMS            SETC  '&ZMS "LOCATION"'                                 00078200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00078300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00078400
.ZG2A           ANOP  ,                                                 00078500
.*-------------------------------------------------------------------   00078600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00078700
&ZXLOCATION     SETC  'INPUT'     SET IN/OUTPUT                         00078800
&XLOCATION      SETC  '&LOCATION(1)'            SET XVARIABLE           00078900
                AIF   (N'&LOCATION GT 1).ZG2B   MULTI PARMS             00079000
&XLOCATION      SETC  '&LOCATION'               SET XVARIABLE           00079100
.ZG2B           AIF   (K'&LOCATION(1) GT 0).ZG2C                        00079200
&ZXLOCATION     SETC  ''          RESET IN/OUTPUT                       00079300
&ZMS            SETC  ' '         *KRQDA*                               00079400
&ZMS            SETC  '&ZMS "LOCATION" KEY AND ITS ARGUMENT'            00079500
                MNOTE 8,' &ZMS ARE REQUIRED.'                           00079600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00079700
.ZG2C           ANOP  ,                                                 00079800
.*-------------------------------------------------------------------   00079900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00080000
                AIF   (K'&ZXLOCATION LE 0).ZG2R  NOT I/O                00080100
                AIF   ('&XLOCATION'(1,1) NE '(').ZG2R                   00080200
&ZCGPR          SETC  '&XLOCATION'(2,K'&XLOCATION-2)                    00080300
                AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                       00080400
                AIF   (K'&ZCGPR GT 2).ZG2Q                              00080500
                AIF   ('&ZCGPR' EQ '0').ZG2Q                            00080600
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00080700
                AIF   (T'&ZCGPR NE 'N').ZG2Q    INVALID REG NAME        00080800
.ZG2P           ANOP  ,                                                 00080900
                AIF   (T'&ZCGPR NE 'N').ZG2R    NON NUMERIC             00081000
                AIF   ('&ZCGPR' LT '2').ZG2Q                            00081100
                AIF   ('&ZCGPR' LE '12').ZG2R                           00081200
.ZG2Q           ANOP  ,                                                 00081300
&ZMS            SETC  '"LOCATION='              *KGPRA* MNOTE           00081400
&ZMS            SETC  '&ZMS.&LOCATION"'                                 00081500
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00081600
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00081700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00081800
.ZG2R           ANOP  ,                                                 00081900
.*----------------------------------------------------------------***   00082000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00082100
                AIF   (N'&NETWORK_ID LE 1).ZG5A  CK NUM                 00082200
&ZMS            SETC  '"NETWORK_ID='            *KPOSA* MNOTE           00082300
&ZMS            SETC  '&ZMS.&NETWORK_ID"'                               00082400
&ZMS            SETC  '&ZMS "NETWORK_ID"'                               00082500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00082600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00082700
.ZG5A           ANOP  ,                                                 00082800
.*-------------------------------------------------------------------   00082900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00083000
&ZXNETWORK_ID   SETC  'INPUT'     SET IN/OUTPUT                         00083100
&XNETWORK_ID    SETC  '&NETWORK_ID(1)'          SET XVARIABLE           00083200
                AIF   (N'&NETWORK_ID GT 1).ZG5B  MULTI PARMS            00083300
&XNETWORK_ID    SETC  '&NETWORK_ID'             SET XVARIABLE           00083400
.ZG5B           AIF   (K'&NETWORK_ID(1) GT 0).ZG5C                      00083500
&ZXNETWORK_ID   SETC  ''          RESET IN/OUTPUT                       00083600
&ZMS            SETC  ' '         *KRQDA*                               00083700
&ZMS            SETC  '&ZMS "NETWORK_ID" KEY AND ITS ARGUMENT'          00083800
                MNOTE 8,' &ZMS ARE REQUIRED.'                           00083900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00084000
.ZG5C           ANOP  ,                                                 00084100
.*-------------------------------------------------------------------   00084200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00084300
                AIF   (K'&ZXNETWORK_ID LE 0).ZG5R  NOT I/O              00084400
                AIF   ('&XNETWORK_ID'(1,1) NE '(').ZG5R                 00084500
&ZCGPR          SETC  '&XNETWORK_ID'(2,K'&XNETWORK_ID-2)                00084600
                AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                       00084700
                AIF   (K'&ZCGPR GT 2).ZG5Q                              00084800
                AIF   ('&ZCGPR' EQ '0').ZG5Q                            00084900
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00085000
                AIF   (T'&ZCGPR NE 'N').ZG5Q    INVALID REG NAME        00085100
.ZG5P           ANOP  ,                                                 00085200
                AIF   (T'&ZCGPR NE 'N').ZG5R    NON NUMERIC             00085300
                AIF   ('&ZCGPR' LT '2').ZG5Q                            00085400
                AIF   ('&ZCGPR' LE '12').ZG5R                           00085500
.ZG5Q           ANOP  ,                                                 00085600
&ZMS            SETC  '"NETWORK_ID='            *KGPRA* MNOTE           00085700
&ZMS            SETC  '&ZMS.&NETWORK_ID"'                               00085800
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00085900
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00086000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00086100
.ZG5R           ANOP  ,                                                 00086200
.*----------------------------------------------------------------***   00086300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00086400
                AIF   (N'&LUNAME LE 1).ZG8A     CK NUM                  00086500
&ZMS            SETC  '"LUNAME='  *KPOSA* MNOTE                         00086600
&ZMS            SETC  '&ZMS.&LUNAME"'                                   00086700
&ZMS            SETC  '&ZMS "LUNAME"'                                   00086800
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00086900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00087000
.ZG8A           ANOP  ,                                                 00087100
.*-------------------------------------------------------------------   00087200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00087300
&ZXLUNAME       SETC  'INPUT'     SET IN/OUTPUT                         00087400
&XLUNAME        SETC  '&LUNAME(1)'              SET XVARIABLE           00087500
                AIF   (N'&LUNAME GT 1).ZG8B     MULTI PARMS             00087600
&XLUNAME        SETC  '&LUNAME'   SET XVARIABLE                         00087700
.ZG8B           AIF   (K'&LUNAME(1) GT 0).ZG8C                          00087800
&ZXLUNAME       SETC  ''          RESET IN/OUTPUT                       00087900
&ZMS            SETC  ' '         *KRQDA*                               00088000
&ZMS            SETC  '&ZMS "LUNAME" KEY AND ITS ARGUMENT'              00088100
                MNOTE 8,' &ZMS ARE REQUIRED.'                           00088200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00088300
.ZG8C           ANOP  ,                                                 00088400
.*-------------------------------------------------------------------   00088500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00088600
                AIF   (K'&ZXLUNAME LE 0).ZG8R   NOT I/O                 00088700
                AIF   ('&XLUNAME'(1,1) NE '(').ZG8R                     00088800
&ZCGPR          SETC  '&XLUNAME'(2,K'&XLUNAME-2)                        00088900
                AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                       00089000
                AIF   (K'&ZCGPR GT 2).ZG8Q                              00089100
                AIF   ('&ZCGPR' EQ '0').ZG8Q                            00089200
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00089300
                AIF   (T'&ZCGPR NE 'N').ZG8Q    INVALID REG NAME        00089400
.ZG8P           ANOP  ,                                                 00089500
                AIF   (T'&ZCGPR NE 'N').ZG8R    NON NUMERIC             00089600
                AIF   ('&ZCGPR' LT '2').ZG8Q                            00089700
                AIF   ('&ZCGPR' LE '12').ZG8R                           00089800
.ZG8Q           ANOP  ,                                                 00089900
&ZMS            SETC  '"LUNAME='  *KGPRA* MNOTE                         00090000
&ZMS            SETC  '&ZMS.&LUNAME"'                                   00090100
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00090200
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00090300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00090400
.ZG8R           ANOP  ,                                                 00090500
.*----------------------------------------------------------------***   00090600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00090700
                AIF   (N'&HOST LE 1).ZG11A      CK NUM                  00090800
&ZMS            SETC  '"HOST='    *KPOSA* MNOTE                         00090900
&ZMS            SETC  '&ZMS.&HOST"'                                     00091000
&ZMS            SETC  '&ZMS "HOST"'                                     00091100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00091200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00091300
.ZG11A          ANOP  ,                                                 00091400
.*-------------------------------------------------------------------   00091500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00091600
&ZXHOST         SETC  'INPUT'     SET IN/OUTPUT                         00091700
&XHOST          SETC  'NO_HOST'                                         00091800
                AIF   (K'&HOST(1) LE 0).ZG11B   PARM                    00091900
&XHOST          SETC  '&HOST(1)'  SET XVARIABLE                         00092000
                AIF   (N'&HOST GT 1).ZG11B      MULTI PARMS             00092100
&XHOST          SETC  '&HOST'     SET XVARIABLE                         00092200
.ZG11B          ANOP  ,                                                 00092300
.*-------------------------------------------------------------------   00092400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00092500
                AIF   (K'&ZXHOST LE 0).ZG11R    NOT I/O                 00092600
                AIF   ('&XHOST' EQ 'NO_HOST').ZG11R                     00092700
                AIF   ('&XHOST'(1,1) NE '(').ZG11R                      00092800
&ZCGPR          SETC  '&XHOST'(2,K'&XHOST-2)                            00092900
                AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                      00093000
                AIF   (K'&ZCGPR GT 2).ZG11Q                             00093100
                AIF   ('&ZCGPR' EQ '0').ZG11Q                           00093200
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00093300
                AIF   (T'&ZCGPR NE 'N').ZG11Q   INVALID REG NAME        00093400
.ZG11P          ANOP  ,                                                 00093500
                AIF   (T'&ZCGPR NE 'N').ZG11R   NON NUMERIC             00093600
                AIF   ('&ZCGPR' LT '2').ZG11Q                           00093700
                AIF   ('&ZCGPR' LE '12').ZG11R                          00093800
.ZG11Q          ANOP  ,                                                 00093900
&ZMS            SETC  '"HOST='    *KGPRA* MNOTE                         00094000
&ZMS            SETC  '&ZMS.&HOST"'                                     00094100
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00094200
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00094300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00094400
.ZG11R          ANOP  ,                                                 00094500
.*----------------------------------------------------------------***   00094600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00094700
                AIF   (N'&RETCODE LE 1).ZG14A   CK NUM                  00094800
&ZMS            SETC  '"RETCODE='               *KPOSA* MNOTE           00094900
&ZMS            SETC  '&ZMS.&RETCODE"'                                  00095000
&ZMS            SETC  '&ZMS "RETCODE"'                                  00095100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00095200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00095300
.ZG14A          ANOP  ,                                                 00095400
.*-------------------------------------------------------------------   00095500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00095600
                AIF   (K'&RETCODE(1) LE 0).ZG14C  NO PARM               00095700
&ZXRETCODE      SETC  'OUTPUT'    SET OUTPUT                            00095800
&XRETCODE       SETC  '&RETCODE(1)'             SET XVARIABLE           00095900
                AIF   (N'&RETCODE GT 1).ZG14C                           00096000
&XRETCODE       SETC  '&RETCODE'  SET XVARIABLE                         00096100
.ZG14C          ANOP  ,                                                 00096200
.*-------------------------------------------------------------------   00096300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00096400
                AIF   (K'&ZXRETCODE LE 0).ZG14R  NOT I/O                00096500
                AIF   ('&XRETCODE'(1,1) NE '(').ZG14R                   00096600
&ZCGPR          SETC  '&XRETCODE'(2,K'&XRETCODE-2)                      00096700
                AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                      00096800
                AIF   (K'&ZCGPR GT 2).ZG14Q                             00096900
                AIF   ('&ZCGPR' EQ '0').ZG14Q                           00097000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00097100
                AIF   (T'&ZCGPR NE 'N').ZG14Q   INVALID REG NAME        00097200
.ZG14P          ANOP  ,                                                 00097300
                AIF   (T'&ZCGPR NE 'N').ZG14R   NON NUMERIC             00097400
                AIF   ('&ZCGPR' LT '2').ZG14Q                           00097500
                AIF   ('&ZCGPR' LE '12').ZG14R                          00097600
.ZG14Q          ANOP  ,                                                 00097700
&ZMS            SETC  '"RETCODE='               *KGPRA* MNOTE           00097800
&ZMS            SETC  '&ZMS.&RETCODE"'                                  00097900
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00098000
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00098100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00098200
.ZG14R          ANOP  ,                                                 00098300
.*----------------------------------------------------------------***   00098400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00098500
                AIF   (N'&RSNCODE LE 1).ZG17A   CK NUM                  00098600
&ZMS            SETC  '"RSNCODE='               *KPOSA* MNOTE           00098700
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00098800
&ZMS            SETC  '&ZMS "RSNCODE"'                                  00098900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00099000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00099100
.ZG17A          ANOP  ,                                                 00099200
.*-------------------------------------------------------------------   00099300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00099400
                AIF   (K'&RSNCODE(1) LE 0).ZG17C  NO PARM               00099500
&ZXRSNCODE      SETC  'OUTPUT'    SET OUTPUT                            00099600
&XRSNCODE       SETC  '&RSNCODE(1)'             SET XVARIABLE           00099700
                AIF   (N'&RSNCODE GT 1).ZG17C                           00099800
&XRSNCODE       SETC  '&RSNCODE'  SET XVARIABLE                         00099900
.ZG17C          ANOP  ,                                                 00100000
.*-------------------------------------------------------------------   00100100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00100200
                AIF   (K'&ZXRSNCODE LE 0).ZG17R  NOT I/O                00100300
                AIF   ('&XRSNCODE'(1,1) NE '(').ZG17R                   00100400
&ZCGPR          SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                      00100500
                AIF   ('&ZCGPR'(1,1) NE '0').ZG17P                      00100600
                AIF   (K'&ZCGPR GT 2).ZG17Q                             00100700
                AIF   ('&ZCGPR' EQ '0').ZG17Q                           00100800
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00100900
                AIF   (T'&ZCGPR NE 'N').ZG17Q   INVALID REG NAME        00101000
.ZG17P          ANOP  ,                                                 00101100
                AIF   (T'&ZCGPR NE 'N').ZG17R   NON NUMERIC             00101200
                AIF   ('&ZCGPR' LT '2').ZG17Q                           00101300
                AIF   ('&ZCGPR' LE '12').ZG17R                          00101400
.ZG17Q          ANOP  ,                                                 00101500
&ZMS            SETC  '"RSNCODE='               *KGPRA* MNOTE           00101600
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00101700
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00101800
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00101900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00102000
.ZG17R          ANOP  ,                                                 00102100
.******************************************************************     00102200
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00102300
.******************************************************************     00102400
                ACTR  10000                                             00102500
.*----------------------------------------------------------------***   00102600
.***AH.P02 EXTRA POSITIONALS                                            00102700
                AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS              00102800
                AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL              00102900
                AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL          00103000
                AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL           00103100
.ZGLISTX1       ANOP  ,                                                 00103200
&ZCVAL          SETC  ''          ERROR FIELD                           00103300
&ZAWRK          SETA  0           POSITIONAL NUMBER                     00103400
.ZGLIST2        ANOP  ,                                                 00103500
&ZAWRK          SETA  &ZAWRK+1    NEXT POSITIONAL                       00103600
                AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE              00103700
&ZCVAL          SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                   00103800
                AGO   .ZGLIST2                                          00103900
.*                                                                      00104000
.ZGLIST3        ANOP  ,                                                 00104100
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)     STRIP COMMA             00104200
&ZMS            SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE          00104300
&ZMS            SETC  '&ZMS "&ZCVAL"'                                   00104400
&ZMS            SETC  '&ZMS CANNOT BE USED.'                            00104500
&ZMS            SETC  '&ZMS NO POSITIONAL ARGUMENTS'                    00104600
                MNOTE 8,' &ZMS ARE ALLOWED.'                            00104700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00104800
.ZGLISTX        ANOP  ,                                                 00104900
&ZASYSLNDX      SETA  0                                                 00105000
.*-------------------------------------------------------------------   00105100
.***AG.MF04 MF=(SLE)                                                    00105200
.ZGMFX          ANOP  ,           END OF FULL SYNTAX CHECK              00105300
.*******************************************************************    00105400
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00105500
.*******************************************************************    00105600
                AIF   (&ZMACRET NE 0).ZLX2      ERROR DETECTED          00105700
.*******************************************************************    00105800
.***AE.01  START OF IWMSRDRS MACRO CODE                                 00105900
.*******************************************************************    00106000
                LCLC  &M0M0001                 NAME                     00106100
&M0M0001        SETC  '&XLABEL'                SET NAME                 00106200
                AIF   (K'&XLABEL NE 0).XLAB2                            00106300
&M0M0001        SETC  'M00M&SYSNDX'            DEFAULT NAME             00106400
.*                                                                      00106500
.XLAB2          ANOP  ,                                                 00106600
                AIF   ('&XMF' EQ 'L').XLAB3                             00106700
&M0M0001 DS    0H                             IWMSRDRS-1                00106800
.XLAB3          ANOP  ,                                                 00106900
.*******************************************************************    00107000
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00107100
.*******************************************************************    00107200
              PUSH  PRINT                                               00107300
                AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON        00107400
                PRINT OFF         ++ PR01                               00107500
                AGO   .ZPRNTXX                                          00107600
.ZPRINTX        PRINT ON                                                00107700
.ZPRNTXX        ANOP  ,                                                 00107800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00107900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00108000
.********************************************************************   00108100
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00108200
.********************************************************************   00108300
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00108400
                      LCLA  &ZOPN1         INVOCATION INDEX             00108500
                      LCLC  &ZOPL(4095)    LABEL                        00108600
                      LCLC  &ZOPO(4095)    OPERATION                    00108700
                      LCLC  &ZOPV(4095)    VALUE                        00108800
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00108900
.*                                                                      00109000
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00109100
.******************************************************************     00109200
.***AL.L10 IWMSRDRS FMT=LIST MF=S|L PARAMETERS                          00109300
.******************************************************************     00109400
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00109500
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00109600
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00109700
&XMFATTR              SETC  '0D'                                        00109800
.*                                                                      00109900
&ZOPN                 SETA  &ZOPN+1                                     00110000
&ZOPL(&ZOPN)          SETC  ' '                                         00110100
&ZOPO(&ZOPN)          SETC  'B'                                         00110200
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00110300
&ZOPD(&ZOPN)          SETC  '++ IWMSRDRS ARG PARMS'                     00110400
.*                                                                      00110500
&ZOPN                 SETA  &ZOPN+1                                     00110600
&ZOPL(&ZOPN)          SETC  ' '                                         00110700
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00110800
&ZOPV(&ZOPN)          SETC  '1'                                         00110900
&ZOPD(&ZOPN)          SETC  ' '                                         00111000
.*                                                                      00111100
.ZLMFSL2              ANOP  ,                                           00111200
.*-------------------------------------------------------------------   00111300
.***AM.L00  IWMSRDRS FMT=LIST name                                      00111400
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00111500
&ZOPN                 SETA &ZOPN+1                                      00111600
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00111700
&ZOPO(&ZOPN)          SETC 'EQU'                                        00111800
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00111900
&ZOPD(&ZOPN)          SETC '++ IWMSRDRS NAME'                           00112000
.ZLMFSL2M             ANOP  ,                                           00112100
.*-------------------------------------------------------------------   00112200
.***AM.L01  IWMSRDRS FMT=LIST PARAMETERS                                00112300
&ZOPN                 SETA &ZOPN+1                                      00112400
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00112500
&ZOPO(&ZOPN)          SETC 'DS'                                         00112600
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00112700
&ZOPD(&ZOPN)          SETC '++ IWMSRDRS PARM LIST'                      00112800
.*-------------------------------------------------------------------   00112900
.***AM.L02 XVERSION XL1                                                 00113000
&ZOPN                 SETA &ZOPN+1                                      00113100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00113200
&ZOPO(&ZOPN)          SETC 'DS'                                         00113300
&ZOPV(&ZOPN)          SETC 'XL1'                                        00113400
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00113500
.*-------------------------------------------------------------------   00113600
.***AM.L09  XLUNAME CL8                                                 00113700
&ZOPN                 SETA &ZOPN+1                                      00113800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLUNAME'                          00113900
&ZOPO(&ZOPN)          SETC 'DS'                                         00114000
&ZOPV(&ZOPN)          SETC 'CL8'                                        00114100
&ZOPD(&ZOPN)          SETC '++ &ZXLUNAME  XLUNAME'                      00114200
.*-------------------------------------------------------------------   00114300
.***AM.L09  XNETWORK_ID CL8                                             00114400
&ZOPN                 SETA &ZOPN+1                                      00114500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNETWORK_ID'                      00114600
&ZOPO(&ZOPN)          SETC 'DS'                                         00114700
&ZOPV(&ZOPN)          SETC 'CL8'                                        00114800
&ZOPD(&ZOPN)          SETC '++ &ZXNETWORK_ID  XNETWORK_ID'              00114900
.*-------------------------------------------------------------------   00115000
.***AM.L09  XLOCATION CL18                                              00115100
&ZOPN                 SETA &ZOPN+1                                      00115200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLOCATION'                        00115300
&ZOPO(&ZOPN)          SETC 'DS'                                         00115400
&ZOPV(&ZOPN)          SETC 'CL18'                                       00115500
&ZOPD(&ZOPN)          SETC '++ &ZXLOCATION  XLOCATION'                  00115600
.*-------------------------------------------------------------------   00115700
.***AM.L09  XRSV001A CL4                                                00115800
&ZOPN                 SETA &ZOPN+1                                      00115900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV001A'                         00116000
&ZOPO(&ZOPN)          SETC 'DS'                                         00116100
&ZOPV(&ZOPN)          SETC 'CL4'                                        00116200
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV001A'                      00116300
.*-------------------------------------------------------------------   00116400
.***AM.MLM2 SAVED LOCATION COUNTER                                      00116500
                      AIF  (&XPLISTVER GE 1).ZL5LA                      00116600
                      AIF  ('&ZENDBASEPL' NE '').ZL5LA                  00116700
&ZENDBASEPL           SETC 'YES'                                        00116800
&ZOPN                 SETA &ZOPN+1                                      00116900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00117000
&ZOPO(&ZOPN)          SETC 'EQU'                                        00117100
&ZOPV(&ZOPN)          SETC '*'                                          00117200
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00117300
.ZL5LA                ANOP  ,                                           00117400
.*-------------------------------------------------------------------   00117500
.***AM.LVER1                                                            00117600
                      AIF  (&XPLISTVER LT 1).ZL5L                       00117700
.*-------------------------------------------------------------------   00117800
.*-------------------------------------------------------------------   00117900
.***AM.L09  XRSV0023 CL1                                                00118000
&ZOPN                 SETA &ZOPN+1                                      00118100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0023'                         00118200
&ZOPO(&ZOPN)          SETC 'DS'                                         00118300
&ZOPV(&ZOPN)          SETC 'CL1'                                        00118400
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0023'                      00118500
.*-------------------------------------------------------------------   00118600
.***AM.LVER2                                                            00118700
.ZL5L                 ANOP  ,                                           00118800
.*-------------------------------------------------------------------   00118900
.*-------------------------------------------------------------------   00119000
.***AM.LVER1                                                            00119100
                      AIF  (&XPLISTVER LT 1).ZL6L                       00119200
.*-------------------------------------------------------------------   00119300
.*-------------------------------------------------------------------   00119400
.***AM.L09  XPLISTLEN XL2                                               00119500
&ZOPN                 SETA &ZOPN+1                                      00119600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00119700
&ZOPO(&ZOPN)          SETC 'DS'                                         00119800
&ZOPV(&ZOPN)          SETC 'XL2'                                        00119900
&ZOPD(&ZOPN)          SETC '++ INPUT  XPLISTLEN'                        00120000
.*-------------------------------------------------------------------   00120100
.***AM.LVER2                                                            00120200
.ZL6L                 ANOP  ,                                           00120300
.*-------------------------------------------------------------------   00120400
.*-------------------------------------------------------------------   00120500
.***AM.LVER1                                                            00120600
                      AIF  (&XPLISTVER LT 1).ZL7L                       00120700
.*-------------------------------------------------------------------   00120800
.*-------------------------------------------------------------------   00120900
.***AM.L09  XRSV002A CL2                                                00121000
&ZOPN                 SETA &ZOPN+1                                      00121100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV002A'                         00121200
&ZOPO(&ZOPN)          SETC 'DS'                                         00121300
&ZOPV(&ZOPN)          SETC 'CL2'                                        00121400
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV002A'                      00121500
.*-------------------------------------------------------------------   00121600
.***AM.LVER2                                                            00121700
.ZL7L                 ANOP  ,                                           00121800
.*-------------------------------------------------------------------   00121900
.*-------------------------------------------------------------------   00122000
.***AM.LVER1                                                            00122100
                      AIF  (&XPLISTVER LT 1).ZL8L                       00122200
.*-------------------------------------------------------------------   00122300
.*-------------------------------------------------------------------   00122400
.***AM.L09 ADDR XHOST A                                                 00122500
&ZOPN                 SETA &ZOPN+1                                      00122600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XHOST_ADDR'                       00122700
&ZOPO(&ZOPN)          SETC 'DS'                                         00122800
&ZOPV(&ZOPN)          SETC 'A'                                          00122900
&ZOPD(&ZOPN)          SETC '++ &ZXHOST ADDR XHOST'                      00123000
.*-------------------------------------------------------------------   00123100
.***AM.LVER2                                                            00123200
.ZL8L                 ANOP  ,                                           00123300
.*-------------------------------------------------------------------   00123400
.*-------------------------------------------------------------------   00123500
.***AM.L10 END OF IWMSRDRS LIST PARAMETERS                              00123600
&ZOPN                 SETA &ZOPN+1                                      00123700
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00123800
&ZOPO(&ZOPN)          SETC 'EQU'                                        00123900
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00124000
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00124100
.*                                                                      00124200
&ZOPN                 SETA &ZOPN+1                                      00124300
&ZOPL(&ZOPN)          SETC ' '                                          00124400
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00124500
&ZOPV(&ZOPN)          SETC '1'                                          00124600
&ZOPD(&ZOPN)          SETC ' '                                          00124700
.*-------------------------------------------------------------------   00124800
.***AL.L12 IWMSRDRS FMT=LIST MF=S|L PARAMETERS                          00124900
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00125000
.*                                                                      00125100
&ZOPN                 SETA  &ZOPN+1                                     00125200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00125300
&ZOPO(&ZOPN)          SETC  'DC'                                        00125400
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00125500
&ZOPD(&ZOPN)          SETC  '++ IWMSRDRS ARG PARMS'                     00125600
.*                                                                      00125700
.ZLMFSLX              ANOP  ,                                           00125800
.*-------------------------------------------------------------------   00125900
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00126000
&ZPLLEN               SETA 39                                           00126100
.*                                                                      00126200
                      AIF  (&XPLISTVER LT 1).ZLLEN2Z                    00126300
&ZPLLEN               SETA 48                                           00126400
.ZLLEN2Z              ANOP  ,                                           00126500
.*                                                                      00126600
.******************************************************************     00126700
.***AI.L01 IWMSRDRS FMT=LIST FILL IN PARAMETER AREA                     00126800
.******************************************************************     00126900
                      ACTR  10000                                       00127000
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00127100
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00127200
&ZCVAL                SETC  'LAE'          XAX MODE                     00127300
.ZIMFXA               ANOP ,                                            00127400
.*                                                                      00127500
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00127600
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00127700
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00127800
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00127900
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00128000
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00128100
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00128200
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00128300
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00128400
&ZOPN                 SETA  &ZOPN+1                                     00128500
&ZOPL(&ZOPN)          SETC  ' '                                         00128600
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00128700
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00128800
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00128900
                      AGO   .ZIMFNX                                     00129000
.*                                                                      00129100
.ZIMFN2               ANOP ,                                            00129200
&ZOPN                 SETA  &ZOPN+1                                     00129300
&ZOPL(&ZOPN)          SETC  ' '                                         00129400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00129500
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00129600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00129700
.ZIMFNX               ANOP ,                                            00129800
.********************************************************************   00129900
.***AI.L02 IWMSRDRS FMT=LIST INITIALIZE PARAMETER AREA                  00130000
.********************************************************************   00130100
.***AI.L03 MF=(SLE)                                                     00130200
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00130300
.*                                                                      00130400
&ZOPN                 SETA  &ZOPN+1                                     00130500
&ZOPL(&ZOPN)          SETC  ' '                                         00130600
&ZOPO(&ZOPN)          SETC  'XC'                                        00130700
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00130800
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00130900
.ZIMFLX               ANOP  ,                                           00131000
.*-------------------------------------------------------------------   00131100
.***AI.L04A XVERSION XL1                                                00131200
                      AIF   (&XPLISTVER EQ 0).ZIMFVW                    00131300
&ZOPN                 SETA  &ZOPN+1                                     00131400
&ZOPL(&ZOPN)          SETC  ' '                                         00131500
&ZOPO(&ZOPN)          SETC  'MVI'                                       00131600
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00131700
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00131800
.ZIMFVW               ANOP  ,                                           00131900
.*-------------------------------------------------------------------   00132000
.***AI.L25  XLUNAME CL8                                                 00132100
                      AIF   ('&ZXLUNAME' EQ '').ZI2E                    00132200
                      AIF   ('&ZXLUNAME' EQ 'OUTPUT').ZI2E              00132300
&ZCGPR                SETC  '&XLUNAME'                                  00132400
.*                                                                      00132500
                      AIF   ('&XLUNAME'(1,1) NE '(').ZI2B               00132600
&ZCGPR   SETC  '0('.'&XLUNAME'(2,K'&XLUNAME-2).')'                      00132700
.ZI2B                 ANOP  ,                                           00132800
.*                                                                      00132900
&ZOPN                 SETA  &ZOPN+1                                     00133000
&ZOPL(&ZOPN)          SETC  ' '                                         00133100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00133200
&ZOPV(&ZOPN)          SETC  '1(8,1),&ZCGPR'                             00133300
&ZOPD(&ZOPN)          SETC  '++ &ZXLUNAME XLUNAME'                      00133400
.*                                                                      00133500
.ZI2E                 ANOP  ,                                           00133600
.*-------------------------------------------------------------------   00133700
.***AI.L25  XNETWORK_ID CL8                                             00133800
                      AIF   ('&ZXNETWORK_ID' EQ '').ZI3E                00133900
                      AIF   ('&ZXNETWORK_ID' EQ 'OUTPUT').ZI3E          00134000
&ZCGPR                SETC  '&XNETWORK_ID'                              00134100
.*                                                                      00134200
                      AIF   ('&XNETWORK_ID'(1,1) NE '(').ZI3B           00134300
&ZCGPR   SETC  '0('.'&XNETWORK_ID'(2,K'&XNETWORK_ID-2).')'              00134400
.ZI3B                 ANOP  ,                                           00134500
.*                                                                      00134600
&ZOPN                 SETA  &ZOPN+1                                     00134700
&ZOPL(&ZOPN)          SETC  ' '                                         00134800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00134900
&ZOPV(&ZOPN)          SETC  '9(8,1),&ZCGPR'                             00135000
&ZOPD(&ZOPN)          SETC  '++ &ZXNETWORK_ID XNETWORK_ID'              00135100
.*                                                                      00135200
.ZI3E                 ANOP  ,                                           00135300
.*-------------------------------------------------------------------   00135400
.***AI.L25  XLOCATION CL18                                              00135500
                      AIF   ('&ZXLOCATION' EQ '').ZI4E                  00135600
                      AIF   ('&ZXLOCATION' EQ 'OUTPUT').ZI4E            00135700
&ZCGPR                SETC  '&XLOCATION'                                00135800
.*                                                                      00135900
                      AIF   ('&XLOCATION'(1,1) NE '(').ZI4B             00136000
&ZCGPR   SETC  '0('.'&XLOCATION'(2,K'&XLOCATION-2).')'                  00136100
.ZI4B                 ANOP  ,                                           00136200
.*                                                                      00136300
&ZOPN                 SETA  &ZOPN+1                                     00136400
&ZOPL(&ZOPN)          SETC  ' '                                         00136500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00136600
&ZOPV(&ZOPN)          SETC  '17(18,1),&ZCGPR'                           00136700
&ZOPD(&ZOPN)          SETC  '++ &ZXLOCATION XLOCATION'                  00136800
.*                                                                      00136900
.ZI4E                 ANOP  ,                                           00137000
.*-------------------------------------------------------------------   00137100
.***AI.LVER01                                                           00137200
                      AIF  (&XPLISTVER LT 1).ZI6Z                       00137300
.*-------------------------------------------------------------------   00137400
.***AI.LVER02                                                           00137500
.ZI6Z                 ANOP  ,                                           00137600
.*-------------------------------------------------------------------   00137700
.***AI.LVER01                                                           00137800
                      AIF  (&XPLISTVER LT 1).ZI7Z                       00137900
.*-------------------------------------------------------------------   00138000
.***AI.L04 XPLISTLEN XL2                                                00138100
&ZOPN                 SETA  &ZOPN+1                                     00138200
&ZOPL(&ZOPN)          SETC  ' '                                         00138300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00138400
&ZOPV(&ZOPN)          SETC  '40(2,1),=AL2(&ZPLLEN)'                     00138500
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00138600
.*-------------------------------------------------------------------   00138700
.***AI.LVER02                                                           00138800
.ZI7Z                 ANOP  ,                                           00138900
.*-------------------------------------------------------------------   00139000
.***AI.LVER01                                                           00139100
                      AIF  (&XPLISTVER LT 1).ZI8Z                       00139200
.*-------------------------------------------------------------------   00139300
.***AI.LVER02                                                           00139400
.ZI8Z                 ANOP  ,                                           00139500
.*-------------------------------------------------------------------   00139600
.***AI.LVER01                                                           00139700
                      AIF  (&XPLISTVER LT 1).ZI9Z                       00139800
.*-------------------------------------------------------------------   00139900
.***AI.L18 ADDR XHOST A                                                 00140000
         AIF   ('&XHOST' NE 'NO_HOST').ZI9                              00140100
&ZXHOST               SETC  ''             RESET INPUT/OUTPUT           00140200
.ZI9                  ANOP  ,                                           00140300
.*-------------------------------------------------------------------   00140400
.***AI.L19 ADDR XHOST A                                                 00140500
                      AIF   ('&ZXHOST' EQ '').ZI9H                      00140600
&ZCLNG                SETC  '&XHOST'                                    00140700
&ZCGPR                SETC  '14'                                        00140800
         AIF   ('&XHOST'(1,1) EQ '(').ZI9F  IN GPR                      00140900
.*                                                                      00141000
&ZOPN                 SETA  &ZOPN+1                                     00141100
&ZOPL(&ZOPN)          SETC  ' '                                         00141200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00141300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00141400
&ZOPD(&ZOPN)          SETC  '++ &ZXHOST XHOST'                          00141500
.*                                                                      00141600
                      AGO   .ZI9G                                       00141700
.*                                                                      00141800
.ZI9F                 ANOP  ,                                           00141900
&ZCGPR   SETC  '&XHOST'(2,K'&XHOST-2)                                   00142000
.*                                                                      00142100
.ZI9G                 ANOP  ,                                           00142200
.*                                                                      00142300
&ZOPN                 SETA  &ZOPN+1                                     00142400
&ZOPL(&ZOPN)          SETC  ' '                                         00142500
&ZOPO(&ZOPN)          SETC  'ST'                                        00142600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,44(,1)'                             00142700
&ZOPD(&ZOPN)          SETC  '++ &ZXHOST XHOST'                          00142800
.*                                                                      00142900
.ZI9H                 ANOP  ,                                           00143000
.*-------------------------------------------------------------------   00143100
.***AI.LVER02                                                           00143200
.ZI9Z                 ANOP  ,                                           00143300
.*-------------------------------------------------------------------   00143400
&ZOPN1                SETA &ZOPN                                        00143500
.*******************************************************************    00143600
.***  PROCESS IWMSRDRS OUTPUT PARAMETERS                                00143700
.*******************************************************************    00143800
                      ACTR  10000                                       00143900
.*******************************************************************    00144000
.***AO.X02  RETURN CODE PROCESSING                                      00144100
.*******************************************************************    00144200
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00144300
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00144400
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00144500
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00144600
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00144700
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00144800
&ZOPN                 SETA  &ZOPN+1                                     00144900
&ZOPL(&ZOPN)          SETC  ' '                                         00145000
&ZOPO(&ZOPN)          SETC  'ST'                                        00145100
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00145200
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00145300
                      AGO   .ZMRETX                                     00145400
.*                                                                      00145500
.ZMRET2               ANOP  ,                                           00145600
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00145700
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00145800
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00145900
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00146000
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00146100
&ZOPN                 SETA  &ZOPN+1                                     00146200
&ZOPL(&ZOPN)          SETC  ' '                                         00146300
&ZOPO(&ZOPN)          SETC  'LR'                                        00146400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00146500
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00146600
.ZMRETX               ANOP  ,                                           00146700
.*******************************************************************    00146800
.***AO.X03  REASON CODE PROCESSING                                      00146900
.*******************************************************************    00147000
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00147100
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00147200
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00147300
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00147400
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00147500
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00147600
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00147700
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00147800
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00147900
&ZOPN                 SETA  &ZOPN+1                                     00148000
&ZOPL(&ZOPN)          SETC  ' '                                         00148100
&ZOPO(&ZOPN)          SETC  'ST'                                        00148200
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00148300
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00148400
                      AGO   .ZMRSNX                                     00148500
.*                                                                      00148600
.ZMRSN2               ANOP  ,                                           00148700
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00148800
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00148900
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00149000
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00149100
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00149200
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00149300
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00149400
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00149500
&ZOPN                 SETA  &ZOPN+1                                     00149600
&ZOPL(&ZOPN)          SETC  ' '                                         00149700
&ZOPO(&ZOPN)          SETC  'LR'                                        00149800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00149900
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00150000
.ZMRSNX               ANOP  ,                                           00150100
.*******************************************************************    00150200
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00150300
.*******************************************************************    00150400
.ZMFLX                ANOP  ,              MF=L PROCESSING              00150500
.*******************************************************************    00150600
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00150700
.*******************************************************************    00150800
                      ACTR  10000                                       00150900
.*                                                                      00151000
                      LCLA  &ZLC           COLUMN POSITION              00151100
                      LCLA  &ZOPX          LIST TABLE INDEX             00151200
                      LCLC  &ZLL           LABEL                        00151300
                      LCLC  &ZLOP          OPERATION                    00151400
                      LCLC  &ZLV           VALUE                        00151500
                      LCLC  &ZLD           DESCRIPTION                  00151600
.*                                                                      00151700
&ZOPX                 SETA  1                                           00151800
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00151900
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00152000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00152100
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00152200
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00152300
                      AIF   (K'&ZLD LE 0).ZL5                           00152400
&ZLC                  SETA  35             COMMENT COLUMN               00152500
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00152600
&ZLC                  SETA  33             COMMMENT COLUMN              00152700
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00152800
&ZLV                  SETC  '&ZLV'.' '                                  00152900
                      AGO   .ZL3                                        00153000
.*                                                                      00153100
.ZL4                  ANOP  ,                                           00153200
&ZLV                  SETC  '&ZLV'.' '                                  00153300
.ZL5                  ANOP  ,                                           00153400
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00153500
.*                                                                      00153600
&ZLL     &ZLOP &ZLV                                                     00153700
.*                                                                      00153800
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00153900
                      AGO   .ZL2           CONTINUE LOOPING             00154000
.*                                                                      00154100
.ZLX                  ANOP  ,                                           00154200
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00154300
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00154400
         L     14,16(0,0)              GET CVT ADDRESS                  00154500
         L     14,772(14,0)            GET SFT ADDRESS                  00154600
         L     14,380(14,0)            GET LX FOR SERVICE ROUTINE       00154700
         LA    15,29                   GET EX FOR SERVICE ROUTINE       00154800
         OR    14,15                   GET PC NUMBER                    00154900
         PC    0(14)                                                    00155000
END&SYSNDX DS    0H                    END LABEL                        00155100
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00155200
.ZLINKX               ANOP  ,                                           00155300
.*******************************************************************    00155400
.***AP.X01  FORMAT GENERATED CODE                                       00155500
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00155600
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00155700
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00155800
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00155900
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00156000
                      AIF   (K'&ZLD LE 0).ZL51                          00156100
&ZLC                  SETA  35             COMMENT COLUMN               00156200
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00156300
&ZLC                  SETA  33             COMMENT COLUMN               00156400
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00156500
&ZLV                  SETC  '&ZLV'.' '                                  00156600
                      AGO   .ZL31                                       00156700
.*                                                                      00156800
.ZL41                 ANOP  ,                                           00156900
&ZLV                  SETC  '&ZLV'.' '                                  00157000
.ZL51                 ANOP  ,                                           00157100
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00157200
.*                                                                      00157300
&ZLL     &ZLOP &ZLV                                                     00157400
.*                                                                      00157500
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00157600
                      AGO   .ZL21          CONTINUE LOOPING             00157700
.*                                                                      00157800
.ZLX1                 ANOP  ,                                           00157900
.*******************************************************************    00158000
.***AP.X02  END OF IWMSRDRS MACRO                                       00158100
&ZIWMSRDRS            SETC  'YES'          SET IWMSRDRS USED            00158200
         POP   PRINT                                                    00158300
*                                            IWMSRDRS-1                 00158400
         SPACE 1                                                        00158500
.ZLX2                 ANOP  ,                                           00158600
         MEND                                                           00158700
**********************************************************************/ 00158800
*/**** START OF SPECIFICATIONS **************************************** 00158900
*                                                                     * 00159000
*                                                                     * 00159100
*01* MACRO NAME:  IWMSRDRS                              -02/24/97-<1> * 00159200
*                                                                     * 00159300
*                                                                     * 00159400
*01* DESCRIPTIVE NAME:  Sysplex Routing Deregistration                * 00159500
*                                                                     * 00159600
*01* PROPRIETARY STATEMENT:                                           * 00159700
*                                                                     * 00159800
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00159900
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00160000
*     5645-001 (C) COPYRIGHT IBM CORP. 1994, 1997                     * 00160100
*                                                                     * 00160200
* STATUS= JBB6604                                                     * 00160300
*                                                                     * 00160400
*                                                                     * 00160500
*                                                                     * 00160600
*01* FUNCTION:                                                        * 00160700
*       See the IWMSRDRS macro prologue for details.                  * 00160800
*                                                                     * 00160900
*01* INPUT:                                                           * 00161000
*                                                                     * 00161100
*            ?IWMSRDRS     LOCATION(xlocation)                        * 00161200
*                          NETWORK_ID(xnetwork_id)                    * 00161300
*                          LUNAME(xluname)                            * 00161400
*                         [HOST(xhost|NO_HOST)]                     * 00161500
*                         [RETCODE(xretcode)]                         * 00161600
*                         [RSNCODE(xrsncode)]                         * 00161700
*                         [PLISTVER(xplistver|IMPLIED_VERSION)]     * 00161800
*                        [MF(S)]                                     * 00161900
*                        [MF(L,xmfctrl,xmfattr|BDY(DWORD))]        * 00162000
*                        [MF(E,xmfctrl,COMPLETE)]                  * 00162100
*                                                                     * 00162200
****** END OF SPECIFICATIONS *****************************************/ 00162300
*/*PB.ECHO01 MACRO INVOCATION ECHO-----------------------------------*/ 00162400
*  ANS('@SPACE;') NORESCAN COL(MACLMAR);                                00162500
*  ANS('/* ? IWMSRDRS '||MACLIST||' ')                                  00162600
*      NORESCAN COL(MACLMAR+5);    /* START ECHO */                     00162700
*                                                                       00162800
*  DCL ZELO  FIXED;                                                     00162900
*  DCL ZECOL FIXED;                                                     00163000
*                                                                       00163100
*  ZELO=1;     /* STARTING COLUMN */                                    00163200
*  DO WHILE ZELO<=LENGTH(MACKEYS);  /* PARENTHSIS SCAN */               00163300
*    ZECOL=INDEX(MACKEYS(ZELO:LENGTH(MACKEYS)),')');                    00163400
*    IF ZECOL>0                                                         00163500
*      THEN                                                             00163600
*        DO;   /* PARENTHESIS FOUND */                                  00163700
*          ANS(MACKEYS(ZELO:ZELO+ZECOL-1)||' ')                         00163800
*             NORESCAN COL(MACLMAR+5);                                  00163900
*          ZELO=ZELO+ZECOL;        /* NEXT PORTION */                   00164000
*        END;                                                           00164100
*      ELSE                                                             00164200
*        DO;   /* REMAINING KEYS */                                     00164300
*          ANS(MACKEYS(ZELO:LENGTH(MACKEYS)))                           00164400
*             NORESCAN COL(MACLMAR+5);                                  00164500
*          ZELO=LENGTH(MACKEYS)+1;                                      00164600
*        END;                                                           00164700
*  END;                                                                 00164800
*  ANS(' -02/24/97-1- */')                                              00164900
*      NORESCAN COL(MACLMAR+5);    /* END ECHO */                       00165000
*/********************************************************************/ 00165100
*/*PV.DCL01 MACRO DECLARES AND CODE GENERATION CONTROLS              */ 00165200
*/********************************************************************/ 00165300
*  DCL ZPRINT  EXTERNAL; DEACT ZPRINT; /* YES=PRINT, NO=NO PRINT     */ 00165400
*  DCL ZTEST   EXTERNAL; DEACT ZTEST;  /* YES=TEST, NO=NO TEST       */ 00165500
*  DCL ZSYSTEM EXTERNAL; DEACT ZSYSTEM;/* PCCODE10, MVS, SAK, VM     */ 00165600
*                                                                       00165700
*  DCL   ZIWMSRDRS CHAR EXTERNAL; /* YES=USED AT LEAST ONCE          */ 00165800
*  DEACT ZIWMSRDRS;                                                     00165900
*                                                                       00166000
*  DCL ZMACRET FIXED; DEACT ZMACRET;                                    00166100
*  ZMACRET=0;                   /* MACRO COMPILE RETURN CODE         */ 00166200
*                                                                       00166300
*  DCL ZMS CHAR;   DEACT ZMS;   /* ERROR MESSAGE                     */ 00166400
*  DCL ZCVAL CHAR; DEACT ZCVAL; /* ERROR MESSAGE WORK AREA           */ 00166500
*                                                                       00166600
*  DCL ZI FIXED;  DEACT ZI;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 00166700
*  DCL ZJ FIXED;  DEACT ZJ;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 00166800
*  DCL ZK FIXED;  DEACT ZK;     /* INDEX FOR RANGE COLON (:)         */ 00166900
*  DCL ZL FIXED;  DEACT ZL;     /* INDEX FOR RANGE VALUE CHECKING    */ 00167000
*  DCL ZLO FIXED; DEACT ZLO;    /* LOW RANGE VALUE                   */ 00167100
*  DCL ZHI FIXED; DEACT ZHI;    /* HIGH RANGE VALUE                  */ 00167200
*  DCL ZW CHAR;   DEACT ZW;     /* WORK AREA FOR RANGE VALUE SUBLIST */ 00167300
*  DCL ZN FIXED;  DEACT ZN;     /* NUMERIC WORK VARIABLE             */ 00167400
*  DCL ZC CHAR;   DEACT ZC;     /* CHARACTER WORK VARIABLE           */ 00167500
*  DCL ZMAXINVOCLEN FIXED; DEACT ZMAXINVOCLEN;  /* INVOCATION LENGTH */ 00167600
*  DCL ZPLLEN FIXED; DEACT ZPLLEN;        /* PARAMETER LIST LENGTH   */ 00167700
*                                                                       00167800
*  DCL ZPRMMAX FIXED;           /* MAXIMUM PARM LIST SIZE            */ 00167900
*  DCL ZPRMNUM FIXED;           /* PARAMETER ARRAY INDEX             */ 00168000
*  DCL ZPRM(100);               /* PARAMETER ENTRY                   */ 00168100
*  DCL EHAMAXLEN FIXED EXTERNAL;   /* MAX ILIST SIZE FOR PARM LISTS  */ 00168200
*  DCL EHAREGS CHARACTER EXTERNAL; /* REG DCLS                       */ 00168300
*  DCL EHALIST CHARACTER EXTERNAL; /* STANDARD PARM LIST GENERATION  */ 00168400
*/*******************************************************************/  00168500
*/*PV.XVAR01 DECLARE ALL MACRO PARAMETER VARIABLES                  */  00168600
*/*******************************************************************/  00168700
*  DCL XLOCATION;  DEACT XLOCATION;  /***PV.XVAR02 INPUT NAME */        00168800
*  DCL ZXLOCATION; DEACT ZXLOCATION;  /***INPUT/OUTPUT CONTROL */       00168900
*  DCL   XNETWORK_ID;              /***PV.XVAR03 INPUT NAME */          00169000
*  DEACT XNETWORK_ID;              /***PV.XVAR03 INPUT NAME */          00169100
*  DCL   ZXNETWORK_ID;             /***INPUT/OUTPUT CONTROL */          00169200
*  DEACT ZXNETWORK_ID;             /***INPUT/OUTPUT CONTROL */          00169300
*  DCL XLUNAME;  DEACT XLUNAME;    /***PV.XVAR02 INPUT NAME */          00169400
*  DCL ZXLUNAME; DEACT ZXLUNAME;   /***INPUT/OUTPUT CONTROL */          00169500
*  DCL XHOST;  DEACT XHOST;        /***PV.XVAR02 INPUT NAME */          00169600
*  DCL ZXHOST; DEACT ZXHOST;       /***INPUT/OUTPUT CONTROL */          00169700
*  DCL XRETCODE;  DEACT XRETCODE;  /***PV.XVAR02 OUTPUT NAME */         00169800
*  DCL ZXRETCODE; DEACT ZXRETCODE;  /***INPUT/OUTPUT CONTROL */         00169900
*  DCL XRSNCODE;  DEACT XRSNCODE;  /***PV.XVAR02 OUTPUT NAME */         00170000
*  DCL ZXRSNCODE; DEACT ZXRSNCODE;  /***INPUT/OUTPUT CONTROL */         00170100
*  DCL XPLISTVER FIXED;  DEACT XPLISTVER;  /***PV.XVAR02 INPUT VALUE */ 00170200
*  DCL ZXPLISTVER; DEACT ZXPLISTVER;  /***INPUT/OUTPUT CONTROL */       00170300
*  DCL XMF;  DEACT XMF;            /***PV.XVAR02 INPUT VALUE */         00170400
*  DCL ZXMF; DEACT ZXMF;           /***INPUT/OUTPUT CONTROL */          00170500
*  DCL XMFCTRL;  DEACT XMFCTRL;    /***PV.XVAR02 INPUT NAME */          00170600
*  DCL ZXMFCTRL; DEACT ZXMFCTRL;   /***INPUT/OUTPUT CONTROL */          00170700
*  DCL XMFATTR;  DEACT XMFATTR;    /***PV.XVAR02 INPUT VALUE */         00170800
*  DCL ZXMFATTR; DEACT ZXMFATTR;   /***INPUT/OUTPUT CONTROL */          00170900
*  DCL XMFSCK;  DEACT XMFSCK;      /***PV.XVAR02 INPUT VALUE */         00171000
*  DCL ZXMFSCK; DEACT ZXMFSCK;     /***INPUT/OUTPUT CONTROL */          00171100
*/********************************************************************/ 00171200
*/***PC.PLV01  PROCESS PLISTVER                                      */ 00171300
*/********************************************************************/ 00171400
*  IF TRANSLATE(PLISTVER(1)) = 'MAX' THEN                               00171500
*    XPLISTVER=1;                                                       00171600
*  ELSE                                                                 00171700
*    XPLISTVER=0;                                                       00171800
*  IF HOST^='' & XPLISTVER<1                                            00171900
*    THEN                                                               00172000
*      XPLISTVER=1;                                                     00172100
*  IF PLISTVER^=''                                                      00172200
*     & TRANSLATE(PLISTVER(1))^='IMPLIED_VERSION'                       00172300
*     & TRANSLATE(PLISTVER(1))^='MAX'                                   00172400
*    THEN                                                               00172500
*      DO;                                                              00172600
*                                                                       00172700
*        ZCVAL='';                           /* ERROR FLAG */           00172800
*        IF PLISTVER='PLISTVER' | PLISTVER='()'  /*CHECK ENTRY*/        00172900
*          THEN                                                         00173000
*            DO;                                                        00173100
*              ZMS=' 8, THE "PLISTVER" KEY'|| /**KOPTP* MSG*/           00173200
*                  ' MUST CONTAIN ONE'||                                00173300
*                  ' (OR MORE) ARGUMENT(S).';                           00173400
*              ANS MSG('?IWMSRDRS ---> '||ZMS);                         00173500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00173600
*              ZMACRET=8;                    /* MACRO ERROR */          00173700
*              ZCVAL='NO_ARGUMENT';                                     00173800
*            END;                                                       00173900
*        IF NUMBER(PLISTVER)>1               /* CHECK POSITIONALS */    00174000
*          THEN                                                         00174100
*            DO;                                                        00174200
*              ZMS=' 8, "PLISTVER'||         /**KPOSP* MSG*/            00174300
*                  PLISTVER||                                           00174400
*                  '" "PLISTVER"'||                                     00174500
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        00174600
*              ANS MSG('?IWMSRDRS ---> '||ZMS);                         00174700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00174800
*              ZMACRET=8;                    /* MACRO ERROR */          00174900
*            END;                                                       00175000
*                                                                       00175100
*        ZC=PLISTVER(1);                                                00175200
*        DO ZL=1 TO LENGTH(ZC);              /* MUST BE NUMBER */       00175300
*          IF ZC(ZL:ZL)<'0' |                /* MUST BE NUMERIC */      00175400
*             ZC(ZL:ZL)>'9'                  /* MUST BE NUMERIC */      00175500
*            THEN                                                       00175600
*              ZCVAL='NUMERIC';              /* NUMERIC ERROR */        00175700
*        END;                                                           00175800
*        IF ZCVAL=''                                                    00175900
*          THEN                                                         00176000
*            DO;                             /* CHECK RANGE LIMITS */   00176100
*            IF FIXED(PLISTVER(1))>=XPLISTVER                           00176200
*              THEN                                                     00176300
*                XPLISTVER=FIXED(PLISTVER(1));                          00176400
*              ELSE                                                     00176500
*                DO;                                                    00176600
*              ZMS=' 8, PLISTVER='||         /**KVALP* MSG*/            00176700
*                    PLISTVER(1)||                                      00176800
*                  ', BUT PLISTVER OF '||                               00176900
*                    CHAR(XPLISTVER)||                                  00177000
*                  ' IS REQUIRED.';                                     00177100
*              ANS MSG('?IWMSRDRS ---> '||ZMS);                         00177200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00177300
*              ZMACRET=8;                    /* MACRO ERROR */          00177400
*                END;                                                   00177500
*              IF XPLISTVER<0 |              /* LOW LIMIT */            00177600
*                 XPLISTVER>1                /* HIGH LIMIT */           00177700
*                THEN                                                   00177800
*                  ZCVAL='RANGE';            /* RANGE ERROR */          00177900
*            END;                                                       00178000
*        IF ZCVAL^=''                                                   00178100
*          THEN                                                         00178200
*            DO;                             /* RANGE ERROR */          00178300
*              ZXPLISTVER='';                /* RESET IN/OUTPUT */      00178400
*              ZMS=' 8, "PLISTVER '||        /**KRNGP* MSG*/            00178500
*                  PLISTVER||                                           00178600
*                  '" THE RANGE IS "0-1"'||                             00178700
*                  ' FOR ARGUMENT 1.';                                  00178800
*              ANS MSG('?IWMSRDRS ---> '||ZMS);                         00178900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00179000
*              ZMACRET=8;                    /* MACRO ERROR */          00179100
*            END;                                                       00179200
*      END;                                                             00179300
*                                                                       00179400
*/********************************************************************/ 00179500
*/***PG.MF01  PROCESS MF MACRO FORMS                                 */ 00179600
*/********************************************************************/ 00179700
*/*PG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00179800
*  XMF='';                                                              00179900
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00180000
*  IF TRANSLATE(MF(1))                                                  00180100
*              = 'S'                         /* CHECK FOR KEYWORD */    00180200
*    THEN                                                               00180300
*      DO;                                                              00180400
*        XMF='S';                            /* SET XVARIABLE */        00180500
*        IF NUMBER(MF)>1                     /* CHECK POSITIONALS */    00180600
*          THEN                                                         00180700
*            DO;                                                        00180800
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            00180900
*                  MF||                                                 00181000
*                  '" "MF"'||                                           00181100
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        00181200
*              ANS MSG('?IWMSRDRS ---> '||ZMS);                         00181300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00181400
*              ZMACRET=8;                    /* MACRO ERROR */          00181500
*            END;                                                       00181600
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00181700
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     00181800
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00181900
*  IF TRANSLATE(MF(1))                                                  00182000
*              = 'L'                         /* CHECK FOR KEYWORD */    00182100
*    THEN                                                               00182200
*      DO;                                                              00182300
*        XMF='L';                            /* SET XVARIABLE */        00182400
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    00182500
*          THEN                                                         00182600
*            DO;                                                        00182700
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            00182800
*                  MF||                                                 00182900
*                  '" "MF"'||                                           00183000
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       00183100
*              ANS MSG('?IWMSRDRS ---> '||ZMS);                         00183200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00183300
*              ZMACRET=8;                    /* MACRO ERROR */          00183400
*            END;                                                       00183500
*/*PG.KKCTL10 -MF(L) SPECIAL CHECK-----------------------------------*/ 00183600
*        ZMAXINVOCLEN = LENGTH(MF) + 2;                                 00183700
*        IF PLISTVER ^= ''                                              00183800
*          THEN                                                         00183900
*            ZMAXINVOCLEN=ZMAXINVOCLEN + LENGTH(PLISTVER) + 8;          00184000
*        IF LENGTH(MACKEYS) > ZMAXINVOCLEN |                            00184100
*           MACLIST ^= ''                    /* CHECK FOR OTHER PARMS*/ 00184200
*          THEN                                                         00184300
*            DO;                                                        00184400
*              ZMS=' 8, THE "L" FORM OF "MF"'|| /**MFLP* MSG*/          00184500
*                  ' CAN ONLY HAVE'||                                   00184600
*                  ' THE "PLISTVER" KEY'||                              00184700
*                  ' SPECIFIED ON THE INVOCATION.';                     00184800
*              ANS MSG('?IWMSRDRS ---> '||ZMS);                         00184900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00185000
*              ZMACRET=8;                    /* MACRO ERROR */          00185100
*            END;                                                       00185200
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 00185300
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        00185400
*  IF MF(2)=''                               /* CHECK FOR NULL */       00185500
*   THEN                                                                00185600
*    DO;                                     /* KEY IS REQUIRED */      00185700
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      00185800
*        ZMS=' 8, WHEN "L" IS SPECIFIED'||                              00185900
*            ' FOR THE "MF" KEY, POSITIONAL'||                          00186000
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            00186100
*        ANS MSG('?IWMSRDRS ---> '||ZMS);                               00186200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00186300
*        ZMACRET=8;                          /* MACRO ERROR */          00186400
*    END;                                                               00186500
*  ELSE                                                                 00186600
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        00186700
*/*PG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE--------------------*/ 00186800
*  ZXMFATTR='INPUT';                         /* SET IN/OUTPUT */        00186900
*  XMFATTR='BDY(DWORD)';                     /* SET DEFAULT */          00187000
*  IF MF(3)^=''                              /* CHECK FOR NULL */       00187100
*    THEN                                                               00187200
*      XMFATTR=MF(3);                        /* SET XVARIABLE */        00187300
*/*PG.KCK01 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH---------------*/ 00187400
*  IF ZXMFATTR^='' &                         /* NOT IN/OUTPUT */        00187500
*     LENGTH(XMFATTR)>60                                                00187600
*    THEN                                                               00187700
*      DO;                                                              00187800
*        ZXMFATTR='';                        /* RESET IN/OUTPUT */      00187900
*        ZMS=' 8, "MF'||                     /**KLNGP* MSG*/            00188000
*            MF||                                                       00188100
*            '" ARGUMENT 3 EXCEEDS THE MAXIMUM'||                       00188200
*            ' LENGTH OF 60 CHARACTERS. ';                              00188300
*        ANS MSG('?IWMSRDRS ---> '||ZMS);                               00188400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00188500
*        ZMACRET=8;                          /* MACRO ERROR */          00188600
*      END;                                                             00188700
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00188800
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     00188900
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00189000
*  IF TRANSLATE(MF(1))                                                  00189100
*              = 'E'                         /* CHECK FOR KEYWORD */    00189200
*    THEN                                                               00189300
*      DO;                                                              00189400
*        XMF='E';                            /* SET XVARIABLE */        00189500
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    00189600
*          THEN                                                         00189700
*            DO;                                                        00189800
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            00189900
*                  MF||                                                 00190000
*                  '" "MF"'||                                           00190100
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       00190200
*              ANS MSG('?IWMSRDRS ---> '||ZMS);                         00190300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00190400
*              ZMACRET=8;                    /* MACRO ERROR */          00190500
*            END;                                                       00190600
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 00190700
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        00190800
*  IF MF(2)=''                               /* CHECK FOR NULL */       00190900
*   THEN                                                                00191000
*    DO;                                     /* KEY IS REQUIRED */      00191100
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      00191200
*        ZMS=' 8, WHEN "E" IS SPECIFIED'||                              00191300
*            ' FOR THE "MF" KEY, POSITIONAL'||                          00191400
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            00191500
*        ANS MSG('?IWMSRDRS ---> '||ZMS);                               00191600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00191700
*        ZMACRET=8;                          /* MACRO ERROR */          00191800
*    END;                                                               00191900
*  ELSE                                                                 00192000
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        00192100
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 00192200
*  XMFSCK='';                                /* RESET XVARIABLE */      00192300
*  IF TRANSLATE(MF(3))                                                  00192400
*              = 'COMPLETE'                  /* CHECK FOR KEYWORD */    00192500
*    THEN                                                               00192600
*      XMFSCK = 'COMPLETE';                  /* SET XVARIABLE */        00192700
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 00192800
*  ZXMFSCK='INPUT';                          /* SET IN/OUTPUT */        00192900
*  IF XMFSCK=''                              /* CHECK FOR KEYWORD */    00193000
*    THEN                                                               00193100
*      DO;                                   /* KEYWORD NOT ENTERED */  00193200
*        XMFSCK='COMPLETE';                  /* SET DEFAULT */          00193300
*        IF MF(3)^=''                                                   00193400
*          THEN                                                         00193500
*            DO;                                                        00193600
*              ZXMFSCK='';                   /* RESET IN/OUTPUT */      00193700
*              ZMS=' 8, "MF'||               /**KUKWP* MSG*/            00193800
*                  MF||'"'||                                            00193900
*                  ' ARGUMENT 3 IS AN UNKNOWN KEYWORD. '||              00194000
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    00194100
*                  ' "COMPLETE".';           /* VALID KEYWORD */        00194200
*              ANS MSG('?IWMSRDRS ---> '||ZMS);                         00194300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00194400
*              ZMACRET=8;                    /* MACRO ERROR */          00194500
*            END;                                                       00194600
*      END;                                                             00194700
*/*PG.KKCTL05 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00194800
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     00194900
*/*PG.KKCTL06 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00195000
*  IF MF='MF'                                                           00195100
*    | MF='()'                               /*CHECK ENTRY*/            00195200
*     THEN                                                              00195300
*       DO;                                                             00195400
*              ZMS=' 8, THE "MF" KEY'||      /**KOPTP* MSG*/            00195500
*                  ' MUST CONTAIN ONE'||                                00195600
*                  ' (OR MORE) ARGUMENT(S).';                           00195700
*              ANS MSG('?IWMSRDRS ---> '||ZMS);                         00195800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00195900
*              ZMACRET=8;                    /* MACRO ERROR */          00196000
*       END;                                                            00196100
*  ELSE                                                                 00196200
*    DO;                                                                00196300
*      ZXMF='INPUT';                         /* SET IN/OUTPUT */        00196400
*      IF XMF=''                             /* CHECK FOR KEYWORD */    00196500
*        THEN                                                           00196600
*          DO;                               /* KEYWORD NOT ENTERED */  00196700
*            XMF='S';                        /* SET DEFAULT */          00196800
*            XMFSCK='COMPLETE';              /* COMPLETE CHECKING */    00196900
*            IF MF(1)^=''                    /* CHECK FOR KEYWORD */    00197000
*              THEN                                                     00197100
*                DO;                                                    00197200
*                  ZXMF='';                  /* RESET IN/OUTPUT */      00197300
*              ZMS=' 8, "MF'||               /**KUKWP* MSG*/            00197400
*                  MF||'"'||                                            00197500
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              00197600
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    00197700
*                  ' "S",'||                 /* VALID KEYWORD */        00197800
*                  ' "L",'||                 /* VALID KEYWORD */        00197900
*                  ' OR "E".';               /* VALID KEYWORD */        00198000
*              ANS MSG('?IWMSRDRS ---> '||ZMS);                         00198100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00198200
*              ZMACRET=8;                    /* MACRO ERROR */          00198300
*                END;                                                   00198400
*          END;                                                         00198500
*    END;                                                               00198600
*/********************************************************************/ 00198700
*/***PD.P01 FULL DEFAULT CHECKING                                    */ 00198800
*/********************************************************************/ 00198900
*  IF PLISTVER=''                                                       00199000
*     | PLISTVER(1)='IMPLIED_VERSION'                                   00199100
*    THEN                                                               00199200
*      ZC='ON';                              /* DEFAULT FLAG ON */      00199300
*    ELSE                                                               00199400
*      ZC='OFF';                             /* DEFAULT FLAG OFF */     00199500
*/********************************************************************/ 00199600
*/***PD.P02 DEFAULT ECHO                                             */ 00199700
*/********************************************************************/ 00199800
*/*PD.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00199900
*  IF XMF^='L'                                                          00200000
*    THEN                                                               00200100
*      DO;                                   /* FULL SYNTAX CHECK */    00200200
*        ANS('/*DEFAULT(S): */')                                        00200300
*           NORESCAN COL(MACLMAR+5);                                    00200400
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 00200500
*  XHOST='';                                                            00200600
*  IF HOST(1)=''                                                        00200700
*    THEN                                                               00200800
*      DO;                                                              00200900
*        XHOST='NO_HOST';                    /* SET DEFAULT */          00201000
*        ZC='ON';                            /* DEFAULT FLAG ON */      00201100
*      END;                                                             00201200
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 00201300
*  IF XPLISTVER>=1                                                      00201400
*    THEN                                                               00201500
*      DO;                                                              00201600
*  IF XHOST^=''                                                         00201700
*    THEN                                                               00201800
*      ANS('/* HOST('||                                                 00201900
*          XHOST||                                                      00202000
*          ')*/')                                                       00202100
*          NORESCAN COL(MACLMAR+5);                                     00202200
*      END;                                                             00202300
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 00202400
*  IF PLISTVER=''                                                       00202500
*    THEN                                                               00202600
*      ANS('/* PLISTVER('||                                             00202700
*          CHAR(XPLISTVER)||                                            00202800
*          ')*/')                                                       00202900
*          NORESCAN COL(MACLMAR+5);                                     00203000
*  IF ZC='OFF'                               /*NO DEFAULTS TAKEN */     00203100
*    THEN                                                               00203200
*      ANS('/* NONE. */')                                               00203300
*         NORESCAN COL(MACLMAR+5);                                      00203400
*/*PD.P04 END DEFAULT ECHO ------------------------------------------*/ 00203500
*      END;                                                             00203600
*/********************************************************************/ 00203700
*/*PB.SYSL01 INVOKE SP LEVEL AND SYSTEM STATE MACROS                 */ 00203800
*/********************************************************************/ 00203900
*  DCL SYSSPLV CHAR EXTERNAL; DEACT SYSSPLV;/* SPLEVEL 1,2,3         */ 00204000
*  DCL SYSASCE CHAR EXTERNAL; DEACT SYSASCE;/* STATE ANY P AR */        00204100
*                                                                       00204200
*  IF SYSASCE=''                                                        00204300
*    THEN                                                               00204400
*      DO;                                                              00204500
*        IF SYSSPLV=''                                                  00204600
*          THEN                                                         00204700
*            ANS('?SPLEVEL  (TEST);') COL(MACLMAR);                     00204800
*        IF SYSSPLV^='1' & SYSSPLV^='2'                                 00204900
*          THEN                                                         00205000
*            ANS('?SYSSTATE (TEST);') COL(MACLMAR);                     00205100
*          ELSE                                                         00205200
*            SYSASCE='P';                    /* SYSSTATE DEFAULT*/      00205300
*      END;                                                             00205400
*/********************************************************************/ 00205500
*/***PG.P01 FULL MACRO SYNTAX CHECKING                               */ 00205600
*/********************************************************************/ 00205700
*/*PG.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00205800
*  IF XMF^='L'                                                          00205900
*    THEN                                                               00206000
*      DO;                                   /* FULL SYNTAX CHECK */    00206100
*/*PG.P03 EXCESSIVE POSITIONAL ARGUMENTS-----------------------------*/ 00206200
*  IF NUMBER(MACLIST)>0                      /* CHECK POSITIONALS */    00206300
*    THEN                                                               00206400
*      DO;                                                              00206500
*        ZMS=' 8, POSITIONAL ARGUMENT(S),'|| /**PPOSP* MSG*/            00206600
*            ' "'||MACLIST||'"'||                                       00206700
*            ' CANNOT BE USED.'||                                       00206800
*            ' NO POSITIONAL ARGUMENTS'||                               00206900
*            ' ARE ALLOWED.';                                           00207000
*        ANS MSG('?IWMSRDRS ---> '||ZMS);                               00207100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00207200
*        ZMACRET=8;                          /* MACRO ERROR */          00207300
*      END;                                                             00207400
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00207500
*  IF NUMBER(LOCATION)>1                     /* CHECK POSITIONALS */    00207600
*    THEN                                                               00207700
*      DO;                                                              00207800
*        ZMS=' 8, "LOCATION'||               /**KPOSP* MSG*/            00207900
*            LOCATION||                                                 00208000
*            '" "LOCATION"'||                                           00208100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00208200
*        ANS MSG('?IWMSRDRS ---> '||ZMS);                               00208300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00208400
*        ZMACRET=8;                          /* MACRO ERROR */          00208500
*      END;                                                             00208600
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 00208700
*  XLOCATION=LOCATION(1);                    /* SET XVARIABLE */        00208800
*  IF LOCATION(1)=''                         /* CHECK FOR NULL */       00208900
*   THEN                                                                00209000
*    DO;                                     /* KEY IS REQUIRED */      00209100
*        ZXLOCATION='';                      /* RESET IN/OUTPUT */      00209200
*        ZMS=' 8,  '||                                                  00209300
*            ' "LOCATION" KEY AND ITS ARGUMENT'||                       00209400
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            00209500
*        ANS MSG('?IWMSRDRS ---> '||ZMS);                               00209600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00209700
*        ZMACRET=8;                          /* MACRO ERROR */          00209800
*    END;                                                               00209900
*  ELSE                                                                 00210000
*    ZXLOCATION='INPUT';                     /* SET IN/OUTPUT */        00210100
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00210200
*  IF NUMBER(NETWORK_ID)>1                   /* CHECK POSITIONALS */    00210300
*    THEN                                                               00210400
*      DO;                                                              00210500
*        ZMS=' 8, "NETWORK_ID'||             /**KPOSP* MSG*/            00210600
*            NETWORK_ID||                                               00210700
*            '" "NETWORK_ID"'||                                         00210800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00210900
*        ANS MSG('?IWMSRDRS ---> '||ZMS);                               00211000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00211100
*        ZMACRET=8;                          /* MACRO ERROR */          00211200
*      END;                                                             00211300
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 00211400
*  XNETWORK_ID=NETWORK_ID(1);                /* SET XVARIABLE */        00211500
*  IF NETWORK_ID(1)=''                       /* CHECK FOR NULL */       00211600
*   THEN                                                                00211700
*    DO;                                     /* KEY IS REQUIRED */      00211800
*        ZXNETWORK_ID='';                    /* RESET IN/OUTPUT */      00211900
*        ZMS=' 8,  '||                                                  00212000
*            ' "NETWORK_ID" KEY AND ITS ARGUMENT'||                     00212100
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            00212200
*        ANS MSG('?IWMSRDRS ---> '||ZMS);                               00212300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00212400
*        ZMACRET=8;                          /* MACRO ERROR */          00212500
*    END;                                                               00212600
*  ELSE                                                                 00212700
*    ZXNETWORK_ID='INPUT';                   /* SET IN/OUTPUT */        00212800
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00212900
*  IF NUMBER(LUNAME)>1                       /* CHECK POSITIONALS */    00213000
*    THEN                                                               00213100
*      DO;                                                              00213200
*        ZMS=' 8, "LUNAME'||                 /**KPOSP* MSG*/            00213300
*            LUNAME||                                                   00213400
*            '" "LUNAME"'||                                             00213500
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00213600
*        ANS MSG('?IWMSRDRS ---> '||ZMS);                               00213700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00213800
*        ZMACRET=8;                          /* MACRO ERROR */          00213900
*      END;                                                             00214000
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 00214100
*  XLUNAME=LUNAME(1);                        /* SET XVARIABLE */        00214200
*  IF LUNAME(1)=''                           /* CHECK FOR NULL */       00214300
*   THEN                                                                00214400
*    DO;                                     /* KEY IS REQUIRED */      00214500
*        ZXLUNAME='';                        /* RESET IN/OUTPUT */      00214600
*        ZMS=' 8,  '||                                                  00214700
*            ' "LUNAME" KEY AND ITS ARGUMENT'||                         00214800
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            00214900
*        ANS MSG('?IWMSRDRS ---> '||ZMS);                               00215000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00215100
*        ZMACRET=8;                          /* MACRO ERROR */          00215200
*    END;                                                               00215300
*  ELSE                                                                 00215400
*    ZXLUNAME='INPUT';                       /* SET IN/OUTPUT */        00215500
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00215600
*  IF HOST='HOST' | HOST='()'                /*CHECK ENTRY*/            00215700
*    THEN                                                               00215800
*      DO;                                                              00215900
*        ZMS=' 8, THE "HOST" KEY'||          /**KOPTP* MSG*/            00216000
*            ' MUST CONTAIN ONE'||                                      00216100
*            ' (OR MORE) ARGUMENT(S).';                                 00216200
*        ANS MSG('?IWMSRDRS ---> '||ZMS);                               00216300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00216400
*        ZMACRET=8;                          /* MACRO ERROR */          00216500
*      END;                                                             00216600
*  IF NUMBER(HOST)>1                         /* CHECK POSITIONALS */    00216700
*    THEN                                                               00216800
*      DO;                                                              00216900
*        ZMS=' 8, "HOST'||                   /**KPOSP* MSG*/            00217000
*            HOST||                                                     00217100
*            '" "HOST"'||                                               00217200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00217300
*        ANS MSG('?IWMSRDRS ---> '||ZMS);                               00217400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00217500
*        ZMACRET=8;                          /* MACRO ERROR */          00217600
*      END;                                                             00217700
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 00217800
*  ZXHOST='INPUT';                           /* SET IN/OUTPUT */        00217900
*  XHOST='NO_HOST';                          /* SET DEFAULT */          00218000
*  IF HOST(1)^=''                            /* CHECK FOR NULL */       00218100
*    THEN                                                               00218200
*      XHOST=HOST(1);                        /* SET XVARIABLE */        00218300
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 00218400
*  IF RETCODE='RETCODE' | RETCODE='()'       /*CHECK ENTRY*/            00218500
*    THEN                                                               00218600
*      DO;                                                              00218700
*        ZMS=' 8, THE "RETCODE" KEY'||       /**KOPTP* MSG*/            00218800
*            ' MUST CONTAIN ONE'||                                      00218900
*            ' (OR MORE) ARGUMENT(S).';                                 00219000
*        ANS MSG('?IWMSRDRS ---> '||ZMS);                               00219100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00219200
*        ZMACRET=8;                          /* MACRO ERROR */          00219300
*      END;                                                             00219400
*  IF NUMBER(RETCODE)>1                      /* CHECK POSITIONALS */    00219500
*    THEN                                                               00219600
*      DO;                                                              00219700
*        ZMS=' 8, "RETCODE'||                /**KPOSP* MSG*/            00219800
*            RETCODE||                                                  00219900
*            '" "RETCODE"'||                                            00220000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00220100
*        ANS MSG('?IWMSRDRS ---> '||ZMS);                               00220200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00220300
*        ZMACRET=8;                          /* MACRO ERROR */          00220400
*      END;                                                             00220500
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 00220600
*  IF RETCODE(1)^=''                         /* CHECK FOR NULL */       00220700
*    THEN                                                               00220800
*      DO;                                                              00220900
*        XRETCODE=RETCODE(1);                /* SET XVARIABLE */        00221000
*        ZXRETCODE='OUTPUT';                 /* SET OUTPUT */           00221100
*      END;                                                             00221200
*  ELSE                                                                 00221300
*    IF ZXRETCODE^=''                                                   00221400
*      THEN                                                             00221500
*        ZXRETCODE='';                       /* RESET OUTPUT */         00221600
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 00221700
*  IF RSNCODE='RSNCODE' | RSNCODE='()'       /*CHECK ENTRY*/            00221800
*    THEN                                                               00221900
*      DO;                                                              00222000
*        ZMS=' 8, THE "RSNCODE" KEY'||       /**KOPTP* MSG*/            00222100
*            ' MUST CONTAIN ONE'||                                      00222200
*            ' (OR MORE) ARGUMENT(S).';                                 00222300
*        ANS MSG('?IWMSRDRS ---> '||ZMS);                               00222400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00222500
*        ZMACRET=8;                          /* MACRO ERROR */          00222600
*      END;                                                             00222700
*  IF NUMBER(RSNCODE)>1                      /* CHECK POSITIONALS */    00222800
*    THEN                                                               00222900
*      DO;                                                              00223000
*        ZMS=' 8, "RSNCODE'||                /**KPOSP* MSG*/            00223100
*            RSNCODE||                                                  00223200
*            '" "RSNCODE"'||                                            00223300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00223400
*        ANS MSG('?IWMSRDRS ---> '||ZMS);                               00223500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00223600
*        ZMACRET=8;                          /* MACRO ERROR */          00223700
*      END;                                                             00223800
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 00223900
*  IF RSNCODE(1)^=''                         /* CHECK FOR NULL */       00224000
*    THEN                                                               00224100
*      DO;                                                              00224200
*        XRSNCODE=RSNCODE(1);                /* SET XVARIABLE */        00224300
*        ZXRSNCODE='OUTPUT';                 /* SET OUTPUT */           00224400
*      END;                                                             00224500
*  ELSE                                                                 00224600
*    IF ZXRSNCODE^=''                                                   00224700
*      THEN                                                             00224800
*        ZXRSNCODE='';                       /* RESET OUTPUT */         00224900
*/*PG.P04 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00225000
*      END;                                  /* END COMPLETE CHECKING*/ 00225100
*/********************************************************************/ 00225200
*/***PE.MR01 GENERATE CODE IF ZMACRET=0                              */ 00225300
*/********************************************************************/ 00225400
*  IF ZMACRET = 0                                                       00225500
*    THEN                                                               00225600
*      DO;                                                              00225700
*/********************************************************************/ 00225800
*/***PE.PR01 PRINT CONTROLS, DEFAULT IS YES                          */ 00225900
*/********************************************************************/ 00226000
*  ANS(MACCONC||'LIST PUSH NOECHO;') NORESCAN COL(MACLMAR);             00226100
*  IF ZPRINT='NO'                            /* PRINT IS OFF */         00226200
*    THEN                                                               00226300
*      ANS(MACCONC||'LIST OFF NOECHO;') NORESCAN COL(MACLMAR);          00226400
*    ELSE                                                               00226500
*      ANS(MACCONC||'LIST ON NOECHO;')  NORESCAN COL(MACLMAR);          00226600
*/********************************************************************/ 00226700
*/*PE.DO02 OUTER MACRO DO STATEMENT----------------------------------*/ 00226800
*  IF XMF^='L'                                                          00226900
*    THEN                                                               00227000
*      ANS('DO; /* IWMSRDRS-PLISTVER */')                               00227100
*          NORESCAN COL(MACLMAR);                                       00227200
*/*MCMPLS01 RFY 15*/                                                    00227300
*  IF XMF^='L' & ZMACRET = 0                                            00227400
*    THEN                                                               00227500
*      ANS('RFY GPR15F RSTD;') NORESCAN COL(MACLMAR);                   00227600
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00227700
       DCL EHAMAPS CHAR EXTERNAL;                                       00227800
       IF INDEX(EHAMAPS,'XM@')=0 THEN                                   00227900
         EHAMAPS=EHAMAPS||'XM@,';                                       00228000
       IF INDEX(EHAREGS,'00F')=0                                        00228100
         THEN                                                           00228200
           EHAREGS=EHAREGS||'00F'; /* GPR00F                      */    00228300
       IF INDEX(EHAREGS,'15F')=0                                        00228400
         THEN                                                           00228500
           EHAREGS=EHAREGS||'15F'; /* GPR15F                      */    00228600
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00228700
*/*PL.LL01 ?IWMSRDRS MF=L PARAMETER LIST-----------------------------*/ 00228800
*  IF XMF='L'                                                           00228900
*    THEN                                                               00229000
*      DO;                                                              00229100
*        ANS('DCL 1 '||XMFCTRL||' '||XMFATTR||', '||                    00229200
*            '/* ?IWMSRDRS PARM LIST*/')                                00229300
*            NORESCAN COL(MACLMAR);                                     00229400
*/*PL.LL02  XVERSION FIXED(8) INPUT----------------------------------*/ 00229500
*        ANS('2 '||XMFCTRL||                                            00229600
*            '_XVERSION FIXED(8), '||                                   00229700
*            '/* INPUT XVERSION*/')                                     00229800
*            NORESCAN COL(MACLMAR+2);                                   00229900
*/*PL.LL13  XLUNAME CHAR(8) INPUT------------------------------------*/ 00230000
*        ANS('2 '||XMFCTRL||                                            00230100
*            '_XLUNAME CHAR(8), '||                                     00230200
*            '/* '||ZXLUNAME||' XLUNAME */')                            00230300
*            NORESCAN COL(MACLMAR+2);                                   00230400
*/*PL.LL13  XNETWORK_ID CHAR(8) INPUT--------------------------------*/ 00230500
*        ANS('2 '||XMFCTRL||                                            00230600
*            '_XNETWORK_ID CHAR(8), '||                                 00230700
*            '/* '||ZXNETWORK_ID||' XNETWORK_ID */')                    00230800
*            NORESCAN COL(MACLMAR+2);                                   00230900
*/*PL.LL13  XLOCATION CHAR(18) INPUT---------------------------------*/ 00231000
*        ANS('2 '||XMFCTRL||                                            00231100
*            '_XLOCATION CHAR(18), '||                                  00231200
*            '/* '||ZXLOCATION||' XLOCATION */')                        00231300
*            NORESCAN COL(MACLMAR+2);                                   00231400
*/*PL.LL13  XRSV001A CHAR(4) RESERVED--------------------------------*/ 00231500
*        ANS('2 '||XMFCTRL||                                            00231600
*            '_XRSV001A CHAR(4), '||                                    00231700
*            '/* RESERVED */')                                          00231800
*            NORESCAN COL(MACLMAR+2);                                   00231900
*/*PL.LPVER01 -------------------------------------------------------*/ 00232000
*  IF XPLISTVER>=1                                                      00232100
*    THEN                                                               00232200
*      DO;                                                              00232300
*/*PL.LL13  XRSV0023 CHAR(1) RESERVED--------------------------------*/ 00232400
*        ANS('2 '||XMFCTRL||                                            00232500
*            '_XRSV0023 CHAR(1), '||                                    00232600
*            '/* RESERVED */')                                          00232700
*            NORESCAN COL(MACLMAR+2);                                   00232800
*/*PL.LPVER02 -------------------------------------------------------*/ 00232900
*      END;                                                             00233000
*/*PL.LPVER01 -------------------------------------------------------*/ 00233100
*  IF XPLISTVER>=1                                                      00233200
*    THEN                                                               00233300
*      DO;                                                              00233400
*/*PL.LL02  XPLISTLEN FIXED(16) BDY(BYTE) INPUT----------------------*/ 00233500
*        ANS('2 '||XMFCTRL||                                            00233600
*            '_XPLISTLEN FIXED(16) BDY(BYTE), '||                       00233700
*            '/* INPUT XPLISTLEN*/')                                    00233800
*            NORESCAN COL(MACLMAR+2);                                   00233900
*/*PL.LPVER02 -------------------------------------------------------*/ 00234000
*      END;                                                             00234100
*/*PL.LPVER01 -------------------------------------------------------*/ 00234200
*  IF XPLISTVER>=1                                                      00234300
*    THEN                                                               00234400
*      DO;                                                              00234500
*/*PL.LL13  XRSV002A CHAR(2) RESERVED--------------------------------*/ 00234600
*        ANS('2 '||XMFCTRL||                                            00234700
*            '_XRSV002A CHAR(2), '||                                    00234800
*            '/* RESERVED */')                                          00234900
*            NORESCAN COL(MACLMAR+2);                                   00235000
*/*PL.LPVER02 -------------------------------------------------------*/ 00235100
*      END;                                                             00235200
*/*PL.LPVER01 -------------------------------------------------------*/ 00235300
*  IF XPLISTVER>=1                                                      00235400
*    THEN                                                               00235500
*      DO;                                                              00235600
*/*PL.LL13 ADDR XHOST PTR(31) INPUT ADDR-----------------------------*/ 00235700
*        ANS('2 '||XMFCTRL||                                            00235800
*            '_XHOST_ADDR PTR(31), '||                                  00235900
*            '/* '||ZXHOST_ADDR||' XHOST_ADDR */')                      00236000
*            NORESCAN COL(MACLMAR+2);                                   00236100
*/*PL.LPVER02 -------------------------------------------------------*/ 00236200
*      END;                                                             00236300
*/*PL.LL18 ----------------------------------------------------------*/ 00236400
*        ANS('2 * CHAR(0);')                                            00236500
*            NORESCAN COL(MACLMAR+2);                                   00236600
*/*PL.LL17 END OF MF=L PARAMETER LIST--------------------------------*/ 00236700
*      END;                                                             00236800
*/*PL.L01 MACRO WORK VARIABLES---------------------------------------*/ 00236900
*  DCL ZPRMLINE CHAR;          /* ZPRM ARRAY ENTRY ACCUMULATOR      */  00237000
*  DEACT ZPRMLINE;                                                      00237100
*  DCL ZNDX CHAR;              /* UNIQUE LIST STRUCTURE NAME        */  00237200
*  DEACT ZNDX;                                                          00237300
*  ZNDX=MACINDEX;              /* MACINDEX                          */  00237400
*  DCL XVERSION CHAR;                                                   00237500
*  DEACT XVERSION;                                                      00237600
*/*PL.L02 ?IWMSRDRS PARAMETER LIST-----------------------------------*/ 00237700
*  IF XMF^='L'                                                          00237800
*    THEN                                                               00237900
*      DO;                                                              00238000
*/*PL.L03 ?IWMSRDRS PARAMETER LIST-----------------------------------*/ 00238100
*        IF XMF='S'                                                     00238200
*          THEN                                                         00238300
*            XMFCTRL='#ZPLIST';                                         00238400
*/*PL.L04 ?IWMSRDRS PARAMETER LIST-----------------------------------*/ 00238500
*        ZPRMLINE='DCL 1 #Z'||ZNDX||' DEF('||XMFCTRL||'),'||            00238600
*                 ' /* ?IWMSRDRS PARM LIST*/';                          00238700
*/*PL.L05 ADDR XVERSION FIXED(8) INPUT-------------------------------*/ 00238800
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00238900
*                 '_XVERSION FIXED(8), '||                              00239000
*                 '/* INPUT XVERSION*/';                                00239100
*/*PL.L08  XLUNAME CHAR(8) INPUT-------------------------------------*/ 00239200
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00239300
*                 '_XLUNAME CHAR(8), '||                                00239400
*                 '/* '||ZXLUNAME||' XLUNAME */';                       00239500
*/*PL.L08  XNETWORK_ID CHAR(8) INPUT---------------------------------*/ 00239600
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00239700
*                 '_XNETWORK_ID CHAR(8), '||                            00239800
*                 '/* '||ZXNETWORK_ID||' XNETWORK_ID */';               00239900
*/*PL.L08  XLOCATION CHAR(18) INPUT----------------------------------*/ 00240000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00240100
*                 '_XLOCATION CHAR(18), '||                             00240200
*                 '/* '||ZXLOCATION||' XLOCATION */';                   00240300
*/*PL.L08  XRSV001A CHAR(4) RESERVED---------------------------------*/ 00240400
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00240500
*                 '_XRSV001A CHAR(4), '||                               00240600
*                 '/* RESERVED */';                                     00240700
*/*PL.LPVER03 -------------------------------------------------------*/ 00240800
*  IF XPLISTVER>=1                                                      00240900
*    THEN                                                               00241000
*      DO;                                                              00241100
*/*PL.L08  XRSV0023 CHAR(1) RESERVED---------------------------------*/ 00241200
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00241300
*                 '_XRSV0023 CHAR(1), '||                               00241400
*                 '/* RESERVED */';                                     00241500
*/*PL.LPVER04 -------------------------------------------------------*/ 00241600
*      END;                                                             00241700
*/*PL.LPVER03 -------------------------------------------------------*/ 00241800
*  IF XPLISTVER>=1                                                      00241900
*    THEN                                                               00242000
*      DO;                                                              00242100
*/*PL.L05  XPLISTLEN FIXED(16) BDY(BYTE) INPUT-----------------------*/ 00242200
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00242300
*                 '_XPLISTLEN FIXED(16) BDY(BYTE), '||                  00242400
*                 '/* INPUT XPLISTLEN*/';                               00242500
*/*PL.LPVER04 -------------------------------------------------------*/ 00242600
*      END;                                                             00242700
*/*PL.LPVER03 -------------------------------------------------------*/ 00242800
*  IF XPLISTVER>=1                                                      00242900
*    THEN                                                               00243000
*      DO;                                                              00243100
*/*PL.L08  XRSV002A CHAR(2) RESERVED---------------------------------*/ 00243200
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00243300
*                 '_XRSV002A CHAR(2), '||                               00243400
*                 '/* RESERVED */';                                     00243500
*/*PL.LPVER04 -------------------------------------------------------*/ 00243600
*      END;                                                             00243700
*/*PL.LPVER03 -------------------------------------------------------*/ 00243800
*  IF XPLISTVER>=1                                                      00243900
*    THEN                                                               00244000
*      DO;                                                              00244100
*/*PL.L08 ADDR XHOST PTR(31) INPUT ADDR------------------------------*/ 00244200
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00244300
*                 '_XHOST_ADDR PTR(31), '||                             00244400
*                 '/* '||ZXHOST_ADDR||' XHOST_ADDR */';                 00244500
*/*PL.LPVER04 -------------------------------------------------------*/ 00244600
*      END;                                                             00244700
*/*PL.L11 CONSTANT TO ENSURE THAT LIST FORM IS LONG ENOUGH ----------*/ 00244800
*        ZPRMNUM=ZPRMNUM+1;                                             00244900
*        ZPRM(ZPRMNUM)=ZPRMLINE||' 2 * CHAR(0);';                       00245000
*        IF XPLISTVER^=0                                                00245100
*           & XMF^='S'                                                  00245200
*          THEN                                                         00245300
*            DO;                                                        00245400
*              ZPRMNUM=ZPRMNUM+1;                                       00245500
*              ZPRM(ZPRMNUM)=                                           00245600
*               'DCL #Z'||ZNDX||'_LENCHECK FIXED(32) CONSTANT('||       00245700
*               'LENGTH('||XMFCTRL||')-LENGTH(#Z'||ZNDX||'));'||        00245800
*               '/* CONSTANT TO ENSURE THAT THE LIST FORM'||            00245900
*               ' IS LONG ENOUGH */';                                   00246000
*            END;                                                       00246100
*/*PL.L12 PARAMETER LIST SIZE----------------------------------------*/ 00246200
*        ZPLLEN=39;                                                     00246300
*        IF XPLISTVER>=1                                                00246400
*          THEN                                                         00246500
*            ZPLLEN=48;                                                 00246600
*        IF ZPRMMAX<ZPLLEN                                              00246700
*           & XMF^='E'                                                  00246800
*          THEN                                                         00246900
*            ZPRMMAX=ZPLLEN;                                            00247000
*/*PL.L13 -----------------------------------------------------------*/ 00247100
*      END;                                                             00247200
*/*PI.L01 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00247300
*  IF XMF^='L'                                                          00247400
*    THEN                                                               00247500
*      DO;                                                              00247600
*        ANS('RFY GPR15F UNRSTD;') NORESCAN COL(MACLMAR);               00247700
*/*PI.L03 CLEAR PARAMETER LIST --------------------------------------*/ 00247800
*            ANS('#Z'||ZNDX||'=''''B;'||                                00247900
*                '/* CLEAR PARAMETER AREA */')                          00248000
*                NORESCAN COL(MACLMAR);                                 00248100
*/*PI.L05A XVERSION FIXED(8)-----------------------------------------*/ 00248200
*        IF XPLISTVER^=0                                                00248300
*          THEN                                                         00248400
*            ANS('#Z'||ZNDX||'_XVERSION='||CHAR(XPLISTVER)||'; '||      00248500
*                '/* XVERSION FIXED(8) */')                             00248600
*                NORESCAN COL(MACLMAR);                                 00248700
*/*PI.L21 XLUNAME NAME CHAR(8)---------------------------------------*/ 00248800
*        IF ZXLUNAME='INPUT' |                                          00248900
*           ZXLUNAME='INOUT'                                            00249000
*          THEN                                                         00249100
*            ANS('#Z'||ZNDX||'_XLUNAME='||                              00249200
*                XLUNAME||';'||                                         00249300
*                '/* XLUNAME CHAR(8) */')                               00249400
*                NORESCAN COL(MACLMAR);                                 00249500
*/*PI.L21 XNETWORK_ID NAME CHAR(8)-----------------------------------*/ 00249600
*        IF ZXNETWORK_ID='INPUT' |                                      00249700
*           ZXNETWORK_ID='INOUT'                                        00249800
*          THEN                                                         00249900
*            ANS('#Z'||ZNDX||'_XNETWORK_ID='||                          00250000
*                XNETWORK_ID||';'||                                     00250100
*                '/* XNETWORK_ID CHAR(8) */')                           00250200
*                NORESCAN COL(MACLMAR);                                 00250300
*/*PI.L21 XLOCATION NAME CHAR(18)------------------------------------*/ 00250400
*        IF ZXLOCATION='INPUT' |                                        00250500
*           ZXLOCATION='INOUT'                                          00250600
*          THEN                                                         00250700
*            ANS('#Z'||ZNDX||'_XLOCATION='||                            00250800
*                XLOCATION||';'||                                       00250900
*                '/* XLOCATION CHAR(18) */')                            00251000
*                NORESCAN COL(MACLMAR);                                 00251100
*/*PI.LPVER01 -------------------------------------------------------*/ 00251200
*  IF XPLISTVER>=1                                                      00251300
*    THEN                                                               00251400
*      DO;                                                              00251500
*/*PI.L05C XPLISTLEN FIXED(16)---------------------------------------*/ 00251600
*        ANS('#Z'||ZNDX||'_XPLISTLEN=LENGTH(#Z'||ZNDX||');'||           00251700
*            '/* XPLISTLEN FIXED(16) */')                               00251800
*            NORESCAN COL(MACLMAR);                                     00251900
*/*PI.LPVER02 -------------------------------------------------------*/ 00252000
*      END;                                                             00252100
*/*PI.LPVER01 -------------------------------------------------------*/ 00252200
*  IF XPLISTVER>=1                                                      00252300
*    THEN                                                               00252400
*      DO;                                                              00252500
*/*PI.L14 CHECK FOR * AS THE CHAR(64) ARGUMENT-----------------------*/ 00252600
*        IF TRANSLATE(XHOST)                                            00252700
*                    = 'NO_HOST'                                        00252800
*          THEN                                                         00252900
*            ZXHOST='';                      /* RESET INPUT/INOUT */    00253000
*/*PI.L15 ADDR(XHOST) CHAR(64)---------------------------------------*/ 00253100
*        IF ZXHOST^=''                                                  00253200
*          THEN                                                         00253300
*            ANS('#Z'||ZNDX||'_XHOST_ADDR='||                           00253400
*                'ADDR('||XHOST||');'||                                 00253500
*                '/* ADDR XHOST CHAR(64) */')                           00253600
*                NORESCAN COL(MACLMAR);                                 00253700
*/*PI.LPVER02 -------------------------------------------------------*/ 00253800
*      END;                                                             00253900
*/*PI.L31 INVOKE FUNCTION--------------------------------------------*/ 00254000
*              IF NUMBER(RSNCODE)>0                                     00254100
*                THEN                                                   00254200
*                  ANS('RFY GPR00F RSTD;') NORESCAN COL(MACLMAR);       00254300
*              ANS('RFY GPR01P RSTD;') NORESCAN COL(MACLMAR);           00254400
*              ANS('GPR01P=ADDR(#Z'||ZNDX||');'||                       00254500
*                  '/* PARAMETER LIST */')                              00254600
*                  NORESCAN COL(MACLMAR);                               00254700
*              IF SYSASCE^='P'                                          00254800
*                THEN                                                   00254900
*                  ANS('SAR(GPR01P,ALET(#Z'||ZNDX||'));'||              00255000
*                      '/* PARAMETER LIST AR */')                       00255100
*                      NORESCAN COL(MACLMAR);                           00255200
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00255300
         ANS('PC(XM@(96)|29);') SKIP COL(5);                            00255400
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00255500
*              ANS('RFY GPR01P UNRSTD;') NORESCAN COL(MACLMAR);         00255600
*              IF NUMBER(RETCODE)>0                                     00255700
*                THEN                                                   00255800
*                  ANS('RFY GPR15F RSTD;') NORESCAN COL(MACLMAR);       00255900
*/*PO.L08 XRETCODE CHAR(18) RETURN CODE------------------------------*/ 00256000
*              IF NUMBER(RETCODE)>0                                     00256100
*                THEN                                                   00256200
*                    ANS(XRETCODE||                                     00256300
*                     '=GPR15F; /* SET RETURN CODE */')                 00256400
*                      NORESCAN COL(MACLMAR);                           00256500
*/*PO.L09 XRSNCODE CHAR(18) REASON CODE------------------------------*/ 00256600
*              IF NUMBER(RSNCODE)>0                                     00256700
*                THEN                                                   00256800
*                    ANS(XRSNCODE||                                     00256900
*                     '=GPR00F; /* SET REASON CODE */')                 00257000
*                      NORESCAN COL(MACLMAR);                           00257100
*/*PO.L10 REMOVE REGISTER RESTRICTIONS-------------------------------*/ 00257200
*              IF NUMBER(RSNCODE)>0                                     00257300
*                THEN                                                   00257400
*              ANS('RFY GPR00F UNRSTD;') NORESCAN COL(MACLMAR);         00257500
*              IF NUMBER(RETCODE)>0                                     00257600
*                THEN                                                   00257700
*              ANS('RFY GPR15F UNRSTD;') NORESCAN COL(MACLMAR);         00257800
*/*PO.L12 END OF PARAMETER LIST PROCESSING---------------------------*/ 00257900
*      END;                                                             00258000
*/*PO.L13 IWMSRDRS USAGE INDICATOR-----------------------------------*/ 00258100
*  ZIWMSRDRS='YES';                          /* SET IWMSRDRS USED */    00258200
*/*PO.L15 END OF EXECUTABLE IWMSRDRS-PLISTVER MACRO------------------*/ 00258300
*  IF XMF^='L'                                                          00258400
*    THEN                                                               00258500
*      ANS('END; /* IWMSRDRS-PLISTVER */')                              00258600
*          NORESCAN COL(MACLMAR);                                       00258700
*/*PO.L16 RESTORE PRINT CONTROLS-------------------------------------*/ 00258800
*  ANS(MACCONC||'LIST POP NOECHO;') NORESCAN COL(MACLMAR);              00258900
*/*PO.L17 END OF IWMSRDRS MACRO--------------------------------------*/ 00259000
*  ANS(MACCONC||'SPACE;') NORESCAN COL(MACLMAR);                        00259100
*  ANS(' ') NORESCAN COL(MACLMAR);                                      00259200
*/*******************************************************************/  00259300
*/*  PO.L18 END OF CODE TO BE BYPASSED WHEN ZMACRET ^= 0            */  00259400
*/*******************************************************************/  00259500
*      END;                                                             00259600
*/*******************************************************************/  00259700
*/*  MVS ONLY     -CHECK IF AMG PARM LISTS ARE PRESENT              */  00259800
*/*               -ROUND MAX AMG PARM LIST TO DOUBLEWORD MULTIPLES  */  00259900
*/*******************************************************************/  00260000
*  IF ZPRMNUM>0                   /* NUMBER OF AMG PARM LIST ENTRIES*/  00260100
*    THEN                                                               00260200
*      DO;                                                              00260300
*        ZPRMMAX=((ZPRMMAX+7)/8)*8; /* ROUND PARM LIST SIZE UP TO       00260400
*                                      DOUBLEWORD MULTIPLES        */   00260500
*/*******************************************************************/  00260600
*/*  MVS -GENERATE PARM LIST DCL TO OVERLAY ?EPILOG'S ILIST AREA    */  00260700
*/*******************************************************************/  00260800
*        IF XMF ^= 'M' & XMF ^= 'E'                                     00260900
*          THEN                                                         00261000
*            DO;                                                        00261100
*              IF INDEX(EHALIST,',AMG,')=0 /* HAS DECLARE BEEN DONE?*/  00261200
*                THEN                                                   00261300
*                  DO;                                                  00261400
*                    ANS('?EPILOG                                       00261500
*                        STRING(''DCL #ZPLIST DEF(ILIST);'');');        00261600
*                    EHALIST=EHALIST||',AMG,';                          00261700
*                  END;                                                 00261800
*            END;                                                       00261900
*/*******************************************************************/  00262000
*/*  MVS  -EXTRACT PARM LISTS FROM AMG GLOBAL MACRO ARRAYS          */  00262100
*/*******************************************************************/  00262200
*        IF XMF ^= 'M' & XMF ^= 'E'                                     00262300
*          THEN                                                         00262400
*            DO;                                                        00262500
*              IF ZPRMMAX>EHAMAXLEN                                     00262600
*                THEN                                                   00262700
*                  EHAMAXLEN=ZPRMMAX; /* SET MAX PARM LIST SIZE     */  00262800
*            END;                                                       00262900
*        DO ZI=1 TO ZPRMNUM; /* EXTRACT AMG PARM LISTS               */ 00263000
*          ANS('?EPILOG STRING('''||ZPRM(ZI)||''');')                   00263100
*              COL(MACLMAR);                                            00263200
*        END;                                                           00263300
*      END;                                                             00263400
*/*-----------------------------------------------------------------*/  00263500
*/*  MVS  -ENSURE THAT GPRS NEEDED BY AMG MACROS WILL BE PROVIDED   */  00263600
*/*        BY ?EPILOG                                               */  00263700
*/*-----------------------------------------------------------------*/  00263800
*        IF INDEX(EHAREGS,'01P')=0                                      00263900
*          THEN                                                         00264000
*            EHAREGS=EHAREGS||'01P'; /* GPR01P                      */  00264100
*        IF INDEX(EHAREGS,'00F')=0                                      00264200
*          & NUMBER(RSNCODE)>0                                          00264300
*          THEN                                                         00264400
*            EHAREGS=EHAREGS||'00F'; /* GPR00F                      */  00264500
*        IF INDEX(EHAREGS,'15F')=0                                      00264600
*          THEN                                                         00264700
*            EHAREGS=EHAREGS||'15F'; /* GPR15F                      */  00264800
*  RETURN CODE(ZMACRET);                                                00264900
*%END IWMSRDRS;                                                         00265000
