*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMQCXIT                              -04/18/96-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Queue Manager Connect Exit                    * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5645-001 (C) COPYRIGHT IBM CORP. 1997                           * 00001300
*                                                                     * 00001400
* STATUS= HBB6603                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*01* FUNCTION:                                                        * 00001900
*                                                                     * 00002000
*      IWMQCXIT will invoke the Queue Manager Connect exit specified. * 00002100
*      This exit is responsible for taking the action indicated for   * 00002200
*      the associated Queue Manager.  The return/reason codes for     * 00002300
*      IWMQCXIT are those set by the exit invoked.                    * 00002400
*                                                                     * 00002500
*      The list form of IWMQCXIT is intended for use by the exit      * 00002600
*      routine to map the input parameters.  The execute and standard * 00002700
*      form of IWMQCXIT are intended for use only by the operating    * 00002800
*      system.                                                        * 00002900
*                                                                     * 00003000
*      The exit environment is described in the environment           * 00003100
*      description below. The parameter list is in pageable storage   * 00003200
*      addressable in the current address space, but is not           * 00003300
*      guaranteed to be in the key of the exit as it is not expected  * 00003400
*      to be changed by the exit.  Upon entry to the exit, the        * 00003500
*      register contents are as follows:                              * 00003600
*                                                                     * 00003700
*                                                                     * 00003800
*      o   Register 0 = not defined                                   * 00003900
*                                                                     * 00004000
*      o   Register 1 will contain the address of a parameter list as * 00004100
*          formatted by the list form of this macro, IWMQCXIT MF=(L). * 00004200
*                                                                     * 00004300
*      o   Registers 2-13 = not defined                               * 00004400
*                                                                     * 00004500
*      o   Register 14 = return address                               * 00004600
*                                                                     * 00004700
*      o   Register 15 = entry point address                          * 00004800
*                                                                     * 00004900
*                                                                     * 00005000
*      Upon entry to the exit, the access register contents are       * 00005100
*      undefined.                                                     * 00005200
*                                                                     * 00005300
*      Upon return from the exit, the register contents are as        * 00005400
*      follows:                                                       * 00005500
*                                                                     * 00005600
*                                                                     * 00005700
*      o   Register 0 = Reason code if GR15 return code is non-zero   * 00005800
*                                                                     * 00005900
*      o   Registers 1-14 = not defined (need not be restored to      * 00006000
*          value on entry)                                            * 00006100
*                                                                     * 00006200
*      o   Register 15 = Return code                                  * 00006300
*                                                                     * 00006400
*                                                                     * 00006500
*      Upon return from the exit, the access register contents are    * 00006600
*      unchanged.                                                     * 00006700
*                                                                     * 00006800
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00006900
*                                                                     * 00007000
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00007100
*                                                                     * 00007200
*01* ENVIRONMENT:                                                     * 00007300
*                                                                     * 00007400
*                                                                     * 00007500
*      Dispatchable unit mode: Task mode.                             * 00007600
*                                                                     * 00007700
*      Minimum authorization: Supervisor state key 0.                 * 00007800
*                                                                     * 00007900
*      AMODE:            31-bit.                                      * 00008000
*                                                                     * 00008100
*      ASC mode:         Primary.                                     * 00008200
*                                                                     * 00008300
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00008400
*                                                                     * 00008500
*      Interrupt status: Enabled for I/O and external interrupts.     * 00008600
*                                                                     * 00008700
*      Locks:            No locks held.                               * 00008800
*                                                                     * 00008900
*      Control parameters: Control parameters must be in the primary  * 00009000
*                        address space.                               * 00009100
*                                                                     * 00009200
*                                                                     * 00009300
*                                                                     * 00009400
*01* PROGRAMMING REQUIREMENTS:                                        * 00009500
*    The list form of the macro is intended for use by products       * 00009600
*    supplying a Queue Manager Connect exit.                          * 00009700
*                                                                     * 00009800
*    The execute form of the macro is intended for use by MVS.  The   * 00009900
*    assembler execute form only initializes the parameter list and   * 00010000
*    calls the exit routine, and has the following restrictions:      * 00010100
*                                                                     * 00010200
*                                                                     * 00010300
*    o   the invoker must save registers required before invoking the * 00010400
*        macro                                                        * 00010500
*                                                                     * 00010600
*    o   the invoker must restore registers required immediately      * 00010700
*        after invoking the macro, without depending on the exit to   * 00010800
*        preserve any registers.                                      * 00010900
*                                                                     * 00011000
*                                                                     * 00011100
*                                                                     * 00011200
*01* RESTRICTIONS:                                                    * 00011300
*                                                                     * 00011400
*                                                                     * 00011500
*    1.  This macro may not be used prior to the completion of WLM    * 00011600
*        address space initialization.                                * 00011700
*                                                                     * 00011800
*    2.  This macro may only be used on OS/390 R3 or higher levels.   * 00011900
*                                                                     * 00012000
*    3.  The exit routine may not invoke functions or suspend         * 00012100
*        execution which prevents return to the caller for a          * 00012200
*        protracted timeframe. This includes the use of system        * 00012300
*        services which either explicitly or implicitly give control  * 00012400
*        back to the system. In this context, protracted would        * 00012500
*        include durations of one second or longer.  When the need    * 00012600
*        for such activities is required, the exit should use         * 00012700
*        asynchronous techniques.                                     * 00012800
*                                                                     * 00012900
*                                                                     * 00013000
*                                                                     * 00013100
*01* INPUT REGISTER INFORMATION:                                      * 00013200
*                                                                     * 00013300
*    Before issuing the IWMQCXIT macro, the caller does not have to   * 00013400
*    place any information into any register unless using it in       * 00013500
*    register notation for a particular parameter, or using it as a   * 00013600
*    base register.                                                   * 00013700
*                                                                     * 00013800
*01* OUTPUT REGISTER INFORMATION:                                     * 00013900
*                                                                     * 00014000
*    When control returns to the caller, the GPRs contain:            * 00014100
*                                                                     * 00014200
*                                                                     * 00014300
*    REGISTER  CONTENTS                                               * 00014400
*                                                                     * 00014500
*    0         Reason code if GR15 return code is non-zero            * 00014600
*                                                                     * 00014700
*    1         Used as work register by the system                    * 00014800
*                                                                     * 00014900
*    2-13      Unpredictable in assembler form, unchanged in PL/X     * 00015000
*              form                                                   * 00015100
*                                                                     * 00015200
*    14        Used as work register by the system                    * 00015300
*                                                                     * 00015400
*    15        Return code                                            * 00015500
*                                                                     * 00015600
*                                                                     * 00015700
*                                                                     * 00015800
*    When control returns to the caller, the ARs contain:             * 00015900
*                                                                     * 00016000
*                                                                     * 00016100
*    REGISTER  CONTENTS                                               * 00016200
*                                                                     * 00016300
*    0-1       Used as work registers by the system                   * 00016400
*                                                                     * 00016500
*    2-13      Unchanged                                              * 00016600
*                                                                     * 00016700
*    14-15     Used as work registers by the system                   * 00016800
*                                                                     * 00016900
*                                                                     * 00017000
*                                                                     * 00017100
*    Some callers depend on register contents remaining the same      * 00017200
*    before and after issuing a service.  If the system changes the   * 00017300
*    contents of registers on which the caller depends, the caller    * 00017400
*    must save them before issuing the service, and restore them      * 00017500
*    after the system returns control.                                * 00017600
*                                                                     * 00017700
*01* PERFORMANCE IMPLICATIONS:                                        * 00017800
*                                                                     * 00017900
*    None                                                             * 00018000
*                                                                     * 00018100
*01* SYNTAX:                                                          * 00018200
*                                                                     * 00018300
*[xlabel]  IWMQCXIT     QMGR_EXIT@=xqmgr_exit@                        * 00018400
*                     ,ACTION=QDEL                                   * 00018500
*                     ,ACTION=NULL                                   * 00018600
*                      ,ETOKEN=xetoken                                * 00018700
*                      ,USERDATA=xuserdata                            * 00018800
*                      ,APPLENV=xapplenv                              * 00018900
*                    [,SECUSER=NO]                                   * 00019000
*                    [,SECUSER=YES                                   * 00019100
*                          ,USERID=xuserid]                           * 00019200
*                     [,RETCODE=xretcode]                             * 00019300
*                     [,RSNCODE=xrsncode]                             * 00019400
*                     [,PLISTVER=xplistver|IMPLIED_VERSION]         * 00019500
*                    [,MF=S]                                         * 00019600
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00019700
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*      Where:                                                         * 00020100
*                                                                     * 00020200
*                                                                     * 00020300
*      [xlabel]                                                       * 00020400
*          is an optional symbol, starting in column 1, that is the   * 00020500
*          name on the IWMQCXIT macro invocation.  The name must      * 00020600
*          conform to the rules for an ordinary assembler language    * 00020700
*          symbol.                                                    * 00020800
*          DEFAULT: No name.                                          * 00020900
*                                                                     * 00021000
*                                                                     * 00021100
*                                                                     * 00021200
*                                                                     * 00021300
*      QMGR_EXIT@=xqmgr_exit@                                         * 00021400
*          is the name (RS-type), or address in register (2)-(12), of * 00021500
*          a required 4 byte input that contains the address of the   * 00021600
*          Queue Manager Connect Exit to be invoked.                  * 00021700
*                                                                     * 00021800
*                                                                     * 00021900
*                                                                     * 00022000
*                                                                     * 00022100
*      ACTION=QDEL|NULL                                             * 00022200
*          is a required keyword input which indicates the type of    * 00022300
*          action requested.  The exit should make an explicit check  * 00022400
*          for the action indicated to anticipate the introduction of * 00022500
*          new values in later releases.                              * 00022600
*                                                                     * 00022700
*                                                                     * 00022800
*          ACTION=QDEL                                                * 00022900
*              indicates that exit is being called for the deletion   * 00023000
*              of a previously queued work element.  The exit will    * 00023100
*              only be called once per queued work element. If the    * 00023200
*              exit should end abnormally, the system will not invoke * 00023300
*              the exit again for the same queued work element.  In   * 00023400
*              the event of an abnormal termination of the exit       * 00023500
*              routine, the system may chose to call the exit for any * 00023600
*              remaining queued work elements, or may chose to        * 00023700
*              discontinue use of the exit upon some threshold number * 00023800
*              of errors.                                             * 00023900
*                                                                     * 00024000
*          ACTION=NULL                                                * 00024100
*              indicates that no exit is to be called.  The exit      * 00024200
*              routine need not check for this action.                * 00024300
*                                                                     * 00024400
*                                                                     * 00024500
*                                                                     * 00024600
*                                                                     * 00024700
*                                                                     * 00024800
*                                                                     * 00024900
*      ETOKEN=xetoken                                                 * 00025000
*          is the name (RS-type), or address in register (2)-(12), of * 00025100
*          a required 8 character input which contains the Enclave    * 00025200
*          token associated with the work request at the time the     * 00025300
*          work request was queued or binary zeros when the system    * 00025400
*          knows the Enclave no longer exists or the system no longer * 00025500
*          knows which Enclave was associated with the work request.  * 00025600
*                                                                     * 00025700
*                                                                     * 00025800
*                                                                     * 00025900
*                                                                     * 00026000
*      USERDATA=xuserdata                                             * 00026100
*          is the name (RS-type), or address in register (2)-(12), of * 00026200
*          a required 16 character input which contains data passed   * 00026300
*          to Queue Insert.  The format is undefined to MVS.          * 00026400
*                                                                     * 00026500
*                                                                     * 00026600
*                                                                     * 00026700
*                                                                     * 00026800
*      APPLENV=xapplenv                                               * 00026900
*          is the name (RS-type), or address in register (2)-(12), of * 00027000
*          a required 32 character input which contains the           * 00027100
*          application environment name associated with the queued    * 00027200
*          work request or blanks if not available.                   * 00027300
*                                                                     * 00027400
*                                                                     * 00027500
*                                                                     * 00027600
*                                                                     * 00027700
*      [SECUSER=NO|YES]                                             * 00027800
*          is an optional keyword input which specifies whether the   * 00027900
*          security environment of a user was associated with the     * 00028000
*          queued work request.                                       * 00028100
*          DEFAULT: NO                                                * 00028200
*                                                                     * 00028300
*                                                                     * 00028400
*          [SECUSER=NO]                                               * 00028500
*              No security environment was to be established.         * 00028600
*                                                                     * 00028700
*          [SECUSER=YES                                               * 00028800
*              The specified userid was to be used to establish a     * 00028900
*              security environment.                                  * 00029000
*                                                                     * 00029100
*                                                                     * 00029200
*              USERID=xuserid]                                        * 00029300
*                  is the name (RS-type), or address in register      * 00029400
*                  (2)-(12), of a required 8 character input which    * 00029500
*                  contains the requester's userid.                   * 00029600
*                                                                     * 00029700
*                                                                     * 00029800
*                                                                     * 00029900
*                                                                     * 00030000
*                                                                     * 00030100
*                                                                     * 00030200
*                                                                     * 00030300
*                                                                     * 00030400
*      [RETCODE=xretcode]                                             * 00030500
*          is the name (RS-type) of an optional fullword output       * 00030600
*          variable, or register (2)-(12), into which the return code * 00030700
*          is to be copied from GPR 15.                               * 00030800
*                                                                     * 00030900
*                                                                     * 00031000
*                                                                     * 00031100
*                                                                     * 00031200
*      [RSNCODE=xrsncode]                                             * 00031300
*          is the name (RS-type) of an optional fullword output       * 00031400
*          variable, or register (2)-(12), into which the reason code * 00031500
*          is to be copied from GPR 0.                                * 00031600
*                                                                     * 00031700
*                                                                     * 00031800
*                                                                     * 00031900
*                                                                     * 00032000
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00032100
*          is an optional byte input decimal value in the "0-0" range * 00032200
*          that specifies the macro version.  PLISTVER is the only    * 00032300
*          key allowed on the list form of MF and determines which    * 00032400
*          parameter list is generated.  Note that MAX may be         * 00032500
*          specified instead of a number, and the parameter list will * 00032600
*          be of the largest size currently supported. This size may  * 00032700
*          grow from release to release (thus possibly affecting the  * 00032800
*          amount of storage needed by your program).  If your        * 00032900
*          program can tolerate this, IBM recommends that you always  * 00033000
*          specify MAX when creating the list form parameter list as  * 00033100
*          that will ensure that the list form parameter list is      * 00033200
*          always long enough to hold whatever parameters might be    * 00033300
*          specified on the execute form.                             * 00033400
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00033500
*          default is the lowest version which allows all of the      * 00033600
*          parameters specified on the invocation to be processed.    * 00033700
*                                                                     * 00033800
*                                                                     * 00033900
*                                                                     * 00034000
*                                                                     * 00034100
*      [MF=S|L|E]                                                   * 00034200
*          is an optional keyword input which specifies the macro     * 00034300
*          form.                                                      * 00034400
*          DEFAULT: S                                                 * 00034500
*                                                                     * 00034600
*                                                                     * 00034700
*          [MF=S]                                                     * 00034800
*              specifies the standard form of the macro.  The "S"     * 00034900
*              form generates code to put the parameters into an      * 00035000
*              in-line parameter list and invoke the desired service. * 00035100
*              Full checking for required macro keys is done along    * 00035200
*              with supplying defaults for omitted optional           * 00035300
*              parameters.                                            * 00035400
*                                                                     * 00035500
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00035600
*              specifies the list form of the macro.  The "L" form    * 00035700
*              defines an area to be used for the parameter list.     * 00035800
*              Only the PLISTVER key may be specified on the          * 00035900
*              invocation.  All other macro parameters are flagged as * 00036000
*              errors.  If PLISTVER is not specified, the original    * 00036100
*              parameter list definition is used.                     * 00036200
*                                                                     * 00036300
*            ,xmfctrl                                                 * 00036400
*              is a required input.  It is the name of a storage area * 00036500
*              for the parameter list.                                * 00036600
*                                                                     * 00036700
*            ,xmfattr|0D                                            * 00036800
*              is an optional 60 character input string that varies   * 00036900
*              from 1 to 60 characters. It can contain any value that * 00037000
*              is valid on an assembler DS pseudo-op. You can use     * 00037100
*              this parameter to force boundary alignment of the      * 00037200
*              parameter list.                                        * 00037300
*              DEFAULT: 0D which forces the parameter list to a       * 00037400
*              doubleword boundary.                                   * 00037500
*                                                                     * 00037600
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00037700
*              specifies the execute form of the macro.  The "E" form * 00037800
*              generates code to put the parameters into the          * 00037900
*              parameter list specified by xmfctrl and provides full  * 00038000
*              syntax checking with default setting.                  * 00038100
*                                                                     * 00038200
*            ,xmfctrl                                                 * 00038300
*              is a required input.  It is the name (RS-type), or     * 00038400
*              address in register (1)-(12), of a storage area for    * 00038500
*              the parameter list.                                    * 00038600
*                                                                     * 00038700
*            ,COMPLETE                                              * 00038800
*              is an optional keyword input which specifies the       * 00038900
*              degree of macro parameter syntax checking.             * 00039000
*              DEFAULT: COMPLETE                                      * 00039100
*                                                                     * 00039200
*                                                                     * 00039300
*              COMPLETE                                               * 00039400
*                  Checking for required macro keys is done and       * 00039500
*                  defaults are supplied for omitted optional         * 00039600
*                  parameters.                                        * 00039700
*                                                                     * 00039800
*                                                                     * 00039900
*                                                                     * 00040000
*                                                                     * 00040100
*                                                                     * 00040200
*                                                                     * 00040300
*                                                                     * 00040400
*01* ABEND CODES:  None.                                              * 00040500
*                                                                     * 00040600
*01* RETURN CODES:                                                    * 00040700
*                                                                     * 00040800
*                                                                     * 00040900
*            0    Name: IwmRetCodeOk                                  * 00041000
*                                                                     * 00041100
*                 Meaning: Successful completion.                     * 00041200
*                                                                     * 00041300
*                 Action: None required.                              * 00041400
*                                                                     * 00041500
*                                                                     * 00041600
*                                                                     * 00041700
*01* REASON CODES:                                                    * 00041800
*                                                                     * 00041900
*       A unique reason code will be returned whenever the return     * 00042000
*       code is non-zero. No reason codes are currently defined.      * 00042100
*                                                                     * 00042200
*01* MODULE TYPE:  ASSEM MACRO                                        * 00042300
*                                                                     * 00042400
*02*   PROCESSOR:  ASSEM                                              * 00042500
*                                                                     * 00042600
*01* COMPONENT:  SCWLM                                                * 00042700
*                                                                     * 00042800
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00042900
*                                                                     * 00043000
*01* EXAMPLES:                                                        * 00043100
*                                                                     * 00043200
*    To call a Queue Manager connect exit:                            * 00043300
*                                                                     * 00043400
*               IWMQCXIT                                            X * 00043500
*                     QMGR_EXIT@=CONEXIT@,                          X * 00043600
*                     ACTION=QDEL,                                  X * 00043700
*                     ETOKEN=ENCTOKEN,                              X * 00043800
*                     USERDATA=USERDATA,APPLENV=APPLENV,SECUSER=NO, X * 00043900
*                     RETCODE=RC,RSNCODE=RSN                          * 00044000
*      *                                                              * 00044100
*      * Storage areas                                                * 00044200
*      *                                                              * 00044300
*      CONEXIT@   DS  AL4             Contains the address of the     * 00044400
*      *                              Queue Manager Connect Exit      * 00044500
*      *                              to be invoked                   * 00044600
*      ENCTOKEN DS    CL8             Contains the Enclave token      * 00044700
*      *                              associated with the work        * 00044800
*      *                              request as returned by IWMECREA * 00044900
*      USERDATA DS    CL16            Contains data maintained by the * 00045000
*      *                              user                            * 00045100
*      APPLENV  DS    CL32            Contains the application        * 00045200
*      *                              environment name                * 00045300
*      *                                                              * 00045400
*      RC       DS    F               Return code                     * 00045500
*      RSN      DS    F               Reason code                     * 00045600
*                                                                     * 00045700
*                                                                     * 00045800
*01* MACRO USAGE NOTES:                                               * 00045900
*                                                                     * 00046000
*                                                                     * 00046100
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00046200
*        global macro variable.  Any value other than 'NO' will       * 00046300
*        result in the macro expansion being printed.  The default is * 00046400
*        'YES'.  The following examples illustrate how the ZPRINT     * 00046500
*        variable should be set.                                      * 00046600
*                                                                     * 00046700
*                    GBLC &ZPRINT                                     * 00046800
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00046900
*                                                                     * 00047000
*                                                                     * 00047100
*    2.  All   keys   currently   contained  in  the  IWMQCXIT  macro * 00047200
*        correspond  to  version  0.   If you specify PLISTVER, use a * 00047300
*        value of 0 or MAX.                                           * 00047400
*                                                                     * 00047500
*                                                                     * 00047600
*                                                                     * 00047700
*                                                                     * 00047800
*01* CHANGE ACTIVITY:                                                 * 00047900
*                                                                     * 00048000
*   Flag LineItem  FMID    Date   ID    Comment                       * 00048100
*                                                                     * 00048200
*    $L0=WLMP     HBB6603 960319 PD16:  OE/WEB Support                * 00048300
****** END OF SPECIFICATIONS *****************************************/ 00048400
*/********************************************************************* 00048500
         MACRO                                                          00048600
&XLABEL  IWMQCXIT &QMGR_EXIT@=,&ACTION=,&ETOKEN=,&USERDATA=,&APPLENV=, *00048700
               &SECUSER=,&USERID=,&RETCODE=,&RSNCODE=,&PLISTVER=,&MF=   00048800
.*                                                                      00048900
*                MACDATE -04/18/96-<0>                                  00049000
.*                                                                      00049100
.*******************************************************************    00049200
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00049300
.*******************************************************************    00049400
                GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                 00049500
                GBLC  &ZTEST      YES=TEST NO=NO TEST                   00049600
                GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX           00049700
.*                                                                      00049800
                GBLC  &ZIWMQCXIT  YES=MACRO USED AT LEAST ONCE          00049900
.*******************************************************************    00050000
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00050100
.*******************************************************************    00050200
                LCLC  &ZMS        ERROR MESSAGE WORK AREA               00050300
                LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS          00050400
                LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED            00050500
                LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR           00050600
                LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE           00050700
                LCLA  &ZAWRK      USED AS A WORK AREA                   00050800
                LCLA  &ZASIZ      USED FOR SIZE OF VALUE                00050900
                LCLA  &ZN         NUMERIC WORK VARIABLE                 00051000
                LCLC  &ZC         CHARACTER WORK VARIABLE               00051100
                LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE           00051200
                LCLA  &ZTLA       VALUE TOO LONG VARIABLE               00051300
                LCLA  &ZMACRET    MACRO RETURN CODE                     00051400
&ZMACRET        SETA  0           ASSUME NO ERRORS                      00051500
.*                                                                      00051600
                LCLC  &ZCSYSLIST(255)           NONXKEY, POS ARRAY      00051700
                LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()            00051800
                LCLA  &ZPLLEN     PARAMETER LIST LENGTH                 00051900
                LCLC  &ZENDBASEPL               End of base PL          00052000
                LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                 00052100
.*******************************************************************    00052200
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00052300
.*******************************************************************    00052400
                LCLA  &ZI         INDEX FOR ARRAY                       00052500
                LCLA  &ZJ         INDEX FOR PARMS                       00052600
                LCLA  &ZK         INDEX FOR PARSE                       00052700
                LCLA  &ZLO        LOW RANGE VALUE                       00052800
                LCLA  &ZHI        HIGH RANGE VALUE                      00052900
                LCLC  &ZW         WORK AREA FOR PARM                    00053000
.********************************************************************   00053100
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00053200
.********************************************************************   00053300
                GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL               00053400
                GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE        00053500
.*                                                                      00053600
                AIF   (K'&SYSASCE GT 0).ZSYS4   SYS STATE DEFINED       00053700
                AIF   (K'&SYSSPLV GT 0).ZSYS2   SP LEVEL DEFINED        00053800
                SPLEVEL  TEST                                           00053900
.ZSYS2          ANOP  ,                                                 00054000
                AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1             00054100
                AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1             00054200
                SYSSTATE TEST                                           00054300
                AGO   .ZSYS4                                            00054400
.ZSYS3          ANOP  ,                                                 00054500
&SYSASCE        SETC  'P'         ASSUME SYSSTATE PRIMARY               00054600
.ZSYS4          ANOP  ,                                                 00054700
.*******************************************************************    00054800
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00054900
.*******************************************************************    00055000
                LCLC  &XQMGR_EXIT@              ++ NAME                 00055100
                LCLC  &XACTION    ++ VALUE                              00055200
                LCLC  &XETOKEN    ++ NAME                               00055300
                LCLC  &XUSERDATA  ++ NAME                               00055400
                LCLC  &XAPPLENV   ++ NAME                               00055500
                LCLC  &XSECUSER   ++ VALUE                              00055600
                LCLC  &XUSERID    ++ NAME                               00055700
                LCLC  &XRETCODE   ++ NAME                               00055800
                LCLC  &XRSNCODE   ++ NAME                               00055900
                LCLA  &XPLISTVER  ++ VALUE                              00056000
                LCLC  &XMF        ++ VALUE                              00056100
                LCLC  &XMFCTRL    ++ NAME                               00056200
                LCLC  &XMFATTR    ++ VALUE                              00056300
                LCLC  &XMFSCK     ++ VALUE                              00056400
.*******************************************************************    00056500
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00056600
.*******************************************************************    00056700
                LCLC  &ZXQMGR_EXIT@             ++ INPUT NAME           00056800
                LCLC  &ZXACTION   ++ INPUT VALUE                        00056900
                LCLC  &ZXETOKEN   ++ INPUT NAME                         00057000
                LCLC  &ZXUSERDATA               ++ INPUT NAME           00057100
                LCLC  &ZXAPPLENV  ++ INPUT NAME                         00057200
                LCLC  &ZXSECUSER  ++ INPUT VALUE                        00057300
                LCLC  &ZXUSERID   ++ INPUT NAME                         00057400
                LCLC  &ZXRETCODE  ++ OUTPUT NAME                        00057500
                LCLC  &ZXRSNCODE  ++ OUTPUT NAME                        00057600
                LCLC  &ZXPLISTVER               ++ INPUT VALUE          00057700
                LCLC  &ZXMF       ++ INPUT VALUE                        00057800
                LCLC  &ZXMFCTRL   ++ INPUT NAME                         00057900
                LCLC  &ZXMFATTR   ++ INPUT VALUE                        00058000
                LCLC  &ZXMFSCK    ++ INPUT VALUE                        00058100
.********************************************************************   00058200
.***AC.PLV01  PROCESS PLISTVER                                      *   00058300
.********************************************************************   00058400
&XPLISTVER      SETA  0                                                 00058500
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00058600
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00058700
&XPLISTVER      SETA  0                                                 00058800
.ZPLV0          ANOP  ,                                                 00058900
.*                                                                      00059000
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00059100
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00059200
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00059300
.*-------------------------------------------------------------------   00059400
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00059500
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00059600
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00059700
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00059800
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00059900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00060000
                AGO   .ZPVCK2                                           00060100
.ZPVCK3         ANOP  ,                                                 00060200
.*-------------------------------------------------------------------   00060300
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00060400
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00060500
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00060600
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00060700
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00060800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00060900
                AGO   .ZPVCKE                                           00061000
.ZPVCK2         ANOP  ,                                                 00061100
.*-------------------------------------------------------------------   00061200
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00061300
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00061400
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00061500
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00061600
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00061700
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00061800
                MNOTE 8,' &ZMS IS REQUIRED.'                            00061900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00062000
                AGO   .ZPVCK5                                           00062100
.ZPVCK4         ANOP  ,                                                 00062200
&XPLISTVER      SETA  &PLISTVER(1)                                      00062300
.ZPVCK5         ANOP  ,                                                 00062400
.*-------------------------------------------------------------------   00062500
&ZCVAL          SETC  '&PLISTVER(1)'                                    00062600
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00062700
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00062800
                AIF   (&XPLISTVER LT 0).ZPVCK6  TOO LOW                 00062900
                AIF   (&XPLISTVER LE 0).ZPVCKE  NOT HIGH                00063000
.ZPVCK6         ANOP   ,                                                00063100
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00063200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00063300
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00063400
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00063500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00063600
.ZPVCKE         ANOP   ,                                                00063700
.********************************************************************   00063800
.***AG.MF01 PROCESS MF MACRO FORMS                                      00063900
.********************************************************************   00064000
                ACTR  10000                                             00064100
.*------------------------------------------------------------------    00064200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00064300
&XMF            SETC  ''          INITIALIZE XVARIABLE                  00064400
.*-------------------------------------------------------------------   00064500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00064600
.ZG37           ANOP  ,                                                 00064700
&ZTLC           SETC 'S'                                                00064800
                AIF   ('&MF(1)' NE '&ZTLC').ZG38                        00064900
&XMF            SETC  'S'         SET KEYWORD                           00065000
                AIF   (N'&MF LE 1).ZG37A        CK NUM                  00065100
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         00065200
&ZMS            SETC  '&ZMS.&MF"'                                       00065300
&ZMS            SETC  '&ZMS "MF"'                                       00065400
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00065500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00065600
.ZG37A          ANOP  ,                                                 00065700
.*-------------------------------------------------------------------   00065800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00065900
.ZG38           ANOP  ,                                                 00066000
&ZTLC           SETC 'L'                                                00066100
                AIF   ('&MF(1)' NE '&ZTLC').ZG45                        00066200
&XMF            SETC  'L'         SET KEYWORD                           00066300
                AIF   (N'&MF LE 3).ZG38A        CK NUM                  00066400
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         00066500
&ZMS            SETC  '&ZMS.&MF"'                                       00066600
&ZMS            SETC  '&ZMS "MF"'                                       00066700
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              00066800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00066900
.ZG38A          ANOP  ,                                                 00067000
.*-------------------------------------------------------------------   00067100
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00067200
                AIF   (N'&SYSLIST NE 0).ZG38B   POSITIONALS?            00067300
                AIF   ('&QMGR_EXIT@' NE '').ZG38B  KEYS?                00067400
                AIF   ('&ACTION' NE '').ZG38B   KEYS?                   00067500
                AIF   ('&ETOKEN' NE '').ZG38B   KEYS?                   00067600
                AIF   ('&USERDATA' NE '').ZG38B  KEYS?                  00067700
                AIF   ('&APPLENV' NE '').ZG38B  KEYS?                   00067800
                AIF   ('&SECUSER' NE '').ZG38B  KEYS?                   00067900
                AIF   ('&USERID' NE '').ZG38B   KEYS?                   00068000
                AIF   ('&RETCODE' NE '').ZG38B  KEYS?                   00068100
                AIF   ('&RSNCODE' NE '').ZG38B  KEYS?                   00068200
                AGO    .ZG38C     INVOCATION OKAY                       00068300
.ZG38B          ANOP  ,                                                 00068400
&ZMS            SETC  'THE "L" FORM OF "MF"'    *MFLA* MNOTE            00068500
&ZMS            SETC  '&ZMS CAN ONLY HAVE'                              00068600
&ZMS            SETC  '&ZMS THE "PLISTVER" KEY'                         00068700
                MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'            00068800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00068900
.ZG38C          ANOP  ,                                                 00069000
.*-------------------------------------------------------------------   00069100
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00069200
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         00069300
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         00069400
                AIF   (N'&MF(2) GT 1).ZG40B     MULTI PARMS             00069500
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         00069600
.ZG40B          AIF   (K'&MF(2) GT 0).ZG40C                             00069700
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00069800
&ZMS            SETC  'WHEN "L" IS SPECIFIED'   *KRQDA*                 00069900
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               00070000
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      00070100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00070200
.ZG40C          ANOP  ,                                                 00070300
.*-------------------------------------------------------------------   00070400
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00070500
                AIF   (K'&ZXMFCTRL LE 0).ZG40P  NOT I/O                 00070600
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG40P                    00070700
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00070800
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         00070900
&ZMS            SETC  '&ZMS.&MF"'                                       00071000
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00071100
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                 00071200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00071300
.ZG40P          ANOP  ,                                                 00071400
.*-------------------------------------------------------------------   00071500
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00071600
&ZXMFATTR       SETC  'INPUT'     SET IN/OUTPUT                         00071700
&XMFATTR        SETC  '0D'                                              00071800
                AIF   (K'&MF(3) LE 0).ZG43B     PARM                    00071900
&XMFATTR        SETC  '&MF(3,1)'  SET XVARIABLE                         00072000
                AIF   (N'&MF(3) GT 1).ZG43B     MULTI PARMS             00072100
&XMFATTR        SETC  '&MF(3)'    SET XVARIABLE                         00072200
.ZG43B          ANOP  ,                                                 00072300
.*-------------------------------------------------------------------   00072400
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00072500
                AIF   (K'&ZXMFATTR LE 0).ZG43P  NOT I/O                 00072600
                AIF   ('&XMFATTR'(1,1) NE '(').ZG43P                    00072700
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       00072800
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         00072900
&ZMS            SETC  '&ZMS.&MF"'                                       00073000
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00073100
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                 00073200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00073300
.ZG43P          ANOP  ,                                                 00073400
.*-------------------------------------------------------------------   00073500
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00073600
                AIF   (K'&ZXMFATTR LE 0).ZG43S  NOT I/O                 00073700
                AIF   (K'&XMFATTR LE 60).ZG43S  LNG OK                  00073800
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       00073900
&ZMS            SETC  '"MF='      *KLNGA* MNOTE                         00074000
&ZMS            SETC  '&ZMS.&MF"'                                       00074100
&ZMS            SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'             00074200
                MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                00074300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00074400
.ZG43S          ANOP  ,                                                 00074500
.*-------------------------------------------------------------------   00074600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00074700
.ZG45           ANOP  ,                                                 00074800
&ZTLC           SETC 'E'                                                00074900
                AIF   ('&MF(1)' NE '&ZTLC').ZG53                        00075000
&XMF            SETC  'E'         SET KEYWORD                           00075100
                AIF   (N'&MF LE 3).ZG45A        CK NUM                  00075200
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         00075300
&ZMS            SETC  '&ZMS.&MF"'                                       00075400
&ZMS            SETC  '&ZMS "MF"'                                       00075500
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              00075600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00075700
.ZG45A          ANOP  ,                                                 00075800
.*-------------------------------------------------------------------   00075900
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00076000
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         00076100
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         00076200
                AIF   (N'&MF(2) GT 1).ZG47B     MULTI PARMS             00076300
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         00076400
.ZG47B          AIF   (K'&MF(2) GT 0).ZG47C                             00076500
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00076600
&ZMS            SETC  'WHEN "E" IS SPECIFIED'   *KRQDA*                 00076700
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               00076800
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      00076900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00077000
.ZG47C          ANOP  ,                                                 00077100
.*-------------------------------------------------------------------   00077200
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00077300
                AIF   (K'&ZXMFCTRL LE 0).ZG47R  NOT I/O                 00077400
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG47R                    00077500
&ZCGPR          SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                        00077600
                AIF   ('&ZCGPR'(1,1) NE '0').ZG47P                      00077700
                AIF   (K'&ZCGPR GT 2).ZG47Q                             00077800
                AIF   ('&ZCGPR' EQ '0').ZG47Q                           00077900
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00078000
                AIF   (T'&ZCGPR NE 'N').ZG47Q   INVALID REG NAME        00078100
.ZG47P          ANOP  ,                                                 00078200
                AIF   (T'&ZCGPR NE 'N').ZG47R   NON NUMERIC             00078300
                AIF   ('&ZCGPR' LT '1').ZG47Q                           00078400
                AIF   ('&ZCGPR' LE '12').ZG47R                          00078500
.ZG47Q          ANOP  ,                                                 00078600
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         00078700
&ZMS            SETC  '&ZMS.&MF"'                                       00078800
&ZMS            SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'         00078900
                MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                  00079000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00079100
.ZG47R          ANOP  ,                                                 00079200
.*-------------------------------------------------------------------   00079300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00079400
&XMFSCK         SETC  ''          INITIALIZE XVARIABLE                  00079500
.ZG51A   AIF   ('&MF(3)' NE 'COMPLETE').ZG52A                           00079600
&XMFSCK         SETC  'COMPLETE'  SET KEYWORD                           00079700
.*-------------------------------------------------------------------   00079800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00079900
.ZG52A          AIF   (K'&XMFSCK GT 0).ZG52C    KEYWORD                 00080000
                AIF   (K'&MF(3) LE 0).ZG52B                             00080100
&ZMS            SETC  '"MF='      *KUKWA* MNOTE                         00080200
&ZMS            SETC  '&ZMS.&MF"'                                       00080300
&ZMS            SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '         00080400
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00080500
&ZMS            SETC  '&ZMS "COMPLETE".'        VALID KEYWORD           00080600
                MNOTE 8,' &ZMS '                                        00080700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00080800
.ZG52B          ANOP  ,                                                 00080900
&XMFSCK         SETC  'COMPLETE'  SET DEFAULT KEYWORD                   00081000
.ZG52C          ANOP  ,                                                 00081100
&ZXMFSCK        SETC  'INPUT'     SET IN/OUTPUT                         00081200
.*------------------------------------------------------------------    00081300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00081400
.ZG53           ANOP  ,                                                 00081500
&ZXMF           SETC  'INPUT'     SET IN/OUTPUT                         00081600
                AIF   (K'&XMF GT 0).ZG53E       VALID ARG               00081700
                AIF   (T'&MF EQ 'O').ZG53D      OMITTED                 00081800
&ZASYSLNDX      SETA  0                                                 00081900
.ZG53A          ANOP  ,           POSITIONAL MACRO KEY                  00082000
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00082100
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG53C                  00082200
&ZTLC           SETC 'MF'                                               00082300
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG53A         00082400
.ZG53B          ANOP  ,                                                 00082500
&ZXMF           SETC  ''          RESET IN/OUTPUT                       00082600
&ZMS            SETC  'THE "MF" KEY'            *KOPTA* MNOTE           00082700
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00082800
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00082900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00083000
                AGO   .ZG53E                                            00083100
.ZG53C          ANOP  ,                                                 00083200
&ZXMF           SETC  ''          RESET IN/OUTPUT                       00083300
&ZMS            SETC  '"MF='      *KUKWA* MNOTE                         00083400
&ZMS            SETC  '&ZMS.&MF"'                                       00083500
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00083600
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00083700
&ZMS            SETC  '&ZMS "S",'               VALID KEYWORD           00083800
&ZMS            SETC  '&ZMS "L",'               VALID KEYWORD           00083900
&ZMS            SETC  '&ZMS OR "E".'            VALID KEYWORD           00084000
                MNOTE 8,' &ZMS '                                        00084100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00084200
                AGO   .ZG53E                                            00084300
.ZG53D          ANOP  ,                                                 00084400
&XMF            SETC  'S'         SET DEFAULT KEYWORD                   00084500
&XMFSCK         SETC  'COMPLETE'  COMPLETE CHECKING                     00084600
.ZG53E          ANOP  ,                                                 00084700
.********************************************************************   00084800
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00084900
.********************************************************************   00085000
                ACTR  10000                                             00085100
.*-------------------------------------------------------------------   00085200
.***AG.MF03 MF=(SLE)                                                    00085300
                AIF   ('&XMF' EQ 'L').ZGMFX                             00085400
.*----------------------------------------------------------------***   00085500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00085600
                AIF   (N'&QMGR_EXIT@ LE 1).ZG2A  CK NUM                 00085700
&ZMS            SETC  '"QMGR_EXIT@='            *KPOSA* MNOTE           00085800
&ZMS            SETC  '&ZMS.&QMGR_EXIT@"'                               00085900
&ZMS            SETC  '&ZMS "QMGR_EXIT@"'                               00086000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00086100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00086200
.ZG2A           ANOP  ,                                                 00086300
.*-------------------------------------------------------------------   00086400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00086500
&ZXQMGR_EXIT@   SETC  'INPUT'     SET IN/OUTPUT                         00086600
&XQMGR_EXIT@    SETC  '&QMGR_EXIT@(1)'          SET XVARIABLE           00086700
                AIF   (N'&QMGR_EXIT@ GT 1).ZG2B  MULTI PARMS            00086800
&XQMGR_EXIT@    SETC  '&QMGR_EXIT@'             SET XVARIABLE           00086900
.ZG2B           AIF   (K'&QMGR_EXIT@(1) GT 0).ZG2C                      00087000
&ZXQMGR_EXIT@   SETC  ''          RESET IN/OUTPUT                       00087100
&ZMS            SETC  ' '         *KRQDA*                               00087200
&ZMS            SETC  '&ZMS "QMGR_EXIT@" KEY AND ITS ARGUMENT'          00087300
                MNOTE 8,' &ZMS ARE REQUIRED.'                           00087400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00087500
.ZG2C           ANOP  ,                                                 00087600
.*-------------------------------------------------------------------   00087700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00087800
                AIF   (K'&ZXQMGR_EXIT@ LE 0).ZG2R  NOT I/O              00087900
                AIF   ('&XQMGR_EXIT@'(1,1) NE '(').ZG2R                 00088000
&ZCGPR          SETC  '&XQMGR_EXIT@'(2,K'&XQMGR_EXIT@-2)                00088100
                AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                       00088200
                AIF   (K'&ZCGPR GT 2).ZG2Q                              00088300
                AIF   ('&ZCGPR' EQ '0').ZG2Q                            00088400
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00088500
                AIF   (T'&ZCGPR NE 'N').ZG2Q    INVALID REG NAME        00088600
.ZG2P           ANOP  ,                                                 00088700
                AIF   (T'&ZCGPR NE 'N').ZG2R    NON NUMERIC             00088800
                AIF   ('&ZCGPR' LT '2').ZG2Q                            00088900
                AIF   ('&ZCGPR' LE '12').ZG2R                           00089000
.ZG2Q           ANOP  ,                                                 00089100
&ZMS            SETC  '"QMGR_EXIT@='            *KGPRA* MNOTE           00089200
&ZMS            SETC  '&ZMS.&QMGR_EXIT@"'                               00089300
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00089400
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00089500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00089600
.ZG2R           ANOP  ,                                                 00089700
.*------------------------------------------------------------------    00089800
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00089900
&XACTION        SETC  ''          INITIALIZE XVARIABLE                  00090000
.*-------------------------------------------------------------------   00090100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00090200
.ZG6            ANOP  ,                                                 00090300
                AIF   (K'&ACTION(1) LE 0).ZG6A                          00090400
&ZTLC           SETC 'QDEL'                                             00090500
                AIF   ('&ACTION(1)' NE '&ZTLC').ZG7                     00090600
&XACTION        SETC  'QDEL'      SET KEYWORD                           00090700
                AIF   (N'&ACTION LE 1).ZG6A     CK NUM                  00090800
&ZMS            SETC  '"ACTION='  *KPOSA* MNOTE                         00090900
&ZMS            SETC  '&ZMS.&ACTION"'                                   00091000
&ZMS            SETC  '&ZMS "ACTION"'                                   00091100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00091200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00091300
.ZG6A           ANOP  ,                                                 00091400
.*-------------------------------------------------------------------   00091500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00091600
.ZG7            ANOP  ,                                                 00091700
&ZTLC           SETC 'NULL'                                             00091800
                AIF   ('&ACTION(1)' NE '&ZTLC').ZG8                     00091900
&XACTION        SETC  'NULL'      SET KEYWORD                           00092000
                AIF   (N'&ACTION LE 1).ZG7A     CK NUM                  00092100
&ZMS            SETC  '"ACTION='  *KPOSA* MNOTE                         00092200
&ZMS            SETC  '&ZMS.&ACTION"'                                   00092300
&ZMS            SETC  '&ZMS "ACTION"'                                   00092400
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00092500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00092600
.ZG7A           ANOP  ,                                                 00092700
.*------------------------------------------------------------------    00092800
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00092900
.ZG8            ANOP  ,                                                 00093000
&ZXACTION       SETC  'INPUT'     SET IN/OUTPUT                         00093100
                AIF   (K'&XACTION GT 0).ZG8E    VALID ARG               00093200
                AIF   (T'&ACTION EQ 'O').ZG8D   OMITTED                 00093300
&ZASYSLNDX      SETA  0                                                 00093400
.ZG8A           ANOP  ,           POSITIONAL MACRO KEY                  00093500
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00093600
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG8C                   00093700
&ZTLC           SETC 'ACTION'                                           00093800
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG8A          00093900
.ZG8B           ANOP  ,                                                 00094000
&ZXACTION       SETC  ''          RESET IN/OUTPUT                       00094100
&ZMS            SETC  'THE "ACTION" KEY'        *KOPTA* MNOTE           00094200
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00094300
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00094400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00094500
                AGO   .ZG8E                                             00094600
.ZG8C           ANOP  ,                                                 00094700
&ZXACTION       SETC  ''          RESET IN/OUTPUT                       00094800
&ZMS            SETC  '"ACTION='  *KUKWA* MNOTE                         00094900
&ZMS            SETC  '&ZMS.&ACTION"'                                   00095000
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00095100
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00095200
&ZMS            SETC  '&ZMS "QDEL"'             VALID KEYWORD           00095300
&ZMS            SETC  '&ZMS OR "NULL".'         VALID KEYWORD           00095400
                MNOTE 8,' &ZMS '                                        00095500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00095600
                AGO   .ZG8E                                             00095700
.ZG8D           ANOP  ,                                                 00095800
&XACTION        SETC  'QDEL'      SET DEFAULT KEYWORD                   00095900
.ZG8E           ANOP  ,                                                 00096000
.*------------------------------------------------------------------    00096100
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00096200
                AIF   (K'&ACTION(1) GT 0).ZG8F  PARM                    00096300
&XACTION        SETC  ''          ENSURE NULL KEYWORD                   00096400
&ZXACTION       SETC  ''          RESET IN/OUTPUT                       00096500
&ZMS            SETC  'THE'                                             00096600
&ZMS            SETC  '&ZMS "ACTION" KEY AND ITS ARGUMENT'              00096700
&ZMS            SETC  '&ZMS ARE REQUIRED.'                              00096800
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00096900
&ZMS            SETC  '&ZMS "QDEL"'             VALID KEYWORD           00097000
&ZMS            SETC  '&ZMS OR "NULL".'         VALID KEYWORD           00097100
                MNOTE 8,' &ZMS '                                        00097200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00097300
.ZG8F           ANOP  ,                                                 00097400
.*----------------------------------------------------------------***   00097500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00097600
                AIF   (N'&ETOKEN LE 1).ZG10A    CK NUM                  00097700
&ZMS            SETC  '"ETOKEN='  *KPOSA* MNOTE                         00097800
&ZMS            SETC  '&ZMS.&ETOKEN"'                                   00097900
&ZMS            SETC  '&ZMS "ETOKEN"'                                   00098000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00098100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00098200
.ZG10A          ANOP  ,                                                 00098300
.*-------------------------------------------------------------------   00098400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00098500
&ZXETOKEN       SETC  'INPUT'     SET IN/OUTPUT                         00098600
&XETOKEN        SETC  '&ETOKEN(1)'              SET XVARIABLE           00098700
                AIF   (N'&ETOKEN GT 1).ZG10B    MULTI PARMS             00098800
&XETOKEN        SETC  '&ETOKEN'   SET XVARIABLE                         00098900
.ZG10B          AIF   (K'&ETOKEN(1) GT 0).ZG10C                         00099000
&ZXETOKEN       SETC  ''          RESET IN/OUTPUT                       00099100
&ZMS            SETC  ' '         *KRQDA*                               00099200
&ZMS            SETC  '&ZMS "ETOKEN" KEY AND ITS ARGUMENT'              00099300
                MNOTE 8,' &ZMS ARE REQUIRED.'                           00099400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00099500
.ZG10C          ANOP  ,                                                 00099600
.*-------------------------------------------------------------------   00099700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00099800
                AIF   (K'&ZXETOKEN LE 0).ZG10R  NOT I/O                 00099900
                AIF   ('&XETOKEN'(1,1) NE '(').ZG10R                    00100000
&ZCGPR          SETC  '&XETOKEN'(2,K'&XETOKEN-2)                        00100100
                AIF   ('&ZCGPR'(1,1) NE '0').ZG10P                      00100200
                AIF   (K'&ZCGPR GT 2).ZG10Q                             00100300
                AIF   ('&ZCGPR' EQ '0').ZG10Q                           00100400
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00100500
                AIF   (T'&ZCGPR NE 'N').ZG10Q   INVALID REG NAME        00100600
.ZG10P          ANOP  ,                                                 00100700
                AIF   (T'&ZCGPR NE 'N').ZG10R   NON NUMERIC             00100800
                AIF   ('&ZCGPR' LT '2').ZG10Q                           00100900
                AIF   ('&ZCGPR' LE '12').ZG10R                          00101000
.ZG10Q          ANOP  ,                                                 00101100
&ZMS            SETC  '"ETOKEN='  *KGPRA* MNOTE                         00101200
&ZMS            SETC  '&ZMS.&ETOKEN"'                                   00101300
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00101400
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00101500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00101600
.ZG10R          ANOP  ,                                                 00101700
.*----------------------------------------------------------------***   00101800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00101900
                AIF   (N'&USERDATA LE 1).ZG13A  CK NUM                  00102000
&ZMS            SETC  '"USERDATA='              *KPOSA* MNOTE           00102100
&ZMS            SETC  '&ZMS.&USERDATA"'                                 00102200
&ZMS            SETC  '&ZMS "USERDATA"'                                 00102300
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00102400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00102500
.ZG13A          ANOP  ,                                                 00102600
.*-------------------------------------------------------------------   00102700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00102800
&ZXUSERDATA     SETC  'INPUT'     SET IN/OUTPUT                         00102900
&XUSERDATA      SETC  '&USERDATA(1)'            SET XVARIABLE           00103000
                AIF   (N'&USERDATA GT 1).ZG13B  MULTI PARMS             00103100
&XUSERDATA      SETC  '&USERDATA'               SET XVARIABLE           00103200
.ZG13B          AIF   (K'&USERDATA(1) GT 0).ZG13C                       00103300
&ZXUSERDATA     SETC  ''          RESET IN/OUTPUT                       00103400
&ZMS            SETC  ' '         *KRQDA*                               00103500
&ZMS            SETC  '&ZMS "USERDATA" KEY AND ITS ARGUMENT'            00103600
                MNOTE 8,' &ZMS ARE REQUIRED.'                           00103700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00103800
.ZG13C          ANOP  ,                                                 00103900
.*-------------------------------------------------------------------   00104000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00104100
                AIF   (K'&ZXUSERDATA LE 0).ZG13R  NOT I/O               00104200
                AIF   ('&XUSERDATA'(1,1) NE '(').ZG13R                  00104300
&ZCGPR          SETC  '&XUSERDATA'(2,K'&XUSERDATA-2)                    00104400
                AIF   ('&ZCGPR'(1,1) NE '0').ZG13P                      00104500
                AIF   (K'&ZCGPR GT 2).ZG13Q                             00104600
                AIF   ('&ZCGPR' EQ '0').ZG13Q                           00104700
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00104800
                AIF   (T'&ZCGPR NE 'N').ZG13Q   INVALID REG NAME        00104900
.ZG13P          ANOP  ,                                                 00105000
                AIF   (T'&ZCGPR NE 'N').ZG13R   NON NUMERIC             00105100
                AIF   ('&ZCGPR' LT '2').ZG13Q                           00105200
                AIF   ('&ZCGPR' LE '12').ZG13R                          00105300
.ZG13Q          ANOP  ,                                                 00105400
&ZMS            SETC  '"USERDATA='              *KGPRA* MNOTE           00105500
&ZMS            SETC  '&ZMS.&USERDATA"'                                 00105600
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00105700
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00105800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00105900
.ZG13R          ANOP  ,                                                 00106000
.*----------------------------------------------------------------***   00106100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00106200
                AIF   (N'&APPLENV LE 1).ZG16A   CK NUM                  00106300
&ZMS            SETC  '"APPLENV='               *KPOSA* MNOTE           00106400
&ZMS            SETC  '&ZMS.&APPLENV"'                                  00106500
&ZMS            SETC  '&ZMS "APPLENV"'                                  00106600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00106700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00106800
.ZG16A          ANOP  ,                                                 00106900
.*-------------------------------------------------------------------   00107000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00107100
&ZXAPPLENV      SETC  'INPUT'     SET IN/OUTPUT                         00107200
&XAPPLENV       SETC  '&APPLENV(1)'             SET XVARIABLE           00107300
                AIF   (N'&APPLENV GT 1).ZG16B   MULTI PARMS             00107400
&XAPPLENV       SETC  '&APPLENV'  SET XVARIABLE                         00107500
.ZG16B          AIF   (K'&APPLENV(1) GT 0).ZG16C                        00107600
&ZXAPPLENV      SETC  ''          RESET IN/OUTPUT                       00107700
&ZMS            SETC  ' '         *KRQDA*                               00107800
&ZMS            SETC  '&ZMS "APPLENV" KEY AND ITS ARGUMENT'             00107900
                MNOTE 8,' &ZMS ARE REQUIRED.'                           00108000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00108100
.ZG16C          ANOP  ,                                                 00108200
.*-------------------------------------------------------------------   00108300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00108400
                AIF   (K'&ZXAPPLENV LE 0).ZG16R  NOT I/O                00108500
                AIF   ('&XAPPLENV'(1,1) NE '(').ZG16R                   00108600
&ZCGPR          SETC  '&XAPPLENV'(2,K'&XAPPLENV-2)                      00108700
                AIF   ('&ZCGPR'(1,1) NE '0').ZG16P                      00108800
                AIF   (K'&ZCGPR GT 2).ZG16Q                             00108900
                AIF   ('&ZCGPR' EQ '0').ZG16Q                           00109000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00109100
                AIF   (T'&ZCGPR NE 'N').ZG16Q   INVALID REG NAME        00109200
.ZG16P          ANOP  ,                                                 00109300
                AIF   (T'&ZCGPR NE 'N').ZG16R   NON NUMERIC             00109400
                AIF   ('&ZCGPR' LT '2').ZG16Q                           00109500
                AIF   ('&ZCGPR' LE '12').ZG16R                          00109600
.ZG16Q          ANOP  ,                                                 00109700
&ZMS            SETC  '"APPLENV='               *KGPRA* MNOTE           00109800
&ZMS            SETC  '&ZMS.&APPLENV"'                                  00109900
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00110000
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00110100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00110200
.ZG16R          ANOP  ,                                                 00110300
.*------------------------------------------------------------------    00110400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00110500
&XSECUSER       SETC  ''          INITIALIZE XVARIABLE                  00110600
.*-------------------------------------------------------------------   00110700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00110800
.ZG20           ANOP  ,                                                 00110900
                AIF   (K'&SECUSER(1) LE 0).ZG20A                        00111000
&ZTLC           SETC 'NO'                                               00111100
                AIF   ('&SECUSER(1)' NE '&ZTLC').ZG21                   00111200
&XSECUSER       SETC  'NO'        SET KEYWORD                           00111300
                AIF   (N'&SECUSER LE 1).ZG20A   CK NUM                  00111400
&ZMS            SETC  '"SECUSER='               *KPOSA* MNOTE           00111500
&ZMS            SETC  '&ZMS.&SECUSER"'                                  00111600
&ZMS            SETC  '&ZMS "SECUSER"'                                  00111700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00111800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00111900
.ZG20A          ANOP  ,                                                 00112000
.*------------------------------------------------------------------    00112100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00112200
&ZCVAL          SETC ''           CLEAR ERROR KEY ACCUMULATOR           00112300
.ZG20A0         AIF   (K'&USERID LE 0).ZG20A1   OK                      00112400
&ZCVAL          SETC '&ZCVAL USERID'            INCORRECT KEY USED      00112500
.ZG20A1         AIF   (K'&ZCVAL LE 0).ZG20A2    OK                      00112600
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00112700
&ZMS            SETC  '"SECUSER'  *KMEIA* MNOTE                         00112800
&ZMS            SETC  '&ZMS.=&SECUSER"'                                 00112900
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00113000
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00113100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00113200
.ZG20A2         ANOP  ,                                                 00113300
.*-------------------------------------------------------------------   00113400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00113500
.ZG21           ANOP  ,                                                 00113600
&ZTLC           SETC 'YES'                                              00113700
                AIF   ('&SECUSER(1)' NE '&ZTLC').ZG25                   00113800
&XSECUSER       SETC  'YES'       SET KEYWORD                           00113900
                AIF   (N'&SECUSER LE 1).ZG21A   CK NUM                  00114000
&ZMS            SETC  '"SECUSER='               *KPOSA* MNOTE           00114100
&ZMS            SETC  '&ZMS.&SECUSER"'                                  00114200
&ZMS            SETC  '&ZMS "SECUSER"'                                  00114300
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00114400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00114500
.ZG21A          ANOP  ,                                                 00114600
.*----------------------------------------------------------------***   00114700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00114800
                AIF   (N'&USERID LE 1).ZG23A    CK NUM                  00114900
&ZMS            SETC  '"USERID='  *KPOSA* MNOTE                         00115000
&ZMS            SETC  '&ZMS.&USERID"'                                   00115100
&ZMS            SETC  '&ZMS "USERID"'                                   00115200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00115300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00115400
.ZG23A          ANOP  ,                                                 00115500
.*-------------------------------------------------------------------   00115600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00115700
&ZXUSERID       SETC  'INPUT'     SET IN/OUTPUT                         00115800
&XUSERID        SETC  '&USERID(1)'              SET XVARIABLE           00115900
                AIF   (N'&USERID GT 1).ZG23B    MULTI PARMS             00116000
&XUSERID        SETC  '&USERID'   SET XVARIABLE                         00116100
.ZG23B          AIF   (K'&USERID(1) GT 0).ZG23C                         00116200
&ZXUSERID       SETC  ''          RESET IN/OUTPUT                       00116300
&ZMS            SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*                00116400
&ZMS            SETC  '&ZMS , "USERID" KEY AND ITS ARGUMENT'            00116500
                MNOTE 8,' &ZMS ARE REQUIRED.'                           00116600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00116700
.ZG23C          ANOP  ,                                                 00116800
.*-------------------------------------------------------------------   00116900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00117000
                AIF   (K'&ZXUSERID LE 0).ZG23R  NOT I/O                 00117100
                AIF   ('&XUSERID'(1,1) NE '(').ZG23R                    00117200
&ZCGPR          SETC  '&XUSERID'(2,K'&XUSERID-2)                        00117300
                AIF   ('&ZCGPR'(1,1) NE '0').ZG23P                      00117400
                AIF   (K'&ZCGPR GT 2).ZG23Q                             00117500
                AIF   ('&ZCGPR' EQ '0').ZG23Q                           00117600
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00117700
                AIF   (T'&ZCGPR NE 'N').ZG23Q   INVALID REG NAME        00117800
.ZG23P          ANOP  ,                                                 00117900
                AIF   (T'&ZCGPR NE 'N').ZG23R   NON NUMERIC             00118000
                AIF   ('&ZCGPR' LT '2').ZG23Q                           00118100
                AIF   ('&ZCGPR' LE '12').ZG23R                          00118200
.ZG23Q          ANOP  ,                                                 00118300
&ZMS            SETC  '"USERID='  *KGPRA* MNOTE                         00118400
&ZMS            SETC  '&ZMS.&USERID"'                                   00118500
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00118600
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00118700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00118800
.ZG23R          ANOP  ,                                                 00118900
.*------------------------------------------------------------------    00119000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00119100
.ZG25           ANOP  ,                                                 00119200
&ZXSECUSER      SETC  'INPUT'     SET IN/OUTPUT                         00119300
                AIF   (K'&XSECUSER GT 0).ZG25E  VALID ARG               00119400
                AIF   (T'&SECUSER EQ 'O').ZG25D  OMITTED                00119500
&ZASYSLNDX      SETA  0                                                 00119600
.ZG25A          ANOP  ,           POSITIONAL MACRO KEY                  00119700
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00119800
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG25C                  00119900
&ZTLC           SETC 'SECUSER'                                          00120000
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG25A         00120100
.ZG25B          ANOP  ,                                                 00120200
&ZXSECUSER      SETC  ''          RESET IN/OUTPUT                       00120300
&ZMS            SETC  'THE "SECUSER" KEY'       *KOPTA* MNOTE           00120400
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00120500
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00120600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00120700
                AGO   .ZG25E                                            00120800
.ZG25C          ANOP  ,                                                 00120900
&ZXSECUSER      SETC  ''          RESET IN/OUTPUT                       00121000
&ZMS            SETC  '"SECUSER='               *KUKWA* MNOTE           00121100
&ZMS            SETC  '&ZMS.&SECUSER"'                                  00121200
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00121300
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00121400
&ZMS            SETC  '&ZMS "NO"'               VALID KEYWORD           00121500
&ZMS            SETC  '&ZMS OR "YES".'          VALID KEYWORD           00121600
                MNOTE 8,' &ZMS '                                        00121700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00121800
                AGO   .ZG25E                                            00121900
.ZG25D          ANOP  ,                                                 00122000
&XSECUSER       SETC  'NO'        SET DEFAULT KEYWORD                   00122100
.ZG25E          ANOP  ,                                                 00122200
.*----------------------------------------------------------------***   00122300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00122400
                AIF   (N'&RETCODE LE 1).ZG27A   CK NUM                  00122500
&ZMS            SETC  '"RETCODE='               *KPOSA* MNOTE           00122600
&ZMS            SETC  '&ZMS.&RETCODE"'                                  00122700
&ZMS            SETC  '&ZMS "RETCODE"'                                  00122800
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00122900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00123000
.ZG27A          ANOP  ,                                                 00123100
.*-------------------------------------------------------------------   00123200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00123300
                AIF   (K'&RETCODE(1) LE 0).ZG27C  NO PARM               00123400
&ZXRETCODE      SETC  'OUTPUT'    SET OUTPUT                            00123500
&XRETCODE       SETC  '&RETCODE(1)'             SET XVARIABLE           00123600
                AIF   (N'&RETCODE GT 1).ZG27C                           00123700
&XRETCODE       SETC  '&RETCODE'  SET XVARIABLE                         00123800
.ZG27C          ANOP  ,                                                 00123900
.*-------------------------------------------------------------------   00124000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00124100
                AIF   (K'&ZXRETCODE LE 0).ZG27R  NOT I/O                00124200
                AIF   ('&XRETCODE'(1,1) NE '(').ZG27R                   00124300
&ZCGPR          SETC  '&XRETCODE'(2,K'&XRETCODE-2)                      00124400
                AIF   ('&ZCGPR'(1,1) NE '0').ZG27P                      00124500
                AIF   (K'&ZCGPR GT 2).ZG27Q                             00124600
                AIF   ('&ZCGPR' EQ '0').ZG27Q                           00124700
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00124800
                AIF   (T'&ZCGPR NE 'N').ZG27Q   INVALID REG NAME        00124900
.ZG27P          ANOP  ,                                                 00125000
                AIF   (T'&ZCGPR NE 'N').ZG27R   NON NUMERIC             00125100
                AIF   ('&ZCGPR' LT '2').ZG27Q                           00125200
                AIF   ('&ZCGPR' LE '12').ZG27R                          00125300
.ZG27Q          ANOP  ,                                                 00125400
&ZMS            SETC  '"RETCODE='               *KGPRA* MNOTE           00125500
&ZMS            SETC  '&ZMS.&RETCODE"'                                  00125600
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00125700
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00125800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00125900
.ZG27R          ANOP  ,                                                 00126000
.*----------------------------------------------------------------***   00126100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00126200
                AIF   (N'&RSNCODE LE 1).ZG30A   CK NUM                  00126300
&ZMS            SETC  '"RSNCODE='               *KPOSA* MNOTE           00126400
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00126500
&ZMS            SETC  '&ZMS "RSNCODE"'                                  00126600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00126700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00126800
.ZG30A          ANOP  ,                                                 00126900
.*-------------------------------------------------------------------   00127000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00127100
                AIF   (K'&RSNCODE(1) LE 0).ZG30C  NO PARM               00127200
&ZXRSNCODE      SETC  'OUTPUT'    SET OUTPUT                            00127300
&XRSNCODE       SETC  '&RSNCODE(1)'             SET XVARIABLE           00127400
                AIF   (N'&RSNCODE GT 1).ZG30C                           00127500
&XRSNCODE       SETC  '&RSNCODE'  SET XVARIABLE                         00127600
.ZG30C          ANOP  ,                                                 00127700
.*-------------------------------------------------------------------   00127800
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00127900
                AIF   (K'&ZXRSNCODE LE 0).ZG30R  NOT I/O                00128000
                AIF   ('&XRSNCODE'(1,1) NE '(').ZG30R                   00128100
&ZCGPR          SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                      00128200
                AIF   ('&ZCGPR'(1,1) NE '0').ZG30P                      00128300
                AIF   (K'&ZCGPR GT 2).ZG30Q                             00128400
                AIF   ('&ZCGPR' EQ '0').ZG30Q                           00128500
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00128600
                AIF   (T'&ZCGPR NE 'N').ZG30Q   INVALID REG NAME        00128700
.ZG30P          ANOP  ,                                                 00128800
                AIF   (T'&ZCGPR NE 'N').ZG30R   NON NUMERIC             00128900
                AIF   ('&ZCGPR' LT '2').ZG30Q                           00129000
                AIF   ('&ZCGPR' LE '12').ZG30R                          00129100
.ZG30Q          ANOP  ,                                                 00129200
&ZMS            SETC  '"RSNCODE='               *KGPRA* MNOTE           00129300
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00129400
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00129500
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00129600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00129700
.ZG30R          ANOP  ,                                                 00129800
.******************************************************************     00129900
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00130000
.******************************************************************     00130100
                ACTR  10000                                             00130200
.*----------------------------------------------------------------***   00130300
.***AH.P02 EXTRA POSITIONALS                                            00130400
                AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS              00130500
                AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL              00130600
                AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL          00130700
                AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL           00130800
.ZGLISTX1       ANOP  ,                                                 00130900
&ZCVAL          SETC  ''          ERROR FIELD                           00131000
&ZAWRK          SETA  0           POSITIONAL NUMBER                     00131100
.ZGLIST2        ANOP  ,                                                 00131200
&ZAWRK          SETA  &ZAWRK+1    NEXT POSITIONAL                       00131300
                AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE              00131400
&ZCVAL          SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                   00131500
                AGO   .ZGLIST2                                          00131600
.*                                                                      00131700
.ZGLIST3        ANOP  ,                                                 00131800
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)     STRIP COMMA             00131900
&ZMS            SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE          00132000
&ZMS            SETC  '&ZMS "&ZCVAL"'                                   00132100
&ZMS            SETC  '&ZMS CANNOT BE USED.'                            00132200
&ZMS            SETC  '&ZMS NO POSITIONAL ARGUMENTS'                    00132300
                MNOTE 8,' &ZMS ARE ALLOWED.'                            00132400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00132500
.ZGLISTX        ANOP  ,                                                 00132600
&ZASYSLNDX      SETA  0                                                 00132700
.*-------------------------------------------------------------------   00132800
.***AG.MF04 MF=(SLE)                                                    00132900
.ZGMFX          ANOP  ,           END OF FULL SYNTAX CHECK              00133000
.*******************************************************************    00133100
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00133200
.*******************************************************************    00133300
                AIF   (&ZMACRET NE 0).ZLX2      ERROR DETECTED          00133400
.*******************************************************************    00133500
.***AE.01  START OF IWMQCXIT MACRO CODE                                 00133600
.*******************************************************************    00133700
                LCLC  &M0M0001                 NAME                     00133800
&M0M0001        SETC  '&XLABEL'                SET NAME                 00133900
                AIF   (K'&XLABEL NE 0).XLAB2                            00134000
&M0M0001        SETC  'M00M&SYSNDX'            DEFAULT NAME             00134100
.*                                                                      00134200
.XLAB2          ANOP  ,                                                 00134300
&M0M0001 DS    0H                             IWMQCXIT-0                00134400
.*******************************************************************    00134500
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00134600
.*******************************************************************    00134700
              PUSH  PRINT                                               00134800
                AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON        00134900
                PRINT OFF         ++ PR01                               00135000
                AGO   .ZPRNTXX                                          00135100
.ZPRINTX        PRINT ON                                                00135200
.ZPRNTXX        ANOP  ,                                                 00135300
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00135400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00135500
.********************************************************************   00135600
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00135700
.********************************************************************   00135800
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00135900
                      LCLA  &ZOPN1         INVOCATION INDEX             00136000
                      LCLC  &ZOPL(4095)    LABEL                        00136100
                      LCLC  &ZOPO(4095)    OPERATION                    00136200
                      LCLC  &ZOPV(4095)    VALUE                        00136300
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00136400
.*                                                                      00136500
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00136600
.******************************************************************     00136700
.***AL.L10 IWMQCXIT FMT=LIST MF=S|L PARAMETERS                          00136800
.******************************************************************     00136900
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00137000
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00137100
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00137200
&XMFATTR              SETC  '0D'                                        00137300
.*                                                                      00137400
&ZOPN                 SETA  &ZOPN+1                                     00137500
&ZOPL(&ZOPN)          SETC  ' '                                         00137600
&ZOPO(&ZOPN)          SETC  'B'                                         00137700
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00137800
&ZOPD(&ZOPN)          SETC  '++ IWMQCXIT ARG PARMS'                     00137900
.*                                                                      00138000
&ZOPN                 SETA  &ZOPN+1                                     00138100
&ZOPL(&ZOPN)          SETC  ' '                                         00138200
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00138300
&ZOPV(&ZOPN)          SETC  '1'                                         00138400
&ZOPD(&ZOPN)          SETC  ' '                                         00138500
.*                                                                      00138600
.ZLMFSL2              ANOP  ,                                           00138700
.*-------------------------------------------------------------------   00138800
.***AM.L01  IWMQCXIT FMT=LIST PARAMETERS                                00138900
&ZOPN                 SETA &ZOPN+1                                      00139000
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00139100
&ZOPO(&ZOPN)          SETC 'DS'                                         00139200
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00139300
&ZOPD(&ZOPN)          SETC '++ IWMQCXIT PARM LIST'                      00139400
.*-------------------------------------------------------------------   00139500
.***AM.L02 XVERSION XL1                                                 00139600
&ZOPN                 SETA &ZOPN+1                                      00139700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00139800
&ZOPO(&ZOPN)          SETC 'DS'                                         00139900
&ZOPV(&ZOPN)          SETC 'XL1'                                        00140000
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00140100
.*-------------------------------------------------------------------   00140200
.***AM.L09  XRSV0001 CL1                                                00140300
&ZOPN                 SETA &ZOPN+1                                      00140400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00140500
&ZOPO(&ZOPN)          SETC 'DS'                                         00140600
&ZOPV(&ZOPN)          SETC 'CL1'                                        00140700
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0001'                      00140800
.*-------------------------------------------------------------------   00140900
.***AM.L09  XPLISTLEN XL2                                               00141000
&ZOPN                 SETA &ZOPN+1                                      00141100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00141200
&ZOPO(&ZOPN)          SETC 'DS'                                         00141300
&ZOPV(&ZOPN)          SETC 'XL2'                                        00141400
&ZOPD(&ZOPN)          SETC '++ INPUT  XPLISTLEN'                        00141500
.*-------------------------------------------------------------------   00141600
.***AM.L03 XACTION BL.8                                                 00141700
&ZOPN                 SETA &ZOPN+1                                      00141800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XACTION'                          00141900
&ZOPO(&ZOPN)          SETC 'DS'                                         00142000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00142100
&ZOPD(&ZOPN)          SETC '++ INPUT'                                   00142200
.*                                                                      00142300
&ZOPN                 SETA  &ZOPN+1                                     00142400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XACTION_QDEL'                    00142500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00142600
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00142700
&ZOPD(&ZOPN)          SETC  '++ XACTION.'                               00142800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).QDEL'                         00142900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00143000
.*-------------------------------------------------------------------   00143100
.***AM.L09  XRSV0005 CL2                                                00143200
&ZOPN                 SETA &ZOPN+1                                      00143300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0005'                         00143400
&ZOPO(&ZOPN)          SETC 'DS'                                         00143500
&ZOPV(&ZOPN)          SETC 'CL2'                                        00143600
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0005'                      00143700
.*-------------------------------------------------------------------   00143800
.***AM.L03 XSECUSER_OPTIONS BL.8                                        00143900
&ZOPN                 SETA &ZOPN+1                                      00144000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSECUSER_OPTIONS'                 00144100
&ZOPO(&ZOPN)          SETC 'DS'                                         00144200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00144300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00144400
.*                                                                      00144500
&ZOPN                 SETA  &ZOPN+1                                     00144600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSECUSER_YES'                    00144700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00144800
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00144900
&ZOPD(&ZOPN)          SETC  '++ XSECUSER.'                              00145000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00145100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00145200
.*-------------------------------------------------------------------   00145300
.***AM.L09  XETOKEN CL8                                                 00145400
&ZOPN                 SETA &ZOPN+1                                      00145500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XETOKEN'                          00145600
&ZOPO(&ZOPN)          SETC 'DS'                                         00145700
&ZOPV(&ZOPN)          SETC 'CL8'                                        00145800
&ZOPD(&ZOPN)          SETC '++ &ZXETOKEN  XETOKEN'                      00145900
.*-------------------------------------------------------------------   00146000
.***AM.L09  XUSERDATA CL16                                              00146100
&ZOPN                 SETA &ZOPN+1                                      00146200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUSERDATA'                        00146300
&ZOPO(&ZOPN)          SETC 'DS'                                         00146400
&ZOPV(&ZOPN)          SETC 'CL16'                                       00146500
&ZOPD(&ZOPN)          SETC '++ &ZXUSERDATA  XUSERDATA'                  00146600
.*-------------------------------------------------------------------   00146700
.***AM.L09  XRSV0020 CL4                                                00146800
&ZOPN                 SETA &ZOPN+1                                      00146900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0020'                         00147000
&ZOPO(&ZOPN)          SETC 'DS'                                         00147100
&ZOPV(&ZOPN)          SETC 'CL4'                                        00147200
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0020'                      00147300
.*-------------------------------------------------------------------   00147400
.***AM.L09 ADDR XAPPLENV A                                              00147500
&ZOPN                 SETA &ZOPN+1                                      00147600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XAPPLENV_ADDR'                    00147700
&ZOPO(&ZOPN)          SETC 'DS'                                         00147800
&ZOPV(&ZOPN)          SETC 'A'                                          00147900
&ZOPD(&ZOPN)          SETC '++ &ZXAPPLENV ADDR XAPPLENV'                00148000
.*-------------------------------------------------------------------   00148100
.***AM.L09  XUSERID CL8                                                 00148200
&ZOPN                 SETA &ZOPN+1                                      00148300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUSERID'                          00148400
&ZOPO(&ZOPN)          SETC 'DS'                                         00148500
&ZOPV(&ZOPN)          SETC 'CL8'                                        00148600
&ZOPD(&ZOPN)          SETC '++ &ZXUSERID  XUSERID'                      00148700
.*-------------------------------------------------------------------   00148800
.***AM.L09  XRSV0030 CL8                                                00148900
&ZOPN                 SETA &ZOPN+1                                      00149000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0030'                         00149100
&ZOPO(&ZOPN)          SETC 'DS'                                         00149200
&ZOPV(&ZOPN)          SETC 'CL8'                                        00149300
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0030'                      00149400
.*-------------------------------------------------------------------   00149500
.***AM.L10 END OF IWMQCXIT LIST PARAMETERS                              00149600
&ZOPN                 SETA &ZOPN+1                                      00149700
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00149800
&ZOPO(&ZOPN)          SETC 'EQU'                                        00149900
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00150000
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00150100
.*                                                                      00150200
&ZOPN                 SETA &ZOPN+1                                      00150300
&ZOPL(&ZOPN)          SETC ' '                                          00150400
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00150500
&ZOPV(&ZOPN)          SETC '1'                                          00150600
&ZOPD(&ZOPN)          SETC ' '                                          00150700
.*-------------------------------------------------------------------   00150800
.***AL.L12 IWMQCXIT FMT=LIST MF=S|L PARAMETERS                          00150900
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00151000
.*                                                                      00151100
&ZOPN                 SETA  &ZOPN+1                                     00151200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00151300
&ZOPO(&ZOPN)          SETC  'DC'                                        00151400
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00151500
&ZOPD(&ZOPN)          SETC  '++ IWMQCXIT ARG PARMS'                     00151600
.*                                                                      00151700
.ZLMFSLX              ANOP  ,                                           00151800
.*-------------------------------------------------------------------   00151900
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00152000
&ZPLLEN               SETA 56                                           00152100
.*                                                                      00152200
.******************************************************************     00152300
.***AI.L01 IWMQCXIT FMT=LIST FILL IN PARAMETER AREA                     00152400
.******************************************************************     00152500
                      ACTR  10000                                       00152600
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00152700
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00152800
&ZCVAL                SETC  'LAE'          XAX MODE                     00152900
.ZIMFXA               ANOP ,                                            00153000
.*                                                                      00153100
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00153200
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00153300
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00153400
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00153500
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00153600
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00153700
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00153800
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00153900
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00154000
&ZOPN                 SETA  &ZOPN+1                                     00154100
&ZOPL(&ZOPN)          SETC  ' '                                         00154200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00154300
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00154400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00154500
                      AGO   .ZIMFNX                                     00154600
.*                                                                      00154700
.ZIMFN2               ANOP ,                                            00154800
&ZOPN                 SETA  &ZOPN+1                                     00154900
&ZOPL(&ZOPN)          SETC  ' '                                         00155000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00155100
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00155200
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00155300
.ZIMFNX               ANOP ,                                            00155400
.********************************************************************   00155500
.***AI.L02 IWMQCXIT FMT=LIST INITIALIZE PARAMETER AREA                  00155600
.********************************************************************   00155700
.***AI.L03 MF=(SLE)                                                     00155800
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00155900
.*                                                                      00156000
&ZOPN                 SETA  &ZOPN+1                                     00156100
&ZOPL(&ZOPN)          SETC  ' '                                         00156200
&ZOPO(&ZOPN)          SETC  'XC'                                        00156300
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00156400
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00156500
.ZIMFLX               ANOP  ,                                           00156600
.*-------------------------------------------------------------------   00156700
.***AI.L04 XPLISTLEN XL2                                                00156800
&ZOPN                 SETA  &ZOPN+1                                     00156900
&ZOPL(&ZOPN)          SETC  ' '                                         00157000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00157100
&ZOPV(&ZOPN)          SETC  '2(2,1),=AL2(&ZPLLEN)'                      00157200
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00157300
.*-------------------------------------------------------------------   00157400
.***AI.L05 XACTION BL1                                                  00157500
&ZW                   SETC  ''                                          00157600
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00157700
.*-------------------------------------------------------------------   00157800
.***AI.L08 XACTION "QDEL"                                               00157900
.***      BL1'1XXXXXXX'                                                 00158000
         AIF   ('&XACTION' NE 'QDEL').ZI5A                              00158100
&ZW                   SETC  '&ZW.10000000'                              00158200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00158300
                      AGO   .ZI5C                                       00158400
.*                                                                      00158500
.ZI5A                 ANOP  ,                                           00158600
&ZW                   SETC  '&ZW.00000000'                              00158700
.ZI5C                 ANOP  ,                                           00158800
.*-------------------------------------------------------------------   00158900
.***AI.L11 XACTION BL1                                                  00159000
                      AIF   ('&ZCLNG' NE 'YES').ZI5E  ALL ZERO BITS     00159100
&ZOPN                 SETA  &ZOPN+1                                     00159200
&ZOPL(&ZOPN)          SETC  ' '                                         00159300
&ZOPO(&ZOPN)          SETC  'OI'                                        00159400
&ZOPV(&ZOPN)          SETC  '4(1),B''&ZW'''                             00159500
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00159600
.ZI5E                 ANOP  ,                                           00159700
.*-------------------------------------------------------------------   00159800
.***AI.L05 XSECUSER_OPTIONS BL1                                         00159900
&ZW                   SETC  ''                                          00160000
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00160100
.*-------------------------------------------------------------------   00160200
.***AI.L08 XSECUSER_OPTIONS "YES"                                       00160300
.***      BL1'1XXXXXXX'                                                 00160400
         AIF   ('&XSECUSER' NE 'YES').ZI8A                              00160500
&ZW                   SETC  '&ZW.10000000'                              00160600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00160700
                      AGO   .ZI8C                                       00160800
.*                                                                      00160900
.ZI8A                 ANOP  ,                                           00161000
&ZW                   SETC  '&ZW.00000000'                              00161100
.ZI8C                 ANOP  ,                                           00161200
.*-------------------------------------------------------------------   00161300
.***AI.L11 XSECUSER_OPTIONS BL1                                         00161400
                      AIF   ('&ZCLNG' NE 'YES').ZI8E  ALL ZERO BITS     00161500
&ZOPN                 SETA  &ZOPN+1                                     00161600
&ZOPL(&ZOPN)          SETC  ' '                                         00161700
&ZOPO(&ZOPN)          SETC  'OI'                                        00161800
&ZOPV(&ZOPN)          SETC  '7(1),B''&ZW'''                             00161900
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00162000
.ZI8E                 ANOP  ,                                           00162100
.*-------------------------------------------------------------------   00162200
.***AI.L25  XETOKEN CL8                                                 00162300
                      AIF   ('&ZXETOKEN' EQ '').ZI9E                    00162400
                      AIF   ('&ZXETOKEN' EQ 'OUTPUT').ZI9E              00162500
&ZCGPR                SETC  '&XETOKEN'                                  00162600
.*                                                                      00162700
                      AIF   ('&XETOKEN'(1,1) NE '(').ZI9B               00162800
&ZCGPR   SETC  '0('.'&XETOKEN'(2,K'&XETOKEN-2).')'                      00162900
.ZI9B                 ANOP  ,                                           00163000
.*                                                                      00163100
&ZOPN                 SETA  &ZOPN+1                                     00163200
&ZOPL(&ZOPN)          SETC  ' '                                         00163300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00163400
&ZOPV(&ZOPN)          SETC  '8(8,1),&ZCGPR'                             00163500
&ZOPD(&ZOPN)          SETC  '++ &ZXETOKEN XETOKEN'                      00163600
.*                                                                      00163700
.ZI9E                 ANOP  ,                                           00163800
.*-------------------------------------------------------------------   00163900
.***AI.L25  XUSERDATA CL16                                              00164000
                      AIF   ('&ZXUSERDATA' EQ '').ZI10E                 00164100
                      AIF   ('&ZXUSERDATA' EQ 'OUTPUT').ZI10E           00164200
&ZCGPR                SETC  '&XUSERDATA'                                00164300
.*                                                                      00164400
                      AIF   ('&XUSERDATA'(1,1) NE '(').ZI10B            00164500
&ZCGPR   SETC  '0('.'&XUSERDATA'(2,K'&XUSERDATA-2).')'                  00164600
.ZI10B                ANOP  ,                                           00164700
.*                                                                      00164800
&ZOPN                 SETA  &ZOPN+1                                     00164900
&ZOPL(&ZOPN)          SETC  ' '                                         00165000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00165100
&ZOPV(&ZOPN)          SETC  '16(16,1),&ZCGPR'                           00165200
&ZOPD(&ZOPN)          SETC  '++ &ZXUSERDATA XUSERDATA'                  00165300
.*                                                                      00165400
.ZI10E                ANOP  ,                                           00165500
.*-------------------------------------------------------------------   00165600
.***AI.L19 ADDR XAPPLENV A                                              00165700
                      AIF   ('&ZXAPPLENV' EQ '').ZI12H                  00165800
&ZCLNG                SETC  '&XAPPLENV'                                 00165900
&ZCGPR                SETC  '14'                                        00166000
         AIF   ('&XAPPLENV'(1,1) EQ '(').ZI12F  IN GPR                  00166100
.*                                                                      00166200
&ZOPN                 SETA  &ZOPN+1                                     00166300
&ZOPL(&ZOPN)          SETC  ' '                                         00166400
&ZOPO(&ZOPN)          SETC  'LA'                                        00166500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00166600
&ZOPD(&ZOPN)          SETC  '++ &ZXAPPLENV XAPPLENV'                    00166700
.*                                                                      00166800
                      AGO   .ZI12G                                      00166900
.*                                                                      00167000
.ZI12F                ANOP  ,                                           00167100
&ZCGPR   SETC  '&XAPPLENV'(2,K'&XAPPLENV-2)                             00167200
.*                                                                      00167300
.ZI12G                ANOP  ,                                           00167400
.*                                                                      00167500
&ZOPN                 SETA  &ZOPN+1                                     00167600
&ZOPL(&ZOPN)          SETC  ' '                                         00167700
&ZOPO(&ZOPN)          SETC  'ST'                                        00167800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,36(,1)'                             00167900
&ZOPD(&ZOPN)          SETC  '++ &ZXAPPLENV XAPPLENV'                    00168000
.*                                                                      00168100
.ZI12H                ANOP  ,                                           00168200
.*-------------------------------------------------------------------   00168300
.***AI.L25  XUSERID CL8                                                 00168400
                      AIF   ('&ZXUSERID' EQ '').ZI13E                   00168500
                      AIF   ('&ZXUSERID' EQ 'OUTPUT').ZI13E             00168600
&ZCGPR                SETC  '&XUSERID'                                  00168700
.*                                                                      00168800
                      AIF   ('&XUSERID'(1,1) NE '(').ZI13B              00168900
&ZCGPR   SETC  '0('.'&XUSERID'(2,K'&XUSERID-2).')'                      00169000
.ZI13B                ANOP  ,                                           00169100
.*                                                                      00169200
&ZOPN                 SETA  &ZOPN+1                                     00169300
&ZOPL(&ZOPN)          SETC  ' '                                         00169400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00169500
&ZOPV(&ZOPN)          SETC  '40(8,1),&ZCGPR'                            00169600
&ZOPD(&ZOPN)          SETC  '++ &ZXUSERID XUSERID'                      00169700
.*                                                                      00169800
.ZI13E                ANOP  ,                                           00169900
.*-------------------------------------------------------------------   00170000
&ZOPN1                SETA &ZOPN                                        00170100
.*******************************************************************    00170200
.***  PROCESS IWMQCXIT OUTPUT PARAMETERS                                00170300
.*******************************************************************    00170400
                      ACTR  10000                                       00170500
.*******************************************************************    00170600
.***AO.X02  RETURN CODE PROCESSING                                      00170700
.*******************************************************************    00170800
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00170900
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00171000
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00171100
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00171200
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00171300
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00171400
&ZOPN                 SETA  &ZOPN+1                                     00171500
&ZOPL(&ZOPN)          SETC  ' '                                         00171600
&ZOPO(&ZOPN)          SETC  'ST'                                        00171700
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00171800
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00171900
                      AGO   .ZMRETX                                     00172000
.*                                                                      00172100
.ZMRET2               ANOP  ,                                           00172200
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00172300
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00172400
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00172500
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00172600
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00172700
&ZOPN                 SETA  &ZOPN+1                                     00172800
&ZOPL(&ZOPN)          SETC  ' '                                         00172900
&ZOPO(&ZOPN)          SETC  'LR'                                        00173000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00173100
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00173200
.ZMRETX               ANOP  ,                                           00173300
.*******************************************************************    00173400
.***AO.X03  REASON CODE PROCESSING                                      00173500
.*******************************************************************    00173600
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00173700
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00173800
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00173900
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00174000
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00174100
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00174200
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00174300
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00174400
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00174500
&ZOPN                 SETA  &ZOPN+1                                     00174600
&ZOPL(&ZOPN)          SETC  ' '                                         00174700
&ZOPO(&ZOPN)          SETC  'ST'                                        00174800
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00174900
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00175000
                      AGO   .ZMRSNX                                     00175100
.*                                                                      00175200
.ZMRSN2               ANOP  ,                                           00175300
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00175400
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00175500
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00175600
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00175700
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00175800
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00175900
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00176000
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00176100
&ZOPN                 SETA  &ZOPN+1                                     00176200
&ZOPL(&ZOPN)          SETC  ' '                                         00176300
&ZOPO(&ZOPN)          SETC  'LR'                                        00176400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00176500
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00176600
.ZMRSNX               ANOP  ,                                           00176700
.*******************************************************************    00176800
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00176900
.*******************************************************************    00177000
.ZMFLX                ANOP  ,              MF=L PROCESSING              00177100
.*******************************************************************    00177200
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00177300
.*******************************************************************    00177400
                      ACTR  10000                                       00177500
.*                                                                      00177600
                      LCLA  &ZLC           COLUMN POSITION              00177700
                      LCLA  &ZOPX          LIST TABLE INDEX             00177800
                      LCLC  &ZLL           LABEL                        00177900
                      LCLC  &ZLOP          OPERATION                    00178000
                      LCLC  &ZLV           VALUE                        00178100
                      LCLC  &ZLD           DESCRIPTION                  00178200
.*                                                                      00178300
&ZOPX                 SETA  1                                           00178400
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00178500
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00178600
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00178700
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00178800
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00178900
                      AIF   (K'&ZLD LE 0).ZL5                           00179000
&ZLC                  SETA  35             COMMENT COLUMN               00179100
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00179200
&ZLC                  SETA  33             COMMMENT COLUMN              00179300
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00179400
&ZLV                  SETC  '&ZLV'.' '                                  00179500
                      AGO   .ZL3                                        00179600
.*                                                                      00179700
.ZL4                  ANOP  ,                                           00179800
&ZLV                  SETC  '&ZLV'.' '                                  00179900
.ZL5                  ANOP  ,                                           00180000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00180100
.*                                                                      00180200
&ZLL     &ZLOP &ZLV                                                     00180300
.*                                                                      00180400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00180500
                      AGO   .ZL2           CONTINUE LOOPING             00180600
.*                                                                      00180700
.ZLX                  ANOP  ,                                           00180800
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00180900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00181000
         LCLC  &T1                                                      00181100
         AIF   ('&XACTION' EQ 'NULL').FINIS                             00181200
.*                                                                      00181300
&T1      SETC  '&XQMGR_EXIT@'                                           00181400
         AIF   ('&XQMGR_EXIT@'(1,1) NE '(').EXITRS                      00181500
&T1      SETC  '&XQMGR_EXIT@'(2,K'&XQMGR_EXIT@-2)                       00181600
&T1      SETC  '0(&T1.)'                                                00181700
.EXITRS    ANOP                                                         00181800
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00181900
.*                                                                      00182000
         L     15,&T1                  FETCH CONNECT EXIT @             00182100
         BALR  14,15                                                    00182200
.*                                                                      00182300
.FINIS   ANOP                                                           00182400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00182500
.ZLINKX               ANOP  ,                                           00182600
.*******************************************************************    00182700
.***AP.X01  FORMAT GENERATED CODE                                       00182800
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00182900
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00183000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00183100
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00183200
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00183300
                      AIF   (K'&ZLD LE 0).ZL51                          00183400
&ZLC                  SETA  35             COMMENT COLUMN               00183500
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00183600
&ZLC                  SETA  33             COMMENT COLUMN               00183700
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00183800
&ZLV                  SETC  '&ZLV'.' '                                  00183900
                      AGO   .ZL31                                       00184000
.*                                                                      00184100
.ZL41                 ANOP  ,                                           00184200
&ZLV                  SETC  '&ZLV'.' '                                  00184300
.ZL51                 ANOP  ,                                           00184400
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00184500
.*                                                                      00184600
&ZLL     &ZLOP &ZLV                                                     00184700
.*                                                                      00184800
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00184900
                      AGO   .ZL21          CONTINUE LOOPING             00185000
.*                                                                      00185100
.ZLX1                 ANOP  ,                                           00185200
.*******************************************************************    00185300
.***AP.X02  END OF IWMQCXIT MACRO                                       00185400
&ZIWMQCXIT            SETC  'YES'          SET IWMQCXIT USED            00185500
         POP   PRINT                                                    00185600
*                                            IWMQCXIT-0                 00185700
         SPACE 1                                                        00185800
.ZLX2                 ANOP  ,                                           00185900
         MEND                                                           00186000
**********************************************************************/ 00186100
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00186200
*%IWMQCXIT: MACRO KEYS(QMGR_EXIT@,ACTION,ETOKEN,USERDATA,APPLENV,       00186300
*                 SECUSER,USERID,RETCODE,RSNCODE,PLISTVER,MF);          00186400
*  ANS('?'||MACLABEL||' '||'IWMQCXIP '||MACLIST||                       00186500
*         ' '||MACKEYS||';') COL(MACLMAR);                              00186600
*%END IWMQCXIT;                                                         00186700
