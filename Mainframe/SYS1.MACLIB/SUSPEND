*%SUSPEND: MACRO                                                        00021900
*             KEYS(RB,                                                  00043800
*             SPTOKEN,                                                  00065700
*             EXIT,                                                     00087600
*             RSCODE,                                                   00109500
*             EXITPARM,                                                 00120400
*             MF,                                                       00131400
*             REGS,                                                     00142300
*             RELATED) ;                                                00153300
*/**** START OF SPECIFICATIONS ***************************************  00175200
*                                                                       00197100
*01* MACRO NAME:  SUSPEND                                               00219000
*                                                                       00240900
*01* DESCRIPTIVE NAME:  SUSPEND EXECUTION OF A WORK UNIT                00262800
*                                                                       00284700
*01* COPYRIGHT =                                                        00310200
*      5645-001                                                         00335700
*      THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      00361200
*      (C)COPYRIGHT IBM CORP 1990, 1997                                 00386700
*      LICENSED MATERIALS - PROPERTY OF IBM                             00412200
*                                                                       00438000
*01* STATUS: JBB6604                                                    00459900
*                                                                       00481800
*01* MACRO NAME:  SUSPEND                                               00503700
*                                                                       00525600
*01* FUNCTION:                                                          00547500
*                                                                       00569400
*     PROVIDE THE INTERFACE TO SERVICE ROUTINES TO PLACE A UNIT         00591300
*     OF WORK IN A SUSPENDED STATE UNTIL AN EXPECTED EVENT OCCURS.      00613200
*                                                                       00617500
*01* EXTERNAL CLASSIFICATION:  GUPI                                     00621800
*                                                                       00626100
*01* END OF EXTERNAL CLASSIFICATION:                                    00630400
*                                                                       00635100
*01* OPERATION:                                                         00657000
*                                                                       00678900
*     THE SUSPEND MACRO PARSES THE KEYWORDS SUPPLIED.  IN THE           00700800
*     EVENT OF AN ERROR, SYNTAX CHECKING WILL ATTEMPT TO CONTINUE       00722700
*     FOR THE REMAINDER OF THE INPUT.  NO DATA WILL BE GENERATED.       00744600
*                                                                       00766500
*     IF NO ERRORS ARE FOUND, DATA IS GENERATED DEPENDING UPON THE      00788400
*     MF FORM SPECIFIED.                                                00810300
*                                                                       00832200
*     IF THE LIST OPTION WAS REQUESTED,  SUSPEND RESERVES THE           00854100
*     STORAGE FOR THE PARAMETER LIST USED BY IEAVSRBS, THE              00876000
*     SRB SUSPEND WITH TOKEN SERVICE ROUTINE.                           00897900
*                                                                       00919800
*     IF THE EXECUTE FORM WAS REQUESTED FOR THE SPTOKEN OPTION,         00941700
*     A PREVIOUSLY GENERATED PARAMETER LIST IS FILLED IN WITH           00963600
*     THE PROPER KEYWORD VALUES.                                        00985500
*                                                                       01007400
*     IF THE SPTOKEN OPTION IS SPECIFIED WITHOUT THE MF KEYWORD,        01029300
*     THE STANDARD FORM IS ASSUMED.  SUSPEND GENERATES AND FILLS        01051200
*     IN THE PARAMETER LIST WITH THE PROPER KEYWORD VALUES.             01073100
*                                                                       01095000
*     REGISTER USAGE:                                                   01116900
*                                                                       01138800
*      AR/GPRs 0, 1, 11-15 ARE NOT PRESERVED.  AR/GPRs 2-10 ARE         01160700
*      UNCHANGED.                                                       01182600
*                                                                       01204500
*                                                                       01226400
*01* SYNTAX:                                                            01248300
*                                                                       01270200
*       SUSPEND     RB=PREVIOUS|CURRENT                                 01292100
*                                                                       01314000
*                       <,RELATED=ANY-COMMENT>                          01335900
*                                                                       01357800
*       WHERE:                                                          01379700
*                                                                       01401600
*                                                                       01423500
*        RB=PREVIOUS|CURRENT                                            01445400
*          IS A KEYWORD THAT SPECIFIES WHICH RB ON THE TCB TO SUSPEND.  01467300
*                                                                       01489200
*          THIS OPTION IS MUTUALLY EXCLUSIVE WITH THE SPTOKEN OPTION.   01511100
*                                                                       01533000
*                                                                       01554900
*          PREVIOUS   THE RB TO BE SUSPENDED IS THE CALLER'S RB.        01576800
*                                                                       01598700
*          CURRENT    THE RB TO BE SUSPENDED IS THE FIRST RB ON THE     01620600
*                     TCB CHAIN.                                        01642500
*                                                                       01664400
*                                                                       01686300
*                                                                       01708200
*       SUSPEND     SPTOKEN=RX-ADDRESS                                  01730100
*                                                                       01752000
*                   ,EXIT=RX-ADDRESS|(2)-(12)                           01773900
*                       <,RSCODE=RX-ADDRESS>                            01795800
*                                                                       01817700
*                       <,EXITPARM=A-TYPE ADDRESS>                      01825000
*                                                                       01832300
*                       <,MF=(E,RX-ADDRESS)|(E,(1)-(12))>               01839600
*                                                                       01861500
*                       <,RELATED=ANY-COMMENT>                          01883400
*                                                                       01905300
*                                                                       01927200
*       WHERE:                                                          01949100
*                                                                       01971000
*                                                                       01992900
*      SPTOKEN=RX-ADDRESS                                               02014800
*          IS THE NAME THAT SPECIFIES AN 8-BYTE VARIABLE WHICH WILL     02036700
*          CONTAIN A SUSPEND TOKEN WHICH UNIQUELY IDENTIFIES A          02058600
*          SUSPENDED SRB.                                               02080500
*                                                                       02102400
*          THIS OPTION IS MUTUALLY EXCLUSIVE WITH THE RB OPTION.        02124300
*          THE SUSPEND TOKEN IS PASSED TO THE SUSPEND EXIT.             02146200
*                                                                       02168100
*                                                                       02190000
*      EXIT=RX-ADDRESS                                                  02211900
*           IS THE NAME OF A VARIABLE CONTAINING THE 31-BIT             02233800
*           ADDRESS OF A SUSPEND EXIT.  THE SUSPEND EXIT IS             02255700
*           INVOKED ENABLED IN 31-BIT ADDRESSING MODE AND THE           02277600
*           ASC MODE OF THE INVOKER.  IT IS PASSED THE ALET             02299500
*           QUALIFIED ADDRESS OF THE SUSPEND TOKEN IN AR/GPR1           02321400
*           AND MUST RETURN WITH A RETURN CODE IN REGISTER 15.          02343300
*                                                                       02365200
*                                                                       02387100
*           RSCODE=RX-ADDRESS                                           02409000
*               IS AN OPTIONAL FULLWORD VARIABLE WHICH WILL             02430900
*               CONTAIN THE RESUME CODE SPECIFIED BY EITHER THE         02452800
*               RESUME MACRO OR A SUSPEND EXIT.  THE ACTUAL RESUME      02474700
*               CODE MAY BE ANY VALUE WHICH WILL FIT IN A FULLWORD      02496600
*               IF THE RETURN CODE IN REGISTER 15 IS NOT 0 OR 4,        02518500
*               THE RESUME CODE IS IRRELEVANT.                          02540400
*                                                                       02562300
*                                                                       02584200
*           EXITPARM=A-TYPE ADDRESS                                     02587800
*               IS AN OPTIONAL ADDRESS OF A PARAMETER TO BE             02591400
*               PASSED TO THE SRB SUSPEND EXIT.                         02595000
*                                                                       02598600
*                                                                       02602200
*  LIST FORM OF SUSPEND:                                                02606100
*                                                                       02628000
*       SUSPEND     MF=L                                                02649900
*                                                                       02671800
*                       <,RELATED=ANY-VALUE>                            02693700
*                                                                       02715600
*01* PLAS SYNTAX:                                                       02737500
*                                                                       02759400
*            ?SUSPEND   RB(PREVIOUS|CURRENT)                            02781300
*                       RELATED(ANY COMMENT)                            02803200
*                                                                       02825100
*            ?SUSPEND   SPTOKEN(SPTOKEN_ADDRESS)                        02847000
*                       EXIT(EXIT_ADDRESS)                              02868900
*                         RSCODE(RESUME_CODE)                           02882000
*                         MF(E,RX_ADDRESS)                              02895100
*                         EXITPARM(PARAMETER)                           02908200
*                         RELATED(ANY COMMENT)                          02921300
*                                                                       02934600
*            ?SUSPEND   MF(L,RX_ADDRESS)                                02941900
*                         RELATED(ANY COMMENT)                          02949200
*                                                                       02956500
*01* INVOCATION REQUIREMENTS:                                           02978400
*                                                                       03000300
*                                                                       03022200
*      EXECUTION MODE:   IF RB OPTION SPECIFIED: TASK OR SRB MODE       03044100
*                        IF SPTOKEN OPTION SPECIFIED: SRB MODE.         03066000
*                                                                       03087900
*      AUTHORIZATION:    SUPERVISOR STATE.  ZERO PSW KEY.               03109800
*                                                                       03131700
*      ADDRESSING MODE:  31 BIT ADDRESSING MODE.                        03153600
*                                                                       03175500
*      ASC MODE:         PRIMARY OR ACCESS REGISTER ASC MODE.           03197400
*                                                                       03219300
*      SERIALIZATION:    ENABLED.  UNLOCKED.                            03241200
*                        SUSPEND with SPTOKEN can be invoked with a     03245500
*                        local lock held. The suspend exit will be      03249800
*                        invoked with the lock held. The lock will be   03254100
*                        released if the SRB is suspended.              03258400
*                                                                       03263100
*                                                                       03285000
*01* RETURN CODES:                                                      03306900
*                                                                       03328800
*                 THE FOLLOWING CODES ARE RETURNED FROM THE SUSPEND     03350700
*                  SRB WITH TOKEN SERVICE ROUTINE.                      03372600
*                                                                       03394500
*       0         THE SRB HAS BEEN SUCCESSFULLY SUSPENDED AND           03416400
*                 RESUMED.                                              03438300
*                                                                       03460200
*       4         THE SUSPEND EXIT ELECTED NOT TO SUSPEND THE SRB       03482100
*                 ROUTINE.                                              03504000
*                                                                       03525900
*       20        AN ERROR OCCURRED IN THE SUSPEND EXIT.                03533200
*                                                                       03540500
*       24        AN UNEXPECTED ERROR OCCURRED WHILE SUSPENDING THE     03547800
*                 SRB ROUTINE.  THE SRB WAS NOT SUSPENDED.              03569700
*                                                                       03591600
*                                                                       03613500
*01* COMPONENT:  SC1C5 (SUPERVISOR CONTROL)                             03635400
*                                                                       03657300
*01* MACLIB:  AMACLIB                                                   03679200
*                                                                       03701100
*01* CHANGE ACTIVITY:                                                   03723000
*    $D0=DEO0075    HBB4410  880715  PD16FH:  SUSPEND SRB WITH TOKEN    03733900
*    $D1=DEO0242    HBB4410  891023  PD16FH:  EXITPARM OPTION           03744800
*    $P1=PEO3551    HBB4410  900226  PD16IG:  RAS ENHANCEMENTS          03755700
*    $P2=PEO3169    HBB4410  900226  PD16EJ:  CORRECT RETURN CODE       03759400
*                                             SECTION IN MACRO PROLOG   03763100
*    $P3=PIG0986    HBB5510  930115  PD16EJ:  Correct MF(L) parameter   03764300
*                                             list generation.          03765500
*    $01=OW17775    HBB5510  960130  PDKD:   Correct AR-mode generation 03766100
*                                                                       03766800
*** END OF SPECIFICATIONS ******************************************/   03788700
*/********************************************************************  03810600
         MACRO                                                          03832500
&XLABEL  SUSPEND &RB=,                                                 X03854400
               &SPTOKEN=,                                              X03876300
               &EXIT=,                                                 X03898200
               &RSCODE=,                                               X03920100
               &EXITPARM=,                                             X03931000
               &MF=,                                                   X03942000
               &RELATED=                                                03963900
.*******************************************************************    03985800
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          04007700
.*******************************************************************    04029600
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 04051500
              LCLC  &ZMC        ERROR MESSAGE DELIMITER                 04073400
              LCLA  &ZMA        BAD KEYWORD COUNT                       04095300
              LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS            04117200
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              04139100
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             04161000
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             04182900
              LCLA  &ZAWRK      USED AS A WORK AREA                     04204800
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  04226700
              LCLA  &ZN         NUMERIC WORK VARIABLE                   04248600
              LCLC  &ZC         CHARACTER WORK VARIABLE                 04270500
              LCLA  &ZMACRET    MACRO RETURN CODE                       04292400
&ZMACRET      SETA  0           ASSUME NO ERRORS                        04314300
.*                                                                      04350040
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      04350500
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              04351000
.*******************************************************************    04351500
.***  DEFINE ALL MACRO PARAMETER VARIABLES                              04352000
.*******************************************************************    04352500
              LCLC  &XRB        ++ VALUE                                04353000
              LCLC  &XMF        ++ VALUE                                04353500
              LCLC  &XLIST      ++ INPUT PARM LIST NAME                 04354000
              LCLC  &XSPTOKEN   ++ NAME                                 04354500
              LCLC  &XEXIT      ++ NAME                                 04355000
              LCLC  &XRSCODE    ++ NAME                                 04355500
              LCLC  &XEXITPARM  ++ NAME                            @D1A 04355700
              LCLC  &SFTSLOT    ++ INDEX INTO SFT                       04356000
.*******************************************************************    04356500
.***  DEFINE ALL MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING            04357000
.*******************************************************************    04357500
              LCLC  &ZXRB       ++ INPUT VALUE                          04358000
              LCLC  &ZXSPTOKEN  ++ INPUT NAME                           04358500
              LCLC  &ZXEXIT     ++ INPUT NAME                           04359000
              LCLC  &ZXRSCODE   ++ INPUT NAME                           04359500
              LCLC  &ZXEXITPARM ++ NAME                            @D1A 04359700
              LCLC  &GNAME1     ++ START OF INLINE PARAMETER LIST       04360000
              LCLC  &GNAME2     ++ END   OF INLINE PARAMETER LIST       04360500
              LCLC  &GNAME3     ++ LABEL FOR RESUME CODE BRANCH         04361000
.********************************************************************   04361500
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 04362000
.*                                                                      04362500
.* TITLE: .ZSYS                                                         04363000
.*                                                                      04363500
.********************************************************************   04364000
              GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                 04364500
              GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE          04365000
.********************************************************************** 04365100
.*                                                                    * 04365200
.*                   INITIALIZE FOR PROCESSING                        * 04365300
.*                                                                    * 04365400
.********************************************************************** 04365500
*        MACDATE=01/15/93                                          @P3C 04365600
.*                                                                      04365700
&SFTSLOT SETC   '64'                       INITIALIZE SFT INDEX         04366000
.*                                                                      04366500
&GNAME1  SETC   'IHB'.'&SYSNDX'.'K'        SET UP INLINE NAMES          04367000
&GNAME2  SETC   'IHB'.'&SYSNDX'.'R'                                     04367500
&GNAME3  SETC   'IHB'.'&SYSNDX'.'C'                                     04368000
              AIF   (K'&SYSASCE GT 0).ZSYS020   SYS STATE DEFINED       04368500
              AIF   (K'&SYSSPLV GT 0).ZSYS000   SP LEVEL DEFINED        04369000
              SPLEVEL  TEST                                             04369500
.ZSYS000      ANOP  ,                                                   04370000
              AIF   ('&SYSSPLV' EQ '1').ZSYS010 PRE SP 3.1              04370500
              AIF   ('&SYSSPLV' EQ '2').ZSYS010 PRE SP 3.1              04371000
              SYSSTATE TEST                                             04371500
              AGO   .ZSYS020                                            04372000
.ZSYS010      ANOP  ,                                                   04372500
&SYSASCE      SETC  'P'         ASSUME SYSSTATE PRIMARY                 04373000
.ZSYS020      ANOP  ,                                                   04373500
.********************************************************************   04374000
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 04374500
.********************************************************************   04375000
              ACTR  10000                                               04375500
.ZSYS030      ANOP  ,           FULL SYNTAX CHECKING                    04376000
.********************************************************************   04376500
.***         CHECK IF BOTH RB AND SPTOKEN ARE SPECIFIED                 04377000
.*                                                                      04377500
.* TITLE: .VAL                                                          04378000
.*                                                                      04378500
.********************************************************************   04379000
              AIF   (T'&RB EQ 'O' OR T'&SPTOKEN EQ 'O').VAL010          04379500
.********************************************************************   04380000
.***         GENERATE MNOTE FOR MUTUALLY EXCLUSIVE KEYWORDS             04380500
.********************************************************************   04381000
.VAL000       ANOP   ,                                                  04381500
&ZMS          SETC  ' "RB" AND "SPTOKEN" ARE'                           04382000
              MNOTE 8,' &ZMS MUTUALLY EXCLUSIVE. '                      04382500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04383000
              AGO   .RB000                      PROCESS AS RB           04383500
.********************************************************************   04384000
.***         CHECK FOR RB                                               04384500
.********************************************************************   04385000
.VAL010       ANOP  ,                                                   04385500
              AIF   (T'&RB NE 'O').RB000        BRANCH TO RB PROC       04386000
.********************************************************************   04386500
.***         CHECK FOR SPTOKEN                                          04387000
.********************************************************************   04387500
              AIF   (T'&SPTOKEN NE 'O').TOKN000 BRANCH TO SPTOKEN PROC  04388000
.********************************************************************   04388500
.***         CHECK FOR LIST FORM                                        04389000
.********************************************************************   04389500
              AIF   (T'&MF EQ 'O').RB000        IF NO MF PROCESS AS RB  04390000
              AIF   ('&MF' EQ 'L').LIST000      BRANCH TO LIST PROC     04390500
.********************************************************************   04391000
.***  "MF" SPECIFIED THAT IS NOT LIST FORM WITHOUT SPTOKEN CHECK ERROR  04391500
.*                                                                      04392000
.* TITLE: .MF                                                           04392500
.*                                                                      04393000
.********************************************************************   04393500
              AIF   ('&MF(1)' NE 'E' AND '&MF(1)' NE 'S').MF000         04394000
.*                                                                      04394500
.*         "MF" SPECIFIED WITHOUT SPTOKEN                               04395000
.*                                                                      04395500
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           04396000
&ZMS          SETC  '&ZMS.&MF"'                                         04396500
&ZMS          SETC  '&ZMS MAY ONLY BE SPECIFIED'                        04397000
&ZMS          SETC  '&ZMS WITH "SPTOKEN".'                              04397500
              MNOTE 8,' &ZMS '                                          04398000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04398500
              AGO   .EXIT000                                            04399000
.*                                                                      04399500
.*         UNRECOGNIZED MACRO FORM DETECTED -- GENERATE MNOTE           04400000
.*                                                                      04400500
.MF000        ANOP                                                      04401000
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           04401500
&ZMS          SETC  '&ZMS.&MF"'                                         04402000
&ZMS          SETC  '&ZMS IS INCORRECT. '                               04402500
&ZMS          SETC  '&ZMS KEYWORD CHOICE IS: '                          04403000
&ZMS          SETC  '&ZMS "MF=L".'                                      04403500
              MNOTE 8,' &ZMS '                                          04404000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04404500
              AGO   .EXIT000                                            04405000
.********************************************************************   04405500
.***         PROCESS SUSPEND RB                                         04406000
.*                                                                      04406500
.* TITLE: .RB                                                           04407000
.*                                                                      04407500
.********************************************************************   04408000
.RB000        ANOP   ,                                                  04408500
              AIF   (N'&RB LE 1).RB010          CK NUM                  04409000
&ZMS          SETC  '"RB='      *KPOSA* MNOTE                           04409500
&ZMS          SETC  '&ZMS.&RB"'                                         04410000
&ZMS          SETC  '&ZMS "RB"'                                         04410500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04411000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04411500
.RB010        ANOP  ,                                                   04412000
.*-------------------------------------------------------------------   04412500
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             04413000
&XRB          SETC  ''          INITIALIZE XVARIABLE                    04413500
.RB020  AIF   ('&RB(1)' NE 'PREVIOUS').RB030                            04414000
&XRB          SETC  'PREVIOUS'  SET KEYWORD                             04414500
.*-------------------------------------------------------------------   04415000
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             04415500
.RB030  AIF   ('&RB(1)' NE 'CURRENT').RB040                             04416000
&XRB          SETC  'CURRENT'   SET KEYWORD                             04416500
.*-------------------------------------------------------------------   04417000
.***AG.KKWRD03 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             04417500
.RB040        AIF   (K'&XRB GT 0).RB060         KEYWORD                 04418000
              AIF   (T'&RB EQ 'O').RB050                                04418500
&ZMS          SETC  '"RB='      *KUKWA* MNOTE                           04419000
&ZMS          SETC  '&ZMS.&RB"'                                         04419500
&ZMS          SETC  '&ZMS IS INCORRECT. '                               04420000
&ZMS          SETC  '&ZMS KEYWORD CHOICES ARE: '                        04420500
&ZMS          SETC  '&ZMS                  '                            04421000
&ZMS          SETC  '&ZMS "RB=PREVIOUS" OR '                            04421500
&ZMS          SETC  '&ZMS "RB=CURRENT".'                                04422000
              MNOTE 8,' &ZMS '                                          04422500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04423000
.RB050        ANOP  ,                                                   04423500
&XRB          SETC  'PREVIOUS'  SET DEFAULT KEYWORD                     04424000
.RB060        ANOP  ,                                                   04424500
&ZXRB         SETC  'INPUT'     SET IN/OUTPUT                           04425000
.*-------------------------------------------------------------------   04425500
.RB070        ANOP  ,                                                   04426000
.RB080        ANOP  ,           END OF FULL SYNTAX CHECK                04426500
.*******************************************************************    04427000
.***AE.RMR01 CHECK FOR SPTOKEN OPTIONS ILLEGALLY SPECIFIED WITH "RB"    04427500
.*******************************************************************    04428000
&ZMS          SETC  ''          CLEAR MNOTE WORK AREAS                  04428500
&ZMA          SETA  0           CLEAR COUNT OF ERRORS                   04429000
              AIF   (T'&EXIT EQ 'O').RB090                              04429500
&ZMA          SETA  &ZMA+1      BUMP COUNT BAD KEYS                     04430000
&ZMS          SETC  ' "EXIT"'                                           04430500
.*******************************************************************    04431000
.***         CHECK FOR "RSCODE"                                         04431500
.*******************************************************************    04432000
.RB090        ANOP                                                      04432500
              AIF   (T'&RSCODE EQ 'O').RB095                       @D1C 04433000
&ZMA          SETA  &ZMA+1      BUMP COUNT BAD KEYS                     04433500
              AIF   (&ZMA EQ 1).RB092                                   04434000
&ZMS          SETC  '&ZMS., "RSCODE"'                                   04434500
              AGO   .RB095                                              04434600
.RB092        ANOP                                                      04434700
&ZMS          SETC  ' "RSCODE"'                                         04434800
.*******************************************************************    04434900
.***         CHECK FOR "EXITPARM"                                       04435000
.*******************************************************************    04435100
.RB095        ANOP                                                 @D1A 04435200
              AIF   (T'&EXITPARM EQ 'O').RB110                     @D1A 04435300
&ZMA          SETA  &ZMA+1      BUMP COUNT BAD KEYS                @D1A 04435400
              AIF   (&ZMA EQ 1).RB100                              @D1A 04435500
&ZMS          SETC  '&ZMS., "EXITPARM"'                            @D1A 04435600
              AGO   .RB110                                         @D1A 04435700
.RB100        ANOP                                                 @D1A 04435800
&ZMS          SETC  ' "EXITPARM"'                                  @D1A 04435900
.*******************************************************************    04436000
.***         CHECK FOR "MF"                                             04437000
.*******************************************************************    04437500
.RB110        ANOP                                                      04438000
              AIF   (T'&MF EQ 'O').RB130                                04438500
&ZMA          SETA  &ZMA+1      BUMP COUNT BAD KEYS                     04439000
              AIF   (&ZMA EQ 1).RB120                                   04439500
&ZMS          SETC  '&ZMS., "MF"'                                       04440000
              AGO   .RB130                                              04440500
.RB120        ANOP                                                      04441000
&ZMS          SETC  ' "MF"'                                             04441500
.RB130        ANOP                                                      04442000
              AIF   (&ZMA EQ 0).RGEN000 IF KEYWORDS OK, GO GENERATE     04442500
.*******************************************************************    04443000
.***         GENERATE MNOTE                                             04443500
.*******************************************************************    04444000
              AIF   (&ZMA GT 1).RB140                                   04444500
&ZMS          SETC  '&ZMS. KEYWORD IS NOT VALID '                       04445000
&ZMS          SETC  '&ZMS.WITH "RB=&RB". '                              04445500
              MNOTE 8,' &ZMS '                                          04446000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04446500
              AGO   .RGEN000    GO GENERATE CODE                        04447000
.RB140        ANOP                                                      04447500
&ZMS          SETC  '&ZMS. KEYWORDS ARE NOT VALID '                     04448000
&ZMS          SETC  '&ZMS.WITH "RB=&RB". '                              04448500
              MNOTE 8,' &ZMS '                                          04449000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04449500
              AGO   .RGEN000    GO GENERATE CODE                        04450000
.*******************************************************************    04450500
.***       GENERATE CODE IF ZMACRET=0                                   04451000
.*                                                                      04451500
.* TITLE: .RGEN                                                         04452000
.*                                                                      04452500
.*******************************************************************    04453000
.RGEN000      ANOP  ,                                                   04453500
              AIF   (&ZMACRET NE 0).EXIT010     ERROR DETECTED          04454000
.*******************************************************************    04454500
.***AE.01  START OF SUSPEND MACRO CODE  (RB OPTION)                     04455000
.*******************************************************************    04455500
              LCLC  &M0M0001                 LABEL NAME                 04456000
&M0M0001      SETC  '&XLABEL'                SET LABEL                  04456500
              AIF   (K'&XLABEL NE 0).RGEN010                            04457000
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT LABEL              04457500
.*                                                                      04458000
.RGEN010      ANOP  ,                                                   04458500
&M0M0001 DS    0H                             SUSPEND-0                 04459000
         AIF ('&XRB' EQ 'PREVIOUS').RGEN020                             04459500
         SLR   1,1                  SUSPEND CURRENT RB                  04460000
         AGO   .RGEN030                                                 04460500
.RGEN020 ANOP                                                           04461000
         LA    1,4                  SUSPEND PREVIOUS RB                 04461500
.RGEN030 ANOP                                                           04462000
         L     15,FLCCVT-FLC(0,0)   CVT ADDRESS                         04462500
         L     15,CVTSUSP-CVT(15,0) SUSPEND FUNCTION ADDRESS            04463000
         BALR  14,15                CALL SUSPEND                        04463500
         AGO   .EXIT000                                                 04464000
.*******************************************************************    04464500
.***AB.07  PERFORM "SPTOKEN" PROCESSING                                 04465000
.*                                                                      04465500
.* TITLE: .TOKN                                                         04466000
.*                                                                      04466500
.*******************************************************************    04467000
.TOKN000 ANOP                                                           04467500
.********************************************************************   04468000
.***AG.MF01 PROCESS MF MACRO FORMS                                      04468500
.********************************************************************   04469000
              ACTR  10000                                               04469500
.********************************************************************   04470000
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 04470500
.********************************************************************   04471000
              ACTR  10000                                               04471500
.*-------------------------------------------------------------------   04472000
.***AG.MF03 MF=(SLE)                                                    04472500
&XMF          SETC  'S'         INITIALIZE DEFAULT                      04473000
              AIF   (T'&MF EQ 'O').TOKN020                              04473500
              AIF   ('&MF' EQ 'S').TOKN020                              04474000
&XMF          SETC  'E'         TRY EXECUTE FORM                        04474500
              AIF   ('&MF(1)' EQ 'E').TOKN010                           04475000
.********************************************************************   04475500
.***         INCORRECT MACRO FORM SPECIFIED                             04476000
.********************************************************************   04476500
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           04477000
&ZMS          SETC  '&ZMS.&MF"'                                         04477500
&ZMS          SETC  '&ZMS KEYWORD IS NOT VALID WITH'                    04478000
&ZMS          SETC  '&ZMS "SPTOKEN".'                                   04478500
              MNOTE 8,' &ZMS '                                          04479000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04479500
&XMF          SETC  'S'         RESET MACRO FORM TO DEFAULT             04480000
              AGO   .TOKN020    CONTINUE PROCESSING                     04480500
.********************************************************************   04481000
.***         CHECK POSITIONALS ON MF=E                                  04481500
.********************************************************************   04482000
.TOKN010      ANOP                                                      04482500
              AIF    (N'&MF EQ 2).TOKN020       CHECK FOR 2 SUBLISTS    04483000
.********************************************************************   04483500
.***         WRONG NUMBER OF SUBLISTS SPECIFIED                         04484000
.********************************************************************   04484500
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           04485000
&ZMS          SETC  '&ZMS.&MF"'                                         04485500
&ZMS          SETC  '&ZMS IS INCORRECT. '                               04486000
&ZMS          SETC  '&ZMS PARAMETER LIST NAME '                         04486500
&ZMS          SETC  '&ZMS IS REQUIRED. '                                04487000
              MNOTE 8,' &ZMS '                                          04487500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04488000
.TOKN020      ANOP  ,           CONTINUE SPTOKEN PROCESSING             04488500
.*----------------------------------------------------------------***   04489000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     04489500
              AIF   (N'&SPTOKEN LE 1).TOKN030   CK NUM                  04490000
&ZMS          SETC  '"SPTOKEN='                 *KPOSA* MNOTE           04490500
&ZMS          SETC  '&ZMS.&SPTOKEN"'                                    04491000
&ZMS          SETC  '&ZMS "SPTOKEN"'                                    04491500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04492000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04492500
.TOKN030      ANOP  ,                                                   04493000
.*-------------------------------------------------------------------   04493500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         04494000
&ZXSPTOKEN    SETC  'INPUT'     SET IN/OUTPUT                           04494500
&XSPTOKEN     SETC  '&SPTOKEN(1)'               SET XVARIABLE           04495000
              AIF   (N'&SPTOKEN GT 1).TOKN040   MULTIPLE PARMS          04495500
&XSPTOKEN     SETC  '&SPTOKEN'  SET XVARIABLE                           04496000
.TOKN040      AIF   (K'&SPTOKEN(1) GT 0).TOKN050                        04496500
&ZXSPTOKEN    SETC  ''          RESET IN/OUTPUT                         04497000
&ZMS          SETC  ' '         *KRQDA*                                 04497500
&ZMS          SETC  '&ZMS "SPTOKEN" KEY AND ITS ARGUMENT ARE'           04498000
              MNOTE 8,' &ZMS REQUIRED.'                                 04498500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04499000
.TOKN050      ANOP  ,                                                   04499500
.*-------------------------------------------------------------------   04500000
.***AG.KCK01 NAME, RQD INPUT, KEYS -GPR NOT ALLOWED                     04500500
              AIF   (K'&ZXSPTOKEN LE 0).TOKN060 NOT I/O                 04501000
              AIF   ('&XSPTOKEN'(1,1) NE '(').TOKN060                   04501500
&ZXSPTOKEN    SETC  ''          RESET IN/OUTPUT                         04502000
&ZMS          SETC  '"SPTOKEN='                 *KGPRA* MNOTE           04502500
&ZMS          SETC  '&ZMS.&SPTOKEN"'                                    04503000
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           04503500
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                   04504000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04504500
.TOKN060      ANOP  ,                                                   04505000
.*----------------------------------------------------------------***   04505500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     04506000
              AIF   (N'&EXIT LE 1).TOKN070      CK NUM                  04506500
&ZMS          SETC  '"EXIT='    *KPOSA* MNOTE                           04507000
&ZMS          SETC  '&ZMS.&EXIT"'                                       04507500
&ZMS          SETC  '&ZMS "EXIT"'                                       04508000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04508500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04509000
.TOKN070      ANOP  ,                                                   04509500
.*-------------------------------------------------------------------   04510000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         04510500
&ZXEXIT       SETC  'INPUT'     SET IN/OUTPUT                           04511000
&XEXIT        SETC  '&EXIT(1)'  SET XVARIABLE                           04511500
              AIF   (N'&EXIT GT 1).TOKN080      MULTIPLE PARMS          04512000
&XEXIT        SETC  '&EXIT'     SET XVARIABLE                           04512500
.TOKN080      AIF   (K'&EXIT(1) GT 0).TOKN090                           04513000
&ZXEXIT       SETC  ''          RESET IN/OUTPUT                         04513500
&ZMS          SETC  ' '         *KRQDA*                                 04514000
&ZMS          SETC  '&ZMS "EXIT" KEY AND ITS ARGUMENT ARE'              04514500
              MNOTE 8,' &ZMS REQUIRED.'                                 04515000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04515500
.TOKN090      ANOP  ,                                                   04516000
.*-------------------------------------------------------------------   04516500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    04517000
              AIF   (K'&ZXEXIT LE 0).TOKN120    NOT I/O                 04517500
              AIF   ('&XEXIT'(1,1) NE '(').TOKN120                      04518000
&ZCGPR        SETC  '&XEXIT'(2,K'&XEXIT-2)                              04518500
              AIF   ('&ZCGPR'(1,1) NE '0').TOKN100                      04519000
              AIF   (K'&ZCGPR GT 2).TOKN110                             04519500
              AIF   ('&ZCGPR' EQ '0').TOKN110                           04520000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       04520500
              AIF   (T'&ZCGPR NE 'N').TOKN110   INVALID REG NAME        04521000
.TOKN100      ANOP  ,                                                   04521500
              AIF   (T'&ZCGPR NE 'N').TOKN120   NON NUMERIC             04522000
              AIF   ('&ZCGPR' LT '2').TOKN110                           04522500
              AIF   ('&ZCGPR' LE '12').TOKN120                          04523000
.TOKN110      ANOP  ,                                                   04523500
&ZMS          SETC  '"EXIT='    *KGPRA* MNOTE                           04524000
&ZMS          SETC  '&ZMS.&EXIT"'                                       04524500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           04525000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    04525500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04526000
.TOKN120      ANOP  ,                                                   04526500
.*----------------------------------------------------------------***   04527000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     04527500
              AIF   (N'&RSCODE LE 1).TOKN130    CK NUM                  04528000
&ZMS          SETC  '"RSCODE='  *KPOSA* MNOTE                           04528500
&ZMS          SETC  '&ZMS.&RSCODE"'                                     04529000
&ZMS          SETC  '&ZMS "RSCODE"'                                     04529500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04530000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04530500
.TOKN130      ANOP  ,                                                   04531000
.*-------------------------------------------------------------------   04531500
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         04532000
&XRSCODE      SETC  ''          SET DEFAULT                             04532500
              AIF   (K'&RSCODE(1) LE 0).TOKN150 PARM                    04533000
&XRSCODE      SETC  '&RSCODE(1)'                SET XVARIABLE           04533500
              AIF   (N'&RSCODE GT 1).TOKN140    MULTIPLE PARMS          04534000
&XRSCODE      SETC  '&RSCODE'   SET XVARIABLE                           04534500
.TOKN140      AIF   (K'&EXIT(1) GT 0).TOKN150   KEY                     04535000
&ZMS          SETC  '"RSCODE'   *KDEPA* MNOTE                           04535500
&ZMS          SETC  '&ZMS.=&RSCODE"'                                    04536000
&ZMS          SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                     04536500
&ZMS          SETC  '&ZMS '                                             04537000
&ZMS          SETC  '&ZMS "EXIT"'                                       04537500
              MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                        04538000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04538500
.TOKN150      ANOP  ,                                                   04539000
&ZXRSCODE     SETC  'INPUT'     SET IN/OUTPUT                           04539500
.*-------------------------------------------------------------------   04540000
.***AG.KCK01 NAME, OPT INPUT, KEYS -GPR NOT ALLOWED                     04540500
              AIF   (K'&ZXRSCODE LE 0).TOKN160  NOT I/O                 04541000
              AIF   ('&XRSCODE' EQ '').TOKN160                          04541500
              AIF   ('&XRSCODE'(1,1) NE '(').TOKN160                    04542000
&ZXRSCODE     SETC  ''          RESET IN/OUTPUT                         04542500
&ZMS          SETC  '"RSCODE='  *KGPRA* MNOTE                           04543000
&ZMS          SETC  '&ZMS.&RSCODE"'                                     04543500
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           04544000
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                   04544500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04545000
.TOKN160      ANOP  ,                                                   04545500
.*----------------------------------------------------------------***   04545600
.***AG.KXVAR18 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     04545700
              AIF   (N'&EXITPARM LE 1).TOKN162      CK NUM         @D1A 04545800
&ZMS          SETC  '"EXITPARM='    *KPOSA* MNOTE                  @D1A 04545900
&ZMS          SETC  '&ZMS.&EXITPARM"'                              @D1A 04546000
&ZMS          SETC  '&ZMS "EXITPARM"'                              @D1A 04546100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            @D1A 04546200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE        @D1A 04546300
.TOKN162      ANOP  ,                                              @D1A 04546400
&ZXEXITPARM   SETC  'INPUT'     SET IN/OUTPUT                      @D1A 04546500
.*-------------------------------------------------------------------   04546600
.***AG.KXVAR19 NAME, OPT INPUT, KEYS -XVARIABLE                    @D1A 04546700
&XEXITPARM    SETC  ''          SET DEFAULT                        @D1A 04546800
              AIF   (K'&EXITPARM(1) LE 0).TOKN166 PARM             @D1A 04546900
&XEXITPARM    SETC  '&EXITPARM(1)'                SET XVARIABLE    @D1A 04547000
.TOKN166      ANOP  ,                                              @D1A 04547100
.*-------------------------------------------------------------------   04547200
&ZXEXITPARM     SETC  'INPUT'     SET IN/OUTPUT                    @D1A 04547300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    04547400
              AIF   (K'&ZXEXITPARM LE 0).TOKN172    NOT I/O        @D1A 04547500
              AIF   ('&XEXITPARM' EQ '').TOKN172                   @D1A 04547600
              AIF   ('&XEXITPARM'(1,1) NE '(').TOKN172             @D1A 04547700
&ZCGPR        SETC  '&XEXITPARM'(2,K'&XEXITPARM-2)                 @D1A 04547800
              AIF   ('&ZCGPR'(1,1) NE '0').TOKN168                 @D1A 04547900
              AIF   (K'&ZCGPR GT 2).TOKN170                        @D1A 04548000
              AIF   ('&ZCGPR' EQ '0').TOKN170                      @D1A 04548100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                  @D1A 04548200
              AIF   (T'&ZCGPR NE 'N').TOKN170   INVALID REG NAME   @D1A 04548300
.TOKN168      ANOP  ,                                              @D1A 04548400
              AIF   (T'&ZCGPR NE 'N').TOKN172   NON NUMERIC        @D1A 04548500
              AIF   ('&ZCGPR' LT '2').TOKN170                      @D1A 04548600
              AIF   ('&ZCGPR' LE '12').TOKN172                     @D1A 04548700
.TOKN170      ANOP  ,                                              @D1A 04548800
&ZMS          SETC  '"EXITPARM='    *KPOSA* MNOTE                  @D1A 04548900
&ZMS          SETC  '&ZMS.&EXITPARM"'                              @D1A 04549000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      @D1A 04549100
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               @D1A 04549200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE        @D1A 04549300
.TOKN172      ANOP  ,           END OF FULL SYNTAX CHECK           @D1A 04549400
.*******************************************************************    04549500
.***       GENERATE CODE IF ZMACRET=0                                   04549600
.*                                                                      04549700
.* TITLE: .TGEN                                                         04549800
.*                                                                      04549900
.*******************************************************************    04550000
              AIF   (&ZMACRET NE 0).EXIT000     ERROR DETECTED          04550100
.*******************************************************************    04550200
.***       SEPARATE STANDARD FORM FROM EXECUTE FORM                     04550500
.*******************************************************************    04551000
&XLIST        SETC  '&GNAME1'              ASSUME STANDARD FORM         04551500
              AIF   ('&XMF' EQ 'S').TGEN000  IF STANDARD CONTINUE       04552000
&XLIST        SETC  '&MF(2)'               ELSE ASSIGN NAME FOR LIST    04552500
              AGO   .TGE000                GO GENERATE EXECUTE FORM     04553000
.*******************************************************************    04553500
.***       START OF SUSPEND MACRO CODE (STANDARD FORM)                  04554000
.*******************************************************************    04554500
.TGEN000      ANOP                                                      04555000
              LCLC  &M0M0001                 LABEL NAME                 04555500
&M0M0001      SETC  '&XLABEL'                SET LABEL                  04556000
              AIF   (K'&XLABEL NE 0).TGEN010                            04556500
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT LABEL              04557000
.*                                                                      04557500
.TGEN010      ANOP  ,                                                   04558000
&M0M0001 DS    0H                             SUSPEND-0                 04558500
         LAE    1,&XLIST                   POINT GPR/AR 1 TO LIST       04559000
.********************************************************************   04559500
.*    GENERATE INLINE PARAMETER LIST                                *   04560000
.********************************************************************   04560500
         LAE    14,&SPTOKEN                LOAD ALET/ADDRESS OF TOKEN   04561000
         STAM   14,14,8(1)                 STORE ALET INTO LIST         04561500
         ST     14,12(,1)                  STORE ADDR INTO LIST  @01C   04562000
         AIF    ('&EXIT'(1,1) EQ '(').TGEN020                           04562500
         LA     14,&EXIT                   LOAD ADDRESS OF EXIT         04563000
         ST     14,4(,1)                   STORE ADDR INTO LIST  @01C   04563500
         AGO    .TGEN030                                                04564000
.TGEN020 ANOP                                                           04564500
         ST     &EXIT(1),4(,1)             STORE EXIT ADDRESS INTO      04564800
*                                          LIST                  @01C   04565100
.*******************************************************************    04565600
.*         CHECK FOR "EXITPARM" OPTION                                  04565700
.*******************************************************************    04565800
.TGEN030 ANOP                                                           04565900
         AIF   ('&XEXITPARM' EQ '').TGEN036                        @D1A 04566000
         AIF   ('&EXITPARM'(1,1) EQ '(').TGEN034                   @D1A 04566100
.TGEN032 ANOP                           .PROCESS EXIT PARM LABEL   @D1A 04566200
         LAE    14,&EXITPARM               LOAD EXIT PARM ALET/ADDRESS  04566300
         STAM   14,14,16(1)                STORE ALET INTO LIST         04566400
         ST     14,20(,1)                  STORE ADDR INTO LIST    @01C 04566500
         AGO   .TGEN036                                            @D1A 04566600
.TGEN034 ANOP                           .PROCESS EXIT PARM REGS    @D1A 04566700
         STAM   &EXITPARM(1),&EXITPARM(1),16(1)  STORE EXIT PARM ALET   04566800
         ST     &EXITPARM(1),20(,1)        STORE EXIT PARM ADDR    @01C 04566900
.TGEN036 ANOP                           .EXIT PARM NOT SPECIFIED   @D1A 04567000
         AGO   .TGEN040                                            @D1A 04567100
.*******************************************************************    04567200
.*         END "EXITPARM" PROCESSING                                    04567300
.*******************************************************************    04567400
.TGEN040 ANOP                                                           04567500
         B      &GNAME2                    BRANCH AROUND PARM LIST      04567800
         CNOP   0,4                        FORCE LIST TO WORD BOUNDARY  04567900
.*                                                                      04568000
&GNAME1  DS     0CL24                      SUSPEND/RESUME WITH TOKEN    04568100
*                                          (INPUT/OUTPUT)               04568500
         DC     XL1'01'                    PARAMETER LEVEL INDICATOR    04569000
         DC     XL3'00'                                                 04569500
         DC     A(0)                       SUSPEND EXIT ADDRESS         04570000
         DC     F'0'                       ALET OF SUSPEND TOKEN        04570500
         DC     A(0)                       ADDRESS OF SUSPEND TOKEN     04571000
         DC     F'0'                       ALET OF EXIT PARAMETER       04571100
         DC     A(0)                       ADDRESS OF EXIT PARAMETER    04571200
.********************************************************************   04571500
.*    GENERATE PC LINKAGE TO SUSPEND WITH TOKEN SERVICE ROUTINE     *   04572000
.*    REGISTER 14 IS USED AS A WORK REGISTER                        *   04572500
.********************************************************************   04573000
&GNAME2  L      14,16(0,0)                 GET ADDRESS OF CVT           04573500
         L      14,772(14,0)               GET ADDRESS OF SFT           04574000
         L      14,(&SFTSLOT-1)*4(14,0)    GET LX/EX FOR ROUTINE        04574500
         PC     0(14)                      PC TO SUSPEND WITH TOKEN     04575000
         AGO    .TRET000                   REJOIN COMMON GENERATION     04575500
.*******************************************************************    04576000
.***       START OF SUSPEND MACRO CODE (EXECUTE FORM)                   04576500
.*                                                                      04577000
.* TITLE: .TGE                                                          04577500
.*                                                                      04578000
.*******************************************************************    04578500
.TGE000       ANOP                                                      04579000
              LCLC  &M0M0001                 LABEL NAME                 04579500
&M0M0001      SETC  '&XLABEL'                SET LABEL                  04580000
              AIF   (K'&XLABEL NE 0).TGE010                             04580500
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT LABEL              04581000
.*                                                                      04581500
.TGE010       ANOP  ,                                                   04582000
&M0M0001 DS    0H                             SUSPEND-0                 04582500
.********************************************************************   04583000
.*    CHECK FOR REGISTER TYPE PARAMETER LIST ADDRESS                *   04583500
.********************************************************************   04584000
         AIF    ('&MF(2)'(1,1) EQ '(').TGE020   BRANCH TO PROCESS       04584500
         LAE    1,&XLIST                   POINT GPR/AR 1 TO LIST       04585000
         AGO    .TGE030                    CONTINUE PROCESSING          04585500
.TGE020  ANOP                                                           04586000
&XLIST   SETC   '&MF(2)'(2,K'&MF(2)-2)     EXTRACT REGISTER NAME        04586500
         LAE    1,0(0,&XLIST)              POINT GPR/AR 1 TO LIST       04587000
         AGO    .TGE030                    CONTINUE PROCESSING          04587500
.********************************************************************   04588000
.*    FILL IN PARAMETER LIST                                        *   04588500
.********************************************************************   04589000
.TGE030  ANOP                                                           04589500
.*                                  .CLEAR 24-BYTE PARAMETER LIST  @D1C 04589800
         XC     0(24,1),0(1)               CLEAR PARAMETER LIST         04590100
         MVI    0(1),X'01'                 INIT PARAMETER LEVEL         04590500
         LAE    14,&SPTOKEN                LOAD ALET/ADDRESS OF TOKEN   04591000
         STAM   14,14,8(1)                 STORE ALET INTO LIST         04591500
         ST     14,12(,1)                  STORE ADDRESS INTO LIST @01C 04592000
         AIF    ('&EXIT'(1,1) EQ '(').TGE040                            04592500
         LA     14,&EXIT                   LOAD ADDRESS OF EXIT         04593000
         ST     14,4(,1)                   STORE ADDRESS INTO LIST @01C 04593500
         AGO    .TGE050                                                 04594000
.TGE040  ANOP                                                           04594500
         ST     &EXIT(1),4(,1)             STORE EXIT ADDRESS INTO      04594800
*                                          LIST                    @01C 04595100
.*******************************************************************    04595600
.*         CHECK FOR "EXITPARM" OPTION                                  04595700
.*******************************************************************    04595800
.TGE050  ANOP                                                           04595900
         AIF   ('&XEXITPARM' EQ '').TGE056                         @D1A 04596000
         AIF   ('&EXITPARM'(1,1) EQ '(').TGE054                    @D1A 04596100
.TGE052  ANOP                           .PROCESS EXIT PARM LABEL   @D1A 04596200
         LAE    14,&EXITPARM               LOAD EXIT PARM ALET/ADDRESS  04596300
         STAM   14,14,16(1)                STORE ALET INTO LIST         04596400
         ST     14,20(,1)                  STORE ADDRESS INTO LIST @01C 04596500
         AGO   .TGE056                                             @D1A 04596600
.TGE054  ANOP                           .PROCESS EXIT PARM REGS    @D1A 04596700
         STAM   &EXITPARM(1),&EXITPARM(1),16(1)  STORE EXIT PARM ALET   04596800
         ST     &EXITPARM(1),20(,1)      STORE EXIT PARM ADDR      @01C 04596900
.TGE056  ANOP                           .EXIT PARM NOT SPECIFIED   @D1A 04597000
         AGO   .TGE060                                             @D1A 04597100
.*******************************************************************    04597200
.*         END "EXITPARM" PROCESSING                                    04597300
.*******************************************************************    04597400
.TGE060  ANOP                                                           04597500
.********************************************************************   04597800
.*    GENERATE PC LINKAGE TO SUSPEND WITH TOKEN SERVICE ROUTINE     *   04597900
.*    REGISTER 14 IS USED AS A WORK REGISTER                        *   04598000
.********************************************************************   04598100
         L      14,16(0,0)                 GET ADDRESS OF CVT           04598500
         L      14,772(14,0)               GET ADDRESS OF SFT           04599000
         L      14,(&SFTSLOT-1)*4(14,0)    GET LX/EX FOR ROUTINE        04599500
         PC     0(14)                      PC TO SUSPEND WITH TOKEN     04600000
         AGO    .TRET000                   REJOIN COMMON GENERATION     04600500
.*******************************************************************    04601000
.***       CHECK FOR "RSCODE" OPTION                                    04601500
.*                                                                      04602000
.* TITLE: .TRET                                                         04602500
.*                                                                      04603000
.*******************************************************************    04603500
.TRET000 ANOP                                                           04604000
         AIF   ('&XRSCODE' EQ '').TRET010                               04604500
.*******************************************************************    04605000
.***       GENERATE CODE TO COPY RESUME CODE                            04605500
.*******************************************************************    04606000
         LAE    14,&RSCODE                GET ADDRESS OF USER'S AREA    04606500
         ST     0,0(,14)                  SAVE RESUME CODE              04607000
.TRET010 ANOP                                                           04607500
         AGO    .EXIT000                                                04608000
.********************************************************************   04608500
.*     MF=L PROCEDURE                                               *   04609000
.*                                                                      04609500
.* TITLE: .LIST                                                         04610000
.*                                                                      04610500
.********************************************************************   04611000
.LIST000      ANOP   ,                                                  04611500
.*******************************************************************    04612000
.*** CHECK FOR "SPTOKEN" OR "RB" OPTIONS ILLEGALLY SPECIFIED WITH "MF"  04612500
.*******************************************************************    04613000
&ZMS          SETC  ''          CLEAR MNOTE WORK AREAS                  04613500
&ZMA          SETA  0           CLEAR COUNT OF ERRORS                   04614000
              AIF   (T'&RB EQ 'O').LIST010                              04614500
&ZMA          SETA  &ZMA+1      BUMP COUNT BAD KEYS                     04615000
&ZMS          SETC  ' "RB"'                                             04615500
.*******************************************************************    04616000
.***         CHECK FOR "EXIT"                                           04616500
.*******************************************************************    04617000
.LIST010      ANOP                                                      04617500
              AIF   (T'&EXIT EQ 'O').LIST030                            04618000
&ZMA          SETA  &ZMA+1      BUMP COUNT BAD KEYS                     04618500
              AIF   (&ZMA EQ 1).LIST020                                 04619000
&ZMS          SETC  '&ZMS., "EXIT"'                                     04619500
              AGO   .LIST030                                            04620000
.LIST020      ANOP                                                      04620500
&ZMS          SETC  ' "EXIT"'                                           04621000
.*******************************************************************    04621500
.***         CHECK FOR "RSCODE"                                         04622000
.*******************************************************************    04622500
.LIST030      ANOP                                                      04623000
              AIF   (T'&RSCODE EQ 'O').LIST042                     @D1C 04623500
&ZMA          SETA  &ZMA+1      BUMP COUNT BAD KEYS                     04624000
              AIF   (&ZMA EQ 1).LIST040                                 04624500
&ZMS          SETC  '&ZMS., "RSCODE"'                                   04625000
              AGO   .LIST042                                       @D1C 04625500
.LIST040      ANOP                                                      04626000
&ZMS          SETC  ' "RSCODE"'                                         04626500
.*******************************************************************    04626600
.***         CHECK FOR "EXITPARM"                                       04626700
.*******************************************************************    04626800
.LIST042      ANOP                                                 @D1A 04626900
              AIF   (T'&EXITPARM EQ 'O').LIST046                   @D1A 04627000
&ZMA          SETA  &ZMA+1      BUMP COUNT BAD KEYS                @D1A 04627100
              AIF   (&ZMA EQ 1).LIST044                            @D1A 04627200
&ZMS          SETC  '&ZMS., "EXITPARM"'                            @D1A 04627300
              AGO   .LIST046                                       @D1A 04627400
.LIST044      ANOP                                                 @D1A 04627500
&ZMS          SETC  ' "EXITPARM"'                                  @D1A 04627600
.LIST046      ANOP                                                 @D1A 04627700
              AIF   (&ZMA EQ 0).LIST050 IF KEYWORDS OK, GO GENERATE     04627800
.*******************************************************************    04628000
.***         GENERATE MNOTE                                             04628500
.*******************************************************************    04629000
              AIF   (&ZMA GT 1).LIST047                                 04629500
&ZMS          SETC  '&ZMS. KEYWORD IS NOT VALID '                       04630000
&ZMS          SETC  '&ZMS.WITH "MF=&MF". '                              04630500
              MNOTE 8,' &ZMS '                                          04631000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04631500
              AGO   .LIST050    GO GENERATE CODE                        04632000
.LIST047      ANOP                                                      04632500
&ZMS          SETC  '&ZMS. KEYWORDS ARE NOT VALID '                     04633000
&ZMS          SETC  '&ZMS.WITH "MF=&MF". '                              04633500
              MNOTE 8,' &ZMS '                                          04634000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04634500
.*******************************************************************    04635000
.***       GENERATE CODE IF ZMACRET=0                                   04635500
.*******************************************************************    04636000
.LIST050      ANOP  ,                                                   04636500
              AIF   (&ZMACRET NE 0).EXIT000     ERROR DETECTED          04637000
.*******************************************************************    04637500
.***       START OF SUSPEND MACRO CODE  (LIST FORM)                     04638000
.*******************************************************************    04638500
         DS    0F                                                       04639000
&XLABEL  DS    0CL24                       SUSPEND/RESUME WITH TOKEN    04639500
*                                          (INPUT/OUTPUT)               04640000
         DC    XL1'01'                     PARAMETER LEVEL INDICATOR    04640500
         DC    XL3'00'                                                  04641000
         DC    A(0)                        SUSPEND EXIT ADDRESS         04641500
         DC    F'0'                        ALET OF SUSPEND TOKEN        04642000
         DC    A(0)                        ADDRESS OF SUSPEND TOKEN     04642500
         DC    F'0'                        ALET OF EXIT PARAMETER       04642600
         DC    A(0)                        ADDRESS OF EXIT PARAMETER    04642700
.*                                                                      04643000
         AGO    .EXIT000                                                04643500
.********************************************************************   04644000
.***       EXIT MACRO                                                   04644500
.*                                                                      04645000
.* TITLE: .EXIT                                                         04645500
.*                                                                      04646000
.********************************************************************   04646500
.EXIT000 ANOP                                                           04647000
         SPACE 1                                                        04647500
.EXIT010 ANOP                                                           04648000
.EXIT020 ANOP                                                           04648500
         MEXIT                                                          04649000
         MEND                                                           04650040
********************************************************************/   04700000
*/*PB.ECHO03 START OF MACRO INVOCATION ECHO--------------------------*/ 04750000
*  IF MACLABEL ^= '' THEN          /* IF USER SPECIFIED A LABEL      */ 04800000
*     ANS(MACLABEL) COL(2);        /* THEN GENERATE IT               */ 04850000
*                                                                       04900000
*/********************************************************************/ 04950000
*/*PV.DCL01 MACRO DECLARES AND CODE GENERATION CONTROLS              */ 05000000
*/********************************************************************/ 05050000
*                                                                       05100000
*  DCL   ZSUSPEND CHAR EXTERNAL; /* YES=USED AT LEAST ONCE          */  05150000
*                                                                       05200000
*  DCL ZMACRET FIXED; DEACT ZMACRET;                                    05250000
*  DCL ZIVDOCMT FIXED; DEACT ZIVDOCMT;  /* FLAG TO INDICATE THAT THE    05275000
*                                  MACRO INVOCATION HAS BEEN PRINTED    05300000
*                                  AS A GENERATED BLOCK COMMENT  @D1A*/ 05325000
*                                                                       05350000
*  ZMACRET=0;                   /* INIT COMPILE RETURN CODE          */ 05362500
*  ZIVDOCMT=0;                  /* INIT DO-END COMMENT FLAG      @D1A*/ 05375000
*                                                                       05387500
*  DCL ZMS CHAR;   DEACT ZMS;   /* ERROR MESSAGE                     */ 05400000
*  DCL ZMA FIXED;  DEACT ZMA;       /* BAD KEYWORD COUNT             */ 05450000
*  DCL ZCVAL CHAR; DEACT ZCVAL; /* ERROR MESSAGE WORK AREA           */ 05500000
*  DCL ZI FIXED;  DEACT ZI;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 05550000
*  DCL ZJ FIXED;  DEACT ZJ;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 05600000
*  DCL ZK FIXED;  DEACT ZK;     /* INDEX FOR RANGE COLON (:)         */ 05650000
*  DCL ZL FIXED;  DEACT ZL;     /* INDEX FOR RANGE VALUE CHECKING    */ 05700000
*  DCL ZLO FIXED; DEACT ZLO;    /* LOW RANGE VALUE                   */ 05750000
*  DCL ZHI FIXED; DEACT ZHI;    /* HIGH RANGE VALUE                  */ 05800000
*  DCL ZW CHAR;   DEACT ZW;     /* WORK AREA FOR RANGE VALUE SUBLIST */ 05850000
*  DCL ZN FIXED;  DEACT ZN;     /* NUMERIC WORK VARIABLE             */ 05900000
*  DCL ZC CHAR;   DEACT ZC;     /* CHARACTER WORK VARIABLE           */ 05950000
*                                                                       06000000
*  DCL ZPRMMAX FIXED;           /* MAXIMUM PARM LIST SIZE            */ 06050000
*  DCL ZPRMNUM FIXED;           /* PARAMETER ARRAY INDEX             */ 06100000
*  DCL ZPRM(100);               /* PARAMETER ENTRY                   */ 06150000
*  DCL EHAMAXLEN FIXED EXTERNAL;   /* MAX ILIST SIZE FOR PARM LISTS  */ 06200000
*  DCL EHAMAPS CHARACTER EXTERNAL; /* MAPPINGS GENERATED BY EPILOG   */ 06250000
*  DCL EHAREGS CHARACTER EXTERNAL; /* REG DCLS                       */ 06300000
*  DCL EHALIST CHARACTER EXTERNAL; /* STANDARD PARM LIST GENERATION  */ 06350000
*/*******************************************************************/  06400000
*/*PV.XVAR01 DECLARE ALL MACRO PARAMETER VARIABLES                  */  06450000
*/*******************************************************************/  06500000
*  DCL XRB;  DEACT XRB;            /***PV.XVAR02 INPUT VALUE */         06550000
*  DCL ZXRB; DEACT ZXRB;           /***INPUT/OUTPUT CONTROL */          06600000
*  DCL XSPTOKEN;  DEACT XSPTOKEN;  /***PV.XVAR02 INPUT NAME */          06650000
*  DCL ZXSPTOKEN; DEACT ZXSPTOKEN;  /***INPUT/OUTPUT CONTROL */         06700000
*  DCL XEXIT;  DEACT XEXIT;        /***PV.XVAR02 INPUT NAME */          06750000
*  DCL ZXEXIT; DEACT ZXEXIT;       /***INPUT/OUTPUT CONTROL */          06800000
*  DCL XMF;    DEACT XMF;          /***INPUT VALUE/NAME     */          06850000
*  DCL XLIST;  DEACT XLIST;         /**INPUT PARM LIST NAME */          06900000
*  DCL XMAP;   DEACT XMAP;         /***PARAMETER LIST MAP   */          06950000
*  DCL XRSCODE;  DEACT XRSCODE;    /***PV.XVAR02 INPUT NAME */          07000000
*  DCL ZXRSCODE; DEACT ZXRSCODE;   /***INPUT/OUTPUT CONTROL */          07050000
*  DCL XEXITPARM; DEACT XEXITPARM; /***PV.XVAR03 INPUT NAME      @D1A*/ 07066600
*  DCL ZXEXITPARM; DEACT ZXEXITPARM; /*INPUT OUTPUT CONTROL      @D1A*/ 07083200
*  DCL XRELATED; DEACT XRELATED;   /***INPUT COMMENT        */          07100000
*  DCL IVDOCMT   CHARACTER;        /***DO/END COMMENT       */          07150000
*  DCL IVPLSIZE FIXED;             /***PARAMETER LIST SIZE  */          07200000
*  DCL IVSTRING CHAR;              /***EPILOG WORKAREA      */          07250000
*  DCL MACDATE  CHAR;              /* DATE MACRO LAST MODIFIED   @D1A*/ 07275000
*  DCL SFTSLOT  CHAR;              /***INDEX INTO SFT       */          07300000
*/********************************************************************/ 07350000
*/*PB.SYSL01 INVOKE SP LEVEL AND SYSTEM STATE MACROS                 */ 07400000
*/********************************************************************/ 07450000
*  DCL SYSSPLV CHAR EXTERNAL; DEACT SYSSPLV;/* SPLEVEL 1,2,3         */ 07500000
*  DCL SYSASCE CHAR EXTERNAL; DEACT SYSASCE;/* STATE ANY P AR */        07550000
*  IVPLSIZE=24;                     /* INITIALIZE PARAMETER LIST        07583300
*                                      SIZE VARIABLE             @D1C*/ 07616600
*  SFTSLOT='64';                    /* INITIALIZE SFT INDEX          */ 07650000
*                                                                       07700000
*  MACDATE='01/15/93';              /* SET MODIFICATION DATE     @P3C*/ 07707100
*                                                                       07714200
*      IVDOCMT  = '?SUSPEND '||MACLIST||' '||MACKEYS||' ' ||            07721300
*                 'MACDATE(' || MACDATE || ') '  ;  /* SETUP "DO-END"   07728400
*                      COMMENT INCLUDING MACRO INVOCATION        @D1A*/ 07735500
*                                                                       07742600
*  IF SYSASCE=''                                                        07750000
*    THEN                                                               07800000
*      DO;                                                              07850000
*        IF SYSSPLV=''                                                  07900000
*          THEN                                                         07950000
*            ANS('?SPLEVEL  (TEST);') COL(MACLMAR);                     08000000
*        IF SYSSPLV^='1' & SYSSPLV^='2'                                 08050000
*          THEN                                                         08100000
*            ANS('?SYSSTATE (TEST);') COL(MACLMAR);                     08150000
*          ELSE                                                         08200000
*            SYSASCE='P';                    /* SYSSTATE DEFAULT*/      08250000
*      END;                                                             08300000
*/********************************************************************/ 08350000
*/* *         CHECK IF BOTH RB AND SPTOKEN ARE SPECIFIED             */ 08400000
*/********************************************************************/ 08450000
*  IF (RB^='') & (SPTOKEN^='')      /* IF BOTH SPECIFIED...          */ 08500000
*     THEN                                                              08550000
*       DO;                                                             08600000
*            IF (ZIVDOCMT=0) THEN                                       08604500
*               DO;                           /* MACRO INVOCATION       08609000
*                                                NEVER PRINTED   @D1A*/ 08613500
*                 ANS(COMMENT(IVDOCMT))                                 08618000
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         08622500
*                                                COMMENT         @D1A*/ 08627000
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       08631500
*                                                                @D1A*/ 08636000
*               END;                                                    08640500
*                                                                       08645000
*        ZMS=' 8, "RB" AND "SPTOKEN" '||                                08650000
*            ' ARE MUTUALLY EXCLUSIVE.';                                08700000
*        ANS MSG('?SUSPEND ---> '||ZMS);                                08750000
*        ZMS =   '?SUSPEND ---> '||ZMS ; /* SETUP ERROR COMMENT      */ 08800000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                08850000
*        ZMACRET=8;                          /* MACRO ERROR */          08900000
*       END;                                                            08950000
*/********************************************************************/ 09000000
*/* CHECK FOR "RB" SPECIFICATION                                     */ 09050000
*/********************************************************************/ 09100000
*  IF (RB^='') THEN                                                     09150000
*       DO;                                                             09200000
*        GOTO RPROC;                /* BRANCH TO "RB" PROCEDURE      */ 09250000
*       END;                                                            09300000
*/********************************************************************/ 09350000
*/* CHECK FOR SPTOKEN                                                */ 09400000
*/********************************************************************/ 09450000
*  IF (SPTOKEN^='') THEN                                                09500000
*       DO;                                                             09550000
*        GOTO TPROC;                /* BRANCH TO SPTOKEN PROCEDURE   */ 09600000
*       END;                                                            09650000
*/********************************************************************/ 09700000
*/* CHECK FOR LIST FORM                                              */ 09750000
*/********************************************************************/ 09800000
*   IF (MF^='') THEN                                                    09850000
*       DO;                        /* VERIFY MACRO FORM              */ 09900000
*       IF (MF(1)='L') THEN                                             09950000
*          DO;                                                          10000000
*            XMF='L';                                                   10050000
*            GOTO LPROC;           /* BRANCH TO LIST PROCEDURE       */ 10100000
*          END;                    /*  MF CHECK                      */ 10150000
*/********************************************************************/ 10200000
*/* "MF" SPECIFIED THAT IS NOT LIST FORM WITHOUT SPTOKEN CHECK ERROR */ 10250000
*/********************************************************************/ 10300000
*       IF (MF(1)='E') | (MF(1)='S')  THEN                              10350000
*          DO;                                                          10400000
*                                                                       10404100
*            IF (ZIVDOCMT=0) THEN                                       10408200
*               DO;                           /* MACRO INVOCATION       10412300
*                                                NEVER PRINTED   @D1A*/ 10416400
*                 ANS(COMMENT(IVDOCMT))                                 10420500
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         10424600
*                                                COMMENT         @D1A*/ 10428700
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       10432800
*                                                                @D1A*/ 10436900
*               END;                                                    10441000
*                                                                       10445100
*            ZMS=' 8, "MF' || MF || '"' ||                              10450000
*                ' MAY ONLY BE SPECIFIED WITH ' ||                      10500000
*                '"SPTOKEN". ';                                         10550000
*            ANS MSG('?SUSPEND ---> '||ZMS);                            10600000
*            ZMS =   '?SUSPEND ---> '||ZMS ;                            10650000
*            ANS(COMMENT(ZMS)) COL(MACLMAR);                            10700000
*            XMF='S';                                                   10750000
*            ZMACRET=8;                    /* MACRO ERROR */            10800000
*            XMF='E';                                                   10850000
*            GOTO XPROC;           /* BRANCH TO EXIT                 */ 10900000
*          END;                    /*  MF(E) OR MF(S) WITHOUT SPTOKEN*/ 10950000
*       ELSE                                                            11000000
*          DO;                     /* UNRECOGNIZED MACRO FORM        */ 11050000
*                                                                       11054100
*            IF (ZIVDOCMT=0) THEN                                       11058200
*               DO;                           /* MACRO INVOCATION       11062300
*                                                NEVER PRINTED   @D1A*/ 11066400
*                 ANS(COMMENT(IVDOCMT))                                 11070500
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         11074600
*                                                COMMENT         @D1A*/ 11078700
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       11082800
*                                                                @D1A*/ 11086900
*               END;                                                    11091000
*                                                                       11095100
*              ZMS=' 8, "MF' || MF || '"' ||                            11100000
*             ' IS INCORRECT. '||                                       11150000
*             ' KEYWORD CHOICE IS:'||                                   11200000
*             ' "MF=(L,CNTRL_ADDR)".  ';                                11250000
*              ANS MSG('?SUSPEND ---> '||ZMS);                          11300000
*              ZMS =   '?SUSPEND ---> '||ZMS ;                          11350000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          11400000
*              XMF='S';                                                 11450000
*              ZMACRET=8;                    /* MACRO ERROR */          11500000
*            XMF='E';                                                   11550000
*            GOTO XPROC;           /* BRANCH TO EXIT                 */ 11600000
*          END;                    /*  MF(E) OR MF(S) WITHOUT SPTOKEN*/ 11650000
*       END;                       /* MF CHECK                       */ 11700000
*/********************************************************************/ 11750000
*/* "RB" PROCEDURE                                                   */ 11800000
*/********************************************************************/ 11850000
* RPROC:                                                                11900000
*  IF NUMBER(RB)>1                           /* CHECK POSITIONALS */    11950000
*    THEN                                                               12000000
*      DO;                                                              12050000
*                                                                       12054100
*            IF (ZIVDOCMT=0) THEN                                       12058200
*               DO;                           /* MACRO INVOCATION       12062300
*                                                NEVER PRINTED   @D1A*/ 12066400
*                 ANS(COMMENT(IVDOCMT))                                 12070500
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         12074600
*                                                COMMENT         @D1A*/ 12078700
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       12082800
*                                                                @D1A*/ 12086900
*               END;                                                    12091000
*                                                                       12095100
*        ZMS=' 8, "RB'||                     /**KPOSP* MSG*/            12100000
*            RB||                                                       12150000
*            '" "RB"'||                                                 12200000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              12250000
*        ANS MSG('?SUSPEND ---> '||ZMS);                                12300000
*        ZMS =   '?SUSPEND ---> '||ZMS ; /* SETUP ERROR COMMENT      */ 12350000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                12400000
*        ZMACRET=8;                          /* MACRO ERROR */          12450000
*      END;                                                             12500000
*/*PG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 12550000
*  XRB='';                                   /* RESET XVARIABLE */      12600000
*  IF RB(1) = 'PREVIOUS'                                                12650000
*    THEN                                                               12700000
*      XRB = 'PREVIOUS';                     /* SET XVARIABLE */        12750000
*/*PG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 12800000
*  IF RB(1) = 'CURRENT'                                                 12850000
*    THEN                                                               12900000
*      XRB = 'CURRENT';                      /* SET XVARIABLE */        12950000
*/*PG.KKWRD03 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 13000000
*  ZXRB='INPUT';                             /* SET IN/OUTPUT */        13050000
*  IF XRB=''                                 /* CHECK FOR KEYWORD */    13100000
*    THEN                                                               13150000
*      DO;                                   /* KEYWORD NOT ENTERED */  13200000
*        XRB='PREVIOUS';                     /* SET DEFAULT */          13250000
*        IF RB(1)^=''                                                   13300000
*          THEN                                                         13350000
*            DO;                                                        13400000
*                                                                       13404100
*            IF (ZIVDOCMT=0) THEN                                       13408200
*               DO;                           /* MACRO INVOCATION       13412300
*                                                NEVER PRINTED   @D1A*/ 13416400
*                 ANS(COMMENT(IVDOCMT))                                 13420500
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         13424600
*                                                COMMENT         @D1A*/ 13428700
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       13432800
*                                                                @D1A*/ 13436900
*               END;                                                    13441000
*                                                                       13445100
*              ZXRB='';                      /* RESET IN/OUTPUT */      13450000
*              ZMS=' 8, "RB'||               /**KUKWP* MSG*/            13500000
*                  RB||'"'||                                            13550000
*                  ' IS INCORRECT. '||                                  13600000
*                  ' KEYWORD CHOICE(S) ARE:'||                          13650000
*                  ' "PREVIOUS"'||           /* VALID KEYWORD */        13700000
*                  ' OR "CURRENT".';         /* VALID KEYWORD */        13750000
*              ANS MSG('?SUSPEND ---> '||ZMS);                          13800000
*              ZMS =   '?SUSPEND ---> '||ZMS ;                          13850000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          13900000
*              ZMACRET=8;                    /* MACRO ERROR */          13950000
*            END;                                                       14000000
*      END;                                                             14050000
*/********************************************************************/ 14100000
*/* CHECK FOR "SPTOKEN" OPTIONS ILLEGALLY SPECIFIED WITH "RB"        */ 14150000
*/********************************************************************/ 14200000
*  ZMS='';                          /* CLEAR MNOTE STRING VARIABLE   */ 14250000
*  ZMA=0;                           /* CLEAR COUNT OF BAD KEYS       */ 14300000
*  IF EXIT^='' THEN                                                     14350000
*    DO;                            /* ILLEGAL "EXIT" SPECIFICATION  */ 14400000
*      ZMS='"EXIT"';                                                    14450000
*      ZMA=1;                                                           14500000
*    END;                                                               14550000
*  IF RSCODE^='' THEN                                                   14600000
*    DO;                            /* ILLEGAL "RSCODE" SPECIFICATION   14650000
*                                                                    */ 14700000
*      IF ZMA=0 THEN                                                    14750000
*        DO;                        /* FIRST BAD KEY DETECTED        */ 14800000
*          ZMS='"RSCODE"';                                              14850000
*          ZMA=1;                   /* INITIALIZE ERROR COUNT        */ 14900000
*        END;                                                           14950000
*      ELSE                                                             15000000
*        DO;                        /* MULTIPLE BAD KEYS DETECTED    */ 15050000
*          ZMS = ZMS || ', "RSCODE"';                                   15100000
*          ZMA=ZMA+1;               /* BUMP COUNT OF ERRORS          */ 15150000
*        END;                                                           15200000
*    END;                                                               15250000
*  IF EXITPARM^='' THEN                                                 15300000
*    DO;                            /* ILLEGAL "EXITPARM"               15350000
*                                      SPECIFICATION             @D1A*/ 15400000
*      IF ZMA=0 THEN                                                    15450000
*        DO;                        /* FIRST BAD KEY DETECTED    @D1A*/ 15500000
*          ZMS='"EXITPARM"';        /*                           @D1A*/ 15550000
*          ZMA=1;                   /* INITIALIZE ERROR COUNT    @D1A*/ 15600000
*        END;                                                           15650000
*      ELSE                                                             15700000
*        DO;                        /* MULTIPLE BAD KEYS         @D1A*/ 15750000
*          ZMS = ZMS || ', "EXITPARM"';                                 15800000
*          ZMA=ZMA+1;               /* BUMP COUNT OF ERRORS      @D1A*/ 15850000
*        END;                                                           15900000
*    END;                                                     /* @D1A*/ 15950000
*  IF MF^='' THEN                                                       38143100
*    DO;                            /* ILLEGAL "MF" SPECIFICATION       38143200
*                                                                    */ 38143300
*      IF ZMA=0 THEN                                                    38143400
*        DO;                        /* FIRST BAD KEY DETECTED        */ 38143500
*          ZMS='"MF"';                                                  38143600
*          ZMA=1;                   /* INITIALIZE ERROR COUNT        */ 38143700
*        END;                                                           38143800
*      ELSE                                                             38143900
*        DO;                        /* MULTIPLE BAD KEYS DETECTED    */ 38144000
*          ZMS = ZMS || ', "MF"';                                       38144100
*          ZMA=ZMA+1;               /* BUMP COUNT OF ERRORS          */ 38144200
*        END;                                                           38144300
*    END;                                                               38144400
*  IF ZMA>0 THEN                                                        38144500
*    DO;                            /* BAD KEY(S) DETECTED           */ 38144600
*      IF ZMA=1 THEN                                                    38144700
*        DO;                        /* SINGLE BAD KEY                */ 38144800
*                                                                       38144900
*            IF (ZIVDOCMT=0) THEN                                       38145000
*               DO;                           /* MACRO INVOCATION       38145100
*                                                NEVER PRINTED   @D1A*/ 38145200
*                 ANS(COMMENT(IVDOCMT))                                 38145300
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         38145400
*                                                COMMENT         @D1A*/ 38145500
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       38145600
*                                                                @D1A*/ 38145700
*               END;                                                    38145800
*                                                                       38145900
*              ZMS=' 8, ' || ZMS ||                                     38146000
*                  ' KEYWORD IS NOT VALID WITH ' ||                     38146100
*                  '"RB' || RB || '. ';                                 38146200
*              ANS MSG('?SUSPEND ---> '||ZMS);                          38146300
*              ZMS =   '?SUSPEND ---> '||ZMS ;                          38146400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          38146500
*              ZMACRET=8;                    /* MACRO ERROR */          38146600
*        END;                                                           38146700
*      ELSE                                                             38146800
*        DO;                                                            38146900
*                                                                       38147000
*            IF (ZIVDOCMT=0) THEN                                       38147100
*               DO;                           /* MACRO INVOCATION       38147200
*                                                NEVER PRINTED   @D1A*/ 38147300
*                 ANS(COMMENT(IVDOCMT))                                 38147400
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         38147500
*                                                COMMENT         @D1A*/ 38147600
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       38147700
*                                                                @D1A*/ 38147800
*               END;                                                    38147900
*                                                                       38148000
*              ZMS=' 8, ' || ZMS ||                                     38148100
*                  ' KEYWORDS ARE NOT VALID WITH ' ||                   38148200
*                  '"RB' || RB || '. ';                                 38148300
*              ANS MSG('?SUSPEND ---> '||ZMS);                          38148400
*              ZMS =   '?SUSPEND ---> '||ZMS ;                          38148500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          38148600
*              ZMACRET=8;                    /* MACRO ERROR */          38148700
*        END;                                                           38148800
*    END;                                                               38148900
*/********************************************************************/ 38149000
*/* PROCESS "REGS" KEYWORD                                           */ 38149100
*/********************************************************************/ 38149200
*  IF REGS ^= '' THEN                        /*                      */ 38149300
*  DO;                                       /*                      */ 38149400
*    /* We avoid using TRANSLATE so that PLS users of SUSPEND can       38149500
*       continue to work. They cannot specify REGS.                  */ 38149600
*    DCL ASAXMACUCSTRING CHAR EXT;                                      38149700
*    ANS('?ASAXMAC UpperCase('||REGS(1)||');') RESCAN;                  38149800
*    IF ASAXMACUCSTRING ^= 'STDSAVE' THEN                               38149900
*    DO;                                     /*                      */ 38150000
*              ZMS=' 8, ' ||                                            38150100
*                  ' REGS OPERAND MUST BE "STDSAVE"';                   38150200
*              ANS MSG('?SUSPEND ---> '||ZMS);                          38150300
*              ZMS =   '?SUSPEND ---> '||ZMS ;                          38150400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          38150500
*              ZMACRET=8;                    /* MACRO ERROR */          38150600
*    END;                                    /*                      */ 38150700
*    ELSE                                    /*                      */ 38150800
*      ZXREGS = 'STDSAVE';                   /*                      */ 38150900
*  END;                                      /*                      */ 38151000
*/********************************************************************/ 38151100
*/* PROCESS "RELATED" KEYWORD                                        */ 38151200
*/********************************************************************/ 38151300
*  ZXRELATED='INPUT';                        /* SET IN/OUTPUT */        38151400
*  IF RELATED   ^=''                         /* CHECK FOR NULL */       38151500
*    THEN                                                               38151600
*      XRELATED=RELATED   ;                  /* SET XVARIABLE */        38151700
*  IF ZXRELATED^='' &                        /* NOT IN/OUTPUT */        38151800
*     XRELATED^='NULL' &                     /* NOT STAR DEFAULT */     38151900
*     LENGTH(XRELATED)>256                                              38152000
*    THEN                                                               38152100
*      DO;                                                              38152200
*                                                                       38152300
*            IF (ZIVDOCMT=0) THEN                                       38152400
*               DO;                           /* MACRO INVOCATION       38152500
*                                                NEVER PRINTED   @D1A*/ 38152600
*                 ANS(COMMENT(IVDOCMT))                                 38152700
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         38152800
*                                                COMMENT         @D1A*/ 38152900
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       38153000
*                                                                @D1A*/ 38153100
*               END;                                                    38153200
*                                                                       38153300
*        ZXRELATED='';                       /* RESET IN/OUTPUT */      38153400
*        ZMS=' 8, "RELATED'||                /**KLNGP* MSG*/            38153500
*            RELATED||                                                  38153600
*            '" ARGUMENT 1 EXCEEDS THE MAXIMUM'||                       38153700
*            ' LENGTH OF 256 CHARACTERS. ';                             38153800
*        ANS MSG('?SUSPEND ---> '||ZMS);                                38153900
*        ZMS =   '?SUSPEND ---> '||ZMS ;                                38154000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                38154100
*        ZMACRET=8;                          /* MACRO ERROR */          38154200
*      END;                                                             38154300
*/********************************************************************/ 38154400
*/***PE.MR01 GENERATE CODE IF ZMACRET=0                              */ 38154500
*/********************************************************************/ 38154600
*  IF ZMACRET = 0                                                       38154700
*    THEN                                                               38154800
*      DO;                                                              38154900
*      ANS('DO; '||COMMENT(IVDOCMT))                                    38155000
*          NORESCAN COL(MACLMAR);                                       38155100
*        IF INDEX(EHAREGS,'11P') = 0 THEN          /*            @LxA*/ 38155200
*          EHAREGS=EHAREGS||'11P'; /* GPR11P                     @LxA*/ 38155300
*        IF INDEX(EHAREGS,'12P') = 0 THEN          /*            @LxA*/ 38155400
*          EHAREGS=EHAREGS||'12P'; /* GPR12P                     @LxA*/ 38155500
*        IF INDEX(EHAREGS,'13P') = 0 THEN          /*            @LxA*/ 38155600
*          EHAREGS=EHAREGS||'13P'; /* GPR13P                     @LxA*/ 38155700
*        IF INDEX(EHAREGS,'14P') = 0 THEN          /*            @LxA*/ 38155800
*          EHAREGS=EHAREGS||'14P'; /* GPR14P                     @LxA*/ 38155900
*       ENTRYN = 'IANY24';                         /*            @LxA*/ 38156000
*          IF ZXREGS = 'STDSAVE' THEN              /*            @LxA*/ 38156100
*          DO;                                     /*            @LxA*/ 38156200
*        IF INDEX(EHAREGS,'02P') = 0 THEN          /*            @LxA*/ 38156300
*          EHAREGS=EHAREGS||'02P'; /* GPR02P                     @LxA*/ 38156400
*       ENTRYN = 'SUSPEND_'||MACINDEX;             /*            @LxA*/ 38156500
*       ANS('DCL '||ENTRYN||' ENTRY BASED VALRG(*) '||                  38156600
*          'OPTIONS(SETS(GPR11P,GPR12P,GPR13P)                          38156700
*                 NOSAVE(GPR11P,GPR12P,GPR13P));')                      38156800
*           SKIP NORESCAN;                                    /* @LxA*/ 38156900
*       ANS('DCL R13_SAVE_'||MACINDEX||' PTR REG(*);')                  38157000
*           SKIP NORESCAN;                                    /* @LxA*/ 38157100
*       ANS('DCL 1 SaveArea_'||MACINDEX||' Char(72) Based(GPR13P)       38157200
*                 ,2 * Char(12)                                         38157300
*                 ,2 SA1412_'||MACINDEX||' Char(60)                     38157400
*                  ,3 SA14_'||MACINDEX||' Char(4)                       38157500
*                  ,3 * Char(12)                                        38157600
*                  ,3 SA212_'||MACINDEX||' Char(44)                     38157700
*            ;')                                                        38157800
*           SKIP NORESCAN;                                    /* @LxA*/ 38157900
*       ANS('RFY GPR13P RSTD;')                                         38158000
*           SKIP NORESCAN;                                    /* @LxA*/ 38158100
*       ANS('R13_SAVE_'||MACINDEX||' = GPR13P;')                        38158200
*           SKIP NORESCAN;                                    /* @LxA*/ 38158300
*    /* We must GEN the STM/LM, with pseudo FLOWS information so that   38158400
*       the compiler understands the register history and can           38158500
*       successfully assign a register for R13_Save                  */ 38158600
*       ANS('GEN FLOWS(LM_'||Macindex||') '||                           38158700
*           'REFS(GPR14P,GPR12P,GPR13P'||                               38158800
*                ',SA1412_'||MACINDEX||')')                             38158900
*           SKIP NORESCAN;                                    /* @LxA*/ 38159000
*       ANS(                                                            38159100
*'(STM   GPR14P,GPR12P,SA1412_'||MACINDEX||'(GPR13P));')                38159200
*           SKIP NORESCAN COL(11);                            /* @LxA*/ 38159300
*       ANS('RFY GPR13P UNRSTD;')                                       38159400
*           SKIP NORESCAN;                                    /* @LxA*/ 38159500
*          END;                                    /*            @LxA*/ 38159600
*                                                                       38159700
*       ANS('RFY (GPR11P,GPR12P,GPR13P) RSTD;')                         38159800
*           SKIP NORESCAN;                                    /* @LxA*/ 38159900
*              ANS('RFY GPR01F RSTD;') NORESCAN COL(MACLMAR);           38160000
*              ANS('RFY GPR15P RSTD;') NORESCAN COL(MACLMAR);           38160100
*      IF (XRB='CURRENT') THEN                                          38160200
*        DO;                        /* PROCESS CURRENT RB OPTION     */ 38160300
*          ANS('GPR01F=0;' ||                                           38160400
*              COMMENT('SUSPEND CURRENT RB'))                           38160500
*                  NORESCAN COL(MACLMAR);                               38160600
*          ANS('CALL CVTSUSP->'||ENTRYN||';' ||                         38160700
*              COMMENT('CALL SUSPEND'))                                 38160800
*                  NORESCAN COL(MACLMAR);                               38160900
*        END;                                                           38161000
*      ELSE                                                             38161100
*        DO;                        /* PROCESS PREVIOUS RB OPTION    */ 38161200
*          ANS('GPR01F=4;' ||                                           38161300
*              COMMENT('SUSPEND PREVIOUS RB'))                          38161400
*                  NORESCAN COL(MACLMAR);                               38161500
*          ANS('CALL CVTSUSP->'||ENTRYN||';' ||                         38161600
*              COMMENT('CALL SUSPEND'))                                 38161700
*                  NORESCAN COL(MACLMAR);                               38161800
*        END;                                                           38161900
*                  ANS('RFY GPR01F UNRSTD;') NORESCAN COL(MACLMAR);     38162000
*                  ANS('RFY GPR15P UNRSTD;') NORESCAN COL(MACLMAR);     38162100
*       ANS('RFY (GPR11P,GPR12P,GPR13P) UNRSTD;')                       38162200
*           SKIP NORESCAN;                                    /* @LxA*/ 38162300
*          IF ZXREGS = 'STDSAVE' THEN              /*            @LxA*/ 38162400
*          DO;                                     /*            @LxA*/ 38162500
*       ANS('RFY GPR13P RSTD;')                                         38162600
*           SKIP NORESCAN;                                    /* @LxA*/ 38162700
*       ANS('GPR13P = R13_SAVE_'||MACINDEX||';')                        38162800
*           SKIP NORESCAN;                                    /* @LxA*/ 38162900
*       ANS('GEN EXIT NOSEQFLOW '||                                     38163000
*           'REFS(GPR14P,GPR02P,GPR12P,GPR13P'||                        38163100
*                ',SA14_'||MACINDEX||                                   38163200
*                ',SA212_'||MACINDEX||');')                             38163300
*           SKIP NORESCAN;                                    /* @LxA*/ 38163400
*       ANS(                                                            38163500
*' L     GPR14P,SA14_'||MACINDEX||'(GPR13P)')                           38163600
*           SKIP NORESCAN COL(11);                            /* @LxA*/ 38163700
*       ANS(                                                            38163800
*' LM    GPR02P,GPR12P,SA212_'||MACINDEX||'(GPR13P)')                   38163900
*           SKIP NORESCAN COL(11);                            /* @LxA*/ 38164000
*       ANS('@ENDGEN;')                                                 38164100
*           SKIP NORESCAN;                                    /* @LxA*/ 38164200
*       ANS('LM_'||MACINDEX||':;')                                      38164300
*           SKIP NORESCAN;                                    /* @LxA*/ 38164400
*       ANS('RFY GPR13P UNRSTD;')                                       38164500
*           SKIP NORESCAN;                                    /* @LxA*/ 38164600
*          END;                                    /*            @LxA*/ 38164700
*      ANS('END; '||COMMENT(IVDOCMT))                                   38164800
*          NORESCAN COL(MACLMAR);                                       38164900
*  ANS(MACCONC||'SPACE;') NORESCAN COL(MACLMAR);                        38165000
*  ANS(' ') NORESCAN COL(MACLMAR);                                      38165100
*/*******************************************************************/  38165200
*/*  PO.L18 END OF CODE TO BE BYPASSED WHEN ZMACRET ^= 0            */  38165300
*/*******************************************************************/  38165400
*      END;                                                             38165500
*/*-----------------------------------------------------------------*/  38165600
*/*  MVS  -ENSURE THAT GPRS NEEDED BY MACRO WILL BE PROVIDED BY     */  38165700
*/*        ?EPILOG                                                  */  38165800
*/*-----------------------------------------------------------------*/  38165900
*        IF INDEX(EHAREGS,'01F')=0                                      38166000
*          THEN                                                         38166100
*            EHAREGS=EHAREGS||'01F'; /* GPR01F                      */  38166200
*        IF INDEX(EHAREGS,'15P')=0                                      38166300
*          THEN                                                         38166400
*            EHAREGS=EHAREGS||'15P'; /* GPR15P                      */  38166500
*  XPROC: ;                                                             38166600
*  RETURN CODE(ZMACRET);                                                38166700
*/********************************************************************/ 38166800
*/* PROCESS "SPTOKEN" OPTIONS                                        */ 38166900
*/********************************************************************/ 38167000
* TPROC:                                                                38167100
*/********************************************************************/ 38167200
*/***PG.MF00  PROCESS MF MACRO FORMS                                 */ 38167300
*/********************************************************************/ 38167400
*   IF (MF='') | (MF(1)='S') THEN                                       38167500
*       DO;                                                             38167600
*         XMF='S';                                                      38167700
*       END;                                                            38167800
*   IF MF(1)='L' THEN                                                   38167900
*     DO;                                                               38168000
*                                                                       38168100
*            IF (ZIVDOCMT=0) THEN                                       38168200
*               DO;                           /* MACRO INVOCATION       38168300
*                                                NEVER PRINTED   @D1A*/ 38168400
*                 ANS(COMMENT(IVDOCMT))                                 38168500
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         38168600
*                                                COMMENT         @D1A*/ 38168700
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       38168800
*                                                                @D1A*/ 38168900
*               END;                                                    38169000
*                                                                       38169100
*              ZMS=' 8, "MF' || MF || '"' ||                            38169200
*                  ' KEYWORD IS NOT VALID WITH ' ||                     38169300
*                  '"SPTOKEN". ';                                       38169400
*              ANS MSG('?SUSPEND ---> '||ZMS);                          38169500
*              ZMS =   '?SUSPEND ---> '||ZMS ;                          38169600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          38169700
*              XMF='S';                                                 38169800
*              ZMACRET=8;                    /* MACRO ERROR */          38169900
*              END;                                                     38170000
*   IF MF(1)='E' THEN                                                   38170100
*     DO;                                                               38170200
*       XMF='E';                                                        38170300
*       IF NUMBER(MF)<2                      /* CHECK POSITIONALS */    38170400
*          THEN                                                         38170500
*             DO;                                                       38170600
*                                                                       38170700
*            IF (ZIVDOCMT=0) THEN                                       38170800
*               DO;                           /* MACRO INVOCATION       38170900
*                                                NEVER PRINTED   @D1A*/ 38171000
*                 ANS(COMMENT(IVDOCMT))                                 38171100
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         38171200
*                                                COMMENT         @D1A*/ 38171300
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       38171400
*                                                                @D1A*/ 38171500
*               END;                                                    38171600
*                                                                       38171700
*               ZMS=' 8, "MF'||                                         38171800
*                   MF||'"'||                                           38171900
*                   ' IS INCORRECT. '||                                 38172000
*                   ' PARAMETER LIST NAME IS REQUIRED. ';               38172100
*               ANS MSG('?SUSPEND ---> '||ZMS);                         38172200
*               ZMS =   '?SUSPEND ---> '||ZMS ;                         38172300
*               ANS(COMMENT(ZMS)) COL(MACLMAR);                         38172400
*               ZMACRET=8;                   /* MACRO ERROR */          38172500
*             END;                                                      38172600
*     END;                                                              38172700
*   IF XMF='' THEN                                                      38172800
*     DO;                           /* UNRECOGNIZED MACRO FORM       */ 38172900
*                                                                       38173000
*            IF (ZIVDOCMT=0) THEN                                       38173100
*               DO;                           /* MACRO INVOCATION       38173200
*                                                NEVER PRINTED   @D1A*/ 38173300
*                 ANS(COMMENT(IVDOCMT))                                 38173400
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         38173500
*                                                COMMENT         @D1A*/ 38173600
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       38173700
*                                                                @D1A*/ 38173800
*               END;                                                    38173900
*                                                                       38174000
*         ZMS=' 8, "MF'||                                               38174100
*             MF||'"'||                                                 38174200
*             ' IS INCORRECT. '||                                       38174300
*             ' KEYWORD CHOICE IS:'    ||                               38174400
*             ' "MF=(E,CNTRL_ADDR)".  ';                                38174500
*         ANS MSG('?SUSPEND ---> '||ZMS);                               38174600
*         ZMS =   '?SUSPEND ---> '||ZMS ;                               38174700
*         ANS(COMMENT(ZMS)) COL(MACLMAR);                               38174800
*         ZMACRET=8;                          /* MACRO ERROR */         38174900
*         XMF='S';                  /* SET MACRO FORM TO DEFAULT     */ 38175000
*     END;                                                              38175100
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 38175200
*  IF NUMBER(SPTOKEN)>1                      /* CHECK POSITIONALS */    38175300
*    THEN                                                               38175400
*      DO;                                                              38175500
*                                                                       38175600
*            IF (ZIVDOCMT=0) THEN                                       38175700
*               DO;                           /* MACRO INVOCATION       38175800
*                                                NEVER PRINTED   @D1A*/ 38175900
*                 ANS(COMMENT(IVDOCMT))                                 38176000
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         38176100
*                                                COMMENT         @D1A*/ 38176200
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       38176300
*                                                                @D1A*/ 38176400
*               END;                                                    38176500
*                                                                       38176600
*        ZMS=' 8, "SPTOKEN'||                /**KPOSP* MSG*/            38176700
*            SPTOKEN||                                                  38176800
*            '" "SPTOKEN"'||                                            38176900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              38177000
*        ANS MSG('?SUSPEND ---> '||ZMS);                                38177100
*        ZMS =   '?SUSPEND ---> '||ZMS ;                                38177200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                38177300
*        ZMACRET=8;                          /* MACRO ERROR */          38177400
*      END;                                                             38177500
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 38177600
*  XSPTOKEN=SPTOKEN(1);                      /* SET XVARIABLE */        38177700
*  IF SPTOKEN(1)=''                          /* CHECK FOR NULL */       38177800
*   THEN                                                                38177900
*    DO;                                     /* KEY IS REQUIRED */      38178000
*                                                                       38178100
*            IF (ZIVDOCMT=0) THEN                                       38178200
*               DO;                           /* MACRO INVOCATION       38178300
*                                                NEVER PRINTED   @D1A*/ 38178400
*                 ANS(COMMENT(IVDOCMT))                                 38178500
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         38178600
*                                                COMMENT         @D1A*/ 38178700
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       38178800
*                                                                @D1A*/ 38178900
*               END;                                                    38179000
*                                                                       38179100
*        ZXSPTOKEN='';                       /* RESET IN/OUTPUT */      38179200
*        ZMS=' 8,  '||                                                  38179300
*            ' "SPTOKEN" KEY AND ITS ARGUMENT ARE'||                    38179400
*            ' REQUIRED.';                   /**KRQDP* MSG*/            38179500
*        ANS MSG('?SUSPEND ---> '||ZMS);                                38179600
*        ZMS =   '?SUSPEND ---> '||ZMS ;                                38179700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                38179800
*        ZMACRET=8;                          /* MACRO ERROR */          38179900
*    END;                                                               38180000
*    ELSE                                                               38180100
*     ZXSPTOKEN='INPUT';                     /* SET IN/OUTPUT */        38180200
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 38180300
*  IF NUMBER(EXIT)>1                         /* CHECK POSITIONALS */    38180400
*    THEN                                                               38180500
*      DO;                                                              38180600
*                                                                       38180700
*            IF (ZIVDOCMT=0) THEN                                       38180800
*               DO;                           /* MACRO INVOCATION       38180900
*                                                NEVER PRINTED   @D1A*/ 38181000
*                 ANS(COMMENT(IVDOCMT))                                 38181100
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         38181200
*                                                COMMENT         @D1A*/ 38181300
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       38181400
*                                                                @D1A*/ 38181500
*               END;                                                    38181600
*                                                                       38181700
*        ZMS=' 8, "EXIT'||                   /**KPOSP* MSG*/            38181800
*            EXIT||                                                     38181900
*            '" "EXIT"'||                                               38182000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              38182100
*        ANS MSG('?SUSPEND ---> '||ZMS);                                38182200
*        ZMS =   '?SUSPEND ---> '||ZMS ;                                38182300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                38182400
*        ZMACRET=8;                          /* MACRO ERROR */          38182500
*      END;                                                             38182600
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 38182700
*  XEXIT=EXIT(1);                            /* SET XVARIABLE */        38182800
*  IF EXIT(1)=''                             /* CHECK FOR NULL */       38182900
*   THEN                                                                38183000
*    DO;                                     /* KEY IS REQUIRED */      38183100
*                                                                       38183200
*            IF (ZIVDOCMT=0) THEN                                       38183300
*               DO;                           /* MACRO INVOCATION       38183400
*                                                NEVER PRINTED   @D1A*/ 38183500
*                 ANS(COMMENT(IVDOCMT))                                 38183600
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         38183700
*                                                COMMENT         @D1A*/ 38183800
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       38183900
*                                                                @D1A*/ 38184000
*               END;                                                    38184100
*                                                                       38184200
*        ZXEXIT='';                          /* RESET IN/OUTPUT */      38184300
*        ZMS=' 8,  '||                                                  38184400
*            ' "EXIT" KEY AND ITS ARGUMENT ARE'||                       38184500
*            ' REQUIRED.';                   /**KRQDP* MSG*/            38184600
*        ANS MSG('?SUSPEND ---> '||ZMS);                                38184700
*        ZMS =   '?SUSPEND ---> '||ZMS ;                                38184800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                38184900
*        ZMACRET=8;                          /* MACRO ERROR */          38185000
*    END;                                                               38185100
*    ELSE                                                               38185200
*     ZXEXIT='INPUT';                        /* SET IN/OUTPUT */        38185300
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 38185400
*  IF RSCODE='RSCODE' | RSCODE='()'          /*CHCK ENTRY*/             38185500
*    THEN                                                               38185600
*      DO;                                                              38185700
*                                                                       38185800
*            IF (ZIVDOCMT=0) THEN                                       38185900
*               DO;                           /* MACRO INVOCATION       38186000
*                                                NEVER PRINTED   @D1A*/ 38186100
*                 ANS(COMMENT(IVDOCMT))                                 38186200
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         38186300
*                                                COMMENT         @D1A*/ 38186400
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       38186500
*                                                                @D1A*/ 38186600
*               END;                                                    38186700
*                                                                       38186800
*        ZMS=' 8, THE "RSCODE" KEY'||        /**KOPTP* MSG*/            38186900
*            ' MUST CONTAIN ONE'||                                      38187000
*            ' (OR MORE) ARGUMENT(S).';                                 38187100
*        ANS MSG('?SUSPEND ---> '||ZMS);                                38187200
*        ZMS =   '?SUSPEND ---> '||ZMS ;                                38187300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                38187400
*        ZMACRET=8;                          /* MACRO ERROR */          38187500
*      END;                                                             38187600
*  IF NUMBER(RSCODE)>1                       /* CHECK POSITIONALS */    38187700
*    THEN                                                               38187800
*      DO;                                                              38187900
*                                                                       38188000
*            IF (ZIVDOCMT=0) THEN                                       38188100
*               DO;                           /* MACRO INVOCATION       38188200
*                                                NEVER PRINTED   @D1A*/ 38188300
*                 ANS(COMMENT(IVDOCMT))                                 38188400
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         38188500
*                                                COMMENT         @D1A*/ 38188600
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       38188700
*                                                                @D1A*/ 38188800
*               END;                                                    38188900
*                                                                       38189000
*        ZMS=' 8, "RSCODE'||                 /**KPOSP* MSG*/            38189100
*            RSCODE||                                                   38189200
*            '" "RSCODE"'||                                             38189300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              38189400
*        ANS MSG('?SUSPEND ---> '||ZMS);                                38189500
*        ZMS =   '?SUSPEND ---> '||ZMS ;                                38189600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                38189700
*        ZMACRET=8;                          /* MACRO ERROR */          38189800
*      END;                                                             38189900
*  IF RSCODE(1)^=''                          /* CHECK FOR PARMS */      38190000
*    THEN                                                               38190100
*      XRSCODE=RSCODE(1);                    /* SET XVARIABLE */        38190200
*/********************************************************************/ 38190300
*/* PROCESS "EXITPARM" KEYWORD                                       */ 38190400
*/********************************************************************/ 38190500
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 38190600
*  IF EXITPARM='EXITPARM' | EXITPARM='()'    /* CHECK ENTRY      @D1A*/ 38190700
*    THEN                                                               38190800
*      DO;                                   /* ERROR DETECTED   @D1A*/ 38190900
*                                                                       38191000
*            IF (ZIVDOCMT=0) THEN                                       38191100
*               DO;                           /* MACRO INVOCATION       38191200
*                                                NEVER PRINTED   @D1A*/ 38191300
*                 ANS(COMMENT(IVDOCMT))                                 38191400
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         38191500
*                                                COMMENT         @D1A*/ 38191600
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       38191700
*                                                                @D1A*/ 38191800
*               END;                                                    38191900
*                                                                       38192000
*        ZMS=' 8, THE "EXITPARM" KEY'||                                 38192100
*            ' MUST CONTAIN ONE'||                                      38192200
*            ' (OR MORE) ARGUMENT(S).';      /* ASSIGN MESSAGE   @D1A*/ 38192300
*        ANS MSG('?SUSPEND ---> '||ZMS);                                38192400
*        ZMS =   '?SUSPEND ---> '||ZMS ;                                38192500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                38192600
*        ZMACRET=8;                        /*   MACRO ERROR      @D1A*/ 38192700
*      END;                                                             38192800
*  IF NUMBER(EXITPARM)>1                   /* CHECK POSITIONALS  @D1A*/ 38192900
*    THEN                                                               38193000
*      DO;                                 /* ERROR DETECTED     @D1A*/ 38193100
*                                                                       38193200
*            IF (ZIVDOCMT=0) THEN                                       38193300
*               DO;                           /* MACRO INVOCATION       38193400
*                                                NEVER PRINTED   @D1A*/ 38193500
*                 ANS(COMMENT(IVDOCMT))                                 38193600
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         38193700
*                                                COMMENT         @D1A*/ 38193800
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       38193900
*                                                                @D1A*/ 38194000
*               END;                                                    38194100
*                                                                       38194200
*        ZMS=' 8, "EXITPARM'||                                          38194300
*            EXITPARM||                                                 38194400
*            '" "EXITPARM"'||                                           38194500
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              38194600
*        ANS MSG('?SUSPEND ---> '||ZMS);                                38194700
*        ZMS =   '?SUSPEND ---> '||ZMS ;                                38194800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                38194900
*        ZMACRET=8;                          /* MACRO ERROR      @D1A*/ 38195000
*      END;                                                             38195100
*  IF EXITPARM(1)^=''                        /* CHECK PARMS      @D1A*/ 38195200
*    THEN                                                               38195300
*      XEXITPARM=EXITPARM(1);                  /* SET XVARIABLE  @D1A*/ 38195400
*/********************************************************************/ 38195500
*/* PROCESS "RELATED" KEYWORD                                        */ 38195600
*/********************************************************************/ 38195700
*  ZXRELATED='INPUT';                        /* SET IN/OUTPUT */        38195800
*  IF RELATED   ^=''                         /* CHECK FOR NULL */       38195900
*    THEN                                                               38196000
*      XRELATED=RELATED   ;                  /* SET XVARIABLE */        38196100
*  IF ZXRELATED^='' &                        /* NOT IN/OUTPUT */        38196200
*     XRELATED^='NULL' &                     /* NOT STAR DEFAULT */     38196300
*     LENGTH(XRELATED)>256                                              38196400
*    THEN                                                               38196500
*      DO;                                                              38196600
*                                                                       38196700
*            IF (ZIVDOCMT=0) THEN                                       38196800
*               DO;                           /* MACRO INVOCATION       38196900
*                                                NEVER PRINTED   @D1A*/ 38197000
*                 ANS(COMMENT(IVDOCMT))                                 38197100
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         38197200
*                                                COMMENT         @D1A*/ 38197300
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       38197400
*                                                                @D1A*/ 38197500
*               END;                                                    38197600
*                                                                       38197700
*        ZXRELATED='';                       /* RESET IN/OUTPUT */      38197800
*        ZMS=' 8, "RELATED'||                /**KLNGP* MSG*/            38197900
*            RELATED||                                                  38198000
*            '" ARGUMENT 1 EXCEEDS THE MAXIMUM'||                       38198100
*            ' LENGTH OF 256 CHARACTERS. ';                             38198200
*        ANS MSG('?SUSPEND ---> '||ZMS);                                38198300
*        ZMS =   '?SUSPEND ---> '||ZMS ;                                38198400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                38198500
*        ZMACRET=8;                          /* MACRO ERROR */          38198600
*      END;                                                             38198700
*/********************************************************************/ 38198800
*/***PE.MR01 GENERATE CODE IF ZMACRET=0                              */ 38198900
*/********************************************************************/ 38199000
*  IF ZMACRET = 0                                                       38199100
*    THEN                                                               38199200
*      DO;                                                              38199300
*/********************************************************************/ 38199400
*/* GET NAME OF PARAMETER LIST                                       */ 38199500
*/********************************************************************/ 38199600
*  IF XMF='E' THEN                                                      38199700
*    DO;                            /* EXECUTE FORM                  */ 38199800
*      XLIST=MF(2);                 /* ASSIGN NAME FOR LIST          */ 38199900
*    END;                                                               38200000
*  ELSE                                                                 38200100
*    DO;                            /* STANDARD FORM                 */ 38200200
*      XLIST='ILIST';               /* ASSIGN NAME FROM EPILOG       */ 38200300
*    END;                                                               38200400
*/********************************************************************/ 38200500
*/* GET MAP FOR PARAMETER LIST                                       */ 38200600
*/********************************************************************/ 38200700
*  IF (SYSASCE='AR') | (SYSASCE='ANY') THEN                             38200800
*    DO;                            /* AR ASC MODE PROGRAM           */ 38200900
*      XMAP='SRP$LIST';             /* USE ALET-QUALIFIED MAPPING       38201000
*                                                                @P1C*/ 38201100
*    END;                                                               38201200
*  ELSE                                                                 38201300
*    DO;                            /* PRIMARY ASC MODE PROGRAM      */ 38201400
*      XMAP='SRP$PRIM';             /* USE PRIMARY MAPPING       @P1C*/ 38201500
*    END;                                                               38201600
*      /**************************************************************/ 38201700
*      /* ENSURE A STANDARD LIST LARGE ENOUGH FOR THE SUSPEND        */ 38201800
*      /* WITH TOKEN PARAMETER LIST IS GENRATED BY EPILOG            */ 38201900
*      /**************************************************************/ 38202000
*      IF EHAMAXLEN<IVPLSIZE THEN   /* IF THE SUSPEND WITH TOKEN        38202100
*                                      PARAMETER LIST IS LARGER THAN    38202200
*                                      THE CURRENT MAXIMUM           */ 38202300
*        EHAMAXLEN=IVPLSIZE;        /* INCREASE THE MAXIMUM PARAMETER   38202400
*                                      LIST SIZE FOR EPILOG          */ 38202500
*  /******************************************************************/ 38202600
*  /* NOW, GENERATE CODE                                             */ 38202700
*  /******************************************************************/ 38202800
*      ANS('DO; '||COMMENT(IVDOCMT))                                    38202900
*          NORESCAN COL(MACLMAR);                                       38203000
*          ANS('RFY GPR01P RSTD;') NORESCAN COL(MACLMAR);               38203100
*          ANS('RFY GPR14F RSTD;') NORESCAN COL(MACLMAR);               38203200
*          ANS('RFY GPR00F RSTD;') NORESCAN COL(MACLMAR);               38203300
*          ANS(MACCONC||'SPACE;') NORESCAN COL(MACLMAR);                38203400
*          ANS('SRP$VIA=ALET('|| XLIST || '); ' ||                      38203500
*             COMMENT('GET ALET FOR PARAMETER LIST'))                   38203600
*                NORESCAN COL(MACLMAR); /*                       @P1C*/ 38203700
*          ANS('SRP$PTR=ADDR('|| XLIST || '); ' ||                      38203800
*             COMMENT('GET ADDRESS OF PARAMETER LIST'))                 38203900
*                NORESCAN COL(MACLMAR); /*                       @P1C*/ 38204000
*          ANS(XMAP || '=' || XMAP || '&&' || XMAP || '; ' ||           38204100
*             COMMENT('CLEAR THE PARAMETER LIST'))                      38204200
*                NORESCAN COL(MACLMAR);                                 38204300
*          ANS(XMAP || '.SRP$LEVEL=1; ' ||                              38204400
*             COMMENT('SET PARAMETER LIST LEVEL INDICATOR'))            38204500
*                NORESCAN COL(MACLMAR); /*                       @P1C*/ 38204600
*          ANS(XMAP || '.SRP$ALET=ALET('|| XSPTOKEN || '); '||          38204700
*             COMMENT('GET ALET FOR TOKEN'))                            38204800
*                NORESCAN COL(MACLMAR); /*                       @P1C*/ 38204900
*          ANS(XMAP || '.SRP$TOKEN=ADDR('|| XSPTOKEN || '); '||         38205000
*             COMMENT('GET ADDRESS OF TOKEN'))                          38205100
*                NORESCAN COL(MACLMAR); /*                       @P1C*/ 38205200
*          ANS(XMAP || '.SRP$EXIT=ADDR('|| XEXIT || '); ' ||            38205300
*             COMMENT('GET ADDRESS OF EXIT'))                           38205400
*                NORESCAN COL(MACLMAR); /*                       @P1C*/ 38205500
*  /******************************************************************/ 38205600
*  /* PERFORM OPTIONAL PROCESS OF "EXITPARM"                         */ 38205700
*  /******************************************************************/ 38205800
*          IF XEXITPARM^='' THEN                                        38205900
*             DO;                /* PROCESS SPECIFIED PARAMETERS @D1A*/ 38206000
*                 ANS(XMAP || '.SRP$EAL=ALET('||                        38206100
*                    XEXITPARM || '); ' ||                              38206200
*                       COMMENT('GET ALET FOR EXIT PARAMETER'))         38206300
*                           NORESCAN COL(MACLMAR); /*            @P1C*/ 38206400
*                 ANS(XMAP || '.SRP$EAD=ADDR('||                        38206500
*                    XEXITPARM || '); ' ||                              38206600
*                       COMMENT('GET ADDRESS OF EXIT PARAMETER'))       38206700
*                           NORESCAN COL(MACLMAR); /*            @P1C*/ 38206800
*             END;               /* END EXIT PARM PROCESS        @D1A*/ 38206900
*  /******************************************************************/ 38207000
*  /* GENERATE PC LINKAGE TEXT FOR SUSPEND WITH TOKEN                */ 38207100
*  /******************************************************************/ 38207200
*          ANS('GPR14F=XM@('||SFTSLOT||'); ' ||                         38207300
*             COMMENT('GET LX/EX FROM SFT'))                            38207400
*                NORESCAN COL(MACLMAR);                                 38207500
*          ANS('GPR01P=SRP$PTR; ' ||                                    38207600
*             COMMENT('GET PARAMETER LIST ADDRESS'))                    38207700
*                NORESCAN COL(MACLMAR); /*                       @P1C*/ 38207800
*          ANS('SAR(GPR01P,SRP$VIA); ' ||                               38207900
*             COMMENT('LOAD AR1 WITH PARAMETER LIST ALET'))             38208000
*                NORESCAN COL(MACLMAR); /*                       @P1C*/ 38208100
*          ANS('PC(GPR14F); ' ||                                        38208200
*             COMMENT('PC TO SUSPEND WITH TOKEN SERVICE ROUTINE'))      38208300
*                NORESCAN COL(MACLMAR);                                 38208400
*                                                                       38208500
*  /******************************************************************/ 38208600
*  /* PERFORM OPTIONAL RESUME CODE PROCESSING                        */ 38208700
*  /******************************************************************/ 38208800
*  IF XRSCODE^='' THEN                                                  38208900
*    DO;                            /* SAVE RESUME CODE              */ 38209000
*          ANS(XRSCODE || '=GPR00F; ' ||                                38209100
*             COMMENT('SAVE RESUME CODE'))                              38209200
*                NORESCAN COL(MACLMAR);                                 38209300
*    END;                                                               38209400
*  ANS(MACCONC||'SPACE;') NORESCAN COL(MACLMAR);                        38209500
*                  ANS('RFY GPR00F UNRSTD;') NORESCAN COL(MACLMAR);     38209600
*                  ANS('RFY GPR01P UNRSTD;') NORESCAN COL(MACLMAR);     38209700
*                  ANS('RFY GPR14F UNRSTD;') NORESCAN COL(MACLMAR);     38209800
*      ANS('END; '||COMMENT(IVDOCMT))                                   38209900
*          NORESCAN COL(MACLMAR);                                       38210000
*  ANS(MACCONC||'SPACE;') NORESCAN COL(MACLMAR);                        38210100
*  ANS(' ') NORESCAN COL(MACLMAR);                                      38210200
*/*-----------------------------------------------------------------*/  38210300
*/*  MVS  -ENSURE THAT GPRS NEEDED BY MACRO WILL BE PROVIDED BY     */  38210400
*/*        ?EPILOG                                                  */  38210500
*/*-----------------------------------------------------------------*/  38210600
*        IF INDEX(EHAREGS,'00F')=0                                      38210700
*          THEN                                                         38210800
*            EHAREGS=EHAREGS||'00F'; /* REGISTER ZERO               */  38210900
*        IF INDEX(EHAREGS,'01P')=0                                      38211000
*          THEN                                                         38211100
*            EHAREGS=EHAREGS||'01P'; /* GPR01F                      */  38211200
*        IF INDEX(EHAREGS,'14F')=0                                      38211300
*          THEN                                                         38211400
*            EHAREGS=EHAREGS||'14F'; /* GPR15P                      */  38211500
*/*-----------------------------------------------------------------*/  38211600
*/*  MAKE SURE THE CROSS-MEMORY SERVICES DECLARES ARE SETUP BY      */  38211700
*/*        ?EPILOG                                                  */  38211800
*/*-----------------------------------------------------------------*/  38211900
*        IF INDEX(EHAMAPS,'XM@')=0                                      38212000
*          THEN                                                         38212100
*            EHAMAPS=EHAMAPS||'XM@,'; /* DEFINE XM SERVICES         */  38212200
* /*******************************************************************/ 38212300
* /* MAKE SURE THE PARAMETER LIST MAP IS GENERATED BY EPILOG         */ 38212400
* /*******************************************************************/ 38212500
* IF (ZSUSPEND^='YES') THEN                                             38212600
*  DO;                               /* SETUP BASE MAPPING IN EPILOG */ 38212700
*  ZSUSPEND='YES';                   /* INDICATE MAPPING DECLARED    */ 38212800
*  IVSTRING='DCL 1 SRP$LIST BASED(SRP$PTR) VIA(SRP$VIA) BDY(WORD),'||   38212900
*        ' /* SUSPEND WITH TOKEN PARAMETER LIST MAPPING   @P1C*/ ' ||   38213000
*               '3 SRP$LEVEL  FIXED(8),'                           ||   38213100
*                  '/* PARAMETER LEVEL INDICATOR  @P1C*/ '         ||   38213200
*               '3 *          CHAR( 3),'                           ||   38213300
*                  '/* RESERVED                  */ '              ||   38213400
*               '3 SRP$EXIT  PTR(31),'                             ||   38213500
*                  '/* THE ADDRESS OF THE SUSPEND EXIT  @P1C*/ '   ||   38213600
*               '4 SRP$RCODE FIXED(31),'                           ||   38213700
*                  '/* THE RESUME CODE @P1C*/ '                    ||   38213800
*               '3 SRP$ALET   FIXED(32),'                          ||   38213900
*                  '/* THE ALET OF THE SUSPEND TOKEN   @P1C*/ '    ||   38214000
*               '3 SRP$TOKEN  PTR(31),'                            ||   38214100
*                  '/* THE ADDRESS OF THE SUSPEND TOKEN  @P1C*/ '  ||   38214200
*               '3 SRP$EAL    FIXED(32),'                          ||   38214300
*                  '/* THE ALET OF EXIT PARAMETER      @P1C*/ '    ||   38214400
*               '3 SRP$EAD    PTR(31);'                            ||   38214500
*            '/* THE ADDRESS OF THE EXIT PARAMETER  @P1C*/ '; /* @D1C*/ 38214600
*  IVSTRING=IVSTRING||                                                  38214700
*       'DCL SRP$VIA FIXED(32); '  ||                                   38214800
*           '/* ALET VARIABLE FOR PARAMETER LIST  @P1C*/ ';             38214900
*  IVSTRING=IVSTRING||                                                  38215000
*       'DCL SRP$PTR PTR(31);   '  ||                                   38215100
*           '/* POINTER TO THE PARAMETER LIST    @P1C*/ ';              38215200
*  IVSTRING=IVSTRING||                                                  38215300
*       'DCL 1 SRP$PRIM BASED(SRP$PTR) BDY(WORD) LIKE SRP$LIST; ' ||    38215400
*       '/* PARAMETER LIST MAP FOR PRIMARY MODE INVOCATIONS   @P1C*/';  38215500
*   ANS (' ?EPILOG STRING('''||IVSTRING||''');'); /* ADD BASED MAPPING  38215600
*                                      TO EPILOG STRING CONSTANTS    */ 38215700
*  END;                              /* END BASE MAPPING SETUP       */ 38215800
*/*******************************************************************/  38215900
*/*  PO.L18 END OF CODE TO BE BYPASSED WHEN ZMACRET ^= 0            */  38216000
*/*******************************************************************/  38216100
*      END;                                                             38216200
*  RETURN CODE(ZMACRET);                                                38216300
*/********************************************************************/ 38216400
*/* "MF(L)" PROCEDURE                                                */ 38216500
*/********************************************************************/ 38216600
* LPROC:                                                                38216700
*/********************************************************************/ 38216800
*/* CHECK FOR "SPTOKEN" OR "RB" OPTIONS ILLEGALLY SPECIFIED WITH "MF"*/ 38216900
*/********************************************************************/ 38217000
*  ZMS='';                          /* CLEAR MNOTE STRING VARIABLE   */ 38217100
*  ZMA=0;                           /* CLEAR COUNT OF BAD KEYS       */ 38217200
*  IF EXIT^='' THEN                                                     38217300
*    DO;                            /* ILLEGAL "EXIT" SPECIFICATION  */ 38217400
*      ZMS='"EXIT"';                                                    38217500
*      ZMA=1;                                                           38217600
*    END;                                                               38217700
*  IF RSCODE^='' THEN                                                   38217800
*    DO;                            /* ILLEGAL "RSCODE" SPECIFICATION   38217900
*                                                                    */ 38218000
*      IF ZMA=0 THEN                                                    38218100
*        DO;                        /* FIRST BAD KEY DETECTED        */ 38218200
*          ZMS='"RSCODE"';                                              38218300
*          ZMA=1;                   /* INITIALIZE ERROR COUNT        */ 38218400
*        END;                                                           38218500
*      ELSE                                                             38218600
*        DO;                        /* MULTIPLE BAD KEYS DETECTED    */ 38218700
*          ZMS = ZMS || ', "RSCODE"';                                   38218800
*          ZMA=ZMA+1;               /* BUMP COUNT OF ERRORS          */ 38218900
*        END;                                                           38219000
*    END;                                                               38219100
*  IF EXITPARM^='' THEN                                                 38219200
*    DO;                            /* ILLEGAL "EXITPARM" SPECIFICATION 38219300
*                                                                @D1A*/ 38219400
*      IF ZMA=0 THEN                                                    38219500
*        DO;                        /* FIRST BAD KEY DETECTED    @D1A*/ 38219600
*          ZMS='"EXITPARM"';        /* ASSIGN MESSAGE STRING     @D1A*/ 38219700
*          ZMA=1;                   /* INITIALIZE ERROR COUNT    @D1A*/ 38219800
*        END;                                                           38219900
*      ELSE                                                             38220000
*        DO;                        /* MULTIPLE BAD KEYS         @D1A*/ 38220100
*          ZMS = ZMS || ', "EXITPARM"';  /* ASSIGN MSG STRING    @D1A*/ 38220200
*          ZMA=ZMA+1;               /* BUMP COUNT OF ERRORS      @D1A*/ 38220300
*        END;                                                           38220400
*    END;                                                               38220500
*  IF RB^='' THEN                                                       38220600
*    DO;                            /* ILLEGAL "MF" SPECIFICATION       38220700
*                                                                    */ 38250000
*      IF ZMA=0 THEN                                                    38300000
*        DO;                        /* FIRST BAD KEY DETECTED        */ 38350000
*          ZMS='"RB"';                                                  38400000
*          ZMA=1;                   /* INITIALIZE ERROR COUNT        */ 38450000
*        END;                                                           38500000
*      ELSE                                                             38550000
*        DO;                        /* MULTIPLE BAD KEYS DETECTED    */ 38600000
*          ZMS = ZMS || ', "RB"';                                       38650000
*          ZMA=ZMA+1;               /* BUMP COUNT OF ERRORS          */ 38700000
*        END;                                                           38750000
*    END;                                                               38800000
*  IF ZMA>0 THEN                                                        38850000
*    DO;                            /* BAD KEY(S) DETECTED           */ 38900000
*      IF ZMA=1 THEN                                                    38950000
*        DO;                        /* SINGLE BAD KEY                */ 39000000
*                                                                       39004100
*            IF (ZIVDOCMT=0) THEN                                       39008200
*               DO;                           /* MACRO INVOCATION       39012300
*                                                NEVER PRINTED   @D1A*/ 39016400
*                 ANS(COMMENT(IVDOCMT))                                 39020500
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         39024600
*                                                COMMENT         @D1A*/ 39028700
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       39032800
*                                                                @D1A*/ 39036900
*               END;                                                    39041000
*                                                                       39045100
*              ZMS=' 8, ' || ZMS ||                                     39050000
*                  ' KEYWORD IS NOT VALID WITH ' ||                     39100000
*                  '"MF' || MF || '. ';                                 39150000
*              ANS MSG('?SUSPEND ---> '||ZMS);                          39200000
*              ZMS =   '?SUSPEND ---> '||ZMS ;                          39250000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          39300000
*              ZMACRET=8;                    /* MACRO ERROR */          39350000
*        END;                                                           39400000
*      ELSE                                                             39450000
*        DO;                                                            39500000
*                                                                       39504100
*            IF (ZIVDOCMT=0) THEN                                       39508200
*               DO;                           /* MACRO INVOCATION       39512300
*                                                NEVER PRINTED   @D1A*/ 39516400
*                 ANS(COMMENT(IVDOCMT))                                 39520500
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         39524600
*                                                COMMENT         @D1A*/ 39528700
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       39532800
*                                                                @D1A*/ 39536900
*               END;                                                    39541000
*                                                                       39545100
*              ZMS=' 8, ' || ZMS ||                                     39550000
*                  ' KEYWORDS ARE NOT VALID WITH ' ||                   39600000
*                  '"MF' || MF || '. ';                                 39650000
*              ANS MSG('?SUSPEND ---> '||ZMS);                          39700000
*              ZMS =   '?SUSPEND ---> '||ZMS ;                          39750000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          39800000
*              ZMACRET=8;                    /* MACRO ERROR */          39850000
*        END;                                                           39900000
*    END;                                                               39950000
*/********************************************************************/ 40000000
*/* CHECK FOR PARAMETER LIST NAME                                    */ 40050000
*/********************************************************************/ 40100000
*    IF NUMBER(MF)<2                         /* CHECK POSITIONALS */    40150000
*        THEN                                                           40200000
*          DO;                                                          40250000
*                                                                       40254100
*            IF (ZIVDOCMT=0) THEN                                       40258200
*               DO;                           /* MACRO INVOCATION       40262300
*                                                NEVER PRINTED   @D1A*/ 40266400
*                 ANS(COMMENT(IVDOCMT))                                 40270500
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         40274600
*                                                COMMENT         @D1A*/ 40278700
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       40282800
*                                                                @D1A*/ 40286900
*               END;                                                    40291000
*                                                                       40295100
*            ZMS=' 8, "MF'||                                            40300000
*                MF||'"'||                                              40350000
*                ' IS INCORRECT. '||                                    40400000
*                ' PARAMETER LIST NAME IS REQUIRED. ';                  40450000
*            ANS MSG('?SUSPEND ---> '||ZMS);                            40500000
*            ZMS =   '?SUSPEND ---> '||ZMS ;                            40550000
*            ANS(COMMENT(ZMS)) COL(MACLMAR);                            40600000
*            ZMACRET=8;                      /* MACRO ERROR */          40650000
*      END;                                                             40700000
*    ELSE                                                               40750000
*      DO;                          /* SAVE LIST NAME                */ 40800000
*        XLIST = MF(2);                                                 40850000
*      END;                                                             40900000
*/********************************************************************/ 40950000
*/* PROCESS "RELATED" KEYWORD                                        */ 41000000
*/********************************************************************/ 41050000
*  ZXRELATED='INPUT';                        /* SET IN/OUTPUT */        41100000
*  IF RELATED   ^=''                         /* CHECK FOR NULL */       41150000
*    THEN                                                               41200000
*      XRELATED=RELATED   ;                  /* SET XVARIABLE */        41250000
*  IF ZXRELATED^='' &                        /* NOT IN/OUTPUT */        41300000
*     XRELATED^='NULL' &                     /* NOT STAR DEFAULT */     41350000
*     LENGTH(XRELATED)>256                                              41400000
*    THEN                                                               41450000
*      DO;                                                              41500000
*                                                                       41504100
*            IF (ZIVDOCMT=0) THEN                                       41508200
*               DO;                           /* MACRO INVOCATION       41512300
*                                                NEVER PRINTED   @D1A*/ 41516400
*                 ANS(COMMENT(IVDOCMT))                                 41520500
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         41524600
*                                                COMMENT         @D1A*/ 41528700
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       41532800
*                                                                @D1A*/ 41536900
*               END;                                                    41541000
*                                                                       41545100
*        ZXRELATED='';                       /* RESET IN/OUTPUT */      41550000
*        ZMS=' 8, "RELATED'||                /**KLNGP* MSG*/            41600000
*            RELATED||                                                  41650000
*            '" ARGUMENT 1 EXCEEDS THE MAXIMUM'||                       41700000
*            ' LENGTH OF 256 CHARACTERS. ';                             41750000
*        ANS MSG('?SUSPEND ---> '||ZMS);                                41800000
*        ZMS =   '?SUSPEND ---> '||ZMS ;                                41850000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                41900000
*        ZMACRET=8;                          /* MACRO ERROR */          41950000
*      END;                                                             42000000
*/********************************************************************/ 42050000
*/*      GENERATE PARAMETER LIST IF NO ERRORS                        */ 42100000
*/********************************************************************/ 42150000
* IF (ZMACRET=0) THEN               /* Generate parameter list       */ 42200000
*  DO;                                                                  42250000
*     ANS('DCL 1 '|| XLIST ||' BDY(WORD) '                      ||      42300000
*         'CHAR(LENGTH(SRP$LIST)) LIKE(SRP$LIST); '             ||      42350000
*            COMMENT(' SUSPEND WITH TOKEN PARAMETER LIST'))             42400000
*            NORESCAN COL(MACLMAR+5); /*                         @P3C*/ 42450000
* /*******************************************************************/ 42500000
* /* MAKE SURE THE PARAMETER LIST MAP IS GENERATED BY EPILOG         */ 42550000
* /*******************************************************************/ 42600000
* IF (ZSUSPEND^='YES') THEN                                             42650000
*  DO;                               /* SETUP BASE MAPPING IN EPILOG */ 42700000
*  ZSUSPEND='YES';                   /* INDICATE MAPPING DECLARED    */ 42750000
*  IVSTRING='DCL 1 SRP$LIST BASED(SRP$PTR) VIA(SRP$VIA) BDY(WORD),'||   42800000
*        ' /* SUSPEND WITH TOKEN PARAMETER LIST MAPPING   @P1C*/ ' ||   42850000
*               '3 SRP$LEVEL  FIXED(8),'                           ||   42900000
*                  '/* PARAMETER LEVEL INDICATOR   @P1C*/ '        ||   42950000
*               '3 *          CHAR( 3),'                           ||   43000000
*                  '/* RESERVED                  */ '              ||   43050000
*               '3 SRP$EXIT  PTR(31),'                             ||   43084600
*                  '/* THE ADDRESS OF THE SUSPEND EXIT   @P1C*/ '  ||   43119200
*               '4 SRP$RCODE FIXED(31),'                           ||   43153800
*                  '/* THE RESUME CODE   @P1C*/ '                  ||   43188400
*               '3 SRP$ALET   FIXED(32),'                          ||   43223000
*                  '/* THE ALET OF THE SUSPEND TOKEN   @P1C*/ '    ||   43257600
*               '3 SRP$TOKEN  PTR(31),'                            ||   43292200
*                  '/* THE ADDRESS OF THE SUSPEND TOKEN   @P1C*/ ' ||   43326800
*               '3 SRP$EAL    FIXED(32),'                          ||   43361400
*                  '/* THE ALET OF EXIT PARAMETER      @P1C*/ '    ||   43396000
*               '3 SRP$EAD    PTR(31);'                            ||   43430600
*            '/* THE ADDRESS OF THE EXIT PARAMETER  @P1C*/ '; /* @D1C*/ 43465200
*  IVSTRING=IVSTRING||                                                  43500000
*       'DCL SRP$VIA FIXED(32); '  ||                                   43550000
*           '/* ALET VARIABLE FOR PARAMETER LIST   @P1C*/ ';            43600000
*  IVSTRING=IVSTRING||                                                  43650000
*       'DCL SRP$PTR PTR(31);   '  ||                                   43700000
*           '/* POINTER TO THE PARAMETER LIST    @P1C*/ ';              43750000
*  IVSTRING=IVSTRING||                                                  43800000
*       'DCL 1 SRP$PRIM BASED(SRP$PTR) BDY(WORD) LIKE SRP$LIST; ' ||    43850000
*       '/* PARAMETER LIST MAP FOR PRIMARY MODE INVOCATIONS   @P1C*/';  43900000
*   ANS (' ?EPILOG STRING('''||IVSTRING||''');'); /* ADD BASED MAPPING  43950000
*                                      TO EPILOG STRING CONSTANTS   */  44000000
*  END;                              /* END BASE MAPPING SETUP      */  44050000
*/*-----------------------------------------------------------------*/  44100000
*/*  MAKE SURE THE CROSS-MEMORY SERVICES DECLARES ARE SETUP BY      */  44150000
*/*        ?EPILOG                                                  */  44200000
*/*-----------------------------------------------------------------*/  44250000
*        IF INDEX(EHAMAPS,'XM@')=0                                      44300000
*          THEN                                                         44350000
*            EHAMAPS=EHAMAPS||'XM@,'; /* DEFINE XM SERVICES         */  44400000
*/*******************************************************************/  44450000
*/*  PO.L18 END OF CODE TO BE BYPASSED WHEN ZMACRET ^= 0            */  44500000
*/*******************************************************************/  44550000
* END;                              /* END LIST GENERATION          */  44600000
*  RETURN CODE(ZMACRET);                                                44650000
*%END SUSPEND;                                                          44700000
