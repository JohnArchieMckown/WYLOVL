*/**** START OF SPECIFICATIONS ****************************************         
***********************************************************************         
*                                                                     *         
*01* MACRO NAME:  CHSTRACE                              -08/06/87-<1> *         
*                                                                     *         
*01* DESCRIPTIVE NAME:  MVSSERV Trace Facility Macro                  *         
*                                                                     *         
* *01* PROPRIETARY STATEMENT=                                         *         
*  **PROPRIETARY_STATEMENT*********************************************         
*                                                                     *         
*                                                                     *         
*   LICENSED MATERIALS - PROPERTY OF IBM                              *         
*   THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                       *         
*   5685-025 (C) COPYRIGHT IBM CORP. 1987, 1991                       *         
*   SEE COPYRIGHT INSTRUCTIONS                                        *         
*                                                                     *         
*   STATUS= HTE23D2                                                   *         
*                                                                     *         
*  **END_OF_PROPRIETARY_STATEMENT**************************************         
*                                                                     *         
*01* FUNCTION:                                                        *         
*                                                                     *         
*      The CHSTRACE (MVSSERV trace) macro is an externalized facility *         
*      to allow servers, server initialization/termination programs,  *         
*      or user-defined access method drivers to issue message text to *         
*      the terminal, the trace data set, or both.                     *         
*                                                                     *         
*01* INVOCATION REQUIREMENTS:                                         *         
*                                                                     *         
*                                                                     *         
*      Execution Mode:   Task mode.                                   *         
*                                                                     *         
*      Authorization:    Problem or Supervisor state.  Any PSW key.   *         
*                        For TSO/E Release 4, the caller is assumed   *         
*                        to be running problem program state, key 8.  *         
*                        However, this is not a requirement and is    *         
*                        not verified by MVSSERV.                     *         
*                                                                     *         
*      Addressing Mode:  24 or 31 bit addressing mode.                *         
*                                                                     *         
*      ASC mode:         Primary ASC mode.                            *         
*                                                                     *         
*      Serialization:    Enabled.                                     *         
*                                                                     *         
*                                                                     *         
*01* INVOCATION FORMAT:                                               *         
*                                                                     *         
*[xlabel]  CHSTRACE   [ DEST=TRACE|TERM|BOTH]                       *         
*                      ,CED=xced                                      *         
*                      ,BUFFER=xbuffer                                *         
*                      ,BUFLEN=xbuflen                                *         
*                     [,RETCODE=xretcode]                             *         
*                     ,MF=(E,xmfctrl,COMPLETE)                     *         
*                     ,MF=(L,xmfctrl,xmfattr|0D)                   *         
*                                                                     *         
*                                                                     *         
*      Where:                                                         *         
*                                                                     *         
*                                                                     *         
*      [xlabel]                                                       *         
*          Is an optional 1 to 8 alphanumeric character input string, *         
*          starting in column 1, that is the assembler label on the   *         
*          CHSTRACE macro.                                            *         
*          DEFAULT: Null label.                                       *         
*                                                                     *         
*                                                                     *         
*                                                                     *         
*      [DEST=TRACE|TERM|BOTH]                                       *         
*          is an optional keyword input indicates where the message   *         
*          text is to be written.                                     *         
*          DEFAULT: TRACE                                             *         
*                                                                     *         
*                                                                     *         
*          TRACE     This keyword will direct the message text to the *         
*                    trace dataset.                                   *         
*                                                                     *         
*          TERM      This keyword will direct the message text to the *         
*                    terminal.                                        *         
*                                                                     *         
*          BOTH      This keyword will direct the message text to     *         
*                    both the trace dataset and the terminal.         *         
*                                                                     *         
*                                                                     *         
*                                                                     *         
*                                                                     *         
*      CED=xced                                                       *         
*          is the name (RX-type), or address in register (2)-(12), of *         
*          a required 96 character input of the Connectivity          *         
*          Environment Descriptor (CED). The CED is passed to the     *         
*          server, init/term program, or user-defined AMD as a        *         
*          parameter. The CED is mapped by the CHSCED macro.          *         
*                                                                     *         
*                                                                     *         
*                                                                     *         
*      BUFFER=xbuffer                                                 *         
*          is the name (RX-type), or address in register (2)-(12), of *         
*          a required 80 character input that describes the buffer to *         
*          be written.                                                *         
*                                                                     *         
*                                                                     *         
*                                                                     *         
*      BUFLEN=xbuflen                                                 *         
*          is the name (RX-type), or address in register (2)-(12), of *         
*          a required fullword input that contains the length in      *         
*          bytes of the buffer to be written.  The maximum buffer     *         
*          length is 80 characters. If the buffer length exceeds 80   *         
*          characters, it will be truncated.                          *         
*                                                                     *         
*                                                                     *         
*                                                                     *         
*      [RETCODE=xretcode]                                             *         
*          is the name (RX-type), or address in register (2)-(12), of *         
*          an optional fullword output variable that the return code  *         
*          is to be copied into from GPR 15.                          *         
*                                                                     *         
*                                                                     *         
*                                                                     *         
*      MF=E|L                                                       *         
*          is a required keyword input which specifies the macro      *         
*          form.                                                      *         
*                                                                     *         
*                                                                     *         
*          MF(E,xmfctrl,COMPLETE)                                   *         
*              specifies the execute form of the macro.  The "E" form *         
*              will generate code to put the parameters into the      *         
*              parameter list specified by xmfctrl and provide full   *         
*              syntax checking with default setting.                  *         
*                                                                     *         
*            ,xmfctrl                                                 *         
*              is a required input.  It is the name (RX-type), or     *         
*              address in register (2)-(12), of a storage area for    *         
*              the parameter list.                                    *         
*                                                                     *         
*            ,COMPLETE                                              *         
*              is an optional keyword input which specifies the       *         
*              degree of macro parameter syntax checking.             *         
*              DEFAULT: COMPLETE                                      *         
*                                                                     *         
*                                                                     *         
*              COMPLETE   Checking for required macro keys is done    *         
*                        and defaults are supplied for optional       *         
*                        parameters that were not specified.          *         
*                                                                     *         
*                                                                     *         
*          MF=(L,xmfctrl,xmfattr|0D)                                *         
*              specifies the list form of the macro.  The "L" form    *         
*              will define an area to be used for the parameter list. *         
*              Any other macro parameters will be flagged as errors.  *         
*                                                                     *         
*            ,xmfctrl                                                 *         
*              is a required input.  It is the name (RX-type) of a    *         
*              storage area for the parameter list.                   *         
*                                                                     *         
*            ,xmfattr|0D                                            *         
*              is an optional 60 character input  string that         *         
*              contains any special attributes for the parameter      *         
*              list.                                                  *         
*              DEFAULT: 0D which indicates the parameter list is to   *         
*              be aligned on a double word boundary.                  *         
*                                                                     *         
*                                                                     *         
*                                                                     *         
*01* RETURN CODES:                                                    *         
*                                                                     *         
*                                                                     *         
*       0         The message was successfully displayed or traced.   *         
*                                                                     *         
*       4         A failure occurred in message processing.  This is  *         
*                 a critical MVSSERV failure.  The invoker will       *         
*                 receive control with a return code of 4, and will   *         
*                 no longer be able to make any further service       *         
*                 requests. When it terminates, MVSSERV will          *         
*                 terminate.                                          *         
*                                                                     *         
*                                                                     *         
*01* REASON CODES:  None.                                             *         
*                                                                     *         
*01* MODULE TYPE:  ASSEM MACRO                                        *         
*                                                                     *         
*02*   PROCESSOR:  ASSEM                                              *         
*                                                                     *         
*01* COMPONENT:  28507                                                *         
*                                                                     *         
*01* DISTRIBUTION LIBRARY: AMACLIB                                    *         
*                                                                     *         
*01* CHANGE ACTIVITY:                                                 *         
*                                                                     *         
*  FLAG LINE_ITEM   FMID    DATE   PGMR_ID  COMMENT                   *         
*                                                                     *         
*   $A0=MVSSERV   HTE1402  870901  E1402I5:                           *         
*                                            TSO/E Release 4          *         
*   APAR OY46631  Fixed inadvertent copyright data            @YA46631*         
*                                                                     *         
*01* MACRO USAGE NOTES:                                               *         
*                                                                     *         
*                                                                     *         
*           Printing of the macro expansion  is controlled by the     *         
*           ZPRINT global macro variable.  Any value other than 'NO'  *         
*           will result in the macro expansion being printed.  The    *         
*           default is 'YES'.  The following examples illustrate how  *         
*           the ZPRINT variable should be set.                        *         
*                                                                     *         
*               &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'         *         
*                                                                     *         
*       1.  Maximum  buffer  size  is  80  characters. If the size is *         
*           larger than 80, the message will be truncated.            *         
*                                                                     *         
*       2.  A message ID should prefix a message.  If  the  user  has *         
*           "PROFILE  NOMSGID", the message ID will be stripped up to *         
*           the first blank.  If no message ID is  desired,  a  blank *         
*           space should be the first character in the message.       *         
*                                                                     *         
*       3.  Register 0,1,13-15 will be altered by CHSTRACE.           *         
*                                                                     *         
*       4.  Register 13 must point to a 72 word savearea.             *         
*                                                                     *         
*                                                                     *         
***********************************************************************         
****** END OF SPECIFICATIONS *****************************************/         
*/*********************************************************************         
         MACRO                                                                  
&XLABEL  CHSTRACE &DEST=,&CED=,&BUFFER=,&BUFLEN=,&RETCODE=,&MF=                 
.*                                                                              
.*******************************************************************            
.***AB.01  START OF CHSTRACE MACRO CODE                                         
.*******************************************************************            
              LCLC  &M0M0001                 LABEL NAME                         
&M0M0001      SETC  '&XLABEL'                SET LABEL                          
              AIF   (K'&XLABEL NE 0).XLAB2                                      
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT LABEL                      
.*                                                                              
.XLAB2        ANOP  ,                                                           
&M0M0001 DC    0H'0'                         CHSTRACE-1                         
.*******************************************************************            
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION                
.*******************************************************************            
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                           
              GBLC  &ZTEST      YES=TEST NO=NO TEST                             
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, XB, VM                      
.*                                                                              
              GBLC  &ZCHSTRACE  YES=MACRO USED AT LEAST ONCE                    
.*******************************************************************            
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                                  
.*******************************************************************            
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                         
              LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS                    
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED                      
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR                     
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE                     
              LCLA  &ZAWRK      USED AS A WORK AREA                             
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                          
              LCLA  &ZMACRET    MACRO RETURN CODE                               
&ZMACRET      SETA  0           ASSUME NO ERRORS                                
.*                                                                              
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY              
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()                      
.*******************************************************************            
.***AB.06  ENSURE PRINT IS ON                                                   
.*******************************************************************            
         PUSH  PRINT                                                            
         PRINT ON                                                               
.*******************************************************************            
.***AB.07  DEFINE ALL MACRO VARIABLES                                           
.*******************************************************************            
              LCLC  &XDEST      ++ VALUE                                        
              LCLC  &XCED       ++ NAME                                         
              LCLC  &XBUFFER    ++ NAME                                         
              LCLC  &XBUFLEN    ++ NAME                                         
              LCLC  &XRETCODE   ++ NAME                                         
              LCLC  &XMF        ++ VALUE                                        
              LCLC  &XMFCTRL    ++ NAME                                         
              LCLC  &XMFSCK     ++ VALUE                                        
              LCLC  &XMFATTR    ++ VALUE                                        
.*******************************************************************            
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING                   
.*******************************************************************            
              LCLC  &ZXDEST     ++ INPUT VALUE                                  
              LCLC  &ZXCED      ++ INPUT NAME                                   
              LCLC  &ZXBUFFER   ++ INPUT NAME                                   
              LCLC  &ZXBUFLEN   ++ INPUT NAME                                   
              LCLC  &ZXRETCODE  ++ OUTPUT NAME                                  
              LCLC  &ZXMF       ++ INPUT VALUE                                  
              LCLC  &ZXMFCTRL   ++ INPUT NAME                                   
              LCLC  &ZXMFSCK    ++ INPUT VALUE                                  
              LCLC  &ZXMFATTR   ++ INPUT VALUE                                  
.********************************************************************           
.***AG.MF01 PROCESS MF MACRO FORMS                                              
.********************************************************************           
              ACTR  1000                                                        
.*------------------------------------------------------------------            
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL                   
&XMF          SETC  ''          INITIALIZE XVARIABLE                            
.*-------------------------------------------------------------------           
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL                   
.ZG21         ANOP  ,                                                           
              AIF   ('&MF(1)' NE 'E').ZG29                                      
&XMF          SETC  'E'         SET KEYWORD                                     
              AIF   (N'&MF LE 3).ZG21A          CK NUM                          
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                                   
&ZMS          SETC  '&ZMS.&MF"'                                                 
&ZMS          SETC  '&ZMS "MF"'                                                 
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                        
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG21A        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KXVAR06 NAME, RQD INPUT, POS(2) -XVARIABLE                               
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                                   
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                                   
              AIF   (N'&MF GT 1).ZG23B          MULTIPLE PARMS                  
&XMFCTRL      SETC  '&MF'       SET XVARIABLE                                   
.ZG23B        AIF   (K'&MF(2) GT 0).ZG23C                                       
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                                 
&ZMS          SETC  'THE'       *KRQDA* MNOTE                                   
&ZMS          SETC  '&ZMS "MF" KEY, POSITIONAL ARGUMENT 2 IS'                   
              MNOTE 8,' &ZMS REQUIRED.'                                         
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG23C        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KCK02 NAME, RQD INPUT, POS(2) -GPR OUT OF RANGE                          
              AIF   (K'&ZXMFCTRL LE 0).ZG23R    NOT I/O                         
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG23R                              
&ZCGPR        SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                                  
              AIF   ('&ZCGPR'(1,1) NE '0').ZG23P                                
              AIF   (K'&ZCGPR GT 2).ZG23Q                                       
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZG23Q     INVALID REG NAME                
.ZG23P        ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZG23R     NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZG23Q                                     
              AIF   ('&ZCGPR' LE '12').ZG23R                                    
.ZG23Q        ANOP  ,                                                           
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                                   
&ZMS          SETC  '&ZMS.&MF"'                                                 
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG23R        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD                     
&XMFSCK       SETC  ''          INITIALIZE XVARIABLE                            
.ZG27A   AIF   ('&MF(3)' NE 'COMPLETE').ZG28A                                   
&XMFSCK       SETC  'COMPLETE'  SET KEYWORD                                     
.*-------------------------------------------------------------------           
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD                     
.ZG28A        AIF   (K'&XMFSCK GT 0).ZG28C      KEYWORD                         
              AIF   (K'&MF(3) LE 0).ZG28B                                       
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                                   
&ZMS          SETC  '&ZMS.&MF"'                                                 
&ZMS          SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '                   
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                         
              MNOTE 8,' &ZMS "COMPLETE".'                                       
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG28B        ANOP  ,                                                           
&XMFSCK       SETC  'COMPLETE'  SET DEFAULT KEYWORD                             
.ZG28C        ANOP  ,                                                           
&ZXMFSCK      SETC  'INPUT'     SET IN/OUTPUT                                   
.*-------------------------------------------------------------------           
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL                   
.ZG29         ANOP  ,                                                           
              AIF   ('&MF(1)' NE 'L').ZG36                                      
&XMF          SETC  'L'         SET KEYWORD                                     
              AIF   (N'&MF LE 3).ZG29A          CK NUM                          
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                                   
&ZMS          SETC  '&ZMS.&MF"'                                                 
&ZMS          SETC  '&ZMS "MF"'                                                 
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                        
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG29A        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                             
              AIF   (N'&SYSLIST NE 0).ZG29B     POSITIONALS?                    
              AIF   ('&DEST' NE '').ZG29B       KEYS?                           
              AIF   ('&CED' NE '').ZG29B        KEYS?                           
              AIF   ('&BUFFER' NE '').ZG29B     KEYS?                           
              AIF   ('&BUFLEN' NE '').ZG29B     KEYS?                           
              AIF   ('&RETCODE' NE '').ZG29B    KEYS?                           
              AGO    .ZG29C     INVOCATION OKAY                                 
.ZG29B        ANOP  ,                                                           
&ZMS          SETC  'THE "L" FORM OF "MF" CANNOT'  *MFLA* MNOTE                 
&ZMS          SETC  '&ZMS HAVE ANY OTHER KEYWORDS OR'                           
&ZMS          SETC  '&ZMS POSITIONAL PARAMETERS SPECIFIED'                      
              MNOTE 8,' &ZMS ON THE INVOCATION.'                                
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG29C        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KXVAR06 NAME, RQD INPUT, POS(2) -XVARIABLE                               
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                                   
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                                   
              AIF   (N'&MF GT 1).ZG31B          MULTIPLE PARMS                  
&XMFCTRL      SETC  '&MF'       SET XVARIABLE                                   
.ZG31B        AIF   (K'&MF(2) GT 0).ZG31C                                       
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                                 
&ZMS          SETC  'THE'       *KRQDA* MNOTE                                   
&ZMS          SETC  '&ZMS "MF" KEY, POSITIONAL ARGUMENT 2 IS'                   
              MNOTE 8,' &ZMS REQUIRED.'                                         
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG31C        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KCK01 NAME, RQD INPUT, POS(2) -GPR NOT ALLOWED                           
              AIF   (K'&ZXMFCTRL LE 0).ZG31P    NOT I/O                         
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG31P                              
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                                 
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                                   
&ZMS          SETC  '&ZMS.&MF"'                                                 
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'                   
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                           
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG31P        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                              
&ZXMFATTR     SETC  'INPUT'     SET IN/OUTPUT                                   
&XMFATTR      SETC  '0D'        SET DEFAULT                                     
              AIF   (K'&MF(3) LE 0).ZG34B       PARM                            
&XMFATTR      SETC  '&MF(3)'    SET XVARIABLE                                   
              AIF   (N'&MF GT 1).ZG34B          MULTIPLE PARMS                  
&XMFATTR      SETC  '&MF'       SET XVARIABLE                                   
.ZG34B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                          
              AIF   (K'&ZXMFATTR LE 0).ZG34P    NOT I/O                         
              AIF   ('&XMFATTR'(1,1) NE '(').ZG34P                              
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                                 
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                                   
&ZMS          SETC  '&ZMS.&MF"'                                                 
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'                   
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                           
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG34P        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                         
              AIF   (K'&ZXMFATTR LE 0).ZG34S    NOT I/O                         
              AIF   (K'&XMFATTR LE 60).ZG34S    LNG OK                          
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                                 
&ZMS          SETC  '"MF='      *KLNGA* MNOTE                                   
&ZMS          SETC  '&ZMS.&MF"'                                                 
&ZMS          SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'                       
              MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                          
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG34S        ANOP  ,                                                           
.*------------------------------------------------------------------            
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL                   
.ZG36         ANOP  ,                                                           
&ZXMF         SETC  'INPUT'     SET IN/OUTPUT                                   
              AIF   (K'&XMF GT 0).ZG36E         VALID ARG                       
              AIF   (T'&MF EQ 'O').ZG36D        OMITTED                         
&ZASYSLNDX    SETA  0                                                           
.ZG36A        ANOP  ,           POSITIONAL MACRO KEY                            
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                                
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG36C                            
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'MF').ZG36A                      
.ZG36B        ANOP  ,                                                           
&ZXMF         SETC  ''          RESET IN/OUTPUT                                 
&ZMS          SETC  'THE "MF" KEY'              *KOPTA* MNOTE                   
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                                     
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
              AGO   .ZG36E                                                      
.ZG36C        ANOP  ,                                                           
&ZXMF         SETC  ''          RESET IN/OUTPUT                                 
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                                   
&ZMS          SETC  '&ZMS.&MF"'                                                 
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '                   
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                         
&ZMS          SETC  '&ZMS "E"'  VALID KEYWORD                                   
              MNOTE 8,' &ZMS OR "L".'                                           
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
              AGO   .ZG36E                                                      
.ZG36D        ANOP  ,                                                           
&XMF          SETC  'E'         SET DEFAULT KEYWORD                             
.ZG36E        ANOP  ,                                                           
.*------------------------------------------------------------------            
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL                   
              AIF   (K'&MF(1) GT 0).ZG36F       PARM                            
&XMF          SETC  ''          ENSURE NULL KEYWORD                             
&ZXMF         SETC  ''          RESET IN/OUTPUT                                 
&ZMS          SETC  'THE'       *KRKWA* MNOTE                                   
&ZMS          SETC  '&ZMS "MF" KEY AND ITS ARGUMENT ARE'                        
&ZMS          SETC  '&ZMS REQUIRED.'                                            
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                         
&ZMS          SETC  '&ZMS "E"'  VALID KEYWORD                                   
              MNOTE 8,' &ZMS OR "L".'                                           
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG36F        ANOP  ,                                                           
.********************************************************************           
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                         
.********************************************************************           
              ACTR  1000                                                        
.*-------------------------------------------------------------------           
.***AG.MF03 MF=(LE)                                                             
              AIF   ('&XMF' NE 'E').ZGMF3                                       
              AIF   ('&XMFSCK' EQ 'COMPLETE').ZGMF4                             
.ZGMF3        AGO   .ZGMFX      NO FULL SYNTAX CHECK                            
.*                                                                              
.ZGMF4        ANOP  ,           FULL SYNTAX CHECKING                            
.*----------------------------------------------------------------***           
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD                     
              AIF   (N'&DEST LE 1).ZG2A         CK NUM                          
&ZMS          SETC  '"DEST='    *KPOSA* MNOTE                                   
&ZMS          SETC  '&ZMS.&DEST"'                                               
&ZMS          SETC  '&ZMS "DEST"'                                               
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                         
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG2A         ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD                     
&XDEST        SETC  ''          INITIALIZE XVARIABLE                            
.ZG3A   AIF   ('&DEST(1)' NE 'TRACE').ZG4A                                      
&XDEST        SETC  'TRACE'     SET KEYWORD                                     
.*-------------------------------------------------------------------           
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD                     
.ZG4A   AIF   ('&DEST(1)' NE 'TERM').ZG5A                                       
&XDEST        SETC  'TERM'      SET KEYWORD                                     
.*-------------------------------------------------------------------           
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD                     
.ZG5A   AIF   ('&DEST(1)' NE 'BOTH').ZG6A                                       
&XDEST        SETC  'BOTH'      SET KEYWORD                                     
.*-------------------------------------------------------------------           
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD                     
.ZG6A         AIF   (K'&XDEST GT 0).ZG6C        KEYWORD                         
              AIF   (K'&DEST(1) LE 0).ZG6B                                      
&ZMS          SETC  '"DEST='    *KUKWA* MNOTE                                   
&ZMS          SETC  '&ZMS.&DEST"'                                               
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '                   
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                         
&ZMS          SETC  '&ZMS "TRACE",'             VALID KEYWORD                   
&ZMS          SETC  '&ZMS "TERM",'              VALID KEYWORD                   
              MNOTE 8,' &ZMS OR "BOTH".'                                        
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG6B         ANOP  ,                                                           
&XDEST        SETC  'TRACE'     SET DEFAULT KEYWORD                             
.ZG6C         ANOP  ,                                                           
&ZXDEST       SETC  'INPUT'     SET IN/OUTPUT                                   
.*----------------------------------------------------------------***           
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                             
              AIF   (N'&CED LE 1).ZG8A          CK NUM                          
&ZMS          SETC  '"CED='     *KPOSA* MNOTE                                   
&ZMS          SETC  '&ZMS.&CED"'                                                
&ZMS          SETC  '&ZMS "CED"'                                                
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                         
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG8A         ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                                 
&ZXCED        SETC  'INPUT'     SET IN/OUTPUT                                   
&XCED         SETC  '&CED(1)'   SET XVARIABLE                                   
              AIF   (N'&CED GT 1).ZG8B          MULTIPLE PARMS                  
&XCED         SETC  '&CED'      SET XVARIABLE                                   
.ZG8B         AIF   (K'&CED(1) GT 0).ZG8C                                       
&ZXCED        SETC  ''          RESET IN/OUTPUT                                 
&ZMS          SETC  'THE'       *KRQDA* MNOTE                                   
&ZMS          SETC  '&ZMS "CED" KEY AND ITS ARGUMENT ARE'                       
              MNOTE 8,' &ZMS REQUIRED.'                                         
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG8C         ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                            
              AIF   (K'&ZXCED LE 0).ZG8R        NOT I/O                         
              AIF   ('&XCED'(1,1) NE '(').ZG8R                                  
&ZCGPR        SETC  '&XCED'(2,K'&XCED-2)                                        
              AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                                 
              AIF   (K'&ZCGPR GT 2).ZG8Q                                        
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZG8Q      INVALID REG NAME                
.ZG8P         ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZG8R      NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZG8Q                                      
              AIF   ('&ZCGPR' LE '12').ZG8R                                     
.ZG8Q         ANOP  ,                                                           
&ZMS          SETC  '"CED='     *KGPRA* MNOTE                                   
&ZMS          SETC  '&ZMS.&CED"'                                                
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG8R         ANOP  ,                                                           
.*----------------------------------------------------------------***           
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                             
              AIF   (N'&BUFFER LE 1).ZG11A      CK NUM                          
&ZMS          SETC  '"BUFFER='  *KPOSA* MNOTE                                   
&ZMS          SETC  '&ZMS.&BUFFER"'                                             
&ZMS          SETC  '&ZMS "BUFFER"'                                             
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                         
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG11A        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                                 
&ZXBUFFER     SETC  'INPUT'     SET IN/OUTPUT                                   
&XBUFFER      SETC  '&BUFFER(1)'                SET XVARIABLE                   
              AIF   (N'&BUFFER GT 1).ZG11B      MULTIPLE PARMS                  
&XBUFFER      SETC  '&BUFFER'   SET XVARIABLE                                   
.ZG11B        AIF   (K'&BUFFER(1) GT 0).ZG11C                                   
&ZXBUFFER     SETC  ''          RESET IN/OUTPUT                                 
&ZMS          SETC  'THE'       *KRQDA* MNOTE                                   
&ZMS          SETC  '&ZMS "BUFFER" KEY AND ITS ARGUMENT ARE'                    
              MNOTE 8,' &ZMS REQUIRED.'                                         
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG11C        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                            
              AIF   (K'&ZXBUFFER LE 0).ZG11R    NOT I/O                         
              AIF   ('&XBUFFER'(1,1) NE '(').ZG11R                              
&ZCGPR        SETC  '&XBUFFER'(2,K'&XBUFFER-2)                                  
              AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                                
              AIF   (K'&ZCGPR GT 2).ZG11Q                                       
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZG11Q     INVALID REG NAME                
.ZG11P        ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZG11R     NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZG11Q                                     
              AIF   ('&ZCGPR' LE '12').ZG11R                                    
.ZG11Q        ANOP  ,                                                           
&ZMS          SETC  '"BUFFER='  *KGPRA* MNOTE                                   
&ZMS          SETC  '&ZMS.&BUFFER"'                                             
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG11R        ANOP  ,                                                           
.*----------------------------------------------------------------***           
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                             
              AIF   (N'&BUFLEN LE 1).ZG14A      CK NUM                          
&ZMS          SETC  '"BUFLEN='  *KPOSA* MNOTE                                   
&ZMS          SETC  '&ZMS.&BUFLEN"'                                             
&ZMS          SETC  '&ZMS "BUFLEN"'                                             
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                         
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG14A        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                                 
&ZXBUFLEN     SETC  'INPUT'     SET IN/OUTPUT                                   
&XBUFLEN      SETC  '&BUFLEN(1)'                SET XVARIABLE                   
              AIF   (N'&BUFLEN GT 1).ZG14B      MULTIPLE PARMS                  
&XBUFLEN      SETC  '&BUFLEN'   SET XVARIABLE                                   
.ZG14B        AIF   (K'&BUFLEN(1) GT 0).ZG14C                                   
&ZXBUFLEN     SETC  ''          RESET IN/OUTPUT                                 
&ZMS          SETC  'THE'       *KRQDA* MNOTE                                   
&ZMS          SETC  '&ZMS "BUFLEN" KEY AND ITS ARGUMENT ARE'                    
              MNOTE 8,' &ZMS REQUIRED.'                                         
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG14C        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                            
              AIF   (K'&ZXBUFLEN LE 0).ZG14R    NOT I/O                         
              AIF   ('&XBUFLEN'(1,1) NE '(').ZG14R                              
&ZCGPR        SETC  '&XBUFLEN'(2,K'&XBUFLEN-2)                                  
              AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                                
              AIF   (K'&ZCGPR GT 2).ZG14Q                                       
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZG14Q     INVALID REG NAME                
.ZG14P        ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZG14R     NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZG14Q                                     
              AIF   ('&ZCGPR' LE '12').ZG14R                                    
.ZG14Q        ANOP  ,                                                           
&ZMS          SETC  '"BUFLEN='  *KGPRA* MNOTE                                   
&ZMS          SETC  '&ZMS.&BUFLEN"'                                             
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG14R        ANOP  ,                                                           
.*----------------------------------------------------------------***           
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                            
              AIF   (N'&RETCODE LE 1).ZG17A     CK NUM                          
&ZMS          SETC  '"RETCODE='                 *KPOSA* MNOTE                   
&ZMS          SETC  '&ZMS.&RETCODE"'                                            
&ZMS          SETC  '&ZMS "RETCODE"'                                            
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                         
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG17A        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                                
              AIF   (K'&RETCODE(1) LE 0).ZG17C  NO PARM                         
&ZXRETCODE    SETC  'OUTPUT'    SET OUTPUT                                      
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE                   
              AIF   (N'&RETCODE GT 1).ZG17C     MULTIPLE PARMS                  
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                                   
.ZG17C        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                           
              AIF   (K'&ZXRETCODE LE 0).ZG17R   NOT I/O                         
              AIF   ('&XRETCODE'(1,1) NE '(').ZG17R                             
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                                
              AIF   ('&ZCGPR'(1,1) NE '0').ZG17P                                
              AIF   (K'&ZCGPR GT 2).ZG17Q                                       
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZG17Q     INVALID REG NAME                
.ZG17P        ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZG17R     NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZG17Q                                     
              AIF   ('&ZCGPR' LE '12').ZG17R                                    
.ZG17Q        ANOP  ,                                                           
&ZMS          SETC  '"RETCODE='                 *KGPRA* MNOTE                   
&ZMS          SETC  '&ZMS.&RETCODE"'                                            
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG17R        ANOP  ,                                                           
.******************************************************************             
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                                
.******************************************************************             
              ACTR  1000                                                        
.*----------------------------------------------------------------***           
.***AH.P02 EXTRA POSITIONALS                                                    
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS                       
&ZCVAL        SETC  ''          ERROR FIELD                                     
&ZAWRK        SETA  0           POSITIONAL NUMBER                               
.ZGLIST2      ANOP  ,                                                           
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                                 
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                        
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                           
              AGO   .ZGLIST2                                                    
.*                                                                              
.ZGLIST3      ANOP  ,                                                           
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA                     
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'   *PPOSA* MNOTE                   
&ZMS          SETC  '&ZMS "&ZCVAL"'                                             
&ZMS          SETC  '&ZMS CANNOT BE USED.'                                      
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                              
              MNOTE 8,' &ZMS ARE ALLOWED.'                                      
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZGLISTX      ANOP  ,                                                           
&ZASYSLNDX    SETA  0                                                           
.*-------------------------------------------------------------------           
.***AG.MF04 MF=(LE)                                                             
.ZGMFX        ANOP  ,           END OF FULL SYNTAX CHECK                        
.********************************************************************           
.***AE.MF01   PARTIAL MACRO SYNTAX CHECKING                                     
.********************************************************************           
              ACTR  1000                                                        
.*-------------------------------------------------------------------           
.***AE.MF01 MF=(LE)                                                             
              AIF   ('&XMF' NE 'E').ZEMF3                                       
              AIF   ('&XMFSCK' NE 'COMPLETE').ZEMF4                             
.ZEMF3        AGO   .ZEMFX      NO PARTIAL SYNTAX CHECK                         
.*                                                                              
.ZEMF4        ANOP  ,           PARTIAL SYNTAX CHECKING                         
.*----------------------------------------------------------------***           
.***AE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD                     
              AIF   (N'&DEST LE 1).ZE2A         CK NUM                          
&ZMS          SETC  '"DEST='    *KPOSA* MNOTE                                   
&ZMS          SETC  '&ZMS.&DEST"'                                               
&ZMS          SETC  '&ZMS "DEST"'                                               
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                         
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE2A         ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD                     
&XDEST        SETC  ''          INITIALIZE XVARIABLE                            
.ZE3A   AIF   ('&DEST(1)' NE 'TRACE').ZE4A                                      
&XDEST        SETC  'TRACE'     SET KEYWORD                                     
.*-------------------------------------------------------------------           
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD                     
.ZE4A   AIF   ('&DEST(1)' NE 'TERM').ZE5A                                       
&XDEST        SETC  'TERM'      SET KEYWORD                                     
.*-------------------------------------------------------------------           
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD                     
.ZE5A   AIF   ('&DEST(1)' NE 'BOTH').ZE6A                                       
&XDEST        SETC  'BOTH'      SET KEYWORD                                     
.*-------------------------------------------------------------------           
.***AE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD                     
.ZE6A         AIF   (K'&XDEST GT 0).ZE6B        KEYWORD                         
              AIF   (K'&DEST(1) LE 0).ZE6C                                      
&ZMS          SETC  '"DEST='    *KUKWA* MNOTE                                   
&ZMS          SETC  '&ZMS.&DEST"'                                               
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '                   
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                         
&ZMS          SETC  '&ZMS "TRACE",'             VALID KEYWORD                   
&ZMS          SETC  '&ZMS "TERM",'              VALID KEYWORD                   
              MNOTE 8,' &ZMS OR "BOTH".'                                        
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
              AGO   .ZE6C                                                       
.*                                                                              
.ZE6B         ANOP  ,                                                           
&ZXDEST       SETC  'INPUT'     SET IN/OUTPUT                                   
.ZE6C         ANOP  ,                                                           
.*----------------------------------------------------------------***           
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                                  
              AIF   (N'&CED LE 1).ZE8A          CK NUM                          
&ZMS          SETC  '"CED='     *KPOSA* MNOTE                                   
&ZMS          SETC  '&ZMS.&CED"'                                                
&ZMS          SETC  '&ZMS "CED"'                                                
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                         
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE8A         ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                             
              AIF   (K'&CED(1) LE 0).ZE8B       NO PRM                          
&ZXCED        SETC  'INPUT'     SET IN/OUTPUT                                   
&XCED         SETC  '&CED(1)'   SET XVARIABLE                                   
              AIF   (N'&CED GT 1).ZE8B          MULTIPLE PARMS                  
&XCED         SETC  '&CED'      SET XVARIABLE                                   
.ZE8B         ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                            
              AIF   (K'&ZXCED LE 0).ZE8R        NOT I/O                         
              AIF   ('&XCED'(1,1) NE '(').ZE8R                                  
&ZCGPR        SETC  '&XCED'(2,K'&XCED-2)                                        
              AIF   ('&ZCGPR'(1,1) NE '0').ZE8P                                 
              AIF   (K'&ZCGPR GT 2).ZE8Q                                        
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZE8Q      INVALID REG NAME                
.ZE8P         ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZE8R      NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZE8Q                                      
              AIF   ('&ZCGPR' LE '12').ZE8R                                     
.ZE8Q         ANOP  ,                                                           
&ZMS          SETC  '"CED='     *KGPRA* MNOTE                                   
&ZMS          SETC  '&ZMS.&CED"'                                                
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE8R         ANOP  ,                                                           
.*----------------------------------------------------------------***           
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                                  
              AIF   (N'&BUFFER LE 1).ZE11A      CK NUM                          
&ZMS          SETC  '"BUFFER='  *KPOSA* MNOTE                                   
&ZMS          SETC  '&ZMS.&BUFFER"'                                             
&ZMS          SETC  '&ZMS "BUFFER"'                                             
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                         
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE11A        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                             
              AIF   (K'&BUFFER(1) LE 0).ZE11B   NO PRM                          
&ZXBUFFER     SETC  'INPUT'     SET IN/OUTPUT                                   
&XBUFFER      SETC  '&BUFFER(1)'                SET XVARIABLE                   
              AIF   (N'&BUFFER GT 1).ZE11B      MULTIPLE PARMS                  
&XBUFFER      SETC  '&BUFFER'   SET XVARIABLE                                   
.ZE11B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                            
              AIF   (K'&ZXBUFFER LE 0).ZE11R    NOT I/O                         
              AIF   ('&XBUFFER'(1,1) NE '(').ZE11R                              
&ZCGPR        SETC  '&XBUFFER'(2,K'&XBUFFER-2)                                  
              AIF   ('&ZCGPR'(1,1) NE '0').ZE11P                                
              AIF   (K'&ZCGPR GT 2).ZE11Q                                       
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZE11Q     INVALID REG NAME                
.ZE11P        ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZE11R     NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZE11Q                                     
              AIF   ('&ZCGPR' LE '12').ZE11R                                    
.ZE11Q        ANOP  ,                                                           
&ZMS          SETC  '"BUFFER='  *KGPRA* MNOTE                                   
&ZMS          SETC  '&ZMS.&BUFFER"'                                             
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE11R        ANOP  ,                                                           
.*----------------------------------------------------------------***           
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                                  
              AIF   (N'&BUFLEN LE 1).ZE14A      CK NUM                          
&ZMS          SETC  '"BUFLEN='  *KPOSA* MNOTE                                   
&ZMS          SETC  '&ZMS.&BUFLEN"'                                             
&ZMS          SETC  '&ZMS "BUFLEN"'                                             
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                         
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE14A        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                             
              AIF   (K'&BUFLEN(1) LE 0).ZE14B   NO PRM                          
&ZXBUFLEN     SETC  'INPUT'     SET IN/OUTPUT                                   
&XBUFLEN      SETC  '&BUFLEN(1)'                SET XVARIABLE                   
              AIF   (N'&BUFLEN GT 1).ZE14B      MULTIPLE PARMS                  
&XBUFLEN      SETC  '&BUFLEN'   SET XVARIABLE                                   
.ZE14B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                            
              AIF   (K'&ZXBUFLEN LE 0).ZE14R    NOT I/O                         
              AIF   ('&XBUFLEN'(1,1) NE '(').ZE14R                              
&ZCGPR        SETC  '&XBUFLEN'(2,K'&XBUFLEN-2)                                  
              AIF   ('&ZCGPR'(1,1) NE '0').ZE14P                                
              AIF   (K'&ZCGPR GT 2).ZE14Q                                       
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZE14Q     INVALID REG NAME                
.ZE14P        ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZE14R     NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZE14Q                                     
              AIF   ('&ZCGPR' LE '12').ZE14R                                    
.ZE14Q        ANOP  ,                                                           
&ZMS          SETC  '"BUFLEN='  *KGPRA* MNOTE                                   
&ZMS          SETC  '&ZMS.&BUFLEN"'                                             
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE14R        ANOP  ,                                                           
.*----------------------------------------------------------------***           
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                                 
              AIF   (N'&RETCODE LE 1).ZE17A     CK NUM                          
&ZMS          SETC  '"RETCODE='                 *KPOSA* MNOTE                   
&ZMS          SETC  '&ZMS.&RETCODE"'                                            
&ZMS          SETC  '&ZMS "RETCODE"'                                            
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                         
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE17A        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                            
              AIF   (K'&RETCODE(1) LE 0).ZE17B  NO PRM                          
&ZXRETCODE    SETC  'OUTPUT'    SET IN/OUTPUT                                   
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE                   
              AIF   (N'&RETCODE GT 1).ZE17B     MULTIPLE PARMS                  
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                                   
.ZE17B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                           
              AIF   (K'&ZXRETCODE LE 0).ZE17R   NOT I/O                         
              AIF   ('&XRETCODE'(1,1) NE '(').ZE17R                             
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                                
              AIF   ('&ZCGPR'(1,1) NE '0').ZE17P                                
              AIF   (K'&ZCGPR GT 2).ZE17Q                                       
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZE17Q     INVALID REG NAME                
.ZE17P        ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZE17R     NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZE17Q                                     
              AIF   ('&ZCGPR' LE '12').ZE17R                                    
.ZE17Q        ANOP  ,                                                           
&ZMS          SETC  '"RETCODE='                 *KGPRA* MNOTE                   
&ZMS          SETC  '&ZMS.&RETCODE"'                                            
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE17R        ANOP  ,                                                           
.******************************************************************             
.***AF.P00 CHECK STANDALONE POSITIONAL VARIABLES                                
.******************************************************************             
              ACTR  1000                                                        
.*----------------------------------------------------------------***           
.***AF.P02 EXTRA POSITIONALS                                                    
              AIF   (N'&SYSLIST LE 0).ZELISTX   NO EXTRAS                       
&ZCVAL        SETC  ''          ERROR FIELD                                     
&ZAWRK        SETA  0           POSITIONAL NUMBER                               
.ZELIST2      ANOP  ,                                                           
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                                 
              AIF   (&ZAWRK GT N'&SYSLIST).ZELIST3  DONE                        
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                           
              AGO   .ZELIST2                                                    
.*                                                                              
.ZELIST3      ANOP  ,                                                           
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA                     
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'   *PPOSA* MNOTE                   
&ZMS          SETC  '&ZMS "&ZCVAL"'                                             
&ZMS          SETC  '&ZMS CANNOT BE USED.'                                      
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                              
              MNOTE 8,' &ZMS ARE ALLOWED.'                                      
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZELISTX      ANOP  ,                                                           
&ZASYSLNDX    SETA  0                                                           
.*-------------------------------------------------------------------           
.***AE.MF02 MF=(LE)                                                             
.ZEMFX        ANOP  ,           END OF PARTIAL SYNTAX CHECK                     
.*******************************************************************            
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                                      
.*******************************************************************            
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  PRINT IS ON                    
              PRINT OFF         ++ PR01                                         
.ZPRINTX      ANOP  ,                                                           
.********************************************************************           
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                            
.********************************************************************           
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX               
                      LCLA  &ZOPN1         INVOCATION INDEX                     
                      LCLC  &ZOPL(4095)    LABEL                                
                      LCLC  &ZOPO(4095)    OPERATION                            
                      LCLC  &ZOPV(4095)    VALUE                                
                      LCLC  &ZOPD(4095)    DESCRIPTION                          
.*                                                                              
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE             
.******************************************************************             
.***AL.AL01 CHSTRACE FMT=ARG MF=L PARAMETER AREA                                
.******************************************************************             
                      AIF   ('&XMF' NE 'L').ZLMFLX  NOT MF=L                    
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  '&XMFCTRL'                                          
&ZOPO(&ZOPN)          SETC  'DS'                                                
&ZOPV(&ZOPN)          SETC  '&XMFATTR'                                          
&ZOPD(&ZOPN)          SETC  '++ CHSTRACE ARG PARMS'                             
.*                                                                              
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCED@'                                   
&ZOPO(&ZOPN)          SETC  'DS'                                                
&ZOPV(&ZOPN)          SETC  'A'                                                 
&ZOPD(&ZOPN)          SETC  '++ INPUT CL96'                                     
.*                                                                              
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XBUFFER@'                                
&ZOPO(&ZOPN)          SETC  'DS'                                                
&ZOPV(&ZOPN)          SETC  'A'                                                 
&ZOPD(&ZOPN)          SETC  '++ INPUT CL80'                                     
.*                                                                              
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XBUFLEN@'                                
&ZOPO(&ZOPN)          SETC  'DS'                                                
&ZOPV(&ZOPN)          SETC  'A'                                                 
&ZOPD(&ZOPN)          SETC  '++ INPUT F'                                        
.*                                                                              
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDEST@'                                  
&ZOPO(&ZOPN)          SETC  'DS'                                                
&ZOPV(&ZOPN)          SETC  'A'                                                 
&ZOPD(&ZOPN)          SETC  '++ INPUT CL8'                                      
.*-------------------------------------------------------------------           
.***AL.AL08 CHSTRACE FMT=ARG MF=L PARAMETER AREA DEFINED                        
                      AGO   .ZMFLX         EXIT, MF=L DONE                      
.*                                                                              
.ZLMFLX               ANOP  ,                                                   
.********************************************************************           
.***AI.A01 CHSTRACE FMT=ARG FILL IN PARAMETER AREA                              
.********************************************************************           
                      AIF   ( &ZMACRET NE 0 ).ZLX1                              
                      ACTR  1000                                                
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  'XR'                                                
&ZOPV(&ZOPN)          SETC  '0,0'                                               
&ZOPD(&ZOPN)          SETC  '++ SET GPR TO ZERO'                                
.*                                                                              
&ZCVAL                SETC  'LA'            XA MODE                             
.*                                                                              
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR            
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR                 
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                         
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                        
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                         
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                        
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                           
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                            
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                           
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                            
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                                      
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                               
                      AGO   .ZIMFNX                                             
.*                                                                              
.ZIMFN2               ANOP ,                                                    
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                            
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                        
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                               
.ZIMFNX               ANOP ,                                                    
.*-------------------------------------------------------------------           
.***AI.A04 BIND=NAME XCED CL96 INPUT                                            
         AIF   ('&ZXCED' EQ '').ZI1B       NOT USED                             
         AIF   ('&XCED'(1,1) NE '(').ZI1A  NOT IN GPR                           
&ZCGPR   SETC  '&XCED'(2,K'&XCED-2)                                             
.*                                                                              
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  'ST'                                                
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0(,1)'                                      
&ZOPD(&ZOPN)          SETC  '++ INPUT'                                          
                      AGO   .ZI1B                                               
.*                                                                              
.ZI1A                 ANOP  ,                                                   
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                            
&ZOPV(&ZOPN)          SETC  '14,&XCED'                                          
&ZOPD(&ZOPN)          SETC  '++ BIND=NAME CL96'                                 
.*                                                                              
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  'ST'                                                
&ZOPV(&ZOPN)          SETC  '14,0(,1)'                                          
&ZOPD(&ZOPN)          SETC  '++ INPUT'                                          
.ZI1B                 ANOP  ,                                                   
.*-------------------------------------------------------------------           
.***AI.A04 BIND=NAME XBUFFER CL80 INPUT                                         
         AIF   ('&ZXBUFFER' EQ '').ZI2B    NOT USED                             
         AIF   ('&XBUFFER'(1,1) NE '(').ZI2A  NOT IN GPR                        
&ZCGPR   SETC  '&XBUFFER'(2,K'&XBUFFER-2)                                       
.*                                                                              
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  'ST'                                                
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4(,1)'                                      
&ZOPD(&ZOPN)          SETC  '++ INPUT'                                          
                      AGO   .ZI2B                                               
.*                                                                              
.ZI2A                 ANOP  ,                                                   
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                            
&ZOPV(&ZOPN)          SETC  '14,&XBUFFER'                                       
&ZOPD(&ZOPN)          SETC  '++ BIND=NAME CL80'                                 
.*                                                                              
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  'ST'                                                
&ZOPV(&ZOPN)          SETC  '14,4(,1)'                                          
&ZOPD(&ZOPN)          SETC  '++ INPUT'                                          
.ZI2B                 ANOP  ,                                                   
.*-------------------------------------------------------------------           
.***AI.A04 BIND=NAME XBUFLEN X INPUT                                            
         AIF   ('&ZXBUFLEN' EQ '').ZI3B    NOT USED                             
         AIF   ('&XBUFLEN'(1,1) NE '(').ZI3A  NOT IN GPR                        
&ZCGPR   SETC  '&XBUFLEN'(2,K'&XBUFLEN-2)                                       
.*                                                                              
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  'ST'                                                
&ZOPV(&ZOPN)          SETC  '&ZCGPR,8(,1)'                                      
&ZOPD(&ZOPN)          SETC  '++ INPUT'                                          
                      AGO   .ZI3B                                               
.*                                                                              
.ZI3A                 ANOP  ,                                                   
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                            
&ZOPV(&ZOPN)          SETC  '14,&XBUFLEN'                                       
&ZOPD(&ZOPN)          SETC  '++ BIND=NAME X'                                    
.*                                                                              
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  'ST'                                                
&ZOPV(&ZOPN)          SETC  '14,8(,1)'                                          
&ZOPD(&ZOPN)          SETC  '++ INPUT'                                          
.ZI3B                 ANOP  ,                                                   
.*-------------------------------------------------------------------           
.***AI.A11 BIND=VALUE XDEST CL8 INPUT                                           
         AIF   ('&ZXDEST' EQ '').ZI4A      NOT USED                             
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                            
&ZOPV(&ZOPN)          SETC  '14,=CL8''&XDEST'''                                 
&ZOPD(&ZOPN)          SETC  '++ CL8'                                            
.*                                                                              
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  'ST'                                                
&ZOPV(&ZOPN)          SETC  '14,12(,1)'                                         
&ZOPD(&ZOPN)          SETC  '++ INPUT'                                          
.ZI4A                 ANOP  ,                                                   
&ZOPN1                SETA &ZOPN                                                
.*-------------------------------------------------------------------           
.***AI.C01 BASSM                                                                
.*                                                                              
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  'L'                                                 
&ZOPV(&ZOPN)          SETC  '15,CEDTRCE'                                        
&ZOPD(&ZOPN)          SETC  '++ GET CODE MODULE BASE'                           
.*                                                                              
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  'O'                                                 
&ZOPV(&ZOPN)          SETC  '15,=X''80000000'''                                 
&ZOPD(&ZOPN)          SETC  '++ OR ON HIGH ORDER BIT FOR AMODE31'               
.*                                                                              
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  'BASSM'                                             
&ZOPV(&ZOPN)          SETC  '14,15'                                             
&ZOPD(&ZOPN)          SETC  '++ CALL CHSTTRCE/SAVE MODE'                        
.*                                                                              
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  'LA'                                                
&ZOPV(&ZOPN)          SETC  '1,8'                                               
&ZOPD(&ZOPN)          SETC  '++ LOCATION COUNTER OFFSET'                        
.*                                                                              
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  'ALR'                                               
&ZOPV(&ZOPN)          SETC  '14,1'                                              
&ZOPD(&ZOPN)          SETC  '++ REESTABLISH CURRENT LOCATION'                   
.*                                                                              
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  'BSM'                                               
&ZOPV(&ZOPN)          SETC  '0,14'                                              
&ZOPD(&ZOPN)          SETC  '++ RESTORE MODE SAVED ON BASSM'                    
.*******************************************************************            
.***AO.X01  LABEL TO BYPASS INVOCATION                                          
.*******************************************************************            
&ZOPN     SETA  &ZOPN+1                                                         
&ZOPL(&ZOPN)   SETC  'AMGE&SYSNDX'                                              
&ZOPO(&ZOPN)   SETC  'DS'                                                       
&ZOPV(&ZOPN)   SETC  '0H'                                                       
&ZOPD(&ZOPN)   SETC  '++ BYPASS INVOCATION'                                     
.*******************************************************************            
.***AO.X02  RETURN CODE PROCESSING                                              
.*******************************************************************            
                      AIF   (N'&RETCODE LE 0).ZMRETX                            
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2                    
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX                     
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX                     
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX                       
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                        
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  'ST'                                                
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                                      
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                                
                      AGO   .ZMRETX                                             
.*                                                                              
.ZMRET2               ANOP  ,                                                   
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                        
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                        
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                        
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                          
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                           
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  'LR'                                                
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                         
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                                
.ZMRETX               ANOP  ,                                                   
.*******************************************************************            
.***AO.X04  LABEL FOR MF=L PROCESSING                                           
.*******************************************************************            
.ZMFLX                ANOP  ,              MF=L PROCESSING                      
.*******************************************************************            
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                                       
.*******************************************************************            
                      ACTR  1000                                                
.*                                                                              
                      LCLA  &ZLC           COLUMN POSITION                      
                      LCLA  &ZOPX          LIST TABLE INDEX                     
                      LCLC  &ZLL           LABEL                                
                      LCLC  &ZLOP          OPERATION                            
                      LCLC  &ZLV           VALUE                                
                      LCLC  &ZLD           DESCRIPTION                          
.*                                                                              
&ZOPX                 SETA  1                                                   
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE                    
&ZLL                  SETC  '&ZOPL(&ZOPX)'                                      
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                                      
&ZLV                  SETC  '&ZOPV(&ZOPX)'                                      
&ZLD                  SETC  '&ZOPD(&ZOPX)'                                      
                      AIF   (K'&ZLD LE 0).ZL5                                   
&ZLC                  SETA  35             COMMENT COLUMN                       
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                            
&ZLC                  SETA  33             COMMMENT COLUMN                      
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                           
&ZLV                  SETC  '&ZLV'.' '                                          
                      AGO   .ZL3                                                
.*                                                                              
.ZL4                  ANOP  ,                                                   
&ZLV                  SETC  '&ZLV'.' '                                          
.ZL5                  ANOP  ,                                                   
&ZLV                  SETC  '&ZLV'.'&ZLD'                                       
.*                                                                              
&ZLL     &ZLOP &ZLV                                                             
.*                                                                              
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE                       
                      AGO   .ZL2           CONTINUE LOOPING                     
.*                                                                              
.ZLX                  ANOP  ,                                                   
.*******************************************************************            
.***AP.X01  FORMAT GENERATED CODE                                               
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE                    
&ZLL                  SETC  '&ZOPL(&ZOPX)'                                      
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                                      
&ZLV                  SETC  '&ZOPV(&ZOPX)'                                      
&ZLD                  SETC  '&ZOPD(&ZOPX)'                                      
                      AIF   (K'&ZLD LE 0).ZL51                                  
&ZLC                  SETA  35             COMMENT COLUMN                       
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                           
&ZLC                  SETA  33             COMMENT COLUMN                       
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                          
&ZLV                  SETC  '&ZLV'.' '                                          
                      AGO   .ZL31                                               
.*                                                                              
.ZL41                 ANOP  ,                                                   
&ZLV                  SETC  '&ZLV'.' '                                          
.ZL51                 ANOP  ,                                                   
&ZLV                  SETC  '&ZLV'.'&ZLD'                                       
.*                                                                              
&ZLL     &ZLOP &ZLV                                                             
.*                                                                              
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE                       
                      AGO   .ZL21          CONTINUE LOOPING                     
.*                                                                              
.ZLX1                 ANOP  ,                                                   
.*******************************************************************            
.***AP.X02  END OF CHSTRACE MACRO                                               
&ZCHSTRACE            SETC  'YES'          SET CHSTRACE USED                    
         POP   PRINT                                                            
*                                            CHSTRACE-1                         
         SPACE 1                                                                
         MEND                                                                   
**********************************************************************/         
*/*PB.O0001 INVOKE *** MACRO-----------------------------------------*/         
*%CHSTRACE: MACRO KEYS(DEST,CED,BUFFER,BUFLEN,RETCODE,MF);                      
*  ANS('?'||MACLABEL||' '||'CHSTRACP '||MACLIST||                               
*         ' '||MACKEYS||';') COL(MACLMAR);                                      
*%END CHSTRACE;                                                                 
