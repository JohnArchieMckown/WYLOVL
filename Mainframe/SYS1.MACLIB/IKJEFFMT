*        %GOTO MTPLS1;              /* BILINGUAL MAPPING                        
         MACRO                                                                  
         IKJEFFMT &MTDSECT=NO,&MTNINST=4,&MTFORMAT=OLD        @E2115B7          
.*C-REL. 4 TWO BUFFERS FOR EXTRACTING MESSAGES                @Z40GQKU          
         AGO .MTBAL01              ** SKIP PLS MACRO STATEMENT **   */          
*%MTPLS1: ;                        /* BAL/PLS HEADER                            
.MTBAL01  ANOP                                                       */         
*/********************************************************************/         
*/*                                                                  */         
*/* *** IKJEFFMT ***                                         @E2115B7*/         
*/*                                                                  */         
*/* STATUS -- E22D2DA TSO/E FOR MVS/ESA 07/30/90             @E22D2DA*/         
*/*                                                                  */         
*/* COPYRIGHT --                                             @E2115B7*/         
*/*    5685-025 COPYRIGHT (C) IBM CORP. 1976 1990,           @E22D2DA*/         
*/*    LICENSED MATERIAL PROGRAM - PROPERTY OF IBM           @E2115B7*/         
*/*    REFER TO COPYRIGHT INSTRUCTIONS FORM NUMBER G120-2083.@E2115B7*/         
*/*                                                                  */         
*/*                                                                  */         
*/* DESCRIPTION - BILINGUAL MAPPING MACRO FOR PARAMETER LIST TO      */         
*/*               IKJEFF02 (TSO MESSAGE ISSUER SERVICE ROUTINE)      */         
*/*                                                                  */         
*/* FUNCTION    - THE PARAMETER LIST IDENTIFIES A MESSAGE (WHICH     */         
*/*               MAY HAVE A SECOND LEVEL MESSAGE), DESCRIBES        */         
*/*               INSERT(S) FOR THE MESSAGE, AND INDICATES WHETHER   */         
*/*               TO ISSUE THE MESSAGE AS A PUTLINE, PUTGET, WTO,    */         
*/*               OR A WRITE TO PROGRAMMER AND/OR RETURN THE MESSAGE */         
*/*               (TWO LEVELS IF MULTILEVEL) IN CALLER'S BUFFER.     */         
*/*                                                                  */         
*/*               THE PARAMETER LIST ALSO POINTS TO A MESSAGE        */         
*/*               CSECT CONTAINING THE MESSAGE'S TEXT.  THE          */         
*/*               IKJTSMSG MACRO IS USED TO GENERATE THE             */         
*/*               NECESSARY DC'S FOR THE TEXT AND THE OFFSETS        */         
*/*               TO INSERTS IN THE MESSAGE.  THE LAST ENTRY IN      */         
*/*               THE CSECT MUST BE AN IKJTSMSG MACRO WITH NO        */         
*/*               OPERANDS.  SEE THE MICROFICHE LISTING OF MODULE    */         
*/*               IKJEFF55 FOR EXAMPLES OF MESSAGE TEXTS GENERATED   */         
*/*               BY THE IKJTSMSG MACRO.                             */         
*/*                                                                  */         
*/*               REGISTER 1 -> MTPARML = MSGTABLE PARMLIST          */         
*/*               REGISTER 15 WILL CONTAIN IKJEFF02'S RETURN CODE    */         
*/*                           TO THE CALLER (0 IF SUCCESSFUL,        */         
*/*                           76 IF PARAMETER LIST ERROR (MESSAGE IS */         
*/*                           ALSO ISSUED), OR ERROR RETURN CODE     */         
*/*                           FROM PUTLINE OR PUTGET)                */         
*/*                                                                  */         
*/* METHOD OF ACCESS                                                 */         
*/*      PL/S   - %MTNEW='1' - - - - - - IF DON'T WANT BASED         */         
*/*               %MTBASE='ANY BASE' - - IF MTNEW ISN'T SPECIFIED,   */         
*/*                                       DEFAULTS TO BASED(MSGPTR)  */         
*/*               %MTINSRTN='N'  - - - - TO GET INSERT ARRAY WITH N  */         
*/*                                       ELEMENTS - DEFAULTS TO     */         
*/*                                       4 INSERTS, NO ARRAY        */         
*/*               %MTFORMAT='NEW'  - - - TO GET NEW, 31-BIT  @E2115B7*/         
*/*                                       FORMAT - DEFAULTS  @E2115B7*/         
*/*                                       TO 'OLD' 24-BIT    @E2115B7*/         
*/*                                       FORMAT             @E2115B7*/         
*/*               %INCLUDE SYSLIB(IKJEFFMT)                          */         
*/*                                                                  */         
*/*      BAL    - <<MACRO SPECIFICATION IS                           */         
*/*             IKJEFFMT MTDSECT=XX,MTNINST=XX,MTFORMAT=XX>> @E2115B7*/         
*/*               MTDSECT=YES  IF DON'T WANT TO GET CORE,            */         
*/*                 THEN CODE      LA    REG,MYMTCORE  *CALLER AREA* */         
*/*                                USING MTDSECTD,REG                */         
*/*               MTDSECT=NO  IS THE DEFAULT.                        */         
*/*                                                                  */         
*/*               MTNINST=NUMBER  SPECIFIES NUMBER OF INSERT ENTRIES */         
*/*               IN THE PARAMETER LIST.  MTNINST=4 IS THE DEFAULT.  */         
*/*                                                                  */         
*/*               MTFORMAT=NEW IF WANT NEW 31-BIT FORMAT     @E2115B7*/         
*/*               MTFORMAT=OLD IS THE DEFAULT FOR 24-BIT     @E2115B7*/         
*/*                                                          @E2115B7*/         
*/* CHANGE ACTIVITY --                                       @E2115B7*/         
*/*                 E2115B7 - JBB2115 TSO/E FOR MVS/XA       @E2115B7*/         
*/*                 PBY0144 - NO BEGINNING COMMENT DELIMITER @PBY0174*/         
*/*                           BEFORE THE CHANGE FLAG.        @PBY0174*/         
*/*                 PBY0174 - FIX PBY0144 SO THAT BEGINNING  @PBY0174*/         
*/*                           COMMENT DELIMITER DOES NOT     @PBY0174*/         
*/*                           CAUSE INFO MESSAGE IN COMPILE. @PBY0174*/         
*/*                 E22D2DA - TSO/E V2.2.0 - NLS ENABLEMENT. @E22D2DA*/         
*/*                                                                  */         
*/********************************************************************/         
*        %GOTO MTPLS2;              /* BAL ONLY FOLLOWS                         
.*       SET UP DSECT CARD IF MTDSECT=YES ON MACRO                              
         AIF   ('&MTDSECT' EQ 'NO').MTBAL1  **MACRO STATEMENT**                 
MTDSECTD DSECT                                                                  
.MTBAL1  ANOP             **MACRO STATEMENT**                                   
         DS    0F                                                               
MTPARML  EQU   *          .<<PARAMETER LIST TO IKJEFF02>>                       
*                         .   UNUSED NON-INSERT FIELDS MUST BE ZEROED           
MTPLPTR  DC    A(0)       .LISTPTR = POINTER TO MESSAGE DESCRIPTION             
*                         .   SECTION OF PARAMETER LIST                         
MTCPPLP  DC    A(0)       .TMCTPTR = POINTER TO TMP'S CPPL CONTROL              
*                         .   BLOCK (REQUIRED FOR PUTLINE OR PUTGET)            
MTECBP   DC    A(0)       .ECBPTR = OPTIONAL PUTGET/PUTLINE ECB POINTER         
MTRESV1  DC    A(0)       .** RESERVED FOR FUTURE USE **                        
         ORG   MTRESV1                                                          
MTHIGH   DC    B'10000000' .CAN SET HIGH-ORDER BIT FOR STANDARD LINKAGE         
         ORG   MTRESV1+4                                                        
***********************************************************************         
*  IKJEFFMT - MESSAGE DESCRIPTION SECTION OF PARAMETER LIST           *         
***********************************************************************         
MTCSECTP DC    A(0)       .MSGCSECT = POINTER TO CSECT WITH CALLER'S            
*                         .   MESSAGE TEXTS, BUILT WITH IKJTSMSG MACRO          
MTSW1    DC    B'0'       .SW = BYTE OF SWITCHES                                
MTNOIDSW EQU   X'80'      .BIT ON IF PRINTING DATA (SEE IKJEFF02'S              
*                         .   PROLOGUE FOR DETAILS)                             
MTPUTLSW EQU   X'40'      .BIT ON IF ISSUE MESSAGE AS PUTLINE, NOT              
*                         .   DEFAULT OF PUTGET. FOR PUTLINE, MESSAGE           
*                         .   INSERTS FOR A SECOND LEVEL MESSAGE MUST           
*                         .   BE LISTED BEFORE INSERTS FOR FIRST LEVEL.         
*                         .   PUTGET MESSAGES MUST HAVE A SECOND LEVEL.         
MTWTOSW  EQU   X'20'      .BIT ON IF ISSUE MESSAGE AS A WTO WITH                
*                         .   ROUTCDE=(2), DESC=(6).  MESSAGE IS                
*                         .   TRUNCATED IF IT EXCEEDS 124 CHARACTERS.           
MTHEXSW  EQU   X'10'      .BIT ON IF TRANSLATE NUMERIC INSERTS TO               
*                         .   PRINTABLE HEX (X'VALUE'), NOT DECIMAL             
MTKEY1SW EQU   X'08'      .BIT ON IF DO MODESET TO KEY 0 BEFORE ISSUE           
*                         .   A PUTLINE OR PUTGET, THEN RETURN TO               
*                         .   KEY 1 (IF KEY 0 OR 8, DON'T NEED MODESET)         
MTJOBISW EQU   X'04'      .BIT ON IF COMPRESS BLANKS OUT OF XX(YY)              
*                         .   TYPE INSERT                                       
MTWTPSW  EQU   X'02'      .BIT ON IF ISSUE MESSAGE AS A WRITE TO                
*                         .   PROGRAMMER (WITH DESC=(7) ).  SEVERAL             
*                         .   WTP'S ARE ISSUED IF MESSAGE EXCEEDS               
*                         .   124 CHARACTERS.                                   
MTNHEXSW EQU   X'01'      .BIT ON IF TRANSLATE ALL NUMERIC INSERTS              
*                         .   TO PRINTABLE DECIMAL (DEFAULT IS                  
*                         .   DECIMAL IF VALUE LESS THAN X'FFFF',               
*                         .   OTHERWISE TRANSLATE TO PRINTABLE HEX)             
         AIF   ('&MTFORMAT' EQ 'NEW').MTBAL2                   @E2115B7         
***********************************************************************         
MTREPLYP DC    AL3(0)     .MTREPLYP = PTR TO REPLY FROM PUTGET @E2115B7         
*                         .   IN THE FORMAT LL-TEXT, WHERE LL IS                
*                         .   A TWO-BYTE LENGTH FIELD WITH LENGTH OF            
*                         .   THE REPLY (INCLUDING LENGTH OF LL FIELD).         
*                         .   IKJEFF02 OBTAINS THIS BUFFER IN SUBPOOL 0         
*                         .   AND IT MAY BE FREED BY THE CALLER.                
*                         .   THE REPLY IS CONVERTED TO UPPER CASE.             
*/*             NOTE:                                                */         
*/*             PARSE IS A BETTER INTERFACE TO USE FOR       @Z40GQKU*/         
*/*             PROMPTING RATHER THAN THIS IKJEFF02 PUTGET   @Z40GQKU*/         
*/*             INTERFACE.  (IKJIDENT OR IKJKEYWORD/IKJNAME  @Z40GQKU*/         
*/*             MACROS CAN BE USED TO DESCRIBE THE SYNTAX OF @Z40GQKU*/         
*/*             THE REQUIRED REPLY, AND THEN PARSE WILL DO   @Z40GQKU*/         
*/*             ALL PROMPTING FOR INVALID REPLIES AND WILL   @Z40GQKU*/         
*/*             ISSUE A MESSAGE IF IT IS UNABLE TO PROMPT.   @Z40GQKU*/         
*/*             SEE MICROFICHE MODULE IKJEFF13 FOR AN EXAMPLE@Z40GQKU*/         
*/*             OF PROMPTING USING PARSE.)                   @Z40GQKU*/         
MTSW2    DC    B'0'       .SW2 = SECOND BYTE OF SWITCHES                        
MT2OLDSW EQU   X'80'      .BIT ON IF MTOLDPTR POINTS TO SECOND LEVEL            
*                         .   MESSAGE ALREADY IN PUTLINE/PUTGET O.L.D.          
*                         .   FORMAT.  (USED FOR TSO STATUS COMMAND.)           
MTDOMSW  EQU   X'40'      .BIT ON IF DELETE WRITE TO PROGRAMMER OR              
*                         .   WTO MESSAGES FROM DISPLAY CONSOLE                 
MTNOXQSW EQU   X'20'      .BIT ON TO OVERRIDE DEFAULT OF X' ' AROUND            
*                         .   INSERTS CONVERTED TO PRINTABLE HEX                
MTNPLMSW EQU   X'10'      .BIT ON TO OVERRIDE DEFAULT OF WRITE TO               
*                         .   PROGRAMMER ERROR MESSAGE IF PUTLINE FAILS         
MTPGMSW  EQU   X'08'      .BIT ON IF WANT ERROR MESSAGE IF PUTGET FAILS         
MTEXTRCN EQU   X'04'      .BIT ON IF WANT EXTRACT AND ALSO     @Z40GQKU         
*                         .   ISSUE MESSAGE                    @Z40GQKU         
MTTRANS  EQU   X'01'      .BIT ON IF WANT MESSAGE TRANSLATED   @E22D2DA         
***********************************************************************         
MTRESV2  DC    AL3(0)     .** RESERVED FOR FUTURE USE **                        
MTOLDPTR DC    A(0)       .POINTS TO O.L.D. IF MT2OLDSW IS ON                   
MTEXTRCT DS    0F         .DESCRIBES BUFFER CONTAINING FIRST   @Z40GQKU         
*                         .  LEVEL MESSAGE EXTRACT INFORMATION @Z40GQKU         
MTEXTRLN DC    AL1(0)     .LENGTH OF EXTRACT BUFFER.  ACTS AS  @Z40GQKU         
*                         .  SWITCH TO INDICATE EXTRACT WANTED.@Z40GQKU         
MTEXTRBF DC    AL3(0)     .PTR TO EXTRACT BUFFER SUPPLIED BY   @Z40GQKU         
*                         .  CALLER. THE MESSAGE IS RETURNED   @Z40GQKU         
*                         .  IN THE FORM 'LL00TEXT' WHERE LL   @Z40GQKU         
*                         .  IS THE LENGTH OF TEXT +4. IF THE  @Z40GQKU         
*                         .  CALLER'S BUFFER IS TOO SMALL, AS  @Z40GQKU         
*                         .  MUCH OF LL00TEXT IS MOVED AS      @Z40GQKU         
*                         .  POSSIBLE.                         @Z40GQKU         
*                         .  THE CALLER MUST COMPARE MESSAGE   @Z40GQKU         
*                         .  SIZE WITH BUFFER SIZE TO KNOW IF  @Z40GQKU         
*                         .  MESSAGE HAS BEEN TRUNCATED.       @Z40GQKU         
MTEXTRC2 DS    0F         .AREA DESCRIBING BUFFER CONTAINING   @Z40GQKU         
*                         .  INFO FOR EXTRACT OF SECOND LEVEL  @Z40GQKU         
*                         .  MESSAGE.                          @Z40GQKU         
MTEXTRL2 DC    AL1(0)     .LENGTH OF EXTRACT BUFFER FOR        @Z40GQKU         
*                         .  SECOND LEVEL MESSAGE - ACTS AS    @Z40GQKU         
*                         .  SWITCH TO INDICATE EXTRACT WANTED @Z40GQKU         
*                         .  FOR SECOND LEVEL MESSAGE          @Z40GQKU         
MTEXTRB2 DC    AL3(0)     .PTR TO EXTRACT BUFFER, CALLER-      @Z40GQKU         
*                         .  SUPPLIED, FOR SECOND LEVEL        @Z40GQKU         
*                         .  MESSAGE.  SEE MTEXTRBF FOR        @Z40GQKU         
*                         .  DESCRIPTION.                      @Z40GQKU         
*                         .  IF THERE IS NO SECOND LEVEL       @Z40GQKU         
*                         .  MESSAGE, THE LENGTH FIELD OF THE  @Z40GQKU         
*                         .  SECOND BUFFER WILL BE ZERO ON     @Z40GQKU         
*                         .  RETURN TO CALLER.                 @Z40GQKU         
MTMSGID  DC    C'XXXX'    .MSGID = ID USED TO SEARCH FOR MESSAGE                
*                         .   TEXT IN THE MESSAGE CSECT                         
MTINSRTS DC    &MTNINST.A(0) .AREA WITH INFO FOR MESSAGE INSERT(S).             
*                         .   HAVE MAXIMUM OF 255 PARTS TO A FIRST OR           
*                         .   LATER LEVEL MESSAGE, BUT IF A MESSAGE             
*                         .   LEVEL EXCEEDS 256 CHARACTERS, IT IS               
*                         .   TRUNCATED.  TRAILING BLANKS ARE DELETED           
*                         .   FROM INSERTS.  EXTRA INSERT FIELDS NEED           
*                         .   NOT BE ZEROED.                                    
MTEND    EQU   *          .USE TO COMPUTE MT LENGTH AND FOR ORG'S               
         ORG   MTINSRTS                                                         
MTLEN    DS    AL1        .LENGTH OF AN INSERT FOR THE MESSAGE.  IF             
*                         .   LENGTH (OR ADDRESS) IS ZERO, NO INSERTION         
*                         .   IS DONE FOR THIS ENTRY, BUT FOLLOWING             
*                         .   INSERTIONS ARE DONE.  MAXIMUM IS 127.             
         ORG   MTLEN+0                                                          
MTHIGHL  DS    BL1        .HIGH-ORDER BIT ON IF TRANSLATE FIRST ONE TO          
*                         .   FOUR BYTES OF THE INSERT FROM HEX TO              
*                         .   CHARACTER (IGNORE REST).  SEE MTHEXSW.            
         ORG   MTLEN+1                                                          
MTADDR   DS    AL3        .ADDRESS OF AN INSERT FOR THE MESSAGE.                
*                         .   INSERTS FOR SECOND LEVEL MESSAGE MUST             
*                         .   BE FIRST IF ISSUING PUTLINE OR WTP.               
         ORG   MTLEN+0                                                          
MTINSRT  DS    AL4        .USE THIS LABEL TO REFER TO AN INSERT ENTRY.          
         AGO   .MTBAL3                                         @E2115B7         
.MTBAL2  ANOP                                                  @E2115B7         
MTEXTRLN DC    AL1(0)     .LENGTH OF EXTRACT BUFFER.  ACTS AS  @E2115B7         
*                         .  SWITCH TO INDICATE EXTRACT WANTED.@E2115B7         
MTEXTRL2 DC    AL1(0)     .LENGTH OF EXTRACT BUFFER FOR        @E2115B7         
*                         .  SECOND LEVEL MESSAGE - ACTS AS    @E2115B7         
*                         .  SWITCH TO INDICATE EXTRACT WANTED @E2115B7         
*                         .  FOR SECOND LEVEL MESSAGE          @E2115B7         
MTRESV3  DC    AL1(0)     .** RESERVED FOR FUTURE USE **       @E2115B7         
MTSW2    DC    B'0'       .SW2 = SECOND BYTE OF SWITCHES       @E2115B7         
MT2OLDSW EQU   X'80'      .BIT ON IF MTOLDPTR POINTS TO SECOND @E2115B7         
*                         .  LEVEL MESSAGE ALREADY IN PUTLINE  @E2115B7         
*                         .  /PUTGET O.L.D. FORMAT. (USED FOR  @E2115B7         
*                         .  TSO STATUS COMMAND.)              @E2115B7         
MTDOMSW  EQU   X'40'      .BIT ON IF DELETE WRITE TO           @E2115B7         
*                         .  PROGRAMMER OR WTO MESSAGES FROM   @E2115B7         
*                         .  DISPLAY CONSOLE                   @E2115B7         
MTNOXQSW EQU   X'20'      .BIT ON TO OVERRIDE DEFAULT OF X' '  @E2115B7         
*                         .  AROUND INSERTS CONVERTED TO       @E2115B7         
*                         .  PRINTABLE HEX                     @E2115B7         
MTNPLMSW EQU   X'10'      .BIT ON TO OVERRIDE DEFAULT OF WRITE @E2115B7         
*                         .  TO PROGRAMMER ERROR MESSAGE IF    @E2115B7         
*                         .  PUTLINE FAILS                     @E2115B7         
MTPGMSW  EQU   X'08'      .BIT ON IF WANT ERROR MESSAGE IF     @E2115B7         
*                         .  PUTGET FAILS                      @E2115B7         
MTEXTRCN EQU   X'04'      .BIT ON IF WANT EXTRACT AND ALSO     @E2115B7         
*                         .  ISSUE MESSAGE                     @E2115B7         
MTFMT    EQU   X'02'      .BIT ON IF WANT NEW 31-BIT FORMAT    @E2115B7         
MTTRANS  EQU   X'01'      .BIT ON IF WANT MESSAGE TRANSLATED   @E22D2DA         
***************************************************************@E2115B7         
MTRESV2  DC    AL3(0)     .** RESERVED FOR FUTURE USE **       @E2115B7         
MTOLDPTR DC    A(0)       .POINTS TO O.L.D. IF MT2OLDSW IS ON  @E2115B7         
MTEXTRBF DC    AL4(0)     .DESCRIBES BUFFER CONTAINING FIRST   @E2115B7         
*                         .  LEVEL MESSAGE EXTRACT INFORMATION @E2115B7         
*                         .PTR TO EXTRACT BUFFER SUPPLIED BY   @E2115B7         
*                         .  CALLER. THE MESSAGE IS RETURNED   @E2115B7         
*                         .  IN THE FORM 'LL00TEXT' WHERE LL   @E2115B7         
*                         .  IS THE LENGTH OF TEXT +4. IF THE  @E2115B7         
*                         .  CALLER'S BUFFER IS TOO SMALL, AS  @E2115B7         
*                         .  MUCH OF LL00TEXT IS MOVED AS      @E2115B7         
*                         .  POSSIBLE.                         @E2115B7         
*                         .  THE CALLER MUST COMPARE MESSAGE   @E2115B7         
*                         .  SIZE WITH BUFFER SIZE TO KNOW IF  @E2115B7         
*                         .  MESSAGE HAS BEEN TRUNCATED.       @E2115B7         
MTEXTRB2 DC    AL4(0)     .AREA DESCRIBING BUFFER CONTAINING   @E2115B7         
*                         .  INFO FOR EXTRACT OF SECOND LEVEL  @E2115B7         
*                         .  MESSAGE.                          @E2115B7         
*                         .PTR TO EXTRACT BUFFER, CALLER-      @E2115B7         
*                         .  SUPPLIED, FOR SECOND LEVEL        @E2115B7         
*                         .  MESSAGE.  SEE MTEXTRBF FOR        @E2115B7         
*                         .  DESCRIPTION.                      @E2115B7         
*                         .  IF THERE IS NO SECOND LEVEL       @E2115B7         
*                         .  MESSAGE, THE LENGTH FIELD OF THE  @E2115B7         
*                         .  SECOND BUFFER WILL BE ZERO ON     @E2115B7         
*                         .  RETURN TO CALLER.                 @E2115B7         
MTMSGID  DC    C'XXXX'    .MSGID = ID USED TO SEARCH FOR MSG   @E2115B7         
*                         .  TEXT IN THE MESSAGE CSECT         @E2115B7         
MTREPLYP DC    AL4(0)     .MTREPLYP=POINTER TO REPLY FROM      @E2115B7         
*                         .  PUTGET, IN THE FORMAT LL-TEXT,    @E2115B7         
*                         .  WHERE LL IS A TWO-BYTE LENGTH     @E2115B7         
*                         .  FIELD WITH LENGTH OF THE REPLY    @E2115B7         
*                         .  (INCLUDING LENGTH OF LL FIELD).   @E2115B7         
*                         .  IKJEFF02 OBTAINS THIS BUFFER IN   @E2115B7         
*                         .  SUBPOOL 0 AND IT MAY BE FREED BY  @E2115B7         
*                         .  THE CALLER.  THE REPLY IS         @E2115B7         
*                         .  CONVERTED TO UPPER CASE.          @E2115B7         
*/*             NOTE:                                        @E2115B7*/         
*/*             PARSE IS A BETTER INTERFACE TO USE FOR       @E2115B7*/         
*/*             PROMPTING RATHER THAN THIS IKJEFF02 PUTGET   @E2115B7*/         
*/*             INTERFACE.  (IKJIDENT OR IKJKEYWORD/IKJNAME  @E2115B7*/         
*/*             MACROS CAN BE USED TO DESCRIBE THE SYNTAX OF @E2115B7*/         
*/*             THE REQUIRED REPLY, AND THEN PARSE WILL DO   @E2115B7*/         
*/*             ALL PROMPTING FOR INVALID REPLIES AND WILL   @E2115B7*/         
*/*             ISSUE A MESSAGE IF IT IS UNABLE TO PROMPT.   @E2115B7*/         
*/*             SEE MICROFICHE MODULE IKJEFF13 FOR EXAMPLE   @E2115B7*/         
*/*             OF PROMPTING USING PARSE.)                   @E2115B7*/         
MTINSRTS DC    &MTNINST.A(0) .AREA WITH INFO FOR MSG INSERT(S).@E2115B7         
         DC    &MTNINST.A(0) .31-BIT FORMAT NEEDS 8 BYTES/ENTRY@E2115B7         
*                         .   HAVE MAX OF 255 PARTS TO 1ST OR  @E2115B7         
*                         .   LATER LEVEL MSG, BUT IF A MSG    @E2115B7         
*                         .   LEVEL EXCEEDS 256 CHARACTERS, IT @E2115B7         
*                         .   IS TRUNCATED.  TRAILING BLANKS   @E2115B7         
*                         .   ARE DELETED FROM INSERTS.  EXTRA @E2115B7         
*                         .   INSERT FIELDS NEED NOT BE ZEROED.@E2115B7         
MTEND    EQU   *          .USE TO COMPUTE MT LENGTH & FOR ORG'S@E2115B7         
         ORG   MTINSRTS                                        @E2115B7         
MTLEN    DS    AL4        .LENGTH OF AN INSERT FOR THE MSG. IF @E2115B7         
*                         .   LENGTH (OR ADDRESS) IS ZERO, NO  @E2115B7         
*                         .   INSERTION IS DONE FOR THIS ENTRY,@E2115B7         
*                         .   BUT FOLLOWING INSERTIONS ARE     @E2115B7         
*                         .   DONE.  MAXIMUM IS 127.           @E2115B7         
         ORG   MTLEN+0                                         @E2115B7         
MTHIGHL  DS    BL1        .HIGH-ORDER BIT ON IF TRANSLATE      @E2115B7         
*                         .   FIRST 1 TO 4 BYTES OF INSERT     @E2115B7         
*                         .   FROM HEX TO CHARACTER            @E2115B7         
*                         .   (IGNORE REST).  SEE MTHEXSW.     @E2115B7         
         ORG   MTLEN+4                                         @E2115B7         
MTADDR   DS    AL4        .ADDRESS OF AN INSERT FOR THE MSG.   @E2115B7         
*                         .  INSERTS FOR 2ND LEVEL MSG MUST BE @E2115B7         
*                         .  BE 1ST IF ISSUING PUTLINE OR WTP. @E2115B7         
         ORG   MTLEN+0                                         @E2115B7         
MTINSRT  DS    AL4        .USE LABEL TO REFER TO INSERT ENTRY. @E2115B7         
.MTBAL3  ANOP                                                  @E2115B7         
         ORG   MTEND                                                            
MTLENMT  EQU   MTEND-MTPARML .LENGTH OF PARMLIST TO IKJEFF02                    
***********************************************************************         
         MEND                                                      , */         
*%MTPLS2: ;                                                                     
*       DCL 1 MSGTABLE                                                          
*%IF MTNEW='1' %THEN                                                            
*%GOTO MTSKIP1;                                                                 
*%IF MTBASE='' %THEN                                                            
*%MTBASE='BASED(MSGPTR)';                                                       
*           MTBASE                                                              
*%MTSKIP1:;                                                                     
*         ,              /* <<MESSAGE TABLE FOR IKJEFF02>>  UNUSED              
*                           FIELDS MUST BE ZEROED */                            
*    2 LISTPTR  PTR(31), /* POINTER TO MESSAGE DESCRIPTION SECTION OF           
*                           PARAMETER LIST */                                   
*    2 TMCTPTR  PTR (31),/* POINTER TO TMP'S TMCT CONTROL BLOCK                 
*                           (REQUIRED FOR PUTLINE OR PUTGET) */                 
*     3 MTCPPL  PTR(31), /* (ALSO CALLED CPPL)   */                             
*    2 ECBPTR   PTR(31), /* OPTIONAL PUTLINE/PUTGET ECB POINTER */              
*    2 *        PTR(31), /* ** RESERVED FOR FUTURE USE **       */              
*     3 MTHIGH  BIT(1),  /* CAN TURN ON FOR STANDARD LINKAGE */                 
*    2 MSGCSECT PTR(31), /* <<MESSAGE DESCRIPTION SECTION STARTS HERE>>         
*                           POINTER TO CSECT WITH CALLER'S MESSAGE              
*                           TEXTS, BUILT WITH IKJTSMSG MACRO */                 
*    2 SW        PTR(8), /* FIRST BYTE OF SWITCHES */                           
*     3 MTNOIDSW BIT(1), /* ON IF PRINTING DATA (SEE IKJEFF02'S                 
*                           PROLOGUE FOR DETAILS) */                            
*     3 MTPUTLSW BIT(1), /* ON IF ISSUE PUTLINE, NOT DEFAULT OF PUTGET.         
*                           FOR PUTLINE, MESSAGE INSERTS FOR A SECOND           
*                           LEVEL MESSAGE MUST BE LISTED BEFORE INSERTS         
*                           FOR A FIRST LEVEL. PUTGET MESSAGES MUST             
*                           HAVE A SECOND LEVEL. */                             
*     3 MTWTOSW  BIT(1), /* ON IF ISSUE MESSAGE AS A WTO WITH                   
*                           ROUTCDE=(2), DESC=(6).  MESSAGE IS                  
*                           TRUNCATED IF IT EXCEEDS 124 CHARACTERS. */          
*     3 MTHEXSW  BIT(1), /* ON IF TRANSLATE NUMERIC INSERTS TO                  
*                           PRINTABLE HEX (X'VALUE'), NOT DECIMAL */            
*     3 MTKEY1SW BIT(1), /* ON IF DO MODESET TO KEY 0 BEFORE ISSUE              
*                           A PUTLINE OR PUTGET, THEN RETURN TO KEY 1           
*                           (IF KEY 0 OR 8, DON'T NEED MODESET) */              
*     3 MTJOBISW BIT(1), /* ON IF COMPRESS BLANKS OUT OF XX(YY)                 
*                           TYPE INSERT */                                      
*     3 MTWTPSW BIT(1),  /* ON IF ISSUE MESSAGE AS A WRITE TO                   
*                           PROGRAMMER (WITH DESC=(7).  IF MESSAGE IS           
*                           LONGER THAN 124 CHARACTERS, SEVERAL WTP'S           
*                           ARE ISSUED. */                                      
*     3 MTNHEXSW BIT(1), /* ON IF TRANSLATE ALL NUMERIC INSERTS                 
*                           TO PRINTABLE DECIMAL (DEFAULT IS                    
*                           DECIMAL IF VALUE LESS THAN X'FFFF',                 
*                           OTHERWISE TRANSLATE TO PRINTABLE HEX) */            
*%IF MTFORMAT='NEW' %THEN                                  /*@E2115B7*/         
*%GOTO MTNEWF;                                             /*@E2115B7*/         
*    2 MTREPLYP PTR(24), /* POINTER TO REPLY FROM PUTGET     @PCC00B7*/         
*     3 RETMSG  PTR(24), /* FOR COMPATIBILITY WITH OLD NAME  @PCC00B7*/         
*    2 SW2      PTR(8),  /* SECOND BYTE OF SWITCHES */                          
*     3 MT2OLDSW BIT(1), /* ON IF MTOLDPTR POINTS TO SECOND LEVEL               
*                           MESSAGE ALREADY IN PUTLINE/PUTGET O.L.D.            
*                           FORMAT.  IKJEFF02 WILL COPY IKJ MSG ID FROM         
*                           FIRST LEVEL INTO FIRST SEGMENT OF SECOND            
*                           LEVEL MESSAGE.  (FOR TSO STATUS COMMAND.)*/         
*     3 MTDOMSW BIT(1),  /* ON IF DELETE WRITE TO PROGRAMMER OR WTO             
*                           MESSAGES FROM DISPLAY CONSOLE */                    
*     3 MTNOXQSW BIT(1), /* ON IF OVERRIDE DEFAULT OF X' ' AROUND               
*                           INSERTS CONVERTED TO PRINTABLE HEX */               
*     3 MTNPLMSW BIT(1), /* ON IF OVERRIDE DEFAULT OF WRITE TO                  
*                           PROGRAMMER ERROR MESSAGE IF PUTLINE FAILS*/         
*     3 MTPGMSW  BIT(1), /* ON IF WANT AN ERROR MSG IF PUTGET FAILS */          
*     3 MTEXTRCN BIT(1), /*ON IF WANT EXTRACT PUT IN BUFFER  @Z40GQKU           
*                          AND CONTINUE TO ISSUE MESSAGE     @Z40GQKU*/         
*     3 *        BIT(1), /* RESERVED - DO NOT USE            @E22D2DA*/         
*     3 MTTRANS  BIT(1), /* ON IF WANT MESSAGE TRANSLATED    @E22D2DA*/         
*    2 *        PTR(24), /* ** RESERVED **       */                             
*    2 MTOLDPTR PTR(31), /* POINTS TO O.L.D. IF MT2OLDSW IS ON */               
*    2 MTEXTRCT PTR(31), /*AREA TO DESCRIBE BUFFER           @Z40GQKU           
*                          CONTAINING INFO FOR EXTRACT       @Z40GQKU           
*                          OF FIRST LEVEL MESSAGE            @Z40GQKU*/         
*     3 MTEXTRLN PTR(8), /*LENGTH OF EXTRACT BUFFER - ACTS   @Z40GQKU           
*                          AS SWITCH TO INDICATE EXTRACT     @Z40GQKU           
*                          WANTED FOR FIRST LEVEL MESSAGE.   @Z40GQKU*/         
*    3 MTEXTRBF PTR(24), /* PTR TO EXTRACT BUFFER SUPPLIED BY CALLER.           
*                           THE MESSAGE IS RETURNED IN THE FORM                 
*                           'LL00TEXT' WHERE LL IS THE LENGTH OF THE            
*                           TEXT +4. IF THE CALLER'S BUFFER IS TOO              
*                           SMALL, AS MUCH OF LL00TEXT IS MOVED AS              
*                           POSSIBLE.                                           
*                           THE CALLER MUST COMPARE MESSAGE  @Z40GQKU           
*                           SIZE WITH BUFFER SIZE TO KNOW IF @Z40GQKU           
*                           MESSAGE HAS BEEN TRUNCATED.      @Z40GQKU*/         
*    2 MTEXTRC2 PTR(31), /*AREA DESCRIBING BUFFER CONTAINING @Z40GQKU           
*                          INFO FOR EXTRACT OF SECOND LEVEL  @Z40GQKU           
*                          MESSAGE.                          @Z40GQKU*/         
*     3 MTEXTRL2 PTR(8), /*LENGTH OF EXTRACT BUFFER FOR      @Z40GQKU           
*                          SECOND LEVEL MESSAGE - ACTS AS    @Z40GQKU           
*                          SWITCH TO INDICATE EXTRACT WANTED @Z40GQKU           
*                          FOR SECOND LEVEL MESSAGE.         @Z40GQKU*/         
*     3 MTEXTRB2 PTR(24),/*PTR TO EXTRACT BUFFER, CALLER-    @Z40GQKU           
*                          SUPPLIED, FOR SECOND LEVEL        @Z40GQKU           
*                          MESSAGE.  SEE MTEXTRBF FOR        @Z40GQKU           
*                          DESCRIPTION.                      @Z40GQKU           
*                          IF THERE IS NO SECOND LEVEL       @Z40GQKU           
*                          MESSAGE, THE LENGTH FIELD OF THE  @Z40GQKU           
*                          SECOND BUFFER WILL BE ZERO ON     @Z40GQKU           
*                          RETURN TO CALLER.                 @Z40GQKU*/         
*    2 MSGID CHAR (4),   /* MESSAGE ID USED TO SEARCH FOR MESSAGE               
*                           TEXT IN THE MESSAGE CSECT */                        
*    2 MTINSRTS,         /* USE THIS NAME TO ZERO INSERT AREA.  HAVE            
*                           MAXIMUM OF 255 PARTS TO A FIRST OR LATER            
*                           LEVEL MESSAGE, BUT IF A MESSAGE LEVEL               
*                           EXCEEDS 256 CHARACTERS, IT IS TRUNCATED.            
*                           TRAILING BLANKS ARE DELETED FROM INSERTS.           
*                           EXTRA INSERT FIELDS NEED NOT BE ZEROED.             
*                           IF AN INSERT LENGTH (OR ADDRESS) FIELD IS           
*                           ZERO, NO INSERT IS DONE FOR THE ENTRY, BUT          
*                           FOLLOWING INSERTS ARE DONE.              */         
*%IF MTINSRTN='' %THEN  /* DO NOT CREATE ARRAY FOR INSRTS IF NULL KWD*/         
*%GOTO MTSKIP2; /* ARRAY WITH INSERTS FOLLOWS */                                
*     3 MTINSRT(MTINSRTN),       /* ARRAY OF INSERTS */                         
*      4 MTLEN PTR(8),   /* LENGTH OF INSERT(N).  MAXIMUM LENGTH                
*                           IS 127. */                                          
*       5 MTHIGHL BIT(1),/* ON IF TRANSLATE FIRST ONE TO FOUR                   
*                           BYTES OF INSERT(N) FROM HEX TO CHARACTER            
*                           (IGNORE REST).  SEE MTHEXSW. */                     
*      4 MTADDR PTR(24); /* ADDRESS OF INSERT(N).  INSERTS FOR                  
*                           SECOND LEVEL MESSAGE MUST BE FIRST IF               
*                           ISSUING PUTLINE OR WTP. */                          
*%GOTO MTSKIP3; /* DCLS FOR 4 INSERTS, NO ARRAY, FOLLOW */                      
*%MTSKIP2:;                                                                     
*     3 L1       PTR  (8),       /* LENGTH OF INSERT 1.  MAXIMUM                
*                           LENGTH IS 127. */                                   
*      4 HIGHL1 BIT (1), /* ON IF TRANSLATE FIRST                               
*                           4 BYTES OF INSERT                                   
*                           FROM HEX TO CHARACTER                               
*                           (IGNORE REST).  SEE MTHEXSW. */                     
*     3 VAR1     PTR (24),       /* ADDRESS OF INSERT1                          
*                           -NOTE- INSERTS FOR                                  
*                           SECOND LEVEL MSG MUST                               
*                           BE FIRST IF PUTLINE OR WTP */                       
*     3 L2       PTR  (8),/* LEN OF INSERT2       */                            
*      4 HIGHL2 BIT (1), /* BIT FOR INSERT2      */                             
*     3 VAR2     PTR (24),/* ADDR OF INSERT2      */                            
*     3 L3 PTR (8),      /* LEN OF INSERT3       */                             
*      4 HIGHL3 BIT (1), /* BIT FOR INSERT3      */                             
*     3 VAR3 PTR (24),   /* ADDR OF INSERT3      */                             
*     3 L4 PTR (8),      /* LEN OF INSERT4       */                             
*      4 HIGHL4 BIT (1), /* BIT FOR INSERT4      */                             
*     3 VAR4 PTR (24),   /* ADDR OF INSERT4      */                             
*    2 MSGRTN   PTR (31);/* MESSAGE ROUTINE ADDRESS - NOT USED                  
*                                   BY IKJEFF02          */                     
*%GOTO MTSKIP3;                                            /*@E2115B7*/         
*%MTNEWF:;                                                 /*@E2115B7*/         
*    2 MTEXTRLN PTR(8),  /* LENGTH OF EXTRACT BUFFER - ACTS  @E2115B7           
*                           AS SWITCH TO INDICATE EXTRACT    @E2115B7           
*                           WANTED FOR FIRST LEVEL MESSAGE.  @E2115B7*/         
*    2 MTEXTRL2 PTR(8),  /* LENGTH OF EXTRACT BUFFER FOR     @E2115B7           
*                           SECOND LEVEL MESSAGE - ACTS AS   @E2115B7           
*                           SWITCH TO INDICATE EXTRACT WANTED@E2115B7           
*                           FOR SECOND LEVEL MESSAGE.        @E2115B7*/         
*    2 *        PTR(8),  /* ** RESERVED **                   @E2115B7*/         
*    2 MTSW2    PTR(8),  /* SECOND BYTE OF SWITCHES          @E2115B7*/         
*     3 MT2OLDSW BIT(1), /* ON IF MTOLDPTR POINTS TO SECOND  @E2115B7           
*                           LEVEL MESSAGE ALREADY IN PUTLINE @E2115B7           
*                           /PUTGET O.L.D. FORMAT.  IKJEFF02 @E2115B7           
*                           WILL COPY IKJ MSG ID FROM FIRST  @E2115B7           
*                           LEVEL INTO FIRST SEGMENT OF      @E2115B7           
*                           SECOND LEVEL MESSAGE.  (FOR TSO  @E2115B7           
*                           STATUS COMMAND.)                 @E2115B7*/         
*     3 MTDOMSW BIT(1),  /* ON IF DELETE WRITE TO PROGRAMMER @E2115B7           
*                           OR WTO MSGS FROM DISPLAY CONSOLE @E2115B7*/         
*     3 MTNOXQSW BIT(1), /* ON IF OVERRIDE DEFAULT OF X' '   @E2115B7           
*                           AROUND INSERTS CONVERTED TO      @E2115B7           
*                           PRINTABLE HEX                    @E2115B7*/         
*     3 MTNPLMSW BIT(1), /* ON IF OVERRIDE DEFAULT OF WRITE  @E2115B7           
*                           TO PROGRAMMER ERROR MESSAGE IF   @E2115B7           
*                           PUTLINE FAILS                    @E2115B7*/         
*     3 MTPGMSW  BIT(1), /* ON IF WANT AN ERROR MESSAGE      @E2115B7           
*                           IF PUTGET FAILS                  @E2115B7*/         
*     3 MTEXTRCN BIT(1), /* ON IF WANT EXTRACT PUT IN BUFFER @E2115B7           
*                           AND CONTINUE TO ISSUE MESSAGE    @E2115B7*/         
*     3 MTFMT    BIT(1), /* ON IF WANT NEW 31-BIT FORMAT     @E2115B7*/         
*     3 MTTRANS  BIT(1), /* ON IF WANT MESSAGE TRANSLATED    @E22D2DA*/         
*    2 *        PTR(24), /* ** RESERVED **                   @E2115B7*/         
*    2 MTOLDPTR PTR(31), /* POINTS TO O.L.D. IF MT2OLDSW ON  @E2115B7*/         
*    2 MTEXTRBF PTR(31), /* AREA TO DESCRIBE BUFFER          @E2115B7           
*                           CONTAINING INFO FOR EXTRACT      @E2115B7           
*                           OF FIRST LEVEL MESSAGE           @E2115B7*/         
*                        /* PTR TO EXTRACT BUFFER SUPPLIED   @E2115B7           
*                           BY CALLER. THE MESSAGE IS        @E2115B7           
*                           RETURNED IN THE FORM 'LL00TEXT'  @E2115B7           
*                           WHERE LL IS THE LENGTH OF THE    @E2115B7           
*                           TEXT +4. IF THE CALLER'S BUFFER  @E2115B7           
*                           IS TOO SMALL, AS MUCH OF         @E2115B7           
*                           LL00TEXT IS MOVED AS POSSIBLE.   @E2115B7           
*                           THE CALLER MUST COMPARE MESSAGE  @E2115B7           
*                           SIZE WITH BUFFER SIZE TO KNOW IF @E2115B7           
*                           MESSAGE HAS BEEN TRUNCATED.      @E2115B7*/         
*    2 MTEXTRB2 PTR(31), /* AREA DESCRIBING BUFFER CONTAINING@E2115B7           
*                           INFO FOR EXTRACT OF SECOND LEVEL @E2115B7           
*                           MESSAGE.                         @E2115B7*/         
*                        /* PTR TO EXTRACT BUFFER, CALLER-   @E2115B7           
*                           SUPPLIED, FOR SECOND LEVEL       @E2115B7           
*                           MESSAGE.  SEE MTEXTRBF FOR       @E2115B7           
*                           DESCRIPTION.                     @E2115B7           
*                           IF THERE IS NO SECOND LEVEL      @E2115B7           
*                           MESSAGE, THE LENGTH FIELD OF THE @E2115B7           
*                           SECOND BUFFER WILL BE ZERO ON    @E2115B7           
*                           RETURN TO CALLER.                @E2115B7*/         
*    2 MSGID CHAR (4),   /* MESSAGE ID USED TO SEARCH FOR    @E2115B7           
*                           MESSAGE TEXT IN MESSAGE CSECT    @E2115B7*/         
*    2 MTREPLYP PTR(31), /* POINTER TO REPLY FROM PUTGET     @E2115B7*/         
*      3 RETMSG PTR(31), /* FOR COMPATIBILITY WITH OLD NAME  @E2115B7*/         
*    2 MTINSRTS,         /* USE THIS NAME TO ZERO INSERT     @E2115B7           
*                           AREA.  HAVE MAXIMUM OF 255 PARTS @E2115B7           
*                           TO FIRST OR LATER LEVEL MESSAGE, @E2115B7           
*                           BUT IF A MESSAGE LEVEL EXCEEDS   @E2115B7           
*                           256 CHARACTERS, IT IS TRUNCATED. @E2115B7           
*                           TRAILING BLANKS ARE DELETED FROM @E2115B7           
*                           INSERTS.  EXTRA INSERT FIELDS    @E2115B7           
*                           NEED NOT BE ZEROED. IF AN INSERT @E2115B7           
*                           LENGTH (OR ADDRESS) FIELD IS     @E2115B7           
*                           ZERO, NO INSERT IS DONE FOR THE  @E2115B7           
*                           ENTRY, BUT FOLLOWING INSERTS ARE @E2115B7           
*                           DONE.                            @E2115B7*/         
*%IF MTINSRTN='' %THEN   /* DO NOT CREATE ARRAY FOR INSERTS  @E2115B7           
*                           IF NULL KEYWORD                  @E2115B7*/         
*%GOTO MTSKIP4;          /* ARRAY WITH INSERTS FOLLOWS       @E2115B7*/         
*     3 MTINSRT(MTINSRTN),       /* ARRAY OF INSERTS         @E2115B7*/         
*      4 MTLEN PTR(31),  /* LENGTH OF INSERT(N).  MAXIMUM    @E2115B7           
*                           LENGTH IS 127.                   @E2115B7*/         
*       5 MTHIGHL BIT(1),/* ON IF TRANSLATE FIRST 1 TO 4     @E2115B7           
*                           BYTES OF INSERT(N) FROM HEX TO   @E2115B7           
*                           CHARACTER (IGNORE REST).         @E2115B7           
*                           SEE MTHEXSW.                     @E2115B7*/         
*      4 MTADDR PTR(31); /* ADDRESS OF INSERT(N).  INSERTS   @E2115B7           
*                           FOR SECOND LEVEL MESSAGE MUST BE @E2115B7           
*                           FIRST IF ISSUING PUTLINE OR WTP. @E2115B7*/         
*%GOTO MTSKIP3;      /* DCLS FOR 4 INSERTS, NO ARRAY, FOLLOW @E2115B7*/         
*%MTSKIP4:;              /*                                  @PBY0144*/         
*     3 L1     PTR (31), /* LENGTH OF INSERT 1.              @E2115B7           
*                           MAXIMUM LENGTH IS 127.           @E2115B7*/         
*      4 HIGHL1 BIT (1), /* ON IF TRANSLATE FIRST 4 BYTES OF @E2115B7           
*                           INSERT FORM HEX TO CHARACTER     @E2115B7           
*                           (IGNORE REST).  SEE MTHEXSW.     @E2115B7*/         
*     3 VAR1   PTR (31), /* ADDRESS OF INSERT1               @E2115B7           
*                           -NOTE- INSERTS FOR 2ND LEVEL MSG @E2115B7           
*                           MUST BE FIRST IF PUTLINE OR WTP  @E2115B7*/         
*     3 L2     PTR (31), /* LEN OF INSERT2                   @E2115B7*/         
*      4 HIGHL2 BIT (1), /* BIT FOR INSERT2                  @E2115B7*/         
*     3 VAR2   PTR (31), /* ADDR OF INSERT2                  @E2115B7*/         
*     3 L3 PTR (31),     /* LEN OF INSERT3                   @E2115B7*/         
*      4 HIGHL3 BIT (1), /* BIT FOR INSERT3                  @E2115B7*/         
*     3 VAR3 PTR (31),   /* ADDR OF INSERT3                  @E2115B7*/         
*     3 L4 PTR (31),     /* LEN OF INSERT4                   @E2115B7*/         
*      4 HIGHL4 BIT (1), /* BIT FOR INSERT4                  @E2115B7*/         
*     3 VAR4 PTR (31),   /* ADDR OF INSERT4                  @E2115B7*/         
*    2 MSGRTN   PTR (31);/* MESSAGE ROUTINE ADDRESS - NOT    @E2115B7           
*                                   USED BY IKJEFF02         @E2115B7*/         
*%MTSKIP3:;                                                                     
*                                                                               
*/********************************************************************/         
*/*  IKJEFFMT - FORMAT OF REPLY FROM TSO USER                        */         
*/*             NOTE:                                                */         
*/*             PARSE IS A BETTER INTERFACE TO USE FOR       @Z40GQKU*/         
*/*             PROMPTING RATHER THAN THIS IKJEFF02 PUTGET   @Z40GQKU*/         
*/*             INTERFACE.  (IKJIDENT OR IKJKEYWORD/IKJNAME  @Z40GQKU*/         
*/*             MACROS CAN BE USED TO DESCRIBE THE SYNTAX OF @Z40GQKU*/         
*/*             THE REQUIRED REPLY, AND THEN PARSE WILL DO   @Z40GQKU*/         
*/*             ALL PROMPTING FOR INVALID REPLIES AND WILL   @Z40GQKU*/         
*/*             ISSUE A MESSAGE IF IT IS UNABLE TO PROMPT.   @Z40GQKU*/         
*/*             SEE MICROFICHE MODULE IKJEFF13 FOR AN EXAMPLE@Z40GQKU*/         
*/*             OF PROMPTING USING PARSE.)                   @Z40GQKU*/         
*/********************************************************************/         
*   DCL 1 RET BDY(WORD) BASED(MTREPLYP),/*MESSAGE REPLY BUF. @E2115B7           
*                           IKJEFF02 OBTAINS THE BUFFER IN SUBPOOL 0            
*                           AND THE CALLER MAY FREE THIS BUFFER. */             
*         2 RETSIZE FIXED(15), /* BUFFER SIZE, INCLUDING THESE TWO              
*                           BYTES  */                                           
*         2 RETCHAR CHAR(999);   /* REPLY TEXT FROM PUTGET.    @Z40GQKU         
*                         IKJEFF02 CONVERTS REPLY TO UPPER CASE. */             
*                                                                               
*/********************************************************************/         
*/*  IKJEFFMT - CPPL AND ECB POINTED TO BY MESSAGE TABLE             */         
*/********************************************************************/         
*   DCL MSGTMCT BASED (TMCTPTR);  /* TMP'S CPPL CONTROL BLOCK   */              
*   DCL MSGECB BASED (ECBPTR);    /* ECB FOR PUTLINE/PUTGET  */                 
*/********************************************************************/         
*/*  END OF IKJEFFMT MAPPING MACRO                                   */         
*/********************************************************************/         
