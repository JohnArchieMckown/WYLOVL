*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  DSPSERV                               -11/10/99-<1> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Data Space Services                           * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5647-A01 (C) COPYRIGHT IBM CORP. 1988, 2000                     * 00001200
*                                                                     * 00001300
* STATUS= HBB7703                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      DSPSERV provides an interface to request data space services.  * 00002100
*                                                                     * 00002200
*      The following services are provided:                           * 00002300
*                                                                     * 00002400
*                                                                     * 00002500
*      CREATE   CREATE a data space.                                  * 00002600
*                                                                     * 00002700
*      DELETE   DELETE a data space.                                  * 00002800
*                                                                     * 00002900
*      RELEASE  RELEASE an area of a data space.                      * 00003000
*                                                                     * 00003100
*      DEFINE   DEFINE attributes for an area of a data space.        * 00003200
*                                                                     * 00003300
*      EXTEND   EXTEND the current size of a data space.              * 00003400
*                                                                     * 00003500
*      OUT      indicate that an area of a data space should no       * 00003600
*               longer occupy central storage.                        * 00003700
*                                                                     * 00003800
*      LOAD     request that an area of a data space be brought into  * 00003900
*               central storage.                                      * 00004000
*                                                                     * 00004100
*                                                                     * 00004200
*                                                                     * 00004300
*      Register Usage:                                                * 00004400
*                                                                     * 00004500
*      AR/GPRs 0, 1, 14, and 15 are not preserved. AR/GPRs 2-13 are   * 00004600
*      preserved.  No save area is required and the contents of GPR   * 00004700
*      13 are not used.                                               * 00004800
*                                                                     * 00004900
*      Upon return GPR 15 contains a return code and GPR 0 may        * 00005000
*      contain a reason code.                                         * 00005100
*                                                                     * 00005200
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00005300
*                                                                     * 00005400
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00005500
*                                                                     * 00005600
*01* ENVIRONMENT:                                                     * 00005700
*                                                                     * 00005800
*                                                                     * 00005900
*      Dispatchable unit mode: Task or SRB mode.                      * 00006000
*                                                                     * 00006100
*      Minimum authorization: Problem or Supervisor state.  Any PSW   * 00006200
*                        key.                                         * 00006300
*                                                                     * 00006400
*                        The caller must be executing in supervisor   * 00006500
*                        state or with a system (0-7) PSW key to use  * 00006600
*                        the following parameters.                    * 00006700
*                                                                     * 00006800
*                                                                     * 00006900
*                        o   CREATE                                   * 00007000
*                                                                     * 00007100
*                                                                     * 00007200
*                            -   DREF YES                             * 00007300
*                                                                     * 00007400
*                            -   SCOPE ALL                            * 00007500
*                                                                     * 00007600
*                            -   SCOPE COMMON                         * 00007700
*                                                                     * 00007800
*                            -   KEY                                  * 00007900
*                                                                     * 00008000
*                            -   SHARE YES                            * 00008100
*                                                                     * 00008200
*                                                                     * 00008300
*                                                                     * 00008400
*                        o   DELETE                                   * 00008500
*                                                                     * 00008600
*                                                                     * 00008700
*                            -   TTOKEN                               * 00008800
*                                                                     * 00008900
*                                                                     * 00009000
*                                                                     * 00009100
*                        o   DEFINE                                   * 00009200
*                                                                     * 00009300
*                                                                     * 00009400
*                                                                     * 00009500
*      AMODE:            31-bit.                                      * 00009600
*                                                                     * 00009700
*      ASC mode:         Primary or Access Register.                  * 00009800
*                                                                     * 00009900
*                        Any primary address space, any secondary     * 00010000
*                        address space, any home address space.       * 00010100
*                                                                     * 00010200
*      Serialization:                                                 * 00010300
*                                                                     * 00010400
*                                                                     * 00010500
*                        CREATE          Enabled and unlocked.        * 00010600
*                                                                     * 00010700
*                        DELETE          Enabled and unlocked.        * 00010800
*                                                                     * 00010900
*                        RELEASE         If the request is against    * 00011000
*                                        enabled reference storage:   * 00011100
*                                        Enabled and unlocked.        * 00011200
*                                        If the request is against    * 00011300
*                                        disabled reference storage:  * 00011400
*                                        Enabled or disabled.  No RSM * 00011500
*                                        locks may be held. No locks  * 00011600
*                                        higher than the RSM lock may * 00011700
*                                        be held.                     * 00011800
*                                                                     * 00011900
*                        DEFINE IOON     If the request is against    * 00012000
*                                        enabled reference storage:   * 00012100
*                                        Enabled and unlocked.        * 00012200
*                                        If the request is against    * 00012300
*                                        disabled reference (or       * 00012400
*                                        IOONed) storage:  Enabled or * 00012500
*                                        disabled.  No RSM locks may  * 00012600
*                                        be held. No locks higher     * 00012700
*                                        than the RSM lock may be     * 00012800
*                                        held.                        * 00012900
*                                                                     * 00013000
*                        DEFINE IOOFF    Enabled or disabled. No RSM  * 00013100
*                                        locks may be held. No locks  * 00013200
*                                        higher than the RSM lock may * 00013300
*                                        be held.                     * 00013400
*                                                                     * 00013500
*                        DEFINE DREFON   If the request is against    * 00013600
*                                        enabled reference storage:   * 00013700
*                                        Enabled and unlocked.        * 00013800
*                                        If the request is against    * 00013900
*                                        disabled reference (or       * 00014000
*                                        IOONed) storage:  Enabled or * 00014100
*                                        disabled.  No RSM locks may  * 00014200
*                                        be held. No locks higher     * 00014300
*                                        than the RSM lock may be     * 00014400
*                                        held.                        * 00014500
*                                                                     * 00014600
*                        DEFINE DREFOFF  Enabled or disabled. No RSM  * 00014700
*                                        locks may be held. No locks  * 00014800
*                                        higher than the RSM lock may * 00014900
*                                        be held.                     * 00015000
*                                                                     * 00015100
*                        EXTEND          Enabled and unlocked.        * 00015200
*                                                                     * 00015300
*                        OUT             Enabled and unlocked.        * 00015400
*                                                                     * 00015500
*                        LOAD            Enabled and unlocked.        * 00015600
*                                                                     * 00015700
*                                                                     * 00015800
*                                                                     * 00015900
*      Restrictions:                                                  * 00016000
*                                                                     * 00016100
*                        When DSPSERV is invoked disabled, the        * 00016200
*                        DISABLED(YES) keyword must be specifed and   * 00016300
*                        the DSPSERV parameter list must be in fixed  * 00016400
*                        or disabled reference storage.               * 00016500
*                                                                     * 00016600
*                        When using NUMRANGE and RANGLIST,            * 00016700
*                        unauthorized callers may not specify a value * 00016800
*                        greater than 16.                             * 00016900
*                                                                     * 00017000
*                        If NUMRANGE is greater than 16 or if         * 00017100
*                        DISABLED=YES is specified, then the range    * 00017200
*                        list must be in fixed storage.  Otherwise,   * 00017300
*                        the range list can be in pageable storage or * 00017400
*                        disabled reference storage.                  * 00017500
*                                                                     * 00017600
*                                                                     * 00017700
*                                                                     * 00017800
*01* SYNTAX:                                                          * 00017900
*                                                                     * 00018000
*[xlabel]  DSPSERV    CREATE                                         * 00018100
*                   |     ,NAME=xname                                 * 00018200
*                   |   [,GENNAME=NO]                                * 00018300
*                   |   [,GENNAME=COND                               * 00018400
*                   |   |    [,OUTNAME=xoutname]]                     * 00018500
*                   |   [,GENNAME=YES                                * 00018600
*                   |        [,OUTNAME=xoutname]]                     * 00018700
*                   |    [,BLOCKS=(xblocks|0,xinitial|524288)]    * 00018800
*                   |   [,TYPE=BASIC                                 * 00018900
*                   |   |    [,DREF=NO|YES]                         * 00019000
*                   |   |    [,SCOPE=SINGLE|ALL|COMMON]             * 00019100
*                   |   |    [,BACK=31|64]]                         * 00019200
*                   |   [,TYPE=HIPERSPACE                            * 00019300
*                   |       [,HSTYPE=SCROLL                          * 00019400
*                   |       |    [,SHARE=NO|YES]]                   * 00019500
*                   |       [,HSTYPE=CACHE                           * 00019600
*                   |            [,CASTOUT=YES|NO]]]                * 00019700
*                   |   [,CALLERKEY                                  * 00019800
*                   |    ,KEY=xkey]                                * 00019900
*                   |    [,FPROT=YES|NO]                            * 00020000
*                   |    [,TTOKEN=xttoken|0]                        * 00020100
*                   |     ,STOKEN=xstoken                             * 00020200
*                   |    [,ORIGIN=xorigin]                            * 00020300
*                   |    [,NUMBLKS=xnumblks]                          * 00020400
*                    ,DELETE                                         * 00020500
*                   |     ,STOKEN=xstoken                             * 00020600
*                   |    [,TTOKEN=xttoken|0]                        * 00020700
*                    ,RELEASE                                        * 00020800
*                   |     ,STOKEN=xstoken                             * 00020900
*                   |   [,INLIST=NO                                  * 00021000
*                   |   |     ,START=xstart                           * 00021100
*                   |   |     ,BLOCKS=xblocks]                        * 00021200
*                   |   [,INLIST=YES                                 * 00021300
*                   |        [,NUMRANGE=xnumrange|1]                * 00021400
*                   |         ,RANGLIST=xranglist]                    * 00021500
*                   |    [,DISABLED=NO|YES]                         * 00021600
*                    ,DEFINE                                         * 00021700
*                   |     ,STOKEN=xstoken                             * 00021800
*                   |   [,INLIST=NO                                  * 00021900
*                   |   |     ,START=xstart                           * 00022000
*                   |   |     ,BLOCKS=xblocks]                        * 00022100
*                   |   [,INLIST=YES                                 * 00022200
*                   |        [,NUMRANGE=xnumrange|1]                * 00022300
*                   |         ,RANGLIST=xranglist]                    * 00022400
*                   |    [,DISABLED=NO|YES]                         * 00022500
*                   |    ,IOON                                       * 00022600
*                   |   |    [,LONG=YES|NO]                         * 00022700
*                   |    ,IOOFF                                      * 00022800
*                   |    ,DREFON                                     * 00022900
*                   |    ,DREFOFF                                    * 00023000
*                   |        [,FORCE=NO|YES]                        * 00023100
*                    ,EXTEND                                         * 00023200
*                   |     ,STOKEN=xstoken                             * 00023300
*                   |     ,BLOCKS=xblocks                             * 00023400
*                   |    [,VAR=NO|YES]                              * 00023500
*                   |    [,NUMBLKS=xnumblks]                          * 00023600
*                    ,OUT                                            * 00023700
*                   |     ,STOKEN=xstoken                             * 00023800
*                   |     ,START=xstart                               * 00023900
*                   |     ,BLOCKS=xblocks                             * 00024000
*                    ,LOAD                                           * 00024100
*                         ,STOKEN=xstoken                             * 00024200
*                         ,START=xstart                               * 00024300
*                         ,BLOCKS=xblocks                             * 00024400
*                    [,PLISTVER=xplistver|IMPLIED_VERSION]          * 00024500
*                   [,MF=S]                                          * 00024600
*                   [,MF=(L,xmfctrl,xmfattr|0D)]                   * 00024700
*                   [,MF=(E,xmfctrl,COMPLETE)]                     * 00024800
*                                                                     * 00024900
*                                                                     * 00025000
*      Where:                                                         * 00025100
*                                                                     * 00025200
*                                                                     * 00025300
*      [xlabel]                                                       * 00025400
*          is an optional symbol, starting in column 1, that is the   * 00025500
*          name on the DSPSERV macro invocation.  The name must       * 00025600
*          conform to the rules for an ordinary assembler language    * 00025700
*          symbol.                                                    * 00025800
*          DEFAULT: No name.                                          * 00025900
*                                                                     * 00026000
*                                                                     * 00026100
*                                                                     * 00026200
*                                                                     * 00026300
*      The following is a set of mutually exclusive keys.  This set   * 00026400
*      is required; only one key must be specified.                   * 00026500
*                                                                     * 00026600
*                                                                     * 00026700
*      CREATE                                                         * 00026800
*          Is a keyword used to request the create service.           * 00026900
*                                                                     * 00027000
*                                                                     * 00027100
*          NAME=xname                                                 * 00027200
*              is the name (RS-type), or address in register          * 00027300
*              (2)-(12), of a required 8 character input variable or  * 00027400
*              constant that contains either (1) the name to be       * 00027500
*              assigned to the data space being created (if           * 00027600
*              GENNAME=YES is not specified) or (2) the suffix for    * 00027700
*              the data space name being created (if GENNAME=YES is   * 00027800
*              specified).  Data space names must be unique within    * 00027900
*              the owning address space.                              * 00028000
*                                                                     * 00028100
*              If GENNAME=NO is specified or defaulted or             * 00028200
*              GENNAME=COND is specified, the input name must be made * 00028300
*              up of letters and numbers, left justified and padded   * 00028400
*              on the right with blanks.  The first character cannot  * 00028500
*              be a numeric.  Authorized callers use some data space  * 00028600
*              names beginning with SYS to name its own data spaces.  * 00028700
*              Therefore you should not use SYS as the first three    * 00028800
*              characters of a data space name.  Also, data space     * 00028900
*              names with SYSDS as the first five characters are      * 00029000
*              reserved for RSM use.                                  * 00029100
*                                                                     * 00029200
*              If GENNAME=COND is specified and the input name is not * 00029300
*              unique, a unique one will be returned, of the format:  * 00029400
*              xxxxxPPP, where xxxxx is generated and PPP is taken    * 00029500
*              from the prefix of the input name.                     * 00029600
*                                                                     * 00029700
*              If GENNAME=YES is specified, the NAME field will be    * 00029800
*              used as the suffix for the data space name being       * 00029900
*              created.  This suffix must follow the rules of a data  * 00030000
*              space name stated above except that the leading        * 00030100
*              character may be a numeric.                            * 00030200
*                                                                     * 00030300
*              The data space name is used to identify the data space * 00030400
*              in some dump requests and IPCS commands.               * 00030500
*                                                                     * 00030600
*                                                                     * 00030700
*                                                                     * 00030800
*                                                                     * 00030900
*          [GENNAME=NO|COND|YES]                                    * 00031000
*              is an optional keyword input that indicates whether    * 00031100
*              the system should generate a data space name for the   * 00031200
*              new data space to be created.                          * 00031300
*                                                                     * 00031400
*              If the system does generate a data space name, it will * 00031500
*              be returned in the variable specified by the OUTNAME   * 00031600
*              keyword.  The generated name will start with a         * 00031700
*              numeric, followed by four additional characters,       * 00031800
*              followed by the first three characters of the user     * 00031900
*              supplied name (or the entire name if less than three   * 00032000
*              characters).                                           * 00032100
*                                                                     * 00032200
*              If the system needs to generate a data space name and  * 00032300
*              the set of unique name prefixes for the address space  * 00032400
*              is curently exhausted, then the request will be        * 00032500
*              rejected with a return code of 08 and a reason code of * 00032600
*              xx0012xx.                                              * 00032700
*                                                                     * 00032800
*              The set of generated names for an address space is     * 00032900
*              always restored to its full complement whenever the    * 00033000
*              number of such data spaces owned by the address space  * 00033100
*              goes to zero.                                          * 00033200
*                                                                     * 00033300
*              CAUTION: To avoid the permanent depletion of generated * 00033400
*              names for an Initiator, no job should create a data    * 00033500
*              space that (1) uses a generated name and (2) has       * 00033600
*              ownership assigned to the Initiator task or a task     * 00033700
*              higher than the Initiator in the TCB chain.            * 00033800
*                                                                     * 00033900
*              DEFAULT: NO                                            * 00034000
*                                                                     * 00034100
*                                                                     * 00034200
*              [GENNAME=NO]                                           * 00034300
*                  Specifies that the system is not to generate a     * 00034400
*                  data space name.  The user must supply a data      * 00034500
*                  space name that is unique within the address space * 00034600
*                  of the data space owner for the request to be      * 00034700
*                  accepted.                                          * 00034800
*                                                                     * 00034900
*              [GENNAME=COND                                          * 00035000
*                  Specifies that the system should generate a unique * 00035100
*                  name for the data space only if the user supplied  * 00035200
*                  name is found to be already in use in the address  * 00035300
*                  space of the data space owner.                     * 00035400
*                                                                     * 00035500
*                                                                     * 00035600
*                  [OUTNAME=xoutname]]                                * 00035700
*                      is the name (RS-type), or address in register  * 00035800
*                      (2)-(12), of an optional 8 character output    * 00035900
*                      variable that will contain the name assigned   * 00036000
*                      to the data space created.                     * 00036100
*                                                                     * 00036200
*                                                                     * 00036300
*                                                                     * 00036400
*              [GENNAME=YES                                           * 00036500
*                  Specifies that the system should ALWAYS generate a * 00036600
*                  unique name for the data space.  The user must     * 00036700
*                  still supply a data space name via the NAME        * 00036800
*                  keyword since the system generated name will       * 00036900
*                  consist, in part, of this supplied name.           * 00037000
*                                                                     * 00037100
*                                                                     * 00037200
*                  [OUTNAME=xoutname]]                                * 00037300
*                      is the name (RS-type), or address in register  * 00037400
*                      (2)-(12), of an optional 8 character output    * 00037500
*                      variable that will contain the name assigned   * 00037600
*                      to the data space created.                     * 00037700
*                                                                     * 00037800
*                                                                     * 00037900
*                                                                     * 00038000
*                                                                     * 00038100
*                                                                     * 00038200
*                                                                     * 00038300
*                                                                     * 00038400
*                                                                     * 00038500
*          [BLOCKS=(xblocks|0,xinitial|524288)]                   * 00038600
*                                                                     * 00038700
*            xblocks                                                  * 00038800
*              is the name (RS-type), or address in register          * 00038900
*              (2)-(12), of an optional fullword input variable or    * 00039000
*              constant that contains the maximum size of the new     * 00039100
*              data space in units of 4K byte blocks.  The minimum    * 00039200
*              data space size is 1 block (4K bytes) and the maximum  * 00039300
*              is 524,288 blocks (2G bytes).  A data space may never  * 00039400
*              be referenced nor extended beyond its maximum size.    * 00039500
*                                                                     * 00039600
*              Not all processors will support a data space with a    * 00039700
*              zero origin.  The maximum size data space supported on * 00039800
*              all processors is 524,287 blocks (2G-4K).              * 00039900
*                                                                     * 00040000
*              Installation management will have control over the     * 00040100
*              number of user key data spaces as well as the total    * 00040200
*              size of all user key data spaces owned by an address   * 00040300
*              space (on a per job step basis).                       * 00040400
*                                                                     * 00040500
*              DEFAULT: 0                                             * 00040600
*              If a size value of zero is specified or defaulted, an  * 00040700
*              installation management defined default size data      * 00040800
*              space will be created.                                 * 00040900
*                                                                     * 00041000
*            ,xinitial|524288                                       * 00041100
*              is the name (RS-type), or address in register          * 00041200
*              (2)-(12), of an optional fullword input that specifies * 00041300
*              the initial current size of the data space in units of * 00041400
*              blocks (4K bytes).  If the new data space is           * 00041500
*              non-system key, then the specified initial size must   * 00041600
*              not cause the data space limits for the address space  * 00041700
*              to be exceeded.  If the initial size specified exceeds * 00041800
*              the maximum size, then an initial size equal to the    * 00041900
*              maximum size will be used.                             * 00042000
*                                                                     * 00042100
*              DEFAULT: 524288                                        * 00042200
*              As the default, the initial current size will be set   * 00042300
*              equal to the maximum size.                             * 00042400
*                                                                     * 00042500
*                                                                     * 00042600
*                                                                     * 00042700
*                                                                     * 00042800
*          [TYPE=BASIC|HIPERSPACE                                   * 00042900
*              is an optional keyword input specifies the type of     * 00043000
*              data space to be created.                              * 00043100
*              DEFAULT: BASIC                                         * 00043200
*                                                                     * 00043300
*                                                                     * 00043400
*              [TYPE=BASIC                                            * 00043500
*                  specifies that a basic data space is to be         * 00043600
*                  created.                                           * 00043700
*                  DEFAULT: 0                                         * 00043800
*                                                                     * 00043900
*                                                                     * 00044000
*                  [DREF=NO|YES]                                    * 00044100
*                      is an optional keyword input that specifies    * 00044200
*                      whether the data space will be referenced      * 00044300
*                      disabled.                                      * 00044400
*                      DEFAULT: NO                                    * 00044500
*                                                                     * 00044600
*                                                                     * 00044700
*                      DREF=NO                                        * 00044800
*                          The data space will only be referenced     * 00044900
*                          enabled.                                   * 00045000
*                          If the data space is referenced disabled,  * 00045100
*                          the referencing unit of work may be        * 00045200
*                          ABENDed.                                   * 00045300
*                                                                     * 00045400
*                      DREF=YES                                       * 00045500
*                          The data space may be referenced disabled  * 00045600
*                          as well as enabled.  The data space may be * 00045700
*                          referenced disabled provided that the RSM  * 00045800
*                          lock is not held and no lock higher than   * 00045900
*                          the RSM lock is held.  Referencing a DREF  * 00046000
*                          data space while holding the RSM lock      * 00046100
*                          and/or a higher lock will result in an     * 00046200
*                          abend.                                     * 00046300
*                          YES may only be used by callers executing  * 00046400
*                          in supervisor state or with a system (0-7) * 00046500
*                          PSW key.                                   * 00046600
*                                                                     * 00046700
*                                                                     * 00046800
*                                                                     * 00046900
*                                                                     * 00047000
*                                                                     * 00047100
*                                                                     * 00047200
*                  [SCOPE=SINGLE|ALL|COMMON]                        * 00047300
*                      is an optional keyword input that specifies    * 00047400
*                      whether the data space should be SCOPE SINGLE  * 00047500
*                      or SCOPE ALL or SCOPE COMMON.                  * 00047600
*                      DEFAULT: SINGLE                                * 00047700
*                                                                     * 00047800
*                                                                     * 00047900
*                      SCOPE=SINGLE                                   * 00048000
*                          The data space will be SCOPE SINGLE.       * 00048100
*                          SCOPE SINGLE data spaces may only be       * 00048200
*                          accessed by users whose home or current    * 00048300
*                          primary address space is the same as the   * 00048400
*                          data space owners home address space.      * 00048500
*                          SCOPE SINGLE data spaces may only be       * 00048600
*                          ALESERV ADDed to access lists (DU or PASN) * 00048700
*                          belonging to the data space owner or       * 00048800
*                          creator.                                   * 00048900
*                                                                     * 00049000
*                      SCOPE=ALL                                      * 00049100
*                          The data space will be SCOPE ALL.          * 00049200
*                          SCOPE ALL data spaces may be accessed by   * 00049300
*                          any authorized user in the system.         * 00049400
*                          SCOPE ALL data spaces may be ALESERV       * 00049500
*                          ADDed, by any authorized user, to any      * 00049600
*                          access list.                               * 00049700
*                          If an address space contains a task that   * 00049800
*                          owns a SCOPE ALL data space, the address   * 00049900
*                          space must be non-swappable.               * 00050000
*                          ALL may only be used by callers executing  * 00050100
*                          in supervisor state or with a system (0-7) * 00050200
*                          PSW key.                                   * 00050300
*                                                                     * 00050400
*                      SCOPE=COMMON                                   * 00050500
*                          Specifies that the data space is to be     * 00050600
*                          accessible from every address space, once  * 00050700
*                          the owner has added it to his PASN access  * 00050800
*                          list.  The ALET of the data space will be  * 00050900
*                          the same in every address space.           * 00051000
*                          SCOPE COMMON data spaces may be ALESERV    * 00051100
*                          ADDed, by any authorized user, to only the * 00051200
*                          PASN access list.                          * 00051300
*                          COMMON may only be used by callers         * 00051400
*                          executing in supervisor state or with a    * 00051500
*                          system (0-7) PSW key.                      * 00051600
*                                                                     * 00051700
*                                                                     * 00051800
*                                                                     * 00051900
*                                                                     * 00052000
*                                                                     * 00052100
*                                                                     * 00052200
*                  [BACK=31|64]]                                    * 00052300
*                      is an optional keyword input that specifies    * 00052400
*                      whether the data space pages can be backed by  * 00052500
*                      real storage above 2GB when fixed.             * 00052600
*                      DEFAULT: 31                                    * 00052700
*                                                                     * 00052800
*                                                                     * 00052900
*                      BACK=31                                        * 00053000
*                          specifies that the data space pages will   * 00053100
*                          be backed by frames below 2GB when defined * 00053200
*                          IOON                                       * 00053300
*                                                                     * 00053400
*                      BACK=64                                        * 00053500
*                          specifies that the data space pages will   * 00053600
*                          be backed by frames above or below 2GB     * 00053700
*                          when defined IOON                          * 00053800
*                                                                     * 00053900
*                                                                     * 00054000
*                                                                     * 00054100
*                                                                     * 00054200
*                                                                     * 00054300
*              [TYPE=HIPERSPACE                                       * 00054400
*                  specifies that a hiperspace is to be created.      * 00054500
*                                                                     * 00054600
*                                                                     * 00054700
*                  [HSTYPE=SCROLL|CACHE]]                           * 00054800
*                      is an optional keyword input that specifies    * 00054900
*                      the type of hiperspace to be be created.       * 00055000
*                      DEFAULT: SCROLL                                * 00055100
*                                                                     * 00055200
*                                                                     * 00055300
*                      [HSTYPE=SCROLL                                 * 00055400
*                          specifies that a SCROLL type hiperspace is * 00055500
*                          to be created.                             * 00055600
*                                                                     * 00055700
*                                                                     * 00055800
*                          [SHARE=NO|YES]]                          * 00055900
*                              is an optional keyword input that      * 00056000
*                              specifies whether or not the scroll    * 00056100
*                              type hiperspace is to be created as    * 00056200
*                              shared or non-shared.                  * 00056300
*                              DEFAULT: NO                            * 00056400
*                                                                     * 00056500
*                                                                     * 00056600
*                              SHARE=NO                               * 00056700
*                                  specifies that the scroll type     * 00056800
*                                  hiperspace is to be created        * 00056900
*                                  non-shared.                        * 00057000
*                                                                     * 00057100
*                              SHARE=YES                              * 00057200
*                                  specifies that the scroll type     * 00057300
*                                  hiperspace is to be created as     * 00057400
*                                  shared.  SHARE=YES can only be     * 00057500
*                                  specified by authorized            * 00057600
*                                  (supervisor state and/or system    * 00057700
*                                  key) users.                        * 00057800
*                                                                     * 00057900
*                                  If a shared scroll type hiperspace * 00058000
*                                  is to be accessed from any address * 00058100
*                                  space other than the owning        * 00058200
*                                  address space, then it is required * 00058300
*                                  that either (1) the owning address * 00058400
*                                  space be non-swappable or (2) the  * 00058500
*                                  HSPSERV invoker's HOME or PRIMARY  * 00058600
*                                  address space be the same as the   * 00058700
*                                  HOME address space of the owner.   * 00058800
*                                                                     * 00058900
*                                                                     * 00059000
*                                                                     * 00059100
*                                                                     * 00059200
*                                                                     * 00059300
*                      [HSTYPE=CACHE                                  * 00059400
*                          specifies that a CACHE type hiperspace is  * 00059500
*                          to be created.                             * 00059600
*                                                                     * 00059700
*                                                                     * 00059800
*                          [CASTOUT=YES|NO]]]                       * 00059900
*                              is an optional keyword input that      * 00060000
*                              specifies the persistency of the data  * 00060100
*                              in a CACHE type hiperspace.            * 00060200
*                              DEFAULT: YES                           * 00060300
*                                                                     * 00060400
*                                                                     * 00060500
*                              CASTOUT=YES                            * 00060600
*                                  indicates that the data written to * 00060700
*                                  the CACHE hiperspace may be        * 00060800
*                                  discarded by the system if and     * 00060900
*                                  when the need for expanded storage * 00061000
*                                  arises.                            * 00061100
*                                                                     * 00061200
*                              CASTOUT=NO                             * 00061300
*                                  specifies that the system should   * 00061400
*                                  give the data in the hiperspace    * 00061500
*                                  more priority when searching for   * 00061600
*                                  candidate pages to remove from     * 00061700
*                                  expanded storage when a shortage   * 00061800
*                                  arises.  Caution must be exercised * 00061900
*                                  when using this option with a view * 00062000
*                                  toward total system performance.   * 00062100
*                                  Specifying CASTOUT(NO) can place a * 00062200
*                                  heavy demand on expanded storage   * 00062300
*                                  and is similar to a DREF data      * 00062400
*                                  space containing changed pages     * 00062500
*                                  (i.e., pages which cannot be       * 00062600
*                                  discarded nor moved to auxiliary   * 00062700
*                                  storage from expanded storage).    * 00062800
*                                                                     * 00062900
*                                  Note that, although specifying     * 00063000
*                                  CASTOUT(NO) does prevent           * 00063100
*                                  hiperspace pages from being        * 00063200
*                                  discarded from expanded storage    * 00063300
*                                  when a shortage arises, it does    * 00063400
*                                  not guarantee that the data pages, * 00063500
*                                  once written, are always available * 00063600
*                                  on a subsequent CREAD.  There are  * 00063700
*                                  other occasions when such pages    * 00063800
*                                  may be discarded.  For example,    * 00063900
*                                  the data pages in expanded store   * 00064000
*                                  will be discarded, regardless of   * 00064100
*                                  CASTOUT, if these pages occupy     * 00064200
*                                  expanded store E-frames which are  * 00064300
*                                  to be reconfigured out of the      * 00064400
*                                  system.  Also, pages will be       * 00064500
*                                  discarded if the address space     * 00064600
*                                  owning the hiperspace is           * 00064700
*                                  swapped-out.  It is this latter    * 00064800
*                                  reason that address spaces with    * 00064900
*                                  CACHE type hiperspaces should be   * 00065000
*                                  made non-swappable.                * 00065100
*                                                                     * 00065200
*                                                                     * 00065300
*                                                                     * 00065400
*                                                                     * 00065500
*                                                                     * 00065600
*                                                                     * 00065700
*                                                                     * 00065800
*                                                                     * 00065900
*                                                                     * 00066000
*                                                                     * 00066100
*                                                                     * 00066200
*                                                                     * 00066300
*                                                                     * 00066400
*                                                                     * 00066500
*          The following is a set of mutually exclusive keys.  This   * 00066600
*          set is optional; only one key may be specified.            * 00066700
*                                                                     * 00066800
*                                                                     * 00066900
*          [CALLERKEY                                                 * 00067000
*              Specifies that the caller's PSW key will be the        * 00067100
*              storage protect key for the data space.                * 00067200
*              DEFAULT: CALLERKEY                                     * 00067300
*                                                                     * 00067400
*          KEY=xkey]                                                * 00067500
*              belongs to a set of mutually exclusive keys. It is the * 00067600
*              name (RS-type), or address in register (2)-(12), of an * 00067700
*              optional byte input variable or constant that          * 00067800
*              specifies the storage protect key to be assigned to    * 00067900
*              the data space storage.  The key must be in bits 0-3   * 00068000
*              of the variable or constant specified.  Bits 4-7 will  * 00068100
*              be ignored.                                            * 00068200
*              The KEY parameter may only be used by callers          * 00068300
*              executing in supervisor state or with a system (0-7)   * 00068400
*              PSW key.                                               * 00068500
*                                                                     * 00068600
*                                                                     * 00068700
*                                                                     * 00068800
*          End of a set of mutually exclusive optional keys.          * 00068900
*          DEFAULT: CALLERKEY                                         * 00069000
*                                                                     * 00069100
*                                                                     * 00069200
*                                                                     * 00069300
*          [FPROT=YES|NO]                                           * 00069400
*              is an optional keyword input that specifies whether    * 00069500
*              the data space should be fetch protected.              * 00069600
*              If YES is specified or defaulted, the entire data      * 00069700
*              space will be fetch protected. This means a program    * 00069800
*              must be in the key of the data space storage (or key   * 00069900
*              0) in order to reference data in the data space.       * 00070000
*              DEFAULT: YES                                           * 00070100
*                                                                     * 00070200
*                                                                     * 00070300
*              FPROT=YES                                              * 00070400
*                  The data space will be fetch protected.            * 00070500
*                                                                     * 00070600
*              FPROT=NO                                               * 00070700
*                  The data space will not be fetch protected.        * 00070800
*                  NO may only be used by callers executing in        * 00070900
*                  supervisor state or with a system (0-7) PSW key.   * 00071000
*                                                                     * 00071100
*                                                                     * 00071200
*                                                                     * 00071300
*                                                                     * 00071400
*                                                                     * 00071500
*                                                                     * 00071600
*          [TTOKEN=xttoken|0]                                       * 00071700
*              is the name (RS-type), or address in register          * 00071800
*              (2)-(12), of an optional 16 character input variable   * 00071900
*              that identifies the task to become the owner of the    * 00072000
*              data space.  The TTOKEN is returned by the TCBTOKEN    * 00072100
*              macro.                                                 * 00072200
*              If TTOKEN is specified, the task identified by the     * 00072300
*              TTOKEN becomes the owner of the data space.  If TTOKEN * 00072400
*              is not specified, the currently dispatched task        * 00072500
*              becomes the owner of the data space.  The task         * 00072600
*              identified by the TTOKEN must be in either the         * 00072700
*              invokers current primary or home address space.        * 00072800
*                                                                     * 00072900
*              The TTOKEN parameter must be used by callers executing * 00073000
*              in SRB mode.                                           * 00073100
*                                                                     * 00073200
*              DEFAULT: 0                                             * 00073300
*              If the TTOKEN parameter is not specified, or if 0 is   * 00073400
*              specified, and the caller is running in task mode, the * 00073500
*              currently dispatched task will become the owner of the * 00073600
*              data space.                                            * 00073700
*              SRB mode callers will be ABENDed if the TTOKEN         * 00073800
*              parameter is not specified.                            * 00073900
*                                                                     * 00074000
*                                                                     * 00074100
*                                                                     * 00074200
*                                                                     * 00074300
*          STOKEN=xstoken                                             * 00074400
*              is the name (RS-type), or address in register          * 00074500
*              (2)-(12), of a required 8 character output variable    * 00074600
*              that will contain the STOKEN for the data space being  * 00074700
*              created.  The STOKEN is a unique identifier for a data * 00074800
*              space.                                                 * 00074900
*                                                                     * 00075000
*              The STOKEN is used to identify the data space to other * 00075100
*              DSPSERV services. It is also used to gain access to    * 00075200
*              the data space via ALESERV ADD, and in certain dump    * 00075300
*              requests.                                              * 00075400
*                                                                     * 00075500
*                                                                     * 00075600
*                                                                     * 00075700
*                                                                     * 00075800
*          [ORIGIN=xorigin]                                           * 00075900
*              is the name (RS-type), or address in register          * 00076000
*              (2)-(12), of an optional fullword output variable that * 00076100
*              will contain the lowest address in the new data space. * 00076200
*              MVS will attempt to begin all data spaces at origin    * 00076300
*              zero however this will not be possible on all          * 00076400
*              processors. The origin is guaranteed to be zero or 4K. * 00076500
*                                                                     * 00076600
*              If desired, the programmer can use address 4K and not  * 00076700
*              check the origin. It is expected that eventually, all  * 00076800
*              active processors will support zero origin.            * 00076900
*                                                                     * 00077000
*                                                                     * 00077100
*                                                                     * 00077200
*                                                                     * 00077300
*          [NUMBLKS=xnumblks]                                         * 00077400
*              is the name (RS-type), or address in register          * 00077500
*              (2)-(12), of an optional fullword output variable that * 00077600
*              will contain the size, in units of 4K bytes, of the    * 00077700
*              newly created data space.  Normally, NUMBLKS would be  * 00077800
*              used when the default for BLOCKS is specified.         * 00077900
*                                                                     * 00078000
*                                                                     * 00078100
*                                                                     * 00078200
*      DELETE                                                         * 00078300
*          Is a keyword used to request the delete service.           * 00078400
*                                                                     * 00078500
*          All I/O into the data space must be complete before the    * 00078600
*          DELETE is requested.                                       * 00078700
*                                                                     * 00078800
*          No areas of the data space may be I/O DEFINEd when the     * 00078900
*          data space is DELETEd. If the DELETE service finds an I/O  * 00079000
*          DEFINEd area in the data space, the data space will be     * 00079100
*          deleted and both the DELETE caller and the data space      * 00079200
*          owner will be ABENDed.                                     * 00079300
*                                                                     * 00079400
*                                                                     * 00079500
*          STOKEN=xstoken                                             * 00079600
*              is the name (RS-type), or address in register          * 00079700
*              (2)-(12), of a required 8 character input variable     * 00079800
*              that identifies the data space.                        * 00079900
*                                                                     * 00080000
*                                                                     * 00080100
*                                                                     * 00080200
*                                                                     * 00080300
*          [TTOKEN=xttoken|0]                                       * 00080400
*              is the name (RS-type), or address in register          * 00080500
*              (2)-(12), of an optional 16 character input variable   * 00080600
*              that identifies the task that owns the data space.     * 00080700
*              The TTOKEN is returned by the Supervisor TCBTOKEN      * 00080800
*              macro.                                                 * 00080900
*              If TTOKEN is not specified, the task issuing the       * 00081000
*              delete request must be the owner of the data space     * 00081100
*              unless the data space is a SCOPE=SINGLE data space,    * 00081200
*              the task issuing the delete request is the creator of  * 00081300
*              the data space, and the job step task is the owner of  * 00081400
*              the data space.                                        * 00081500
*              If TTOKEN is specified, it specifies the task that is  * 00081600
*              the owner of the data space.  The task identified by   * 00081700
*              the TTOKEN must be in either the invokers current      * 00081800
*              primary or home address space.                         * 00081900
*                                                                     * 00082000
*              The TTOKEN parameter may only be used by callers       * 00082100
*              executing in supervisor state or with a system (0-7)   * 00082200
*              PSW key.                                               * 00082300
*              The TTOKEN parameter must be used by callers executing * 00082400
*              in SRB mode.                                           * 00082500
*                                                                     * 00082600
*              DEFAULT: 0                                             * 00082700
*              If the TTOKEN parameter is not specified, or if 0 is   * 00082800
*              specified, and the caller is running in task mode, the * 00082900
*              currently dispatched task must be the owner of the     * 00083000
*              data space.                                            * 00083100
*              SRB mode callers will be ABENDed if the TTOKEN         * 00083200
*              parameter is not specified.                            * 00083300
*                                                                     * 00083400
*                                                                     * 00083500
*                                                                     * 00083600
*      RELEASE                                                        * 00083700
*          Is a keyword used to request the release service.          * 00083800
*                                                                     * 00083900
*          Areas of the data space that are I/O DEFINEd may not be    * 00084000
*          RELEASEd.  If the RELEASE service finds an I/O DEFINEd     * 00084100
*          block in the area to be RELEASEd, the RELEASE caller will  * 00084200
*          be ABENDed.  The caller must be executing in supervisor    * 00084300
*          state to RELEASE an area in a SCOPE ALL or SCOPE COMMON    * 00084400
*          data space.  If the caller's PSW key is not zero it must   * 00084500
*          match the key of the data space storage to be RELEASEd.    * 00084600
*                                                                     * 00084700
*          For purposes of a supervisor state caller, releasing an    * 00084800
*          area of storage within a cache hiperspace will be treated  * 00084900
*          as if the hiperspace were SCOPE=ALL.  That is, if neither  * 00085000
*          the caller's primary nor home space is the owning space,   * 00085100
*          the owning space must be non-swappable.                    * 00085200
*                                                                     * 00085300
*          For purposes of any caller, releasing an area of storage   * 00085400
*          within a scroll hiperspace will be treated as if the       * 00085500
*          hiperspace were SCOPE=SINGLE.  That is, the caller's       * 00085600
*          primary or home must be the owner of the hiperspace.       * 00085700
*                                                                     * 00085800
*                                                                     * 00085900
*          STOKEN=xstoken                                             * 00086000
*              is the name (RS-type), or address in register          * 00086100
*              (2)-(12), of a required 8 character input variable     * 00086200
*              that identifies the data space.  The STOKEN was        * 00086300
*              returned by the CREATE service.                        * 00086400
*                                                                     * 00086500
*                                                                     * 00086600
*                                                                     * 00086700
*                                                                     * 00086800
*          [INLIST=NO|YES]                                          * 00086900
*              is an optional keyword input that indicates whether or * 00087000
*              not the input contains a range list.                   * 00087100
*              DEFAULT: NO                                            * 00087200
*                                                                     * 00087300
*                                                                     * 00087400
*              [INLIST=NO                                             * 00087500
*                  specifies that the input contains START and        * 00087600
*                  BLOCKS, for a single range of storage.             * 00087700
*                                                                     * 00087800
*                                                                     * 00087900
*                  START=xstart                                       * 00088000
*                      is the name (RS-type), or address in register  * 00088100
*                      (2)-(12), of a required fullword input         * 00088200
*                      variable or constant that contains the address * 00088300
*                      in the data space of the first block of        * 00088400
*                      storage to be released.  The address must be   * 00088500
*                      on a 4096 byte boundary.                       * 00088600
*                                                                     * 00088700
*                                                                     * 00088800
*                                                                     * 00088900
*                                                                     * 00089000
*                  BLOCKS=xblocks]                                    * 00089100
*                      is the name (RS-type), or address in register  * 00089200
*                      (2)-(12), of a required fullword input         * 00089300
*                      variable or constant that contains the number  * 00089400
*                      of contiguous blocks of storage to be          * 00089500
*                      released.                                      * 00089600
*                                                                     * 00089700
*                                                                     * 00089800
*                                                                     * 00089900
*              [INLIST=YES                                            * 00090000
*                  specifies that the input contains NUMRANGE and     * 00090100
*                  RANGLIST, for one or more ranges of storage.       * 00090200
*                                                                     * 00090300
*                                                                     * 00090400
*                  [NUMRANGE=xnumrange|1]                           * 00090500
*                      is the name (RS-type), or address in register  * 00090600
*                      (2)-(12), of an optional fullword input        * 00090700
*                      variable that specifies the number of entries  * 00090800
*                      in the supplied range list.  The range list is * 00090900
*                      used to specify one or more data space storage * 00091000
*                      ranges which are to be released.  The value    * 00091100
*                      specified must be a positive integer.  If      * 00091200
*                      NUMRANGE is greater than 16 or if DISABLED=YES * 00091300
*                      is specified, then the range list must be in   * 00091400
*                      fixed storage.  Otherwise, the rangelist can   * 00091500
*                      be in pageable storage.                        * 00091600
*                                                                     * 00091700
*                      Unauthorized callers may not specify a value   * 00091800
*                      greater than 16.                               * 00091900
*                                                                     * 00092000
*                      DEFAULT: 1.                                    * 00092100
*                                                                     * 00092200
*                                                                     * 00092300
*                                                                     * 00092400
*                                                                     * 00092500
*                                                                     * 00092600
*                  RANGLIST=xranglist]                                * 00092700
*                      is the name (RS-type), or address in register  * 00092800
*                      (2)-(12), of a required 4 byte input that      * 00092900
*                      contains the address of a range list.  The     * 00093000
*                      range list consists of a number of entries (as * 00093100
*                      specified by NUMRANGE) where each entry        * 00093200
*                      specifies the start address of the data space  * 00093300
*                      storage to be released and the number of       * 00093400
*                      blocks to be released.  A mapping of each      * 00093500
*                      entry is provided in the mapping macro IARDRL. * 00093600
*                      A description of the fields in each entry is   * 00093700
*                      as follows:                                    * 00093800
*                                                                     * 00093900
*                                                                     * 00094000
*                         START_VSA     contains the starting virtual * 00094100
*                                       address of the storage to be  * 00094200
*                                       processed.                    * 00094300
*                                                                     * 00094400
*                                       The virtual address to be     * 00094500
*                                       specified must be on a page   * 00094600
*                                       (4K) boundary.                * 00094700
*                                                                     * 00094800
*                                       The length of this field is 4 * 00094900
*                                       bytes.                        * 00095000
*                                                                     * 00095100
*                         RESERVED BYTE contains value zero.          * 00095200
*                                                                     * 00095300
*                                       The length of this field is 1 * 00095400
*                                       byte.                         * 00095500
*                                                                     * 00095600
*                         NUM_BLOCKS    contains the number of 4K     * 00095700
*                                       pages to be processed.        * 00095800
*                                                                     * 00095900
*                                       The length of this field is 3 * 00096000
*                                       bytes.                        * 00096100
*                                                                     * 00096200
*                                                                     * 00096300
*                                                                     * 00096400
*                      An example of how to code the RANGLIST         * 00096500
*                      parameter when NUMRANGE=3 is as follows:       * 00096600
*                                                                     * 00096700
*                        NUMRANGE=3,RANGLIST=(5)                      * 00096800
*                           or                                        * 00096900
*                        NUMRANGE=3,RANGLIST=RANGADDR                 * 00097000
*                                                <-----8 bytes----->  * 00097100
*                         .-----.    .-----.    .-------------------. * 00097200
*                         |     +--->|     +--->|Start addr|0|blocks| * 00097300
*                         '-----'    '-----'    |----------+-+------| * 00097400
*                          Reg 5     RANGADDR   |Start addr|0|blocks| * 00097500
*                                   (fullword)  |----------+-+------| * 00097600
*                                               |Start addr|0|blocks| * 00097700
*                                               '-------------------' * 00097800
*                                                                     * 00097900
*                                                                     * 00098000
*                      The range list must be addressable in the      * 00098100
*                      caller's primary address space.  If NUMRANGE   * 00098200
*                      is greater than 16 or if DISABLED=YES is       * 00098300
*                      specified, then the range list must be in      * 00098400
*                      fixed storage.  Otherwise, the range list can  * 00098500
*                      be in pageable storage.                        * 00098600
*                                                                     * 00098700
*                                                                     * 00098800
*                                                                     * 00098900
*                                                                     * 00099000
*                                                                     * 00099100
*                                                                     * 00099200
*                                                                     * 00099300
*                                                                     * 00099400
*          [DISABLED=NO|YES]                                        * 00099500
*              is an optional keyword input that specifies whether    * 00099600
*              the caller may be running disabled.                    * 00099700
*              DEFAULT: NO                                            * 00099800
*                                                                     * 00099900
*                                                                     * 00100000
*              DISABLED=NO                                            * 00100100
*                  The caller will not be running disabled.           * 00100200
*                                                                     * 00100300
*              DISABLED=YES                                           * 00100400
*                  The caller may be running disabled.                * 00100500
*                                                                     * 00100600
*                                                                     * 00100700
*                                                                     * 00100800
*                                                                     * 00100900
*                                                                     * 00101000
*      DEFINE                                                         * 00101100
*          Is a keyword used to request the define service.           * 00101200
*                                                                     * 00101300
*                                                                     * 00101400
*          STOKEN=xstoken                                             * 00101500
*              is the name (RS-type), or address in register          * 00101600
*              (2)-(12), of a required 8 character input variable     * 00101700
*              that identifies the data space.                        * 00101800
*                                                                     * 00101900
*                                                                     * 00102000
*                                                                     * 00102100
*                                                                     * 00102200
*          [INLIST=NO|YES]                                          * 00102300
*              is an optional keyword input that indicates whether or * 00102400
*              not the input contains a range list.                   * 00102500
*              DEFAULT: NO                                            * 00102600
*                                                                     * 00102700
*                                                                     * 00102800
*              [INLIST=NO                                             * 00102900
*                  specifies that the input contains START and        * 00103000
*                  BLOCKS, for a single range of storage.             * 00103100
*                                                                     * 00103200
*                                                                     * 00103300
*                  START=xstart                                       * 00103400
*                      is the name (RS-type), or address in register  * 00103500
*                      (2)-(12), of a required fullword input         * 00103600
*                      variable or constant that contains the address * 00103700
*                      in the data space of the first block of        * 00103800
*                      storage to be DEFINEd.  The address must be on * 00103900
*                      a 4096 byte boundary.                          * 00104000
*                                                                     * 00104100
*                                                                     * 00104200
*                                                                     * 00104300
*                                                                     * 00104400
*                  BLOCKS=xblocks]                                    * 00104500
*                      is the name (RS-type), or address in register  * 00104600
*                      (2)-(12), of a required fullword input         * 00104700
*                      variable or constant that contains the number  * 00104800
*                      of contiguous blocks of storage to be DEFINEd. * 00104900
*                                                                     * 00105000
*                                                                     * 00105100
*                                                                     * 00105200
*              [INLIST=YES                                            * 00105300
*                  specifies that the input contains NUMRANGE and     * 00105400
*                  RANGLIST, for one or more ranges of storage.       * 00105500
*                                                                     * 00105600
*                                                                     * 00105700
*                  [NUMRANGE=xnumrange|1]                           * 00105800
*                      is the name (RS-type), or address in register  * 00105900
*                      (2)-(12), of an optional fullword input        * 00106000
*                      variable that specifies the number of entries  * 00106100
*                      in the supplied range list.  The range list is * 00106200
*                      used to specify one or more data space storage * 00106300
*                      ranges which are to be used for the define     * 00106400
*                      service.  The value specified must be a        * 00106500
*                      positive integer.  If NUMRANGE is greater than * 00106600
*                      16 or if DISABLED=YES is specified, then the   * 00106700
*                      range list must be in fixed storage.           * 00106800
*                      Otherwise, the rangelist can be in pageable    * 00106900
*                      storage.                                       * 00107000
*                                                                     * 00107100
*                      DEFAULT: 1.                                    * 00107200
*                                                                     * 00107300
*                                                                     * 00107400
*                                                                     * 00107500
*                                                                     * 00107600
*                                                                     * 00107700
*                  RANGLIST=xranglist]                                * 00107800
*                      is the name (RS-type), or address in register  * 00107900
*                      (2)-(12), of a required 4 byte input that      * 00108000
*                      contains the address of a range list.  The     * 00108100
*                      range list consists of a number of entries (as * 00108200
*                      specified by NUMRANGE) where each entry        * 00108300
*                      specifies the start address of the data space  * 00108400
*                      storage to be defined and the number of blocks * 00108500
*                      to be defined.  A mapping of each entry is     * 00108600
*                      provided in the mapping macro IARDRL.  A       * 00108700
*                      description of the fields in each entry is as  * 00108800
*                      follows:                                       * 00108900
*                                                                     * 00109000
*                                                                     * 00109100
*                         START_VSA     contains the starting virtual * 00109200
*                                       address of the storage to be  * 00109300
*                                       processed.                    * 00109400
*                                                                     * 00109500
*                                       The virtual address to be     * 00109600
*                                       specified must be on a page   * 00109700
*                                       (4K) boundary.                * 00109800
*                                                                     * 00109900
*                                       The length of this field is 4 * 00110000
*                                       bytes.                        * 00110100
*                                                                     * 00110200
*                         RESERVED BYTE contains value zero.          * 00110300
*                                                                     * 00110400
*                                       The length of this field is 1 * 00110500
*                                       byte.                         * 00110600
*                                                                     * 00110700
*                         NUM_BLOCKS    contains the number of 4K     * 00110800
*                                       pages to be processed.        * 00110900
*                                                                     * 00111000
*                                       The length of this field is 3 * 00111100
*                                       bytes.                        * 00111200
*                                                                     * 00111300
*                                                                     * 00111400
*                                                                     * 00111500
*                      An example of how to code the RANGLIST         * 00111600
*                      parameter when NUMRANGE=3 is as follows:       * 00111700
*                                                                     * 00111800
*                        NUMRANGE=3,RANGLIST=(5)                      * 00111900
*                           or                                        * 00112000
*                        NUMRANGE=3,RANGLIST=RANGADDR                 * 00112100
*                                                <-----8 bytes----->  * 00112200
*                         .-----.    .-----.    .-------------------. * 00112300
*                         |     +--->|     +--->|Start addr|0|blocks| * 00112400
*                         '-----'    '-----'    |----------+--------| * 00112500
*                          Reg 5     RANGADDR   |Start addr|0|blocks| * 00112600
*                                   (fullword)  |----------+--------| * 00112700
*                                               |Start addr|0|blocks| * 00112800
*                                               '-------------------' * 00112900
*                                                                     * 00113000
*                                                                     * 00113100
*                      The range list must be addressable in the      * 00113200
*                      caller's primary address space.  If NUMRANGE   * 00113300
*                      is greater than 16 or if DISABLED=YES is       * 00113400
*                      specified, then the range list must be in      * 00113500
*                      fixed storage.  Otherwise, the range list can  * 00113600
*                      be in pageable storage.                        * 00113700
*                                                                     * 00113800
*                                                                     * 00113900
*                                                                     * 00114000
*                                                                     * 00114100
*                                                                     * 00114200
*                                                                     * 00114300
*                                                                     * 00114400
*                                                                     * 00114500
*          [DISABLED=NO|YES]                                        * 00114600
*              is an optional keyword input that specifies whether    * 00114700
*              the caller may be running disabled.                    * 00114800
*              DEFAULT: NO                                            * 00114900
*                                                                     * 00115000
*                                                                     * 00115100
*              DISABLED=NO                                            * 00115200
*                  The caller will not be running disabled.           * 00115300
*                                                                     * 00115400
*              DISABLED=YES                                           * 00115500
*                  The caller may be running disabled.                * 00115600
*                                                                     * 00115700
*                                                                     * 00115800
*                                                                     * 00115900
*                                                                     * 00116000
*                                                                     * 00116100
*                                                                     * 00116200
*          The following is a set of mutually exclusive keys.  This   * 00116300
*          set is required; only one key must be specified.           * 00116400
*                                                                     * 00116500
*                                                                     * 00116600
*          IOON                                                       * 00116700
*              Is a keyword used to request the define I/O on         * 00116800
*              service.  It specifies that a range of storage will be * 00116900
*              used for I/O.                                          * 00117000
*                                                                     * 00117100
*              I/O defined pages may be backed anywhere in real       * 00117200
*              storage.                                               * 00117300
*                                                                     * 00117400
*              I/O may only be done to virtual storage that has been  * 00117500
*              I/O DEFINEd.                                           * 00117600
*                                                                     * 00117700
*              A block is considered I/O defined until the number of  * 00117800
*              IOOFFs issued for the block is equal to the number of  * 00117900
*              IOONs previously issued for that block.                * 00118000
*                                                                     * 00118100
*              No areas of the data space may be I/O defined when the * 00118200
*              data space is DELETEd. If the DELETE service finds an  * 00118300
*              I/O defined area in the data space, both the DELETE    * 00118400
*              caller and the data space owner will be ABENDed.       * 00118500
*                                                                     * 00118600
*              All I/O to a data space must be associated with the    * 00118700
*              data space owner.  For example, issuing the EXCPVR     * 00118800
*              macro to initiate the I/O while dispatched in the      * 00118900
*              address space which owns the data space meets this     * 00119000
*              requirement.                                           * 00119100
*                                                                     * 00119200
*              Any work unit that starts I/O into a data space must   * 00119300
*              have the data space owner's address space as its       * 00119400
*              current primary or home address space.                 * 00119500
*                                                                     * 00119600
*              A user supplied resource manager must be provided to   * 00119700
*              handle outstanding I/O when the task owning the data   * 00119800
*              space terminates.  This resource manager must ensure   * 00119900
*              that all I/O into the data space is complete.  This is * 00120000
*              required for both normal and abnormal task             * 00120100
*              termination.  For example, this resource manager will  * 00120200
*              be invoked via ABEND of the data space owner if any    * 00120300
*              area of the data space is I/O defined when a delete of * 00120400
*              the data space is requested.                           * 00120500
*                                                                     * 00120600
*              The IOON keyword may only be used by callers executing * 00120700
*              in supervisor state or with a system (0-7) PSW key.    * 00120800
*                                                                     * 00120900
*                                                                     * 00121000
*              [LONG=YES|NO]                                        * 00121100
*                  is an optional keyword input that specifies        * 00121200
*                  whether the expected duration of the define is     * 00121300
*                  short or long.  In general, a define is considered * 00121400
*                  to be long if the time can be measured in seconds. * 00121500
*                  DEFAULT: YES                                       * 00121600
*                                                                     * 00121700
*                                                                     * 00121800
*                  LONG=YES                                           * 00121900
*                      The define is expected to be long.             * 00122000
*                                                                     * 00122100
*                  LONG=NO                                            * 00122200
*                      The define is expected to be short.            * 00122300
*                                                                     * 00122400
*                                                                     * 00122500
*                                                                     * 00122600
*                                                                     * 00122700
*                                                                     * 00122800
*          IOOFF                                                      * 00122900
*              Is a keyword used to request the define I/O off        * 00123000
*              service.  It specifies that a range of storage has no  * 00123100
*              I/O in progress and will no longer be used for I/O.    * 00123200
*                                                                     * 00123300
*              A block is considered I/O defined until the number of  * 00123400
*              IOOFFs issued for the block is equal to the number of  * 00123500
*              IOONs previously issued for that block.                * 00123600
*                                                                     * 00123700
*              The IOOFF keyword may only be used by callers          * 00123800
*              executing in supervisor state or with a system (0-7)   * 00123900
*              PSW key.                                               * 00124000
*                                                                     * 00124100
*          DREFON                                                     * 00124200
*              Is a keyword used to request that a range of storage   * 00124300
*              in a non-DREF data space be made eligible to be        * 00124400
*              referenced disabled.                                   * 00124500
*                                                                     * 00124600
*              A block is considered defined for disabled reference   * 00124700
*              until the number of DREFOFFs issued for the block is   * 00124800
*              equal to the number of DREFONs previously issued for   * 00124900
*              that block or until a single DREFOFF FORCE YES is      * 00125000
*              issued.                                                * 00125100
*                                                                     * 00125200
*              The DREFON keyword may only be used by callers         * 00125300
*              executing in supervisor state or with a system (0-7)   * 00125400
*              PSW key.                                               * 00125500
*                                                                     * 00125600
*          DREFOFF                                                    * 00125700
*              Is a keyword used to specify that a range of storage   * 00125800
*              in a non-DREF data space will no longer be referenced  * 00125900
*              disabled.                                              * 00126000
*                                                                     * 00126100
*              A block is considered defined for disabled reference   * 00126200
*              until the number of DREFOFFs issued for the block is   * 00126300
*              equal to the number of DREFONs previously issued for   * 00126400
*              that block or until a single DREFOFF FORCE YES is      * 00126500
*              issued.                                                * 00126600
*                                                                     * 00126700
*              The DREFOFF keyword may only be used by callers        * 00126800
*              executing in supervisor state or with a system (0-7)   * 00126900
*              PSW key.                                               * 00127000
*                                                                     * 00127100
*                                                                     * 00127200
*              [FORCE=NO|YES]                                       * 00127300
*                  is an optional keyword input that specifies        * 00127400
*                  whether the DREFOFF request is conditional or      * 00127500
*                  unconditional.                                     * 00127600
*                  DEFAULT: NO                                        * 00127700
*                                                                     * 00127800
*                                                                     * 00127900
*                  FORCE=NO                                           * 00128000
*                      The DREFOFF request is conditional.            * 00128100
*                                                                     * 00128200
*                  FORCE=YES                                          * 00128300
*                      The DREFOFF request is unconditional.  A       * 00128400
*                      single DREFOFF FORCE YES request will define   * 00128500
*                      the storage area as no longer eligible to be   * 00128600
*                      referenced disabled no matter how many         * 00128700
*                      previous DREFONs had been issued.              * 00128800
*                                                                     * 00128900
*                                                                     * 00129000
*                                                                     * 00129100
*                                                                     * 00129200
*                                                                     * 00129300
*                                                                     * 00129400
*                                                                     * 00129500
*          End of a set of mutually exclusive required keys.          * 00129600
*                                                                     * 00129700
*                                                                     * 00129800
*      EXTEND                                                         * 00129900
*          Indicates the EXTEND service.                              * 00130000
*                                                                     * 00130100
*                                                                     * 00130200
*          STOKEN=xstoken                                             * 00130300
*              is the name (RS-type), or address in register          * 00130400
*              (2)-(12), of a required 8 character input variable     * 00130500
*              that identifies the data space.  Unless the caller is  * 00130600
*              authorized (supervisor state and/or system key).  the  * 00130700
*              STOKEN must represent a data space owned by the        * 00130800
*              requesting task.                                       * 00130900
*                                                                     * 00131000
*                                                                     * 00131100
*                                                                     * 00131200
*                                                                     * 00131300
*          BLOCKS=xblocks                                             * 00131400
*              is the name (RS-type), or address in register          * 00131500
*              (2)-(12), of a required fullword input that specifies  * 00131600
*              the number of blocks by which the current size of the  * 00131700
*              data space is to increase. The request will be         * 00131800
*              rejected if the new current size would exceed the      * 00131900
*              maximum size for the data space.  The request will     * 00132000
*              also be rejected if the data space is a non-system key * 00132100
*              data space and the new current size would cause the    * 00132200
*              data space limits for the address space to be          * 00132300
*              exceeded.                                              * 00132400
*                                                                     * 00132500
*                                                                     * 00132600
*                                                                     * 00132700
*                                                                     * 00132800
*          [VAR=NO|YES]                                             * 00132900
*              is an optional keyword input that indicates a variable * 00133000
*              block-size EXTEND.                                     * 00133100
*              DEFAULT: NO                                            * 00133200
*                                                                     * 00133300
*                                                                     * 00133400
*              VAR=NO                                                 * 00133500
*                  If NO is specified or defaulted, the EXTEND        * 00133600
*                  request is not variable size.  The value of        * 00133700
*                  xblocks is used to determine if the request        * 00133800
*                  exceeds SMF limits.                                * 00133900
*                                                                     * 00134000
*              VAR=YES                                                * 00134100
*                  If YES is specified, the EXTEND request is         * 00134200
*                  variable in nature.  If the value of xblocks       * 00134300
*                  exceeds the SMF limits or exceeds the maximum size * 00134400
*                  which was established when the data space was      * 00134500
*                  created, then the system uses a value for xblocks  * 00134600
*                  that allows both SMF criteria and data space size  * 00134700
*                  limits to be met.  If either the SMF limits are    * 00134800
*                  currently at the maximum or the data space size is * 00134900
*                  at the maximum, then the request is rejected.      * 00135000
*                                                                     * 00135100
*                                                                     * 00135200
*                                                                     * 00135300
*                                                                     * 00135400
*                                                                     * 00135500
*                                                                     * 00135600
*          [NUMBLKS=xnumblks]                                         * 00135700
*              is the name (RS-type), or address in register          * 00135800
*              (2)-(12), of an optional fullword output variable that * 00135900
*              will contain the size, in units of 4K bytes, that the  * 00136000
*              data space was expanded by.  Normally, NUMBLKS would   * 00136100
*              be used when the EXTEND request is variable (when VAR  * 00136200
*              is specified).                                         * 00136300
*                                                                     * 00136400
*                                                                     * 00136500
*                                                                     * 00136600
*      OUT                                                            * 00136700
*          Is a keyword used to request the out service.              * 00136800
*                                                                     * 00136900
*          Areas of the data space that are I/O DEFINEd may not be    * 00137000
*          moved OUT. If the OUT service finds an I/O DEFINEd block   * 00137100
*          in the area to be moved out, the block is ignored.  The    * 00137200
*          caller must be executing in supervisor state to move OUT   * 00137300
*          an area in a SCOPE ALL or SCOPE COMMON data space.         * 00137400
*                                                                     * 00137500
*                                                                     * 00137600
*          STOKEN=xstoken                                             * 00137700
*              is the name (RS-type), or address in register          * 00137800
*              (2)-(12), of a required 8 character input variable     * 00137900
*              that identifies the data space.  The STOKEN was        * 00138000
*              returned by the CREATE service.                        * 00138100
*                                                                     * 00138200
*                                                                     * 00138300
*                                                                     * 00138400
*                                                                     * 00138500
*          START=xstart                                               * 00138600
*              is the name (RS-type), or address in register          * 00138700
*              (2)-(12), of a required fullword input variable or     * 00138800
*              constant that contains the address in the data space   * 00138900
*              of the first block of storage to be moved out.  The    * 00139000
*              address must be on a 4096 byte boundary.               * 00139100
*                                                                     * 00139200
*                                                                     * 00139300
*                                                                     * 00139400
*                                                                     * 00139500
*          BLOCKS=xblocks                                             * 00139600
*              is the name (RS-type), or address in register          * 00139700
*              (2)-(12), of a required fullword input variable or     * 00139800
*              constant that contains the number of contiguous blocks * 00139900
*              of storage to be moved out.                            * 00140000
*                                                                     * 00140100
*                                                                     * 00140200
*                                                                     * 00140300
*      LOAD                                                           * 00140400
*          Is a keyword used to request the load service.             * 00140500
*                                                                     * 00140600
*          Areas of the data space that are I/O DEFINEd may not be    * 00140700
*          LOADed.  If the LOAD service finds an I/O DEFINEd block in * 00140800
*          the area to be LOADed, the block is ignored.  The caller   * 00140900
*          must be executing in supervisor state to LOAD an area in a * 00141000
*          SCOPE ALL or SCOPE COMMON data space.                      * 00141100
*                                                                     * 00141200
*                                                                     * 00141300
*          STOKEN=xstoken                                             * 00141400
*              is the name (RS-type), or address in register          * 00141500
*              (2)-(12), of a required 8 character input variable     * 00141600
*              that identifies the data space.  The STOKEN was        * 00141700
*              returned by the CREATE service.                        * 00141800
*                                                                     * 00141900
*                                                                     * 00142000
*                                                                     * 00142100
*                                                                     * 00142200
*          START=xstart                                               * 00142300
*              is the name (RS-type), or address in register          * 00142400
*              (2)-(12), of a required fullword input variable or     * 00142500
*              constant that contains the address in the data space   * 00142600
*              of the first block of storage to be loaded.  The       * 00142700
*              address must be on a 4096 byte boundary.               * 00142800
*                                                                     * 00142900
*                                                                     * 00143000
*                                                                     * 00143100
*                                                                     * 00143200
*          BLOCKS=xblocks                                             * 00143300
*              is the name (RS-type), or address in register          * 00143400
*              (2)-(12), of a required fullword input variable or     * 00143500
*              constant that contains the number of contiguous blocks * 00143600
*              of storage to be loaded.                               * 00143700
*                                                                     * 00143800
*                                                                     * 00143900
*                                                                     * 00144000
*                                                                     * 00144100
*                                                                     * 00144200
*      End of a set of mutually exclusive required keys.              * 00144300
*                                                                     * 00144400
*                                                                     * 00144500
*                                                                     * 00144600
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00144700
*          is an optional byte input decimal value in the "0-1" range * 00144800
*          that specifies the macro version.  PLISTVER is the only    * 00144900
*          key allowed on the list form of MF and determines which    * 00145000
*          parameter list is generated.  The macro keys associated    * 00145100
*          with each supported version of the macro are listed in     * 00145200
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00145300
*          instead of a number, and the parameter list will be of the * 00145400
*          largest size currently supported. This size may grow from  * 00145500
*          release to release (thus possibly affecting the amount of  * 00145600
*          storage needed by your program).  If your program can      * 00145700
*          tolerate this, IBM recommends that you always specify MAX  * 00145800
*          when creating the list form parameter list as that will    * 00145900
*          ensure that the list form parameter list is always long    * 00146000
*          enough to hold whatever parameters might be specified on   * 00146100
*          the execute form.                                          * 00146200
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00146300
*          default is the lowest version which allows all of the      * 00146400
*          parameters specified on the invocation to be processed.    * 00146500
*                                                                     * 00146600
*                                                                     * 00146700
*                                                                     * 00146800
*                                                                     * 00146900
*      [MF=S|L|E]                                                   * 00147000
*          is an optional keyword input which specifies the macro     * 00147100
*          form.                                                      * 00147200
*          DEFAULT: S                                                 * 00147300
*                                                                     * 00147400
*                                                                     * 00147500
*          [MF=S]                                                     * 00147600
*              specifies the standard form of the macro.  The "S"     * 00147700
*              form generates code to put the parameters into an      * 00147800
*              in-line parameter list and invoke the desired service. * 00147900
*              Full checking for required macro keys is done along    * 00148000
*              with supplying defaults for omitted optional           * 00148100
*              parameters.                                            * 00148200
*                                                                     * 00148300
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00148400
*              specifies the list form of the macro.  The "L" form    * 00148500
*              defines an area to be used for the parameter list.     * 00148600
*              Only the PLISTVER key may be specified on the          * 00148700
*              invocation.  All other macro parameters are flagged as * 00148800
*              errors.  If PLISTVER is not specified, the original    * 00148900
*              parameter list definition is used.                     * 00149000
*                                                                     * 00149100
*            ,xmfctrl                                                 * 00149200
*              is a required input.  It is the name of a storage area * 00149300
*              for the parameter list.                                * 00149400
*                                                                     * 00149500
*            ,xmfattr|0D                                            * 00149600
*              is an optional 60 character input string that varies   * 00149700
*              from 1 to 60 characters. Use it to force boundary      * 00149800
*              alignment of the parameter list. Use only 0F or 0D.    * 00149900
*              DEFAULT: 0D which forces the parameter list to a       * 00150000
*              doubleword boundary.                                   * 00150100
*                                                                     * 00150200
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00150300
*              specifies the execute form of the macro.  The "E" form * 00150400
*              generates code to put the parameters into the          * 00150500
*              parameter list specified by xmfctrl and provides full  * 00150600
*              syntax checking with default setting.                  * 00150700
*                                                                     * 00150800
*            ,xmfctrl                                                 * 00150900
*              is a required input.  It is the name (RS-type), or     * 00151000
*              address in register (1)-(12), of a storage area for    * 00151100
*              the parameter list.                                    * 00151200
*                                                                     * 00151300
*            ,COMPLETE                                              * 00151400
*              is an optional keyword input which specifies the       * 00151500
*              degree of macro parameter syntax checking.             * 00151600
*              DEFAULT: COMPLETE                                      * 00151700
*                                                                     * 00151800
*                                                                     * 00151900
*              COMPLETE                                               * 00152000
*                  Checking for required macro keys is done and       * 00152100
*                  defaults are supplied for omitted optional         * 00152200
*                  parameters.                                        * 00152300
*                                                                     * 00152400
*                                                                     * 00152500
*                                                                     * 00152600
*                                                                     * 00152700
*                                                                     * 00152800
*                                                                     * 00152900
*                                                                     * 00153000
*01* RETURN CODES:                                                    * 00153100
*                                                                     * 00153200
*                                                                     * 00153300
*       00        Successful completion.                              * 00153400
*                                                                     * 00153500
*       04        Successful completion with exceptional              * 00153600
*                 circumstance.                                       * 00153700
*                                                                     * 00153800
*       08        Request rejected.                                   * 00153900
*                                                                     * 00154000
*       0C        System failure - environmental.                     * 00154100
*                                                                     * 00154200
*                                                                     * 00154300
*                                                                     * 00154400
*01* REASON CODES:                                                    * 00154500
*                                                                     * 00154600
*       REASON    RETURN                                              * 00154700
*       CODE      CODE      DESCRIPTION                               * 00154800
*                                          * 00154900
*                                                                     * 00155000
*                                                                     * 00155100
*       xx000Cxx  04        This  processor  will  not support a data * 00155200
*                           space with zero origin. A data  space  of * 00155300
*                           one  less  block  (524,287  blocks)  than * 00155400
*                           requested was created.                    * 00155500
*                                                                     * 00155600
*       xx0005xx  08        Creation  of this data space would result * 00155700
*                           in SMF criteria being violated.           * 00155800
*                                                                     * 00155900
*       xx0009xx  08        Specified  data  space name is not unique * 00156000
*                           in the address space.                     * 00156100
*                                                                     * 00156200
*       xx0304xx  08        DEFINE  IOON  failed, caller was disabled * 00156300
*                           and a frame could not be obtained to back * 00156400
*                           one of the pages in the requested range.  * 00156500
*                                                                     * 00156600
*       xx0006xx  0C        Due  to  a  shortage of resources, RSM is * 00156700
*                           unable  to  create  any  additional  data * 00156800
*                           spaces at this time.                      * 00156900
*                                                                     * 00157000
*       xx0007xx  0C        RSM is unable to obtain addressibility to * 00157100
*                           access its address space or data space.   * 00157200
*                                                                     * 00157300
*       xx0010xx  08        CACHE    hiperspace   creation   rejected * 00157400
*                           because there is no expanded  storage  on * 00157500
*                           the system.                               * 00157600
*                                                                     * 00157700
*       xx0012xx  08        The  system  could  not  generate  a data * 00157800
*                           space  name  as  required   because   the * 00157900
*                           system's  set  of  unique  names  for the * 00158000
*                           address space is currently exhausted.     * 00158100
*                                                                     * 00158200
*       xx0502xx  08        Extend  failed,  extending the data space * 00158300
*                           would cause the data space SMF limits for * 00158400
*                           the address space to be exceeded.         * 00158500
*                                                                     * 00158600
*       xx0503xx  08        Extend  failed,  extending the data space * 00158700
*                           by any amount  would  cause  the  maximum * 00158800
*                           size for the data space to be exceeded.   * 00158900
*                                                                     * 00159000
*                                                                     * 00159100
*                                                                     * 00159200
*01* ABEND CODES:                                                     * 00159300
*                                                                     * 00159400
*                                                                     * 00159500
*       01D       Data  space  service  failed  for non-environmental * 00159600
*                 error.                                              * 00159700
*                                                                     * 00159800
*                                                                     * 00159900
*                                                                     * 00160000
*01* ABEND REASON CODES:                                              * 00160100
*                                                                     * 00160200
*       NOTE:   When  an  abend  is  for  a range element, additional * 00160300
*       diagnostic  information  will be provided (at time of abend); * 00160400
*       namely, register 2 will contain the address of the range list * 00160500
*       element  in  error and register 3 will contain the address of * 00160600
*       the current storage being processed.                          * 00160700
*                                                                     * 00160800
*       REASON    ABEND                                               * 00160900
*       CODE      CODE      DESCRIPTION                               * 00161000
*                                          * 00161100
*                                                                     * 00161200
*                                                                     * 00161300
*       xx0001xx  01D       Problem   program   caller  attempted  to * 00161400
*                           create a SCOPE ALL data  space,  a  SCOPE * 00161500
*                           COMMON  data space, a DREF data space, or * 00161600
*                           a hiperspace on behalf of another owner.  * 00161700
*                                                                     * 00161800
*       xx0002xx  01D       Supervisor  state  program  attempted  to * 00161900
*                           create a data space on behalf of an owner * 00162000
*                           that  is  not  in  its  HOME  or  PRIMARY * 00162100
*                           address space.                            * 00162200
*                                                                     * 00162300
*       xx0003xx  01D       SRB mode request did not specify owner of * 00162400
*                           data space.                               * 00162500
*                                                                     * 00162600
*       xx0004xx  01D       Caller  requested  storage protect key be * 00162700
*                           assigned to the data space and the caller * 00162800
*                           was  not authorized to do so (ie., caller * 00162900
*                           is  not  in supervisor state or executing * 00163000
*                           with a system PSW key).                   * 00163100
*                                                                     * 00163200
*       xx0008xx  01D       User  data  space was not created because * 00163300
*                           the designated owner does not exist.      * 00163400
*                                                                     * 00163500
*       xx000Axx  01D       Problem  program caller attempted to name * 00163600
*                           the data space starting with 'SYS'  which * 00163700
*                           is reserved for system use.               * 00163800
*                                                                     * 00163900
*       xx000Bxx  01D       An invalid number of blocks was specified * 00164000
*                           for the data space size.                  * 00164100
*                                                                     * 00164200
*       xx000Dxx  01D       Data  space  name incorrectly specified - * 00164300
*                           either  name  is  blank,  or   not   left * 00164400
*                           justified,  or  contains characters other * 00164500
*                           than  alphabetic,  numeric  and  national * 00164600
*                           characters,  or  not  padded on the right * 00164700
*                           with blanks, or name starts with numeric. * 00164800
*                                                                     * 00164900
*       xx000Exx  01D       Supervisor state caller attempted to name * 00165000
*                           the  data  space  starting  with  'SYSDS' * 00165100
*                           which is reserved for system use.         * 00165200
*                                                                     * 00165300
*       xx000Fxx  01D       Creation   of  a  CACHE  type  hiperspace * 00165400
*                           requested by a non-authorized caller.     * 00165500
*                                                                     * 00165600
*       xx0011xx  01D       Inconsistencies  in caller parameter list * 00165700
*                           - scope-single, scope-all,  scope-common, * 00165800
*                           or  dref  requested  with  hiperspace, or * 00165900
*                           hiperspace  has both scroll and cache, or * 00166000
*                           scroll hiperspace has nocastout, or basic * 00166100
*                           data   space   with   scroll,  cache,  or * 00166200
*                           nocastout specified.                      * 00166300
*                                                                     * 00166400
*       xx0012xx  01D       Creation   of   a   shared   scroll  type * 00166500
*                           hiperspace requested by a  non-authorized * 00166600
*                           caller.                                   * 00166700
*                                                                     * 00166800
*       xx0013xx  01D       Problem   program   caller  attempted  to * 00166900
*                           create a data space on behalf of an owner * 00167000
*                           that is not the problem program's task or * 00167100
*                           the problem program's job step task.      * 00167200
*                                                                     * 00167300
*       xx0014xx  01D       An  attempt  was  made to create either a * 00167400
*                           scope=common data space while  the  owner * 00167500
*                           was swappable.                            * 00167600
*                                                                     * 00167700
*       xx0101xx  01D       problem program cannot specify TTOKEN for * 00167800
*                           DELETE                                    * 00167900
*                                                                     * 00168000
*       xx0102xx  01D       supervisor  state  program  specified  an * 00168100
*                           invalid TTOKEN                            * 00168200
*                                                                     * 00168300
*       xx0103xx  01D       supervisor  state  program  attempted  to * 00168400
*                           delete a data space on behalf of an owner * 00168500
*                           that  is  not its HOME or PRIMARY address * 00168600
*                           space                                     * 00168700
*                                                                     * 00168800
*       xx0104xx  01D       SRB  routine  did  not specify a required * 00168900
*                           TTOKEN to determine owner                 * 00169000
*                                                                     * 00169100
*       xx0105xx  01D       specified  STOKEN  does  not  represent a * 00169200
*                           valid data space                          * 00169300
*                                                                     * 00169400
*       xx0106xx  01D       specified data space owner is incorrect   * 00169500
*                                                                     * 00169600
*       xx0107xx  01D       specified  data  space  has  I/O  defined * 00169700
*                           pages                                     * 00169800
*                                                                     * 00169900
*       xx0108xx  01D       DELETE  failed,  specified data space has * 00170000
*                           DIV MAPped pages.                         * 00170100
*                                                                     * 00170200
*       xx0109xx  01D       DELETE  failed,  specified data space has * 00170300
*                           DIV SAVE in progress.                     * 00170400
*                                                                     * 00170500
*       xx010Axx  01D       DELETE  failed,  problem  program may not * 00170600
*                           delete a SCOPE ALL or a SCOPE COMMON data * 00170700
*                           space.                                    * 00170800
*                                                                     * 00170900
*       xx010Bxx  01D       DELETE  failed,  problem  program may not * 00171000
*                           delete a scope-single data space that has * 00171100
*                           a key different from the caller's key.    * 00171200
*                                                                     * 00171300
*       xx010Cxx  01D       DELETE  failed,  the  calling program may * 00171400
*                           not  delete  a  scope-single  data  space * 00171500
*                           created  by  the  program's  task  unless * 00171600
*                           either   the   program's   task   or  the * 00171700
*                           program's  job  step  task  owns the data * 00171800
*                           space.                                    * 00171900
*                                                                     * 00172000
*       xx010Dxx  01D       DELETE   failed,   the   hiper  space  is * 00172100
*                           currently   being   used   for   an   ADM * 00172200
*                           operation.                                * 00172300
*                                                                     * 00172400
*       xx0201xx  01D       RELEASE failed, data space does not exist * 00172500
*                                                                     * 00172600
*       xx0202xx  01D       RELEASE failed, start address is not on a * 00172700
*                           page boundary                             * 00172800
*                                                                     * 00172900
*       xx0203xx  01D       RELEASE  failed,  the input STOKEN is not * 00173000
*                           valid                                     * 00173100
*                                                                     * 00173200
*       xx0204xx  01D       RELEASE  failed,  the number of blocks is * 00173300
*                           not valid                                 * 00173400
*                                                                     * 00173500
*       xx0205xx  01D       RELEASE  failed,  the  requested range of * 00173600
*                           blocks is not in the addressable range of * 00173700
*                           the data space                            * 00173800
*                                                                     * 00173900
*       xx0206xx  01D       RELEASE   failed,   the  Problem  program * 00174000
*                           caller attempted to release a  SCOPE  ALL * 00174100
*                           or SCOPE COMMON data space                * 00174200
*                                                                     * 00174300
*       xx0207xx  01D       RELEASE   failed,   the  Problem  program * 00174400
*                           caller  attempted  to  release  either  a * 00174500
*                           hiperspace  it  does  not  own or a scope * 00174600
*                           single  data  space it did not create and * 00174700
*                           does not own                              * 00174800
*                                                                     * 00174900
*       xx0208xx  01D       RELEASE   failed,  the  Supervisor  state * 00175000
*                           program  attempted  to  release  a  SCOPE * 00175100
*                           SINGLE  data  space on behalf of an owner * 00175200
*                           that  is  not  in  its  HOME  or  PRIMARY * 00175300
*                           address space.                            * 00175400
*                                                                     * 00175500
*       xx0209xx  01D       RELEASE  failed,  caller  is not in key 0 * 00175600
*                           and the key for the data space  page  did * 00175700
*                           not match caller's key                    * 00175800
*                                                                     * 00175900
*       xx020Axx  01D       RELEASE  failed,  an I/O DEFINEd block is * 00176000
*                           found                                     * 00176100
*                                                                     * 00176200
*       xx020Bxx  01D       RELEASE  failed,  caller was disabled and * 00176300
*                           requested release  of  enabled  reference * 00176400
*                           storage.                                  * 00176500
*                                                                     * 00176600
*       xx020Cxx  01D       RELEASE   failed,   caller  attempted  to * 00176700
*                           release a page which is page-protected.   * 00176800
*                                                                     * 00176900
*       xx0213xx  01D       RELEASE  failed,  the  input  range  list * 00177000
*                           contains non-zero value in  one  or  more * 00177100
*                           reserved fields.                          * 00177200
*                                                                     * 00177300
*       xx0301xx  01D       DEFINE  IOON  failed, data space does not * 00177400
*                           exist                                     * 00177500
*                                                                     * 00177600
*       xx0302xx  01D       DEFINE  IOON failed, start address is not * 00177700
*                           on a 4096 byte boundary                   * 00177800
*                                                                     * 00177900
*       xx0303xx  01D       DEFINE  IOON  failed, the input STOKEN is * 00178000
*                           not valid                                 * 00178100
*                                                                     * 00178200
*       xx0304xx  01D       DEFINE  IOON failed, the number of blocks * 00178300
*                           is not valid (less than 1)                * 00178400
*                                                                     * 00178500
*       xx0305xx  01D       DEFINE  IOON  failed, the requested range * 00178600
*                           of blocks is not in the addressable range * 00178700
*                           of the data space                         * 00178800
*                                                                     * 00178900
*       xx0306xx  01D       DEFINE  IOON  failed,  the caller was not * 00179000
*                           executing in supervisor state or  with  a * 00179100
*                           system PSW key.                           * 00179200
*                                                                     * 00179300
*       xx0307xx  01D       DEFINE   IOON   failed,   the   requester * 00179400
*                           attempted to DEFINE IOON a  SCOPE  SINGLE * 00179500
*                           data  space on behalf of an owner that is * 00179600
*                           not in its HOME or PRIMARY address space  * 00179700
*                                                                     * 00179800
*       xx0308xx  01D       DEFINE  IOON  failed, data space page has * 00179900
*                           COMMIT I/O in progress.                   * 00180000
*                                                                     * 00180100
*       xx0309xx  01D       DEFINE IOON failed, input STOKEN is for a * 00180200
*                           hiperspace.                               * 00180300
*                                                                     * 00180400
*       xx030Bxx  01D       DEFINE   IOON   failed,  the  caller  was * 00180500
*                           disabled and specified storage  that  was * 00180600
*                           neither  in  a  disabled reference (DREF) * 00180700
*                           state nor an IOON state.                  * 00180800
*                                                                     * 00180900
*       xx030Cxx  01D       DEFINE  IOON failed, the input range list * 00181000
*                           contains non-zero value in  one  or  more * 00181100
*                           reserved fields.                          * 00181200
*                                                                     * 00181300
*       xx0401xx  01D       DEFINE  IOOFF failed, data space does not * 00181400
*                           exist                                     * 00181500
*                                                                     * 00181600
*       xx0402xx  01D       DEFINE IOOFF failed, start address is not * 00181700
*                           on a 4096 byte boundary                   * 00181800
*                                                                     * 00181900
*       xx0403xx  01D       DEFINE  IOOFF failed, the input STOKEN is * 00182000
*                           not valid                                 * 00182100
*                                                                     * 00182200
*       xx0404xx  01D       DEFINE IOOFF failed, the number of blocks * 00182300
*                           is not valid (less than 1)                * 00182400
*                                                                     * 00182500
*       xx0405xx  01D       DEFINE  IOOFF failed, the requested range * 00182600
*                           of blocks is not in the addressable range * 00182700
*                           of the data space                         * 00182800
*                                                                     * 00182900
*       xx0406xx  01D       DEFINE  IOOFF  failed, the caller was not * 00183000
*                           executing in supervisor state or  with  a * 00183100
*                           system PSW key.                           * 00183200
*                                                                     * 00183300
*       xx0407xx  01D       DEFINE   IOOFF   failed,   the  requester * 00183400
*                           attempted to DEFINE IOOFF a SCOPE  SINGLE * 00183500
*                           data  space on behalf of an owner that is * 00183600
*                           not in its HOME or PRIMARY address space  * 00183700
*                                                                     * 00183800
*       xx0409xx  01D       DEFINE  IOOFF failed, input STOKEN is for * 00183900
*                           a hiperspace.                             * 00184000
*                                                                     * 00184100
*       xx040Cxx  01D       DEFINE IOOFF failed, the input range list * 00184200
*                           contains  non-zero  value  in one or more * 00184300
*                           reserved fields.                          * 00184400
*                                                                     * 00184500
*       xx0501xx  01D       Extend  failed, the specified STOKEN does * 00184600
*                           not  represent  a  valid  data  space  or * 00184700
*                           represents  a  data  space  for which the * 00184800
*                           caller is not authorized.                 * 00184900
*                                                                     * 00185000
*       xx0503xx  01D       Extend  failed,  extending the data space * 00185100
*                           by the requested amount would  cause  the * 00185200
*                           maximum  size  for  the  data space to be * 00185300
*                           exceeded.                                 * 00185400
*                                                                     * 00185500
*       xx0601xx  01D       DEFINE DREFON failed, data space does not * 00185600
*                           exist.                                    * 00185700
*                                                                     * 00185800
*       xx0602xx  01D       DEFINE  DREFON  failed,  start address is * 00185900
*                           not on a 4096 byte boundary.              * 00186000
*                                                                     * 00186100
*       xx0603xx  01D       DEFINE DREFON failed, the input STOKEN is * 00186200
*                           not valid.                                * 00186300
*                                                                     * 00186400
*       xx0604xx  01D       DEFINE   DREFON  failed,  the  number  of * 00186500
*                           blocks is not valid (less than 1)         * 00186600
*                                                                     * 00186700
*       xx0605xx  01D       DEFINE DREFON failed, the requested range * 00186800
*                           of blocks is not in the addressable range * 00186900
*                           of the data space                         * 00187000
*                                                                     * 00187100
*       xx0606xx  01D       DEFINE  DREFON failed, the caller was not * 00187200
*                           executing in supervisor state or  with  a * 00187300
*                           system PSW key.                           * 00187400
*                                                                     * 00187500
*       xx0607xx  01D       DEFINE   DREFON   failed,  the  requester * 00187600
*                           attempted to DEFINE DREFON a SCOPE SINGLE * 00187700
*                           data  space on behalf of an owner that is * 00187800
*                           not in its HOME or PRIMARY address space  * 00187900
*                                                                     * 00188000
*       xx0608xx  01D       DEFINE DREFON failed, data space page has * 00188100
*                           COMMIT I/O in progress.                   * 00188200
*                                                                     * 00188300
*       xx0609xx  01D       DEFINE DREFON failed, input STOKEN is for * 00188400
*                           a hiperspace.                             * 00188500
*                                                                     * 00188600
*       xx060Axx  01D       DEFINE  DREFON failed, the specified area * 00188700
*                           is part of a data space that was  CREATEd * 00188800
*                           with the disabled reference attribute.    * 00188900
*                                                                     * 00189000
*       xx060Bxx  01D       DEFINE  DREFON  failed,  the  caller  was * 00189100
*                           disabled and specified storage  that  was * 00189200
*                           neither  in  a  disabled reference (DREF) * 00189300
*                           state nor an IOON state.                  * 00189400
*                                                                     * 00189500
*       xx060Cxx  01D       DEFINE  DREFON  failed,  the  input range * 00189600
*                           list contains non-zero value  in  one  or * 00189700
*                           more reserved fields.                     * 00189800
*                                                                     * 00189900
*       xx0B01xx  01D       OUT failed, data space does not exist     * 00190000
*                                                                     * 00190100
*       xx0B02xx  01D       OUT  failed,  start  address  is not on a * 00190200
*                           page boundary                             * 00190300
*                                                                     * 00190400
*       xx0B03xx  01D       OUT   failed,   input   STOKEN   is   not * 00190500
*                           representing a user data space            * 00190600
*                                                                     * 00190700
*       xx0B04xx  01D       OUT  failed,  the number of blocks is not * 00190800
*                           valid                                     * 00190900
*                                                                     * 00191000
*       xx0B05xx  01D       OUT failed, the requested range of blocks * 00191100
*                           is not in the range of the data space     * 00191200
*                                                                     * 00191300
*       xx0B06xx  01D       OUT  failed,  the  Problem program caller * 00191400
*                           attempted to OUT a  SCOPE  ALL  or  SCOPE * 00191500
*                           COMMON data space                         * 00191600
*                                                                     * 00191700
*       xx0B07xx  01D       OUT  failed,  the  Problem program caller * 00191800
*                           attempted to OUT a data space  on  behalf * 00191900
*                           of  an  owner  that  is  not  in its HOME * 00192000
*                           address space.                            * 00192100
*                                                                     * 00192200
*       xx0B08xx  01D       OUT  failed, the Supervisor state program * 00192300
*                           attempted to  OUT  a  scope  single  data * 00192400
*                           space  on  behalf of an owner that is not * 00192500
*                           in its HOME or PRIMARY address space.     * 00192600
*                                                                     * 00192700
*       xx0B09xx  01D       OUT   failed,   the   data   space  is  a * 00192800
*                           hiperspace                                * 00192900
*                                                                     * 00193000
*       xx0C01xx  01D       LOAD failed, data space does not exist    * 00193100
*                                                                     * 00193200
*       xx0C02xx  01D       LOAD  failed,  start  address is not on a * 00193300
*                           page boundary                             * 00193400
*                                                                     * 00193500
*       xx0C03xx  01D       LOAD  failed,  the  input  STOKEN  is not * 00193600
*                           valid                                     * 00193700
*                                                                     * 00193800
*       xx0C04xx  01D       LOAD  failed, the number of blocks is not * 00193900
*                           valid                                     * 00194000
*                                                                     * 00194100
*       xx0C05xx  01D       LOAD   failed,  the  requested  range  of * 00194200
*                           blocks is not in the range  of  the  data * 00194300
*                           space                                     * 00194400
*                                                                     * 00194500
*       xx0C06xx  01D       LOAD  failed,  the Problem program caller * 00194600
*                           attempted to LOAD a SCOPE  ALL  or  SCOPE * 00194700
*                           COMMON data space                         * 00194800
*                                                                     * 00194900
*       xx0C07xx  01D       LOAD  failed,  the Problem program caller * 00195000
*                           attempted to LOAD a data space on  behalf * 00195100
*                           of  an  owner  that  is  not  in its HOME * 00195200
*                           address space.                            * 00195300
*                                                                     * 00195400
*       xx0C08xx  01D       LOAD failed, the Supervisor state program * 00195500
*                           attempted  to  LOAD  a  scope single data * 00195600
*                           space  on  behalf of an owner that is not * 00195700
*                           in its HOME or PRIMARY address space.     * 00195800
*                                                                     * 00195900
*       xx0C09xx  01D       LOAD   failed,   the   data  space  is  a * 00196000
*                           hiperspace                                * 00196100
*                                                                     * 00196200
*       xx0D01xx  01D       DEFINE  DREFOFF  failed,  data space does * 00196300
*                           not exist.                                * 00196400
*                                                                     * 00196500
*       xx0D02xx  01D       DEFINE  DREFOFF  failed, start address is * 00196600
*                           not on a 4096 byte boundary.              * 00196700
*                                                                     * 00196800
*       xx0D03xx  01D       DEFINE  DREFOFF  failed, the input STOKEN * 00196900
*                           is not valid.                             * 00197000
*                                                                     * 00197100
*       xx0D04xx  01D       DEFINE  DREFOFF  failed,  the  number  of * 00197200
*                           blocks is not valid (less than 1)         * 00197300
*                                                                     * 00197400
*       xx0D05xx  01D       DEFINE   DREFOFF  failed,  the  requested * 00197500
*                           range of blocks is not in the addressable * 00197600
*                           range of the data space                   * 00197700
*                                                                     * 00197800
*       xx0D06xx  01D       DEFINE DREFOFF failed, the caller was not * 00197900
*                           executing  in  supervisor state or with a * 00198000
*                           system PSW key.                           * 00198100
*                                                                     * 00198200
*       xx0D07xx  01D       DEFINE   DREFOFF  failed,  the  requester * 00198300
*                           attempted  to  DEFINE  DREFOFF  a   SCOPE * 00198400
*                           SINGLE  data  space on behalf of an owner * 00198500
*                           that  is  not  in  its  HOME  or  PRIMARY * 00198600
*                           address space                             * 00198700
*                                                                     * 00198800
*       xx0D09xx  01D       DEFINE  DREFOFF  failed,  input STOKEN is * 00198900
*                           for a hiperspace.                         * 00199000
*                                                                     * 00199100
*       xx0D0Axx  01D       DEFINE DREFOFF failed, the specified area * 00199200
*                           is  part of a data space that was CREATEd * 00199300
*                           with the disabled reference attribute.    * 00199400
*                                                                     * 00199500
*       xx0D0Cxx  01D       DEFINE  DREFOFF  failed,  the input range * 00199600
*                           list contains non-zero value  in  one  or * 00199700
*                           more reserved fields.                     * 00199800
*                                                                     * 00199900
*       xxFF01xx  01D       DSPSERV failed, invalid secondary ASID.   * 00200000
*                                                                     * 00200100
*       xxFF02xx  01D       DSPSERV failed, caller held other locks.  * 00200200
*                                                                     * 00200300
*       xxFF03xx  01D       DSPSERV  failed,  caller  issued  invalid * 00200400
*                           macro version.                            * 00200500
*                                                                     * 00200600
*       xxFF04xx  01D       DSPSERV   failed,   reserved   fields  in * 00200700
*                           callers  macro  parameter  list  are  not * 00200800
*                           zeros.                                    * 00200900
*                                                                     * 00201000
*       xxFF05xx  01D       DSPSERV  failed,  user  requested unknown * 00201100
*                           service.                                  * 00201200
*                                                                     * 00201300
*       xxFF06xx  01D       DSPSERV  failed,  a  protection exception * 00201400
*                           occurred while referencing the  parameter * 00201500
*                           list by the requester.                    * 00201600
*                                                                     * 00201700
*       xxFF07xx  01D       DSPSERV  failed, caller must be in 31 bit * 00201800
*                           addressing  mode  to  use   any   DSPSERV * 00201900
*                           service.                                  * 00202000
*                                                                     * 00202100
*       xxFF08xx  01D       DSPSERV  failed,  the caller was disabled * 00202200
*                           but requested a service that requires the * 00202300
*                           caller to be enabled.                     * 00202400
*                                                                     * 00202500
*       xxFF09xx  01D       DSPSERV  failed,  the  caller held one or * 00202600
*                           more  locks  needed  by  the  system   to * 00202700
*                           process the request.                      * 00202800
*                                                                     * 00202900
*       xxFF0Axx  01D       DSPSERV failed, caller specified an input * 00203000
*                           range  list  for  a service that does not * 00203100
*                           support a range list.                     * 00203200
*                                                                     * 00203300
*       xxFF0Bxx  01D       DSPSERV   failed,   caller  specified  an * 00203400
*                           incorrect value  for  NUMRANGE  (must  be * 00203500
*                           greater than zero).                       * 00203600
*                                                                     * 00203700
*       xxFF0Cxx  01D       DSPSERV  failed,  NUMRANGE  value exceeds * 00203800
*                           maximum of 16 for unauthorized caller.    * 00203900
*                                                                     * 00204000
*       xxFF0Dxx  01D       DSPSERV  failed,  the input range list is * 00204100
*                           not accessible to the service  using  the * 00204200
*                           caller's execution key.                   * 00204300
*                                                                     * 00204400
*       xxFF10xx  01D       DSPSERV  DEFINE  failed, sub-service code * 00204500
*                           is invalid.                               * 00204600
*                                                                     * 00204700
*                                                                     * 00204800
*                                                                     * 00204900
*01* MODULE TYPE:  ASSEM MACRO                                        * 00205000
*                                                                     * 00205100
*02*   PROCESSOR:  ASSEM                                              * 00205200
*                                                                     * 00205300
*01* COMPONENT:  SC1CR                                                * 00205400
*                                                                     * 00205500
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00205600
*                                                                     * 00205700
*01* MACRO USAGE NOTES:                                               * 00205800
*                                                                     * 00205900
*                                                                     * 00206000
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00206100
*        global macro variable.  Any value other than 'NO' will       * 00206200
*        result in the macro expansion being printed.  The default is * 00206300
*        'YES'.  The following examples illustrate how the ZPRINT     * 00206400
*        variable should be set.                                      * 00206500
*                                                                     * 00206600
*                    GBLC &ZPRINT                                     * 00206700
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00206800
*                                                                     * 00206900
*                                                                     * 00207000
*    2.  The  DSPSERV macro supports multiple versions. The macro key * 00207100
*        list  below  contains the version level in which the key was * 00207200
*        first  introduced.  Positionals  are  identified by the word * 00207300
*        'Positional'  followed by the numeric value of its position. * 00207400
*        Nested  positionals  are  preceded  by their outer key.  The * 00207500
*        lowest value represents the original version and the highest * 00207600
*        value  represents  the  most  recent  version of the DSPSERV * 00207700
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00207800
*        least  as high as the highest version number of all the keys * 00207900
*        being used.                                                  * 00208000
*                                                                     * 00208100
*        VERSION   KEY                                                * 00208200
*                                                                     * 00208300
*              0      BACK                                            * 00208400
*                     BLOCKS                                          * 00208500
*                     BLOCKS(Positional_1)                            * 00208600
*                     CALLERKEY                                       * 00208700
*                     CASTOUT                                         * 00208800
*                     CREATE                                          * 00208900
*                     DEFINE                                          * 00209000
*                     DELETE                                          * 00209100
*                     DISABLED                                        * 00209200
*                     DREF                                            * 00209300
*                     DREFOFF                                         * 00209400
*                     DREFON                                          * 00209500
*                     EXTEND                                          * 00209600
*                     FORCE                                           * 00209700
*                     FPROT                                           * 00209800
*                     GENNAME                                         * 00209900
*                     HSTYPE                                          * 00210000
*                     INLIST                                          * 00210100
*                     IOOFF                                           * 00210200
*                     IOON                                            * 00210300
*                     KEY                                             * 00210400
*                     LOAD                                            * 00210500
*                     LONG                                            * 00210600
*                     NAME                                            * 00210700
*                     NUMBLKS                                         * 00210800
*                     NUMRANGE                                        * 00210900
*                     ORIGIN                                          * 00211000
*                     OUT                                             * 00211100
*                     OUTNAME                                         * 00211200
*                     RANGLIST                                        * 00211300
*                     RELEASE                                         * 00211400
*                     SCOPE                                           * 00211500
*                     SHARE                                           * 00211600
*                     START                                           * 00211700
*                     STOKEN                                          * 00211800
*                     TTOKEN                                          * 00211900
*                     TYPE                                            * 00212000
*                     VAR                                             * 00212100
*              1      BLOCKS(Positional_2)                            * 00212200
*                                                                     * 00212300
*                                                                     * 00212400
*                                                                     * 00212500
*01* CHANGE ACTIVITY:                                                 * 00212600
*                                                                     * 00212700
*   Flag LineItem  FMID    Date   ID    Comment                       * 00212800
*                                                                     * 00212900
*    $L0=DATASPAC HBB3310 860807 PD4U:  Data spaces support.          * 00213000
*    $L1=HIPER    JBB3311 880427 PDG1:  Hiperspaces support.          * 00213100
*    $01=OY19885  JBB3311 880113 PDG1:  Modify keywords for extend.   * 00213200
*    $L2=CADSS005 JBB3313 880906 PDG1:  CADS support.                 * 00213300
*    $L3=VLF27    JBB3313 890519 PDG1:  Shared Data Object Management * 00213400
*                                         Support.                    * 00213500
*    $L4=MVPGM14  JBB3313 890718 PDG1:  Move Page Support.            * 00213600
*    $L5=JUP03    HBB4410 881107 PDG1:  Jupiter III support.          * 00213700
*    $L6=SHARED00 HBB4420 901022 PD00HO:  Data space sharing in       * 00213800
*                                         problem state.              * 00213900
*    $02=OY31134  JBB3311 900925 PD00A8:  Enforce non-swappable       * 00214000
*                                         rules.                      * 00214100
*    $03=OY40152  JBB3311 910314 PD00W3:  Ensure owning address space * 00214200
*                                         is not swapped out when     * 00214300
*                                         data space or hiperspace is * 00214400
*                                         referenced.                 * 00214500
*    $D1=DKB0087  HBB4430 920429 PD00A8:  Add new reason code for ADM * 00214600
*                                         support.                    * 00214700
*    $P1=PKB2333  HBB4430 920617 PD00JV:  Enhanced subtask support    * 00214800
*                                         for LOAD and OUT.           * 00214900
*    $P2=PKB2333  HBB4430 920617 PD00JV:  Correct reason code text    * 00215000
*                                         for documentation of        * 00215100
*                                         unauthorized cross-memory   * 00215200
*                                         characteristics.            * 00215300
*    $04=OY64993  HBB4420 930902 PD00HM:  Fixed minor script syntax   * 00215400
*                                         errors and recompiled for   * 00215500
*                                         AMG SYSNDX problem          * 00215600
*    $D3=DIG0028  HBB5510 930520 PD00HM:  Pin/IOON conflict           * 00215700
*                                         improvement.  Removed       * 00215800
*                                         xx030Axx ABEND reason code. * 00215900
*    $L7=OPEN31KE JBB5522 941014 PD00G1:  Add range-list for DEFINE   * 00216000
*                                         and RELEASE.                * 00216100
*    $L8=64BIT    HBB6608 980709 PD00B7:  Add BACK(31) BACK(64) for   * 00216200
*                                         CREATE.                     * 00216300
****** END OF SPECIFICATIONS *****************************************/ 00216400
*/* TLINE 1 *********************************************************** 00216500
         MACRO                                                          00216600
&XLABEL  DSPSERV &NAME=,&GENNAME=,&OUTNAME=,&BLOCKS=,&TYPE=,&DREF=,    *00216700
               &SCOPE=,&BACK=,&HSTYPE=,&SHARE=,&CASTOUT=,&KEY=,&FPROT=,*00216800
               &TTOKEN=,&STOKEN=,&ORIGIN=,&NUMBLKS=,&INLIST=,&START=,  *00216900
               &NUMRANGE=,&RANGLIST=,&DISABLED=,&LONG=,&FORCE=,&VAR=,  *00217000
               &PLISTVER=,&MF=                                          00217100
.*                                                                      00217200
*                MACDATE -11/10/99-<1>                                  00217300
.*                                                                      00217400
.*******************************************************************    00217500
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00217600
.*******************************************************************    00217700
                GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                 00217800
                GBLC  &ZTEST      YES=TEST NO=NO TEST                   00217900
                GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX           00218000
.*                                                                      00218100
                GBLC  &ZDSPSERV   YES=MACRO USED AT LEAST ONCE          00218200
.*******************************************************************    00218300
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00218400
.*******************************************************************    00218500
                LCLC  &ZMS        ERROR MESSAGE WORK AREA               00218600
                LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS          00218700
                LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED            00218800
                LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR           00218900
                LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE           00219000
                LCLA  &ZAWRK      USED AS A WORK AREA                   00219100
                LCLA  &ZASIZ      USED FOR SIZE OF VALUE                00219200
                LCLA  &ZN         NUMERIC WORK VARIABLE                 00219300
                LCLC  &ZC         CHARACTER WORK VARIABLE               00219400
                LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE           00219500
                LCLA  &ZTLA       VALUE TOO LONG VARIABLE               00219600
                LCLA  &ZMACRET    MACRO RETURN CODE                     00219700
&ZMACRET        SETA  0           ASSUME NO ERRORS                      00219800
.*                                                                      00219900
                LCLC  &ZCSYSLIST(255)           NONXKEY, POS ARRAY      00220000
                LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()            00220100
                LCLA  &ZPLLEN     PARAMETER LIST LENGTH                 00220200
                LCLC  &ZENDBASEPL               End of base PL          00220300
                LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                 00220400
.*******************************************************************    00220500
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00220600
.*******************************************************************    00220700
                LCLA  &ZI         INDEX FOR ARRAY                       00220800
                LCLA  &ZJ         INDEX FOR PARMS                       00220900
                LCLA  &ZK         INDEX FOR PARSE                       00221000
                LCLA  &ZLO        LOW RANGE VALUE                       00221100
                LCLA  &ZHI        HIGH RANGE VALUE                      00221200
                LCLC  &ZW         WORK AREA FOR PARM                    00221300
.********************************************************************   00221400
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00221500
.********************************************************************   00221600
                GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL               00221700
                GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE        00221800
                GBLA  &SYSALVL    SYSSTATE ARCHLVL                      00221900
.*                                                                      00222000
                AIF   (K'&SYSASCE GT 0).ZSYS4   SYS STATE DEFINED       00222100
                AIF   (K'&SYSSPLV GT 0).ZSYS2   SP LEVEL DEFINED        00222200
                SPLEVEL  TEST                                           00222300
.ZSYS2          ANOP  ,                                                 00222400
                AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1             00222500
                AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1             00222600
                SYSSTATE TEST                                           00222700
                AGO   .ZSYS4                                            00222800
.ZSYS3          ANOP  ,                                                 00222900
&SYSASCE        SETC  'P'         ASSUME SYSSTATE PRIMARY               00223000
.ZSYS4          ANOP  ,                                                 00223100
.*******************************************************************    00223200
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00223300
.*******************************************************************    00223400
                LCLC  &XSERVICE   ++ VALUE                              00223500
                LCLC  &XCREATE    ++ VALUE                              00223600
                LCLC  &XNAME      ++ NAME                               00223700
                LCLC  &XGENNAME   ++ VALUE                              00223800
                LCLC  &XOUTNAME   ++ NAME                               00223900
                LCLC  &XBLOCKS    ++ NAME                               00224000
                LCLC  &XINITIAL   ++ NAME                               00224100
                LCLC  &XTYPE      ++ VALUE                              00224200
                LCLC  &XDREF      ++ VALUE                              00224300
                LCLC  &XSCOPE     ++ VALUE                              00224400
                LCLC  &XBACK      ++ VALUE                              00224500
                LCLC  &XHSTYPE    ++ VALUE                              00224600
                LCLC  &XSHARE     ++ VALUE                              00224700
                LCLC  &XCASTOUT   ++ VALUE                              00224800
                LCLC  &XKEYSPEC   ++ NAME                               00224900
                LCLC  &XCALLERKEY               ++ NAME                 00225000
                LCLC  &XKEY       ++ NAME                               00225100
                LCLC  &XFPROT     ++ VALUE                              00225200
                LCLC  &XTTOKEN    ++ NAME                               00225300
                LCLC  &XSTOKEN    ++ NAME                               00225400
                LCLC  &XORIGIN    ++ NAME                               00225500
                LCLC  &XNUMBLKS   ++ NAME                               00225600
                LCLC  &XDELETE    ++ VALUE                              00225700
                LCLC  &XRELEASE   ++ VALUE                              00225800
                LCLC  &XINLIST    ++ VALUE                              00225900
                LCLC  &XSTART     ++ NAME                               00226000
                LCLC  &XNUMRANGE  ++ NAME                               00226100
                LCLC  &XRANGLIST  ++ NAME                               00226200
                LCLC  &XDISABLED  ++ VALUE                              00226300
                LCLC  &XDEFINE    ++ VALUE                              00226400
                LCLC  &XDEFOP     ++ VALUE                              00226500
                LCLC  &XIOON      ++ VALUE                              00226600
                LCLC  &XLONG      ++ VALUE                              00226700
                LCLC  &XIOOFF     ++ VALUE                              00226800
                LCLC  &XDREFON    ++ VALUE                              00226900
                LCLC  &XDREFOFF   ++ VALUE                              00227000
                LCLC  &XFORCE     ++ VALUE                              00227100
                LCLC  &XEXTEND    ++ VALUE                              00227200
                LCLC  &XVAR       ++ VALUE                              00227300
                LCLC  &XOUT       ++ VALUE                              00227400
                LCLC  &XLOAD      ++ VALUE                              00227500
                LCLA  &XPLISTVER  ++ VALUE                              00227600
                LCLC  &XMF        ++ VALUE                              00227700
                LCLC  &XMFCTRL    ++ NAME                               00227800
                LCLC  &XMFATTR    ++ VALUE                              00227900
                LCLC  &XMFSCK     ++ VALUE                              00228000
.*******************************************************************    00228100
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00228200
.*******************************************************************    00228300
                LCLC  &ZXSERVICE  ++ INPUT VALUE                        00228400
                LCLC  &ZXCREATE   ++ INPUT VALUE                        00228500
                LCLC  &ZXNAME     ++ INPUT NAME                         00228600
                LCLC  &ZXGENNAME  ++ INPUT VALUE                        00228700
                LCLC  &ZXOUTNAME  ++ OUTPUT NAME                        00228800
                LCLC  &ZXBLOCKS   ++ INPUT NAME                         00228900
                LCLC  &ZXINITIAL  ++ INPUT NAME                         00229000
                LCLC  &ZXTYPE     ++ INPUT VALUE                        00229100
                LCLC  &ZXDREF     ++ INPUT VALUE                        00229200
                LCLC  &ZXSCOPE    ++ INPUT VALUE                        00229300
                LCLC  &ZXBACK     ++ INPUT VALUE                        00229400
                LCLC  &ZXHSTYPE   ++ INPUT VALUE                        00229500
                LCLC  &ZXSHARE    ++ INPUT VALUE                        00229600
                LCLC  &ZXCASTOUT  ++ INPUT VALUE                        00229700
                LCLC  &ZXKEYSPEC  ++ INPUT NAME                         00229800
                LCLC  &ZXCALLERKEY              ++ INPUT NAME           00229900
                LCLC  &ZXKEY      ++ INPUT NAME                         00230000
                LCLC  &ZXFPROT    ++ INPUT VALUE                        00230100
                LCLC  &ZXTTOKEN   ++ INPUT NAME                         00230200
                LCLC  &ZXSTOKEN   ++ OUTPUT NAME                        00230300
                LCLC  &ZXORIGIN   ++ OUTPUT NAME                        00230400
                LCLC  &ZXNUMBLKS  ++ OUTPUT NAME                        00230500
                LCLC  &ZXDELETE   ++ INPUT VALUE                        00230600
                LCLC  &ZXRELEASE  ++ INPUT VALUE                        00230700
                LCLC  &ZXINLIST   ++ INPUT VALUE                        00230800
                LCLC  &ZXSTART    ++ INPUT NAME                         00230900
                LCLC  &ZXNUMRANGE               ++ INPUT NAME           00231000
                LCLC  &ZXRANGLIST               ++ INPUT NAME           00231100
                LCLC  &ZXDISABLED               ++ INPUT VALUE          00231200
                LCLC  &ZXDEFINE   ++ INPUT VALUE                        00231300
                LCLC  &ZXDEFOP    ++ INPUT VALUE                        00231400
                LCLC  &ZXIOON     ++ INPUT VALUE                        00231500
                LCLC  &ZXLONG     ++ INPUT VALUE                        00231600
                LCLC  &ZXIOOFF    ++ INPUT VALUE                        00231700
                LCLC  &ZXDREFON   ++ INPUT VALUE                        00231800
                LCLC  &ZXDREFOFF  ++ INPUT VALUE                        00231900
                LCLC  &ZXFORCE    ++ INPUT VALUE                        00232000
                LCLC  &ZXEXTEND   ++ INPUT VALUE                        00232100
                LCLC  &ZXVAR      ++ INPUT VALUE                        00232200
                LCLC  &ZXOUT      ++ INPUT VALUE                        00232300
                LCLC  &ZXLOAD     ++ INPUT VALUE                        00232400
                LCLC  &ZXPLISTVER               ++ INPUT VALUE          00232500
                LCLC  &ZXMF       ++ INPUT VALUE                        00232600
                LCLC  &ZXMFCTRL   ++ INPUT NAME                         00232700
                LCLC  &ZXMFATTR   ++ INPUT VALUE                        00232800
                LCLC  &ZXMFSCK    ++ INPUT VALUE                        00232900
.********************************************************************   00233000
.***AC.PLV01  PROCESS PLISTVER                                      *   00233100
.********************************************************************   00233200
&XPLISTVER      SETA  0                                                 00233300
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00233400
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00233500
&XPLISTVER      SETA  1                                                 00233600
.ZPLV0          ANOP  ,                                                 00233700
.*                                                                      00233800
                AIF   ('&BLOCKS(2)' EQ '').ZPLV1E                       00233900
                AIF   (&XPLISTVER GE 1).ZPLV1E                          00234000
&XPLISTVER      SETA  1                                                 00234100
.ZPLV1E         ANOP  ,                                                 00234200
.*                                                                      00234300
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00234400
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00234500
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00234600
.*-------------------------------------------------------------------   00234700
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00234800
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00234900
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00235000
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00235100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00235200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00235300
                AGO   .ZPVCK2                                           00235400
.ZPVCK3         ANOP  ,                                                 00235500
.*-------------------------------------------------------------------   00235600
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00235700
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00235800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00235900
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00236000
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00236100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00236200
                AGO   .ZPVCKE                                           00236300
.ZPVCK2         ANOP  ,                                                 00236400
.*-------------------------------------------------------------------   00236500
&ZCVAL          SETC  '&PLISTVER(1)'                                    00236600
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00236700
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00236800
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00236900
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00237000
                AIF   (&ZN LE 1).ZPVCK4A   NOT HIGH                     00237100
.ZPVCK6         ANOP  ,                                                 00237200
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00237300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00237400
&ZMS            SETC  '&ZMS THE RANGE IS "0-1"'                         00237500
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00237600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00237700
&XPLISTVER      SETA  1                                                 00237800
                AGO   .ZPVCKE                                           00237900
.*-------------------------------------------------------------------   00238000
.ZPVCK4A        ANOP  ,                                                 00238100
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00238200
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00238300
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00238400
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00238500
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00238600
                MNOTE 8,' &ZMS IS REQUIRED.'                            00238700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00238800
                AGO   .ZPVCK5                                           00238900
.ZPVCK4         ANOP  ,                                                 00239000
&XPLISTVER      SETA  &PLISTVER(1)                                      00239100
.ZPVCK5         ANOP  ,                                                 00239200
.ZPVCKE         ANOP  ,                                                 00239300
.********************************************************************   00239400
.***AG.MF01 PROCESS MF MACRO FORMS                                      00239500
.********************************************************************   00239600
                ACTR  10000                                             00239700
.*------------------------------------------------------------------    00239800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00239900
&XMF            SETC  ''          INITIALIZE XVARIABLE                  00240000
.*-------------------------------------------------------------------   00240100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00240200
.ZG203          ANOP  ,                                                 00240300
&ZTLC           SETC 'S'                                                00240400
                AIF   ('&MF(1)' NE '&ZTLC').ZG204                       00240500
&XMF            SETC  'S'         SET KEYWORD                           00240600
                AIF   (N'&MF LE 1).ZG203A       CK NUM                  00240700
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         00240800
&ZMS            SETC  '&ZMS.&MF"'                                       00240900
&ZMS            SETC  '&ZMS "MF"'                                       00241000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00241100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00241200
.ZG203A         ANOP  ,                                                 00241300
.*-------------------------------------------------------------------   00241400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00241500
.ZG204          ANOP  ,                                                 00241600
&ZTLC           SETC 'L'                                                00241700
                AIF   ('&MF(1)' NE '&ZTLC').ZG211                       00241800
&XMF            SETC  'L'         SET KEYWORD                           00241900
                AIF   (N'&MF LE 3).ZG204A       CK NUM                  00242000
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         00242100
&ZMS            SETC  '&ZMS.&MF"'                                       00242200
&ZMS            SETC  '&ZMS "MF"'                                       00242300
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              00242400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00242500
.ZG204A         ANOP  ,                                                 00242600
.*-------------------------------------------------------------------   00242700
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00242800
                AIF   (N'&SYSLIST NE 0).ZG204B  POSITIONALS?            00242900
                AIF   ('&NAME' NE '').ZG204B    KEYS?                   00243000
                AIF   ('&GENNAME' NE '').ZG204B  KEYS?                  00243100
                AIF   ('&OUTNAME' NE '').ZG204B  KEYS?                  00243200
                AIF   ('&BLOCKS' NE '').ZG204B  KEYS?                   00243300
                AIF   ('&TYPE' NE '').ZG204B    KEYS?                   00243400
                AIF   ('&DREF' NE '').ZG204B    KEYS?                   00243500
                AIF   ('&SCOPE' NE '').ZG204B   KEYS?                   00243600
                AIF   ('&BACK' NE '').ZG204B    KEYS?                   00243700
                AIF   ('&HSTYPE' NE '').ZG204B  KEYS?                   00243800
                AIF   ('&SHARE' NE '').ZG204B   KEYS?                   00243900
                AIF   ('&CASTOUT' NE '').ZG204B  KEYS?                  00244000
                AIF   ('&KEY' NE '').ZG204B     KEYS?                   00244100
                AIF   ('&FPROT' NE '').ZG204B   KEYS?                   00244200
                AIF   ('&TTOKEN' NE '').ZG204B  KEYS?                   00244300
                AIF   ('&STOKEN' NE '').ZG204B  KEYS?                   00244400
                AIF   ('&ORIGIN' NE '').ZG204B  KEYS?                   00244500
                AIF   ('&NUMBLKS' NE '').ZG204B  KEYS?                  00244600
                AIF   ('&INLIST' NE '').ZG204B  KEYS?                   00244700
                AIF   ('&START' NE '').ZG204B   KEYS?                   00244800
                AIF   ('&NUMRANGE' NE '').ZG204B  KEYS?                 00244900
                AIF   ('&RANGLIST' NE '').ZG204B  KEYS?                 00245000
                AIF   ('&DISABLED' NE '').ZG204B  KEYS?                 00245100
                AIF   ('&LONG' NE '').ZG204B    KEYS?                   00245200
                AIF   ('&FORCE' NE '').ZG204B   KEYS?                   00245300
                AIF   ('&VAR' NE '').ZG204B     KEYS?                   00245400
                AGO    .ZG204C    INVOCATION OKAY                       00245500
.ZG204B         ANOP  ,                                                 00245600
&ZMS            SETC  'THE "L" FORM OF "MF"'    *MFLA* MNOTE            00245700
&ZMS            SETC  '&ZMS CAN ONLY HAVE'                              00245800
&ZMS            SETC  '&ZMS THE "PLISTVER" KEY'                         00245900
                MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'            00246000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00246100
.ZG204C         ANOP  ,                                                 00246200
.*-------------------------------------------------------------------   00246300
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00246400
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         00246500
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         00246600
                AIF   (N'&MF(2) GT 1).ZG206B    MULTI PARMS             00246700
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         00246800
.ZG206B         AIF   (K'&MF(2) GT 0).ZG206C                            00246900
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00247000
&ZMS            SETC  'WHEN "L" IS SPECIFIED'   *KRQDA*                 00247100
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               00247200
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      00247300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00247400
.ZG206C         ANOP  ,                                                 00247500
.*-------------------------------------------------------------------   00247600
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00247700
                AIF   (K'&ZXMFCTRL LE 0).ZG206P  NOT I/O                00247800
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG206P                   00247900
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00248000
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         00248100
&ZMS            SETC  '&ZMS.&MF"'                                       00248200
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00248300
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                 00248400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00248500
.ZG206P         ANOP  ,                                                 00248600
.*-------------------------------------------------------------------   00248700
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00248800
&ZXMFATTR       SETC  'INPUT'     SET IN/OUTPUT                         00248900
&XMFATTR        SETC  '0D'                                              00249000
                AIF   (K'&MF(3) LE 0).ZG209B    PARM                    00249100
&XMFATTR        SETC  '&MF(3,1)'  SET XVARIABLE                         00249200
                AIF   (N'&MF(3) GT 1).ZG209B    MULTI PARMS             00249300
&XMFATTR        SETC  '&MF(3)'    SET XVARIABLE                         00249400
.ZG209B         ANOP  ,                                                 00249500
.*-------------------------------------------------------------------   00249600
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00249700
                AIF   (K'&ZXMFATTR LE 0).ZG209P  NOT I/O                00249800
                AIF   ('&XMFATTR'(1,1) NE '(').ZG209P                   00249900
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       00250000
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         00250100
&ZMS            SETC  '&ZMS.&MF"'                                       00250200
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00250300
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                 00250400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00250500
.ZG209P         ANOP  ,                                                 00250600
.*-------------------------------------------------------------------   00250700
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00250800
                AIF   (K'&ZXMFATTR LE 0).ZG209S  NOT I/O                00250900
                AIF   (K'&XMFATTR LE 60).ZG209S  LNG OK                 00251000
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       00251100
&ZMS            SETC  '"MF='      *KLNGA* MNOTE                         00251200
&ZMS            SETC  '&ZMS.&MF"'                                       00251300
&ZMS            SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'             00251400
                MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                00251500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00251600
.ZG209S         ANOP  ,                                                 00251700
.*-------------------------------------------------------------------   00251800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00251900
.ZG211          ANOP  ,                                                 00252000
&ZTLC           SETC 'E'                                                00252100
                AIF   ('&MF(1)' NE '&ZTLC').ZG219                       00252200
&XMF            SETC  'E'         SET KEYWORD                           00252300
                AIF   (N'&MF LE 3).ZG211A       CK NUM                  00252400
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         00252500
&ZMS            SETC  '&ZMS.&MF"'                                       00252600
&ZMS            SETC  '&ZMS "MF"'                                       00252700
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              00252800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00252900
.ZG211A         ANOP  ,                                                 00253000
.*-------------------------------------------------------------------   00253100
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00253200
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         00253300
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         00253400
                AIF   (N'&MF(2) GT 1).ZG213B    MULTI PARMS             00253500
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         00253600
.ZG213B         AIF   (K'&MF(2) GT 0).ZG213C                            00253700
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00253800
&ZMS            SETC  'WHEN "E" IS SPECIFIED'   *KRQDA*                 00253900
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               00254000
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      00254100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00254200
.ZG213C         ANOP  ,                                                 00254300
.*-------------------------------------------------------------------   00254400
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00254500
                AIF   (K'&ZXMFCTRL LE 0).ZG213R  NOT I/O                00254600
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG213R                   00254700
&ZCGPR          SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                        00254800
                AIF   ('&ZCGPR'(1,1) NE '0').ZG213P                     00254900
                AIF   (K'&ZCGPR GT 2).ZG213Q                            00255000
                AIF   ('&ZCGPR' EQ '0').ZG213Q                          00255100
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00255200
                AIF   (T'&ZCGPR NE 'N').ZG213Q  INVALID REG NAME        00255300
.ZG213P         ANOP  ,                                                 00255400
                AIF   (T'&ZCGPR NE 'N').ZG213R  NON NUMERIC             00255500
                AIF   ('&ZCGPR' LT '1').ZG213Q                          00255600
                AIF   ('&ZCGPR' LE '12').ZG213R                         00255700
.ZG213Q         ANOP  ,                                                 00255800
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         00255900
&ZMS            SETC  '&ZMS.&MF"'                                       00256000
&ZMS            SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'         00256100
                MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                  00256200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00256300
.ZG213R         ANOP  ,                                                 00256400
.*-------------------------------------------------------------------   00256500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00256600
&XMFSCK         SETC  ''          INITIALIZE XVARIABLE                  00256700
.ZG217A   AIF   ('&MF(3)' NE 'COMPLETE').ZG218A                         00256800
&XMFSCK         SETC  'COMPLETE'  SET KEYWORD                           00256900
.*-------------------------------------------------------------------   00257000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00257100
.ZG218A         AIF   (K'&XMFSCK GT 0).ZG218C   KEYWORD                 00257200
                AIF   (K'&MF(3) LE 0).ZG218B                            00257300
&ZMS            SETC  '"MF='      *KUKWA* MNOTE                         00257400
&ZMS            SETC  '&ZMS.&MF"'                                       00257500
&ZMS            SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '         00257600
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00257700
&ZMS            SETC  '&ZMS "COMPLETE".'                                00257800
                MNOTE 8,' &ZMS '                                        00257900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00258000
.ZG218B         ANOP  ,                                                 00258100
&XMFSCK         SETC  'COMPLETE'  SET DEFAULT KEYWORD                   00258200
.ZG218C         ANOP  ,                                                 00258300
&ZXMFSCK        SETC  'INPUT'     SET IN/OUTPUT                         00258400
.*------------------------------------------------------------------    00258500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00258600
.ZG219          ANOP  ,                                                 00258700
&ZXMF           SETC  'INPUT'     SET IN/OUTPUT                         00258800
                AIF   (K'&XMF GT 0).ZG219E      VALID ARG               00258900
                AIF   (T'&MF EQ 'O').ZG219D     OMITTED                 00259000
&ZASYSLNDX      SETA  0                                                 00259100
.ZG219A         ANOP  ,           POSITIONAL MACRO KEY                  00259200
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00259300
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG219C                 00259400
&ZTLC           SETC 'MF'                                               00259500
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG219A        00259600
.ZG219B         ANOP  ,                                                 00259700
&ZXMF           SETC  ''          RESET IN/OUTPUT                       00259800
&ZMS            SETC  'THE "MF" KEY'            *KOPTA* MNOTE           00259900
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00260000
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00260100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00260200
                AGO   .ZG219E                                           00260300
.ZG219C         ANOP  ,                                                 00260400
&ZXMF           SETC  ''          RESET IN/OUTPUT                       00260500
&ZMS            SETC  '"MF='      *KUKWA* MNOTE                         00260600
&ZMS            SETC  '&ZMS.&MF"'                                       00260700
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00260800
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00260900
&ZMS            SETC  '&ZMS "S",'                                       00261000
&ZMS            SETC  '&ZMS "L",'                                       00261100
&ZMS            SETC  '&ZMS OR "E".'                                    00261200
                MNOTE 8,' &ZMS '                                        00261300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00261400
                AGO   .ZG219E                                           00261500
.ZG219D         ANOP  ,                                                 00261600
&XMF            SETC  'S'         SET DEFAULT KEYWORD                   00261700
&XMFSCK         SETC  'COMPLETE'  COMPLETE CHECKING                     00261800
.ZG219E         ANOP  ,                                                 00261900
.********************************************************************   00262000
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00262100
.********************************************************************   00262200
                ACTR  10000                                             00262300
.*-------------------------------------------------------------------   00262400
.***AG.MF03 MF=(SLE)                                                    00262500
                AIF   ('&XMF' EQ 'L').ZGMFX                             00262600
.*-------------------------------------------------------------------   00262700
.***AG.KMEKY05 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00262800
&XSERVICE       SETC  ''          INITIALIZE XVARIABLE                  00262900
&ZASYSLNDX      SETA  0                                                 00263000
.ZG2A           ANOP  ,           POSITIONAL KEY SEARCH                 00263100
&ZASYSLNDX      SETA  &ZASYSLNDX+1              NEXT POSITIONAL         00263200
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG2B  DONE                    00263300
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG2A             00263400
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'CREATE').ZG2A                00263500
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00263600
&ZXSERVICE      SETC  'INPUT'     SET IN/OUTPUT                         00263700
&XSERVICE       SETC  'CREATE'    SET XVARIABLE                         00263800
&ZXCREATE       SETC  'INPUT'     SET IN/OUTPUT                         00263900
&XCREATE        SETC  'CREATE'    SET XVARIABLE PARM                    00264000
.ZG2B           ANOP  ,                                                 00264100
.*-------------------------------------------------------------------   00264200
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00264300
&ZASYSLNDX      SETA  0                                                 00264400
.ZG81A          ANOP  ,           POSITIONAL KEY SEARCH                 00264500
&ZASYSLNDX      SETA  &ZASYSLNDX+1              NEXT POSITIONAL         00264600
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG81C  DONE                   00264700
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG81A            00264800
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'DELETE').ZG81A               00264900
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00265000
                AIF   (K'&XSERVICE LE 0).ZG81B  VALID                   00265100
&ZMS            SETC  '"DELETE'   *KMEKA* MNOTE                         00265200
&ZMS            SETC  '&ZMS."'                                          00265300
&ZMS            SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'             00265400
&ZMS            SETC  '&ZMS "&XSERVICE"'                                00265500
                MNOTE 8,' &ZMS KEY.'                                    00265600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00265700
                AGO   .ZG81C                                            00265800
.*                                                                      00265900
.ZG81B          ANOP  ,                                                 00266000
&ZXSERVICE      SETC  'INPUT'     SET IN/OUTPUT                         00266100
&XSERVICE       SETC  'DELETE'    SET XVARIABLE                         00266200
&ZXDELETE       SETC  'INPUT'     SET IN/OUTPUT                         00266300
&XDELETE        SETC  'DELETE'    SET XVARIABLE PARM                    00266400
.ZG81C          ANOP  ,                                                 00266500
.*-------------------------------------------------------------------   00266600
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00266700
&ZASYSLNDX      SETA  0                                                 00266800
.ZG88A          ANOP  ,           POSITIONAL KEY SEARCH                 00266900
&ZASYSLNDX      SETA  &ZASYSLNDX+1              NEXT POSITIONAL         00267000
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG88C  DONE                   00267100
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG88A            00267200
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'RELEASE').ZG88A              00267300
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00267400
                AIF   (K'&XSERVICE LE 0).ZG88B  VALID                   00267500
&ZMS            SETC  '"RELEASE'  *KMEKA* MNOTE                         00267600
&ZMS            SETC  '&ZMS."'                                          00267700
&ZMS            SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'             00267800
&ZMS            SETC  '&ZMS "&XSERVICE"'                                00267900
                MNOTE 8,' &ZMS KEY.'                                    00268000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00268100
                AGO   .ZG88C                                            00268200
.*                                                                      00268300
.ZG88B          ANOP  ,                                                 00268400
&ZXSERVICE      SETC  'INPUT'     SET IN/OUTPUT                         00268500
&XSERVICE       SETC  'RELEASE'   SET XVARIABLE                         00268600
&ZXRELEASE      SETC  'INPUT'     SET IN/OUTPUT                         00268700
&XRELEASE       SETC  'RELEASE'   SET XVARIABLE PARM                    00268800
.ZG88C          ANOP  ,                                                 00268900
.*-------------------------------------------------------------------   00269000
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00269100
&ZASYSLNDX      SETA  0                                                 00269200
.ZG114A         ANOP  ,           POSITIONAL KEY SEARCH                 00269300
&ZASYSLNDX      SETA  &ZASYSLNDX+1              NEXT POSITIONAL         00269400
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG114C  DONE                  00269500
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG114A           00269600
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'DEFINE').ZG114A              00269700
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00269800
                AIF   (K'&XSERVICE LE 0).ZG114B  VALID                  00269900
&ZMS            SETC  '"DEFINE'   *KMEKA* MNOTE                         00270000
&ZMS            SETC  '&ZMS."'                                          00270100
&ZMS            SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'             00270200
&ZMS            SETC  '&ZMS "&XSERVICE"'                                00270300
                MNOTE 8,' &ZMS KEY.'                                    00270400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00270500
                AGO   .ZG114C                                           00270600
.*                                                                      00270700
.ZG114B         ANOP  ,                                                 00270800
&ZXSERVICE      SETC  'INPUT'     SET IN/OUTPUT                         00270900
&XSERVICE       SETC  'DEFINE'    SET XVARIABLE                         00271000
&ZXDEFINE       SETC  'INPUT'     SET IN/OUTPUT                         00271100
&XDEFINE        SETC  'DEFINE'    SET XVARIABLE PARM                    00271200
.ZG114C         ANOP  ,                                                 00271300
.*-------------------------------------------------------------------   00271400
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00271500
&ZASYSLNDX      SETA  0                                                 00271600
.ZG156A         ANOP  ,           POSITIONAL KEY SEARCH                 00271700
&ZASYSLNDX      SETA  &ZASYSLNDX+1              NEXT POSITIONAL         00271800
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG156C  DONE                  00271900
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG156A           00272000
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'EXTEND').ZG156A              00272100
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00272200
                AIF   (K'&XSERVICE LE 0).ZG156B  VALID                  00272300
&ZMS            SETC  '"EXTEND'   *KMEKA* MNOTE                         00272400
&ZMS            SETC  '&ZMS."'                                          00272500
&ZMS            SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'             00272600
&ZMS            SETC  '&ZMS "&XSERVICE"'                                00272700
                MNOTE 8,' &ZMS KEY.'                                    00272800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00272900
                AGO   .ZG156C                                           00273000
.*                                                                      00273100
.ZG156B         ANOP  ,                                                 00273200
&ZXSERVICE      SETC  'INPUT'     SET IN/OUTPUT                         00273300
&XSERVICE       SETC  'EXTEND'    SET XVARIABLE                         00273400
&ZXEXTEND       SETC  'INPUT'     SET IN/OUTPUT                         00273500
&XEXTEND        SETC  'EXTEND'    SET XVARIABLE PARM                    00273600
.ZG156C         ANOP  ,                                                 00273700
.*-------------------------------------------------------------------   00273800
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00273900
&ZASYSLNDX      SETA  0                                                 00274000
.ZG171A         ANOP  ,           POSITIONAL KEY SEARCH                 00274100
&ZASYSLNDX      SETA  &ZASYSLNDX+1              NEXT POSITIONAL         00274200
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG171C  DONE                  00274300
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG171A           00274400
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'OUT').ZG171A                 00274500
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00274600
                AIF   (K'&XSERVICE LE 0).ZG171B  VALID                  00274700
&ZMS            SETC  '"OUT'      *KMEKA* MNOTE                         00274800
&ZMS            SETC  '&ZMS."'                                          00274900
&ZMS            SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'             00275000
&ZMS            SETC  '&ZMS "&XSERVICE"'                                00275100
                MNOTE 8,' &ZMS KEY.'                                    00275200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00275300
                AGO   .ZG171C                                           00275400
.*                                                                      00275500
.ZG171B         ANOP  ,                                                 00275600
&ZXSERVICE      SETC  'INPUT'     SET IN/OUTPUT                         00275700
&XSERVICE       SETC  'OUT'       SET XVARIABLE                         00275800
&ZXOUT          SETC  'INPUT'     SET IN/OUTPUT                         00275900
&XOUT           SETC  'OUT'       SET XVARIABLE PARM                    00276000
.ZG171C         ANOP  ,                                                 00276100
.*-------------------------------------------------------------------   00276200
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00276300
&ZASYSLNDX      SETA  0                                                 00276400
.ZG181A         ANOP  ,           POSITIONAL KEY SEARCH                 00276500
&ZASYSLNDX      SETA  &ZASYSLNDX+1              NEXT POSITIONAL         00276600
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG181C  DONE                  00276700
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG181A           00276800
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'LOAD').ZG181A                00276900
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00277000
                AIF   (K'&XSERVICE LE 0).ZG181B  VALID                  00277100
&ZMS            SETC  '"LOAD'     *KMEKA* MNOTE                         00277200
&ZMS            SETC  '&ZMS."'                                          00277300
&ZMS            SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'             00277400
&ZMS            SETC  '&ZMS "&XSERVICE"'                                00277500
                MNOTE 8,' &ZMS KEY.'                                    00277600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00277700
                AGO   .ZG181C                                           00277800
.*                                                                      00277900
.ZG181B         ANOP  ,                                                 00278000
&ZXSERVICE      SETC  'INPUT'     SET IN/OUTPUT                         00278100
&XSERVICE       SETC  'LOAD'      SET XVARIABLE                         00278200
&ZXLOAD         SETC  'INPUT'     SET IN/OUTPUT                         00278300
&XLOAD          SETC  'LOAD'      SET XVARIABLE PARM                    00278400
.ZG181C         ANOP  ,                                                 00278500
.*------------------------------------------------------------------    00278600
.***AG.KME4Y09 VALUE, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED          00278700
                AIF   (K'&XSERVICE GT 0).ZG191B                         00278800
&ZXSERVICE      SETC  ''          RESET IN/OUTPUT                       00278900
&ZXCREATE       SETC  ''          RESET IN/OUTPUT                       00279000
&XSERVICE       SETC  ''          ENSURE NULL                           00279100
&XCREATE        SETC  ''          ENSURE NULL                           00279200
&ZMS            SETC  'ONE OF THE FOLLOWING'    *KMERA* MNOTE           00279300
&ZMS            SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'               00279400
&ZMS            SETC  '&ZMS REQUIRED:'                                  00279500
&ZMS            SETC  '&ZMS "CREATE",'          VALID ME KEY            00279600
&ZMS            SETC  '&ZMS "DELETE",'          VALID ME KEY            00279700
&ZMS            SETC  '&ZMS "RELEASE",'         VALID ME KEY            00279800
&ZMS            SETC  '&ZMS "DEFINE",'          VALID ME KEY            00279900
&ZMS            SETC  '&ZMS "EXTEND",'          VALID ME KEY            00280000
&ZMS            SETC  '&ZMS "OUT",'             VALID ME KEY            00280100
&ZMS            SETC  '&ZMS OR "LOAD".'         VALID ME KEY            00280200
                MNOTE 8,' &ZMS '                                        00280300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00280400
.ZG191B         ANOP  ,                                                 00280500
.*-------------------------------------------------------------------   00280600
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00280700
.ZG2            AIF   ('&XSERVICE' NE 'CREATE').ZG81                    00280800
.*-------------------------------------------------------------------   00280900
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00281000
&ZCVAL          SETC ''           ERROR KEY FIELD                       00281100
.ZG2I0          AIF   (K'&INLIST LE 0).ZG2I1                            00281200
&ZCVAL          SETC '&ZCVAL INLIST'            DISALLOWED KEY          00281300
.ZG2I1          AIF   (K'&START LE 0).ZG2I2                             00281400
&ZCVAL          SETC '&ZCVAL START'             DISALLOWED KEY          00281500
.ZG2I2          AIF   (K'&NUMRANGE LE 0).ZG2I3                          00281600
&ZCVAL          SETC '&ZCVAL NUMRANGE'          DISALLOWED KEY          00281700
.ZG2I3          AIF   (K'&RANGLIST LE 0).ZG2I4                          00281800
&ZCVAL          SETC '&ZCVAL RANGLIST'          DISALLOWED KEY          00281900
.ZG2I4          AIF   (K'&DISABLED LE 0).ZG2I5                          00282000
&ZCVAL          SETC '&ZCVAL DISABLED'          DISALLOWED KEY          00282100
.ZG2I5          AIF   (K'&XIOON LE 0).ZG2I6                             00282200
&ZCVAL          SETC '&ZCVAL XIOON'             DISALLOWED KEY          00282300
.ZG2I6          AIF   (K'&LONG LE 0).ZG2I7                              00282400
&ZCVAL          SETC '&ZCVAL LONG'              DISALLOWED KEY          00282500
.ZG2I7          AIF   (K'&XIOOFF LE 0).ZG2I8                            00282600
&ZCVAL          SETC '&ZCVAL XIOOFF'            DISALLOWED KEY          00282700
.ZG2I8          AIF   (K'&XDREFON LE 0).ZG2I9                           00282800
&ZCVAL          SETC '&ZCVAL XDREFON'           DISALLOWED KEY          00282900
.ZG2I9          AIF   (K'&XDREFOFF LE 0).ZG2I10                         00283000
&ZCVAL          SETC '&ZCVAL XDREFOFF'          DISALLOWED KEY          00283100
.ZG2I10         AIF   (K'&FORCE LE 0).ZG2I11                            00283200
&ZCVAL          SETC '&ZCVAL FORCE'             DISALLOWED KEY          00283300
.ZG2I11         AIF   (K'&VAR LE 0).ZG2I12                              00283400
&ZCVAL          SETC '&ZCVAL VAR'               DISALLOWED KEY          00283500
.ZG2I12         AIF   (K'&ZCVAL LE 0).ZG2J      KEY                     00283600
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00283700
&ZMS            SETC  '"CREATE'   *KMEIA* MNOTE                         00283800
&ZMS            SETC  '&ZMS."'                                          00283900
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00284000
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00284100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00284200
.ZG2J           ANOP  ,                                                 00284300
.*----------------------------------------------------------------***   00284400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00284500
                AIF   (N'&NAME LE 1).ZG4A       CK NUM                  00284600
&ZMS            SETC  '"NAME='    *KPOSA* MNOTE                         00284700
&ZMS            SETC  '&ZMS.&NAME"'                                     00284800
&ZMS            SETC  '&ZMS "NAME"'                                     00284900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00285000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00285100
.ZG4A           ANOP  ,                                                 00285200
.*-------------------------------------------------------------------   00285300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00285400
&ZXNAME         SETC  'INPUT'     SET IN/OUTPUT                         00285500
&XNAME          SETC  '&NAME(1)'  SET XVARIABLE                         00285600
                AIF   (N'&NAME GT 1).ZG4B       MULTI PARMS             00285700
&XNAME          SETC  '&NAME'     SET XVARIABLE                         00285800
.ZG4B           AIF   (K'&NAME(1) GT 0).ZG4C                            00285900
&ZXNAME         SETC  ''          RESET IN/OUTPUT                       00286000
&ZMS            SETC  ' '         *KRQDA*                               00286100
&ZMS            SETC  '&ZMS "NAME" KEY AND ITS'                         00286200
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00286300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00286400
.ZG4C           ANOP  ,                                                 00286500
.*-------------------------------------------------------------------   00286600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00286700
                AIF   (K'&ZXNAME LE 0).ZG4R     NOT I/O                 00286800
                AIF   ('&XNAME'(1,1) NE '(').ZG4R                       00286900
&ZCGPR          SETC  '&XNAME'(2,K'&XNAME-2)                            00287000
                AIF   ('&ZCGPR'(1,1) NE '0').ZG4P                       00287100
                AIF   (K'&ZCGPR GT 2).ZG4Q                              00287200
                AIF   ('&ZCGPR' EQ '0').ZG4Q                            00287300
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00287400
                AIF   (T'&ZCGPR NE 'N').ZG4Q    INVALID REG NAME        00287500
.ZG4P           ANOP  ,                                                 00287600
                AIF   (T'&ZCGPR NE 'N').ZG4R    NON NUMERIC             00287700
                AIF   ('&ZCGPR' LT '2').ZG4Q                            00287800
                AIF   ('&ZCGPR' LE '12').ZG4R                           00287900
.ZG4Q           ANOP  ,                                                 00288000
&ZMS            SETC  '"NAME='    *KGPRA* MNOTE                         00288100
&ZMS            SETC  '&ZMS.&NAME"'                                     00288200
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00288300
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00288400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00288500
.ZG4R           ANOP  ,                                                 00288600
.*------------------------------------------------------------------    00288700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00288800
&XGENNAME       SETC  ''          INITIALIZE XVARIABLE                  00288900
.*-------------------------------------------------------------------   00289000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00289100
.ZG8            ANOP  ,                                                 00289200
                AIF   (K'&GENNAME(1) LE 0).ZG8A                         00289300
&ZTLC           SETC 'NO'                                               00289400
                AIF   ('&GENNAME(1)' NE '&ZTLC').ZG9                    00289500
&XGENNAME       SETC  'NO'        SET KEYWORD                           00289600
                AIF   (N'&GENNAME LE 1).ZG8A    CK NUM                  00289700
&ZMS            SETC  '"GENNAME='               *KPOSA* MNOTE           00289800
&ZMS            SETC  '&ZMS.&GENNAME"'                                  00289900
&ZMS            SETC  '&ZMS "GENNAME"'                                  00290000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00290100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00290200
.ZG8A           ANOP  ,                                                 00290300
.*------------------------------------------------------------------    00290400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00290500
&ZCVAL          SETC ''           CLEAR ERROR KEY ACCUMULATOR           00290600
.ZG8A0          AIF   (K'&OUTNAME LE 0).ZG8A1   OK                      00290700
&ZCVAL          SETC '&ZCVAL OUTNAME'           INCORRECT KEY USED      00290800
.ZG8A1          AIF   (K'&ZCVAL LE 0).ZG8A2     OK                      00290900
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00291000
&ZMS            SETC  '"GENNAME'  *KMEIA* MNOTE                         00291100
&ZMS            SETC  '&ZMS.=&GENNAME"'                                 00291200
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00291300
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00291400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00291500
.ZG8A2          ANOP  ,                                                 00291600
.*-------------------------------------------------------------------   00291700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00291800
.ZG9            ANOP  ,                                                 00291900
&ZTLC           SETC 'COND'                                             00292000
                AIF   ('&GENNAME(1)' NE '&ZTLC').ZG13                   00292100
&XGENNAME       SETC  'COND'      SET KEYWORD                           00292200
                AIF   (N'&GENNAME LE 1).ZG9A    CK NUM                  00292300
&ZMS            SETC  '"GENNAME='               *KPOSA* MNOTE           00292400
&ZMS            SETC  '&ZMS.&GENNAME"'                                  00292500
&ZMS            SETC  '&ZMS "GENNAME"'                                  00292600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00292700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00292800
.ZG9A           ANOP  ,                                                 00292900
.*----------------------------------------------------------------***   00293000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00293100
                AIF   (N'&OUTNAME LE 1).ZG11A   CK NUM                  00293200
&ZMS            SETC  '"OUTNAME='               *KPOSA* MNOTE           00293300
&ZMS            SETC  '&ZMS.&OUTNAME"'                                  00293400
&ZMS            SETC  '&ZMS "OUTNAME"'                                  00293500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00293600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00293700
.ZG11A          ANOP  ,                                                 00293800
.*-------------------------------------------------------------------   00293900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00294000
                AIF   (K'&OUTNAME(1) LE 0).ZG11C  NO PARM               00294100
&ZXOUTNAME      SETC  'OUTPUT'    SET OUTPUT                            00294200
&XOUTNAME       SETC  '&OUTNAME(1)'             SET XVARIABLE           00294300
                AIF   (N'&OUTNAME GT 1).ZG11C                           00294400
&XOUTNAME       SETC  '&OUTNAME'  SET XVARIABLE                         00294500
.ZG11C          ANOP  ,                                                 00294600
.*-------------------------------------------------------------------   00294700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00294800
                AIF   (K'&ZXOUTNAME LE 0).ZG11R  NOT I/O                00294900
                AIF   ('&XOUTNAME'(1,1) NE '(').ZG11R                   00295000
&ZCGPR          SETC  '&XOUTNAME'(2,K'&XOUTNAME-2)                      00295100
                AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                      00295200
                AIF   (K'&ZCGPR GT 2).ZG11Q                             00295300
                AIF   ('&ZCGPR' EQ '0').ZG11Q                           00295400
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00295500
                AIF   (T'&ZCGPR NE 'N').ZG11Q   INVALID REG NAME        00295600
.ZG11P          ANOP  ,                                                 00295700
                AIF   (T'&ZCGPR NE 'N').ZG11R   NON NUMERIC             00295800
                AIF   ('&ZCGPR' LT '2').ZG11Q                           00295900
                AIF   ('&ZCGPR' LE '12').ZG11R                          00296000
.ZG11Q          ANOP  ,                                                 00296100
&ZMS            SETC  '"OUTNAME='               *KGPRA* MNOTE           00296200
&ZMS            SETC  '&ZMS.&OUTNAME"'                                  00296300
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00296400
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00296500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00296600
.ZG11R          ANOP  ,                                                 00296700
.*-------------------------------------------------------------------   00296800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00296900
.ZG13           ANOP  ,                                                 00297000
&ZTLC           SETC 'YES'                                              00297100
                AIF   ('&GENNAME(1)' NE '&ZTLC').ZG17                   00297200
&XGENNAME       SETC  'YES'       SET KEYWORD                           00297300
                AIF   (N'&GENNAME LE 1).ZG13A   CK NUM                  00297400
&ZMS            SETC  '"GENNAME='               *KPOSA* MNOTE           00297500
&ZMS            SETC  '&ZMS.&GENNAME"'                                  00297600
&ZMS            SETC  '&ZMS "GENNAME"'                                  00297700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00297800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00297900
.ZG13A          ANOP  ,                                                 00298000
.*----------------------------------------------------------------***   00298100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00298200
                AIF   (N'&OUTNAME LE 1).ZG15A   CK NUM                  00298300
&ZMS            SETC  '"OUTNAME='               *KPOSA* MNOTE           00298400
&ZMS            SETC  '&ZMS.&OUTNAME"'                                  00298500
&ZMS            SETC  '&ZMS "OUTNAME"'                                  00298600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00298700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00298800
.ZG15A          ANOP  ,                                                 00298900
.*-------------------------------------------------------------------   00299000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00299100
                AIF   (K'&OUTNAME(1) LE 0).ZG15C  NO PARM               00299200
&ZXOUTNAME      SETC  'OUTPUT'    SET OUTPUT                            00299300
&XOUTNAME       SETC  '&OUTNAME(1)'             SET XVARIABLE           00299400
                AIF   (N'&OUTNAME GT 1).ZG15C                           00299500
&XOUTNAME       SETC  '&OUTNAME'  SET XVARIABLE                         00299600
.ZG15C          ANOP  ,                                                 00299700
.*-------------------------------------------------------------------   00299800
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00299900
                AIF   (K'&ZXOUTNAME LE 0).ZG15R  NOT I/O                00300000
                AIF   ('&XOUTNAME'(1,1) NE '(').ZG15R                   00300100
&ZCGPR          SETC  '&XOUTNAME'(2,K'&XOUTNAME-2)                      00300200
                AIF   ('&ZCGPR'(1,1) NE '0').ZG15P                      00300300
                AIF   (K'&ZCGPR GT 2).ZG15Q                             00300400
                AIF   ('&ZCGPR' EQ '0').ZG15Q                           00300500
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00300600
                AIF   (T'&ZCGPR NE 'N').ZG15Q   INVALID REG NAME        00300700
.ZG15P          ANOP  ,                                                 00300800
                AIF   (T'&ZCGPR NE 'N').ZG15R   NON NUMERIC             00300900
                AIF   ('&ZCGPR' LT '2').ZG15Q                           00301000
                AIF   ('&ZCGPR' LE '12').ZG15R                          00301100
.ZG15Q          ANOP  ,                                                 00301200
&ZMS            SETC  '"OUTNAME='               *KGPRA* MNOTE           00301300
&ZMS            SETC  '&ZMS.&OUTNAME"'                                  00301400
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00301500
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00301600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00301700
.ZG15R          ANOP  ,                                                 00301800
.*------------------------------------------------------------------    00301900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00302000
.ZG17           ANOP  ,                                                 00302100
&ZXGENNAME      SETC  'INPUT'     SET IN/OUTPUT                         00302200
                AIF   (K'&XGENNAME GT 0).ZG17E  VALID ARG               00302300
                AIF   (T'&GENNAME EQ 'O').ZG17D  OMITTED                00302400
&ZASYSLNDX      SETA  0                                                 00302500
.ZG17A          ANOP  ,           POSITIONAL MACRO KEY                  00302600
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00302700
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG17C                  00302800
&ZTLC           SETC 'GENNAME'                                          00302900
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG17A         00303000
.ZG17B          ANOP  ,                                                 00303100
&ZXGENNAME      SETC  ''          RESET IN/OUTPUT                       00303200
&ZMS            SETC  'THE "GENNAME" KEY'       *KOPTA* MNOTE           00303300
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00303400
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00303500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00303600
                AGO   .ZG17E                                            00303700
.ZG17C          ANOP  ,                                                 00303800
&ZXGENNAME      SETC  ''          RESET IN/OUTPUT                       00303900
&ZMS            SETC  '"GENNAME='               *KUKWA* MNOTE           00304000
&ZMS            SETC  '&ZMS.&GENNAME"'                                  00304100
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00304200
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00304300
&ZMS            SETC  '&ZMS "NO",'                                      00304400
&ZMS            SETC  '&ZMS "COND",'                                    00304500
&ZMS            SETC  '&ZMS OR "YES".'                                  00304600
                MNOTE 8,' &ZMS '                                        00304700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00304800
                AGO   .ZG17E                                            00304900
.ZG17D          ANOP  ,                                                 00305000
&XGENNAME       SETC  'NO'        SET DEFAULT KEYWORD                   00305100
.ZG17E          ANOP  ,                                                 00305200
.*----------------------------------------------------------------***   00305300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00305400
                AIF   (N'&BLOCKS LE 2).ZG19A    CK NUM                  00305500
&ZMS            SETC  '"BLOCKS='  *KPOSA* MNOTE                         00305600
&ZMS            SETC  '&ZMS.&BLOCKS"'                                   00305700
&ZMS            SETC  '&ZMS "BLOCKS"'                                   00305800
                MNOTE 8,' &ZMS CAN HAVE ONLY 2 ARGUMENTS.'              00305900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00306000
.ZG19A          ANOP  ,                                                 00306100
.*-------------------------------------------------------------------   00306200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00306300
&ZXBLOCKS       SETC  'INPUT'     SET IN/OUTPUT                         00306400
&XBLOCKS        SETC  '0'                                               00306500
                AIF   (K'&BLOCKS(1) LE 0).ZG19B  PARM                   00306600
&XBLOCKS        SETC  '&BLOCKS(1,1)'            SET XVARIABLE           00306700
                AIF   (N'&BLOCKS(1) GT 1).ZG19B  MULTI PARMS            00306800
&XBLOCKS        SETC  '&BLOCKS(1)'              SET XVARIABLE           00306900
.ZG19B          ANOP  ,                                                 00307000
.*-------------------------------------------------------------------   00307100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00307200
                AIF   (K'&ZXBLOCKS LE 0).ZG19R  NOT I/O                 00307300
         AIF   ('&XBLOCKS' EQ '0').ZG19R                                00307400
                AIF   ('&XBLOCKS'(1,1) NE '(').ZG19R                    00307500
&ZCGPR          SETC  '&XBLOCKS'(2,K'&XBLOCKS-2)                        00307600
                AIF   ('&ZCGPR'(1,1) NE '0').ZG19P                      00307700
                AIF   (K'&ZCGPR GT 2).ZG19Q                             00307800
                AIF   ('&ZCGPR' EQ '0').ZG19Q                           00307900
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00308000
                AIF   (T'&ZCGPR NE 'N').ZG19Q   INVALID REG NAME        00308100
.ZG19P          ANOP  ,                                                 00308200
                AIF   (T'&ZCGPR NE 'N').ZG19R   NON NUMERIC             00308300
                AIF   ('&ZCGPR' LT '2').ZG19Q                           00308400
                AIF   ('&ZCGPR' LE '12').ZG19R                          00308500
.ZG19Q          ANOP  ,                                                 00308600
&ZMS            SETC  '"BLOCKS='  *KGPRA* MNOTE                         00308700
&ZMS            SETC  '&ZMS.&BLOCKS"'                                   00308800
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00308900
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00309000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00309100
.ZG19R          ANOP  ,                                                 00309200
.*-------------------------------------------------------------------   00309300
.***AG.KXVAR17 NAME, OPT INPUT, POS(2) -XVARIABLE                       00309400
&XINITIAL       SETC  '524288'    SET DEFAULT                           00309500
                AIF   (K'&BLOCKS(2) LE 0).ZG21C  PARM                   00309600
&XINITIAL       SETC  '&BLOCKS(2,1)'            SET XVARIABLE           00309700
                AIF   (N'&BLOCKS(2) GT 1).ZG21B  MULTI PARMS            00309800
&XINITIAL       SETC  '&BLOCKS(2)'              SET XVARIABLE           00309900
.ZG21B          AIF   (K'&BLOCKS(1) GT 0).ZG21C  KEY                    00310000
&ZMS            SETC  '"BLOCKS'   *KDEPA* MNOTE                         00310100
&ZMS            SETC  '&ZMS.=&BLOCKS"'                                  00310200
&ZMS            SETC  '&ZMS ARGUMENT 2 CAN ONLY BE SPECIFIED IF'        00310300
&ZMS            SETC  '&ZMS '                                           00310400
&ZMS            SETC  '&ZMS "BLOCKS"'                                   00310500
                MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                      00310600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00310700
.ZG21C          ANOP  ,                                                 00310800
&ZXINITIAL      SETC  'INPUT'     SET IN/OUTPUT                         00310900
.*-------------------------------------------------------------------   00311000
.***AG.KCK02 NAME, OPT INPUT, POS(2) -GPR OUT OF RANGE                  00311100
                AIF   (K'&ZXINITIAL LE 0).ZG21R  NOT I/O                00311200
                AIF   ('&XINITIAL'(1,1) NE '(').ZG21R                   00311300
&ZCGPR          SETC  '&XINITIAL'(2,K'&XINITIAL-2)                      00311400
                AIF   ('&ZCGPR'(1,1) NE '0').ZG21P                      00311500
                AIF   (K'&ZCGPR GT 2).ZG21Q                             00311600
                AIF   ('&ZCGPR' EQ '0').ZG21Q                           00311700
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00311800
                AIF   (T'&ZCGPR NE 'N').ZG21Q   INVALID REG NAME        00311900
.ZG21P          ANOP  ,                                                 00312000
                AIF   (T'&ZCGPR NE 'N').ZG21R   NON NUMERIC             00312100
                AIF   ('&ZCGPR' LT '2').ZG21Q                           00312200
                AIF   ('&ZCGPR' LE '12').ZG21R                          00312300
.ZG21Q          ANOP  ,                                                 00312400
&ZMS            SETC  '"BLOCKS='  *KGPRA* MNOTE                         00312500
&ZMS            SETC  '&ZMS.&BLOCKS"'                                   00312600
&ZMS            SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'         00312700
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00312800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00312900
.ZG21R          ANOP  ,                                                 00313000
.*------------------------------------------------------------------    00313100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00313200
&XTYPE          SETC  ''          INITIALIZE XVARIABLE                  00313300
.*-------------------------------------------------------------------   00313400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00313500
.ZG26           ANOP  ,                                                 00313600
                AIF   (K'&TYPE(1) LE 0).ZG26A                           00313700
&ZTLC           SETC 'BASIC'                                            00313800
                AIF   ('&TYPE(1)' NE '&ZTLC').ZG43                      00313900
&XTYPE          SETC  'BASIC'     SET KEYWORD                           00314000
                AIF   (N'&TYPE LE 1).ZG26A      CK NUM                  00314100
&ZMS            SETC  '"TYPE='    *KPOSA* MNOTE                         00314200
&ZMS            SETC  '&ZMS.&TYPE"'                                     00314300
&ZMS            SETC  '&ZMS "TYPE"'                                     00314400
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00314500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00314600
.ZG26A          ANOP  ,                                                 00314700
.*------------------------------------------------------------------    00314800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00314900
&ZCVAL          SETC ''           CLEAR ERROR KEY ACCUMULATOR           00315000
.ZG26A0         AIF   (K'&HSTYPE LE 0).ZG26A1   OK                      00315100
&ZCVAL          SETC '&ZCVAL HSTYPE'            INCORRECT KEY USED      00315200
.ZG26A1         AIF   (K'&SHARE LE 0).ZG26A2    OK                      00315300
&ZCVAL          SETC '&ZCVAL SHARE'             INCORRECT KEY USED      00315400
.ZG26A2         AIF   (K'&CASTOUT LE 0).ZG26A3  OK                      00315500
&ZCVAL          SETC '&ZCVAL CASTOUT'           INCORRECT KEY USED      00315600
.ZG26A3         AIF   (K'&ZCVAL LE 0).ZG26A4    OK                      00315700
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00315800
&ZMS            SETC  '"TYPE'     *KMEIA* MNOTE                         00315900
&ZMS            SETC  '&ZMS.=&TYPE"'                                    00316000
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00316100
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00316200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00316300
.ZG26A4         ANOP  ,                                                 00316400
.*----------------------------------------------------------------***   00316500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00316600
                AIF   (N'&DREF LE 1).ZG28A      CK NUM                  00316700
&ZMS            SETC  '"DREF='    *KPOSA* MNOTE                         00316800
&ZMS            SETC  '&ZMS.&DREF"'                                     00316900
&ZMS            SETC  '&ZMS "DREF"'                                     00317000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00317100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00317200
.ZG28A          ANOP  ,                                                 00317300
.*-------------------------------------------------------------------   00317400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00317500
&XDREF          SETC  ''          INITIALIZE XVARIABLE                  00317600
.ZG29A   AIF   ('&DREF(1)' NE 'NO').ZG30A                               00317700
&XDREF          SETC  'NO'        SET KEYWORD                           00317800
.*-------------------------------------------------------------------   00317900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00318000
.ZG30A   AIF   ('&DREF(1)' NE 'YES').ZG31A                              00318100
&XDREF          SETC  'YES'       SET KEYWORD                           00318200
.*-------------------------------------------------------------------   00318300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00318400
.ZG31A          AIF   (K'&XDREF GT 0).ZG31C     KEYWORD                 00318500
                AIF   (K'&DREF(1) LE 0).ZG31B                           00318600
&ZMS            SETC  '"DREF='    *KUKWA* MNOTE                         00318700
&ZMS            SETC  '&ZMS.&DREF"'                                     00318800
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00318900
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00319000
&ZMS            SETC  '&ZMS "NO"'                                       00319100
&ZMS            SETC  '&ZMS OR "YES".'                                  00319200
                MNOTE 8,' &ZMS '                                        00319300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00319400
.ZG31B          ANOP  ,                                                 00319500
&XDREF          SETC  'NO'        SET DEFAULT KEYWORD                   00319600
.ZG31C          ANOP  ,                                                 00319700
&ZXDREF         SETC  'INPUT'     SET IN/OUTPUT                         00319800
.*----------------------------------------------------------------***   00319900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00320000
                AIF   (N'&SCOPE LE 1).ZG33A     CK NUM                  00320100
&ZMS            SETC  '"SCOPE='   *KPOSA* MNOTE                         00320200
&ZMS            SETC  '&ZMS.&SCOPE"'                                    00320300
&ZMS            SETC  '&ZMS "SCOPE"'                                    00320400
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00320500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00320600
.ZG33A          ANOP  ,                                                 00320700
.*-------------------------------------------------------------------   00320800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00320900
&XSCOPE         SETC  ''          INITIALIZE XVARIABLE                  00321000
.ZG34A   AIF   ('&SCOPE(1)' NE 'SINGLE').ZG35A                          00321100
&XSCOPE         SETC  'SINGLE'    SET KEYWORD                           00321200
.*-------------------------------------------------------------------   00321300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00321400
.ZG35A   AIF   ('&SCOPE(1)' NE 'ALL').ZG36A                             00321500
&XSCOPE         SETC  'ALL'       SET KEYWORD                           00321600
.*-------------------------------------------------------------------   00321700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00321800
.ZG36A   AIF   ('&SCOPE(1)' NE 'COMMON').ZG37A                          00321900
&XSCOPE         SETC  'COMMON'    SET KEYWORD                           00322000
.*-------------------------------------------------------------------   00322100
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00322200
.ZG37A          AIF   (K'&XSCOPE GT 0).ZG37C    KEYWORD                 00322300
                AIF   (K'&SCOPE(1) LE 0).ZG37B                          00322400
&ZMS            SETC  '"SCOPE='   *KUKWA* MNOTE                         00322500
&ZMS            SETC  '&ZMS.&SCOPE"'                                    00322600
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00322700
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00322800
&ZMS            SETC  '&ZMS "SINGLE",'                                  00322900
&ZMS            SETC  '&ZMS "ALL",'                                     00323000
&ZMS            SETC  '&ZMS OR "COMMON".'                               00323100
                MNOTE 8,' &ZMS '                                        00323200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00323300
.ZG37B          ANOP  ,                                                 00323400
&XSCOPE         SETC  'SINGLE'    SET DEFAULT KEYWORD                   00323500
.ZG37C          ANOP  ,                                                 00323600
&ZXSCOPE        SETC  'INPUT'     SET IN/OUTPUT                         00323700
.*----------------------------------------------------------------***   00323800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00323900
                AIF   (N'&BACK LE 1).ZG39A      CK NUM                  00324000
&ZMS            SETC  '"BACK='    *KPOSA* MNOTE                         00324100
&ZMS            SETC  '&ZMS.&BACK"'                                     00324200
&ZMS            SETC  '&ZMS "BACK"'                                     00324300
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00324400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00324500
.ZG39A          ANOP  ,                                                 00324600
.*-------------------------------------------------------------------   00324700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00324800
&XBACK          SETC  ''          INITIALIZE XVARIABLE                  00324900
.ZG40A   AIF   ('&BACK(1)' NE '31').ZG41A                               00325000
&XBACK          SETC  '31'        SET KEYWORD                           00325100
.*-------------------------------------------------------------------   00325200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00325300
.ZG41A   AIF   ('&BACK(1)' NE '64').ZG42A                               00325400
&XBACK          SETC  '64'        SET KEYWORD                           00325500
.*-------------------------------------------------------------------   00325600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00325700
.ZG42A          AIF   (K'&XBACK GT 0).ZG42C     KEYWORD                 00325800
                AIF   (K'&BACK(1) LE 0).ZG42B                           00325900
&ZMS            SETC  '"BACK='    *KUKWA* MNOTE                         00326000
&ZMS            SETC  '&ZMS.&BACK"'                                     00326100
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00326200
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00326300
&ZMS            SETC  '&ZMS "31"'                                       00326400
&ZMS            SETC  '&ZMS OR "64".'                                   00326500
                MNOTE 8,' &ZMS '                                        00326600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00326700
.ZG42B          ANOP  ,                                                 00326800
&XBACK          SETC  '31'        SET DEFAULT KEYWORD                   00326900
.ZG42C          ANOP  ,                                                 00327000
&ZXBACK         SETC  'INPUT'     SET IN/OUTPUT                         00327100
.*-------------------------------------------------------------------   00327200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00327300
.ZG43           ANOP  ,                                                 00327400
&ZTLC           SETC 'HIPERSPACE'                                       00327500
                AIF   ('&TYPE(1)' NE '&ZTLC').ZG59                      00327600
&XTYPE          SETC  'HIPERSPACE'              SET KEYWORD             00327700
                AIF   (N'&TYPE LE 1).ZG43A      CK NUM                  00327800
&ZMS            SETC  '"TYPE='    *KPOSA* MNOTE                         00327900
&ZMS            SETC  '&ZMS.&TYPE"'                                     00328000
&ZMS            SETC  '&ZMS "TYPE"'                                     00328100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00328200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00328300
.ZG43A          ANOP  ,                                                 00328400
.*------------------------------------------------------------------    00328500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00328600
&ZCVAL          SETC ''           CLEAR ERROR KEY ACCUMULATOR           00328700
.ZG43A0         AIF   (K'&DREF LE 0).ZG43A1     OK                      00328800
&ZCVAL          SETC '&ZCVAL DREF'              INCORRECT KEY USED      00328900
.ZG43A1         AIF   (K'&SCOPE LE 0).ZG43A2    OK                      00329000
&ZCVAL          SETC '&ZCVAL SCOPE'             INCORRECT KEY USED      00329100
.ZG43A2         AIF   (K'&BACK LE 0).ZG43A3     OK                      00329200
&ZCVAL          SETC '&ZCVAL BACK'              INCORRECT KEY USED      00329300
.ZG43A3         AIF   (K'&ZCVAL LE 0).ZG43A4    OK                      00329400
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00329500
&ZMS            SETC  '"TYPE'     *KMEIA* MNOTE                         00329600
&ZMS            SETC  '&ZMS.=&TYPE"'                                    00329700
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00329800
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00329900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00330000
.ZG43A4         ANOP  ,                                                 00330100
.*------------------------------------------------------------------    00330200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00330300
&XHSTYPE        SETC  ''          INITIALIZE XVARIABLE                  00330400
.*-------------------------------------------------------------------   00330500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00330600
.ZG46           ANOP  ,                                                 00330700
                AIF   (K'&HSTYPE(1) LE 0).ZG46A                         00330800
&ZTLC           SETC 'SCROLL'                                           00330900
                AIF   ('&HSTYPE(1)' NE '&ZTLC').ZG52                    00331000
&XHSTYPE        SETC  'SCROLL'    SET KEYWORD                           00331100
                AIF   (N'&HSTYPE LE 1).ZG46A    CK NUM                  00331200
&ZMS            SETC  '"HSTYPE='  *KPOSA* MNOTE                         00331300
&ZMS            SETC  '&ZMS.&HSTYPE"'                                   00331400
&ZMS            SETC  '&ZMS "HSTYPE"'                                   00331500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00331600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00331700
.ZG46A          ANOP  ,                                                 00331800
.*------------------------------------------------------------------    00331900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00332000
&ZCVAL          SETC ''           CLEAR ERROR KEY ACCUMULATOR           00332100
.ZG46A0         AIF   (K'&CASTOUT LE 0).ZG46A1  OK                      00332200
&ZCVAL          SETC '&ZCVAL CASTOUT'           INCORRECT KEY USED      00332300
.ZG46A1         AIF   (K'&ZCVAL LE 0).ZG46A2    OK                      00332400
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00332500
&ZMS            SETC  '"HSTYPE'   *KMEIA* MNOTE                         00332600
&ZMS            SETC  '&ZMS.=&HSTYPE"'                                  00332700
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00332800
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00332900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00333000
.ZG46A2         ANOP  ,                                                 00333100
.*----------------------------------------------------------------***   00333200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00333300
                AIF   (N'&SHARE LE 1).ZG48A     CK NUM                  00333400
&ZMS            SETC  '"SHARE='   *KPOSA* MNOTE                         00333500
&ZMS            SETC  '&ZMS.&SHARE"'                                    00333600
&ZMS            SETC  '&ZMS "SHARE"'                                    00333700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00333800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00333900
.ZG48A          ANOP  ,                                                 00334000
.*-------------------------------------------------------------------   00334100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00334200
&XSHARE         SETC  ''          INITIALIZE XVARIABLE                  00334300
.ZG49A   AIF   ('&SHARE(1)' NE 'NO').ZG50A                              00334400
&XSHARE         SETC  'NO'        SET KEYWORD                           00334500
.*-------------------------------------------------------------------   00334600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00334700
.ZG50A   AIF   ('&SHARE(1)' NE 'YES').ZG51A                             00334800
&XSHARE         SETC  'YES'       SET KEYWORD                           00334900
.*-------------------------------------------------------------------   00335000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00335100
.ZG51A          AIF   (K'&XSHARE GT 0).ZG51C    KEYWORD                 00335200
                AIF   (K'&SHARE(1) LE 0).ZG51B                          00335300
&ZMS            SETC  '"SHARE='   *KUKWA* MNOTE                         00335400
&ZMS            SETC  '&ZMS.&SHARE"'                                    00335500
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00335600
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00335700
&ZMS            SETC  '&ZMS "NO"'                                       00335800
&ZMS            SETC  '&ZMS OR "YES".'                                  00335900
                MNOTE 8,' &ZMS '                                        00336000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00336100
.ZG51B          ANOP  ,                                                 00336200
&XSHARE         SETC  'NO'        SET DEFAULT KEYWORD                   00336300
.ZG51C          ANOP  ,                                                 00336400
&ZXSHARE        SETC  'INPUT'     SET IN/OUTPUT                         00336500
.*-------------------------------------------------------------------   00336600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00336700
.ZG52           ANOP  ,                                                 00336800
&ZTLC           SETC 'CACHE'                                            00336900
                AIF   ('&HSTYPE(1)' NE '&ZTLC').ZG58                    00337000
&XHSTYPE        SETC  'CACHE'     SET KEYWORD                           00337100
                AIF   (N'&HSTYPE LE 1).ZG52A    CK NUM                  00337200
&ZMS            SETC  '"HSTYPE='  *KPOSA* MNOTE                         00337300
&ZMS            SETC  '&ZMS.&HSTYPE"'                                   00337400
&ZMS            SETC  '&ZMS "HSTYPE"'                                   00337500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00337600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00337700
.ZG52A          ANOP  ,                                                 00337800
.*------------------------------------------------------------------    00337900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00338000
&ZCVAL          SETC ''           CLEAR ERROR KEY ACCUMULATOR           00338100
.ZG52A0         AIF   (K'&SHARE LE 0).ZG52A1    OK                      00338200
&ZCVAL          SETC '&ZCVAL SHARE'             INCORRECT KEY USED      00338300
.ZG52A1         AIF   (K'&ZCVAL LE 0).ZG52A2    OK                      00338400
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00338500
&ZMS            SETC  '"HSTYPE'   *KMEIA* MNOTE                         00338600
&ZMS            SETC  '&ZMS.=&HSTYPE"'                                  00338700
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00338800
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00338900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00339000
.ZG52A2         ANOP  ,                                                 00339100
.*----------------------------------------------------------------***   00339200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00339300
                AIF   (N'&CASTOUT LE 1).ZG54A   CK NUM                  00339400
&ZMS            SETC  '"CASTOUT='               *KPOSA* MNOTE           00339500
&ZMS            SETC  '&ZMS.&CASTOUT"'                                  00339600
&ZMS            SETC  '&ZMS "CASTOUT"'                                  00339700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00339800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00339900
.ZG54A          ANOP  ,                                                 00340000
.*-------------------------------------------------------------------   00340100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00340200
&XCASTOUT       SETC  ''          INITIALIZE XVARIABLE                  00340300
.ZG55A   AIF   ('&CASTOUT(1)' NE 'YES').ZG56A                           00340400
&XCASTOUT       SETC  'YES'       SET KEYWORD                           00340500
.*-------------------------------------------------------------------   00340600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00340700
.ZG56A   AIF   ('&CASTOUT(1)' NE 'NO').ZG57A                            00340800
&XCASTOUT       SETC  'NO'        SET KEYWORD                           00340900
.*-------------------------------------------------------------------   00341000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00341100
.ZG57A          AIF   (K'&XCASTOUT GT 0).ZG57C  KEYWORD                 00341200
                AIF   (K'&CASTOUT(1) LE 0).ZG57B                        00341300
&ZMS            SETC  '"CASTOUT='               *KUKWA* MNOTE           00341400
&ZMS            SETC  '&ZMS.&CASTOUT"'                                  00341500
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00341600
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00341700
&ZMS            SETC  '&ZMS "YES"'                                      00341800
&ZMS            SETC  '&ZMS OR "NO".'                                   00341900
                MNOTE 8,' &ZMS '                                        00342000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00342100
.ZG57B          ANOP  ,                                                 00342200
&XCASTOUT       SETC  'YES'       SET DEFAULT KEYWORD                   00342300
.ZG57C          ANOP  ,                                                 00342400
&ZXCASTOUT      SETC  'INPUT'     SET IN/OUTPUT                         00342500
.*------------------------------------------------------------------    00342600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00342700
.ZG58           ANOP  ,                                                 00342800
&ZXHSTYPE       SETC  'INPUT'     SET IN/OUTPUT                         00342900
                AIF   (K'&XHSTYPE GT 0).ZG58E   VALID ARG               00343000
                AIF   (T'&HSTYPE EQ 'O').ZG58D  OMITTED                 00343100
&ZASYSLNDX      SETA  0                                                 00343200
.ZG58A          ANOP  ,           POSITIONAL MACRO KEY                  00343300
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00343400
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG58C                  00343500
&ZTLC           SETC 'HSTYPE'                                           00343600
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG58A         00343700
.ZG58B          ANOP  ,                                                 00343800
&ZXHSTYPE       SETC  ''          RESET IN/OUTPUT                       00343900
&ZMS            SETC  'THE "HSTYPE" KEY'        *KOPTA* MNOTE           00344000
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00344100
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00344200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00344300
                AGO   .ZG58E                                            00344400
.ZG58C          ANOP  ,                                                 00344500
&ZXHSTYPE       SETC  ''          RESET IN/OUTPUT                       00344600
&ZMS            SETC  '"HSTYPE='  *KUKWA* MNOTE                         00344700
&ZMS            SETC  '&ZMS.&HSTYPE"'                                   00344800
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00344900
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00345000
&ZMS            SETC  '&ZMS "SCROLL"'                                   00345100
&ZMS            SETC  '&ZMS OR "CACHE".'                                00345200
                MNOTE 8,' &ZMS '                                        00345300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00345400
                AGO   .ZG58E                                            00345500
.ZG58D          ANOP  ,                                                 00345600
&XHSTYPE        SETC  'SCROLL'    SET DEFAULT KEYWORD                   00345700
.ZG58E          ANOP  ,                                                 00345800
.*------------------------------------------------------------------    00345900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00346000
.ZG59           ANOP  ,                                                 00346100
&ZXTYPE         SETC  'INPUT'     SET IN/OUTPUT                         00346200
                AIF   (K'&XTYPE GT 0).ZG59E     VALID ARG               00346300
                AIF   (T'&TYPE EQ 'O').ZG59D    OMITTED                 00346400
&ZASYSLNDX      SETA  0                                                 00346500
.ZG59A          ANOP  ,           POSITIONAL MACRO KEY                  00346600
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00346700
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG59C                  00346800
&ZTLC           SETC 'TYPE'                                             00346900
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG59A         00347000
.ZG59B          ANOP  ,                                                 00347100
&ZXTYPE         SETC  ''          RESET IN/OUTPUT                       00347200
&ZMS            SETC  'THE "TYPE" KEY'          *KOPTA* MNOTE           00347300
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00347400
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00347500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00347600
                AGO   .ZG59E                                            00347700
.ZG59C          ANOP  ,                                                 00347800
&ZXTYPE         SETC  ''          RESET IN/OUTPUT                       00347900
&ZMS            SETC  '"TYPE='    *KUKWA* MNOTE                         00348000
&ZMS            SETC  '&ZMS.&TYPE"'                                     00348100
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00348200
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00348300
&ZMS            SETC  '&ZMS "BASIC"'                                    00348400
&ZMS            SETC  '&ZMS OR "HIPERSPACE".'                           00348500
                MNOTE 8,' &ZMS '                                        00348600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00348700
                AGO   .ZG59E                                            00348800
.ZG59D          ANOP  ,                                                 00348900
&XTYPE          SETC  'BASIC'     SET DEFAULT KEYWORD                   00349000
.ZG59E          ANOP  ,                                                 00349100
.*-------------------------------------------------------------------   00349200
.***AG.KMEKY05 NAME, OPT INPUT, ME KEYS -NO ARGUMENTS                   00349300
&XKEYSPEC       SETC  ''          INITIALIZE XVARIABLE                  00349400
&ZASYSLNDX      SETA  0                                                 00349500
.ZG61A          ANOP  ,           POSITIONAL KEY SEARCH                 00349600
&ZASYSLNDX      SETA  &ZASYSLNDX+1              NEXT POSITIONAL         00349700
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG61B  DONE                   00349800
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG61A            00349900
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'CALLERKEY').ZG61A            00350000
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00350100
&ZXKEYSPEC      SETC  'INPUT'     SET IN/OUTPUT                         00350200
&XKEYSPEC       SETC  'CALLERKEY'               SET XVARIABLE           00350300
&ZXCALLERKEY    SETC  'INPUT'     SET IN/OUTPUT                         00350400
&XCALLERKEY     SETC  'CALLERKEY'               SET XVARIABLE PARM      00350500
.ZG61B          ANOP  ,                                                 00350600
.*----------------------------------------------------------------***   00350700
.***AG.KMEKY02 NAME, OPT INPUT, ME KEYS -XVARIABLE                      00350800
                AIF   (K'&KEY LE 0).ZG62D       NO ME KEY               00350900
                AIF   (N'&KEY LE 1).ZG62A       CK NUM                  00351000
&ZMS            SETC  '"KEY='     *KPOSA* MNOTE                         00351100
&ZMS            SETC  '&ZMS.&KEY"'                                      00351200
&ZMS            SETC  '&ZMS "KEY"'                                      00351300
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00351400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00351500
.ZG62A          AIF   (K'&XKEYSPEC LE 0).ZG62B                          00351600
&ZMS            SETC  '"KEY'      *KMEKA* MNOTE                         00351700
&ZMS            SETC  '&ZMS.=&KEY"'                                     00351800
&ZMS            SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'             00351900
&ZMS            SETC  '&ZMS "&XKEYSPEC"'                                00352000
                MNOTE 8,' &ZMS KEY.'                                    00352100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00352200
                AGO   .ZG62D                                            00352300
.*                                                                      00352400
.ZG62B          ANOP  ,                                                 00352500
&ZXKEYSPEC      SETC  'INPUT'     SET IN/OUTPUT                         00352600
&XKEYSPEC       SETC  'KEY'       SET XVARIABLE                         00352700
&ZXKEY          SETC  'INPUT'     SET IN/OUTPUT                         00352800
&XKEY           SETC  '&KEY(1)'   SET XVARIABLE PARM                    00352900
                AIF   (N'&KEY GT 1).ZG62C                               00353000
&XKEY           SETC  '&KEY'      SET XVARIABLE PARM                    00353100
.ZG62C          AIF   (K'&XKEY GT 0).ZG62D      ONE PARM                00353200
&ZXKEYSPEC      SETC  ''          RESET IN/OUTPUT                       00353300
&ZXKEY          SETC  ''          RESET IN/OUTPUT                       00353400
&ZMS            SETC  'WHEN "CREATE" IS SPECIFIED'  *KRQDA*             00353500
&ZMS            SETC  '&ZMS , "KEY" KEY AND ITS'                        00353600
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00353700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00353800
.ZG62D          ANOP  ,                                                 00353900
.*------------------------------------------------------------------    00354000
.***AG.KMEKY07 NAME, OPT INPUT, ME KEYS -CHECK IF KEY ENTERED           00354100
                AIF   (K'&XKEYSPEC GT 0).ZG63B                          00354200
&ZXKEYSPEC      SETC  'INPUT'     SET IN/OUTPUT                         00354300
&XKEYSPEC       SETC  'CALLERKEY'               SET DEFAULT             00354400
&ZXCALLERKEY    SETC  'INPUT'     SET IN/OUTPUT                         00354500
&XCALLERKEY     SETC  'CALLERKEY'               SET DEFAULT PARM        00354600
.ZG63B          ANOP  ,                                                 00354700
.*-------------------------------------------------------------------   00354800
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00354900
                AIF   (K'&ZXKEY LE 0).ZG63R     NOT I/O                 00355000
         AIF   ('&XKEY' EQ 'CALLERKEY').ZG63R                           00355100
                AIF   ('&XKEY'(1,1) NE '(').ZG63R                       00355200
&ZCGPR          SETC  '&XKEY'(2,K'&XKEY-2)                              00355300
                AIF   ('&ZCGPR'(1,1) NE '0').ZG63P                      00355400
                AIF   (K'&ZCGPR GT 2).ZG63Q                             00355500
                AIF   ('&ZCGPR' EQ '0').ZG63Q                           00355600
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00355700
                AIF   (T'&ZCGPR NE 'N').ZG63Q   INVALID REG NAME        00355800
.ZG63P          ANOP  ,                                                 00355900
                AIF   (T'&ZCGPR NE 'N').ZG63R   NON NUMERIC             00356000
                AIF   ('&ZCGPR' LT '2').ZG63Q                           00356100
                AIF   ('&ZCGPR' LE '12').ZG63R                          00356200
.ZG63Q          ANOP  ,                                                 00356300
&ZMS            SETC  '"KEY='     *KGPRA* MNOTE                         00356400
&ZMS            SETC  '&ZMS.&KEY"'                                      00356500
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00356600
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00356700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00356800
.ZG63R          ANOP  ,                                                 00356900
.*-------------------------------------------------------------------   00357000
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           00357100
.ZG61           AIF   ('&XKEYSPEC' NE 'CALLERKEY').ZG62                 00357200
.*-------------------------------------------------------------------   00357300
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           00357400
.ZG62           AIF   ('&XKEYSPEC' NE 'KEY').ZG63                       00357500
.*-------------------------------------------------------------------   00357600
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00357700
                AIF   (K'&ZXKEY LE 0).ZG62R     NOT I/O                 00357800
                AIF   ('&XKEY'(1,1) NE '(').ZG62R                       00357900
&ZCGPR          SETC  '&XKEY'(2,K'&XKEY-2)                              00358000
                AIF   ('&ZCGPR'(1,1) NE '0').ZG62P                      00358100
                AIF   (K'&ZCGPR GT 2).ZG62Q                             00358200
                AIF   ('&ZCGPR' EQ '0').ZG62Q                           00358300
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00358400
                AIF   (T'&ZCGPR NE 'N').ZG62Q   INVALID REG NAME        00358500
.ZG62P          ANOP  ,                                                 00358600
                AIF   (T'&ZCGPR NE 'N').ZG62R   NON NUMERIC             00358700
                AIF   ('&ZCGPR' LT '2').ZG62Q                           00358800
                AIF   ('&ZCGPR' LE '12').ZG62R                          00358900
.ZG62Q          ANOP  ,                                                 00359000
&ZMS            SETC  '"KEY='     *KGPRA* MNOTE                         00359100
&ZMS            SETC  '&ZMS.&KEY"'                                      00359200
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00359300
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00359400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00359500
.ZG62R          ANOP  ,                                                 00359600
.*-------------------------------------------------------------------   00359700
.***AG.KMEKY15 NAME, OPT INPUT, ME KEYS -END                            00359800
.ZG63           ANOP  ,           END MUTUALLY EXCLUSIVE KEYS           00359900
.*----------------------------------------------------------------***   00360000
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00360100
                AIF   (N'&FPROT LE 1).ZG65A     CK NUM                  00360200
&ZMS            SETC  '"FPROT='   *KPOSA* MNOTE                         00360300
&ZMS            SETC  '&ZMS.&FPROT"'                                    00360400
&ZMS            SETC  '&ZMS "FPROT"'                                    00360500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00360600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00360700
.ZG65A          ANOP  ,                                                 00360800
.*-------------------------------------------------------------------   00360900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00361000
&XFPROT         SETC  ''          INITIALIZE XVARIABLE                  00361100
.ZG66A   AIF   ('&FPROT(1)' NE 'YES').ZG67A                             00361200
&XFPROT         SETC  'YES'       SET KEYWORD                           00361300
.*-------------------------------------------------------------------   00361400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00361500
.ZG67A   AIF   ('&FPROT(1)' NE 'NO').ZG68A                              00361600
&XFPROT         SETC  'NO'        SET KEYWORD                           00361700
.*-------------------------------------------------------------------   00361800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00361900
.ZG68A          AIF   (K'&XFPROT GT 0).ZG68C    KEYWORD                 00362000
                AIF   (K'&FPROT(1) LE 0).ZG68B                          00362100
&ZMS            SETC  '"FPROT='   *KUKWA* MNOTE                         00362200
&ZMS            SETC  '&ZMS.&FPROT"'                                    00362300
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00362400
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00362500
&ZMS            SETC  '&ZMS "YES"'                                      00362600
&ZMS            SETC  '&ZMS OR "NO".'                                   00362700
                MNOTE 8,' &ZMS '                                        00362800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00362900
.ZG68B          ANOP  ,                                                 00363000
&XFPROT         SETC  'YES'       SET DEFAULT KEYWORD                   00363100
.ZG68C          ANOP  ,                                                 00363200
&ZXFPROT        SETC  'INPUT'     SET IN/OUTPUT                         00363300
.*----------------------------------------------------------------***   00363400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00363500
                AIF   (N'&TTOKEN LE 1).ZG70A    CK NUM                  00363600
&ZMS            SETC  '"TTOKEN='  *KPOSA* MNOTE                         00363700
&ZMS            SETC  '&ZMS.&TTOKEN"'                                   00363800
&ZMS            SETC  '&ZMS "TTOKEN"'                                   00363900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00364000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00364100
.ZG70A          ANOP  ,                                                 00364200
.*-------------------------------------------------------------------   00364300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00364400
&ZXTTOKEN       SETC  'INPUT'     SET IN/OUTPUT                         00364500
&XTTOKEN        SETC  '0'                                               00364600
                AIF   (K'&TTOKEN(1) LE 0).ZG70B  PARM                   00364700
&XTTOKEN        SETC  '&TTOKEN(1)'              SET XVARIABLE           00364800
                AIF   (N'&TTOKEN GT 1).ZG70B    MULTI PARMS             00364900
&XTTOKEN        SETC  '&TTOKEN'   SET XVARIABLE                         00365000
.ZG70B          ANOP  ,                                                 00365100
.*-------------------------------------------------------------------   00365200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00365300
                AIF   (K'&ZXTTOKEN LE 0).ZG70R  NOT I/O                 00365400
         AIF   ('&XTTOKEN' EQ '0').ZG70R                                00365500
                AIF   ('&XTTOKEN'(1,1) NE '(').ZG70R                    00365600
&ZCGPR          SETC  '&XTTOKEN'(2,K'&XTTOKEN-2)                        00365700
                AIF   ('&ZCGPR'(1,1) NE '0').ZG70P                      00365800
                AIF   (K'&ZCGPR GT 2).ZG70Q                             00365900
                AIF   ('&ZCGPR' EQ '0').ZG70Q                           00366000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00366100
                AIF   (T'&ZCGPR NE 'N').ZG70Q   INVALID REG NAME        00366200
.ZG70P          ANOP  ,                                                 00366300
                AIF   (T'&ZCGPR NE 'N').ZG70R   NON NUMERIC             00366400
                AIF   ('&ZCGPR' LT '2').ZG70Q                           00366500
                AIF   ('&ZCGPR' LE '12').ZG70R                          00366600
.ZG70Q          ANOP  ,                                                 00366700
&ZMS            SETC  '"TTOKEN='  *KGPRA* MNOTE                         00366800
&ZMS            SETC  '&ZMS.&TTOKEN"'                                   00366900
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00367000
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00367100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00367200
.ZG70R          ANOP  ,                                                 00367300
.*----------------------------------------------------------------***   00367400
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00367500
                AIF   (N'&STOKEN LE 1).ZG73A    CK NUM                  00367600
&ZMS            SETC  '"STOKEN='  *KPOSA* MNOTE                         00367700
&ZMS            SETC  '&ZMS.&STOKEN"'                                   00367800
&ZMS            SETC  '&ZMS "STOKEN"'                                   00367900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00368000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00368100
.ZG73A          ANOP  ,                                                 00368200
.*-------------------------------------------------------------------   00368300
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00368400
&ZXSTOKEN       SETC  'OUTPUT'    SET IN/OUTPUT                         00368500
&XSTOKEN        SETC  '&STOKEN(1)'              SET XVARIABLE           00368600
                AIF   (N'&STOKEN GT 1).ZG73B    MULTI PARMS             00368700
&XSTOKEN        SETC  '&STOKEN'   SET XVARIABLE                         00368800
.ZG73B          AIF   (K'&STOKEN(1) GT 0).ZG73C                         00368900
&ZXSTOKEN       SETC  ''          RESET IN/OUTPUT                       00369000
&ZMS            SETC  ' '         *KRQDA*                               00369100
&ZMS            SETC  '&ZMS "STOKEN" KEY AND ITS'                       00369200
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00369300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00369400
.ZG73C          ANOP  ,                                                 00369500
.*-------------------------------------------------------------------   00369600
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00369700
                AIF   (K'&ZXSTOKEN LE 0).ZG73R  NOT I/O                 00369800
                AIF   ('&XSTOKEN'(1,1) NE '(').ZG73R                    00369900
&ZCGPR          SETC  '&XSTOKEN'(2,K'&XSTOKEN-2)                        00370000
                AIF   ('&ZCGPR'(1,1) NE '0').ZG73P                      00370100
                AIF   (K'&ZCGPR GT 2).ZG73Q                             00370200
                AIF   ('&ZCGPR' EQ '0').ZG73Q                           00370300
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00370400
                AIF   (T'&ZCGPR NE 'N').ZG73Q   INVALID REG NAME        00370500
.ZG73P          ANOP  ,                                                 00370600
                AIF   (T'&ZCGPR NE 'N').ZG73R   NON NUMERIC             00370700
                AIF   ('&ZCGPR' LT '2').ZG73Q                           00370800
                AIF   ('&ZCGPR' LE '12').ZG73R                          00370900
.ZG73Q          ANOP  ,                                                 00371000
&ZMS            SETC  '"STOKEN='  *KGPRA* MNOTE                         00371100
&ZMS            SETC  '&ZMS.&STOKEN"'                                   00371200
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00371300
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00371400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00371500
.ZG73R          ANOP  ,                                                 00371600
.*----------------------------------------------------------------***   00371700
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00371800
                AIF   (N'&ORIGIN LE 1).ZG76A    CK NUM                  00371900
&ZMS            SETC  '"ORIGIN='  *KPOSA* MNOTE                         00372000
&ZMS            SETC  '&ZMS.&ORIGIN"'                                   00372100
&ZMS            SETC  '&ZMS "ORIGIN"'                                   00372200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00372300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00372400
.ZG76A          ANOP  ,                                                 00372500
.*-------------------------------------------------------------------   00372600
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00372700
                AIF   (K'&ORIGIN(1) LE 0).ZG76C  NO PARM                00372800
&ZXORIGIN       SETC  'OUTPUT'    SET OUTPUT                            00372900
&XORIGIN        SETC  '&ORIGIN(1)'              SET XVARIABLE           00373000
                AIF   (N'&ORIGIN GT 1).ZG76C                            00373100
&XORIGIN        SETC  '&ORIGIN'   SET XVARIABLE                         00373200
.ZG76C          ANOP  ,                                                 00373300
.*-------------------------------------------------------------------   00373400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00373500
                AIF   (K'&ZXORIGIN LE 0).ZG76R  NOT I/O                 00373600
                AIF   ('&XORIGIN'(1,1) NE '(').ZG76R                    00373700
&ZCGPR          SETC  '&XORIGIN'(2,K'&XORIGIN-2)                        00373800
                AIF   ('&ZCGPR'(1,1) NE '0').ZG76P                      00373900
                AIF   (K'&ZCGPR GT 2).ZG76Q                             00374000
                AIF   ('&ZCGPR' EQ '0').ZG76Q                           00374100
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00374200
                AIF   (T'&ZCGPR NE 'N').ZG76Q   INVALID REG NAME        00374300
.ZG76P          ANOP  ,                                                 00374400
                AIF   (T'&ZCGPR NE 'N').ZG76R   NON NUMERIC             00374500
                AIF   ('&ZCGPR' LT '2').ZG76Q                           00374600
                AIF   ('&ZCGPR' LE '12').ZG76R                          00374700
.ZG76Q          ANOP  ,                                                 00374800
&ZMS            SETC  '"ORIGIN='  *KGPRA* MNOTE                         00374900
&ZMS            SETC  '&ZMS.&ORIGIN"'                                   00375000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00375100
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00375200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00375300
.ZG76R          ANOP  ,                                                 00375400
.*----------------------------------------------------------------***   00375500
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00375600
                AIF   (N'&NUMBLKS LE 1).ZG79A   CK NUM                  00375700
&ZMS            SETC  '"NUMBLKS='               *KPOSA* MNOTE           00375800
&ZMS            SETC  '&ZMS.&NUMBLKS"'                                  00375900
&ZMS            SETC  '&ZMS "NUMBLKS"'                                  00376000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00376100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00376200
.ZG79A          ANOP  ,                                                 00376300
.*-------------------------------------------------------------------   00376400
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00376500
                AIF   (K'&NUMBLKS(1) LE 0).ZG79C  NO PARM               00376600
&ZXNUMBLKS      SETC  'OUTPUT'    SET OUTPUT                            00376700
&XNUMBLKS       SETC  '&NUMBLKS(1)'             SET XVARIABLE           00376800
                AIF   (N'&NUMBLKS GT 1).ZG79C                           00376900
&XNUMBLKS       SETC  '&NUMBLKS'  SET XVARIABLE                         00377000
.ZG79C          ANOP  ,                                                 00377100
.*-------------------------------------------------------------------   00377200
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00377300
                AIF   (K'&ZXNUMBLKS LE 0).ZG79R  NOT I/O                00377400
                AIF   ('&XNUMBLKS'(1,1) NE '(').ZG79R                   00377500
&ZCGPR          SETC  '&XNUMBLKS'(2,K'&XNUMBLKS-2)                      00377600
                AIF   ('&ZCGPR'(1,1) NE '0').ZG79P                      00377700
                AIF   (K'&ZCGPR GT 2).ZG79Q                             00377800
                AIF   ('&ZCGPR' EQ '0').ZG79Q                           00377900
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00378000
                AIF   (T'&ZCGPR NE 'N').ZG79Q   INVALID REG NAME        00378100
.ZG79P          ANOP  ,                                                 00378200
                AIF   (T'&ZCGPR NE 'N').ZG79R   NON NUMERIC             00378300
                AIF   ('&ZCGPR' LT '2').ZG79Q                           00378400
                AIF   ('&ZCGPR' LE '12').ZG79R                          00378500
.ZG79Q          ANOP  ,                                                 00378600
&ZMS            SETC  '"NUMBLKS='               *KGPRA* MNOTE           00378700
&ZMS            SETC  '&ZMS.&NUMBLKS"'                                  00378800
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00378900
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00379000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00379100
.ZG79R          ANOP  ,                                                 00379200
.*-------------------------------------------------------------------   00379300
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00379400
.ZG81           AIF   ('&XSERVICE' NE 'DELETE').ZG88                    00379500
.*-------------------------------------------------------------------   00379600
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00379700
&ZCVAL          SETC ''           ERROR KEY FIELD                       00379800
.ZG81I0         AIF   (K'&NAME LE 0).ZG81I1                             00379900
&ZCVAL          SETC '&ZCVAL NAME'              DISALLOWED KEY          00380000
.ZG81I1         AIF   (K'&GENNAME LE 0).ZG81I2                          00380100
&ZCVAL          SETC '&ZCVAL GENNAME'           DISALLOWED KEY          00380200
.ZG81I2         AIF   (K'&OUTNAME LE 0).ZG81I3                          00380300
&ZCVAL          SETC '&ZCVAL OUTNAME'           DISALLOWED KEY          00380400
.ZG81I3         AIF   (K'&BLOCKS LE 0).ZG81I4                           00380500
&ZCVAL          SETC '&ZCVAL BLOCKS'            DISALLOWED KEY          00380600
.ZG81I4         AIF   (K'&TYPE LE 0).ZG81I5                             00380700
&ZCVAL          SETC '&ZCVAL TYPE'              DISALLOWED KEY          00380800
.ZG81I5         AIF   (K'&DREF LE 0).ZG81I6                             00380900
&ZCVAL          SETC '&ZCVAL DREF'              DISALLOWED KEY          00381000
.ZG81I6         AIF   (K'&SCOPE LE 0).ZG81I7                            00381100
&ZCVAL          SETC '&ZCVAL SCOPE'             DISALLOWED KEY          00381200
.ZG81I7         AIF   (K'&BACK LE 0).ZG81I8                             00381300
&ZCVAL          SETC '&ZCVAL BACK'              DISALLOWED KEY          00381400
.ZG81I8         AIF   (K'&HSTYPE LE 0).ZG81I9                           00381500
&ZCVAL          SETC '&ZCVAL HSTYPE'            DISALLOWED KEY          00381600
.ZG81I9         AIF   (K'&SHARE LE 0).ZG81I10                           00381700
&ZCVAL          SETC '&ZCVAL SHARE'             DISALLOWED KEY          00381800
.ZG81I10        AIF   (K'&CASTOUT LE 0).ZG81I11                         00381900
&ZCVAL          SETC '&ZCVAL CASTOUT'           DISALLOWED KEY          00382000
.ZG81I11        AIF   (K'&XCALLERKEY LE 0).ZG81I12                      00382100
&ZCVAL          SETC '&ZCVAL XCALLERKEY'        DISALLOWED KEY          00382200
.ZG81I12        AIF   (K'&KEY LE 0).ZG81I13                             00382300
&ZCVAL          SETC '&ZCVAL KEY'               DISALLOWED KEY          00382400
.ZG81I13        AIF   (K'&FPROT LE 0).ZG81I14                           00382500
&ZCVAL          SETC '&ZCVAL FPROT'             DISALLOWED KEY          00382600
.ZG81I14        AIF   (K'&ORIGIN LE 0).ZG81I15                          00382700
&ZCVAL          SETC '&ZCVAL ORIGIN'            DISALLOWED KEY          00382800
.ZG81I15        AIF   (K'&NUMBLKS LE 0).ZG81I16                         00382900
&ZCVAL          SETC '&ZCVAL NUMBLKS'           DISALLOWED KEY          00383000
.ZG81I16        AIF   (K'&INLIST LE 0).ZG81I17                          00383100
&ZCVAL          SETC '&ZCVAL INLIST'            DISALLOWED KEY          00383200
.ZG81I17        AIF   (K'&START LE 0).ZG81I18                           00383300
&ZCVAL          SETC '&ZCVAL START'             DISALLOWED KEY          00383400
.ZG81I18        AIF   (K'&NUMRANGE LE 0).ZG81I19                        00383500
&ZCVAL          SETC '&ZCVAL NUMRANGE'          DISALLOWED KEY          00383600
.ZG81I19        AIF   (K'&RANGLIST LE 0).ZG81I20                        00383700
&ZCVAL          SETC '&ZCVAL RANGLIST'          DISALLOWED KEY          00383800
.ZG81I20        AIF   (K'&DISABLED LE 0).ZG81I21                        00383900
&ZCVAL          SETC '&ZCVAL DISABLED'          DISALLOWED KEY          00384000
.ZG81I21        AIF   (K'&XIOON LE 0).ZG81I22                           00384100
&ZCVAL          SETC '&ZCVAL XIOON'             DISALLOWED KEY          00384200
.ZG81I22        AIF   (K'&LONG LE 0).ZG81I23                            00384300
&ZCVAL          SETC '&ZCVAL LONG'              DISALLOWED KEY          00384400
.ZG81I23        AIF   (K'&XIOOFF LE 0).ZG81I24                          00384500
&ZCVAL          SETC '&ZCVAL XIOOFF'            DISALLOWED KEY          00384600
.ZG81I24        AIF   (K'&XDREFON LE 0).ZG81I25                         00384700
&ZCVAL          SETC '&ZCVAL XDREFON'           DISALLOWED KEY          00384800
.ZG81I25        AIF   (K'&XDREFOFF LE 0).ZG81I26                        00384900
&ZCVAL          SETC '&ZCVAL XDREFOFF'          DISALLOWED KEY          00385000
.ZG81I26        AIF   (K'&FORCE LE 0).ZG81I27                           00385100
&ZCVAL          SETC '&ZCVAL FORCE'             DISALLOWED KEY          00385200
.ZG81I27        AIF   (K'&VAR LE 0).ZG81I28                             00385300
&ZCVAL          SETC '&ZCVAL VAR'               DISALLOWED KEY          00385400
.ZG81I28        AIF   (K'&ZCVAL LE 0).ZG81J     KEY                     00385500
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00385600
                AIF  (K'&ZCVAL LE 160).ZG81K                            00385700
&ZCVAL          SETC '&ZCVAL'(1,160)                                    00385800
&ZCVAL          SETC '&ZCVAL....'                                       00385900
.ZG81K          ANOP                                                    00386000
&ZMS            SETC  '"DELETE'   *KMEIA* MNOTE                         00386100
&ZMS            SETC  '&ZMS."'                                          00386200
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00386300
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00386400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00386500
.ZG81J          ANOP  ,                                                 00386600
.*----------------------------------------------------------------***   00386700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00386800
                AIF   (N'&STOKEN LE 1).ZG83A    CK NUM                  00386900
&ZMS            SETC  '"STOKEN='  *KPOSA* MNOTE                         00387000
&ZMS            SETC  '&ZMS.&STOKEN"'                                   00387100
&ZMS            SETC  '&ZMS "STOKEN"'                                   00387200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00387300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00387400
.ZG83A          ANOP  ,                                                 00387500
.*-------------------------------------------------------------------   00387600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00387700
&ZXSTOKEN       SETC  'INPUT'     SET IN/OUTPUT                         00387800
&XSTOKEN        SETC  '&STOKEN(1)'              SET XVARIABLE           00387900
                AIF   (N'&STOKEN GT 1).ZG83B    MULTI PARMS             00388000
&XSTOKEN        SETC  '&STOKEN'   SET XVARIABLE                         00388100
.ZG83B          AIF   (K'&STOKEN(1) GT 0).ZG83C                         00388200
&ZXSTOKEN       SETC  ''          RESET IN/OUTPUT                       00388300
&ZMS            SETC  ' '         *KRQDA*                               00388400
&ZMS            SETC  '&ZMS "STOKEN" KEY AND ITS'                       00388500
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00388600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00388700
.ZG83C          ANOP  ,                                                 00388800
.*-------------------------------------------------------------------   00388900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00389000
                AIF   (K'&ZXSTOKEN LE 0).ZG83R  NOT I/O                 00389100
                AIF   ('&XSTOKEN'(1,1) NE '(').ZG83R                    00389200
&ZCGPR          SETC  '&XSTOKEN'(2,K'&XSTOKEN-2)                        00389300
                AIF   ('&ZCGPR'(1,1) NE '0').ZG83P                      00389400
                AIF   (K'&ZCGPR GT 2).ZG83Q                             00389500
                AIF   ('&ZCGPR' EQ '0').ZG83Q                           00389600
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00389700
                AIF   (T'&ZCGPR NE 'N').ZG83Q   INVALID REG NAME        00389800
.ZG83P          ANOP  ,                                                 00389900
                AIF   (T'&ZCGPR NE 'N').ZG83R   NON NUMERIC             00390000
                AIF   ('&ZCGPR' LT '2').ZG83Q                           00390100
                AIF   ('&ZCGPR' LE '12').ZG83R                          00390200
.ZG83Q          ANOP  ,                                                 00390300
&ZMS            SETC  '"STOKEN='  *KGPRA* MNOTE                         00390400
&ZMS            SETC  '&ZMS.&STOKEN"'                                   00390500
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00390600
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00390700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00390800
.ZG83R          ANOP  ,                                                 00390900
.*----------------------------------------------------------------***   00391000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00391100
                AIF   (N'&TTOKEN LE 1).ZG86A    CK NUM                  00391200
&ZMS            SETC  '"TTOKEN='  *KPOSA* MNOTE                         00391300
&ZMS            SETC  '&ZMS.&TTOKEN"'                                   00391400
&ZMS            SETC  '&ZMS "TTOKEN"'                                   00391500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00391600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00391700
.ZG86A          ANOP  ,                                                 00391800
.*-------------------------------------------------------------------   00391900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00392000
&ZXTTOKEN       SETC  'INPUT'     SET IN/OUTPUT                         00392100
&XTTOKEN        SETC  '0'                                               00392200
                AIF   (K'&TTOKEN(1) LE 0).ZG86B  PARM                   00392300
&XTTOKEN        SETC  '&TTOKEN(1)'              SET XVARIABLE           00392400
                AIF   (N'&TTOKEN GT 1).ZG86B    MULTI PARMS             00392500
&XTTOKEN        SETC  '&TTOKEN'   SET XVARIABLE                         00392600
.ZG86B          ANOP  ,                                                 00392700
.*-------------------------------------------------------------------   00392800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00392900
                AIF   (K'&ZXTTOKEN LE 0).ZG86R  NOT I/O                 00393000
         AIF   ('&XTTOKEN' EQ '0').ZG86R                                00393100
                AIF   ('&XTTOKEN'(1,1) NE '(').ZG86R                    00393200
&ZCGPR          SETC  '&XTTOKEN'(2,K'&XTTOKEN-2)                        00393300
                AIF   ('&ZCGPR'(1,1) NE '0').ZG86P                      00393400
                AIF   (K'&ZCGPR GT 2).ZG86Q                             00393500
                AIF   ('&ZCGPR' EQ '0').ZG86Q                           00393600
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00393700
                AIF   (T'&ZCGPR NE 'N').ZG86Q   INVALID REG NAME        00393800
.ZG86P          ANOP  ,                                                 00393900
                AIF   (T'&ZCGPR NE 'N').ZG86R   NON NUMERIC             00394000
                AIF   ('&ZCGPR' LT '2').ZG86Q                           00394100
                AIF   ('&ZCGPR' LE '12').ZG86R                          00394200
.ZG86Q          ANOP  ,                                                 00394300
&ZMS            SETC  '"TTOKEN='  *KGPRA* MNOTE                         00394400
&ZMS            SETC  '&ZMS.&TTOKEN"'                                   00394500
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00394600
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00394700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00394800
.ZG86R          ANOP  ,                                                 00394900
.*-------------------------------------------------------------------   00395000
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00395100
.ZG88           AIF   ('&XSERVICE' NE 'RELEASE').ZG114                  00395200
.*-------------------------------------------------------------------   00395300
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00395400
&ZCVAL          SETC ''           ERROR KEY FIELD                       00395500
.ZG88I0         AIF   (K'&NAME LE 0).ZG88I1                             00395600
&ZCVAL          SETC '&ZCVAL NAME'              DISALLOWED KEY          00395700
.ZG88I1         AIF   (K'&GENNAME LE 0).ZG88I2                          00395800
&ZCVAL          SETC '&ZCVAL GENNAME'           DISALLOWED KEY          00395900
.ZG88I2         AIF   (K'&OUTNAME LE 0).ZG88I3                          00396000
&ZCVAL          SETC '&ZCVAL OUTNAME'           DISALLOWED KEY          00396100
.ZG88I3         AIF   (K'&TYPE LE 0).ZG88I4                             00396200
&ZCVAL          SETC '&ZCVAL TYPE'              DISALLOWED KEY          00396300
.ZG88I4         AIF   (K'&DREF LE 0).ZG88I5                             00396400
&ZCVAL          SETC '&ZCVAL DREF'              DISALLOWED KEY          00396500
.ZG88I5         AIF   (K'&SCOPE LE 0).ZG88I6                            00396600
&ZCVAL          SETC '&ZCVAL SCOPE'             DISALLOWED KEY          00396700
.ZG88I6         AIF   (K'&BACK LE 0).ZG88I7                             00396800
&ZCVAL          SETC '&ZCVAL BACK'              DISALLOWED KEY          00396900
.ZG88I7         AIF   (K'&HSTYPE LE 0).ZG88I8                           00397000
&ZCVAL          SETC '&ZCVAL HSTYPE'            DISALLOWED KEY          00397100
.ZG88I8         AIF   (K'&SHARE LE 0).ZG88I9                            00397200
&ZCVAL          SETC '&ZCVAL SHARE'             DISALLOWED KEY          00397300
.ZG88I9         AIF   (K'&CASTOUT LE 0).ZG88I10                         00397400
&ZCVAL          SETC '&ZCVAL CASTOUT'           DISALLOWED KEY          00397500
.ZG88I10        AIF   (K'&XCALLERKEY LE 0).ZG88I11                      00397600
&ZCVAL          SETC '&ZCVAL XCALLERKEY'        DISALLOWED KEY          00397700
.ZG88I11        AIF   (K'&KEY LE 0).ZG88I12                             00397800
&ZCVAL          SETC '&ZCVAL KEY'               DISALLOWED KEY          00397900
.ZG88I12        AIF   (K'&FPROT LE 0).ZG88I13                           00398000
&ZCVAL          SETC '&ZCVAL FPROT'             DISALLOWED KEY          00398100
.ZG88I13        AIF   (K'&TTOKEN LE 0).ZG88I14                          00398200
&ZCVAL          SETC '&ZCVAL TTOKEN'            DISALLOWED KEY          00398300
.ZG88I14        AIF   (K'&ORIGIN LE 0).ZG88I15                          00398400
&ZCVAL          SETC '&ZCVAL ORIGIN'            DISALLOWED KEY          00398500
.ZG88I15        AIF   (K'&NUMBLKS LE 0).ZG88I16                         00398600
&ZCVAL          SETC '&ZCVAL NUMBLKS'           DISALLOWED KEY          00398700
.ZG88I16        AIF   (K'&XIOON LE 0).ZG88I17                           00398800
&ZCVAL          SETC '&ZCVAL XIOON'             DISALLOWED KEY          00398900
.ZG88I17        AIF   (K'&LONG LE 0).ZG88I18                            00399000
&ZCVAL          SETC '&ZCVAL LONG'              DISALLOWED KEY          00399100
.ZG88I18        AIF   (K'&XIOOFF LE 0).ZG88I19                          00399200
&ZCVAL          SETC '&ZCVAL XIOOFF'            DISALLOWED KEY          00399300
.ZG88I19        AIF   (K'&XDREFON LE 0).ZG88I20                         00399400
&ZCVAL          SETC '&ZCVAL XDREFON'           DISALLOWED KEY          00399500
.ZG88I20        AIF   (K'&XDREFOFF LE 0).ZG88I21                        00399600
&ZCVAL          SETC '&ZCVAL XDREFOFF'          DISALLOWED KEY          00399700
.ZG88I21        AIF   (K'&FORCE LE 0).ZG88I22                           00399800
&ZCVAL          SETC '&ZCVAL FORCE'             DISALLOWED KEY          00399900
.ZG88I22        AIF   (K'&VAR LE 0).ZG88I23                             00400000
&ZCVAL          SETC '&ZCVAL VAR'               DISALLOWED KEY          00400100
.ZG88I23        AIF   (K'&ZCVAL LE 0).ZG88J     KEY                     00400200
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00400300
&ZMS            SETC  '"RELEASE'  *KMEIA* MNOTE                         00400400
&ZMS            SETC  '&ZMS."'                                          00400500
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00400600
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00400700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00400800
.ZG88J          ANOP  ,                                                 00400900
.*----------------------------------------------------------------***   00401000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00401100
                AIF   (N'&STOKEN LE 1).ZG90A    CK NUM                  00401200
&ZMS            SETC  '"STOKEN='  *KPOSA* MNOTE                         00401300
&ZMS            SETC  '&ZMS.&STOKEN"'                                   00401400
&ZMS            SETC  '&ZMS "STOKEN"'                                   00401500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00401600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00401700
.ZG90A          ANOP  ,                                                 00401800
.*-------------------------------------------------------------------   00401900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00402000
&ZXSTOKEN       SETC  'INPUT'     SET IN/OUTPUT                         00402100
&XSTOKEN        SETC  '&STOKEN(1)'              SET XVARIABLE           00402200
                AIF   (N'&STOKEN GT 1).ZG90B    MULTI PARMS             00402300
&XSTOKEN        SETC  '&STOKEN'   SET XVARIABLE                         00402400
.ZG90B          AIF   (K'&STOKEN(1) GT 0).ZG90C                         00402500
&ZXSTOKEN       SETC  ''          RESET IN/OUTPUT                       00402600
&ZMS            SETC  ' '         *KRQDA*                               00402700
&ZMS            SETC  '&ZMS "STOKEN" KEY AND ITS'                       00402800
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00402900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00403000
.ZG90C          ANOP  ,                                                 00403100
.*-------------------------------------------------------------------   00403200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00403300
                AIF   (K'&ZXSTOKEN LE 0).ZG90R  NOT I/O                 00403400
                AIF   ('&XSTOKEN'(1,1) NE '(').ZG90R                    00403500
&ZCGPR          SETC  '&XSTOKEN'(2,K'&XSTOKEN-2)                        00403600
                AIF   ('&ZCGPR'(1,1) NE '0').ZG90P                      00403700
                AIF   (K'&ZCGPR GT 2).ZG90Q                             00403800
                AIF   ('&ZCGPR' EQ '0').ZG90Q                           00403900
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00404000
                AIF   (T'&ZCGPR NE 'N').ZG90Q   INVALID REG NAME        00404100
.ZG90P          ANOP  ,                                                 00404200
                AIF   (T'&ZCGPR NE 'N').ZG90R   NON NUMERIC             00404300
                AIF   ('&ZCGPR' LT '2').ZG90Q                           00404400
                AIF   ('&ZCGPR' LE '12').ZG90R                          00404500
.ZG90Q          ANOP  ,                                                 00404600
&ZMS            SETC  '"STOKEN='  *KGPRA* MNOTE                         00404700
&ZMS            SETC  '&ZMS.&STOKEN"'                                   00404800
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00404900
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00405000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00405100
.ZG90R          ANOP  ,                                                 00405200
.*------------------------------------------------------------------    00405300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00405400
&XINLIST        SETC  ''          INITIALIZE XVARIABLE                  00405500
.*-------------------------------------------------------------------   00405600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00405700
.ZG94           ANOP  ,                                                 00405800
                AIF   (K'&INLIST(1) LE 0).ZG94A                         00405900
&ZTLC           SETC 'NO'                                               00406000
                AIF   ('&INLIST(1)' NE '&ZTLC').ZG101                   00406100
&XINLIST        SETC  'NO'        SET KEYWORD                           00406200
                AIF   (N'&INLIST LE 1).ZG94A    CK NUM                  00406300
&ZMS            SETC  '"INLIST='  *KPOSA* MNOTE                         00406400
&ZMS            SETC  '&ZMS.&INLIST"'                                   00406500
&ZMS            SETC  '&ZMS "INLIST"'                                   00406600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00406700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00406800
.ZG94A          ANOP  ,                                                 00406900
.*------------------------------------------------------------------    00407000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00407100
&ZCVAL          SETC ''           CLEAR ERROR KEY ACCUMULATOR           00407200
.ZG94A0         AIF   (K'&NUMRANGE LE 0).ZG94A1  OK                     00407300
&ZCVAL          SETC '&ZCVAL NUMRANGE'          INCORRECT KEY USED      00407400
.ZG94A1         AIF   (K'&RANGLIST LE 0).ZG94A2  OK                     00407500
&ZCVAL          SETC '&ZCVAL RANGLIST'          INCORRECT KEY USED      00407600
.ZG94A2         AIF   (K'&ZCVAL LE 0).ZG94A3    OK                      00407700
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00407800
&ZMS            SETC  '"INLIST'   *KMEIA* MNOTE                         00407900
&ZMS            SETC  '&ZMS.=&INLIST"'                                  00408000
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00408100
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00408200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00408300
.ZG94A3         ANOP  ,                                                 00408400
.*----------------------------------------------------------------***   00408500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00408600
                AIF   (N'&START LE 1).ZG96A     CK NUM                  00408700
&ZMS            SETC  '"START='   *KPOSA* MNOTE                         00408800
&ZMS            SETC  '&ZMS.&START"'                                    00408900
&ZMS            SETC  '&ZMS "START"'                                    00409000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00409100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00409200
.ZG96A          ANOP  ,                                                 00409300
.*-------------------------------------------------------------------   00409400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00409500
&ZXSTART        SETC  'INPUT'     SET IN/OUTPUT                         00409600
&XSTART         SETC  '&START(1)'               SET XVARIABLE           00409700
                AIF   (N'&START GT 1).ZG96B     MULTI PARMS             00409800
&XSTART         SETC  '&START'    SET XVARIABLE                         00409900
.ZG96B          AIF   (K'&START(1) GT 0).ZG96C                          00410000
&ZXSTART        SETC  ''          RESET IN/OUTPUT                       00410100
&ZMS            SETC  ' '         *KRQDA*                               00410200
&ZMS            SETC  '&ZMS "START" KEY AND ITS'                        00410300
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00410400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00410500
.ZG96C          ANOP  ,                                                 00410600
.*-------------------------------------------------------------------   00410700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00410800
                AIF   (K'&ZXSTART LE 0).ZG96R   NOT I/O                 00410900
                AIF   ('&XSTART'(1,1) NE '(').ZG96R                     00411000
&ZCGPR          SETC  '&XSTART'(2,K'&XSTART-2)                          00411100
                AIF   ('&ZCGPR'(1,1) NE '0').ZG96P                      00411200
                AIF   (K'&ZCGPR GT 2).ZG96Q                             00411300
                AIF   ('&ZCGPR' EQ '0').ZG96Q                           00411400
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00411500
                AIF   (T'&ZCGPR NE 'N').ZG96Q   INVALID REG NAME        00411600
.ZG96P          ANOP  ,                                                 00411700
                AIF   (T'&ZCGPR NE 'N').ZG96R   NON NUMERIC             00411800
                AIF   ('&ZCGPR' LT '2').ZG96Q                           00411900
                AIF   ('&ZCGPR' LE '12').ZG96R                          00412000
.ZG96Q          ANOP  ,                                                 00412100
&ZMS            SETC  '"START='   *KGPRA* MNOTE                         00412200
&ZMS            SETC  '&ZMS.&START"'                                    00412300
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00412400
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00412500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00412600
.ZG96R          ANOP  ,                                                 00412700
.*----------------------------------------------------------------***   00412800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00412900
                AIF   (N'&BLOCKS LE 1).ZG99A    CK NUM                  00413000
&ZMS            SETC  '"BLOCKS='  *KPOSA* MNOTE                         00413100
&ZMS            SETC  '&ZMS.&BLOCKS"'                                   00413200
&ZMS            SETC  '&ZMS "BLOCKS"'                                   00413300
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00413400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00413500
.ZG99A          ANOP  ,                                                 00413600
.*-------------------------------------------------------------------   00413700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00413800
&ZXBLOCKS       SETC  'INPUT'     SET IN/OUTPUT                         00413900
&XBLOCKS        SETC  '&BLOCKS(1)'              SET XVARIABLE           00414000
                AIF   (N'&BLOCKS GT 1).ZG99B    MULTI PARMS             00414100
&XBLOCKS        SETC  '&BLOCKS'   SET XVARIABLE                         00414200
.ZG99B          AIF   (K'&BLOCKS(1) GT 0).ZG99C                         00414300
&ZXBLOCKS       SETC  ''          RESET IN/OUTPUT                       00414400
&ZMS            SETC  ' '         *KRQDA*                               00414500
&ZMS            SETC  '&ZMS "BLOCKS" KEY AND ITS'                       00414600
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00414700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00414800
.ZG99C          ANOP  ,                                                 00414900
.*-------------------------------------------------------------------   00415000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00415100
                AIF   (K'&ZXBLOCKS LE 0).ZG99R  NOT I/O                 00415200
                AIF   ('&XBLOCKS'(1,1) NE '(').ZG99R                    00415300
&ZCGPR          SETC  '&XBLOCKS'(2,K'&XBLOCKS-2)                        00415400
                AIF   ('&ZCGPR'(1,1) NE '0').ZG99P                      00415500
                AIF   (K'&ZCGPR GT 2).ZG99Q                             00415600
                AIF   ('&ZCGPR' EQ '0').ZG99Q                           00415700
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00415800
                AIF   (T'&ZCGPR NE 'N').ZG99Q   INVALID REG NAME        00415900
.ZG99P          ANOP  ,                                                 00416000
                AIF   (T'&ZCGPR NE 'N').ZG99R   NON NUMERIC             00416100
                AIF   ('&ZCGPR' LT '2').ZG99Q                           00416200
                AIF   ('&ZCGPR' LE '12').ZG99R                          00416300
.ZG99Q          ANOP  ,                                                 00416400
&ZMS            SETC  '"BLOCKS='  *KGPRA* MNOTE                         00416500
&ZMS            SETC  '&ZMS.&BLOCKS"'                                   00416600
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00416700
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00416800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00416900
.ZG99R          ANOP  ,                                                 00417000
.*-------------------------------------------------------------------   00417100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00417200
.ZG101          ANOP  ,                                                 00417300
&ZTLC           SETC 'YES'                                              00417400
                AIF   ('&INLIST(1)' NE '&ZTLC').ZG108                   00417500
&XINLIST        SETC  'YES'       SET KEYWORD                           00417600
                AIF   (N'&INLIST LE 1).ZG101A   CK NUM                  00417700
&ZMS            SETC  '"INLIST='  *KPOSA* MNOTE                         00417800
&ZMS            SETC  '&ZMS.&INLIST"'                                   00417900
&ZMS            SETC  '&ZMS "INLIST"'                                   00418000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00418100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00418200
.ZG101A         ANOP  ,                                                 00418300
.*------------------------------------------------------------------    00418400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00418500
&ZCVAL          SETC ''           CLEAR ERROR KEY ACCUMULATOR           00418600
.ZG101A0        AIF   (K'&START LE 0).ZG101A1   OK                      00418700
&ZCVAL          SETC '&ZCVAL START'             INCORRECT KEY USED      00418800
.ZG101A1        AIF   (K'&BLOCKS LE 0).ZG101A2  OK                      00418900
&ZCVAL          SETC '&ZCVAL BLOCKS'            INCORRECT KEY USED      00419000
.ZG101A2        AIF   (K'&ZCVAL LE 0).ZG101A3   OK                      00419100
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00419200
&ZMS            SETC  '"INLIST'   *KMEIA* MNOTE                         00419300
&ZMS            SETC  '&ZMS.=&INLIST"'                                  00419400
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00419500
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00419600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00419700
.ZG101A3        ANOP  ,                                                 00419800
.*----------------------------------------------------------------***   00419900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00420000
                AIF   (N'&NUMRANGE LE 1).ZG103A  CK NUM                 00420100
&ZMS            SETC  '"NUMRANGE='              *KPOSA* MNOTE           00420200
&ZMS            SETC  '&ZMS.&NUMRANGE"'                                 00420300
&ZMS            SETC  '&ZMS "NUMRANGE"'                                 00420400
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00420500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00420600
.ZG103A         ANOP  ,                                                 00420700
.*-------------------------------------------------------------------   00420800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00420900
&ZXNUMRANGE     SETC  'INPUT'     SET IN/OUTPUT                         00421000
&XNUMRANGE      SETC  '1'                                               00421100
                AIF   (K'&NUMRANGE(1) LE 0).ZG103B  PARM                00421200
&XNUMRANGE      SETC  '&NUMRANGE(1)'            SET XVARIABLE           00421300
                AIF   (N'&NUMRANGE GT 1).ZG103B  MULTI PARMS            00421400
&XNUMRANGE      SETC  '&NUMRANGE'               SET XVARIABLE           00421500
.ZG103B         ANOP  ,                                                 00421600
.*-------------------------------------------------------------------   00421700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00421800
                AIF   (K'&ZXNUMRANGE LE 0).ZG103R  NOT I/O              00421900
                AIF   ('&XNUMRANGE'(1,1) NE '(').ZG103R                 00422000
&ZCGPR          SETC  '&XNUMRANGE'(2,K'&XNUMRANGE-2)                    00422100
                AIF   ('&ZCGPR'(1,1) NE '0').ZG103P                     00422200
                AIF   (K'&ZCGPR GT 2).ZG103Q                            00422300
                AIF   ('&ZCGPR' EQ '0').ZG103Q                          00422400
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00422500
                AIF   (T'&ZCGPR NE 'N').ZG103Q  INVALID REG NAME        00422600
.ZG103P         ANOP  ,                                                 00422700
                AIF   (T'&ZCGPR NE 'N').ZG103R  NON NUMERIC             00422800
                AIF   ('&ZCGPR' LT '2').ZG103Q                          00422900
                AIF   ('&ZCGPR' LE '12').ZG103R                         00423000
.ZG103Q         ANOP  ,                                                 00423100
&ZMS            SETC  '"NUMRANGE='              *KGPRA* MNOTE           00423200
&ZMS            SETC  '&ZMS.&NUMRANGE"'                                 00423300
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00423400
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00423500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00423600
.ZG103R         ANOP  ,                                                 00423700
.*----------------------------------------------------------------***   00423800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00423900
                AIF   (N'&RANGLIST LE 1).ZG106A  CK NUM                 00424000
&ZMS            SETC  '"RANGLIST='              *KPOSA* MNOTE           00424100
&ZMS            SETC  '&ZMS.&RANGLIST"'                                 00424200
&ZMS            SETC  '&ZMS "RANGLIST"'                                 00424300
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00424400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00424500
.ZG106A         ANOP  ,                                                 00424600
.*-------------------------------------------------------------------   00424700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00424800
&ZXRANGLIST     SETC  'INPUT'     SET IN/OUTPUT                         00424900
&XRANGLIST      SETC  '&RANGLIST(1)'            SET XVARIABLE           00425000
                AIF   (N'&RANGLIST GT 1).ZG106B  MULTI PARMS            00425100
&XRANGLIST      SETC  '&RANGLIST'               SET XVARIABLE           00425200
.ZG106B         AIF   (K'&RANGLIST(1) GT 0).ZG106C                      00425300
&ZXRANGLIST     SETC  ''          RESET IN/OUTPUT                       00425400
&ZMS            SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*                00425500
&ZMS            SETC  '&ZMS , "RANGLIST" KEY AND ITS'                   00425600
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00425700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00425800
.ZG106C         ANOP  ,                                                 00425900
.*-------------------------------------------------------------------   00426000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00426100
                AIF   (K'&ZXRANGLIST LE 0).ZG106R  NOT I/O              00426200
                AIF   ('&XRANGLIST'(1,1) NE '(').ZG106R                 00426300
&ZCGPR          SETC  '&XRANGLIST'(2,K'&XRANGLIST-2)                    00426400
                AIF   ('&ZCGPR'(1,1) NE '0').ZG106P                     00426500
                AIF   (K'&ZCGPR GT 2).ZG106Q                            00426600
                AIF   ('&ZCGPR' EQ '0').ZG106Q                          00426700
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00426800
                AIF   (T'&ZCGPR NE 'N').ZG106Q  INVALID REG NAME        00426900
.ZG106P         ANOP  ,                                                 00427000
                AIF   (T'&ZCGPR NE 'N').ZG106R  NON NUMERIC             00427100
                AIF   ('&ZCGPR' LT '2').ZG106Q                          00427200
                AIF   ('&ZCGPR' LE '12').ZG106R                         00427300
.ZG106Q         ANOP  ,                                                 00427400
&ZMS            SETC  '"RANGLIST='              *KGPRA* MNOTE           00427500
&ZMS            SETC  '&ZMS.&RANGLIST"'                                 00427600
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00427700
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00427800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00427900
.ZG106R         ANOP  ,                                                 00428000
.*------------------------------------------------------------------    00428100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00428200
.ZG108          ANOP  ,                                                 00428300
&ZXINLIST       SETC  'INPUT'     SET IN/OUTPUT                         00428400
                AIF   (K'&XINLIST GT 0).ZG108E  VALID ARG               00428500
                AIF   (T'&INLIST EQ 'O').ZG108D  OMITTED                00428600
&ZASYSLNDX      SETA  0                                                 00428700
.ZG108A         ANOP  ,           POSITIONAL MACRO KEY                  00428800
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00428900
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG108C                 00429000
&ZTLC           SETC 'INLIST'                                           00429100
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG108A        00429200
.ZG108B         ANOP  ,                                                 00429300
&ZXINLIST       SETC  ''          RESET IN/OUTPUT                       00429400
&ZMS            SETC  'THE "INLIST" KEY'        *KOPTA* MNOTE           00429500
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00429600
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00429700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00429800
                AGO   .ZG108E                                           00429900
.ZG108C         ANOP  ,                                                 00430000
&ZXINLIST       SETC  ''          RESET IN/OUTPUT                       00430100
&ZMS            SETC  '"INLIST='  *KUKWA* MNOTE                         00430200
&ZMS            SETC  '&ZMS.&INLIST"'                                   00430300
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00430400
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00430500
&ZMS            SETC  '&ZMS "NO"'                                       00430600
&ZMS            SETC  '&ZMS OR "YES".'                                  00430700
                MNOTE 8,' &ZMS '                                        00430800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00430900
                AGO   .ZG108E                                           00431000
.ZG108D         ANOP  ,                                                 00431100
&XINLIST        SETC  'NO'        SET DEFAULT KEYWORD                   00431200
.ZG108E         ANOP  ,                                                 00431300
.*----------------------------------------------------------------***   00431400
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00431500
                AIF   (N'&DISABLED LE 1).ZG110A  CK NUM                 00431600
&ZMS            SETC  '"DISABLED='              *KPOSA* MNOTE           00431700
&ZMS            SETC  '&ZMS.&DISABLED"'                                 00431800
&ZMS            SETC  '&ZMS "DISABLED"'                                 00431900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00432000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00432100
.ZG110A         ANOP  ,                                                 00432200
.*-------------------------------------------------------------------   00432300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00432400
&XDISABLED      SETC  ''          INITIALIZE XVARIABLE                  00432500
.ZG111A   AIF   ('&DISABLED(1)' NE 'NO').ZG112A                         00432600
&XDISABLED      SETC  'NO'        SET KEYWORD                           00432700
.*-------------------------------------------------------------------   00432800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00432900
.ZG112A   AIF   ('&DISABLED(1)' NE 'YES').ZG113A                        00433000
&XDISABLED      SETC  'YES'       SET KEYWORD                           00433100
.*-------------------------------------------------------------------   00433200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00433300
.ZG113A         AIF   (K'&XDISABLED GT 0).ZG113C  KEYWORD               00433400
                AIF   (K'&DISABLED(1) LE 0).ZG113B                      00433500
&ZMS            SETC  '"DISABLED='              *KUKWA* MNOTE           00433600
&ZMS            SETC  '&ZMS.&DISABLED"'                                 00433700
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00433800
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00433900
&ZMS            SETC  '&ZMS "NO"'                                       00434000
&ZMS            SETC  '&ZMS OR "YES".'                                  00434100
                MNOTE 8,' &ZMS '                                        00434200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00434300
.ZG113B         ANOP  ,                                                 00434400
&XDISABLED      SETC  'NO'        SET DEFAULT KEYWORD                   00434500
.ZG113C         ANOP  ,                                                 00434600
&ZXDISABLED     SETC  'INPUT'     SET IN/OUTPUT                         00434700
.*-------------------------------------------------------------------   00434800
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00434900
.ZG114          AIF   ('&XSERVICE' NE 'DEFINE').ZG156                   00435000
.*-------------------------------------------------------------------   00435100
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00435200
&ZCVAL          SETC ''           ERROR KEY FIELD                       00435300
.ZG114I0        AIF   (K'&NAME LE 0).ZG114I1                            00435400
&ZCVAL          SETC '&ZCVAL NAME'              DISALLOWED KEY          00435500
.ZG114I1        AIF   (K'&GENNAME LE 0).ZG114I2                         00435600
&ZCVAL          SETC '&ZCVAL GENNAME'           DISALLOWED KEY          00435700
.ZG114I2        AIF   (K'&OUTNAME LE 0).ZG114I3                         00435800
&ZCVAL          SETC '&ZCVAL OUTNAME'           DISALLOWED KEY          00435900
.ZG114I3        AIF   (K'&TYPE LE 0).ZG114I4                            00436000
&ZCVAL          SETC '&ZCVAL TYPE'              DISALLOWED KEY          00436100
.ZG114I4        AIF   (K'&DREF LE 0).ZG114I5                            00436200
&ZCVAL          SETC '&ZCVAL DREF'              DISALLOWED KEY          00436300
.ZG114I5        AIF   (K'&SCOPE LE 0).ZG114I6                           00436400
&ZCVAL          SETC '&ZCVAL SCOPE'             DISALLOWED KEY          00436500
.ZG114I6        AIF   (K'&BACK LE 0).ZG114I7                            00436600
&ZCVAL          SETC '&ZCVAL BACK'              DISALLOWED KEY          00436700
.ZG114I7        AIF   (K'&HSTYPE LE 0).ZG114I8                          00436800
&ZCVAL          SETC '&ZCVAL HSTYPE'            DISALLOWED KEY          00436900
.ZG114I8        AIF   (K'&SHARE LE 0).ZG114I9                           00437000
&ZCVAL          SETC '&ZCVAL SHARE'             DISALLOWED KEY          00437100
.ZG114I9        AIF   (K'&CASTOUT LE 0).ZG114I10                        00437200
&ZCVAL          SETC '&ZCVAL CASTOUT'           DISALLOWED KEY          00437300
.ZG114I10       AIF   (K'&XCALLERKEY LE 0).ZG114I11                     00437400
&ZCVAL          SETC '&ZCVAL XCALLERKEY'        DISALLOWED KEY          00437500
.ZG114I11       AIF   (K'&KEY LE 0).ZG114I12                            00437600
&ZCVAL          SETC '&ZCVAL KEY'               DISALLOWED KEY          00437700
.ZG114I12       AIF   (K'&FPROT LE 0).ZG114I13                          00437800
&ZCVAL          SETC '&ZCVAL FPROT'             DISALLOWED KEY          00437900
.ZG114I13       AIF   (K'&TTOKEN LE 0).ZG114I14                         00438000
&ZCVAL          SETC '&ZCVAL TTOKEN'            DISALLOWED KEY          00438100
.ZG114I14       AIF   (K'&ORIGIN LE 0).ZG114I15                         00438200
&ZCVAL          SETC '&ZCVAL ORIGIN'            DISALLOWED KEY          00438300
.ZG114I15       AIF   (K'&NUMBLKS LE 0).ZG114I16                        00438400
&ZCVAL          SETC '&ZCVAL NUMBLKS'           DISALLOWED KEY          00438500
.ZG114I16       AIF   (K'&VAR LE 0).ZG114I17                            00438600
&ZCVAL          SETC '&ZCVAL VAR'               DISALLOWED KEY          00438700
.ZG114I17       AIF   (K'&ZCVAL LE 0).ZG114J    KEY                     00438800
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00438900
&ZMS            SETC  '"DEFINE'   *KMEIA* MNOTE                         00439000
&ZMS            SETC  '&ZMS."'                                          00439100
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00439200
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00439300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00439400
.ZG114J         ANOP  ,                                                 00439500
.*----------------------------------------------------------------***   00439600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00439700
                AIF   (N'&STOKEN LE 1).ZG116A   CK NUM                  00439800
&ZMS            SETC  '"STOKEN='  *KPOSA* MNOTE                         00439900
&ZMS            SETC  '&ZMS.&STOKEN"'                                   00440000
&ZMS            SETC  '&ZMS "STOKEN"'                                   00440100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00440200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00440300
.ZG116A         ANOP  ,                                                 00440400
.*-------------------------------------------------------------------   00440500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00440600
&ZXSTOKEN       SETC  'INPUT'     SET IN/OUTPUT                         00440700
&XSTOKEN        SETC  '&STOKEN(1)'              SET XVARIABLE           00440800
                AIF   (N'&STOKEN GT 1).ZG116B   MULTI PARMS             00440900
&XSTOKEN        SETC  '&STOKEN'   SET XVARIABLE                         00441000
.ZG116B         AIF   (K'&STOKEN(1) GT 0).ZG116C                        00441100
&ZXSTOKEN       SETC  ''          RESET IN/OUTPUT                       00441200
&ZMS            SETC  ' '         *KRQDA*                               00441300
&ZMS            SETC  '&ZMS "STOKEN" KEY AND ITS'                       00441400
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00441500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00441600
.ZG116C         ANOP  ,                                                 00441700
.*-------------------------------------------------------------------   00441800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00441900
                AIF   (K'&ZXSTOKEN LE 0).ZG116R  NOT I/O                00442000
                AIF   ('&XSTOKEN'(1,1) NE '(').ZG116R                   00442100
&ZCGPR          SETC  '&XSTOKEN'(2,K'&XSTOKEN-2)                        00442200
                AIF   ('&ZCGPR'(1,1) NE '0').ZG116P                     00442300
                AIF   (K'&ZCGPR GT 2).ZG116Q                            00442400
                AIF   ('&ZCGPR' EQ '0').ZG116Q                          00442500
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00442600
                AIF   (T'&ZCGPR NE 'N').ZG116Q  INVALID REG NAME        00442700
.ZG116P         ANOP  ,                                                 00442800
                AIF   (T'&ZCGPR NE 'N').ZG116R  NON NUMERIC             00442900
                AIF   ('&ZCGPR' LT '2').ZG116Q                          00443000
                AIF   ('&ZCGPR' LE '12').ZG116R                         00443100
.ZG116Q         ANOP  ,                                                 00443200
&ZMS            SETC  '"STOKEN='  *KGPRA* MNOTE                         00443300
&ZMS            SETC  '&ZMS.&STOKEN"'                                   00443400
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00443500
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00443600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00443700
.ZG116R         ANOP  ,                                                 00443800
.*------------------------------------------------------------------    00443900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00444000
&XINLIST        SETC  ''          INITIALIZE XVARIABLE                  00444100
.*-------------------------------------------------------------------   00444200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00444300
.ZG120          ANOP  ,                                                 00444400
                AIF   (K'&INLIST(1) LE 0).ZG120A                        00444500
&ZTLC           SETC 'NO'                                               00444600
                AIF   ('&INLIST(1)' NE '&ZTLC').ZG127                   00444700
&XINLIST        SETC  'NO'        SET KEYWORD                           00444800
                AIF   (N'&INLIST LE 1).ZG120A   CK NUM                  00444900
&ZMS            SETC  '"INLIST='  *KPOSA* MNOTE                         00445000
&ZMS            SETC  '&ZMS.&INLIST"'                                   00445100
&ZMS            SETC  '&ZMS "INLIST"'                                   00445200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00445300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00445400
.ZG120A         ANOP  ,                                                 00445500
.*------------------------------------------------------------------    00445600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00445700
&ZCVAL          SETC ''           CLEAR ERROR KEY ACCUMULATOR           00445800
.ZG120A0        AIF   (K'&NUMRANGE LE 0).ZG120A1  OK                    00445900
&ZCVAL          SETC '&ZCVAL NUMRANGE'          INCORRECT KEY USED      00446000
.ZG120A1        AIF   (K'&RANGLIST LE 0).ZG120A2  OK                    00446100
&ZCVAL          SETC '&ZCVAL RANGLIST'          INCORRECT KEY USED      00446200
.ZG120A2        AIF   (K'&ZCVAL LE 0).ZG120A3   OK                      00446300
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00446400
&ZMS            SETC  '"INLIST'   *KMEIA* MNOTE                         00446500
&ZMS            SETC  '&ZMS.=&INLIST"'                                  00446600
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00446700
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00446800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00446900
.ZG120A3        ANOP  ,                                                 00447000
.*----------------------------------------------------------------***   00447100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00447200
                AIF   (N'&START LE 1).ZG122A    CK NUM                  00447300
&ZMS            SETC  '"START='   *KPOSA* MNOTE                         00447400
&ZMS            SETC  '&ZMS.&START"'                                    00447500
&ZMS            SETC  '&ZMS "START"'                                    00447600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00447700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00447800
.ZG122A         ANOP  ,                                                 00447900
.*-------------------------------------------------------------------   00448000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00448100
&ZXSTART        SETC  'INPUT'     SET IN/OUTPUT                         00448200
&XSTART         SETC  '&START(1)'               SET XVARIABLE           00448300
                AIF   (N'&START GT 1).ZG122B    MULTI PARMS             00448400
&XSTART         SETC  '&START'    SET XVARIABLE                         00448500
.ZG122B         AIF   (K'&START(1) GT 0).ZG122C                         00448600
&ZXSTART        SETC  ''          RESET IN/OUTPUT                       00448700
&ZMS            SETC  'WHEN "NO" IS SPECIFIED'  *KRQDA*                 00448800
&ZMS            SETC  '&ZMS , "START" KEY AND ITS'                      00448900
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00449000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00449100
.ZG122C         ANOP  ,                                                 00449200
.*-------------------------------------------------------------------   00449300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00449400
                AIF   (K'&ZXSTART LE 0).ZG122R  NOT I/O                 00449500
                AIF   ('&XSTART'(1,1) NE '(').ZG122R                    00449600
&ZCGPR          SETC  '&XSTART'(2,K'&XSTART-2)                          00449700
                AIF   ('&ZCGPR'(1,1) NE '0').ZG122P                     00449800
                AIF   (K'&ZCGPR GT 2).ZG122Q                            00449900
                AIF   ('&ZCGPR' EQ '0').ZG122Q                          00450000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00450100
                AIF   (T'&ZCGPR NE 'N').ZG122Q  INVALID REG NAME        00450200
.ZG122P         ANOP  ,                                                 00450300
                AIF   (T'&ZCGPR NE 'N').ZG122R  NON NUMERIC             00450400
                AIF   ('&ZCGPR' LT '2').ZG122Q                          00450500
                AIF   ('&ZCGPR' LE '12').ZG122R                         00450600
.ZG122Q         ANOP  ,                                                 00450700
&ZMS            SETC  '"START='   *KGPRA* MNOTE                         00450800
&ZMS            SETC  '&ZMS.&START"'                                    00450900
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00451000
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00451100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00451200
.ZG122R         ANOP  ,                                                 00451300
.*----------------------------------------------------------------***   00451400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00451500
                AIF   (N'&BLOCKS LE 1).ZG125A   CK NUM                  00451600
&ZMS            SETC  '"BLOCKS='  *KPOSA* MNOTE                         00451700
&ZMS            SETC  '&ZMS.&BLOCKS"'                                   00451800
&ZMS            SETC  '&ZMS "BLOCKS"'                                   00451900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00452000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00452100
.ZG125A         ANOP  ,                                                 00452200
.*-------------------------------------------------------------------   00452300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00452400
&ZXBLOCKS       SETC  'INPUT'     SET IN/OUTPUT                         00452500
&XBLOCKS        SETC  '&BLOCKS(1)'              SET XVARIABLE           00452600
                AIF   (N'&BLOCKS GT 1).ZG125B   MULTI PARMS             00452700
&XBLOCKS        SETC  '&BLOCKS'   SET XVARIABLE                         00452800
.ZG125B         AIF   (K'&BLOCKS(1) GT 0).ZG125C                        00452900
&ZXBLOCKS       SETC  ''          RESET IN/OUTPUT                       00453000
&ZMS            SETC  'WHEN "NO" IS SPECIFIED'  *KRQDA*                 00453100
&ZMS            SETC  '&ZMS , "BLOCKS" KEY AND ITS'                     00453200
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00453300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00453400
.ZG125C         ANOP  ,                                                 00453500
.*-------------------------------------------------------------------   00453600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00453700
                AIF   (K'&ZXBLOCKS LE 0).ZG125R  NOT I/O                00453800
                AIF   ('&XBLOCKS'(1,1) NE '(').ZG125R                   00453900
&ZCGPR          SETC  '&XBLOCKS'(2,K'&XBLOCKS-2)                        00454000
                AIF   ('&ZCGPR'(1,1) NE '0').ZG125P                     00454100
                AIF   (K'&ZCGPR GT 2).ZG125Q                            00454200
                AIF   ('&ZCGPR' EQ '0').ZG125Q                          00454300
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00454400
                AIF   (T'&ZCGPR NE 'N').ZG125Q  INVALID REG NAME        00454500
.ZG125P         ANOP  ,                                                 00454600
                AIF   (T'&ZCGPR NE 'N').ZG125R  NON NUMERIC             00454700
                AIF   ('&ZCGPR' LT '2').ZG125Q                          00454800
                AIF   ('&ZCGPR' LE '12').ZG125R                         00454900
.ZG125Q         ANOP  ,                                                 00455000
&ZMS            SETC  '"BLOCKS='  *KGPRA* MNOTE                         00455100
&ZMS            SETC  '&ZMS.&BLOCKS"'                                   00455200
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00455300
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00455400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00455500
.ZG125R         ANOP  ,                                                 00455600
.*-------------------------------------------------------------------   00455700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00455800
.ZG127          ANOP  ,                                                 00455900
&ZTLC           SETC 'YES'                                              00456000
                AIF   ('&INLIST(1)' NE '&ZTLC').ZG134                   00456100
&XINLIST        SETC  'YES'       SET KEYWORD                           00456200
                AIF   (N'&INLIST LE 1).ZG127A   CK NUM                  00456300
&ZMS            SETC  '"INLIST='  *KPOSA* MNOTE                         00456400
&ZMS            SETC  '&ZMS.&INLIST"'                                   00456500
&ZMS            SETC  '&ZMS "INLIST"'                                   00456600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00456700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00456800
.ZG127A         ANOP  ,                                                 00456900
.*------------------------------------------------------------------    00457000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00457100
&ZCVAL          SETC ''           CLEAR ERROR KEY ACCUMULATOR           00457200
.ZG127A0        AIF   (K'&START LE 0).ZG127A1   OK                      00457300
&ZCVAL          SETC '&ZCVAL START'             INCORRECT KEY USED      00457400
.ZG127A1        AIF   (K'&BLOCKS LE 0).ZG127A2  OK                      00457500
&ZCVAL          SETC '&ZCVAL BLOCKS'            INCORRECT KEY USED      00457600
.ZG127A2        AIF   (K'&ZCVAL LE 0).ZG127A3   OK                      00457700
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00457800
&ZMS            SETC  '"INLIST'   *KMEIA* MNOTE                         00457900
&ZMS            SETC  '&ZMS.=&INLIST"'                                  00458000
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00458100
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00458200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00458300
.ZG127A3        ANOP  ,                                                 00458400
.*----------------------------------------------------------------***   00458500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00458600
                AIF   (N'&NUMRANGE LE 1).ZG129A  CK NUM                 00458700
&ZMS            SETC  '"NUMRANGE='              *KPOSA* MNOTE           00458800
&ZMS            SETC  '&ZMS.&NUMRANGE"'                                 00458900
&ZMS            SETC  '&ZMS "NUMRANGE"'                                 00459000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00459100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00459200
.ZG129A         ANOP  ,                                                 00459300
.*-------------------------------------------------------------------   00459400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00459500
&ZXNUMRANGE     SETC  'INPUT'     SET IN/OUTPUT                         00459600
&XNUMRANGE      SETC  '1'                                               00459700
                AIF   (K'&NUMRANGE(1) LE 0).ZG129B  PARM                00459800
&XNUMRANGE      SETC  '&NUMRANGE(1)'            SET XVARIABLE           00459900
                AIF   (N'&NUMRANGE GT 1).ZG129B  MULTI PARMS            00460000
&XNUMRANGE      SETC  '&NUMRANGE'               SET XVARIABLE           00460100
.ZG129B         ANOP  ,                                                 00460200
.*-------------------------------------------------------------------   00460300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00460400
                AIF   (K'&ZXNUMRANGE LE 0).ZG129R  NOT I/O              00460500
                AIF   ('&XNUMRANGE'(1,1) NE '(').ZG129R                 00460600
&ZCGPR          SETC  '&XNUMRANGE'(2,K'&XNUMRANGE-2)                    00460700
                AIF   ('&ZCGPR'(1,1) NE '0').ZG129P                     00460800
                AIF   (K'&ZCGPR GT 2).ZG129Q                            00460900
                AIF   ('&ZCGPR' EQ '0').ZG129Q                          00461000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00461100
                AIF   (T'&ZCGPR NE 'N').ZG129Q  INVALID REG NAME        00461200
.ZG129P         ANOP  ,                                                 00461300
                AIF   (T'&ZCGPR NE 'N').ZG129R  NON NUMERIC             00461400
                AIF   ('&ZCGPR' LT '2').ZG129Q                          00461500
                AIF   ('&ZCGPR' LE '12').ZG129R                         00461600
.ZG129Q         ANOP  ,                                                 00461700
&ZMS            SETC  '"NUMRANGE='              *KGPRA* MNOTE           00461800
&ZMS            SETC  '&ZMS.&NUMRANGE"'                                 00461900
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00462000
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00462100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00462200
.ZG129R         ANOP  ,                                                 00462300
.*----------------------------------------------------------------***   00462400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00462500
                AIF   (N'&RANGLIST LE 1).ZG132A  CK NUM                 00462600
&ZMS            SETC  '"RANGLIST='              *KPOSA* MNOTE           00462700
&ZMS            SETC  '&ZMS.&RANGLIST"'                                 00462800
&ZMS            SETC  '&ZMS "RANGLIST"'                                 00462900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00463000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00463100
.ZG132A         ANOP  ,                                                 00463200
.*-------------------------------------------------------------------   00463300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00463400
&ZXRANGLIST     SETC  'INPUT'     SET IN/OUTPUT                         00463500
&XRANGLIST      SETC  '&RANGLIST(1)'            SET XVARIABLE           00463600
                AIF   (N'&RANGLIST GT 1).ZG132B  MULTI PARMS            00463700
&XRANGLIST      SETC  '&RANGLIST'               SET XVARIABLE           00463800
.ZG132B         AIF   (K'&RANGLIST(1) GT 0).ZG132C                      00463900
&ZXRANGLIST     SETC  ''          RESET IN/OUTPUT                       00464000
&ZMS            SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*                00464100
&ZMS            SETC  '&ZMS , "RANGLIST" KEY AND ITS'                   00464200
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00464300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00464400
.ZG132C         ANOP  ,                                                 00464500
.*-------------------------------------------------------------------   00464600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00464700
                AIF   (K'&ZXRANGLIST LE 0).ZG132R  NOT I/O              00464800
                AIF   ('&XRANGLIST'(1,1) NE '(').ZG132R                 00464900
&ZCGPR          SETC  '&XRANGLIST'(2,K'&XRANGLIST-2)                    00465000
                AIF   ('&ZCGPR'(1,1) NE '0').ZG132P                     00465100
                AIF   (K'&ZCGPR GT 2).ZG132Q                            00465200
                AIF   ('&ZCGPR' EQ '0').ZG132Q                          00465300
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00465400
                AIF   (T'&ZCGPR NE 'N').ZG132Q  INVALID REG NAME        00465500
.ZG132P         ANOP  ,                                                 00465600
                AIF   (T'&ZCGPR NE 'N').ZG132R  NON NUMERIC             00465700
                AIF   ('&ZCGPR' LT '2').ZG132Q                          00465800
                AIF   ('&ZCGPR' LE '12').ZG132R                         00465900
.ZG132Q         ANOP  ,                                                 00466000
&ZMS            SETC  '"RANGLIST='              *KGPRA* MNOTE           00466100
&ZMS            SETC  '&ZMS.&RANGLIST"'                                 00466200
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00466300
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00466400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00466500
.ZG132R         ANOP  ,                                                 00466600
.*------------------------------------------------------------------    00466700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00466800
.ZG134          ANOP  ,                                                 00466900
&ZXINLIST       SETC  'INPUT'     SET IN/OUTPUT                         00467000
                AIF   (K'&XINLIST GT 0).ZG134E  VALID ARG               00467100
                AIF   (T'&INLIST EQ 'O').ZG134D  OMITTED                00467200
&ZASYSLNDX      SETA  0                                                 00467300
.ZG134A         ANOP  ,           POSITIONAL MACRO KEY                  00467400
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00467500
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG134C                 00467600
&ZTLC           SETC 'INLIST'                                           00467700
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG134A        00467800
.ZG134B         ANOP  ,                                                 00467900
&ZXINLIST       SETC  ''          RESET IN/OUTPUT                       00468000
&ZMS            SETC  'THE "INLIST" KEY'        *KOPTA* MNOTE           00468100
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00468200
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00468300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00468400
                AGO   .ZG134E                                           00468500
.ZG134C         ANOP  ,                                                 00468600
&ZXINLIST       SETC  ''          RESET IN/OUTPUT                       00468700
&ZMS            SETC  '"INLIST='  *KUKWA* MNOTE                         00468800
&ZMS            SETC  '&ZMS.&INLIST"'                                   00468900
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00469000
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00469100
&ZMS            SETC  '&ZMS "NO"'                                       00469200
&ZMS            SETC  '&ZMS OR "YES".'                                  00469300
                MNOTE 8,' &ZMS '                                        00469400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00469500
                AGO   .ZG134E                                           00469600
.ZG134D         ANOP  ,                                                 00469700
&XINLIST        SETC  'NO'        SET DEFAULT KEYWORD                   00469800
.ZG134E         ANOP  ,                                                 00469900
.*----------------------------------------------------------------***   00470000
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00470100
                AIF   (N'&DISABLED LE 1).ZG136A  CK NUM                 00470200
&ZMS            SETC  '"DISABLED='              *KPOSA* MNOTE           00470300
&ZMS            SETC  '&ZMS.&DISABLED"'                                 00470400
&ZMS            SETC  '&ZMS "DISABLED"'                                 00470500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00470600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00470700
.ZG136A         ANOP  ,                                                 00470800
.*-------------------------------------------------------------------   00470900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00471000
&XDISABLED      SETC  ''          INITIALIZE XVARIABLE                  00471100
.ZG137A   AIF   ('&DISABLED(1)' NE 'NO').ZG138A                         00471200
&XDISABLED      SETC  'NO'        SET KEYWORD                           00471300
.*-------------------------------------------------------------------   00471400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00471500
.ZG138A   AIF   ('&DISABLED(1)' NE 'YES').ZG139A                        00471600
&XDISABLED      SETC  'YES'       SET KEYWORD                           00471700
.*-------------------------------------------------------------------   00471800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00471900
.ZG139A         AIF   (K'&XDISABLED GT 0).ZG139C  KEYWORD               00472000
                AIF   (K'&DISABLED(1) LE 0).ZG139B                      00472100
&ZMS            SETC  '"DISABLED='              *KUKWA* MNOTE           00472200
&ZMS            SETC  '&ZMS.&DISABLED"'                                 00472300
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00472400
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00472500
&ZMS            SETC  '&ZMS "NO"'                                       00472600
&ZMS            SETC  '&ZMS OR "YES".'                                  00472700
                MNOTE 8,' &ZMS '                                        00472800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00472900
.ZG139B         ANOP  ,                                                 00473000
&XDISABLED      SETC  'NO'        SET DEFAULT KEYWORD                   00473100
.ZG139C         ANOP  ,                                                 00473200
&ZXDISABLED     SETC  'INPUT'     SET IN/OUTPUT                         00473300
.*-------------------------------------------------------------------   00473400
.***AG.KMEKY05 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00473500
&XDEFOP         SETC  ''          INITIALIZE XVARIABLE                  00473600
&ZASYSLNDX      SETA  0                                                 00473700
.ZG141A         ANOP  ,           POSITIONAL KEY SEARCH                 00473800
&ZASYSLNDX      SETA  &ZASYSLNDX+1              NEXT POSITIONAL         00473900
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG141B  DONE                  00474000
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG141A           00474100
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'IOON').ZG141A                00474200
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00474300
&ZXDEFOP        SETC  'INPUT'     SET IN/OUTPUT                         00474400
&XDEFOP         SETC  'IOON'      SET XVARIABLE                         00474500
&ZXIOON         SETC  'INPUT'     SET IN/OUTPUT                         00474600
&XIOON          SETC  'IOON'      SET XVARIABLE PARM                    00474700
.ZG141B         ANOP  ,                                                 00474800
.*-------------------------------------------------------------------   00474900
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00475000
&ZASYSLNDX      SETA  0                                                 00475100
.ZG147A         ANOP  ,           POSITIONAL KEY SEARCH                 00475200
&ZASYSLNDX      SETA  &ZASYSLNDX+1              NEXT POSITIONAL         00475300
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG147C  DONE                  00475400
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG147A           00475500
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'IOOFF').ZG147A               00475600
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00475700
                AIF   (K'&XDEFOP LE 0).ZG147B   VALID                   00475800
&ZMS            SETC  '"IOOFF'    *KMEKA* MNOTE                         00475900
&ZMS            SETC  '&ZMS."'                                          00476000
&ZMS            SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'             00476100
&ZMS            SETC  '&ZMS "&XDEFOP"'                                  00476200
                MNOTE 8,' &ZMS KEY.'                                    00476300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00476400
                AGO   .ZG147C                                           00476500
.*                                                                      00476600
.ZG147B         ANOP  ,                                                 00476700
&ZXDEFOP        SETC  'INPUT'     SET IN/OUTPUT                         00476800
&XDEFOP         SETC  'IOOFF'     SET XVARIABLE                         00476900
&ZXIOOFF        SETC  'INPUT'     SET IN/OUTPUT                         00477000
&XIOOFF         SETC  'IOOFF'     SET XVARIABLE PARM                    00477100
.ZG147C         ANOP  ,                                                 00477200
.*-------------------------------------------------------------------   00477300
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00477400
&ZASYSLNDX      SETA  0                                                 00477500
.ZG148A         ANOP  ,           POSITIONAL KEY SEARCH                 00477600
&ZASYSLNDX      SETA  &ZASYSLNDX+1              NEXT POSITIONAL         00477700
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG148C  DONE                  00477800
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG148A           00477900
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'DREFON').ZG148A              00478000
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00478100
                AIF   (K'&XDEFOP LE 0).ZG148B   VALID                   00478200
&ZMS            SETC  '"DREFON'   *KMEKA* MNOTE                         00478300
&ZMS            SETC  '&ZMS."'                                          00478400
&ZMS            SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'             00478500
&ZMS            SETC  '&ZMS "&XDEFOP"'                                  00478600
                MNOTE 8,' &ZMS KEY.'                                    00478700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00478800
                AGO   .ZG148C                                           00478900
.*                                                                      00479000
.ZG148B         ANOP  ,                                                 00479100
&ZXDEFOP        SETC  'INPUT'     SET IN/OUTPUT                         00479200
&XDEFOP         SETC  'DREFON'    SET XVARIABLE                         00479300
&ZXDREFON       SETC  'INPUT'     SET IN/OUTPUT                         00479400
&XDREFON        SETC  'DREFON'    SET XVARIABLE PARM                    00479500
.ZG148C         ANOP  ,                                                 00479600
.*-------------------------------------------------------------------   00479700
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00479800
&ZASYSLNDX      SETA  0                                                 00479900
.ZG149A         ANOP  ,           POSITIONAL KEY SEARCH                 00480000
&ZASYSLNDX      SETA  &ZASYSLNDX+1              NEXT POSITIONAL         00480100
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG149C  DONE                  00480200
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG149A           00480300
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'DREFOFF').ZG149A             00480400
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00480500
                AIF   (K'&XDEFOP LE 0).ZG149B   VALID                   00480600
&ZMS            SETC  '"DREFOFF'  *KMEKA* MNOTE                         00480700
&ZMS            SETC  '&ZMS."'                                          00480800
&ZMS            SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'             00480900
&ZMS            SETC  '&ZMS "&XDEFOP"'                                  00481000
                MNOTE 8,' &ZMS KEY.'                                    00481100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00481200
                AGO   .ZG149C                                           00481300
.*                                                                      00481400
.ZG149B         ANOP  ,                                                 00481500
&ZXDEFOP        SETC  'INPUT'     SET IN/OUTPUT                         00481600
&XDEFOP         SETC  'DREFOFF'   SET XVARIABLE                         00481700
&ZXDREFOFF      SETC  'INPUT'     SET IN/OUTPUT                         00481800
&XDREFOFF       SETC  'DREFOFF'   SET XVARIABLE PARM                    00481900
.ZG149C         ANOP  ,                                                 00482000
.*------------------------------------------------------------------    00482100
.***AG.KME4Y09 VALUE, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED          00482200
                AIF   (K'&XDEFOP GT 0).ZG155B                           00482300
&ZXDEFOP        SETC  ''          RESET IN/OUTPUT                       00482400
&ZXIOON         SETC  ''          RESET IN/OUTPUT                       00482500
&XDEFOP         SETC  ''          ENSURE NULL                           00482600
&XIOON          SETC  ''          ENSURE NULL                           00482700
&ZMS            SETC  'ONE OF THE FOLLOWING'    *KMERA* MNOTE           00482800
&ZMS            SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'               00482900
&ZMS            SETC  '&ZMS REQUIRED:'                                  00483000
&ZMS            SETC  '&ZMS "IOON",'            VALID ME KEY            00483100
&ZMS            SETC  '&ZMS "IOOFF",'           VALID ME KEY            00483200
&ZMS            SETC  '&ZMS "DREFON",'          VALID ME KEY            00483300
&ZMS            SETC  '&ZMS OR "DREFOFF".'      VALID ME KEY            00483400
                MNOTE 8,' &ZMS '                                        00483500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00483600
.ZG155B         ANOP  ,                                                 00483700
.*-------------------------------------------------------------------   00483800
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00483900
.ZG141          AIF   ('&XDEFOP' NE 'IOON').ZG147                       00484000
.*-------------------------------------------------------------------   00484100
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00484200
&ZCVAL          SETC ''           ERROR KEY FIELD                       00484300
.ZG141I0        AIF   (K'&FORCE LE 0).ZG141I1                           00484400
&ZCVAL          SETC '&ZCVAL FORCE'             DISALLOWED KEY          00484500
.ZG141I1        AIF   (K'&ZCVAL LE 0).ZG141J    KEY                     00484600
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00484700
&ZMS            SETC  '"IOON'     *KMEIA* MNOTE                         00484800
&ZMS            SETC  '&ZMS."'                                          00484900
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00485000
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00485100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00485200
.ZG141J         ANOP  ,                                                 00485300
.*----------------------------------------------------------------***   00485400
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00485500
                AIF   (N'&LONG LE 1).ZG143A     CK NUM                  00485600
&ZMS            SETC  '"LONG='    *KPOSA* MNOTE                         00485700
&ZMS            SETC  '&ZMS.&LONG"'                                     00485800
&ZMS            SETC  '&ZMS "LONG"'                                     00485900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00486000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00486100
.ZG143A         ANOP  ,                                                 00486200
.*-------------------------------------------------------------------   00486300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00486400
&XLONG          SETC  ''          INITIALIZE XVARIABLE                  00486500
.ZG144A   AIF   ('&LONG(1)' NE 'YES').ZG145A                            00486600
&XLONG          SETC  'YES'       SET KEYWORD                           00486700
.*-------------------------------------------------------------------   00486800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00486900
.ZG145A   AIF   ('&LONG(1)' NE 'NO').ZG146A                             00487000
&XLONG          SETC  'NO'        SET KEYWORD                           00487100
.*-------------------------------------------------------------------   00487200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00487300
.ZG146A         AIF   (K'&XLONG GT 0).ZG146C    KEYWORD                 00487400
                AIF   (K'&LONG(1) LE 0).ZG146B                          00487500
&ZMS            SETC  '"LONG='    *KUKWA* MNOTE                         00487600
&ZMS            SETC  '&ZMS.&LONG"'                                     00487700
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00487800
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00487900
&ZMS            SETC  '&ZMS "YES"'                                      00488000
&ZMS            SETC  '&ZMS OR "NO".'                                   00488100
                MNOTE 8,' &ZMS '                                        00488200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00488300
.ZG146B         ANOP  ,                                                 00488400
&XLONG          SETC  'YES'       SET DEFAULT KEYWORD                   00488500
.ZG146C         ANOP  ,                                                 00488600
&ZXLONG         SETC  'INPUT'     SET IN/OUTPUT                         00488700
.*-------------------------------------------------------------------   00488800
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00488900
.ZG147          AIF   ('&XDEFOP' NE 'IOOFF').ZG148                      00489000
.*-------------------------------------------------------------------   00489100
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00489200
&ZCVAL          SETC ''           ERROR KEY FIELD                       00489300
.ZG147I0        AIF   (K'&LONG LE 0).ZG147I1                            00489400
&ZCVAL          SETC '&ZCVAL LONG'              DISALLOWED KEY          00489500
.ZG147I1        AIF   (K'&FORCE LE 0).ZG147I2                           00489600
&ZCVAL          SETC '&ZCVAL FORCE'             DISALLOWED KEY          00489700
.ZG147I2        AIF   (K'&ZCVAL LE 0).ZG147J    KEY                     00489800
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00489900
&ZMS            SETC  '"IOOFF'    *KMEIA* MNOTE                         00490000
&ZMS            SETC  '&ZMS."'                                          00490100
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00490200
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00490300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00490400
.ZG147J         ANOP  ,                                                 00490500
.*-------------------------------------------------------------------   00490600
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00490700
.ZG148          AIF   ('&XDEFOP' NE 'DREFON').ZG149                     00490800
.*-------------------------------------------------------------------   00490900
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00491000
&ZCVAL          SETC ''           ERROR KEY FIELD                       00491100
.ZG148I0        AIF   (K'&LONG LE 0).ZG148I1                            00491200
&ZCVAL          SETC '&ZCVAL LONG'              DISALLOWED KEY          00491300
.ZG148I1        AIF   (K'&FORCE LE 0).ZG148I2                           00491400
&ZCVAL          SETC '&ZCVAL FORCE'             DISALLOWED KEY          00491500
.ZG148I2        AIF   (K'&ZCVAL LE 0).ZG148J    KEY                     00491600
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00491700
&ZMS            SETC  '"DREFON'   *KMEIA* MNOTE                         00491800
&ZMS            SETC  '&ZMS."'                                          00491900
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00492000
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00492100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00492200
.ZG148J         ANOP  ,                                                 00492300
.*-------------------------------------------------------------------   00492400
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00492500
.ZG149          AIF   ('&XDEFOP' NE 'DREFOFF').ZG155                    00492600
.*-------------------------------------------------------------------   00492700
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00492800
&ZCVAL          SETC ''           ERROR KEY FIELD                       00492900
.ZG149I0        AIF   (K'&LONG LE 0).ZG149I1                            00493000
&ZCVAL          SETC '&ZCVAL LONG'              DISALLOWED KEY          00493100
.ZG149I1        AIF   (K'&ZCVAL LE 0).ZG149J    KEY                     00493200
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00493300
&ZMS            SETC  '"DREFOFF'  *KMEIA* MNOTE                         00493400
&ZMS            SETC  '&ZMS."'                                          00493500
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00493600
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00493700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00493800
.ZG149J         ANOP  ,                                                 00493900
.*----------------------------------------------------------------***   00494000
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00494100
                AIF   (N'&FORCE LE 1).ZG151A    CK NUM                  00494200
&ZMS            SETC  '"FORCE='   *KPOSA* MNOTE                         00494300
&ZMS            SETC  '&ZMS.&FORCE"'                                    00494400
&ZMS            SETC  '&ZMS "FORCE"'                                    00494500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00494600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00494700
.ZG151A         ANOP  ,                                                 00494800
.*-------------------------------------------------------------------   00494900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00495000
&XFORCE         SETC  ''          INITIALIZE XVARIABLE                  00495100
.ZG152A   AIF   ('&FORCE(1)' NE 'NO').ZG153A                            00495200
&XFORCE         SETC  'NO'        SET KEYWORD                           00495300
.*-------------------------------------------------------------------   00495400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00495500
.ZG153A   AIF   ('&FORCE(1)' NE 'YES').ZG154A                           00495600
&XFORCE         SETC  'YES'       SET KEYWORD                           00495700
.*-------------------------------------------------------------------   00495800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00495900
.ZG154A         AIF   (K'&XFORCE GT 0).ZG154C   KEYWORD                 00496000
                AIF   (K'&FORCE(1) LE 0).ZG154B                         00496100
&ZMS            SETC  '"FORCE='   *KUKWA* MNOTE                         00496200
&ZMS            SETC  '&ZMS.&FORCE"'                                    00496300
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00496400
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00496500
&ZMS            SETC  '&ZMS "NO"'                                       00496600
&ZMS            SETC  '&ZMS OR "YES".'                                  00496700
                MNOTE 8,' &ZMS '                                        00496800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00496900
.ZG154B         ANOP  ,                                                 00497000
&XFORCE         SETC  'NO'        SET DEFAULT KEYWORD                   00497100
.ZG154C         ANOP  ,                                                 00497200
&ZXFORCE        SETC  'INPUT'     SET IN/OUTPUT                         00497300
.*-------------------------------------------------------------------   00497400
.***AG.KMEKY15 VALUE, RQD INPUT, ME KEYS -END                           00497500
.ZG155          ANOP  ,           END MUTUALLY EXCLUSIVE KEYS           00497600
.*-------------------------------------------------------------------   00497700
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00497800
.ZG156          AIF   ('&XSERVICE' NE 'EXTEND').ZG171                   00497900
.*-------------------------------------------------------------------   00498000
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00498100
&ZCVAL          SETC ''           ERROR KEY FIELD                       00498200
.ZG156I0        AIF   (K'&NAME LE 0).ZG156I1                            00498300
&ZCVAL          SETC '&ZCVAL NAME'              DISALLOWED KEY          00498400
.ZG156I1        AIF   (K'&GENNAME LE 0).ZG156I2                         00498500
&ZCVAL          SETC '&ZCVAL GENNAME'           DISALLOWED KEY          00498600
.ZG156I2        AIF   (K'&OUTNAME LE 0).ZG156I3                         00498700
&ZCVAL          SETC '&ZCVAL OUTNAME'           DISALLOWED KEY          00498800
.ZG156I3        AIF   (K'&TYPE LE 0).ZG156I4                            00498900
&ZCVAL          SETC '&ZCVAL TYPE'              DISALLOWED KEY          00499000
.ZG156I4        AIF   (K'&DREF LE 0).ZG156I5                            00499100
&ZCVAL          SETC '&ZCVAL DREF'              DISALLOWED KEY          00499200
.ZG156I5        AIF   (K'&SCOPE LE 0).ZG156I6                           00499300
&ZCVAL          SETC '&ZCVAL SCOPE'             DISALLOWED KEY          00499400
.ZG156I6        AIF   (K'&BACK LE 0).ZG156I7                            00499500
&ZCVAL          SETC '&ZCVAL BACK'              DISALLOWED KEY          00499600
.ZG156I7        AIF   (K'&HSTYPE LE 0).ZG156I8                          00499700
&ZCVAL          SETC '&ZCVAL HSTYPE'            DISALLOWED KEY          00499800
.ZG156I8        AIF   (K'&SHARE LE 0).ZG156I9                           00499900
&ZCVAL          SETC '&ZCVAL SHARE'             DISALLOWED KEY          00500000
.ZG156I9        AIF   (K'&CASTOUT LE 0).ZG156I10                        00500100
&ZCVAL          SETC '&ZCVAL CASTOUT'           DISALLOWED KEY          00500200
.ZG156I10       AIF   (K'&XCALLERKEY LE 0).ZG156I11                     00500300
&ZCVAL          SETC '&ZCVAL XCALLERKEY'        DISALLOWED KEY          00500400
.ZG156I11       AIF   (K'&KEY LE 0).ZG156I12                            00500500
&ZCVAL          SETC '&ZCVAL KEY'               DISALLOWED KEY          00500600
.ZG156I12       AIF   (K'&FPROT LE 0).ZG156I13                          00500700
&ZCVAL          SETC '&ZCVAL FPROT'             DISALLOWED KEY          00500800
.ZG156I13       AIF   (K'&TTOKEN LE 0).ZG156I14                         00500900
&ZCVAL          SETC '&ZCVAL TTOKEN'            DISALLOWED KEY          00501000
.ZG156I14       AIF   (K'&ORIGIN LE 0).ZG156I15                         00501100
&ZCVAL          SETC '&ZCVAL ORIGIN'            DISALLOWED KEY          00501200
.ZG156I15       AIF   (K'&INLIST LE 0).ZG156I16                         00501300
&ZCVAL          SETC '&ZCVAL INLIST'            DISALLOWED KEY          00501400
.ZG156I16       AIF   (K'&START LE 0).ZG156I17                          00501500
&ZCVAL          SETC '&ZCVAL START'             DISALLOWED KEY          00501600
.ZG156I17       AIF   (K'&NUMRANGE LE 0).ZG156I18                       00501700
&ZCVAL          SETC '&ZCVAL NUMRANGE'          DISALLOWED KEY          00501800
.ZG156I18       AIF   (K'&RANGLIST LE 0).ZG156I19                       00501900
&ZCVAL          SETC '&ZCVAL RANGLIST'          DISALLOWED KEY          00502000
.ZG156I19       AIF   (K'&DISABLED LE 0).ZG156I20                       00502100
&ZCVAL          SETC '&ZCVAL DISABLED'          DISALLOWED KEY          00502200
.ZG156I20       AIF   (K'&XIOON LE 0).ZG156I21                          00502300
&ZCVAL          SETC '&ZCVAL XIOON'             DISALLOWED KEY          00502400
.ZG156I21       AIF   (K'&LONG LE 0).ZG156I22                           00502500
&ZCVAL          SETC '&ZCVAL LONG'              DISALLOWED KEY          00502600
.ZG156I22       AIF   (K'&XIOOFF LE 0).ZG156I23                         00502700
&ZCVAL          SETC '&ZCVAL XIOOFF'            DISALLOWED KEY          00502800
.ZG156I23       AIF   (K'&XDREFON LE 0).ZG156I24                        00502900
&ZCVAL          SETC '&ZCVAL XDREFON'           DISALLOWED KEY          00503000
.ZG156I24       AIF   (K'&XDREFOFF LE 0).ZG156I25                       00503100
&ZCVAL          SETC '&ZCVAL XDREFOFF'          DISALLOWED KEY          00503200
.ZG156I25       AIF   (K'&FORCE LE 0).ZG156I26                          00503300
&ZCVAL          SETC '&ZCVAL FORCE'             DISALLOWED KEY          00503400
.ZG156I26       AIF   (K'&ZCVAL LE 0).ZG156J    KEY                     00503500
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00503600
                AIF  (K'&ZCVAL LE 160).ZG156K                           00503700
&ZCVAL          SETC '&ZCVAL'(1,160)                                    00503800
&ZCVAL          SETC '&ZCVAL....'                                       00503900
.ZG156K         ANOP                                                    00504000
&ZMS            SETC  '"EXTEND'   *KMEIA* MNOTE                         00504100
&ZMS            SETC  '&ZMS."'                                          00504200
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00504300
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00504400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00504500
.ZG156J         ANOP  ,                                                 00504600
.*----------------------------------------------------------------***   00504700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00504800
                AIF   (N'&STOKEN LE 1).ZG158A   CK NUM                  00504900
&ZMS            SETC  '"STOKEN='  *KPOSA* MNOTE                         00505000
&ZMS            SETC  '&ZMS.&STOKEN"'                                   00505100
&ZMS            SETC  '&ZMS "STOKEN"'                                   00505200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00505300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00505400
.ZG158A         ANOP  ,                                                 00505500
.*-------------------------------------------------------------------   00505600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00505700
&ZXSTOKEN       SETC  'INPUT'     SET IN/OUTPUT                         00505800
&XSTOKEN        SETC  '&STOKEN(1)'              SET XVARIABLE           00505900
                AIF   (N'&STOKEN GT 1).ZG158B   MULTI PARMS             00506000
&XSTOKEN        SETC  '&STOKEN'   SET XVARIABLE                         00506100
.ZG158B         AIF   (K'&STOKEN(1) GT 0).ZG158C                        00506200
&ZXSTOKEN       SETC  ''          RESET IN/OUTPUT                       00506300
&ZMS            SETC  ' '         *KRQDA*                               00506400
&ZMS            SETC  '&ZMS "STOKEN" KEY AND ITS'                       00506500
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00506600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00506700
.ZG158C         ANOP  ,                                                 00506800
.*-------------------------------------------------------------------   00506900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00507000
                AIF   (K'&ZXSTOKEN LE 0).ZG158R  NOT I/O                00507100
                AIF   ('&XSTOKEN'(1,1) NE '(').ZG158R                   00507200
&ZCGPR          SETC  '&XSTOKEN'(2,K'&XSTOKEN-2)                        00507300
                AIF   ('&ZCGPR'(1,1) NE '0').ZG158P                     00507400
                AIF   (K'&ZCGPR GT 2).ZG158Q                            00507500
                AIF   ('&ZCGPR' EQ '0').ZG158Q                          00507600
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00507700
                AIF   (T'&ZCGPR NE 'N').ZG158Q  INVALID REG NAME        00507800
.ZG158P         ANOP  ,                                                 00507900
                AIF   (T'&ZCGPR NE 'N').ZG158R  NON NUMERIC             00508000
                AIF   ('&ZCGPR' LT '2').ZG158Q                          00508100
                AIF   ('&ZCGPR' LE '12').ZG158R                         00508200
.ZG158Q         ANOP  ,                                                 00508300
&ZMS            SETC  '"STOKEN='  *KGPRA* MNOTE                         00508400
&ZMS            SETC  '&ZMS.&STOKEN"'                                   00508500
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00508600
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00508700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00508800
.ZG158R         ANOP  ,                                                 00508900
.*----------------------------------------------------------------***   00509000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00509100
                AIF   (N'&BLOCKS LE 1).ZG161A   CK NUM                  00509200
&ZMS            SETC  '"BLOCKS='  *KPOSA* MNOTE                         00509300
&ZMS            SETC  '&ZMS.&BLOCKS"'                                   00509400
&ZMS            SETC  '&ZMS "BLOCKS"'                                   00509500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00509600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00509700
.ZG161A         ANOP  ,                                                 00509800
.*-------------------------------------------------------------------   00509900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00510000
&ZXBLOCKS       SETC  'INPUT'     SET IN/OUTPUT                         00510100
&XBLOCKS        SETC  '&BLOCKS(1)'              SET XVARIABLE           00510200
                AIF   (N'&BLOCKS GT 1).ZG161B   MULTI PARMS             00510300
&XBLOCKS        SETC  '&BLOCKS'   SET XVARIABLE                         00510400
.ZG161B         AIF   (K'&BLOCKS(1) GT 0).ZG161C                        00510500
&ZXBLOCKS       SETC  ''          RESET IN/OUTPUT                       00510600
&ZMS            SETC  ' '         *KRQDA*                               00510700
&ZMS            SETC  '&ZMS "BLOCKS" KEY AND ITS'                       00510800
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00510900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00511000
.ZG161C         ANOP  ,                                                 00511100
.*-------------------------------------------------------------------   00511200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00511300
                AIF   (K'&ZXBLOCKS LE 0).ZG161R  NOT I/O                00511400
                AIF   ('&XBLOCKS'(1,1) NE '(').ZG161R                   00511500
&ZCGPR          SETC  '&XBLOCKS'(2,K'&XBLOCKS-2)                        00511600
                AIF   ('&ZCGPR'(1,1) NE '0').ZG161P                     00511700
                AIF   (K'&ZCGPR GT 2).ZG161Q                            00511800
                AIF   ('&ZCGPR' EQ '0').ZG161Q                          00511900
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00512000
                AIF   (T'&ZCGPR NE 'N').ZG161Q  INVALID REG NAME        00512100
.ZG161P         ANOP  ,                                                 00512200
                AIF   (T'&ZCGPR NE 'N').ZG161R  NON NUMERIC             00512300
                AIF   ('&ZCGPR' LT '2').ZG161Q                          00512400
                AIF   ('&ZCGPR' LE '12').ZG161R                         00512500
.ZG161Q         ANOP  ,                                                 00512600
&ZMS            SETC  '"BLOCKS='  *KGPRA* MNOTE                         00512700
&ZMS            SETC  '&ZMS.&BLOCKS"'                                   00512800
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00512900
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00513000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00513100
.ZG161R         ANOP  ,                                                 00513200
.*----------------------------------------------------------------***   00513300
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00513400
                AIF   (N'&VAR LE 1).ZG164A      CK NUM                  00513500
&ZMS            SETC  '"VAR='     *KPOSA* MNOTE                         00513600
&ZMS            SETC  '&ZMS.&VAR"'                                      00513700
&ZMS            SETC  '&ZMS "VAR"'                                      00513800
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00513900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00514000
.ZG164A         ANOP  ,                                                 00514100
.*-------------------------------------------------------------------   00514200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00514300
&XVAR           SETC  ''          INITIALIZE XVARIABLE                  00514400
.ZG165A   AIF   ('&VAR(1)' NE 'NO').ZG166A                              00514500
&XVAR           SETC  'NO'        SET KEYWORD                           00514600
.*-------------------------------------------------------------------   00514700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00514800
.ZG166A   AIF   ('&VAR(1)' NE 'YES').ZG167A                             00514900
&XVAR           SETC  'YES'       SET KEYWORD                           00515000
.*-------------------------------------------------------------------   00515100
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00515200
.ZG167A         AIF   (K'&XVAR GT 0).ZG167C     KEYWORD                 00515300
                AIF   (K'&VAR(1) LE 0).ZG167B                           00515400
&ZMS            SETC  '"VAR='     *KUKWA* MNOTE                         00515500
&ZMS            SETC  '&ZMS.&VAR"'                                      00515600
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00515700
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00515800
&ZMS            SETC  '&ZMS "NO"'                                       00515900
&ZMS            SETC  '&ZMS OR "YES".'                                  00516000
                MNOTE 8,' &ZMS '                                        00516100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00516200
.ZG167B         ANOP  ,                                                 00516300
&XVAR           SETC  'NO'        SET DEFAULT KEYWORD                   00516400
.ZG167C         ANOP  ,                                                 00516500
&ZXVAR          SETC  'INPUT'     SET IN/OUTPUT                         00516600
.*----------------------------------------------------------------***   00516700
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00516800
                AIF   (N'&NUMBLKS LE 1).ZG169A  CK NUM                  00516900
&ZMS            SETC  '"NUMBLKS='               *KPOSA* MNOTE           00517000
&ZMS            SETC  '&ZMS.&NUMBLKS"'                                  00517100
&ZMS            SETC  '&ZMS "NUMBLKS"'                                  00517200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00517300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00517400
.ZG169A         ANOP  ,                                                 00517500
.*-------------------------------------------------------------------   00517600
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00517700
                AIF   (K'&NUMBLKS(1) LE 0).ZG169C  NO PARM              00517800
&ZXNUMBLKS      SETC  'OUTPUT'    SET OUTPUT                            00517900
&XNUMBLKS       SETC  '&NUMBLKS(1)'             SET XVARIABLE           00518000
                AIF   (N'&NUMBLKS GT 1).ZG169C                          00518100
&XNUMBLKS       SETC  '&NUMBLKS'  SET XVARIABLE                         00518200
.ZG169C         ANOP  ,                                                 00518300
.*-------------------------------------------------------------------   00518400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00518500
                AIF   (K'&ZXNUMBLKS LE 0).ZG169R  NOT I/O               00518600
                AIF   ('&XNUMBLKS'(1,1) NE '(').ZG169R                  00518700
&ZCGPR          SETC  '&XNUMBLKS'(2,K'&XNUMBLKS-2)                      00518800
                AIF   ('&ZCGPR'(1,1) NE '0').ZG169P                     00518900
                AIF   (K'&ZCGPR GT 2).ZG169Q                            00519000
                AIF   ('&ZCGPR' EQ '0').ZG169Q                          00519100
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00519200
                AIF   (T'&ZCGPR NE 'N').ZG169Q  INVALID REG NAME        00519300
.ZG169P         ANOP  ,                                                 00519400
                AIF   (T'&ZCGPR NE 'N').ZG169R  NON NUMERIC             00519500
                AIF   ('&ZCGPR' LT '2').ZG169Q                          00519600
                AIF   ('&ZCGPR' LE '12').ZG169R                         00519700
.ZG169Q         ANOP  ,                                                 00519800
&ZMS            SETC  '"NUMBLKS='               *KGPRA* MNOTE           00519900
&ZMS            SETC  '&ZMS.&NUMBLKS"'                                  00520000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00520100
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00520200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00520300
.ZG169R         ANOP  ,                                                 00520400
.*-------------------------------------------------------------------   00520500
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00520600
.ZG171          AIF   ('&XSERVICE' NE 'OUT').ZG181                      00520700
.*-------------------------------------------------------------------   00520800
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00520900
&ZCVAL          SETC ''           ERROR KEY FIELD                       00521000
.ZG171I0        AIF   (K'&NAME LE 0).ZG171I1                            00521100
&ZCVAL          SETC '&ZCVAL NAME'              DISALLOWED KEY          00521200
.ZG171I1        AIF   (K'&GENNAME LE 0).ZG171I2                         00521300
&ZCVAL          SETC '&ZCVAL GENNAME'           DISALLOWED KEY          00521400
.ZG171I2        AIF   (K'&OUTNAME LE 0).ZG171I3                         00521500
&ZCVAL          SETC '&ZCVAL OUTNAME'           DISALLOWED KEY          00521600
.ZG171I3        AIF   (K'&TYPE LE 0).ZG171I4                            00521700
&ZCVAL          SETC '&ZCVAL TYPE'              DISALLOWED KEY          00521800
.ZG171I4        AIF   (K'&DREF LE 0).ZG171I5                            00521900
&ZCVAL          SETC '&ZCVAL DREF'              DISALLOWED KEY          00522000
.ZG171I5        AIF   (K'&SCOPE LE 0).ZG171I6                           00522100
&ZCVAL          SETC '&ZCVAL SCOPE'             DISALLOWED KEY          00522200
.ZG171I6        AIF   (K'&BACK LE 0).ZG171I7                            00522300
&ZCVAL          SETC '&ZCVAL BACK'              DISALLOWED KEY          00522400
.ZG171I7        AIF   (K'&HSTYPE LE 0).ZG171I8                          00522500
&ZCVAL          SETC '&ZCVAL HSTYPE'            DISALLOWED KEY          00522600
.ZG171I8        AIF   (K'&SHARE LE 0).ZG171I9                           00522700
&ZCVAL          SETC '&ZCVAL SHARE'             DISALLOWED KEY          00522800
.ZG171I9        AIF   (K'&CASTOUT LE 0).ZG171I10                        00522900
&ZCVAL          SETC '&ZCVAL CASTOUT'           DISALLOWED KEY          00523000
.ZG171I10       AIF   (K'&XCALLERKEY LE 0).ZG171I11                     00523100
&ZCVAL          SETC '&ZCVAL XCALLERKEY'        DISALLOWED KEY          00523200
.ZG171I11       AIF   (K'&KEY LE 0).ZG171I12                            00523300
&ZCVAL          SETC '&ZCVAL KEY'               DISALLOWED KEY          00523400
.ZG171I12       AIF   (K'&FPROT LE 0).ZG171I13                          00523500
&ZCVAL          SETC '&ZCVAL FPROT'             DISALLOWED KEY          00523600
.ZG171I13       AIF   (K'&TTOKEN LE 0).ZG171I14                         00523700
&ZCVAL          SETC '&ZCVAL TTOKEN'            DISALLOWED KEY          00523800
.ZG171I14       AIF   (K'&ORIGIN LE 0).ZG171I15                         00523900
&ZCVAL          SETC '&ZCVAL ORIGIN'            DISALLOWED KEY          00524000
.ZG171I15       AIF   (K'&NUMBLKS LE 0).ZG171I16                        00524100
&ZCVAL          SETC '&ZCVAL NUMBLKS'           DISALLOWED KEY          00524200
.ZG171I16       AIF   (K'&INLIST LE 0).ZG171I17                         00524300
&ZCVAL          SETC '&ZCVAL INLIST'            DISALLOWED KEY          00524400
.ZG171I17       AIF   (K'&NUMRANGE LE 0).ZG171I18                       00524500
&ZCVAL          SETC '&ZCVAL NUMRANGE'          DISALLOWED KEY          00524600
.ZG171I18       AIF   (K'&RANGLIST LE 0).ZG171I19                       00524700
&ZCVAL          SETC '&ZCVAL RANGLIST'          DISALLOWED KEY          00524800
.ZG171I19       AIF   (K'&DISABLED LE 0).ZG171I20                       00524900
&ZCVAL          SETC '&ZCVAL DISABLED'          DISALLOWED KEY          00525000
.ZG171I20       AIF   (K'&XIOON LE 0).ZG171I21                          00525100
&ZCVAL          SETC '&ZCVAL XIOON'             DISALLOWED KEY          00525200
.ZG171I21       AIF   (K'&LONG LE 0).ZG171I22                           00525300
&ZCVAL          SETC '&ZCVAL LONG'              DISALLOWED KEY          00525400
.ZG171I22       AIF   (K'&XIOOFF LE 0).ZG171I23                         00525500
&ZCVAL          SETC '&ZCVAL XIOOFF'            DISALLOWED KEY          00525600
.ZG171I23       AIF   (K'&XDREFON LE 0).ZG171I24                        00525700
&ZCVAL          SETC '&ZCVAL XDREFON'           DISALLOWED KEY          00525800
.ZG171I24       AIF   (K'&XDREFOFF LE 0).ZG171I25                       00525900
&ZCVAL          SETC '&ZCVAL XDREFOFF'          DISALLOWED KEY          00526000
.ZG171I25       AIF   (K'&FORCE LE 0).ZG171I26                          00526100
&ZCVAL          SETC '&ZCVAL FORCE'             DISALLOWED KEY          00526200
.ZG171I26       AIF   (K'&VAR LE 0).ZG171I27                            00526300
&ZCVAL          SETC '&ZCVAL VAR'               DISALLOWED KEY          00526400
.ZG171I27       AIF   (K'&ZCVAL LE 0).ZG171J    KEY                     00526500
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00526600
                AIF  (K'&ZCVAL LE 160).ZG171K                           00526700
&ZCVAL          SETC '&ZCVAL'(1,160)                                    00526800
&ZCVAL          SETC '&ZCVAL....'                                       00526900
.ZG171K         ANOP                                                    00527000
&ZMS            SETC  '"OUT'      *KMEIA* MNOTE                         00527100
&ZMS            SETC  '&ZMS."'                                          00527200
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00527300
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00527400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00527500
.ZG171J         ANOP  ,                                                 00527600
.*----------------------------------------------------------------***   00527700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00527800
                AIF   (N'&STOKEN LE 1).ZG173A   CK NUM                  00527900
&ZMS            SETC  '"STOKEN='  *KPOSA* MNOTE                         00528000
&ZMS            SETC  '&ZMS.&STOKEN"'                                   00528100
&ZMS            SETC  '&ZMS "STOKEN"'                                   00528200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00528300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00528400
.ZG173A         ANOP  ,                                                 00528500
.*-------------------------------------------------------------------   00528600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00528700
&ZXSTOKEN       SETC  'INPUT'     SET IN/OUTPUT                         00528800
&XSTOKEN        SETC  '&STOKEN(1)'              SET XVARIABLE           00528900
                AIF   (N'&STOKEN GT 1).ZG173B   MULTI PARMS             00529000
&XSTOKEN        SETC  '&STOKEN'   SET XVARIABLE                         00529100
.ZG173B         AIF   (K'&STOKEN(1) GT 0).ZG173C                        00529200
&ZXSTOKEN       SETC  ''          RESET IN/OUTPUT                       00529300
&ZMS            SETC  ' '         *KRQDA*                               00529400
&ZMS            SETC  '&ZMS "STOKEN" KEY AND ITS'                       00529500
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00529600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00529700
.ZG173C         ANOP  ,                                                 00529800
.*-------------------------------------------------------------------   00529900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00530000
                AIF   (K'&ZXSTOKEN LE 0).ZG173R  NOT I/O                00530100
                AIF   ('&XSTOKEN'(1,1) NE '(').ZG173R                   00530200
&ZCGPR          SETC  '&XSTOKEN'(2,K'&XSTOKEN-2)                        00530300
                AIF   ('&ZCGPR'(1,1) NE '0').ZG173P                     00530400
                AIF   (K'&ZCGPR GT 2).ZG173Q                            00530500
                AIF   ('&ZCGPR' EQ '0').ZG173Q                          00530600
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00530700
                AIF   (T'&ZCGPR NE 'N').ZG173Q  INVALID REG NAME        00530800
.ZG173P         ANOP  ,                                                 00530900
                AIF   (T'&ZCGPR NE 'N').ZG173R  NON NUMERIC             00531000
                AIF   ('&ZCGPR' LT '2').ZG173Q                          00531100
                AIF   ('&ZCGPR' LE '12').ZG173R                         00531200
.ZG173Q         ANOP  ,                                                 00531300
&ZMS            SETC  '"STOKEN='  *KGPRA* MNOTE                         00531400
&ZMS            SETC  '&ZMS.&STOKEN"'                                   00531500
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00531600
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00531700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00531800
.ZG173R         ANOP  ,                                                 00531900
.*----------------------------------------------------------------***   00532000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00532100
                AIF   (N'&START LE 1).ZG176A    CK NUM                  00532200
&ZMS            SETC  '"START='   *KPOSA* MNOTE                         00532300
&ZMS            SETC  '&ZMS.&START"'                                    00532400
&ZMS            SETC  '&ZMS "START"'                                    00532500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00532600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00532700
.ZG176A         ANOP  ,                                                 00532800
.*-------------------------------------------------------------------   00532900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00533000
&ZXSTART        SETC  'INPUT'     SET IN/OUTPUT                         00533100
&XSTART         SETC  '&START(1)'               SET XVARIABLE           00533200
                AIF   (N'&START GT 1).ZG176B    MULTI PARMS             00533300
&XSTART         SETC  '&START'    SET XVARIABLE                         00533400
.ZG176B         AIF   (K'&START(1) GT 0).ZG176C                         00533500
&ZXSTART        SETC  ''          RESET IN/OUTPUT                       00533600
&ZMS            SETC  ' '         *KRQDA*                               00533700
&ZMS            SETC  '&ZMS "START" KEY AND ITS'                        00533800
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00533900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00534000
.ZG176C         ANOP  ,                                                 00534100
.*-------------------------------------------------------------------   00534200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00534300
                AIF   (K'&ZXSTART LE 0).ZG176R  NOT I/O                 00534400
                AIF   ('&XSTART'(1,1) NE '(').ZG176R                    00534500
&ZCGPR          SETC  '&XSTART'(2,K'&XSTART-2)                          00534600
                AIF   ('&ZCGPR'(1,1) NE '0').ZG176P                     00534700
                AIF   (K'&ZCGPR GT 2).ZG176Q                            00534800
                AIF   ('&ZCGPR' EQ '0').ZG176Q                          00534900
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00535000
                AIF   (T'&ZCGPR NE 'N').ZG176Q  INVALID REG NAME        00535100
.ZG176P         ANOP  ,                                                 00535200
                AIF   (T'&ZCGPR NE 'N').ZG176R  NON NUMERIC             00535300
                AIF   ('&ZCGPR' LT '2').ZG176Q                          00535400
                AIF   ('&ZCGPR' LE '12').ZG176R                         00535500
.ZG176Q         ANOP  ,                                                 00535600
&ZMS            SETC  '"START='   *KGPRA* MNOTE                         00535700
&ZMS            SETC  '&ZMS.&START"'                                    00535800
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00535900
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00536000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00536100
.ZG176R         ANOP  ,                                                 00536200
.*----------------------------------------------------------------***   00536300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00536400
                AIF   (N'&BLOCKS LE 1).ZG179A   CK NUM                  00536500
&ZMS            SETC  '"BLOCKS='  *KPOSA* MNOTE                         00536600
&ZMS            SETC  '&ZMS.&BLOCKS"'                                   00536700
&ZMS            SETC  '&ZMS "BLOCKS"'                                   00536800
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00536900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00537000
.ZG179A         ANOP  ,                                                 00537100
.*-------------------------------------------------------------------   00537200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00537300
&ZXBLOCKS       SETC  'INPUT'     SET IN/OUTPUT                         00537400
&XBLOCKS        SETC  '&BLOCKS(1)'              SET XVARIABLE           00537500
                AIF   (N'&BLOCKS GT 1).ZG179B   MULTI PARMS             00537600
&XBLOCKS        SETC  '&BLOCKS'   SET XVARIABLE                         00537700
.ZG179B         AIF   (K'&BLOCKS(1) GT 0).ZG179C                        00537800
&ZXBLOCKS       SETC  ''          RESET IN/OUTPUT                       00537900
&ZMS            SETC  ' '         *KRQDA*                               00538000
&ZMS            SETC  '&ZMS "BLOCKS" KEY AND ITS'                       00538100
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00538200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00538300
.ZG179C         ANOP  ,                                                 00538400
.*-------------------------------------------------------------------   00538500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00538600
                AIF   (K'&ZXBLOCKS LE 0).ZG179R  NOT I/O                00538700
                AIF   ('&XBLOCKS'(1,1) NE '(').ZG179R                   00538800
&ZCGPR          SETC  '&XBLOCKS'(2,K'&XBLOCKS-2)                        00538900
                AIF   ('&ZCGPR'(1,1) NE '0').ZG179P                     00539000
                AIF   (K'&ZCGPR GT 2).ZG179Q                            00539100
                AIF   ('&ZCGPR' EQ '0').ZG179Q                          00539200
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00539300
                AIF   (T'&ZCGPR NE 'N').ZG179Q  INVALID REG NAME        00539400
.ZG179P         ANOP  ,                                                 00539500
                AIF   (T'&ZCGPR NE 'N').ZG179R  NON NUMERIC             00539600
                AIF   ('&ZCGPR' LT '2').ZG179Q                          00539700
                AIF   ('&ZCGPR' LE '12').ZG179R                         00539800
.ZG179Q         ANOP  ,                                                 00539900
&ZMS            SETC  '"BLOCKS='  *KGPRA* MNOTE                         00540000
&ZMS            SETC  '&ZMS.&BLOCKS"'                                   00540100
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00540200
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00540300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00540400
.ZG179R         ANOP  ,                                                 00540500
.*-------------------------------------------------------------------   00540600
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00540700
.ZG181          AIF   ('&XSERVICE' NE 'LOAD').ZG191                     00540800
.*-------------------------------------------------------------------   00540900
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00541000
&ZCVAL          SETC ''           ERROR KEY FIELD                       00541100
.ZG181I0        AIF   (K'&NAME LE 0).ZG181I1                            00541200
&ZCVAL          SETC '&ZCVAL NAME'              DISALLOWED KEY          00541300
.ZG181I1        AIF   (K'&GENNAME LE 0).ZG181I2                         00541400
&ZCVAL          SETC '&ZCVAL GENNAME'           DISALLOWED KEY          00541500
.ZG181I2        AIF   (K'&OUTNAME LE 0).ZG181I3                         00541600
&ZCVAL          SETC '&ZCVAL OUTNAME'           DISALLOWED KEY          00541700
.ZG181I3        AIF   (K'&TYPE LE 0).ZG181I4                            00541800
&ZCVAL          SETC '&ZCVAL TYPE'              DISALLOWED KEY          00541900
.ZG181I4        AIF   (K'&DREF LE 0).ZG181I5                            00542000
&ZCVAL          SETC '&ZCVAL DREF'              DISALLOWED KEY          00542100
.ZG181I5        AIF   (K'&SCOPE LE 0).ZG181I6                           00542200
&ZCVAL          SETC '&ZCVAL SCOPE'             DISALLOWED KEY          00542300
.ZG181I6        AIF   (K'&BACK LE 0).ZG181I7                            00542400
&ZCVAL          SETC '&ZCVAL BACK'              DISALLOWED KEY          00542500
.ZG181I7        AIF   (K'&HSTYPE LE 0).ZG181I8                          00542600
&ZCVAL          SETC '&ZCVAL HSTYPE'            DISALLOWED KEY          00542700
.ZG181I8        AIF   (K'&SHARE LE 0).ZG181I9                           00542800
&ZCVAL          SETC '&ZCVAL SHARE'             DISALLOWED KEY          00542900
.ZG181I9        AIF   (K'&CASTOUT LE 0).ZG181I10                        00543000
&ZCVAL          SETC '&ZCVAL CASTOUT'           DISALLOWED KEY          00543100
.ZG181I10       AIF   (K'&XCALLERKEY LE 0).ZG181I11                     00543200
&ZCVAL          SETC '&ZCVAL XCALLERKEY'        DISALLOWED KEY          00543300
.ZG181I11       AIF   (K'&KEY LE 0).ZG181I12                            00543400
&ZCVAL          SETC '&ZCVAL KEY'               DISALLOWED KEY          00543500
.ZG181I12       AIF   (K'&FPROT LE 0).ZG181I13                          00543600
&ZCVAL          SETC '&ZCVAL FPROT'             DISALLOWED KEY          00543700
.ZG181I13       AIF   (K'&TTOKEN LE 0).ZG181I14                         00543800
&ZCVAL          SETC '&ZCVAL TTOKEN'            DISALLOWED KEY          00543900
.ZG181I14       AIF   (K'&ORIGIN LE 0).ZG181I15                         00544000
&ZCVAL          SETC '&ZCVAL ORIGIN'            DISALLOWED KEY          00544100
.ZG181I15       AIF   (K'&NUMBLKS LE 0).ZG181I16                        00544200
&ZCVAL          SETC '&ZCVAL NUMBLKS'           DISALLOWED KEY          00544300
.ZG181I16       AIF   (K'&INLIST LE 0).ZG181I17                         00544400
&ZCVAL          SETC '&ZCVAL INLIST'            DISALLOWED KEY          00544500
.ZG181I17       AIF   (K'&NUMRANGE LE 0).ZG181I18                       00544600
&ZCVAL          SETC '&ZCVAL NUMRANGE'          DISALLOWED KEY          00544700
.ZG181I18       AIF   (K'&RANGLIST LE 0).ZG181I19                       00544800
&ZCVAL          SETC '&ZCVAL RANGLIST'          DISALLOWED KEY          00544900
.ZG181I19       AIF   (K'&DISABLED LE 0).ZG181I20                       00545000
&ZCVAL          SETC '&ZCVAL DISABLED'          DISALLOWED KEY          00545100
.ZG181I20       AIF   (K'&XIOON LE 0).ZG181I21                          00545200
&ZCVAL          SETC '&ZCVAL XIOON'             DISALLOWED KEY          00545300
.ZG181I21       AIF   (K'&LONG LE 0).ZG181I22                           00545400
&ZCVAL          SETC '&ZCVAL LONG'              DISALLOWED KEY          00545500
.ZG181I22       AIF   (K'&XIOOFF LE 0).ZG181I23                         00545600
&ZCVAL          SETC '&ZCVAL XIOOFF'            DISALLOWED KEY          00545700
.ZG181I23       AIF   (K'&XDREFON LE 0).ZG181I24                        00545800
&ZCVAL          SETC '&ZCVAL XDREFON'           DISALLOWED KEY          00545900
.ZG181I24       AIF   (K'&XDREFOFF LE 0).ZG181I25                       00546000
&ZCVAL          SETC '&ZCVAL XDREFOFF'          DISALLOWED KEY          00546100
.ZG181I25       AIF   (K'&FORCE LE 0).ZG181I26                          00546200
&ZCVAL          SETC '&ZCVAL FORCE'             DISALLOWED KEY          00546300
.ZG181I26       AIF   (K'&VAR LE 0).ZG181I27                            00546400
&ZCVAL          SETC '&ZCVAL VAR'               DISALLOWED KEY          00546500
.ZG181I27       AIF   (K'&ZCVAL LE 0).ZG181J    KEY                     00546600
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00546700
                AIF  (K'&ZCVAL LE 160).ZG181K                           00546800
&ZCVAL          SETC '&ZCVAL'(1,160)                                    00546900
&ZCVAL          SETC '&ZCVAL....'                                       00547000
.ZG181K         ANOP                                                    00547100
&ZMS            SETC  '"LOAD'     *KMEIA* MNOTE                         00547200
&ZMS            SETC  '&ZMS."'                                          00547300
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00547400
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00547500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00547600
.ZG181J         ANOP  ,                                                 00547700
.*----------------------------------------------------------------***   00547800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00547900
                AIF   (N'&STOKEN LE 1).ZG183A   CK NUM                  00548000
&ZMS            SETC  '"STOKEN='  *KPOSA* MNOTE                         00548100
&ZMS            SETC  '&ZMS.&STOKEN"'                                   00548200
&ZMS            SETC  '&ZMS "STOKEN"'                                   00548300
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00548400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00548500
.ZG183A         ANOP  ,                                                 00548600
.*-------------------------------------------------------------------   00548700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00548800
&ZXSTOKEN       SETC  'INPUT'     SET IN/OUTPUT                         00548900
&XSTOKEN        SETC  '&STOKEN(1)'              SET XVARIABLE           00549000
                AIF   (N'&STOKEN GT 1).ZG183B   MULTI PARMS             00549100
&XSTOKEN        SETC  '&STOKEN'   SET XVARIABLE                         00549200
.ZG183B         AIF   (K'&STOKEN(1) GT 0).ZG183C                        00549300
&ZXSTOKEN       SETC  ''          RESET IN/OUTPUT                       00549400
&ZMS            SETC  ' '         *KRQDA*                               00549500
&ZMS            SETC  '&ZMS "STOKEN" KEY AND ITS'                       00549600
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00549700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00549800
.ZG183C         ANOP  ,                                                 00549900
.*-------------------------------------------------------------------   00550000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00550100
                AIF   (K'&ZXSTOKEN LE 0).ZG183R  NOT I/O                00550200
                AIF   ('&XSTOKEN'(1,1) NE '(').ZG183R                   00550300
&ZCGPR          SETC  '&XSTOKEN'(2,K'&XSTOKEN-2)                        00550400
                AIF   ('&ZCGPR'(1,1) NE '0').ZG183P                     00550500
                AIF   (K'&ZCGPR GT 2).ZG183Q                            00550600
                AIF   ('&ZCGPR' EQ '0').ZG183Q                          00550700
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00550800
                AIF   (T'&ZCGPR NE 'N').ZG183Q  INVALID REG NAME        00550900
.ZG183P         ANOP  ,                                                 00551000
                AIF   (T'&ZCGPR NE 'N').ZG183R  NON NUMERIC             00551100
                AIF   ('&ZCGPR' LT '2').ZG183Q                          00551200
                AIF   ('&ZCGPR' LE '12').ZG183R                         00551300
.ZG183Q         ANOP  ,                                                 00551400
&ZMS            SETC  '"STOKEN='  *KGPRA* MNOTE                         00551500
&ZMS            SETC  '&ZMS.&STOKEN"'                                   00551600
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00551700
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00551800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00551900
.ZG183R         ANOP  ,                                                 00552000
.*----------------------------------------------------------------***   00552100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00552200
                AIF   (N'&START LE 1).ZG186A    CK NUM                  00552300
&ZMS            SETC  '"START='   *KPOSA* MNOTE                         00552400
&ZMS            SETC  '&ZMS.&START"'                                    00552500
&ZMS            SETC  '&ZMS "START"'                                    00552600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00552700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00552800
.ZG186A         ANOP  ,                                                 00552900
.*-------------------------------------------------------------------   00553000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00553100
&ZXSTART        SETC  'INPUT'     SET IN/OUTPUT                         00553200
&XSTART         SETC  '&START(1)'               SET XVARIABLE           00553300
                AIF   (N'&START GT 1).ZG186B    MULTI PARMS             00553400
&XSTART         SETC  '&START'    SET XVARIABLE                         00553500
.ZG186B         AIF   (K'&START(1) GT 0).ZG186C                         00553600
&ZXSTART        SETC  ''          RESET IN/OUTPUT                       00553700
&ZMS            SETC  ' '         *KRQDA*                               00553800
&ZMS            SETC  '&ZMS "START" KEY AND ITS'                        00553900
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00554000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00554100
.ZG186C         ANOP  ,                                                 00554200
.*-------------------------------------------------------------------   00554300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00554400
                AIF   (K'&ZXSTART LE 0).ZG186R  NOT I/O                 00554500
                AIF   ('&XSTART'(1,1) NE '(').ZG186R                    00554600
&ZCGPR          SETC  '&XSTART'(2,K'&XSTART-2)                          00554700
                AIF   ('&ZCGPR'(1,1) NE '0').ZG186P                     00554800
                AIF   (K'&ZCGPR GT 2).ZG186Q                            00554900
                AIF   ('&ZCGPR' EQ '0').ZG186Q                          00555000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00555100
                AIF   (T'&ZCGPR NE 'N').ZG186Q  INVALID REG NAME        00555200
.ZG186P         ANOP  ,                                                 00555300
                AIF   (T'&ZCGPR NE 'N').ZG186R  NON NUMERIC             00555400
                AIF   ('&ZCGPR' LT '2').ZG186Q                          00555500
                AIF   ('&ZCGPR' LE '12').ZG186R                         00555600
.ZG186Q         ANOP  ,                                                 00555700
&ZMS            SETC  '"START='   *KGPRA* MNOTE                         00555800
&ZMS            SETC  '&ZMS.&START"'                                    00555900
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00556000
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00556100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00556200
.ZG186R         ANOP  ,                                                 00556300
.*----------------------------------------------------------------***   00556400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00556500
                AIF   (N'&BLOCKS LE 1).ZG189A   CK NUM                  00556600
&ZMS            SETC  '"BLOCKS='  *KPOSA* MNOTE                         00556700
&ZMS            SETC  '&ZMS.&BLOCKS"'                                   00556800
&ZMS            SETC  '&ZMS "BLOCKS"'                                   00556900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00557000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00557100
.ZG189A         ANOP  ,                                                 00557200
.*-------------------------------------------------------------------   00557300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00557400
&ZXBLOCKS       SETC  'INPUT'     SET IN/OUTPUT                         00557500
&XBLOCKS        SETC  '&BLOCKS(1)'              SET XVARIABLE           00557600
                AIF   (N'&BLOCKS GT 1).ZG189B   MULTI PARMS             00557700
&XBLOCKS        SETC  '&BLOCKS'   SET XVARIABLE                         00557800
.ZG189B         AIF   (K'&BLOCKS(1) GT 0).ZG189C                        00557900
&ZXBLOCKS       SETC  ''          RESET IN/OUTPUT                       00558000
&ZMS            SETC  ' '         *KRQDA*                               00558100
&ZMS            SETC  '&ZMS "BLOCKS" KEY AND ITS'                       00558200
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00558300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00558400
.ZG189C         ANOP  ,                                                 00558500
.*-------------------------------------------------------------------   00558600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00558700
                AIF   (K'&ZXBLOCKS LE 0).ZG189R  NOT I/O                00558800
                AIF   ('&XBLOCKS'(1,1) NE '(').ZG189R                   00558900
&ZCGPR          SETC  '&XBLOCKS'(2,K'&XBLOCKS-2)                        00559000
                AIF   ('&ZCGPR'(1,1) NE '0').ZG189P                     00559100
                AIF   (K'&ZCGPR GT 2).ZG189Q                            00559200
                AIF   ('&ZCGPR' EQ '0').ZG189Q                          00559300
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00559400
                AIF   (T'&ZCGPR NE 'N').ZG189Q  INVALID REG NAME        00559500
.ZG189P         ANOP  ,                                                 00559600
                AIF   (T'&ZCGPR NE 'N').ZG189R  NON NUMERIC             00559700
                AIF   ('&ZCGPR' LT '2').ZG189Q                          00559800
                AIF   ('&ZCGPR' LE '12').ZG189R                         00559900
.ZG189Q         ANOP  ,                                                 00560000
&ZMS            SETC  '"BLOCKS='  *KGPRA* MNOTE                         00560100
&ZMS            SETC  '&ZMS.&BLOCKS"'                                   00560200
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00560300
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00560400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00560500
.ZG189R         ANOP  ,                                                 00560600
.*-------------------------------------------------------------------   00560700
.***AG.KMEKY15 VALUE, RQD INPUT, ME KEYS -END                           00560800
.ZG191          ANOP  ,           END MUTUALLY EXCLUSIVE KEYS           00560900
.******************************************************************     00561000
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00561100
.******************************************************************     00561200
                ACTR  10000                                             00561300
.*-------------------------------------------------------------------   00561400
.***AH.P03 EXTRA POSITIONALS AMONG NON-X KEYS                           00561500
&ZCVAL          SETC  ''          ERROR FIELD                           00561600
&ZAWRK          SETA  0           POSITIONAL COUNTER                    00561700
&ZASYSLNDX      SETA  0           NON-X KEY COUNTER                     00561800
.ZGLIST2        ANOP  ,                                                 00561900
&ZASYSLNDX      SETA  &ZASYSLNDX+1              NEXT NON-X KEY          00562000
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZGLIST3  DONE                 00562100
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZGLIST2          00562200
&ZAWRK          SETA  &ZAWRK+1    NEXT POSITIONAL                       00562300
                AIF   (&ZAWRK LE 0).ZGLIST2                             00562400
&ZCVAL          SETC '&ZCVAL,&SYSLIST(&ZASYSLNDX)'  EXTRA               00562500
                AGO   .ZGLIST2                                          00562600
.*                                                                      00562700
.ZGLIST3  AIF  (K'&ZCVAL LE 0).ZGLISTX                                  00562800
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)     STRIP COMMA             00562900
&ZMS            SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE          00563000
&ZMS            SETC  '&ZMS "&ZCVAL"'                                   00563100
&ZMS            SETC  '&ZMS CANNOT BE USED.'                            00563200
&ZMS            SETC  '&ZMS NO POSITIONAL ARGUMENTS'                    00563300
                MNOTE 8,' &ZMS ARE ALLOWED.'                            00563400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00563500
.ZGLISTX        ANOP  ,                                                 00563600
&ZASYSLNDX      SETA  0                                                 00563700
.*-------------------------------------------------------------------   00563800
.***AG.MF04 MF=(SLE)                                                    00563900
.ZGMFX          ANOP  ,           END OF FULL SYNTAX CHECK              00564000
.*******************************************************************    00564100
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00564200
.*******************************************************************    00564300
                AIF   (&ZMACRET NE 0).ZLX2      ERROR DETECTED          00564400
.*******************************************************************    00564500
.***AE.01  START OF DSPSERV MACRO CODE                                  00564600
.*******************************************************************    00564700
                LCLC  &M0M0001                 NAME                     00564800
&M0M0001        SETC  '&XLABEL'                SET NAME                 00564900
                AIF   (K'&XLABEL NE 0).XLAB2                            00565000
&M0M0001        SETC  'M00M&SYSNDX'            DEFAULT NAME             00565100
.*                                                                      00565200
.XLAB2          ANOP  ,                                                 00565300
                AIF   ('&XMF' EQ 'L').XLAB3                             00565400
&M0M0001 DS    0H                             DSPSERV-1                 00565500
.XLAB3          ANOP  ,                                                 00565600
.*******************************************************************    00565700
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00565800
.*******************************************************************    00565900
              PUSH  PRINT                                               00566000
                AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON        00566100
                PRINT OFF         ++ PR01                               00566200
                AGO   .ZPRNTXX                                          00566300
.ZPRINTX        PRINT ON                                                00566400
.ZPRNTXX        ANOP  ,                                                 00566500
.********************************************************************   00566600
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00566700
.********************************************************************   00566800
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00566900
                      LCLA  &ZOPN1         INVOCATION INDEX             00567000
                      LCLC  &ZOPL(4095)    LABEL                        00567100
                      LCLC  &ZOPO(4095)    OPERATION                    00567200
                      LCLC  &ZOPV(4095)    VALUE                        00567300
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00567400
.*                                                                      00567500
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00567600
.******************************************************************     00567700
.***AL.L10 DSPSERV FMT=LIST MF=S|L PARAMETERS                           00567800
.******************************************************************     00567900
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00568000
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00568100
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00568200
&XMFATTR              SETC  '0D'                                        00568300
.*                                                                      00568400
&ZOPN                 SETA  &ZOPN+1                                     00568500
&ZOPL(&ZOPN)          SETC  ' '                                         00568600
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00568700
&ZOPO(&ZOPN)          SETC  'B'                                         00568800
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00568900
                      AGO   .ZALVL6B                                    00569000
.ZALVL6A              ANOP                                              00569100
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00569200
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00569300
.ZALVL6B              ANOP                                              00569400
&ZOPD(&ZOPN)          SETC  '++ DSPSERV ARG PARMS'                      00569500
.*                                                                      00569600
&ZOPN                 SETA  &ZOPN+1                                     00569700
&ZOPL(&ZOPN)          SETC  ' '                                         00569800
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00569900
&ZOPV(&ZOPN)          SETC  '1'                                         00570000
&ZOPD(&ZOPN)          SETC  ' '                                         00570100
.*                                                                      00570200
.ZLMFSL2              ANOP  ,                                           00570300
.*-------------------------------------------------------------------   00570400
.***AM.L00  DSPSERV FMT=LIST name                                       00570500
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00570600
&ZOPN                 SETA &ZOPN+1                                      00570700
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00570800
&ZOPO(&ZOPN)          SETC 'EQU'                                        00570900
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00571000
&ZOPD(&ZOPN)          SETC '++ DSPSERV NAME'                            00571100
.ZLMFSL2M             ANOP  ,                                           00571200
.*-------------------------------------------------------------------   00571300
.***AM.L01  DSPSERV FMT=LIST PARAMETERS                                 00571400
&ZOPN                 SETA &ZOPN+1                                      00571500
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00571600
&ZOPO(&ZOPN)          SETC 'DS'                                         00571700
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00571800
&ZOPD(&ZOPN)          SETC '++ DSPSERV PARM LIST'                       00571900
.*-------------------------------------------------------------------   00572000
.***AM.L02 XVERSION XL1                                                 00572100
&ZOPN                 SETA &ZOPN+1                                      00572200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00572300
&ZOPO(&ZOPN)          SETC 'DS'                                         00572400
&ZOPV(&ZOPN)          SETC 'XL1'                                        00572500
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00572600
.*-------------------------------------------------------------------   00572700
.***AM.L05 XSERVICE XL1                                                 00572800
&ZOPN                 SETA &ZOPN+1                                      00572900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSERVICE'                         00573000
&ZOPO(&ZOPN)          SETC 'DS'                                         00573100
&ZOPV(&ZOPN)          SETC 'XL1'                                        00573200
&ZOPD(&ZOPN)          SETC '++ &ZXSERVICE XSERVICE'                     00573300
.*                                                                      00573400
&ZOPN                 SETA  &ZOPN+1                                     00573500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._CREATE'                          00573600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00573700
&ZOPV(&ZOPN)          SETC  '1'                                         00573800
&ZOPD(&ZOPN)          SETC  '++ XSERVICE.'                              00573900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CREATE'                       00574000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00574100
.*                                                                      00574200
&ZOPN                 SETA  &ZOPN+1                                     00574300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._DELETE'                          00574400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00574500
&ZOPV(&ZOPN)          SETC  '2'                                         00574600
&ZOPD(&ZOPN)          SETC  '++ XSERVICE.'                              00574700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DELETE'                       00574800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00574900
.*                                                                      00575000
&ZOPN                 SETA  &ZOPN+1                                     00575100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._RELEASE'                         00575200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00575300
&ZOPV(&ZOPN)          SETC  '3'                                         00575400
&ZOPD(&ZOPN)          SETC  '++ XSERVICE.'                              00575500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).RELEASE'                      00575600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00575700
.*                                                                      00575800
&ZOPN                 SETA  &ZOPN+1                                     00575900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._DEFINE'                          00576000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00576100
&ZOPV(&ZOPN)          SETC  '4'                                         00576200
&ZOPD(&ZOPN)          SETC  '++ XSERVICE.'                              00576300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DEFINE'                       00576400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00576500
.*                                                                      00576600
&ZOPN                 SETA  &ZOPN+1                                     00576700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._EXTEND'                          00576800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00576900
&ZOPV(&ZOPN)          SETC  '5'                                         00577000
&ZOPD(&ZOPN)          SETC  '++ XSERVICE.'                              00577100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EXTEND'                       00577200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00577300
.*                                                                      00577400
&ZOPN                 SETA  &ZOPN+1                                     00577500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._OUT'                             00577600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00577700
&ZOPV(&ZOPN)          SETC  '6'                                         00577800
&ZOPD(&ZOPN)          SETC  '++ XSERVICE.'                              00577900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).OUT'                          00578000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00578100
.*                                                                      00578200
&ZOPN                 SETA  &ZOPN+1                                     00578300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._LOAD'                            00578400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00578500
&ZOPV(&ZOPN)          SETC  '7'                                         00578600
&ZOPD(&ZOPN)          SETC  '++ XSERVICE.'                              00578700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LOAD'                         00578800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00578900
.*-------------------------------------------------------------------   00579000
.***AM.L05 XDEFOP XL1                                                   00579100
&ZOPN                 SETA &ZOPN+1                                      00579200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDEFOP'                           00579300
&ZOPO(&ZOPN)          SETC 'DS'                                         00579400
&ZOPV(&ZOPN)          SETC 'XL1'                                        00579500
&ZOPD(&ZOPN)          SETC '++ &ZXDEFOP XDEFOP'                         00579600
.*                                                                      00579700
&ZOPN                 SETA  &ZOPN+1                                     00579800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._IOON'                            00579900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00580000
&ZOPV(&ZOPN)          SETC  '1'                                         00580100
&ZOPD(&ZOPN)          SETC  '++ XDEFOP.'                                00580200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IOON'                         00580300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00580400
.*                                                                      00580500
&ZOPN                 SETA  &ZOPN+1                                     00580600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._IOOFF'                           00580700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00580800
&ZOPV(&ZOPN)          SETC  '2'                                         00580900
&ZOPD(&ZOPN)          SETC  '++ XDEFOP.'                                00581000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IOOFF'                        00581100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00581200
.*                                                                      00581300
&ZOPN                 SETA  &ZOPN+1                                     00581400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._DREFON'                          00581500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00581600
&ZOPV(&ZOPN)          SETC  '3'                                         00581700
&ZOPD(&ZOPN)          SETC  '++ XDEFOP.'                                00581800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DREFON'                       00581900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00582000
.*                                                                      00582100
&ZOPN                 SETA  &ZOPN+1                                     00582200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._DREFOFF'                         00582300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00582400
&ZOPV(&ZOPN)          SETC  '4'                                         00582500
&ZOPD(&ZOPN)          SETC  '++ XDEFOP.'                                00582600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DREFOFF'                      00582700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00582800
.*-------------------------------------------------------------------   00582900
.***AM.L03 XFLAGS1 BL.8                                                 00583000
&ZOPN                 SETA &ZOPN+1                                      00583100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS1'                          00583200
&ZOPO(&ZOPN)          SETC 'DS'                                         00583300
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00583400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00583500
.*                                                                      00583600
&ZOPN                 SETA  &ZOPN+1                                     00583700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._SINGLE'                          00583800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00583900
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00584000
&ZOPD(&ZOPN)          SETC  '++ XSCOPE.'                                00584100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SINGLE'                       00584200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00584300
.*                                                                      00584400
&ZOPN                 SETA  &ZOPN+1                                     00584500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._ALL'                             00584600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00584700
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00584800
&ZOPD(&ZOPN)          SETC  '++ XSCOPE.'                                00584900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ALL'                          00585000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00585100
.*                                                                      00585200
&ZOPN                 SETA  &ZOPN+1                                     00585300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._COMMON'                          00585400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00585500
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00585600
&ZOPD(&ZOPN)          SETC  '++ XSCOPE.'                                00585700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).COMMON'                       00585800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00585900
.*                                                                      00586000
&ZOPN                 SETA  &ZOPN+1                                     00586100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._GENNAME_COND'                    00586200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00586300
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00586400
&ZOPD(&ZOPN)          SETC  '++ XGENNAME.'                              00586500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).COND'                         00586600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00586700
.*                                                                      00586800
&ZOPN                 SETA  &ZOPN+1                                     00586900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._GENNAME_YES'                     00587000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00587100
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00587200
&ZOPD(&ZOPN)          SETC  '++ XGENNAME.'                              00587300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00587400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00587500
.*                                                                      00587600
&ZOPN                 SETA  &ZOPN+1                                     00587700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._IN_RANGELIST'                    00587800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00587900
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00588000
&ZOPD(&ZOPN)          SETC  '++ XINLIST.'                               00588100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00588200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00588300
.*-------------------------------------------------------------------   00588400
.***AM.L03 XFLAGS2 BL.8                                                 00588500
&ZOPN                 SETA &ZOPN+1                                      00588600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS2'                          00588700
&ZOPO(&ZOPN)          SETC 'DS'                                         00588800
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00588900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00589000
.*                                                                      00589100
&ZOPN                 SETA  &ZOPN+1                                     00589200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDREF_YES'                       00589300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00589400
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00589500
&ZOPD(&ZOPN)          SETC  '++ XDREF.'                                 00589600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00589700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00589800
.*                                                                      00589900
&ZOPN                 SETA  &ZOPN+1                                     00590000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XFPROT_YES'                      00590100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00590200
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00590300
&ZOPD(&ZOPN)          SETC  '++ XFPROT.'                                00590400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00590500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00590600
.*                                                                      00590700
&ZOPN                 SETA  &ZOPN+1                                     00590800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLONG_NO'                        00590900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00591000
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00591100
&ZOPD(&ZOPN)          SETC  '++ XLONG.'                                 00591200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           00591300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00591400
.*                                                                      00591500
&ZOPN                 SETA  &ZOPN+1                                     00591600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_KEY'                     00591700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00591800
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00591900
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00592000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).KEY'                          00592100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00592200
.*                                                                      00592300
&ZOPN                 SETA  &ZOPN+1                                     00592400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_TTOKEN'                  00592500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00592600
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00592700
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00592800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TTOKEN'                       00592900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00593000
.*                                                                      00593100
&ZOPN                 SETA  &ZOPN+1                                     00593200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XFORCE_YES'                      00593300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00593400
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00593500
&ZOPD(&ZOPN)          SETC  '++ XFORCE.'                                00593600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00593700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00593800
.*                                                                      00593900
&ZOPN                 SETA  &ZOPN+1                                     00594000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XVAR_YES'                        00594100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00594200
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00594300
&ZOPD(&ZOPN)          SETC  '++ XVAR.'                                  00594400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00594500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00594600
.*                                                                      00594700
&ZOPN                 SETA  &ZOPN+1                                     00594800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSHARE_YES'                      00594900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00595000
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00595100
&ZOPD(&ZOPN)          SETC  '++ XSHARE.'                                00595200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00595300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00595400
.*-------------------------------------------------------------------   00595500
.***AM.L09  XKEY XL1                                                    00595600
&ZOPN                 SETA &ZOPN+1                                      00595700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEY'                             00595800
&ZOPO(&ZOPN)          SETC 'DS'                                         00595900
&ZOPV(&ZOPN)          SETC 'XL1'                                        00596000
&ZOPD(&ZOPN)          SETC '++ &ZXKEY  XKEY'                            00596100
.*-------------------------------------------------------------------   00596200
.***AM.L05 XTYPE XL1                                                    00596300
&ZOPN                 SETA &ZOPN+1                                      00596400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTYPE'                            00596500
&ZOPO(&ZOPN)          SETC 'DS'                                         00596600
&ZOPV(&ZOPN)          SETC 'XL1'                                        00596700
&ZOPD(&ZOPN)          SETC '++ &ZXTYPE XTYPE'                           00596800
.*                                                                      00596900
&ZOPN                 SETA  &ZOPN+1                                     00597000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._BASIC'                           00597100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00597200
&ZOPV(&ZOPN)          SETC  '0'                                         00597300
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00597400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BASIC'                        00597500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00597600
.*                                                                      00597700
&ZOPN                 SETA  &ZOPN+1                                     00597800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._HIPERSPACE'                      00597900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00598000
&ZOPV(&ZOPN)          SETC  '1'                                         00598100
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00598200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).HIPERSPACE'                   00598300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00598400
.*-------------------------------------------------------------------   00598500
.***AM.L03 XFLAGS3 BL.8                                                 00598600
&ZOPN                 SETA &ZOPN+1                                      00598700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS3'                          00598800
&ZOPO(&ZOPN)          SETC 'DS'                                         00598900
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00599000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00599100
.*                                                                      00599200
&ZOPN                 SETA  &ZOPN+1                                     00599300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._HIPER_SCROLL'                    00599400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00599500
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00599600
&ZOPD(&ZOPN)          SETC  '++ XHSTYPE.'                               00599700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SCROLL'                       00599800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00599900
.*                                                                      00600000
&ZOPN                 SETA  &ZOPN+1                                     00600100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._HIPER_CACHE'                     00600200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00600300
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00600400
&ZOPD(&ZOPN)          SETC  '++ XHSTYPE.'                               00600500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CACHE'                        00600600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00600700
.*                                                                      00600800
&ZOPN                 SETA  &ZOPN+1                                     00600900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._NOCASTOUT'                       00601000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00601100
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00601200
&ZOPD(&ZOPN)          SETC  '++ XCASTOUT.'                              00601300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           00601400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00601500
.*                                                                      00601600
&ZOPN                 SETA  &ZOPN+1                                     00601700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._BACKED_HIGH'                     00601800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00601900
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00602000
&ZOPD(&ZOPN)          SETC  '++ XBACK.'                                 00602100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).64'                           00602200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00602300
.*-------------------------------------------------------------------   00602400
.***AM.L09  XOUTNAME CL8                                                00602500
&ZOPN                 SETA &ZOPN+1                                      00602600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOUTNAME'                         00602700
&ZOPO(&ZOPN)          SETC 'DS'                                         00602800
&ZOPV(&ZOPN)          SETC 'CL8'                                        00602900
&ZOPD(&ZOPN)          SETC '++ &ZXOUTNAME  XOUTNAME'                    00603000
.*-------------------------------------------------------------------   00603100
.***AM.L09  XSTOKEN CL8                                                 00603200
&ZOPN                 SETA &ZOPN+1                                      00603300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTOKEN'                          00603400
&ZOPO(&ZOPN)          SETC 'DS'                                         00603500
&ZOPV(&ZOPN)          SETC 'CL8'                                        00603600
&ZOPD(&ZOPN)          SETC '++ &ZXSTOKEN  XSTOKEN'                      00603700
.*-------------------------------------------------------------------   00603800
.***AM.L09  XSTART F                                                    00603900
&ZOPN                 SETA &ZOPN+1                                      00604000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTART'                           00604100
&ZOPO(&ZOPN)          SETC 'DS'                                         00604200
&ZOPV(&ZOPN)          SETC 'F'                                          00604300
&ZOPD(&ZOPN)          SETC '++ &ZXSTART  XSTART'                        00604400
.*-------------------------------------------------------------------   00604500
.***AM.L09  XBLOCKS F                                                   00604600
&ZOPN                 SETA &ZOPN+1                                      00604700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBLOCKS'                          00604800
&ZOPO(&ZOPN)          SETC 'DS'                                         00604900
&ZOPV(&ZOPN)          SETC 'F'                                          00605000
&ZOPD(&ZOPN)          SETC '++ &ZXBLOCKS  XBLOCKS'                      00605100
.*-------------------------------------------------------------------   00605200
.***AM.L09  XTTOKEN CL16                                                00605300
&ZOPN                 SETA &ZOPN+1                                      00605400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTTOKEN'                          00605500
&ZOPO(&ZOPN)          SETC 'DS'                                         00605600
&ZOPV(&ZOPN)          SETC 'CL16'                                       00605700
&ZOPD(&ZOPN)          SETC '++ &ZXTTOKEN  XTTOKEN'                      00605800
.*-------------------------------------------------------------------   00605900
.***AM.L09  XORIGIN F                                                   00606000
&ZOPN                 SETA &ZOPN+1                                      00606100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XORIGIN'                          00606200
&ZOPO(&ZOPN)          SETC 'DS'                                         00606300
&ZOPV(&ZOPN)          SETC 'F'                                          00606400
&ZOPD(&ZOPN)          SETC '++ &ZXORIGIN  XORIGIN'                      00606500
.*-------------------------------------------------------------------   00606600
.***AM.L09  XNUMBLKS F                                                  00606700
&ZOPN                 SETA &ZOPN+1                                      00606800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNUMBLKS'                         00606900
&ZOPO(&ZOPN)          SETC 'DS'                                         00607000
&ZOPV(&ZOPN)          SETC 'F'                                          00607100
&ZOPD(&ZOPN)          SETC '++ &ZXNUMBLKS  XNUMBLKS'                    00607200
.*-------------------------------------------------------------------   00607300
.***AM.MLM2 SAVED LOCATION COUNTER                                      00607400
                      AIF  (&XPLISTVER GE 1).ZL46LA                     00607500
                      AIF  ('&ZENDBASEPL' NE '').ZL46LA                 00607600
&ZENDBASEPL           SETC 'YES'                                        00607700
&ZOPN                 SETA &ZOPN+1                                      00607800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00607900
&ZOPO(&ZOPN)          SETC 'EQU'                                        00608000
&ZOPV(&ZOPN)          SETC '*'                                          00608100
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00608200
.ZL46LA               ANOP  ,                                           00608300
.*-------------------------------------------------------------------   00608400
.***AM.LVER1                                                            00608500
                      AIF  (&XPLISTVER LT 1).ZL46L                      00608600
.*-------------------------------------------------------------------   00608700
.*-------------------------------------------------------------------   00608800
.***AM.L09  XINITIAL F                                                  00608900
&ZOPN                 SETA &ZOPN+1                                      00609000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XINITIAL'                         00609100
&ZOPO(&ZOPN)          SETC 'DS'                                         00609200
&ZOPV(&ZOPN)          SETC 'F'                                          00609300
&ZOPD(&ZOPN)          SETC '++ &ZXINITIAL  XINITIAL'                    00609400
.*-------------------------------------------------------------------   00609500
.***AM.LVER2                                                            00609600
.ZL46L                ANOP  ,                                           00609700
.*-------------------------------------------------------------------   00609800
.*-------------------------------------------------------------------   00609900
.***AM.MLM1 SAVED LOCATION COUNTER                                      00610000
                      AIF  ('&ZENDBASEPL' NE '').ZL47LB                 00610100
&ZENDBASEPL           SETC 'YES'                                        00610200
&ZOPN                 SETA &ZOPN+1                                      00610300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00610400
&ZOPO(&ZOPN)          SETC 'EQU'                                        00610500
&ZOPV(&ZOPN)          SETC '*'                                          00610600
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00610700
.ZL47LB               ANOP  ,                                           00610800
.*-------------------------------------------------------------------   00610900
.***AM.PJR1 DEFINED ON XOUTNAME                                         00611000
&ZOPN                 SETA &ZOPN+1                                      00611100
&ZOPL(&ZOPN)          SETC ' '                                          00611200
&ZOPO(&ZOPN)          SETC 'ORG'                                        00611300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+8'                                00611400
&ZOPD(&ZOPN)          SETC ' '                                          00611500
.*-------------------------------------------------------------------   00611600
.***AM.L09  XNAME CL8                                                   00611700
&ZOPN                 SETA &ZOPN+1                                      00611800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNAME'                            00611900
&ZOPO(&ZOPN)          SETC 'DS'                                         00612000
&ZOPV(&ZOPN)          SETC 'CL8'                                        00612100
&ZOPD(&ZOPN)          SETC '++ &ZXNAME  XNAME'                          00612200
.*-------------------------------------------------------------------   00612300
.***AM.PJR1 DEFINED ON XSTART                                           00612400
&ZOPN                 SETA &ZOPN+1                                      00612500
&ZOPL(&ZOPN)          SETC ' '                                          00612600
&ZOPO(&ZOPN)          SETC 'ORG'                                        00612700
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+24'                               00612800
&ZOPD(&ZOPN)          SETC ' '                                          00612900
.*-------------------------------------------------------------------   00613000
.***AM.L09  XNUMRANGE F                                                 00613100
&ZOPN                 SETA &ZOPN+1                                      00613200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNUMRANGE'                        00613300
&ZOPO(&ZOPN)          SETC 'DS'                                         00613400
&ZOPV(&ZOPN)          SETC 'F'                                          00613500
&ZOPD(&ZOPN)          SETC '++ &ZXNUMRANGE  XNUMRANGE'                  00613600
.*-------------------------------------------------------------------   00613700
.***AM.PJR1 DEFINED ON XBLOCKS                                          00613800
&ZOPN                 SETA &ZOPN+1                                      00613900
&ZOPL(&ZOPN)          SETC ' '                                          00614000
&ZOPO(&ZOPN)          SETC 'ORG'                                        00614100
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+28'                               00614200
&ZOPD(&ZOPN)          SETC ' '                                          00614300
.*-------------------------------------------------------------------   00614400
.***AM.L09  XRANGLIST A                                                 00614500
&ZOPN                 SETA &ZOPN+1                                      00614600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRANGLIST'                        00614700
&ZOPO(&ZOPN)          SETC 'DS'                                         00614800
&ZOPV(&ZOPN)          SETC 'A'                                          00614900
&ZOPD(&ZOPN)          SETC '++ &ZXRANGLIST  XRANGLIST'                  00615000
&ZOPN                 SETA &ZOPN+1                                      00615100
&ZOPL(&ZOPN)          SETC ' '                                          00615200
&ZOPO(&ZOPN)          SETC 'ORG'                                        00615300
&ZOPV(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00615400
&ZOPD(&ZOPN)          SETC 'RESET LOCATION COUNTER'                     00615500
.*-------------------------------------------------------------------   00615600
.***AM.L10 END OF DSPSERV LIST PARAMETERS                               00615700
&ZOPN                 SETA &ZOPN+1                                      00615800
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00615900
&ZOPO(&ZOPN)          SETC 'EQU'                                        00616000
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00616100
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00616200
.*                                                                      00616300
&ZOPN                 SETA &ZOPN+1                                      00616400
&ZOPL(&ZOPN)          SETC ' '                                          00616500
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00616600
&ZOPV(&ZOPN)          SETC '1'                                          00616700
&ZOPD(&ZOPN)          SETC ' '                                          00616800
.*-------------------------------------------------------------------   00616900
.***AL.L12 DSPSERV FMT=LIST MF=S|L PARAMETERS                           00617000
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00617100
.*                                                                      00617200
&ZOPN                 SETA  &ZOPN+1                                     00617300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00617400
&ZOPO(&ZOPN)          SETC  'DC'                                        00617500
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00617600
&ZOPD(&ZOPN)          SETC  '++ DSPSERV ARG PARMS'                      00617700
.*                                                                      00617800
.ZLMFSLX              ANOP  ,                                           00617900
.*-------------------------------------------------------------------   00618000
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00618100
&ZPLLEN               SETA 56                                           00618200
.*                                                                      00618300
                      AIF  (&XPLISTVER LT 1).ZLLEN2Z                    00618400
&ZPLLEN               SETA 60                                           00618500
.ZLLEN2Z              ANOP  ,                                           00618600
.*                                                                      00618700
.******************************************************************     00618800
.***AI.L01 DSPSERV FMT=LIST FILL IN PARAMETER AREA                      00618900
.******************************************************************     00619000
                      ACTR  10000                                       00619100
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00619200
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00619300
&ZCVAL                SETC  'LAE'          XAX MODE                     00619400
.ZIMFXA               ANOP ,                                            00619500
.*                                                                      00619600
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00619700
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00619800
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00619900
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00620000
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00620100
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00620200
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00620300
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00620400
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00620500
&ZOPN                 SETA  &ZOPN+1                                     00620600
&ZOPL(&ZOPN)          SETC  ' '                                         00620700
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00620800
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00620900
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00621000
                      AGO   .ZIMFNX                                     00621100
.*                                                                      00621200
.ZIMFN2               ANOP ,                                            00621300
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00621400
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00621500
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00621600
&ZOPN                 SETA  &ZOPN+1                                     00621700
&ZOPL(&ZOPN)          SETC  ' '                                         00621800
&ZOPO(&ZOPN)          SETC  'LAE'                                       00621900
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00622000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00622100
                      AGO   .ZIMFNX                                     00622200
.ZIMFNX1              ANOP ,                                            00622300
&ZOPN                 SETA  &ZOPN+1                                     00622400
&ZOPL(&ZOPN)          SETC  ' '                                         00622500
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00622600
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00622700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00622800
.ZIMFNX               ANOP ,                                            00622900
.********************************************************************   00623000
.***AI.L02 DSPSERV FMT=LIST INITIALIZE PARAMETER AREA                   00623100
.********************************************************************   00623200
.***AI.L03 MF=(SLE)                                                     00623300
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00623400
.*                                                                      00623500
&ZOPN                 SETA  &ZOPN+1                                     00623600
&ZOPL(&ZOPN)          SETC  ' '                                         00623700
&ZOPO(&ZOPN)          SETC  'XC'                                        00623800
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00623900
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00624000
.ZIMFLX               ANOP  ,                                           00624100
.*-------------------------------------------------------------------   00624200
.***AI.L04A XVERSION XL1                                                00624300
                      AIF   (&XPLISTVER EQ 0).ZIMFVW                    00624400
&ZOPN                 SETA  &ZOPN+1                                     00624500
&ZOPL(&ZOPN)          SETC  ' '                                         00624600
&ZOPO(&ZOPN)          SETC  'MVI'                                       00624700
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00624800
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00624900
.ZIMFVW               ANOP  ,                                           00625000
.*-------------------------------------------------------------------   00625100
.***AI.L07 XSERVICE AL1                                                 00625200
&ZW                   SETC  ''                                          00625300
.*-------------------------------------------------------------------   00625400
.***AI.L15 XSERVICE "CREATE" AL1                                        00625500
         AIF   ('&XSERVICE' NE 'CREATE').ZI3A                           00625600
&ZW                   SETC  '1'                                         00625700
.ZI3A                 ANOP  ,                                           00625800
.*-------------------------------------------------------------------   00625900
.***AI.L15 XSERVICE "DELETE" AL1                                        00626000
         AIF   ('&XSERVICE' NE 'DELETE').ZI4A                           00626100
&ZW                   SETC  '2'                                         00626200
.ZI4A                 ANOP  ,                                           00626300
.*-------------------------------------------------------------------   00626400
.***AI.L15 XSERVICE "RELEASE" AL1                                       00626500
         AIF   ('&XSERVICE' NE 'RELEASE').ZI5A                          00626600
&ZW                   SETC  '3'                                         00626700
.ZI5A                 ANOP  ,                                           00626800
.*-------------------------------------------------------------------   00626900
.***AI.L15 XSERVICE "DEFINE" AL1                                        00627000
         AIF   ('&XSERVICE' NE 'DEFINE').ZI6A                           00627100
&ZW                   SETC  '4'                                         00627200
.ZI6A                 ANOP  ,                                           00627300
.*-------------------------------------------------------------------   00627400
.***AI.L15 XSERVICE "EXTEND" AL1                                        00627500
         AIF   ('&XSERVICE' NE 'EXTEND').ZI7A                           00627600
&ZW                   SETC  '5'                                         00627700
.ZI7A                 ANOP  ,                                           00627800
.*-------------------------------------------------------------------   00627900
.***AI.L15 XSERVICE "OUT" AL1                                           00628000
         AIF   ('&XSERVICE' NE 'OUT').ZI8A                              00628100
&ZW                   SETC  '6'                                         00628200
.ZI8A                 ANOP  ,                                           00628300
.*-------------------------------------------------------------------   00628400
.***AI.L15 XSERVICE "LOAD" AL1                                          00628500
         AIF   ('&XSERVICE' NE 'LOAD').ZI9A                             00628600
&ZW                   SETC  '7'                                         00628700
.ZI9A                 ANOP  ,                                           00628800
.*-------------------------------------------------------------------   00628900
.***AI.L17 XSERVICE AL1                                                 00629000
                      AIF   ('&ZW' EQ '0').ZI9B                         00629100
                      AIF   ('&ZW' EQ '').ZI9B                          00629200
.*                                                                      00629300
&ZOPN                 SETA  &ZOPN+1                                     00629400
&ZOPL(&ZOPN)          SETC  ' '                                         00629500
&ZOPO(&ZOPN)          SETC  'MVI'                                       00629600
&ZOPV(&ZOPN)          SETC  '1(1),&ZW'                                  00629700
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVICE XSERVICE'                    00629800
.ZI9B                 ANOP  ,                                           00629900
.*-------------------------------------------------------------------   00630000
.***AI.L07 XDEFOP AL1                                                   00630100
&ZW                   SETC  ''                                          00630200
.*-------------------------------------------------------------------   00630300
.***AI.L15 XDEFOP "IOON" AL1                                            00630400
         AIF   ('&XDEFOP' NE 'IOON').ZI11A                              00630500
&ZW                   SETC  '1'                                         00630600
.ZI11A                ANOP  ,                                           00630700
.*-------------------------------------------------------------------   00630800
.***AI.L15 XDEFOP "IOOFF" AL1                                           00630900
         AIF   ('&XDEFOP' NE 'IOOFF').ZI12A                             00631000
&ZW                   SETC  '2'                                         00631100
.ZI12A                ANOP  ,                                           00631200
.*-------------------------------------------------------------------   00631300
.***AI.L15 XDEFOP "DREFON" AL1                                          00631400
         AIF   ('&XDEFOP' NE 'DREFON').ZI13A                            00631500
&ZW                   SETC  '3'                                         00631600
.ZI13A                ANOP  ,                                           00631700
.*-------------------------------------------------------------------   00631800
.***AI.L15 XDEFOP "DREFOFF" AL1                                         00631900
         AIF   ('&XDEFOP' NE 'DREFOFF').ZI14A                           00632000
&ZW                   SETC  '4'                                         00632100
.ZI14A                ANOP  ,                                           00632200
.*-------------------------------------------------------------------   00632300
.***AI.L17 XDEFOP AL1                                                   00632400
                      AIF   ('&ZW' EQ '0').ZI14B                        00632500
                      AIF   ('&ZW' EQ '').ZI14B                         00632600
.*                                                                      00632700
&ZOPN                 SETA  &ZOPN+1                                     00632800
&ZOPL(&ZOPN)          SETC  ' '                                         00632900
&ZOPO(&ZOPN)          SETC  'MVI'                                       00633000
&ZOPV(&ZOPN)          SETC  '2(1),&ZW'                                  00633100
&ZOPD(&ZOPN)          SETC  '++ &ZXDEFOP XDEFOP'                        00633200
.ZI14B                ANOP  ,                                           00633300
.*-------------------------------------------------------------------   00633400
.***AI.L05 XFLAGS1 BL1                                                  00633500
&ZW                   SETC  ''                                          00633600
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00633700
.*-------------------------------------------------------------------   00633800
.***AI.L08 XFLAGS1 "SINGLE"                                             00633900
.***      BL1'1XXXXXXX'                                                 00634000
         AIF   ('&XSCOPE' NE 'SINGLE').ZI16A                            00634100
&ZW                   SETC  '&ZW.1'                                     00634200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00634300
                      AGO   .ZI16C                                      00634400
.*                                                                      00634500
.ZI16A                ANOP  ,                                           00634600
&ZW                   SETC  '&ZW.0'                                     00634700
.ZI16C                ANOP  ,                                           00634800
.*-------------------------------------------------------------------   00634900
.***AI.L08 XFLAGS1 "ALL"                                                00635000
.***      BL1'X1XXXXXX'                                                 00635100
         AIF   ('&XSCOPE' NE 'ALL').ZI17A                               00635200
&ZW                   SETC  '&ZW.1'                                     00635300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00635400
                      AGO   .ZI17C                                      00635500
.*                                                                      00635600
.ZI17A                ANOP  ,                                           00635700
&ZW                   SETC  '&ZW.0'                                     00635800
.ZI17C                ANOP  ,                                           00635900
.*-------------------------------------------------------------------   00636000
.***AI.L08 XFLAGS1 "COMMON"                                             00636100
.***      BL1'XX1XXXXX'                                                 00636200
         AIF   ('&XSCOPE' NE 'COMMON').ZI18A                            00636300
&ZW                   SETC  '&ZW.1'                                     00636400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00636500
                      AGO   .ZI18C                                      00636600
.*                                                                      00636700
.ZI18A                ANOP  ,                                           00636800
&ZW                   SETC  '&ZW.0'                                     00636900
.ZI18C                ANOP  ,                                           00637000
.*-------------------------------------------------------------------   00637100
.***AI.L08 XFLAGS1 "COND"                                               00637200
.***      BL1'XXXX1XXX'                                                 00637300
         AIF   ('&XGENNAME' NE 'COND').ZI19A                            00637400
&ZW                   SETC  '&ZW.01'                                    00637500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00637600
                      AGO   .ZI19C                                      00637700
.*                                                                      00637800
.ZI19A                ANOP  ,                                           00637900
&ZW                   SETC  '&ZW.00'                                    00638000
.ZI19C                ANOP  ,                                           00638100
.*-------------------------------------------------------------------   00638200
.***AI.L08 XFLAGS1 "YES"                                                00638300
.***      BL1'XXXXX1XX'                                                 00638400
         AIF   ('&XGENNAME' NE 'YES').ZI20A                             00638500
&ZW                   SETC  '&ZW.1'                                     00638600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00638700
                      AGO   .ZI20C                                      00638800
.*                                                                      00638900
.ZI20A                ANOP  ,                                           00639000
&ZW                   SETC  '&ZW.0'                                     00639100
.ZI20C                ANOP  ,                                           00639200
.*-------------------------------------------------------------------   00639300
.***AI.L08 XFLAGS1 "YES"                                                00639400
.***      BL1'XXXXXX1X'                                                 00639500
         AIF   ('&XINLIST' NE 'YES').ZI21A                              00639600
&ZW                   SETC  '&ZW.10'                                    00639700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00639800
                      AGO   .ZI21C                                      00639900
.*                                                                      00640000
.ZI21A                ANOP  ,                                           00640100
&ZW                   SETC  '&ZW.00'                                    00640200
.ZI21C                ANOP  ,                                           00640300
.*-------------------------------------------------------------------   00640400
.***AI.L11 XFLAGS1 BL1                                                  00640500
                      AIF   ('&ZCLNG' NE 'YES').ZI21E  ALL ZERO BITS    00640600
&ZOPN                 SETA  &ZOPN+1                                     00640700
&ZOPL(&ZOPN)          SETC  ' '                                         00640800
&ZOPO(&ZOPN)          SETC  'OI'                                        00640900
&ZOPV(&ZOPN)          SETC  '3(1),B''&ZW'''                             00641000
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00641100
.ZI21E                ANOP  ,                                           00641200
.*-------------------------------------------------------------------   00641300
.***AI.L05 XFLAGS2 BL1                                                  00641400
&ZW                   SETC  ''                                          00641500
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00641600
.*-------------------------------------------------------------------   00641700
.***AI.L08 XFLAGS2 "YES"                                                00641800
.***      BL1'1XXXXXXX'                                                 00641900
         AIF   ('&XDREF' NE 'YES').ZI23A                                00642000
&ZW                   SETC  '&ZW.1'                                     00642100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00642200
                      AGO   .ZI23C                                      00642300
.*                                                                      00642400
.ZI23A                ANOP  ,                                           00642500
&ZW                   SETC  '&ZW.0'                                     00642600
.ZI23C                ANOP  ,                                           00642700
.*-------------------------------------------------------------------   00642800
.***AI.L08 XFLAGS2 "YES"                                                00642900
.***      BL1'X1XXXXXX'                                                 00643000
         AIF   ('&XFPROT' NE 'YES').ZI24A                               00643100
&ZW                   SETC  '&ZW.1'                                     00643200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00643300
                      AGO   .ZI24C                                      00643400
.*                                                                      00643500
.ZI24A                ANOP  ,                                           00643600
&ZW                   SETC  '&ZW.0'                                     00643700
.ZI24C                ANOP  ,                                           00643800
.*-------------------------------------------------------------------   00643900
.***AI.L08 XFLAGS2 "NO"                                                 00644000
.***      BL1'XX1XXXXX'                                                 00644100
         AIF   ('&XLONG' NE 'NO').ZI25A                                 00644200
&ZW                   SETC  '&ZW.1'                                     00644300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00644400
                      AGO   .ZI25C                                      00644500
.*                                                                      00644600
.ZI25A                ANOP  ,                                           00644700
&ZW                   SETC  '&ZW.0'                                     00644800
.ZI25C                ANOP  ,                                           00644900
.*-------------------------------------------------------------------   00645000
.***AI.L08 XFLAGS2 "KEY"                                                00645100
.***      BL1'XXX1XXXX'                                                 00645200
         AIF   ('&KEY' EQ '').ZI26A                                     00645300
         AIF   ('&KEY' EQ '').ZI26A                                     00645400
&ZW                   SETC  '&ZW.1'                                     00645500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00645600
                      AGO   .ZI26C                                      00645700
.*                                                                      00645800
.ZI26A                ANOP  ,                                           00645900
&ZW                   SETC  '&ZW.0'                                     00646000
.ZI26C                ANOP  ,                                           00646100
.*-------------------------------------------------------------------   00646200
.***AI.L08 XFLAGS2 "TTOKEN"                                             00646300
.***      BL1'XXXX1XXX'                                                 00646400
         AIF   ('&TTOKEN' EQ '').ZI27A                                  00646500
         AIF   ('&TTOKEN' EQ '0').ZI27A                                 00646600
&ZW                   SETC  '&ZW.1'                                     00646700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00646800
                      AGO   .ZI27C                                      00646900
.*                                                                      00647000
.ZI27A                ANOP  ,                                           00647100
&ZW                   SETC  '&ZW.0'                                     00647200
.ZI27C                ANOP  ,                                           00647300
.*-------------------------------------------------------------------   00647400
.***AI.L08 XFLAGS2 "YES"                                                00647500
.***      BL1'XXXXX1XX'                                                 00647600
         AIF   ('&XFORCE' NE 'YES').ZI28A                               00647700
&ZW                   SETC  '&ZW.1'                                     00647800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00647900
                      AGO   .ZI28C                                      00648000
.*                                                                      00648100
.ZI28A                ANOP  ,                                           00648200
&ZW                   SETC  '&ZW.0'                                     00648300
.ZI28C                ANOP  ,                                           00648400
.*-------------------------------------------------------------------   00648500
.***AI.L08 XFLAGS2 "YES"                                                00648600
.***      BL1'XXXXXX1X'                                                 00648700
         AIF   ('&XVAR' NE 'YES').ZI29A                                 00648800
&ZW                   SETC  '&ZW.1'                                     00648900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00649000
                      AGO   .ZI29C                                      00649100
.*                                                                      00649200
.ZI29A                ANOP  ,                                           00649300
&ZW                   SETC  '&ZW.0'                                     00649400
.ZI29C                ANOP  ,                                           00649500
.*-------------------------------------------------------------------   00649600
.***AI.L08 XFLAGS2 "YES"                                                00649700
.***      BL1'XXXXXXX1'                                                 00649800
         AIF   ('&XSHARE' NE 'YES').ZI30A                               00649900
&ZW                   SETC  '&ZW.1'                                     00650000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00650100
                      AGO   .ZI30C                                      00650200
.*                                                                      00650300
.ZI30A                ANOP  ,                                           00650400
&ZW                   SETC  '&ZW.0'                                     00650500
.ZI30C                ANOP  ,                                           00650600
.*-------------------------------------------------------------------   00650700
.***AI.L11 XFLAGS2 BL1                                                  00650800
                      AIF   ('&ZCLNG' NE 'YES').ZI30E  ALL ZERO BITS    00650900
&ZOPN                 SETA  &ZOPN+1                                     00651000
&ZOPL(&ZOPN)          SETC  ' '                                         00651100
&ZOPO(&ZOPN)          SETC  'OI'                                        00651200
&ZOPV(&ZOPN)          SETC  '4(1),B''&ZW'''                             00651300
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00651400
.ZI30E                ANOP  ,                                           00651500
.*-------------------------------------------------------------------   00651600
.***AI.L25  XKEY XL1                                                    00651700
                      AIF   ('&ZXKEY' EQ '').ZI31E                      00651800
                      AIF   ('&ZXKEY' EQ 'OUTPUT').ZI31E                00651900
&ZCGPR                SETC  '&XKEY'                                     00652000
.*                                                                      00652100
                      AIF   ('&XKEY'(1,1) NE '(').ZI31B                 00652200
&ZCGPR   SETC  '0('.'&XKEY'(2,K'&XKEY-2).')'                            00652300
.ZI31B                ANOP  ,                                           00652400
.*                                                                      00652500
&ZC                   SETC  '&XKEY'(1,1)                                00652600
                      AIF   (T'&ZC NE 'N').ZI31D                        00652700
&ZC                   SETC  '&XKEY'                                     00652800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI31D               00652900
&ZCGPR                SETC  '=AL1(&XKEY)'                               00653000
.*                                                                      00653100
.ZI31D                ANOP  ,                                           00653200
.*                                                                      00653300
&ZOPN                 SETA  &ZOPN+1                                     00653400
&ZOPL(&ZOPN)          SETC  ' '                                         00653500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00653600
&ZOPV(&ZOPN)          SETC  '5(1,1),&ZCGPR'                             00653700
&ZOPD(&ZOPN)          SETC  '++ &ZXKEY XKEY'                            00653800
.*                                                                      00653900
.ZI31E                ANOP  ,                                           00654000
.*-------------------------------------------------------------------   00654100
.***AI.L07 XTYPE AL1                                                    00654200
&ZW                   SETC  ''                                          00654300
.*-------------------------------------------------------------------   00654400
.***AI.L15 XTYPE "BASIC" AL1                                            00654500
         AIF   ('&XTYPE' NE 'BASIC').ZI33A                              00654600
&ZW                   SETC  '0'                                         00654700
.ZI33A                ANOP  ,                                           00654800
.*-------------------------------------------------------------------   00654900
.***AI.L15 XTYPE "HIPERSPACE" AL1                                       00655000
         AIF   ('&XTYPE' NE 'HIPERSPACE').ZI34A                         00655100
&ZW                   SETC  '1'                                         00655200
.ZI34A                ANOP  ,                                           00655300
.*-------------------------------------------------------------------   00655400
.***AI.L17 XTYPE AL1                                                    00655500
                      AIF   ('&ZW' EQ '0').ZI34B                        00655600
                      AIF   ('&ZW' EQ '').ZI34B                         00655700
.*                                                                      00655800
&ZOPN                 SETA  &ZOPN+1                                     00655900
&ZOPL(&ZOPN)          SETC  ' '                                         00656000
&ZOPO(&ZOPN)          SETC  'MVI'                                       00656100
&ZOPV(&ZOPN)          SETC  '6(1),&ZW'                                  00656200
&ZOPD(&ZOPN)          SETC  '++ &ZXTYPE XTYPE'                          00656300
.ZI34B                ANOP  ,                                           00656400
.*-------------------------------------------------------------------   00656500
.***AI.L05 XFLAGS3 BL1                                                  00656600
&ZW                   SETC  ''                                          00656700
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00656800
.*-------------------------------------------------------------------   00656900
.***AI.L08 XFLAGS3 "SCROLL"                                             00657000
.***      BL1'1XXXXXXX'                                                 00657100
         AIF   ('&XHSTYPE' NE 'SCROLL').ZI36A                           00657200
&ZW                   SETC  '&ZW.1'                                     00657300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00657400
                      AGO   .ZI36C                                      00657500
.*                                                                      00657600
.ZI36A                ANOP  ,                                           00657700
&ZW                   SETC  '&ZW.0'                                     00657800
.ZI36C                ANOP  ,                                           00657900
.*-------------------------------------------------------------------   00658000
.***AI.L08 XFLAGS3 "CACHE"                                              00658100
.***      BL1'X1XXXXXX'                                                 00658200
         AIF   ('&XHSTYPE' NE 'CACHE').ZI37A                            00658300
&ZW                   SETC  '&ZW.1'                                     00658400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00658500
                      AGO   .ZI37C                                      00658600
.*                                                                      00658700
.ZI37A                ANOP  ,                                           00658800
&ZW                   SETC  '&ZW.0'                                     00658900
.ZI37C                ANOP  ,                                           00659000
.*-------------------------------------------------------------------   00659100
.***AI.L08 XFLAGS3 "NO"                                                 00659200
.***      BL1'XX1XXXXX'                                                 00659300
         AIF   ('&XCASTOUT' NE 'NO').ZI38A                              00659400
&ZW                   SETC  '&ZW.1'                                     00659500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00659600
                      AGO   .ZI38C                                      00659700
.*                                                                      00659800
.ZI38A                ANOP  ,                                           00659900
&ZW                   SETC  '&ZW.0'                                     00660000
.ZI38C                ANOP  ,                                           00660100
.*-------------------------------------------------------------------   00660200
.***AI.L08 XFLAGS3 "64"                                                 00660300
.***      BL1'XXX1XXXX'                                                 00660400
         AIF   ('&XBACK' NE '64').ZI39A                                 00660500
&ZW                   SETC  '&ZW.10000'                                 00660600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00660700
                      AGO   .ZI39C                                      00660800
.*                                                                      00660900
.ZI39A                ANOP  ,                                           00661000
&ZW                   SETC  '&ZW.00000'                                 00661100
.ZI39C                ANOP  ,                                           00661200
.*-------------------------------------------------------------------   00661300
.***AI.L11 XFLAGS3 BL1                                                  00661400
                      AIF   ('&ZCLNG' NE 'YES').ZI39E  ALL ZERO BITS    00661500
&ZOPN                 SETA  &ZOPN+1                                     00661600
&ZOPL(&ZOPN)          SETC  ' '                                         00661700
&ZOPO(&ZOPN)          SETC  'OI'                                        00661800
&ZOPV(&ZOPN)          SETC  '7(1),B''&ZW'''                             00661900
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00662000
.ZI39E                ANOP  ,                                           00662100
.*-------------------------------------------------------------------   00662200
.***AI.L25  XSTOKEN CL8                                                 00662300
                      AIF   ('&ZXSTOKEN' EQ '').ZI41E                   00662400
                      AIF   ('&ZXSTOKEN' EQ 'OUTPUT').ZI41E             00662500
&ZCGPR                SETC  '&XSTOKEN'                                  00662600
.*                                                                      00662700
                      AIF   ('&XSTOKEN'(1,1) NE '(').ZI41B              00662800
&ZCGPR   SETC  '0('.'&XSTOKEN'(2,K'&XSTOKEN-2).')'                      00662900
.ZI41B                ANOP  ,                                           00663000
.*                                                                      00663100
&ZOPN                 SETA  &ZOPN+1                                     00663200
&ZOPL(&ZOPN)          SETC  ' '                                         00663300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00663400
&ZOPV(&ZOPN)          SETC  '16(8,1),&ZCGPR'                            00663500
&ZOPD(&ZOPN)          SETC  '++ &ZXSTOKEN XSTOKEN'                      00663600
.*                                                                      00663700
.ZI41E                ANOP  ,                                           00663800
.*-------------------------------------------------------------------   00663900
.***AI.L25  XSTART F                                                    00664000
                      AIF   ('&ZXSTART' EQ '').ZI42E                    00664100
                      AIF   ('&ZXSTART' EQ 'OUTPUT').ZI42E              00664200
&ZCGPR                SETC  '&XSTART'                                   00664300
.*                                                                      00664400
                      AIF   ('&XSTART'(1,1) NE '(').ZI42B               00664500
&ZCGPR   SETC  '0('.'&XSTART'(2,K'&XSTART-2).')'                        00664600
                      AGO   .ZI42D                                      00664700
.ZI42B                ANOP  ,                                           00664800
.*                                                                      00664900
&ZC                   SETC  '&XSTART'(1,1)                              00665000
                      AIF   (T'&ZC NE 'N').ZI42D                        00665100
&ZC                   SETC  '&XSTART'                                   00665200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI42D               00665300
&ZCGPR                SETC  '=FL4''&XSTART'''                           00665400
.*                                                                      00665500
.ZI42D                ANOP  ,                                           00665600
.*                                                                      00665700
&ZOPN                 SETA  &ZOPN+1                                     00665800
&ZOPL(&ZOPN)          SETC  ' '                                         00665900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00666000
&ZOPV(&ZOPN)          SETC  '24(4,1),&ZCGPR'                            00666100
&ZOPD(&ZOPN)          SETC  '++ &ZXSTART XSTART'                        00666200
.*                                                                      00666300
.ZI42E                ANOP  ,                                           00666400
.*-------------------------------------------------------------------   00666500
.***AI.L18  XBLOCKS F                                                   00666600
         AIF   ('&XBLOCKS' NE '0').ZI43                                 00666700
&ZXBLOCKS             SETC  ''             RESET INPUT/OUTPUT           00666800
.ZI43                 ANOP  ,                                           00666900
.*-------------------------------------------------------------------   00667000
.***AI.L25  XBLOCKS F                                                   00667100
                      AIF   ('&ZXBLOCKS' EQ '').ZI43E                   00667200
                      AIF   ('&ZXBLOCKS' EQ 'OUTPUT').ZI43E             00667300
&ZCGPR                SETC  '&XBLOCKS'                                  00667400
.*                                                                      00667500
                      AIF   ('&XBLOCKS'(1,1) NE '(').ZI43B              00667600
&ZCGPR   SETC  '0('.'&XBLOCKS'(2,K'&XBLOCKS-2).')'                      00667700
                      AGO   .ZI43D                                      00667800
.ZI43B                ANOP  ,                                           00667900
.*                                                                      00668000
&ZC                   SETC  '&XBLOCKS'(1,1)                             00668100
                      AIF   (T'&ZC NE 'N').ZI43D                        00668200
&ZC                   SETC  '&XBLOCKS'                                  00668300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI43D               00668400
&ZCGPR                SETC  '=FL4''&XBLOCKS'''                          00668500
.*                                                                      00668600
.ZI43D                ANOP  ,                                           00668700
.*                                                                      00668800
&ZOPN                 SETA  &ZOPN+1                                     00668900
&ZOPL(&ZOPN)          SETC  ' '                                         00669000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00669100
&ZOPV(&ZOPN)          SETC  '28(4,1),&ZCGPR'                            00669200
&ZOPD(&ZOPN)          SETC  '++ &ZXBLOCKS XBLOCKS'                      00669300
.*                                                                      00669400
.ZI43E                ANOP  ,                                           00669500
.*-------------------------------------------------------------------   00669600
.***AI.L18  XTTOKEN CL16                                                00669700
         AIF   ('&XTTOKEN' NE '0').ZI44                                 00669800
&ZXTTOKEN             SETC  ''             RESET INPUT/OUTPUT           00669900
.ZI44                 ANOP  ,                                           00670000
.*-------------------------------------------------------------------   00670100
.***AI.L25  XTTOKEN CL16                                                00670200
                      AIF   ('&ZXTTOKEN' EQ '').ZI44E                   00670300
                      AIF   ('&ZXTTOKEN' EQ 'OUTPUT').ZI44E             00670400
&ZCGPR                SETC  '&XTTOKEN'                                  00670500
.*                                                                      00670600
                      AIF   ('&XTTOKEN'(1,1) NE '(').ZI44B              00670700
&ZCGPR   SETC  '0('.'&XTTOKEN'(2,K'&XTTOKEN-2).')'                      00670800
.ZI44B                ANOP  ,                                           00670900
.*                                                                      00671000
&ZOPN                 SETA  &ZOPN+1                                     00671100
&ZOPL(&ZOPN)          SETC  ' '                                         00671200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00671300
&ZOPV(&ZOPN)          SETC  '32(16,1),&ZCGPR'                           00671400
&ZOPD(&ZOPN)          SETC  '++ &ZXTTOKEN XTTOKEN'                      00671500
.*                                                                      00671600
.ZI44E                ANOP  ,                                           00671700
.*-------------------------------------------------------------------   00671800
.***AI.LVER01                                                           00671900
                      AIF  (&XPLISTVER LT 1).ZI47Z                      00672000
.*-------------------------------------------------------------------   00672100
.***AI.L25  XINITIAL F                                                  00672200
                      AIF   ('&ZXINITIAL' EQ '').ZI47E                  00672300
                      AIF   ('&ZXINITIAL' EQ 'OUTPUT').ZI47E            00672400
&ZCGPR                SETC  '&XINITIAL'                                 00672500
.*                                                                      00672600
                      AIF   ('&XINITIAL'(1,1) NE '(').ZI47B             00672700
&ZCGPR   SETC  '0('.'&XINITIAL'(2,K'&XINITIAL-2).')'                    00672800
                      AGO   .ZI47D                                      00672900
.ZI47B                ANOP  ,                                           00673000
.*                                                                      00673100
&ZC                   SETC  '&XINITIAL'(1,1)                            00673200
                      AIF   (T'&ZC NE 'N').ZI47D                        00673300
&ZC                   SETC  '&XINITIAL'                                 00673400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI47D               00673500
&ZCGPR                SETC  '=FL4''&XINITIAL'''                         00673600
.*                                                                      00673700
.ZI47D                ANOP  ,                                           00673800
.*                                                                      00673900
&ZOPN                 SETA  &ZOPN+1                                     00674000
&ZOPL(&ZOPN)          SETC  ' '                                         00674100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00674200
&ZOPV(&ZOPN)          SETC  '56(4,1),&ZCGPR'                            00674300
&ZOPD(&ZOPN)          SETC  '++ &ZXINITIAL XINITIAL'                    00674400
.*                                                                      00674500
.ZI47E                ANOP  ,                                           00674600
.*-------------------------------------------------------------------   00674700
.***AI.LVER02                                                           00674800
.ZI47Z                ANOP  ,                                           00674900
.*-------------------------------------------------------------------   00675000
.***AI.L25  XNAME CL8                                                   00675100
                      AIF   ('&ZXNAME' EQ '').ZI49E                     00675200
                      AIF   ('&ZXNAME' EQ 'OUTPUT').ZI49E               00675300
&ZCGPR                SETC  '&XNAME'                                    00675400
.*                                                                      00675500
                      AIF   ('&XNAME'(1,1) NE '(').ZI49B                00675600
&ZCGPR   SETC  '0('.'&XNAME'(2,K'&XNAME-2).')'                          00675700
.ZI49B                ANOP  ,                                           00675800
.*                                                                      00675900
&ZOPN                 SETA  &ZOPN+1                                     00676000
&ZOPL(&ZOPN)          SETC  ' '                                         00676100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00676200
&ZOPV(&ZOPN)          SETC  '8(8,1),&ZCGPR'                             00676300
&ZOPD(&ZOPN)          SETC  '++ &ZXNAME XNAME'                          00676400
.*                                                                      00676500
.ZI49E                ANOP  ,                                           00676600
.*-------------------------------------------------------------------   00676700
.***AI.L25  XNUMRANGE F                                                 00676800
                      AIF   ('&ZXNUMRANGE' EQ '').ZI51E                 00676900
                      AIF   ('&ZXNUMRANGE' EQ 'OUTPUT').ZI51E           00677000
&ZCGPR                SETC  '&XNUMRANGE'                                00677100
.*                                                                      00677200
                      AIF   ('&XNUMRANGE'(1,1) NE '(').ZI51B            00677300
&ZCGPR   SETC  '0('.'&XNUMRANGE'(2,K'&XNUMRANGE-2).')'                  00677400
                      AGO   .ZI51D                                      00677500
.ZI51B                ANOP  ,                                           00677600
.*                                                                      00677700
&ZC                   SETC  '&XNUMRANGE'(1,1)                           00677800
                      AIF   (T'&ZC NE 'N').ZI51D                        00677900
&ZC                   SETC  '&XNUMRANGE'                                00678000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI51D               00678100
&ZCGPR                SETC  '=FL4''&XNUMRANGE'''                        00678200
.*                                                                      00678300
.ZI51D                ANOP  ,                                           00678400
.*                                                                      00678500
&ZOPN                 SETA  &ZOPN+1                                     00678600
&ZOPL(&ZOPN)          SETC  ' '                                         00678700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00678800
&ZOPV(&ZOPN)          SETC  '24(4,1),&ZCGPR'                            00678900
&ZOPD(&ZOPN)          SETC  '++ &ZXNUMRANGE XNUMRANGE'                  00679000
.*                                                                      00679100
.ZI51E                ANOP  ,                                           00679200
.*-------------------------------------------------------------------   00679300
.***AI.L25  XRANGLIST AL4                                               00679400
                      AIF   ('&ZXRANGLIST' EQ '').ZI53E                 00679500
                      AIF   ('&ZXRANGLIST' EQ 'OUTPUT').ZI53E           00679600
&ZCGPR                SETC  '&XRANGLIST'                                00679700
.*                                                                      00679800
                      AIF   ('&XRANGLIST'(1,1) NE '(').ZI53B            00679900
&ZCGPR   SETC  '0('.'&XRANGLIST'(2,K'&XRANGLIST-2).')'                  00680000
                      AGO   .ZI53D                                      00680100
.ZI53B                ANOP  ,                                           00680200
.*                                                                      00680300
&ZC                   SETC  '&XRANGLIST'(1,1)                           00680400
                      AIF   (T'&ZC NE 'N').ZI53D                        00680500
&ZC                   SETC  '&XRANGLIST'                                00680600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI53D               00680700
&ZCGPR                SETC  '=AL4(&XRANGLIST)'                          00680800
.*                                                                      00680900
.ZI53D                ANOP  ,                                           00681000
.*                                                                      00681100
&ZOPN                 SETA  &ZOPN+1                                     00681200
&ZOPL(&ZOPN)          SETC  ' '                                         00681300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00681400
&ZOPV(&ZOPN)          SETC  '28(4,1),&ZCGPR'                            00681500
&ZOPD(&ZOPN)          SETC  '++ &ZXRANGLIST XRANGLIST'                  00681600
.*                                                                      00681700
.ZI53E                ANOP  ,                                           00681800
.*-------------------------------------------------------------------   00681900
&ZOPN1                SETA &ZOPN                                        00682000
.*******************************************************************    00682100
.***  PROCESS DSPSERV OUTPUT PARAMETERS                                 00682200
.*******************************************************************    00682300
                      ACTR  10000                                       00682400
.*------------------------------------------------------------------    00682500
.***AO.L02 XOUTNAME CL8                                                 00682600
         AIF   ('&ZXOUTNAME' EQ 'OUTPUT').ZO40A  OUTPUT                 00682700
         AIF   ('&ZXOUTNAME' NE 'INOUT').ZO40C  INOUT                   00682800
.ZO40A    AIF   ('&XOUTNAME'(1,1) NE '(').ZO40B  ADDR IN GPR            00682900
&ZCGPR   SETC  '&XOUTNAME'(2,K'&XOUTNAME-2)                             00683000
&ZOPN                 SETA  &ZOPN+1                                     00683100
&ZOPL(&ZOPN)          SETC  ' '                                         00683200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00683300
&ZOPV(&ZOPN)          SETC  '0(8,&ZCGPR),8(1)'                          00683400
&ZOPD(&ZOPN)          SETC  '++ XOUTNAME CL8'                           00683500
                      AGO   .ZO40C                                      00683600
.*                                                                      00683700
.ZO40B                ANOP  ,                                           00683800
&ZAWRK   SETA  K'&XOUTNAME                                              00683900
         AIF   ('&XOUTNAME'(&ZAWRK,1) NE ')').ZO40G                     00684000
&ZN      SETA  2                                                        00684100
.ZO40H    ANOP                                                          00684200
         AIF   (&ZN GE &ZAWRK).ZO40G                                    00684300
         AIF   ('&XOUTNAME'(&ZN,1) NE '(').ZO40I                        00684400
&ZC      SETC  '&XOUTNAME'(1,&ZN).'8'.','                               00684500
&ZC      SETC  '&ZC'.'&XOUTNAME'(&ZN+1,&ZAWRK-&ZN).',8(1)'              00684600
         AGO   .ZO40J                                                   00684700
.ZO40I    ANOP                                                          00684800
&ZN      SETA  &ZN+1                                                    00684900
         AGO   .ZO40H                                                   00685000
.ZO40G    ANOP                                                          00685100
&ZC      SETC  '&XOUTNAME.(8),8(1)'                                     00685200
.ZO40J    ANOP                                                          00685300
&ZOPN                 SETA  &ZOPN+1                                     00685400
&ZOPL(&ZOPN)          SETC  ' '                                         00685500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00685600
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00685700
&ZOPD(&ZOPN)          SETC  '++ XOUTNAME CL8'                           00685800
.ZO40C                ANOP  ,                                           00685900
.*------------------------------------------------------------------    00686000
.***AO.L02 XSTOKEN CL8                                                  00686100
         AIF   ('&ZXSTOKEN' EQ 'OUTPUT').ZO41A  OUTPUT                  00686200
         AIF   ('&ZXSTOKEN' NE 'INOUT').ZO41C  INOUT                    00686300
.ZO41A    AIF   ('&XSTOKEN'(1,1) NE '(').ZO41B  ADDR IN GPR             00686400
&ZCGPR   SETC  '&XSTOKEN'(2,K'&XSTOKEN-2)                               00686500
&ZOPN                 SETA  &ZOPN+1                                     00686600
&ZOPL(&ZOPN)          SETC  ' '                                         00686700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00686800
&ZOPV(&ZOPN)          SETC  '0(8,&ZCGPR),16(1)'                         00686900
&ZOPD(&ZOPN)          SETC  '++ XSTOKEN CL8'                            00687000
                      AGO   .ZO41C                                      00687100
.*                                                                      00687200
.ZO41B                ANOP  ,                                           00687300
&ZAWRK   SETA  K'&XSTOKEN                                               00687400
         AIF   ('&XSTOKEN'(&ZAWRK,1) NE ')').ZO41G                      00687500
&ZN      SETA  2                                                        00687600
.ZO41H    ANOP                                                          00687700
         AIF   (&ZN GE &ZAWRK).ZO41G                                    00687800
         AIF   ('&XSTOKEN'(&ZN,1) NE '(').ZO41I                         00687900
&ZC      SETC  '&XSTOKEN'(1,&ZN).'8'.','                                00688000
&ZC      SETC  '&ZC'.'&XSTOKEN'(&ZN+1,&ZAWRK-&ZN).',16(1)'              00688100
         AGO   .ZO41J                                                   00688200
.ZO41I    ANOP                                                          00688300
&ZN      SETA  &ZN+1                                                    00688400
         AGO   .ZO41H                                                   00688500
.ZO41G    ANOP                                                          00688600
&ZC      SETC  '&XSTOKEN.(8),16(1)'                                     00688700
.ZO41J    ANOP                                                          00688800
&ZOPN                 SETA  &ZOPN+1                                     00688900
&ZOPL(&ZOPN)          SETC  ' '                                         00689000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00689100
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00689200
&ZOPD(&ZOPN)          SETC  '++ XSTOKEN CL8'                            00689300
.ZO41C                ANOP  ,                                           00689400
.*------------------------------------------------------------------    00689500
.***AO.L02 XORIGIN F                                                    00689600
         AIF   ('&ZXORIGIN' EQ 'OUTPUT').ZO45A  OUTPUT                  00689700
         AIF   ('&ZXORIGIN' NE 'INOUT').ZO45C  INOUT                    00689800
.ZO45A    AIF   ('&XORIGIN'(1,1) NE '(').ZO45B  ADDR IN GPR             00689900
&ZCGPR   SETC  '&XORIGIN'(2,K'&XORIGIN-2)                               00690000
&ZOPN                 SETA  &ZOPN+1                                     00690100
&ZOPL(&ZOPN)          SETC  ' '                                         00690200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00690300
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),48(1)'                         00690400
&ZOPD(&ZOPN)          SETC  '++ XORIGIN F'                              00690500
                      AGO   .ZO45C                                      00690600
.*                                                                      00690700
.ZO45B                ANOP  ,                                           00690800
&ZAWRK   SETA  K'&XORIGIN                                               00690900
         AIF   ('&XORIGIN'(&ZAWRK,1) NE ')').ZO45G                      00691000
&ZN      SETA  2                                                        00691100
.ZO45H    ANOP                                                          00691200
         AIF   (&ZN GE &ZAWRK).ZO45G                                    00691300
         AIF   ('&XORIGIN'(&ZN,1) NE '(').ZO45I                         00691400
&ZC      SETC  '&XORIGIN'(1,&ZN).'4'.','                                00691500
&ZC      SETC  '&ZC'.'&XORIGIN'(&ZN+1,&ZAWRK-&ZN).',48(1)'              00691600
         AGO   .ZO45J                                                   00691700
.ZO45I    ANOP                                                          00691800
&ZN      SETA  &ZN+1                                                    00691900
         AGO   .ZO45H                                                   00692000
.ZO45G    ANOP                                                          00692100
&ZC      SETC  '&XORIGIN.(4),48(1)'                                     00692200
.ZO45J    ANOP                                                          00692300
&ZOPN                 SETA  &ZOPN+1                                     00692400
&ZOPL(&ZOPN)          SETC  ' '                                         00692500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00692600
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00692700
&ZOPD(&ZOPN)          SETC  '++ XORIGIN F'                              00692800
.ZO45C                ANOP  ,                                           00692900
.*------------------------------------------------------------------    00693000
.***AO.L02 XNUMBLKS F                                                   00693100
         AIF   ('&ZXNUMBLKS' EQ 'OUTPUT').ZO46A  OUTPUT                 00693200
         AIF   ('&ZXNUMBLKS' NE 'INOUT').ZO46C  INOUT                   00693300
.ZO46A    AIF   ('&XNUMBLKS'(1,1) NE '(').ZO46B  ADDR IN GPR            00693400
&ZCGPR   SETC  '&XNUMBLKS'(2,K'&XNUMBLKS-2)                             00693500
&ZOPN                 SETA  &ZOPN+1                                     00693600
&ZOPL(&ZOPN)          SETC  ' '                                         00693700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00693800
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),52(1)'                         00693900
&ZOPD(&ZOPN)          SETC  '++ XNUMBLKS F'                             00694000
                      AGO   .ZO46C                                      00694100
.*                                                                      00694200
.ZO46B                ANOP  ,                                           00694300
&ZAWRK   SETA  K'&XNUMBLKS                                              00694400
         AIF   ('&XNUMBLKS'(&ZAWRK,1) NE ')').ZO46G                     00694500
&ZN      SETA  2                                                        00694600
.ZO46H    ANOP                                                          00694700
         AIF   (&ZN GE &ZAWRK).ZO46G                                    00694800
         AIF   ('&XNUMBLKS'(&ZN,1) NE '(').ZO46I                        00694900
&ZC      SETC  '&XNUMBLKS'(1,&ZN).'4'.','                               00695000
&ZC      SETC  '&ZC'.'&XNUMBLKS'(&ZN+1,&ZAWRK-&ZN).',52(1)'             00695100
         AGO   .ZO46J                                                   00695200
.ZO46I    ANOP                                                          00695300
&ZN      SETA  &ZN+1                                                    00695400
         AGO   .ZO46H                                                   00695500
.ZO46G    ANOP                                                          00695600
&ZC      SETC  '&XNUMBLKS.(4),52(1)'                                    00695700
.ZO46J    ANOP                                                          00695800
&ZOPN                 SETA  &ZOPN+1                                     00695900
&ZOPL(&ZOPN)          SETC  ' '                                         00696000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00696100
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00696200
&ZOPD(&ZOPN)          SETC  '++ XNUMBLKS F'                             00696300
.ZO46C                ANOP  ,                                           00696400
.*******************************************************************    00696500
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00696600
.*******************************************************************    00696700
.ZMFLX                ANOP  ,              MF=L PROCESSING              00696800
.*******************************************************************    00696900
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00697000
.*******************************************************************    00697100
                      ACTR  10000                                       00697200
.*                                                                      00697300
                      LCLA  &ZLC           COLUMN POSITION              00697400
                      LCLA  &ZOPX          LIST TABLE INDEX             00697500
                      LCLC  &ZLL           LABEL                        00697600
                      LCLC  &ZLOP          OPERATION                    00697700
                      LCLC  &ZLV           VALUE                        00697800
                      LCLC  &ZLD           DESCRIPTION                  00697900
.*                                                                      00698000
&ZOPX                 SETA  1                                           00698100
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00698200
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00698300
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00698400
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00698500
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00698600
                      AIF   (K'&ZLD LE 0).ZL5                           00698700
&ZLC                  SETA  35             COMMENT COLUMN               00698800
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00698900
&ZLC                  SETA  33             COMMMENT COLUMN              00699000
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00699100
&ZLV                  SETC  '&ZLV'.' '                                  00699200
                      AGO   .ZL3                                        00699300
.*                                                                      00699400
.ZL4                  ANOP  ,                                           00699500
&ZLV                  SETC  '&ZLV'.' '                                  00699600
.ZL5                  ANOP  ,                                           00699700
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00699800
.*                                                                      00699900
&ZLL     &ZLOP &ZLV                                                     00700000
.*                                                                      00700100
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00700200
                      AGO   .ZL2           CONTINUE LOOPING             00700300
.*                                                                      00700400
.ZLX                  ANOP  ,                                           00700500
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00700600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00700700
         L     14,16(0,0)        GET CVT ADDRESS                        00700800
         L     14,772(14,0)      GET SYSTEM FUNCTION TABLE ADDRESS      00700900
         L     14,208(14,0)      GET LX/EX FOR SERVICE ROUTINE          00701000
         AIF   ('&XDISABLED' NE 'YES').DSP001                           00701100
         LA    15,3              GET EX FOR SERVICE ROUTINE             00701200
         OR    14,15             GET LX/EX FOR SERVICE ROUTINE          00701300
.DSP001  ANOP                                                           00701400
         PC    0(14)             PC TO DSPSERV SERVICE                  00701500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00701600
.ZLINKX               ANOP  ,                                           00701700
.*******************************************************************    00701800
.***AP.X01  FORMAT GENERATED CODE                                       00701900
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00702000
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00702100
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00702200
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00702300
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00702400
                      AIF   (K'&ZLD LE 0).ZL51                          00702500
&ZLC                  SETA  35             COMMENT COLUMN               00702600
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00702700
&ZLC                  SETA  33             COMMENT COLUMN               00702800
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00702900
&ZLV                  SETC  '&ZLV'.' '                                  00703000
                      AGO   .ZL31                                       00703100
.*                                                                      00703200
.ZL41                 ANOP  ,                                           00703300
&ZLV                  SETC  '&ZLV'.' '                                  00703400
.ZL51                 ANOP  ,                                           00703500
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00703600
.*                                                                      00703700
&ZLL     &ZLOP &ZLV                                                     00703800
.*                                                                      00703900
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00704000
                      AGO   .ZL21          CONTINUE LOOPING             00704100
.*                                                                      00704200
.ZLX1                 ANOP  ,                                           00704300
.*******************************************************************    00704400
.***AP.X02  END OF DSPSERV MACRO                                        00704500
&ZDSPSERV             SETC  'YES'          SET DSPSERV USED             00704600
         POP   PRINT                                                    00704700
*                                            DSPSERV-1                  00704800
         SPACE 1                                                        00704900
.ZLX2                 ANOP  ,                                           00705000
         MEND                                                           00705100
**********************************************************************/ 00705200
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00705300
*%DSPSERV: MACRO KEYS(CREATE,NAME,GENNAME,OUTNAME,BLOCKS,TYPE,DREF,     00705400
*                 SCOPE,BACK,HSTYPE,SHARE,CASTOUT,CALLERKEY,KEY,FPROT,  00705500
*                 TTOKEN,STOKEN,ORIGIN,NUMBLKS,DELETE,RELEASE,INLIST,   00705600
*                 START,NUMRANGE,RANGLIST,DISABLED,DEFINE,IOON,LONG,    00705700
*                 IOOFF,DREFON,DREFOFF,FORCE,EXTEND,VAR,OUT,LOAD,       00705800
*                 RETCODE,RSNCODE,PLISTVER,MF);                         00705900
*  ANS('?'||MACLABEL||' '||'DSPSERVP '||MACLIST||                       00706000
*         ' '||MACKEYS||';') COL(MACLMAR);                              00706100
*%END DSPSERV;                                                          00706200
