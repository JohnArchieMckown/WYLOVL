*/**** START OF SPECIFICATIONS **************************************** 00050000
*                                                                     * 00100000
*                                                                     * 00150000
*01* MACRO NAME:  IWMMEXTR                              -09/15/99-<1> * 00200000
*                                                                     * 00250000
*                                                                     * 00300000
*01* DESCRIPTIVE NAME:  Monitor environment extract service           * 00350000
*                                                                     * 00400000
*01* PROPRIETARY STATEMENT:                                           * 00450000
*                                                                     * 00500000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00550000
*     5647-A01 (C) COPYRIGHT IBM CORP. 1993, 2000                     * 00600000
*                                                                     * 00750000
* STATUS= JBB6609                                                     * 00800000
*                                                                     * 00850000
*                                                                     * 00900000
*                                                                     * 00950000
*01* FUNCTION:                                                        * 01000000
*                                                                     * 01050000
*                                                                     * 01100000
*      The purpose of this service is to extract information about    * 01150000
*      the monitoring environment which was previously passed through * 01200000
*      IWMMINIT/IWMMRELA.  When IWMMRELA was invoked for the          * 01233300
*      monitoring environment, only owner token, owner data and       * 01266600
*      abnormal conditions are always available.  Arrival time,       * 01279000
*      userid, and transaction name are only available when IWMMINIT  * 01291400
*      was previously invoked.                                        * 01303800
*                                                                     * 01316200
*      When the service class token is requested, the value may       * 01328600
*      represent a token from a prior active policy. Furthermore,     * 01341000
*      when the monitoring environment was established via IWMMRELA,  * 01353400
*      the token may be zero, which does not represent a valid        * 01365800
*      service class or report class.  IWMWQRY may be used to obtain  * 01378200
*      the service and/or report class name, along with other         * 01390600
*      information about these classes.                               * 01403000
*                                                                     * 01415400
*      When no output keywords are specified, the service merely      * 01427800
*      checks whether a monitoring environment was established and    * 01440200
*      passes short form checking.                                    * 01452600
*                                                                     * 01466400
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 01499700
*                                                                     * 01533000
*01* END OF EXTERNAL CLASSIFICATION:                                  * 01566300
*                                                                     * 01600000
*01* ENVIRONMENT:                                                     * 01650000
*                                                                     * 01700000
*                                                                     * 01750000
*      Dispatchable unit mode: Task or SRB mode.                      * 01800000
*                                                                     * 01850000
*      Minimum authorization: Either problem state or supervisor      * 01900000
*                        state.  Any PSW key.                         * 01950000
*                                                                     * 02000000
*      AMODE:            31-bit.                                      * 02050000
*                                                                     * 02100000
*      ASC mode:         Primary.                                     * 02150000
*                                                                     * 02200000
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 02250000
*                                                                     * 02350000
*      Interrupt status: Enabled for I/O and external interrupts.     * 02364200
*                                                                     * 02378400
*      Locks:            Suspend locks are allowed.                   * 02392600
*                                                                     * 02406800
*      Control parameters: Control parameters must be in the primary  * 02421000
*                        address space.                               * 02435200
*                                                                     * 02450000
*                                                                     * 02500000
*                                                                     * 02700000
*01* PROGRAMMING REQUIREMENTS:                                        * 02705500
*                                                                     * 02711000
*                                                                     * 02716500
*    1.  The macro IWMYCON must be included to use this macro.        * 02722000
*                                                                     * 02727500
*    2.  The macro IWMPB must be in the library concatenation, since  * 02733000
*        it is included by IWMYCON.                                   * 02738500
*                                                                     * 02744000
*    3.  Note that the high order halfword of register 0, and the     * 02749500
*        reason code variable when specified, may be non-zero and     * 02755000
*        represents diagnostic data which is NOT part of the external * 02760500
*        interface.  The high order halfword should thus be excluded  * 02766000
*        from comparison with the reason code values described above. * 02771500
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 02777000
*        be used for this purpose.                                    * 02782500
*                                                                     * 02788000
*                                                                     * 02793500
*                                                                     * 02799000
*01* RESTRICTIONS:                                                    * 02804500
*                                                                     * 02810000
*                                                                     * 02815500
*    1.  This macro may not be used prior to the completion of WLM    * 02821000
*        address space initialization                                 * 02826500
*                                                                     * 02832000
*    2.  This macro may only be used on MVS/ESA (version 3 or         * 02837500
*        higher), NOT versions 1 or 2 of MVS.                         * 02843000
*                                                                     * 02850000
*    3.  Caller is responsible for error recovery                     * 02900000
*                                                                     * 02950000
*    4.  Only limited checking is done against the input monitoring   * 03000000
*        token.                                                       * 03050000
*                                                                     * 03100000
*    5.  If the key specified on IWMMCREA was a user key (8-F), then  * 03150000
*        the primary addressability must exist to the performance     * 03200000
*        block IWMMCREA obtained.  This condition is satisfied by     * 03250000
*        ensuring that current primary matches primary at the time    * 03300000
*        that IWMMCREA was invoked.  If this service is invoked in a  * 03350000
*        subspace, the condition may be satisfied by ensuring that    * 03400000
*        the performance block is shared with the base space.         * 03450000
*                                                                     * 03700000
*    6.  The caller must serialize to prevent any delay monitoring    * 03750000
*        services from being invoked concurrently for the environment * 03800000
*        represented by the monitoring token.                         * 03850000
*                                                                     * 03950000
*                                                                     * 04000000
*                                                                     * 04050000
*01* INPUT REGISTER INFORMATION:                                      * 04054500
*                                                                     * 04059000
*    Before issuing the IWMMEXTR macro, the caller does not have to   * 04063500
*    place any information into any register unless using it in       * 04068000
*    register notation for a particular parameter, or using it as a   * 04072500
*    base register.                                                   * 04077000
*                                                                     * 04081500
*01* OUTPUT REGISTER INFORMATION:                                     * 04086000
*                                                                     * 04090500
*    When control returns to the caller, the GPRs contain:            * 04095000
*                                                                     * 04100000
*                                                                     * 04150000
*    REGISTER  CONTENTS                                               * 04200000
*                                                                     * 04500000
*    0         Reason code if GR15 return code is non-zero            * 04520000
*                                                                     * 04540000
*    1         Used as work registers by the system                   * 04560000
*                                                                     * 04580000
*    2-13      Unchanged                                              * 04600000
*                                                                     * 04620000
*    14        Used as work registers by the system                   * 04640000
*                                                                     * 04660000
*    15        Return code                                            * 04680000
*                                                                     * 04700000
*                                                                     * 04720000
*                                                                     * 04740000
*    When control returns to the caller, the ARs contain:             * 04760000
*                                                                     * 04780000
*                                                                     * 04800000
*    REGISTER  CONTENTS                                               * 04820000
*                                                                     * 04840000
*    0-1       Used as work registers by the system                   * 04860000
*                                                                     * 04880000
*    2-13      Unchanged                                              * 04900000
*                                                                     * 04920000
*    14-15     Used as work registers by the system                   * 04940000
*                                                                     * 04960000
*                                                                     * 04980000
*                                                                     * 05000000
*    Some callers depend on register contents remaining the same      * 05020000
*    before and after issuing a service.  If the system changes the   * 05040000
*    contents of registers on which the caller depends, the caller    * 05060000
*    must save them before issuing the service, and restore them      * 05080000
*    after the system returns control.                                * 05100000
*                                                                     * 05120000
*01* PERFORMANCE IMPLICATIONS:                                        * 05140000
*                                                                     * 05160000
*    None                                                             * 05180000
*                                                                     * 05200000
*01* SYNTAX:                                                          * 05250000
*                                                                     * 05300000
*[xlabel]  IWMMEXTR     MONTKN=xmontkn                                * 05350000
*                     [,OWNER_TOKEN=xowner_token]                     * 05400000
*                     [,OWNER_DATA=xowner_data]                       * 05450000
*                     [,ARRIVALTIME=xarrivaltime]                     * 05500000
*                     [,TRXNAME=xtrxname]                             * 05550000
*                     [,USERID=xuserid]                               * 05600000
*                     [,SERVCLS=xservcls]                             * 05650000
*                     [,TTRACETOKEN=xttracetoken]                     * 05675000
*                     [,ABNORMAL_COND=xabnormal_cond]                 * 05700000
*                     [,RETCODE=xretcode]                             * 05750000
*                     [,RSNCODE=xrsncode]                             * 05800000
*                     [,PLISTVER=xplistver|IMPLIED_VERSION]         * 05825000
*                                                                     * 05850000
*                                                                     * 05900000
*      Where:                                                         * 05950000
*                                                                     * 06000000
*                                                                     * 06050000
*      [xlabel]                                                       * 06100000
*          is an optional symbol, starting in column 1, that is the   * 06150000
*          name on the IWMMEXTR macro invocation.  The name must      * 06200000
*          conform to the rules for an ordinary assembler language    * 06250000
*          symbol.                                                    * 06300000
*          DEFAULT: No name.                                          * 06350000
*                                                                     * 06400000
*                                                                     * 06450000
*                                                                     * 06500000
*                                                                     * 06550000
*      MONTKN=xmontkn                                                 * 06600000
*          is the name (RS-type), or address in register (2)-(12), of * 06650000
*          a required 32 bit input which contains the delay           * 06700000
*          monitoring token                                           * 06750000
*                                                                     * 06800000
*                                                                     * 06850000
*                                                                     * 06900000
*                                                                     * 06950000
*      [OWNER_TOKEN=xowner_token]                                     * 07000000
*          is the name (RS-type), or address in register (2)-(12), of * 07050000
*          an optional 32 bit output which is to receive the token    * 07100000
*          established by the user/owner of the monitoring            * 07141600
*          environment.  The format is undefined to MVS.  When the    * 07183200
*          monitoring environment is not associated with an           * 07224800
*          OWNER_TOKEN value, the output will be a word of binary     * 07266400
*          zeros.                                                     * 07308000
*                                                                     * 07350000
*                                                                     * 07400000
*                                                                     * 07450000
*                                                                     * 07500000
*      [OWNER_DATA=xowner_data]                                       * 07550000
*          is the name (RS-type), or address in register (2)-(12), of * 07600000
*          an optional 32 bit output which is to receive the data     * 07650000
*          established by the user/owner of the monitoring            * 07691600
*          environment.  The format is undefined to MVS.  When the    * 07733200
*          monitoring environment is not associated with an           * 07774800
*          OWNER_TOKEN value, the output will be a word of binary     * 07816400
*          zeros.                                                     * 07858000
*                                                                     * 07900000
*                                                                     * 07950000
*                                                                     * 08000000
*                                                                     * 08050000
*      [ARRIVALTIME=xarrivaltime]                                     * 08100000
*          is the name (RS-type), or address in register (2)-(12), of * 08150000
*          an optional 64 bit output which contains the work arrival  * 08200000
*          time in STCK format.                                       * 08250000
*                                                                     * 08300000
*                                                                     * 08350000
*                                                                     * 08400000
*                                                                     * 08450000
*      [TRXNAME=xtrxname]                                             * 08500000
*          is the name (RS-type), or address in register (2)-(12), of * 08550000
*          an optional 8 character output which contains the          * 08600000
*          transaction name.  The field will be all blanks when       * 08650000
*          NO_TRXNAME was specified on IWMMINIT.                      * 08700000
*                                                                     * 08750000
*                                                                     * 08800000
*                                                                     * 08850000
*                                                                     * 08900000
*      [USERID=xuserid]                                               * 08950000
*          is the name (RS-type), or address in register (2)-(12), of * 09000000
*          an optional 8 character output which contains the local    * 09050000
*          userid associated with the work request.  The field will   * 09100000
*          be all blanks when NO_USERID was specified on IWMMINIT.    * 09150000
*                                                                     * 09200000
*                                                                     * 09250000
*                                                                     * 09300000
*                                                                     * 09350000
*      [SERVCLS=xservcls]                                             * 09400000
*          is the name (RS-type), or address in register (2)-(12), of * 09450000
*          an optional 32 bit output which contains the service class * 09500000
*          token.  When the monitoring environment is not associated  * 09550000
*          with a service class token, the output will be a word of   * 09600000
*          binary zeros.                                              * 09650000
*                                                                     * 09700000
*                                                                     * 09750000
*                                                                     * 09800000
*                                                                     * 09850000
*      [TTRACETOKEN=xttracetoken]                                     * 09854500
*          is the name (RS-type), or address in register (2)-(12), of * 09859000
*          an optional 32 character output which contains the         * 09863500
*          transaction trace token associated with the work request.  * 09868000
*          The field will be all zero when NO_TTRACETOKEN was         * 09872500
*          specified on IWMMINIT.                                     * 09877000
*                                                                     * 09881500
*                                                                     * 09886000
*                                                                     * 09890500
*                                                                     * 09895000
*      [ABNORMAL_COND=xabnormal_cond]                                 * 09900000
*          is the name (RS-type), or address in register (2)-(12), of * 09950000
*          an optional 32 bit output which contains the current       * 10000000
*          information about abnormal conditions which were either    * 10050000
*          recorded in the input monitoring environment or which were * 10100000
*          propagated to it via IWMMXFER Function(Return).  Multiple  * 10150000
*          conditions may exist.                                      * 10200000
*                                                                     * 10250000
*          The mask, Iwmmabnl_Scope_LocalMVS, may be used to          * 10300000
*          determine whether an abnormality which only affects work   * 10350000
*          on the current MVS image was recorded.                     * 10400000
*                                                                     * 10450000
*          The mask, Iwmmabnl_Scope_Sysplex, may be used to determine * 10500000
*          whether an abnormality which affects work on all MVS       * 10550000
*          images in the sysplex was recorded.                        * 10600000
*                                                                     * 10650000
*          To determine whether a condition was recorded, merely AND  * 10700000
*          the field supplied for ABNORMAL_COND with the relevant     * 10750000
*          mask. The result will be nonzero when the condition is     * 10800000
*          true, zero when the condition is false.                    * 10850000
*                                                                     * 10900000
*                                                                     * 10950000
*                                                                     * 11000000
*                                                                     * 11050000
*      [RETCODE=xretcode]                                             * 11100000
*          is the name (RS-type) of an optional fullword output       * 11150000
*          variable, or register (2)-(12), into which the return code * 11200000
*          is to be copied from GPR 15.                               * 11250000
*                                                                     * 11300000
*                                                                     * 11350000
*                                                                     * 11400000
*                                                                     * 11450000
*      [RSNCODE=xrsncode]                                             * 11500000
*          is the name (RS-type) of an optional fullword output       * 11550000
*          variable, or register (2)-(12), into which the reason code * 11600000
*          is to be copied from GPR 0.                                * 11650000
*                                                                     * 11652700
*                                                                     * 11655400
*                                                                     * 11658100
*                                                                     * 11660800
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 11663500
*          is an optional byte input decimal value in the "0-1" range * 11666200
*          that specifies the macro version.  PLISTVER determines     * 11668900
*          which parameter list is generated.  The macro keys         * 11671600
*          associated with each supported version of the macro are    * 11674300
*          listed in MACRO USAGE NOTE 2.  Note that MAX may be        * 11677000
*          specified instead of a number, and the parameter list will * 11679700
*          be of the largest size currently supported. This size may  * 11682400
*          grow from release to release (thus possibly affecting the  * 11685100
*          amount of storage needed by your program).                 * 11687800
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 11690500
*          default is the lowest version which allows all of the      * 11693200
*          parameters specified on the invocation to be processed.    * 11695900
*                                                                     * 11700000
*                                                                     * 11750000
*                                                                     * 11800000
*01* ABEND CODES:  None.                                              * 11816600
*                                                                     * 11833200
*01* RETURN CODES:                                                    * 11850000
*                                                                     * 11900000
*                                                                     * 11950000
*            0    Name: IwmRetCodeOk                                  * 12000000
*                                                                     * 12050000
*                 Meaning: Successful completion.                     * 12100000
*                                                                     * 12200000
*                 Action: None required.                              * 12210000
*                                                                     * 12220000
*            4    Name: IwmRetCodeWarning                             * 12230000
*                                                                     * 12240000
*                 Meaning: Successful completion, unusual conditions  * 12250000
*                 noted.                                              * 12260000
*                                                                     * 12270000
*                                                                     * 12280000
*                 HEX REASON  MEANING/ACTION                          * 12290000
*                 CODE                                                * 12300000
*                                                                     * 12350000
*                 xxxx0402    Name: IwmRsnCodeNoMonEnv                * 12375000
*                                                                     * 12400000
*                             Meaning:  Monitoring token indicates    * 12450000
*                             that no monitoring environment exists.  * 12500000
*                                                                     * 12600000
*                             Action: None required.                  * 12622700
*                                                                     * 12645400
*                 xxxx040C    Name: IwmRsnCodeMonEnvLacksInfo         * 12668100
*                                                                     * 12690800
*                             Meaning:  Input monitoring environment  * 12713500
*                             does not contain the necessary          * 12736200
*                             information to return the data          * 12758900
*                             requested.                              * 12781600
*                                                                     * 12804300
*                             Action: None required.                  * 12827000
*                                                                     * 12850000
*                                                                     * 12900000
*                                                                     * 12950000
*            8    Name: IwmRetCodeInvocError                          * 12975000
*                                                                     * 13000000
*                 Meaning: Invalid invocation environment or          * 13050000
*                 parameters.                                         * 13100000
*                                                                     * 13150000
*                                                                     * 13183300
*                 HEX REASON  MEANING/ACTION                          * 13216600
*                 CODE                                                * 13250000
*                                                                     * 13300000
*                 xxxx0820    Name: IwmRsnCodeBadMonEnv               * 13325000
*                                                                     * 13350000
*                             Meaning:  Monitoring environment does   * 13400000
*                             not pass short form verification.       * 13450000
*                                                                     * 13550000
*                             Action: Check for possible storage      * 13583300
*                             overlay.                                * 13616600
*                                                                     * 13650000
*                                                                     * 13700000
*                                                                     * 13750000
*                                                                     * 13800000
*                                                                     * 13850000
*01* REASON CODES:                                                    * 13900000
*                                                                     * 13950000
*       A unique reason code will be returned whenever the return     * 14000000
*       code is non-zero.  Reason codes, as appropriate, are defined  * 14050000
*       under their corresponding return code.  Reason code and       * 14100000
*       return code constants are defined within IWMYCON.  Note that  * 14150000
*       the high order halfword of register 0, and the reason code    * 14200000
*       variable when specified, may be non-zero and represents       * 14250000
*       diagnostic data which is NOT part of the external interface.  * 14300000
*       The high order halfword should thus be excluded from          * 14350000
*       comparison with the reason code values described above.  The  * 14400000
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 14450000
*       used for this purpose.                                        * 14500000
*                                                                     * 14550000
*01* MODULE TYPE:  ASSEM MACRO                                        * 14600000
*                                                                     * 14650000
*02*   PROCESSOR:  ASSEM                                              * 14700000
*                                                                     * 14750000
*01* COMPONENT:  SCWLM                                                * 14800000
*                                                                     * 14850000
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 14900000
*                                                                     * 14950000
*01* EXAMPLES:                                                        * 14966600
*                                                                     * 14983200
*01* MACRO USAGE NOTES:                                               * 15000000
*                                                                     * 15050000
*                                                                     * 15100000
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 15150000
*        global macro variable.  Any value other than 'NO' will       * 15200000
*        result in the macro expansion being printed.  The default is * 15250000
*        'YES'.  The following examples illustrate how the ZPRINT     * 15300000
*        variable should be set.                                      * 15350000
*                                                                     * 15400000
*                    GBLC &ZPRINT                                     * 15450000
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 15500000
*                                                                     * 16500000
*                                                                     * 16550000
*    2.  The IWMMEXTR macro supports multiple versions. The macro key * 16552000
*        list  below  contains the version level in which the key was * 16554000
*        first  introduced.  Positionals  are  identified by the word * 16556000
*        'Positional'  followed by the numeric value of its position. * 16558000
*        Nested  positionals  are  preceded  by their outer key.  The * 16560000
*        lowest value represents the original version and the highest * 16562000
*        value  represents  the  most  recent version of the IWMMEXTR * 16564000
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 16566000
*        least  as high as the highest version number of all the keys * 16568000
*        being used.                                                  * 16570000
*                                                                     * 16572000
*        VERSION   KEY                                                * 16574000
*                                                                     * 16576000
*              0      ABNORMAL_COND                                   * 16578000
*                     ARRIVALTIME                                     * 16580000
*                     MONTKN                                          * 16582000
*                     OWNER_DATA                                      * 16584000
*                     OWNER_TOKEN                                     * 16586000
*                     SERVCLS                                         * 16588000
*                     TRXNAME                                         * 16590000
*                     USERID                                          * 16592000
*              1      TTRACETOKEN                                     * 16594000
*                                                                     * 16596000
*                                                                     * 16598000
*                                                                     * 16600000
*01* CHANGE ACTIVITY:                                                 * 16650000
*                                                                     * 16700000
*   Flag LineItem  FMID    Date   ID    Comment                       * 16750000
*                                                                     * 16800000
*    $L0=WLMI     HBB5510 920309 PD16:  Workload Manager I            * 16850000
*    $L1=WLMP     HBB6603 950612 PD16:  Extract service class for     * 16866600
*                                         Related PBs                 * 16883200
*    $L2=TTRACE   JBB6609 981009 PDDA:  Extract transaction trace     * 16888800
*                                         token for Related PBs       * 16894400
****** END OF SPECIFICATIONS *****************************************/ 16900000
*/* TLINE 1 *********************************************************** 16950000
         MACRO                                                          17000000
&XLABEL  IWMMEXTR &MONTKN=,&OWNER_TOKEN=,&OWNER_DATA=,&ARRIVALTIME=,   *17050000
               &TRXNAME=,&USERID=,&SERVCLS=,&TTRACETOKEN=,             *17100000
               &ABNORMAL_COND=,&RETCODE=,&RSNCODE=,&PLISTVER=           17150000
.*                                                                      17200000
*                   MACDATE -09/15/99-<1>                               17250000
.*                                                                      17300000
.*******************************************************************    17350000
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        17400000
.*******************************************************************    17450000
                   GBLC  &ZPRINT     YES=PRINT NO=NO PRINT              17500000
                   GBLC  &ZTEST      YES=TEST NO=NO TEST                17550000
                   GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX        17600000
.*                                                                      17650000
                   GBLC  &ZIWMMEXTR  YES=MACRO USED AT LEAST ONCE       17700000
.*******************************************************************    17750000
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          17800000
.*******************************************************************    17850000
                   LCLC  &ZMS        ERROR MESSAGE WORK AREA            17900000
                   LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS       17950000
                   LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED         18000000
                   LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR        18050000
                   LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE        18100000
                   LCLA  &ZAWRK      USED AS A WORK AREA                18150000
                   LCLA  &ZASIZ      USED FOR SIZE OF VALUE             18200000
                   LCLA  &ZN         NUMERIC WORK VARIABLE              18250000
                   LCLC  &ZC         CHARACTER WORK VARIABLE            18300000
                   LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE        18350000
                   LCLA  &ZTLA       VALUE TOO LONG VARIABLE            18400000
                   LCLA  &ZMACRET    MACRO RETURN CODE                  18450000
&ZMACRET           SETA  0           ASSUME NO ERRORS                   18500000
.*                                                                      18550000
                   LCLC  &ZCSYSLIST(255)        NONXKEY, POS ARRAY      18600000
                   LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()         18650000
                   LCLA  &ZPLLEN     PARAMETER LIST LENGTH              18700000
                   LCLC  &ZENDBASEPL            End of base PL          18725000
                   LCLA  &ZPLWORKA   PARAMETER LIST LENGTH              18727200
.*******************************************************************    18729400
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             18731600
.*******************************************************************    18733800
                   LCLA  &ZI         INDEX FOR ARRAY                    18736000
                   LCLA  &ZJ         INDEX FOR PARMS                    18738200
                   LCLA  &ZK         INDEX FOR PARSE                    18740400
                   LCLA  &ZLO        LOW RANGE VALUE                    18742600
                   LCLA  &ZHI        HIGH RANGE VALUE                   18744800
                   LCLC  &ZW         WORK AREA FOR PARM                 18747000
.*******************************************************************    18750000
.***AB.07  DEFINE ALL MACRO VARIABLES                                   18800000
.*******************************************************************    18850000
                   LCLC  &XMONTKN    ++ NAME                            18900000
                   LCLC  &XOWNER_TOKEN          ++ NAME                 18950000
                   LCLC  &XOWNER_DATA           ++ NAME                 19000000
                   LCLC  &XARRIVALTIME          ++ NAME                 19050000
                   LCLC  &XTRXNAME   ++ NAME                            19100000
                   LCLC  &XUSERID    ++ NAME                            19150000
                   LCLC  &XSERVCLS   ++ NAME                            19200000
                   LCLC  &XTTRACETOKEN          ++ NAME                 19225000
                   LCLC  &XABNORMAL_COND        ++ NAME                 19250000
                   LCLC  &XRETCODE   ++ NAME                            19300000
                   LCLC  &XRSNCODE   ++ NAME                            19350000
                   LCLA  &XPLISTVER  ++ VALUE                           19375000
.*******************************************************************    19400000
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           19450000
.*******************************************************************    19500000
                   LCLC  &ZXMONTKN   ++ INPUT NAME                      19550000
                   LCLC  &ZXOWNER_TOKEN         ++ OUTPUT NAME          19600000
                   LCLC  &ZXOWNER_DATA          ++ OUTPUT NAME          19650000
                   LCLC  &ZXARRIVALTIME         ++ OUTPUT NAME          19700000
                   LCLC  &ZXTRXNAME  ++ OUTPUT NAME                     19750000
                   LCLC  &ZXUSERID   ++ OUTPUT NAME                     19800000
                   LCLC  &ZXSERVCLS  ++ OUTPUT NAME                     19850000
                   LCLC  &ZXTTRACETOKEN         ++ OUTPUT NAME          19875000
                   LCLC  &ZXABNORMAL_COND       ++ OUTPUT NAME          19900000
                   LCLC  &ZXRETCODE  ++ OUTPUT NAME                     19950000
                   LCLC  &ZXRSNCODE  ++ OUTPUT NAME                     20000000
                   LCLC  &ZXPLISTVER            ++ INPUT VALUE          20000700
.********************************************************************   20001400
.***AC.PLV01  PROCESS PLISTVER                                      *   20002100
.********************************************************************   20002800
&XPLISTVER      SETA  0                                                 20003500
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       20004200
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   20004900
&XPLISTVER      SETA  1                                                 20005600
.ZPLV0          ANOP  ,                                                 20006300
.*                                                                      20007000
                AIF   ('&TTRACETOKEN' EQ '').ZPLV1E                     20007700
                AIF   (&XPLISTVER GE 1).ZPLV1E                          20008400
&XPLISTVER      SETA  1                                                 20009100
.ZPLV1E         ANOP  ,                                                 20009800
.*                                                                      20010500
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      20011200
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      20011900
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  20012600
.*-------------------------------------------------------------------   20013300
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 20014000
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                20014700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 20015400
&ZMS            SETC  '&ZMS "PLISTVER"'                                 20016100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               20016800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                20017500
                AGO   .ZPVCK2                                           20018200
.ZPVCK3         ANOP  ,                                                 20018900
.*-------------------------------------------------------------------   20019600
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  20020300
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                20021000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 20021700
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         20022400
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 20023100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                20023800
                AGO   .ZPVCKE                                           20024500
.ZPVCK2         ANOP  ,                                                 20025200
.*-------------------------------------------------------------------   20025900
&ZCVAL          SETC  '&PLISTVER(1)'                                    20026600
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             20027300
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             20028000
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        20028700
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      20029400
                AIF   (&ZN LE 1).ZPVCK4A   NOT HIGH                     20030100
.ZPVCK6         ANOP  ,                                                 20030800
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                20031500
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 20032200
&ZMS            SETC  '&ZMS THE RANGE IS "0-1"'                         20032900
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         20033600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                20034300
&XPLISTVER      SETA  1                                                 20035000
                AGO   .ZPVCKE                                           20035700
.*-------------------------------------------------------------------   20036400
.ZPVCK4A        ANOP  ,                                                 20037100
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        20037800
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                20038500
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               20039200
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          20039900
&ZMS            SETC  '&ZMS &XPLISTVER'                                 20040600
                MNOTE 8,' &ZMS IS REQUIRED.'                            20041300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                20042000
                AGO   .ZPVCK5                                           20042700
.ZPVCK4         ANOP  ,                                                 20043400
&XPLISTVER      SETA  &PLISTVER(1)                                      20044100
.ZPVCK5         ANOP  ,                                                 20044800
.ZPVCKE         ANOP  ,                                                 20045500
.********************************************************************   20050000
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 20100000
.********************************************************************   20150000
                   ACTR  10000                                          20200000
.*----------------------------------------------------------------***   20250000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     20300000
                   AIF   (N'&MONTKN LE 1).ZG2A  CK NUM                  20350000
&ZMS               SETC  '"MONTKN='  *KPOSA* MNOTE                      20400000
&ZMS               SETC  '&ZMS.&MONTKN"'                                20450000
&ZMS               SETC  '&ZMS "MONTKN"'                                20500000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            20550000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        20600000
.ZG2A              ANOP  ,                                              20650000
.*-------------------------------------------------------------------   20700000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         20750000
&ZXMONTKN          SETC  'INPUT'     SET IN/OUTPUT                      20800000
&XMONTKN           SETC  '&MONTKN(1)'           SET XVARIABLE           20850000
                   AIF   (N'&MONTKN GT 1).ZG2B  MULTI PARMS             20900000
&XMONTKN           SETC  '&MONTKN'   SET XVARIABLE                      20950000
.ZG2B              AIF   (K'&MONTKN(1) GT 0).ZG2C                       21000000
&ZXMONTKN          SETC  ''          RESET IN/OUTPUT                    21050000
&ZMS               SETC  ' '         *KRQDA*                            21100000
&ZMS               SETC  '&ZMS "MONTKN" KEY AND ITS'                    21150000
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               21200000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        21250000
.ZG2C              ANOP  ,                                              21300000
.*-------------------------------------------------------------------   21350000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    21400000
                   AIF   (K'&ZXMONTKN LE 0).ZG2R  NOT I/O               21450000
                   AIF   ('&XMONTKN'(1,1) NE '(').ZG2R                  21500000
&ZCGPR             SETC  '&XMONTKN'(2,K'&XMONTKN-2)                     21550000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                    21600000
                   AIF   (K'&ZCGPR GT 2).ZG2Q                           21650000
                   AIF   ('&ZCGPR' EQ '0').ZG2Q                         21700000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  21750000
                   AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME       21800000
.ZG2P              ANOP  ,                                              21850000
                   AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC            21900000
                   AIF   ('&ZCGPR' LT '2').ZG2Q                         21950000
                   AIF   ('&ZCGPR' LE '12').ZG2R                        22000000
.ZG2Q              ANOP  ,                                              22050000
&ZMS               SETC  '"MONTKN='  *KGPRA* MNOTE                      22100000
&ZMS               SETC  '&ZMS.&MONTKN"'                                22150000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      22200000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               22250000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        22300000
.ZG2R              ANOP  ,                                              22350000
.*----------------------------------------------------------------***   22400000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    22450000
                   AIF   (N'&OWNER_TOKEN LE 1).ZG5A  CK NUM             22500000
&ZMS               SETC  '"OWNER_TOKEN='        *KPOSA* MNOTE           22550000
&ZMS               SETC  '&ZMS.&OWNER_TOKEN"'                           22600000
&ZMS               SETC  '&ZMS "OWNER_TOKEN"'                           22650000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            22700000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        22750000
.ZG5A              ANOP  ,                                              22800000
.*-------------------------------------------------------------------   22850000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        22900000
                   AIF   (K'&OWNER_TOKEN(1) LE 0).ZG5C  NO PARM         22950000
&ZXOWNER_TOKEN     SETC  'OUTPUT'    SET OUTPUT                         23000000
&XOWNER_TOKEN      SETC  '&OWNER_TOKEN(1)'      SET XVARIABLE           23050000
                   AIF   (N'&OWNER_TOKEN GT 1).ZG5C                     23100000
&XOWNER_TOKEN      SETC  '&OWNER_TOKEN'         SET XVARIABLE           23150000
.ZG5C              ANOP  ,                                              23200000
.*-------------------------------------------------------------------   23250000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   23300000
                   AIF   (K'&ZXOWNER_TOKEN LE 0).ZG5R  NOT I/O          23350000
                   AIF   ('&XOWNER_TOKEN'(1,1) NE '(').ZG5R             23400000
&ZCGPR             SETC  '&XOWNER_TOKEN'(2,K'&XOWNER_TOKEN-2)           23450000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                    23500000
                   AIF   (K'&ZCGPR GT 2).ZG5Q                           23550000
                   AIF   ('&ZCGPR' EQ '0').ZG5Q                         23600000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  23650000
                   AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME       23700000
.ZG5P              ANOP  ,                                              23750000
                   AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC            23800000
                   AIF   ('&ZCGPR' LT '2').ZG5Q                         23850000
                   AIF   ('&ZCGPR' LE '12').ZG5R                        23900000
.ZG5Q              ANOP  ,                                              23950000
&ZMS               SETC  '"OWNER_TOKEN='        *KGPRA* MNOTE           24000000
&ZMS               SETC  '&ZMS.&OWNER_TOKEN"'                           24050000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      24100000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               24150000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        24200000
.ZG5R              ANOP  ,                                              24250000
.*----------------------------------------------------------------***   24300000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    24350000
                   AIF   (N'&OWNER_DATA LE 1).ZG8A  CK NUM              24400000
&ZMS               SETC  '"OWNER_DATA='         *KPOSA* MNOTE           24450000
&ZMS               SETC  '&ZMS.&OWNER_DATA"'                            24500000
&ZMS               SETC  '&ZMS "OWNER_DATA"'                            24550000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            24600000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        24650000
.ZG8A              ANOP  ,                                              24700000
.*-------------------------------------------------------------------   24750000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        24800000
                   AIF   (K'&OWNER_DATA(1) LE 0).ZG8C  NO PARM          24850000
&ZXOWNER_DATA      SETC  'OUTPUT'    SET OUTPUT                         24900000
&XOWNER_DATA       SETC  '&OWNER_DATA(1)'       SET XVARIABLE           24950000
                   AIF   (N'&OWNER_DATA GT 1).ZG8C                      25000000
&XOWNER_DATA       SETC  '&OWNER_DATA'          SET XVARIABLE           25050000
.ZG8C              ANOP  ,                                              25100000
.*-------------------------------------------------------------------   25150000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   25200000
                   AIF   (K'&ZXOWNER_DATA LE 0).ZG8R  NOT I/O           25250000
                   AIF   ('&XOWNER_DATA'(1,1) NE '(').ZG8R              25300000
&ZCGPR             SETC  '&XOWNER_DATA'(2,K'&XOWNER_DATA-2)             25350000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                    25400000
                   AIF   (K'&ZCGPR GT 2).ZG8Q                           25450000
                   AIF   ('&ZCGPR' EQ '0').ZG8Q                         25500000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  25550000
                   AIF   (T'&ZCGPR NE 'N').ZG8Q  INVALID REG NAME       25600000
.ZG8P              ANOP  ,                                              25650000
                   AIF   (T'&ZCGPR NE 'N').ZG8R  NON NUMERIC            25700000
                   AIF   ('&ZCGPR' LT '2').ZG8Q                         25750000
                   AIF   ('&ZCGPR' LE '12').ZG8R                        25800000
.ZG8Q              ANOP  ,                                              25850000
&ZMS               SETC  '"OWNER_DATA='         *KGPRA* MNOTE           25900000
&ZMS               SETC  '&ZMS.&OWNER_DATA"'                            25950000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      26000000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               26050000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        26100000
.ZG8R              ANOP  ,                                              26150000
.*----------------------------------------------------------------***   26200000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    26250000
                   AIF   (N'&ARRIVALTIME LE 1).ZG11A  CK NUM            26300000
&ZMS               SETC  '"ARRIVALTIME='        *KPOSA* MNOTE           26350000
&ZMS               SETC  '&ZMS.&ARRIVALTIME"'                           26400000
&ZMS               SETC  '&ZMS "ARRIVALTIME"'                           26450000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            26500000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        26550000
.ZG11A             ANOP  ,                                              26600000
.*-------------------------------------------------------------------   26650000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        26700000
                   AIF   (K'&ARRIVALTIME(1) LE 0).ZG11C  NO PARM        26750000
&ZXARRIVALTIME     SETC  'OUTPUT'    SET OUTPUT                         26800000
&XARRIVALTIME      SETC  '&ARRIVALTIME(1)'      SET XVARIABLE           26850000
                   AIF   (N'&ARRIVALTIME GT 1).ZG11C                    26900000
&XARRIVALTIME      SETC  '&ARRIVALTIME'         SET XVARIABLE           26950000
.ZG11C             ANOP  ,                                              27000000
.*-------------------------------------------------------------------   27050000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   27100000
                   AIF   (K'&ZXARRIVALTIME LE 0).ZG11R  NOT I/O         27150000
                   AIF   ('&XARRIVALTIME'(1,1) NE '(').ZG11R            27200000
&ZCGPR             SETC  '&XARRIVALTIME'(2,K'&XARRIVALTIME-2)           27250000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                   27300000
                   AIF   (K'&ZCGPR GT 2).ZG11Q                          27350000
                   AIF   ('&ZCGPR' EQ '0').ZG11Q                        27400000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  27450000
                   AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME      27500000
.ZG11P             ANOP  ,                                              27550000
                   AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC           27600000
                   AIF   ('&ZCGPR' LT '2').ZG11Q                        27650000
                   AIF   ('&ZCGPR' LE '12').ZG11R                       27700000
.ZG11Q             ANOP  ,                                              27750000
&ZMS               SETC  '"ARRIVALTIME='        *KGPRA* MNOTE           27800000
&ZMS               SETC  '&ZMS.&ARRIVALTIME"'                           27850000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      27900000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               27950000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        28000000
.ZG11R             ANOP  ,                                              28050000
.*----------------------------------------------------------------***   28100000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    28150000
                   AIF   (N'&TRXNAME LE 1).ZG14A  CK NUM                28200000
&ZMS               SETC  '"TRXNAME='            *KPOSA* MNOTE           28250000
&ZMS               SETC  '&ZMS.&TRXNAME"'                               28300000
&ZMS               SETC  '&ZMS "TRXNAME"'                               28350000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            28400000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        28450000
.ZG14A             ANOP  ,                                              28500000
.*-------------------------------------------------------------------   28550000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        28600000
                   AIF   (K'&TRXNAME(1) LE 0).ZG14C  NO PARM            28650000
&ZXTRXNAME         SETC  'OUTPUT'    SET OUTPUT                         28700000
&XTRXNAME          SETC  '&TRXNAME(1)'          SET XVARIABLE           28750000
                   AIF   (N'&TRXNAME GT 1).ZG14C                        28800000
&XTRXNAME          SETC  '&TRXNAME'  SET XVARIABLE                      28850000
.ZG14C             ANOP  ,                                              28900000
.*-------------------------------------------------------------------   28950000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   29000000
                   AIF   (K'&ZXTRXNAME LE 0).ZG14R  NOT I/O             29050000
                   AIF   ('&XTRXNAME'(1,1) NE '(').ZG14R                29100000
&ZCGPR             SETC  '&XTRXNAME'(2,K'&XTRXNAME-2)                   29150000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                   29200000
                   AIF   (K'&ZCGPR GT 2).ZG14Q                          29250000
                   AIF   ('&ZCGPR' EQ '0').ZG14Q                        29300000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  29350000
                   AIF   (T'&ZCGPR NE 'N').ZG14Q  INVALID REG NAME      29400000
.ZG14P             ANOP  ,                                              29450000
                   AIF   (T'&ZCGPR NE 'N').ZG14R  NON NUMERIC           29500000
                   AIF   ('&ZCGPR' LT '2').ZG14Q                        29550000
                   AIF   ('&ZCGPR' LE '12').ZG14R                       29600000
.ZG14Q             ANOP  ,                                              29650000
&ZMS               SETC  '"TRXNAME='            *KGPRA* MNOTE           29700000
&ZMS               SETC  '&ZMS.&TRXNAME"'                               29750000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      29800000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               29850000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        29900000
.ZG14R             ANOP  ,                                              29950000
.*----------------------------------------------------------------***   30000000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    30050000
                   AIF   (N'&USERID LE 1).ZG17A  CK NUM                 30100000
&ZMS               SETC  '"USERID='  *KPOSA* MNOTE                      30150000
&ZMS               SETC  '&ZMS.&USERID"'                                30200000
&ZMS               SETC  '&ZMS "USERID"'                                30250000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            30300000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        30350000
.ZG17A             ANOP  ,                                              30400000
.*-------------------------------------------------------------------   30450000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        30500000
                   AIF   (K'&USERID(1) LE 0).ZG17C  NO PARM             30550000
&ZXUSERID          SETC  'OUTPUT'    SET OUTPUT                         30600000
&XUSERID           SETC  '&USERID(1)'           SET XVARIABLE           30650000
                   AIF   (N'&USERID GT 1).ZG17C                         30700000
&XUSERID           SETC  '&USERID'   SET XVARIABLE                      30750000
.ZG17C             ANOP  ,                                              30800000
.*-------------------------------------------------------------------   30850000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   30900000
                   AIF   (K'&ZXUSERID LE 0).ZG17R  NOT I/O              30950000
                   AIF   ('&XUSERID'(1,1) NE '(').ZG17R                 31000000
&ZCGPR             SETC  '&XUSERID'(2,K'&XUSERID-2)                     31050000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG17P                   31100000
                   AIF   (K'&ZCGPR GT 2).ZG17Q                          31150000
                   AIF   ('&ZCGPR' EQ '0').ZG17Q                        31200000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  31250000
                   AIF   (T'&ZCGPR NE 'N').ZG17Q  INVALID REG NAME      31300000
.ZG17P             ANOP  ,                                              31350000
                   AIF   (T'&ZCGPR NE 'N').ZG17R  NON NUMERIC           31400000
                   AIF   ('&ZCGPR' LT '2').ZG17Q                        31450000
                   AIF   ('&ZCGPR' LE '12').ZG17R                       31500000
.ZG17Q             ANOP  ,                                              31550000
&ZMS               SETC  '"USERID='  *KGPRA* MNOTE                      31600000
&ZMS               SETC  '&ZMS.&USERID"'                                31650000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      31700000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               31750000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        31800000
.ZG17R             ANOP  ,                                              31850000
.*----------------------------------------------------------------***   31900000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    31950000
                   AIF   (N'&SERVCLS LE 1).ZG20A  CK NUM                32000000
&ZMS               SETC  '"SERVCLS='            *KPOSA* MNOTE           32050000
&ZMS               SETC  '&ZMS.&SERVCLS"'                               32100000
&ZMS               SETC  '&ZMS "SERVCLS"'                               32150000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            32200000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        32250000
.ZG20A             ANOP  ,                                              32300000
.*-------------------------------------------------------------------   32350000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        32400000
                   AIF   (K'&SERVCLS(1) LE 0).ZG20C  NO PARM            32450000
&ZXSERVCLS         SETC  'OUTPUT'    SET OUTPUT                         32500000
&XSERVCLS          SETC  '&SERVCLS(1)'          SET XVARIABLE           32550000
                   AIF   (N'&SERVCLS GT 1).ZG20C                        32600000
&XSERVCLS          SETC  '&SERVCLS'  SET XVARIABLE                      32650000
.ZG20C             ANOP  ,                                              32700000
.*-------------------------------------------------------------------   32750000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   32800000
                   AIF   (K'&ZXSERVCLS LE 0).ZG20R  NOT I/O             32850000
                   AIF   ('&XSERVCLS'(1,1) NE '(').ZG20R                32900000
&ZCGPR             SETC  '&XSERVCLS'(2,K'&XSERVCLS-2)                   32950000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG20P                   33000000
                   AIF   (K'&ZCGPR GT 2).ZG20Q                          33050000
                   AIF   ('&ZCGPR' EQ '0').ZG20Q                        33100000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  33150000
                   AIF   (T'&ZCGPR NE 'N').ZG20Q  INVALID REG NAME      33200000
.ZG20P             ANOP  ,                                              33250000
                   AIF   (T'&ZCGPR NE 'N').ZG20R  NON NUMERIC           33300000
                   AIF   ('&ZCGPR' LT '2').ZG20Q                        33350000
                   AIF   ('&ZCGPR' LE '12').ZG20R                       33400000
.ZG20Q             ANOP  ,                                              33450000
&ZMS               SETC  '"SERVCLS='            *KGPRA* MNOTE           33500000
&ZMS               SETC  '&ZMS.&SERVCLS"'                               33550000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      33600000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               33650000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        33700000
.ZG20R             ANOP  ,                                              33750000
.*----------------------------------------------------------------***   33800000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    33850000
                   AIF   (N'&TTRACETOKEN LE 1).ZG23A  CK NUM            33900000
&ZMS               SETC  '"TTRACETOKEN='        *KPOSA* MNOTE           33950000
&ZMS               SETC  '&ZMS.&TTRACETOKEN"'                           34000000
&ZMS               SETC  '&ZMS "TTRACETOKEN"'                           34050000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            34100000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        34150000
.ZG23A             ANOP  ,                                              34200000
.*-------------------------------------------------------------------   34250000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        34300000
                   AIF   (K'&TTRACETOKEN(1) LE 0).ZG23C  NO PARM        34350000
&ZXTTRACETOKEN     SETC  'OUTPUT'    SET OUTPUT                         34400000
&XTTRACETOKEN      SETC  '&TTRACETOKEN(1)'      SET XVARIABLE           34450000
                   AIF   (N'&TTRACETOKEN GT 1).ZG23C                    34500000
&XTTRACETOKEN      SETC  '&TTRACETOKEN'         SET XVARIABLE           34550000
.ZG23C             ANOP  ,                                              34600000
.*-------------------------------------------------------------------   34650000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   34700000
                   AIF   (K'&ZXTTRACETOKEN LE 0).ZG23R  NOT I/O         34750000
                   AIF   ('&XTTRACETOKEN'(1,1) NE '(').ZG23R            34800000
&ZCGPR             SETC  '&XTTRACETOKEN'(2,K'&XTTRACETOKEN-2)           34850000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG23P                   34900000
                   AIF   (K'&ZCGPR GT 2).ZG23Q                          34950000
                   AIF   ('&ZCGPR' EQ '0').ZG23Q                        35000000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  35050000
                   AIF   (T'&ZCGPR NE 'N').ZG23Q  INVALID REG NAME      35100000
.ZG23P             ANOP  ,                                              35150000
                   AIF   (T'&ZCGPR NE 'N').ZG23R  NON NUMERIC           35200000
                   AIF   ('&ZCGPR' LT '2').ZG23Q                        35250000
                   AIF   ('&ZCGPR' LE '12').ZG23R                       35300000
.ZG23Q             ANOP  ,                                              35350000
&ZMS               SETC  '"TTRACETOKEN='        *KGPRA* MNOTE           35400000
&ZMS               SETC  '&ZMS.&TTRACETOKEN"'                           35450000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      35500000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               35550000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        35600000
.ZG23R             ANOP  ,                                              35650000
.*----------------------------------------------------------------***   35700000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    35750000
                   AIF   (N'&ABNORMAL_COND LE 1).ZG26A  CK NUM          35800000
&ZMS               SETC  '"ABNORMAL_COND='      *KPOSA* MNOTE           35850000
&ZMS               SETC  '&ZMS.&ABNORMAL_COND"'                         35900000
&ZMS               SETC  '&ZMS "ABNORMAL_COND"'                         35950000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            36000000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        36050000
.ZG26A             ANOP  ,                                              36100000
.*-------------------------------------------------------------------   36150000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        36200000
                   AIF   (K'&ABNORMAL_COND(1) LE 0).ZG26C  NO PARM      36250000
&ZXABNORMAL_COND   SETC  'OUTPUT'    SET OUTPUT                         36300000
&XABNORMAL_COND    SETC  '&ABNORMAL_COND(1)'    SET XVARIABLE           36350000
                   AIF   (N'&ABNORMAL_COND GT 1).ZG26C                  36400000
&XABNORMAL_COND    SETC  '&ABNORMAL_COND'       SET XVARIABLE           36450000
.ZG26C             ANOP  ,                                              36500000
.*-------------------------------------------------------------------   36550000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   36600000
                   AIF   (K'&ZXABNORMAL_COND LE 0).ZG26R  NOT I/O       36650000
                   AIF   ('&XABNORMAL_COND'(1,1) NE '(').ZG26R          36700000
&ZCGPR             SETC  '&XABNORMAL_COND'(2,K'&XABNORMAL_COND-2)       36750000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG26P                   36800000
                   AIF   (K'&ZCGPR GT 2).ZG26Q                          36850000
                   AIF   ('&ZCGPR' EQ '0').ZG26Q                        36900000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  36950000
                   AIF   (T'&ZCGPR NE 'N').ZG26Q  INVALID REG NAME      37000000
.ZG26P             ANOP  ,                                              37050000
                   AIF   (T'&ZCGPR NE 'N').ZG26R  NON NUMERIC           37100000
                   AIF   ('&ZCGPR' LT '2').ZG26Q                        37150000
                   AIF   ('&ZCGPR' LE '12').ZG26R                       37200000
.ZG26Q             ANOP  ,                                              37250000
&ZMS               SETC  '"ABNORMAL_COND='      *KGPRA* MNOTE           37300000
&ZMS               SETC  '&ZMS.&ABNORMAL_COND"'                         37350000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      37400000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               37450000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        37500000
.ZG26R             ANOP  ,                                              37550000
.*----------------------------------------------------------------***   37600000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    37650000
                   AIF   (N'&RETCODE LE 1).ZG29A  CK NUM                37700000
&ZMS               SETC  '"RETCODE='            *KPOSA* MNOTE           37750000
&ZMS               SETC  '&ZMS.&RETCODE"'                               37800000
&ZMS               SETC  '&ZMS "RETCODE"'                               37850000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            37900000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        37950000
.ZG29A             ANOP  ,                                              38000000
.*-------------------------------------------------------------------   38050000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        38100000
                   AIF   (K'&RETCODE(1) LE 0).ZG29C  NO PARM            38150000
&ZXRETCODE         SETC  'OUTPUT'    SET OUTPUT                         38200000
&XRETCODE          SETC  '&RETCODE(1)'          SET XVARIABLE           38250000
                   AIF   (N'&RETCODE GT 1).ZG29C                        38300000
&XRETCODE          SETC  '&RETCODE'  SET XVARIABLE                      38350000
.ZG29C             ANOP  ,                                              38400000
.*-------------------------------------------------------------------   38450000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   38500000
                   AIF   (K'&ZXRETCODE LE 0).ZG29R  NOT I/O             38550000
                   AIF   ('&XRETCODE'(1,1) NE '(').ZG29R                38600000
&ZCGPR             SETC  '&XRETCODE'(2,K'&XRETCODE-2)                   38650000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG29P                   38700000
                   AIF   (K'&ZCGPR GT 2).ZG29Q                          38750000
                   AIF   ('&ZCGPR' EQ '0').ZG29Q                        38800000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  38850000
                   AIF   (T'&ZCGPR NE 'N').ZG29Q  INVALID REG NAME      38900000
.ZG29P             ANOP  ,                                              38950000
                   AIF   (T'&ZCGPR NE 'N').ZG29R  NON NUMERIC           39000000
                   AIF   ('&ZCGPR' LT '2').ZG29Q                        39050000
                   AIF   ('&ZCGPR' LE '12').ZG29R                       39100000
.ZG29Q             ANOP  ,                                              39150000
&ZMS               SETC  '"RETCODE='            *KGPRA* MNOTE           39151200
&ZMS               SETC  '&ZMS.&RETCODE"'                               39152400
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      39153600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               39154800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        39156000
.ZG29R             ANOP  ,                                              39157200
.*----------------------------------------------------------------***   39158400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    39159600
                   AIF   (N'&RSNCODE LE 1).ZG32A  CK NUM                39160800
&ZMS               SETC  '"RSNCODE='            *KPOSA* MNOTE           39162000
&ZMS               SETC  '&ZMS.&RSNCODE"'                               39163200
&ZMS               SETC  '&ZMS "RSNCODE"'                               39164400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            39165600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        39166800
.ZG32A             ANOP  ,                                              39168000
.*-------------------------------------------------------------------   39169200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        39170400
                   AIF   (K'&RSNCODE(1) LE 0).ZG32C  NO PARM            39171600
&ZXRSNCODE         SETC  'OUTPUT'    SET OUTPUT                         39172800
&XRSNCODE          SETC  '&RSNCODE(1)'          SET XVARIABLE           39174000
                   AIF   (N'&RSNCODE GT 1).ZG32C                        39175200
&XRSNCODE          SETC  '&RSNCODE'  SET XVARIABLE                      39176400
.ZG32C             ANOP  ,                                              39177600
.*-------------------------------------------------------------------   39178800
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   39180000
                   AIF   (K'&ZXRSNCODE LE 0).ZG32R  NOT I/O             39181200
                   AIF   ('&XRSNCODE'(1,1) NE '(').ZG32R                39182400
&ZCGPR             SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                   39183600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG32P                   39184800
                   AIF   (K'&ZCGPR GT 2).ZG32Q                          39186000
                   AIF   ('&ZCGPR' EQ '0').ZG32Q                        39187200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  39188400
                   AIF   (T'&ZCGPR NE 'N').ZG32Q  INVALID REG NAME      39189600
.ZG32P             ANOP  ,                                              39190800
                   AIF   (T'&ZCGPR NE 'N').ZG32R  NON NUMERIC           39192000
                   AIF   ('&ZCGPR' LT '2').ZG32Q                        39193200
                   AIF   ('&ZCGPR' LE '12').ZG32R                       39194400
.ZG32Q             ANOP  ,                                              39195600
&ZMS               SETC  '"RSNCODE='            *KGPRA* MNOTE           39200000
&ZMS               SETC  '&ZMS.&RSNCODE"'                               39250000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      39300000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               39350000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        39400000
.ZG32R             ANOP  ,                                              39450000
.******************************************************************     39500000
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        39550000
.******************************************************************     39600000
                   ACTR  10000                                          39650000
.*----------------------------------------------------------------***   39700000
.***AH.P02 EXTRA POSITIONALS                                            39750000
                   AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS           39800000
                   AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL           39810000
                   AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL       39820000
                   AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL        39830000
.ZGLISTX1          ANOP  ,                                              39840000
&ZCVAL             SETC  ''          ERROR FIELD                        39850000
&ZAWRK             SETA  0           POSITIONAL NUMBER                  39900000
.ZGLIST2           ANOP  ,                                              39950000
&ZAWRK             SETA  &ZAWRK+1    NEXT POSITIONAL                    40000000
                   AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE           40050000
&ZCVAL             SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                40100000
                   AGO   .ZGLIST2                                       40150000
.*                                                                      40200000
.ZGLIST3           ANOP  ,                                              40250000
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA             40300000
&ZMS               SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE       40350000
&ZMS               SETC  '&ZMS "&ZCVAL"'                                40400000
&ZMS               SETC  '&ZMS CANNOT BE USED.'                         40450000
&ZMS               SETC  '&ZMS NO POSITIONAL ARGUMENTS'                 40500000
                   MNOTE 8,' &ZMS ARE ALLOWED.'                         40550000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        40600000
.ZGLISTX           ANOP  ,                                              40650000
&ZASYSLNDX         SETA  0                                              40700000
.*******************************************************************    40750000
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       40800000
.*******************************************************************    40850000
                   AIF   (&ZMACRET NE 0).ZLX2   ERROR DETECTED          40900000
.*******************************************************************    40950000
.***AE.01  START OF IWMMEXTR MACRO CODE                                 41000000
.*******************************************************************    41050000
                   LCLC  &M0M0001                 NAME                  41100000
&M0M0001           SETC  '&XLABEL'                SET NAME              41150000
                   AIF   (K'&XLABEL NE 0).XLAB2                         41200000
&M0M0001           SETC  'M00M&SYSNDX'            DEFAULT NAME          41250000
.*                                                                      41300000
.XLAB2             ANOP  ,                                              41350000
&M0M0001 DS    0H                             IWMMEXTR-1                41400000
.*******************************************************************    41450000
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              41500000
.*******************************************************************    41550000
              PUSH  PRINT                                               41600000
                   AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON     41650000
                   PRINT OFF         ++ PR01                            41700000
                   AGO   .ZPRNTXX                                       41750000
.ZPRINTX           PRINT ON                                             41800000
.ZPRNTXX           ANOP  ,                                              41850000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  41900000
         LCLC  &T1,&INIT                                                41950000
&T1      SETC  '&MONTKN'                                                42000000
         AIF   ('&MONTKN'(1,1) NE '(').MONTKNRS                         42050000
&T1      SETC  '&MONTKN'(2,K'&MONTKN-2)                                 42100000
&T1      SETC  '0(&T1.)'                                                42150000
.MONTKNRS  ANOP                                                         42200000
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      42250000
         ICM   14,15,&T1               FETCH MONITORING TOKEN           42300000
         BNZ   MONENV&SYSNDX           BRANCH WHEN MON ENV IS PRESENT   42350000
         LA    0,IWMRSNCODENOMONENV    SET REASON CODE = NO MON ENV     42400000
         LA    15,IWMRETCODEWARNING    SET WARNING RETURN CODE          42450000
         B     END&SYSNDX              BRANCH TO END LABEL              42500000
MONENV&SYSNDX DS    0H                 BRANCH LABEL FOR MON ENV PRESENT 42550000
         CLC   PB_ID-PB(4,14),=CL4'PB  '                                42600000
         BE    MONENVOK&SYSNDX         BRANCH WHEN MON ENV PASSES       42650000
         LA    0,IWMRSNCODEBADMONENV   SET REASON CODE = BAD MON ENV    42700000
         LA    15,IWMRETCODEINVOCERROR SET INVOCATION ERROR RETURN CODE 42750000
         B     END&SYSNDX              BRANCH TO END LABEL              42800000
MONENVOK&SYSNDX DS    0H               BRANCH LABEL FOR MON ENV OK      42850000
         USING PB,14                                                    42900000
.*                                                                      42950000
.*                                                                      43000000
.*                                                                      43050000
         AIF   ('&OWNER_TOKEN' EQ '').ENDOWNER_TOKEN                    43100000
&T1      SETC  '&OWNER_TOKEN'                                           43150000
         AIF   ('&OWNER_TOKEN'(1,1) NE '(').OWNER_TOKENRS               43200000
&T1      SETC  '&OWNER_TOKEN'(2,K'&OWNER_TOKEN-2)                       43250000
&T1      SETC  '0(&T1.)'                                                43300000
.OWNER_TOKENRS ANOP                                                     43350000
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      43400000
         L     1,PB_OWNER_TKN          COPY OWNER_TOKEN VIA L,ST        43450000
         ST    1,&T1                                                    43500000
.ENDOWNER_TOKEN ANOP                                                    43550000
*                                                                       43600000
         AIF   ('&OWNER_DATA' EQ '').ENDOWNER_DATA                      43650000
&T1      SETC  '&OWNER_DATA'                                            43700000
         AIF   ('&OWNER_DATA'(1,1) NE '(').OWNER_DATARS                 43750000
&T1      SETC  '&OWNER_DATA'(2,K'&OWNER_DATA-2)                         43800000
&T1      SETC  '0(&T1.)'                                                43850000
.OWNER_DATARS ANOP                                                      43900000
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      43950000
         L     1,PB_OWNER_DATA         COPY OWNER_DATA VIA L,ST         44000000
         ST    1,&T1                                                    44050000
.ENDOWNER_DATA ANOP                                                     44100000
*                                                                       44150000
         AIF   ('&ABNORMAL_COND' EQ '').ENDABNORMAL_COND                44200000
&T1      SETC  '&ABNORMAL_COND'                                         44250000
         AIF   ('&ABNORMAL_COND'(1,1) NE '(').ABNORMAL_CONDRS           44300000
&T1      SETC  '&ABNORMAL_COND'(2,K'&ABNORMAL_COND-2)                   44350000
&T1      SETC  '0(&T1.)'                                                44400000
.ABNORMAL_CONDRS ANOP                                                   44450000
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      44500000
         L     1,PB_ABNORMAL_FLAGS     COPY ABNORMAL FLAGS              44550000
         ST    1,&T1                                                    44600000
.ENDABNORMAL_COND ANOP                                                  44650000
*                                                                       44700000
         AIF   ('&SERVCLS' EQ '').ENDSERVCLSCODE                        44704100
&T1      SETC  '&SERVCLS'                                               44708200
         AIF   ('&SERVCLS'(1,1) NE '(').SERVCLSRS                       44712300
&T1      SETC  '&SERVCLS'(2,K'&SERVCLS-2)                               44716400
&T1      SETC  '0(&T1.)'                                                44720500
.SERVCLSRS ANOP                                                         44724600
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      44728700
         L     1,PB_SC_TKN                                              44732800
         ST    1,&T1                   COPY SERVCLS VIA L,ST            44736900
.ENDSERVCLSCODE  ANOP                                                   44741000
*                                                                       44741300
         AIF   ('&TTRACETOKEN' EQ '').ENDTTRACETOKENCODE                44741600
&T1      SETC  '&TTRACETOKEN'                                           44741900
         AIF   ('&TTRACETOKEN'(1,1) NE '(').TTRACETOKENRS               44742200
&T1      SETC  '&TTRACETOKEN'(2,K'&TTRACETOKEN-2)                       44742500
         MVC   0(32,&T1.),PB_TRANS_TTOKEN                               44742800
         AGO   .ENDTTRACETOKENCODE                                      44743100
.TTRACETOKENRS ANOP                                                     44743400
.* &T1 IS A VALID BASE-DISPLACEMENT EXPRESSION                          44743700
         MVC   &T1.(32),PB_TRANS_TTOKEN    COPY TTRACETOKEN             44744000
.ENDTTRACETOKENCODE   ANOP                                              44744300
*                                                                       44745100
         AIF   ('&ARRIVALTIME' EQ '').ENDARRTIME                        44750000
&INIT    SETC  'YES'                                                    44800000
.ENDARRTIME    ANOP                                                     44850000
*                                                                       44900000
         AIF   ('&TRXNAME' EQ '').ENDTRXNAME                            44950000
&INIT    SETC  'YES'                                                    45000000
.ENDTRXNAME    ANOP                                                     45050000
*                                                                       45100000
         AIF   ('&USERID' EQ '').ENDUSERID                              45150000
&INIT    SETC  'YES'                                                    45200000
.ENDUSERID     ANOP                                                     45250000
*                                                                       45300000
*                                                                       45500000
.*                                                                      45550000
.*       CHECK TO SEE IF ANY KEYS WERE SPECIFIED WHICH REQUIRE          45600000
.*       CHECKING FOR INITIALIZE VS. RELATE                             45650000
.*                                                                      45700000
         AIF   ('&INIT' NE 'YES').ENDINIT                               45750000
         TM    PB_WORKDEF,PB_INIT                                       45800000
         BO    IWMMEXTR_INIT&SYSNDX                                     45850000
         LA    15,IWMRETCODEWARNING    SET WARNING RETURN CODE          45900000
         LA    0,IWMRSNCODEMONENVLACKSINFO SET RSN CODE                 45950000
         B     END&SYSNDX              BRANCH TO END LABEL              46000000
IWMMEXTR_INIT&SYSNDX DS 0H             BRANCH LABEL FOR INITIALIZE DONE 46050000
.*                                                                      46100000
         AIF   ('&ARRIVALTIME' EQ '').ENDARRTIMECODE                    46150000
&T1      SETC  '&ARRIVALTIME'                                           46200000
         AIF   ('&ARRIVALTIME'(1,1) NE '(').ARRIVALTIMERS               46250000
&T1      SETC  '&ARRIVALTIME'(2,K'&ARRIVALTIME-2)                       46300000
         MVC   0(8,&T1.),PB_ARRTIME                                     46350000
         AGO   .ENDARRTIMECODE                                          46400000
.ARRIVALTIMERS ANOP                                                     46450000
.* &T1 IS A VALID BASE-DISPLACEMENT EXPRESSION                          46500000
         MVC   &T1.(8),PB_ARRTIME                                       46550000
.ENDARRTIMECODE  ANOP                                                   46600000
*                                                                       46650000
         AIF   ('&TRXNAME' EQ '').ENDTRXNAMECODE                        46700000
&T1      SETC  '&TRXNAME'                                               46750000
         AIF   ('&TRXNAME'(1,1) NE '(').TRXNAMERS                       46800000
&T1      SETC  '&TRXNAME'(2,K'&TRXNAME-2)                               46850000
         MVC   0(8,&T1.),PB_TRXNAME                                     46900000
         AGO   .ENDTRXNAMECODE                                          46950000
.TRXNAMERS ANOP                                                         47000000
.* &T1 IS A VALID BASE-DISPLACEMENT EXPRESSION                          47050000
         MVC   &T1.(8),PB_TRXNAME          COPY TRXNAME                 47100000
.ENDTRXNAMECODE  ANOP                                                   47150000
*                                                                       47200000
         AIF   ('&USERID' EQ '').ENDUSERIDCODE                          47250000
&T1      SETC  '&USERID'                                                47300000
         AIF   ('&USERID'(1,1) NE '(').USERIDRS                         47350000
&T1      SETC  '&USERID'(2,K'&USERID-2)                                 47400000
         MVC   0(8,&T1.),PB_USERID                                      47450000
         AGO   .ENDUSERIDCODE                                           47500000
.USERIDRS ANOP                                                          47550000
.* &T1 IS A VALID BASE-DISPLACEMENT EXPRESSION                          47600000
         MVC   &T1.(8),PB_USERID          COPY USERID                   47650000
.ENDUSERIDCODE   ANOP                                                   47700000
*                                                                       48300000
.ENDINIT ANOP                                                           48350000
*                                                                       48400000
         LA    15,IWMRETCODEOK           SET RETURN CODE = OK           48450000
.*                                                                      48500000
         DROP  14                                                       48550000
END&SYSNDX DS    0H                    END LABEL                        48600000
.*******************************************************************    48650000
.***        RETURN CODE PROCESSING                                      48700000
.*******************************************************************    48750000
         AIF   (N'&RETCODE LE 0).IWMMEXTR_ENDRC_EXP                     48800000
         AIF   ('&XRETCODE'(1,1) EQ '(').IWMMEXTR_RC_REG                48850000
         AIF   ('&XRETCODE' EQ 'GPR15').IWMMEXTR_ENDRC_EXP              48900000
         AIF   ('&XRETCODE' EQ 'REG15').IWMMEXTR_ENDRC_EXP              48950000
         AIF   ('&XRETCODE' EQ 'R15').IWMMEXTR_ENDRC_EXP                49000000
         AIF   ('&XRETCODE' EQ '15').IWMMEXTR_ENDRC_EXP                 49050000
         ST    15,&XRETCODE                                             49100000
            AGO  .IWMMEXTR_ENDRC_EXP                                    49150000
.*                                                                      49200000
.IWMMEXTR_RC_REG      ANOP  ,                                           49250000
&T1      SETC  '&XRETCODE'(2,K'&XRETCODE-2)                             49300000
         AIF   ('&T1' EQ 'GPR15').IWMMEXTR_ENDRC_EXP                    49350000
         AIF   ('&T1' EQ 'REG15').IWMMEXTR_ENDRC_EXP                    49400000
         AIF   ('&T1' EQ 'R15').IWMMEXTR_ENDRC_EXP                      49450000
         AIF   ('&T1' EQ '15').IWMMEXTR_ENDRC_EXP                       49500000
         LR    &T1,15                                                   49550000
.IWMMEXTR_ENDRC_EXP   ANOP  ,                                           49600000
.*******************************************************************    49650000
.***        REASON CODE PROCESSING                                      49700000
.*******************************************************************    49750000
         AIF   (N'&RSNCODE LE 0).IWMMEXTR_ENDRSN_EXP                    49800000
         AIF   ('&XRSNCODE'(1,1) EQ '(').IWMMEXTR_RSN_REG               49850000
         AIF   ('&XRSNCODE' EQ 'GPR0').IWMMEXTR_ENDRSN_EXP              49900000
         AIF   ('&XRSNCODE' EQ 'GPR00').IWMMEXTR_ENDRSN_EXP             49950000
         AIF   ('&XRSNCODE' EQ 'REG0').IWMMEXTR_ENDRSN_EXP              50000000
         AIF   ('&XRSNCODE' EQ 'REG00').IWMMEXTR_ENDRSN_EXP             50050000
         AIF   ('&XRSNCODE' EQ 'R0').IWMMEXTR_ENDRSN_EXP                50100000
         AIF   ('&XRSNCODE' EQ '0').IWMMEXTR_ENDRSN_EXP                 50150000
         AIF   ('&XRSNCODE' EQ '00').IWMMEXTR_ENDRSN_EXP                50200000
         ST    0,&XRSNCODE                                              50250000
         AGO   .IWMMEXTR_ENDRSN_EXP                                     50300000
.*                                                                      50350000
.IWMMEXTR_RSN_REG     ANOP  ,                                           50400000
&T1      SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                             50450000
         AIF   ('&ZCGPR' EQ 'GPR0').IWMMEXTR_ENDRSN_EXP                 50500000
         AIF   ('&ZCGPR' EQ 'GPR00').IWMMEXTR_ENDRSN_EXP                50550000
         AIF   ('&ZCGPR' EQ 'REG0').IWMMEXTR_ENDRSN_EXP                 50600000
         AIF   ('&ZCGPR' EQ 'REG00').IWMMEXTR_ENDRSN_EXP                50650000
         AIF   ('&ZCGPR' EQ 'R0').IWMMEXTR_ENDRSN_EXP                   50700000
         AIF   ('&ZCGPR' EQ '0').IWMMEXTR_ENDRSN_EXP                    50750000
         AIF   ('&ZCGPR' EQ '00').IWMMEXTR_ENDRSN_EXP                   50800000
         LR    &T1,0                                                    50850000
.IWMMEXTR_ENDRSN_EXP  ANOP  ,                                           50900000
.*******************************************************************    50950000
&ZIWMMEXTR            SETC  'YES'          SET IWMMEXTR USED            51000000
         POP   PRINT                                                    51050000
*                                            IWMMEXTR END               51100000
         SPACE 1                                                        51150000
         MEXIT                                                          51200000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  51250000
.********************************************************************   51254100
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                    51258200
.********************************************************************   51262300
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       51266400
                      LCLA  &ZOPN1         INVOCATION INDEX             51270500
                      LCLC  &ZOPL(4095)    LABEL                        51274600
                      LCLC  &ZOPO(4095)    OPERATION                    51278700
                      LCLC  &ZOPV(4095)    VALUE                        51282800
                      LCLC  &ZOPD(4095)    DESCRIPTION                  51286900
.*                                                                      51291000
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     51295100
.*******************************************************************    51300000
.***AO.X02  RETURN CODE PROCESSING                                      51350000
.*******************************************************************    51400000
                      AIF   (N'&RETCODE LE 0).ZMRETX                    51450000
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            51500000
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             51550000
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             51600000
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               51650000
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                51700000
&ZOPN                 SETA  &ZOPN+1                                     51750000
&ZOPL(&ZOPN)          SETC  ' '                                         51800000
&ZOPO(&ZOPN)          SETC  'ST'                                        51850000
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              51900000
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        51950000
                      AGO   .ZMRETX                                     52000000
.*                                                                      52050000
.ZMRET2               ANOP  ,                                           52100000
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                52150000
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                52200000
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                52250000
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  52300000
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   52350000
&ZOPN                 SETA  &ZOPN+1                                     52400000
&ZOPL(&ZOPN)          SETC  ' '                                         52450000
&ZOPO(&ZOPN)          SETC  'LR'                                        52500000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 52550000
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        52600000
.ZMRETX               ANOP  ,                                           52650000
.*******************************************************************    52700000
.***AO.X03  REASON CODE PROCESSING                                      52750000
.*******************************************************************    52800000
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    52850000
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            52900000
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              52950000
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             53000000
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              53050000
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             53100000
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                53150000
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 53200000
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                53250000
&ZOPN                 SETA  &ZOPN+1                                     53300000
&ZOPL(&ZOPN)          SETC  ' '                                         53350000
&ZOPO(&ZOPN)          SETC  'ST'                                        53400000
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               53450000
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        53500000
                      AGO   .ZMRSNX                                     53550000
.*                                                                      53600000
.ZMRSN2               ANOP  ,                                           53650000
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                53700000
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 53750000
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                53800000
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 53850000
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                53900000
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   53950000
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    54000000
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   54050000
&ZOPN                 SETA  &ZOPN+1                                     54100000
&ZOPL(&ZOPN)          SETC  ' '                                         54150000
&ZOPO(&ZOPN)          SETC  'LR'                                        54200000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  54250000
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        54300000
.ZMRSNX               ANOP  ,                                           54350000
.*******************************************************************    54400000
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               54401200
.*******************************************************************    54402400
                      ACTR  10000                                       54403600
.*                                                                      54404800
                      LCLA  &ZLC           COLUMN POSITION              54406000
                      LCLA  &ZOPX          LIST TABLE INDEX             54407200
                      LCLC  &ZLL           LABEL                        54408400
                      LCLC  &ZLOP          OPERATION                    54409600
                      LCLC  &ZLV           VALUE                        54410800
                      LCLC  &ZLD           DESCRIPTION                  54412000
.*                                                                      54413200
&ZOPX                 SETA  1                                           54414400
.*******************************************************************    54415600
.***AP.X01  FORMAT GENERATED CODE                                       54416800
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            54418000
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              54419200
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              54420400
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              54421600
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              54422800
                      AIF   (K'&ZLD LE 0).ZL51                          54424000
&ZLC                  SETA  35             COMMENT COLUMN               54425200
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   54426400
&ZLC                  SETA  33             COMMENT COLUMN               54427600
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  54428800
&ZLV                  SETC  '&ZLV'.' '                                  54430000
                      AGO   .ZL31                                       54431200
.*                                                                      54432400
.ZL41                 ANOP  ,                                           54433600
&ZLV                  SETC  '&ZLV'.' '                                  54434800
.ZL51                 ANOP  ,                                           54436000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               54437200
.*                                                                      54438400
&ZLL     &ZLOP &ZLV                                                     54439600
.*                                                                      54440800
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               54442000
                      AGO   .ZL21          CONTINUE LOOPING             54443200
.*                                                                      54444400
.ZLX1                 ANOP  ,                                           54445600
.*******************************************************************    54446800
.***AP.X02  END OF IWMMEXTR MACRO                                       54450000
&ZIWMMEXTR            SETC  'YES'          SET IWMMEXTR USED            54500000
         POP   PRINT                                                    54550000
*                                            IWMMEXTR-1                 54600000
         SPACE 1                                                        54650000
.ZLX2                 ANOP  ,                                           54700000
         MEND                                                           54750000
**********************************************************************/ 54800000
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  54850000
*%IWMMEXTR: MACRO KEYS(MONTKN,OWNER_TOKEN,OWNER_DATA,ARRIVALTIME,       54900000
*                 TRXNAME,USERID,SERVCLS,TTRACETOKEN,ABNORMAL_COND,     54950000
*                 RETCODE,RSNCODE,PLISTVER);                            55000000
*  ANS('?'||MACLABEL||' '||'IWMMEXTP '||MACLIST||                       55050000
*         ' '||MACKEYS||';') COL(MACLMAR);                              55100000
*%END IWMMEXTR;                                                         55150000
