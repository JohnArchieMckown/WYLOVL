* %/*                                                                   00050000
         MACRO                                                          00100000
&NAME    ENFREQ &ACTION=,&CODE=,&TYPE=,&QUAL=,&QMASK=,                 *00150000
               &EXIT=,&PARM=,&DTOKEN=,&STOKEN=,&FREEPRM=,&MF=,         *00200000
               &ESTBNME=,&EXITNME=,&RELATED=,&LISTENRS=,&DISABLE=,     *00233300
               &SRBEXIT=,&EOT=,&EOM=,&SPXITRET,&XSYS=,&PARMLEN=,       *00262400
               &BITQUAL=,&BITCOMPARE=,&PLISTVER=,&MASEXIT=         @PFC 00291500
.**** START OF SPECIFICATIONS ***************************************** 00320600
.*                                                                    * 00350000
.* MACRO  NAME - ENFREQ                                               * 00400000
.*                                                                    * 00450000
.* DESCRIPTION - MACRO FOR EVENT NOTIFICATION (ENF) REQUESTS          * 00500000
.*                                                                    * 00550000
.**01* PROPRIETARY STATEMENT=                                         * 00594400
.* **PROPRIETARY_STATEMENT********************************************* 00638800
.*                                                                    * 00683200
.*                                                                    * 00727600
.*  LICENSED MATERIALS - PROPERTY OF IBM                              * 00772000
.*  THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                       * 00816400
.*  5647-A01 (C) COPYRIGHT IBM CORP. 1981, 2000                   @PFC* 00866400
.*                                                                    * 00950000
.*  STATUS= HBB7703                                               @PFC* 00975000
.*                                                                    * 01000000
.* **END_OF_PROPRIETARY_STATEMENT************************************** 01025000
.*                                                                    * 01050000
.* FUNCTION -                                                         * 01100000
.*      THE ENFREQ MACRO IS USED TO GENERATE THE EVENT                * 01150000
.*      PARAMETER LIST AND/OR INVOKE THE ENF SERVICE ROUTINE.         * 01200000
.*                                                                    * 01212500
.*01* EXTERNAL CLASSIFICATION:                                    @PBC* 01215200
.*02* GUPI: BASE                                                  @PBA* 01217900
.*02* NONE: FIELDS                                                @PBA* 01220600
.*          ACTION=SIGNAL                                         @PBA* 01223300
.*          ACTION=QUERY                                          @PBA* 01226000
.*          DISABLE                                               @PBA* 01228700
.*          SPXITRET                                              @PBA* 01231400
.*          TYPE                                                  @PBA* 01234100
.*01* END OF EXTERNAL CLASSIFICATION:                             @L6A* 01237500
.*                                                                    * 01250000
.* OPERATION -                                                        * 01300000
.*      . VERIFY THE INPUT PARAMETERS SPECIFIED BY THE USER           * 01350000
.*                                                                    * 01400000
.*      . BUILD THE EVENT PARAMETER LIST (LIST AND NORMAL             * 01450000
.*        FORM)                                                       * 01500000
.*                                                                    * 01550000
.*      . GENERATE INSTRUCTIONS TO MODIFY THE EVENT PARAMETER         * 01600000
.*        LIST (NORMAL AND EXECUTE FORM)                              * 01650000
.*                                                                    * 01700000
.*      . GENERATE INSTRUCTION TO INVOKE THE ENF SERVICE              * 01750000
.*        ROUTINE (NORMAL AND EXECUTE FORM)                           * 01800000
.*                                                                    * 01850000
.* NOTES - N/A                                                        * 01900000
.*                                                                    * 01950000
.* DEPENDENCIES -                                                     * 02000000
.*       TO USE THE ENFREQ MACRO INSTRUCTION, THE CALLER MUST         * 02050000
.*            1. DECLARE STORAGE FOR A 4 BYTE POINTER ENFPTR          * 02100000
.*            2. DEFINE CVTPTR (EQUAL TO LOCATION 16)                 * 02150000
.*            3. INCLUDE THE CVT, IEFENFCT, AND IEFENFPM              * 02200000
.*               MAPPING MACROS                                       * 02250000
.*                                                                    * 02300000
.* MODULE TYPE - MACRO                                                * 02350000
.*                                                                    * 02400000
.* ENTRY POINT - N/A                                                  * 02450000
.*                                                                    * 02500000
.* INPUT - THE FOLLOWING MAY BE SPECIFIED AS PARAMETERS TO ENFREQ     * 02550000
.*                                                                    * 03650000
.*        . &ACTION - Action requested for ENF processing             * 03658400
.*                    (Valid types : SIGNAL, LISTEN, DELETE,      @D2C* 03666800
.*                    and QUERY)                                  @D2A* 03675200
.*                                                                    * 03683800
.*        . &BITCOMPARE - Comparison operator that determines how @L6A* 03690400
.*                     ENF is to interpret the bit-mapped         @L6A* 03697000
.*                     qualifier specified with the BITQUAL       @L6A* 03697600
.*                     parameter.                                 @L6A* 03698200
.*                     SUBSET => All '1's in listener's bit-      @L6A* 03698300
.*                       mapped qualifier must also be '1's in    @L6A* 03698400
.*                       signaller's bit-mapped qualifier         @L6A* 03698500
.*                     INTERSECT => At least 1 '1' in listener's  @L6A* 03698600
.*                       bit-mapped qualifier must be a '1' in    @L6A* 03698700
.*                       signaller's bit-mapped qualifier         @L6A* 03698800
.*                     EQUAL => Listener's and signaller's        @L6A* 03698900
.*                       bit-mapped qualifiers must match exactly @L6A* 03699000
.*                                                                    * 03699100
.*        . &BITQUAL - Bit-mapped qualifier that may be used to   @L6A* 03699200
.*                     more specifically identify the event of    @L6A* 03699300
.*                     interest.  The meaning of the bit-mapped   @L6A* 03699400
.*                     qualifier depends on the event code being  @L6A* 03699500
.*                     signalled.                                 @L6A* 03699600
.*                                                                    * 03699700
.*        . &CODE - The event code                                    * 03699800
.*                                                                    * 03699900
.*        . &DISABLE - Determines if ENF should disable the       @L4A* 03700000
.*                     listen exit if an error occurs while the   @L4A* 03700100
.*                     listen exit has control (valid             @L4A* 03700200
.*                     types: YES, NO)                            @L4A* 03700300
.*                                                                    * 03700400
.*        . &DTOKEN - Token for LISTEN and DELETE request             * 03700500
.*                                                                    * 03700600
.*        . &EOM - Request to delete LISTEN request when address  @L5A* 03700700
.*                 space terminates.  YES or NO are only valid    @L5A* 03700800
.*                 choices.                                       @L5A* 03700900
.*                                                                    * 03701000
.*        . &EOT - Request to delete LISTEN request when task     @L5A* 03701100
.*                 terminates. YES or NO are only valid choices.  @L5A* 03701200
.*                                                                    * 03701300
.*        . &ESTBNME - Name of module establishing LISTEN exit    @D1A* 03701400
.*                     this keyword is optional but required if   @D1A* 03701500
.*                     EXITNME is specified.                      @D1A* 03701600
.*                                                                    * 03701700
.*        . &EXIT - Address of signaller's or listener's              * 03701800
.*                  exit routine                                      * 03701900
.*                                                                    * 03702000
.*        . &EXITNME - Name of LISTEN exit routine                @D1A* 03702100
.*                     this keyword is optional but required if   @D1A* 03702200
.*                     ESTBNME is specified.                      @D1A* 03702300
.*                                                                    * 03702400
.*        . &FREEPRM - FREEMAIN parameters used to free the           * 03702500
.*                     signaller's parameter list                     * 03702600
.*                     Format: FREEPRM=(subpool,length,key)       @L6A* 03702700
.*                                                                    * 03702800
.*        . &LISTENRS- Used by the caller to specify the name of  @L3A* 03702900
.*                     a variable into which ENF will return the  @L3A* 03703000
.*                     number of listeners for &CODE event.  This @L3A* 03703100
.*                     keyword is only allowed when &TYPE=SYNC.   @L3A* 03703200
.*                     The returned value includes the count of   @L3A* 03703300
.*                     listeners for an event that match the      @L3A* 03703400
.*                     &QMASK and &QUAL.                          @L3A* 03703500
.*                     This keyword is allowed only for           @D2A* 03703600
.*                     ACTION = QUERY.                            @D2A* 03703700
.*                                                                    * 03703800
.*        . &MASEXIT - Request that multiple address spaces are   @PFA* 03703900
.*                     allowed to use the same listen exit.  YES  @PFA* 03704000
.*                     or NO are the only valid choices.          @PFA* 03704100
.*                                                                    * 03704200
.*        . &PARM -  Address of signaller's parameter list            * 03704300
.*                                                                    * 03704400
.*        . &PARMLEN - The length of the signaller's parameter    @L6A* 03704500
.*                     list, for sysplex-wide notification.       @L6A* 03704600
.*                     Either FREEPRM or PARMLEN is required for  @L6A* 03704700
.*                     cross-system signal requests if PARM is    @L6A* 03704800
.*                     specified, to define the length of the     @L6A* 03704900
.*                     parameters to be sent across the sysplex.  @L6A* 03705000
.*                                                                    * 03705100
.*        . &PLISTVER - Specifies the version of the parameter    @PAA* 03705200
.*                     list. Accepted values are 2,3,MAX.         @PAA* 03705300
.*                     The default is the highest level needed    @PAA* 03707800
.*                     by any of the parameters specified on the  @PAA* 03710700
.*                     macro invocation.  Specify MAX to get the  @PAA* 03713600
.*                     longest parameter list supported.  This    @PAA* 03716500
.*                     is especially applicable for MF=L to       @PAA* 03719400
.*                     ensure that the list form used is at       @PAA* 03722300
.*                     least as long as the execute form.         @PAA* 03725200
.*                                                                    * 03728100
.*                     The following parameters require version   @PAA* 03731000
.*                     3 or MAX:                                  @PAA* 03733900
.*                                                                    * 03736800
.*                       BITQUAL, BITCOMPARE, XSYS, PARMLEN       @PAA* 03739700
.*                       MASEXIT                                  @PFA* 03739800
.*                                                                    * 03739900
.*        . &QMASK - Mask to determine which bytes in the             * 03740000
.*                   qualifier are to be used in comparing            * 03740100
.*                   qualifiers during SIGNAL processing.             * 03740200
.*                                                                    * 03740300
.*        . &QUAL - Qualifier (the meaning of the qualifier is        * 03740400
.*                  determined by the signallers/listeners of         * 03740500
.*                  a given event)                                    * 03740600
.*                                                                    * 03740700
.*        . &RELATED - Used by the caller to specify                  * 03740800
.*                     information used to self-document the          * 03740900
.*                     various ENFREQ requests                        * 03741000
.*                                                                    * 03741100
.*        . &SPXITRET- This area is not used by the caller.  It   @P5A* 03741200
.*                     was added so that the caller's parameter   @P5A* 03741300
.*                     list will remain consistent with ENF's     @P5A* 03741400
.*                     local copy of the parameter list.          @P5A* 03741500
.*                                                                    * 03741600
.*        . &SRBEXIT - Address of listener's exit routine that        * 03741700
.*                  will run as an SRB.                           @L5A* 03741800
.*                                                                    * 03741900
.*        . &STOKEN - Token for SIGNAL request                        * 03742000
.*                                                                    * 03742100
.*        . &TYPE - Requested ENF to process the request              * 03742200
.*                  synchronously(SYNC) or asynchronously(ASYNC)      * 03742300
.*                                                                    * 03742400
.*        . &XSYS    - For signal requests: YES => listeners on   @L6A* 03742500
.*                     other systems in the sysplex are to be     @L6A* 03742600
.*                     notified, NO => only listeners on the      @L6A* 03742700
.*                     local system are to be notified.           @L6A* 03742800
.*                     For listen requests: YES => listener will  @L6A* 03742900
.*                     accept notifications originating on other  @L6A* 03743000
.*                     systems in the sysplex, NO => listener     @L6A* 03743100
.*                     will accept only notifications from the    @L6A* 03743200
.*                     local system.                              @L6A* 03743300
.*                                                                    * 03743400
.* OUTPUT - THE OUTPUT FROM THE ENFREQ MACRO IS AN EVENT              * 03745500
.*          PARAMETER LIST (FOR LIST AND NORMAL FORM) AND/OR          * 03750000
.*          INSTRUCTIONS TO MODIFY THE EVENT PARAMETER LIST           * 03800000
.*          AND INVOKE THE ENF SERVICE ROUTINE (IEFENFFX).            * 03850000
.*                                                                    * 03900000
.* EXIT,NORMAL                                                        * 03950000
.*   CONDITION - NO ERRORS DETECTED                                   * 04000000
.*   OUTPUT    - NO MNOTE ISSUED. SEVERITY CODE = 0.                  * 04050000
.*                                                                    * 04100000
.* EXIT,NORMAL                                                        * 04150000
.*   CONDITION - ERROR CONDITION DETECTED BY THE ENFREQ MACRO         * 04200000
.*   OUTPUT    - INFORMATION MNOTES WITH SEVERITY CODE 4              * 04250000
.*               ISSUED WHEN PARAMETER SPECIFIED IS                   * 04300000
.*               INCORRECT. THE SPECIFIED PARAMETER IS IGNORED        * 04350000
.*               AND THE DEFAULT VALUE FOR THAT PARAMETER             * 04400000
.*               IS ASSUMED.                                          * 04450000
.*                                                                    * 04500000
.* EXIT, ERROR                                                        * 04550000
.*   CONDITION - ERROR CONDITION DETECTED BY THE ENFREQ MACRO         * 04600000
.*   OUTPUT    - ERROR MNOTES WITH SEVERITY CODE 8 (SEE               * 04650000
.*               MESSAGES) ISSUED WHEN CERTAIN REQUIRED               * 04700000
.*               PARAMETER IS MISSING OR INCORRECTLY SPECIFIED.       * 04750000
.*               THE MACRO WILL ATTEMPT TO SCAN FOR ADDITIONAL        * 04800000
.*               ERRORS.                                              * 04850000
.*                                                                    * 04900000
.* EXIT, ERROR                                                        * 04950000
.*   CONDITION - SEVERE ERROR DETECTED BY THE ENFREQ MACRO            * 05000000
.*   OUTPUT    - ERROR MNOTES WITH SEVERITY CODE 12 (SEE              * 05050000
.*               MESSAGES) ISSUED WHEN CERTAIN REQUIRED               * 05100000
.*               PARAMETER IS MISSING OR INCORRECTLY SPECIFIED.       * 05150000
.*               THE MACRO EXPANSION WILL BE TERMINATED AS            * 05200000
.*               A RESULT OF THE ERROR.                               * 05250000
.*                                                                    * 05300000
.*                                                                    * 05350000
.* EXTERNAL REFERENCES - N/A                                          * 05400000
.*                                                                    * 05450000
.* TABLES - N/A                                                       * 05500000
.*                                                                    * 05550000
.* MACROS - CVT                                                       * 05600000
.*          IEFENFCT                                                  * 05650000
.*          IEFENFPM                                                  * 05700000
.*                                                                    * 05750000
.* MESSAGES - (MNOTES)                                                * 05750400
.*   - INFORMATIONAL MNOTES :                                         * 05750800
.*       MNOTE   04,'keyword NOT ALLOWED FOR action REQUEST - IGNORED'* 05751200
.*       MNOTE   04,'keyword NOT VALID WITH SRBEXIT'              @PFC* 05751600
.*       MNOTE   04,'EOM=NO EOT=YES IS NOT A VALID COMBINATION'   @P8C* 05752000
.*       MNOTE   04,'DTOKEN NOT ALLOWED IN LIST FORM - IGNORED'       * 05752400
.*       MNOTE   04,'LISTENRS NOT ALLOWED FOR LIST FORM - IGNORED'    * 05752800
.*                                                                @L3A* 05753200
.*       MNOTE   04,'LISTENRS NOT ALLOWED FOR TYPE=ASYNC - IGNORED    * 05753600
.*                                                                @L3A* 05754000
.*                                                                    * 05754800
.*   - ERROR MNOTES :                                                 * 05755200
.*       MNOTE   08,'BOTH ESTBNME AND EXITNME MUST BE SPECIFIED'  @D1A* 05755600
.*       MNOTE   08,'DTOKEN REQUIRED FOR DELETE REQUEST'              * 05756000
.*       MNOTE   08,'ACTION REQUIRED WITH DTOKEN - DTOKEN IGNORED'    * 05756400
.*                                                                @P2A* 05756800
.*       MNOTE   08,'INVALID EOT : EOT=eot'                       @L5A* 05757200
.*       MNOTE   08,'INVALID EOM : EOM=eom'                       @L5A* 05757600
.*       MNOTE   08,'keyword1 NOT ALLOWED WITH keyword2           @L6C* 05758000
.*       MNOTE   08,'EXIT OR SRBEXIT REQUIRED FOR LISTEN REQUEST' @L5A* 05758400
.*       MNOTE   08,'INVALID TYPE : TYPE=&TYPE IGNORED'               * 05758800
.*       MNOTE   08,'INVALID QMASK VALUE : &QMASK(&I) IGNORED'        * 05759200
.*       MNOTE   08,'DUPLICATE QMASK VALUE : &QMASK(&I)'              * 05759600
.*       MNOTE   08,'EXTRANEOUS QMASK INFO - QMASK=(ALL) ASSUMED'     * 05760000
.*       MNOTE   08,'EXTRANEOUS QMASK INFO - QMASK=(NONE) ASSUMED'    * 05760400
.*       MNOTE   08,'CODE PARAMETER REQUIRED'                         * 05760800
.*       MNOTE   08,'LENGTH REQUIRED IN FREEPRM - FREEPRM IGNORED'    * 05761200
.*       MNOTE   08,'SUBPOOL REQUIRED IN FREEPRM - FREEPRM IGNORED'   * 05761600
.*       MNOTE   08,'SUBPOOL AND LENGTH REQUIRED - FREEPRM IGNORED'   * 05762000
.*       MNOTE   08,'INVALID FREEPRM KEY VALUE - FREEPRM IGNORED'     * 05762400
.*       MNOTE   08,'keyword IN REGISTER NOT ALLOWED FOR LIST FORM'   * 05762800
.*       MNOTE   08,'keyword NOT ALLOWED FOR LIST FORM'           @L6C* 05763200
.*       MNOTE   08,'INVALID DISABLE : DISABLE=&DISABLE IGNORED'      * 05763600
.*       MNOTE   08,'ESTBNME AND EXITNME REQUIRED WITH DISABLE'   @L4A* 05764000
.*       MNOTE   08,'INVALID keyword: keyword=&KEYWORD'           @L6A* 05764400
.*       MNOTE   08,'MORE THAN x keyword VALUE(S) - keyword IGNORED'  * 05764800
.*       MNOTE   08,'FREEPRM OR PARMLEN REQUIRED FOR SIGNAL WHEN  @L6A* 05765200
.*                  XSYS=YES AND PARM SPECIFIED'                  @L6A* 05765600
.*       MNOTE   08,'XSYS=YES REQUIRED WITH PARMLEN'              @L6A* 05766000
.*       MNOTE   08,'BITQUAL MUST BE A HEX NUMERIC VALUE'         @L6A* 05766400
.*       MNOTE   08,'keyword1 REQUIRED WITH keyword2'             @PCC* 05766600
.*                                                                    * 05766800
.*   - Terminating MNOTES:                                            * 05767200
.*       MNOTE   12,'INVALID ACTION : ACTION=&ACTION-MACRO TERMINATED'* 05767600
.*       MNOTE   12,'INVALID MF PARAMETER : MF=&MF - MACRO TERMINATED'* 05768000
.*       MNOTE   12,'ACTION REQUIRED - MACRO TERMINATED'              * 05768400
.*       MNOTE   12,'ERROR IN ENFREQ MACRO - MACRO TERMINATED'        * 05768800
.*       MNOTE   12,'PLISTVER MUST BE 2, 3, OR MAX'               @PAA* 05768900
.*       MNOTE   12,'PLISTVER=&PLISTVER BUT PLISTVER OF &VERS IS      * 05769000
.*                   REQUIRED'                                    @PAA* 05769100
.*                                                                    * 05769200
.*                                                                    * 05769600
.* CHANGE ACTIVITY - D0,P1,P2,P3,L1,D1,P4,L3,D2,P5,L4,P6,L5,P7,P8,    * 05772200
.*                   P9                                           @P9C* 05794400
.* The above section of the change activity is no longer updated. @L6A* 05805500
.*                                                                    * 05816600
.*   $D0= DCR#1   JBB1326  800604  PD42: IMPLICIT FLAG - NEW CODE     * 05850000
.*   $P1= PMM0114 JBB1326  800604  PD42: ADD KEYWORD RETCODE FOR      * 05900000
.*                                         ENFREQP                    * 05950000
.*   $P2= PMM0135 JBB1326  800604  PD42: CHECK FOR ACTION PARAMETER   * 06000000
.*                                         IF DTOKEN IS SPECIFIED IN  * 06050000
.*                                         EXECUTE FORM               * 06100000
.*   $P3= PMM0335 JBB1326  810420  PD42: CORRECT CHANGE ACTIVITY      * 06150000
.*                                         LINE FLAGS AND COPYRIGHT   * 06200000
.*   $L1= COEXWTO2 JBB2220 840813  PDD7: SUPPORT FOR JES3/MCS     @L1A* 06250000
.*                                       COEXISTENCE              @L1A* 06300000
.*   $D1= DCR1019  HBB3310 870918  PDT3: SERVICEABILITY           @D1A* 06325000
.*   $P4= PC41800  HBB3310 871130  PDT3: CORRECT ADDRESSABILITY   @P4A* 06337500
.*   $L3= CNITG    HBB4410 881229  PDT4: LISTENER COUNT           @L3A* 06343700
.*   $D2= DCR0227  HBB4410 891016  PDIB: QUERY FOR INFORMATION    @D2A* 06346800
.*   $P5= PEO3561  HBB4410 900209  PDIB: SPECIAL EXIT RETURN CODE @P5A* 06348400
.*   $L4= ENFEXT   HBB4430 911204  PDIB: DISABLE KEYWORD          @L4A* 06349200
.*   $P6= PKB2552  HBB4430 920617  PDIB: CHANGE DISTLIB           @P6A* 06349600
.*   $L5= ENFEN    HBB5510 921203  PDIB: ENF Enhancements         @L5A* 06349700
.*   $P7= PIG4001  HBB5510 921203  PDIB: ENF Enhancements         @P7A* 06349800
.*   $P8= PIG4000  HBB5510 921203  PDIB: ENF Enhancements         @P8A* 06349900
.*   $P9= PIG4029  HBB5510 930520  PDIB: ENF Enhancements         @P9A* 06366600
.*   $01= OW14561  HBB5520 950804  PDLS: ENF Keywords ESTBNME and @01A* 06368600
.*                                       EXITNME Corrections      @01A* 06370600
.*   $02= OW14325  HBB5510 950829  PDLS: Fix for CVT - PREFIX=YES @02A* 06372600
.*   $L6= GRS32    JBB6602 950921  PDBN: Sysplex-wide ENF         @L6A* 06374900
.*   $PA= PSD0835  JBB6602 960404  PDXB: Sysplex-wide ENF         @PAA* 06377700
.*   $PB= PSD0834  JBB6602 960404  PDBN: External classification  @PBA* 06380500
.*   $PC= PSD0495  JBB6602 960404  PDBN: MNOTE severity           @PCA* 06381900
.*   $PD= PSD0516  JBB6602 960404  PDBN: DISABLE flags            @PDA* 06382600
.*   $PE= PSD0584  JBB6602 960404  PDBN: PARMLEN=equated value    @PEA* 06382900
.*   $PF= PXD0510  HBB7703 991018  PDOH: FIN APAR OW39364         @PFA* 06383100
.*                                                                    * 06383300
.**** END OF SPECIFICATIONS ******************************************* 06433300
.* A 000000-999999                                                @D0A* 08600000
.* C LOCATION OF ENFRQ IS CHANGED TO SYS1.MACLIB FROM                 * 08650000
.*   SYS1.PVTMACS.                                                @L1A* 08700000
.* A ADDED ESTBNME AND EXITNME TO IDENTIFY WHO ESTABLISHED            * 08716600
.*   THE LISTEN EXIT AND THE NAME OF THE LISTEN EXIT.             @D1A* 08733200
.* A ADDED LISTENRS PARAMETER                                     @L3A* 08741600
.* A ADDED ACTION QUERY FOR INFORMATION                           @D2A* 08745800
.* A ADDED SPXITRET SPECIAL EXIT RETURN CODE                      @P5A* 08747900
.* A DISABLE KEYWORD                                              @L4A* 08748900
.* C CHANGE DISTLIB TO AMACLIB.                                   @P6A* 08749400
.* A Added SRBEXIT, EOT, EOM and allowed PARM on listen.          @L5A* 08749500
.* C Corrected assembler instructions generated for EOT=YES/          * 08749600
.*   EOM=NO and EOM=NO/SRBEXIT= error conditions                  @P7A* 08749700
.* C Corrected MNOTE for EOT=YES EOM=NO error condition           @P8A* 08749800
.* C Don't set EOT or EOM defaults on execute form of macro.      @P9A* 08749900
.* A Added register specified support for EXITNME and ESTBNME,    @01A* 08755400
.* C Corrected code to allow CVT with PREFIX=YES specified.       @02A* 08760900
.* C Defined XSYS, PARMLEN, BITQUAL, and BITCOMPARE keywords.     @L6A* 08766600
.* C Defined PLISTVER keyword to control size of generated            * 08769900
.*   parameter list for compatibility purposes.                   @PAA* 08773200
.* C Changed external classification to identify parameters that      * 08776500
.*   are not part of the intended interface.                      @PBA* 08779800
.* C Changed "keyword1 REQUIRED WITH keyword" MNOTEs from             * 08780900
.*   severity 4 to severity 8.                                    @PCA* 08782000
.* C Don't set flags ENFPDISA and ENFPDISO unless DISABLE             * 08782400
.*   explicitly specified.                                        @PDA* 08782800
.* C Don't try to permit equated value for PARMLEN, since it is       * 08782900
.*   not possible to recognize values defined as EQU x,len,C'F'.  @PEA* 08783000
.* A Defined MASEXIT keyword.  Used to allow multiple address         * 08783100
.*   spaces to use the same listen exit.                          @PFA* 08783200
.*-------------------------------------------------------------------*  08783300
.*   DECLARATIONS FOR TEMPORARY VALUES FOR EVENT PARAMETER LIST      *  08800000
.*-------------------------------------------------------------------*  08850000
         LCLA    &LEN,&ACT             WORD 1 : LENGTH,ACTION           08900000
         LCLC    &CDE                  WORD 2 : CODE                    08950000
         LCLC    &MSK                  WORD 3 : QMASK                   09000000
         LCLA    &FLG                  WORD 3 : FLAGS                   09050000
         LCLC    &FREEKEY              WORD 3 : KEY FOR FREEPRM         09100000
         LCLC    &FREESP               WORD 3 : SUBPOOL FOR FREEPRM     09150000
         LCLC    &QUALIF               WORD 4 : QUALIFIER               09200000
         LCLC    &EXTADR               WORD 5 : EXIT ADDRESS            09250000
         LCLC    &PARMS                WORD 6 : SIGNAL or LISTEN parms  09300000
         LCLC    &TOK                  WORD 7 : TOKEN                   09350000
         LCLC    &FREELEN              WORD 8 : LENGTH FOR FREEPRM      09400000
         LCLA    &VERS,&RESV           WORD 9 : VERSION, RESERVED  @D1A 09406200
         LCLA    &IVERS                Specified or implied value      +09408200
                                         of PLISTVER               @PAA 09410200
         LCLA    &RTAD                 WORD 10: RETURN ADDRESS     @D1A 09412400
         LCLC    &ESTB                 WORD 11,12: ESTABLISHER     @D1A 09418600
         LCLC    &ENME                 WORD 13,14: LISTEN EXIT     @D1A 09424800
         LCLC    &LISTR                WORD 15 :LISTENR NUMBER     @L3A 09431000
         LCLC    &BQUAL                BITQUAL value               @L6A 09437200
         LCLA    &FLG2                 2nd flag word (ENFPFLG2)    @L6A 09443400
.*-------------------------------------------------------------------*  09450000
.*   DECLARATIONS FOR LOCAL VARIABLES                                *  09500000
.*-------------------------------------------------------------------*  09550000
         LCLB    &NORMAL,&LIST,&EXECUTE FORM OF MACRO CALL              09600000
         LCLC    &GNAME                LABEL GENERATED                  09650000
         LCLC    &REGC                 REGISTER IN CHARACTERS           09700000
         LCLA    &N,&I                 FOR PROCESSING QMASK             09750000
         LCLB    &QBYTE(4),&ERRMASK    FOR PROCESSING QMASK             09800000
         LCLC    &INX                  FOR PROCESSING QMASK             09850000
         LCLB    &DONECDE              CODE ALREADY BEEN PROCESSED      09900000
         LCLB    &DONEXIT              EXIT ALREADY BEEN PROCESSED      09950000
         LCLB    &DONEOM               EOM already coded          @L5A  09966600
         LCLB    &DONEOT               EOT already coded          @L5A  09983200
         LCLB    &DONEPRM              PARM ALREADY BEEN PROCESSED      10000000
         LCLB    &DONETYP              TYPE ALREADY BEEN PROCESSED      10050000
         LCLB    &DONEACT              ACTION ALREADY BEEN PROCESSED    10100000
         LCLB    &DONEMSK              QMASK ALREADY BEEN PROCESSED     10150000
         LCLB    &DONESP               FREEMAIN : SUBPOOL PROCESSED     10200000
         LCLB    &DONELEN              FREEMAIN : LENGTH PROCESSED      10250000
         LCLB    &DONEKEY              FREEMAIN : KEY PROCESSED         10300000
         LCLB    &DONEFFG              ENFPFREE FLAG HAS BEEN SET UP    10350000
         LCLB    &DONEFRP              FREEPRM PROCESSING COMPLETED     10400000
         LCLB    &DONEDIS              DISABLE ALREADY PROCESSED        10425000
         LCLB    &DONEXSYS             XSYS already processed      @L6A 10429100
         LCLB    &DONEPLEN             PARMLEN already processed   @L6A 10433200
         LCLB    &DONEBQUAL            BITQUAL already processed   @L6A 10437300
         LCLB    &DONEBCOMP            BITCOMPARE already              +10441400
                                         processed                 @L6A 10445500
         LCLB    &DONEMASE             MASEXIT already coded       @PFA 10447700
         LCLA    &MAXF                 MAXIMUM NUMBER OF FREEPRM ATTR   10450000
         LCLA    &MINF                 MINIMUM NUMBER OF FREEPRM ATTR   10500000
         LCLA    &MAXQMSK              MAXIMUM NUMBER OF QMASK VALUES   10550000
         LCLA    &NPARAMS,&MAXBR,&EXTRA FOR ACTR CALCULATION            10600000
         LCLB    &USING1               On if USING done            @PAA 10625000
.*-------------------------------------------------------------------*  10650000
.*   DECLARATIONS FOR DEBUGGING                                      *  10700000
.*-------------------------------------------------------------------*  10750000
         LCLB    &STOPLOP              DEBUG : PREVENT LOOPING          10800000
.*-------------------------------------------------------------------*  10850000
.* Determine required parameter list version                       @PAA 10854500
.*-------------------------------------------------------------------*  10859000
         AIF   ('&BITQUAL' NE '' OR '&BITCOMPARE' NE '').V3        @PAA 10863500
         AIF   ('&XSYS' NE '' OR '&PARMLEN' NE '').V3              @PAA 10868000
         AIF   ('&MASEXIT' NE '').V3                               @PFA 10870200
&VERS    SETA    2                     PARAMETER LIST VERSION      @PAA 10872500
         AGO   .ENDV                                               @PAA 10877000
.V3      ANOP                                                      @PAA 10881500
&VERS    SETA    3                     PARAMETER LIST VERSION      @PAM 10886000
.ENDV    ANOP                                                      @PAA 10890500
.*-------------------------------------------------------------------*  10895000
.*   INITIALIZE LOCAL VARIABLES                                      *  10900000
.*-------------------------------------------------------------------*  10950000
&ACT     SETA    0                     INVALID ACTION                   11050000
&CDE     SETC    '0'                   INVALID CODE                     11100000
&FLG     SETA    X'00'                 DEFAULT VALUES FOR FLAGS         11150000
&FLG2    SETA    X'00'                 Default for 2nd flag byte   @L6A 11175000
&MSK     SETC    '00000000'            NOT SPECIFIED BY CALLER          11200000
&FREEKEY SETC    '0'                   NOT SPECIFIED BY CALLER          11250000
&FREESP  SETC    '0'                   NOT SPECIFIED BY CALLER          11300000
&QUALIF  SETC    '0'                   NOT SPECIFIED BY CALLER          11350000
&EXTADR  SETC    '0'                   NOT SPECIFIED BY CALLER          11400000
&PARMS   SETC    '0'                   NOT SPECIFIED BY CALLER          11450000
&TOK     SETC    '0'                   NOT SPECIFIED BY CALLER          11500000
&LISTR   SETC    '0'                   NOT SPECIFIED BY CALLER     @L3A 11525000
&FREELEN SETC    '0'                   NOT SPECIFIED BY CALLER          11550000
&RESV    SETA    0                     RESERVED FIELD              @D1C 11564200
&RTAD    SETA    0                     RETURN ADDRESS              @D1C 11571300
&ESTB    SETC    '''        '''        ESTABLISHER NAME            @D1C 11578400
&ENME    SETC    '''        '''        LISTEN EXIT NAME            @D1C 11585500
&BQUAL   SETC    '00'                  Default BITQUAL value       @L6A 11592600
.*-------------------------------------------------------------------*  11600000
.*                                                                   *  11650000
.*       MINIMUM/MAXIMUM NUMBER OF VALUES ALLOWED IN FREEPRM AND     *  11700000
.*       QMASK                                                       *  11750000
.*-------------------------------------------------------------------*  11800000
&MAXF    SETA    3                     (SUBPOOL,LENGTH,KEY)             11850000
&MINF    SETA    2                     (SUBPOOL,LENGTH)                 11900000
&MAXQMSK SETA    4                     UP TO 4 QMASK VALUES ALLOWED     11950000
.*-------------------------------------------------------------------*  12000000
.*                                                                   *  12050000
.*       SET UP ACTR VALUE                                           *  12100000
.*                                                                   *  12150000
.*-------------------------------------------------------------------*  12200000
&NPARAMS SETA    20                    NUMBER OF MACRO PARAMETERS @L5C  12250000
&MAXBR   SETA    20                    MAX BRANCHES/PARAM (QMASK USED)  12300000
&EXTRA   SETA    100                   EXTRA BRANCHES                   12350000
         ACTR    &NPARAMS*&MAXBR+&EXTRA                                 12400000
.*-------------------------------------------------------------------*  12402000
.* Check the requested parameter list version.                    @PAA  12404000
.*-------------------------------------------------------------------*  12406000
         AIF     ('&PLISTVER' EQ '').NOPLVER                      @PAA  12408000
         AIF     ('&PLISTVER' EQ '2').OKPLVER                     @PAA  12410000
         AIF     ('&PLISTVER' EQ '3').OKPLVER                     @PAA  12412000
         AIF     ('&PLISTVER' EQ 'MAX').OKPLVER                   @PAA  12414000
         MNOTE 12,'PLISTVER MUST BE 2, 3, OR MAX'                       12416000
         AGO     .ERREXIT                                         @PAA  12418000
.OKPLVER ANOP                                                     @PAA  12420000
&IVERS   SETA    3                                                @PAA  12422000
         AIF     ('&PLISTVER' EQ 'MAX').SETPLVER                  @PAA  12424000
&IVERS   SETA    &PLISTVER                                        @PAA  12426000
.SETPLVER ANOP                                                    @PAA  12428000
         AIF     (&IVERS GE &VERS).OKPLVER2                       @PAA  12430000
  MNOTE 12,'PLISTVER=&PLISTVER BUT PLISTVER OF &VERS IS REQUIRED' @PAA  12432000
         AGO     .ERREXIT                                         @PAA  12434000
.OKPLVER2 ANOP                                                    @PAA  12436000
&VERS    SETA    &IVERS                                           @PAA  12438000
.NOPLVER ANOP                                                     @PAA  12440000
&LEN    SETA    64                                                @PAA  12442000
         AIF     ('&VERS' EQ '2').HAVELEN                         @PAA  12444000
&LEN    SETA    104                                               @PAA  12446000
.HAVELEN ANOP                                                     @PAA  12448000
.*-------------------------------------------------------------------*  12450000
.*       DETERMINE WHICH FORM OF THE MACRO IS REQUESTED              *  12500000
.*-------------------------------------------------------------------*  12550000
         AIF     ('&MF' EQ 'L').LISTFM MF=L SPECIFIED                   12600000
&GNAME   SETC    'IHB'.'&SYSNDX'       INITIALIZE LABEL                 12650000
         USING   ENFPM,1               MAP ENFPM OVER AREA              12700000
&USING1  SETB    1                     Remember USING set         @PAA  12725000
         AIF     ('&MF' EQ '').NORMFM  MF NOT SPECIFIED                 12750000
         AIF     (N'&MF NE 2).BADMF1   EXECUTE FORM HAS 2 PARMS         12800000
         AIF     ('&MF(1)' EQ 'E').EXECFM  MF=(E,LIST)                  12850000
.BADMF1  MNOTE   12,'INVALID MF PARAMETER : MF=&MF - MACRO TERMINATED'  12900000
         AGO     .ERREXIT                                               12950000
.*********************************************************************  13000000
.*                                                                   *  13050000
.*       BEGIN PROCESSING PARAMETERS FOR NORMAL FORM                 *  13100000
.*                                                                   *  13150000
.*********************************************************************  13200000
.NORMFM  ANOP                          BEGIN NORMAL FORM                13250000
&NORMAL  SETB    1                     NORMAL FORM REQUESTED            13300000
.*-------------------------------------------------------------------*  13350000
.*       THE FOLLOWING PARAMETERS WILL BE PUT INTO THE EVENT         *  13400000
.*       PARAMETER LIST IF SPECIFIED  (EXCEPT WHEN SPECIFIED         *  13450000
.*       IN REGISTER) :                                              *  13500000
.*             ACTION                                                *  13528500
.*             CODE                                                  *  13557000
.*             TYPE                                                  *  13585500
.*             EXIT                                                  *  13614000
.*             SRBEXIT                                           @L5A*  13642500
.*             EOT                                               @L5A*  13671000
.*             EOM                                               @L5A*  13699500
.*             PARM                                                  *  13728000
.*             QMASK                                                 *  13756500
.*             ENFPFREE FOR FREEPRM                                  *  13785000
.*             PARMLEN                                           @L6A*  13799200
.*             ESTBNME                                               *  13813500
.*             EXITNME                                               *  13842000
.*             DISABLE                                           @L4A*  13870500
.*             XSYS                                              @L6A*  13877800
.*             BITQUAL (if hex constant specified)               @L6A*  13885100
.*             BITCOMPARE                                        @L6A*  13892400
.*             MASEXIT                                           @PFA*  13896200
.*-------------------------------------------------------------------*  13900000
.*-------------------------------------------------------------------*  13950000
.*       PROCESS THE ACTION PARAMETER - NORMAL FORM                  *  14000000
.*-------------------------------------------------------------------*  14050000
         AIF     ('&ACTION' EQ 'SIGNAL').SIGACT0 ACTION=SIGNAL          14100000
         AIF     ('&ACTION' EQ 'DELETE').DELACT0 ACTION=DELETE          14150000
         AIF     ('&ACTION' EQ 'LISTEN').LISACT0 ACTION=LISTEN          14200000
         AIF     ('&ACTION' EQ 'QUERY').QRYACT0 ACTION=QUERY      @D2A  14225000
         AIF     ('&ACTION' EQ '').NOACT0        ACTION NOT SPECIFIED   14250000
         MNOTE   12,'INVALID ACTION : ACTION=&ACTION-MACRO TERMINATED'  14300000
         AGO     .ERREXIT                                               14350000
.NOACT0  ANOP                                                           14400000
         MNOTE   12,'ACTION REQUIRED - MACRO TERMINATED'                14450000
         AGO     .ERREXIT                                               14500000
.LISACT0 ANOP                                                           14550000
&ACT     SETA    X'02'                 SET ACTION CODE TO LISTEN        14600000
         AGO     .ENDACT0                                               14650000
.SIGACT0 ANOP                                                           14700000
&ACT     SETA    X'01'                 SET ACTION CODE TO SIGNAL        14750000
         AGO     .ENDACT0                                               14800000
.QRYACT0 ANOP                                                     @D2A  14812500
&ACT     SETA    X'04'                 SET ACTION CODE TO QUERY   @D2A  14825000
         AGO     .ENDACT0                                         @D2A  14837500
.DELACT0 ANOP                                                           14850000
&ACT     SETA    X'03'                 SET ACTION CODE TO DELETE        14900000
.ENDACT0 ANOP                                                           14950000
&DONEACT SETB    1                     ACTION PROCESSING COMPLETED      15000000
.*-------------------------------------------------------------------*  15050000
.*       PROCESS THE CODE PARAMETER - NORMAL FORM (NOT REGISTER)     *  15100000
.*-------------------------------------------------------------------*  15150000
         AIF     ('&CODE' NE '').CHCODE MUST SPECIFY EVENT CODE         15200000
         MNOTE   08,'CODE PARAMETER REQUIRED'                           15250000
         AGO     .DONECDE                                               15300000
.CHCODE  ANOP                                                           15350000
         AIF     ('&CODE'(1,1) EQ '(').ENDCDE0  SKIP : CODE IN REG      15400000
&CDE     SETC    '&CODE'               SAVE FOR EVENT PARM LIST         15450000
.DONECDE ANOP                                                           15500000
&DONECDE SETB    1                     NO NEED TO GENERATE CODE         15550000
.ENDCDE0 ANOP                                                           15600000
.*-------------------------------------------------------------------*  15650000
.*       PROCESS THE TYPE PARAMETER - NORMAL FORM                    *  15700000
.*-------------------------------------------------------------------*  15750000
         AIF     ('&TYPE' EQ '').SYNC0        USE DEFAULT = SYNC        15800000
         AIF     ('&TYPE' EQ 'ASYNC').ASYNC0  TYPE=ASYNC                15850000
         AIF     ('&TYPE' NE 'SYNC').BADSYN0  EXPECT TYPE=SYNC          15900000
.SYNC0   ANOP                                                           15950000
&FLG     SETA    X'00'+&FLG            SYNCHRONOUS CALLER               16000000
         AGO     .ENDTYPE                                               16050000
.ASYNC0  ANOP                                                           16100000
&FLG     SETA    X'80'+&FLG            ASYNCHRONOUS CALLER              16150000
         AGO     .ENDTYPE                                               16200000
.BADSYN0 MNOTE   08,'INVALID TYPE : TYPE=&TYPE IGNORED'                 16250000
         AGO     .SYNC0                USE DEFAULT : TYPE=SYNC          16300000
.ENDTYPE ANOP                                                           16350000
&DONETYP SETB    1                     TYPE PROCESSING COMPLETED        16400000
.*-------------------------------------------------------------------*  16450000
.*       Process the EOT parameter - Normal Form                     *  16500000
.*-------------------------------------------------------------------*  16550000
.*                                                                 @L5A 16553200
.* If EOT was not coded and the action was not listen goto end     @L5A 16556400
         AIF ('&EOT' EQ '' AND '&ACTION' NE 'LISTEN').END_EOT      @L5A 16559600
.*                                                                 @L5A 16562800
.* If EOT was not coded and the action is listen use default       @L5A 16566000
         AIF ('&EOT' EQ '' AND '&ACTION' EQ 'LISTEN').SET_EOT_DEF  @L5A 16569200
.*                                                                 @L5A 16572400
.* If EOT is yes then goto set it to yes                           @L5A 16575600
         AIF ('&EOT' EQ 'YES').SET_EOT_YES                         @L5A 16578800
.*                                                                 @L5A 16582000
.* If EOT is not equal to no then it must be invalid               @L5A 16585200
         AIF ('&EOT' NE 'NO').INVALID_EOT                          @L5A 16588400
.*                                                                 @L5A 16591600
.* Set EOT to no                                                   @L5A 16594800
.SET_EOT_NO  ANOP                                                  @L5A 16598000
.* If the action is not listen and not null goto action error      @P9C 16600400
         AIF ('&ACTION' NE 'LISTEN' AND                                X16602800
               '&ACTION' NE '').EOT_ERROR_ACTION                   @P9C 16605200
.*                                                                 @L5A 16607600
.* Set EOT to the default value no                                 @L5A 16610800
.SET_EOT_DEF  ANOP                                                 @L5A 16614000
&FLG     SETA    X'00'+&FLG                                        @L5A 16617200
         AGO     .DONE_EOT                                         @L5A 16620400
.*                                                                 @L5A 16623600
.* Set EOT to yes                                                  @L5A 16626800
.SET_EOT_YES  ANOP                                                 @L5A 16630000
.* If the action is not listen and not null goto action error      @P9C 16632400
         AIF ('&ACTION' NE 'LISTEN' AND                                X16634800
               '&ACTION' NE '').EOT_ERROR_ACTION                   @P9C 16637200
.* Set EOT to yes                                                  @L5A 16639600
&FLG     SETA    X'04'+&FLG                                        @L5A 16642800
         AGO     .DONE_EOT                                         @L5A 16646000
.*                                                                 @L5A 16649200
.* EOT was coded with an action other than listen so issue error   @L5A 16652400
.EOT_ERROR_ACTION ANOP                                             @L5A 16655600
         MNOTE   04,'EOT NOT ALLOWED FOR &ACTION REQUEST'          @L5A 16658800
         AGO     .DONE_EOT                                         @L5A 16662000
.*                                                                 @L5A 16665200
.* EOT value was not valid so issue error                          @L5A 16668400
.INVALID_EOT ANOP                                                  @L5A 16671600
         MNOTE   08,'INVALID EOT: EOT=&EOT'                        @L5A 16674800
         AGO     .DONE_EOT                                         @L5A 16678000
.*                                                                 @L5A 16681200
.* EOT processing is complete set done bit so that EOT processing  @L5A 16684400
.* will be skipped under the execute/register form                 @L5A 16687600
.DONE_EOT ANOP                                                     @L5A 16690800
&DONEOT  SETB    1                                                 @L5A 16694000
.*                                                                 @L5A 16697200
.END_EOT ANOP                                                      @L5A 16700400
.*-------------------------------------------------------------------*  16703600
.*       Process the EOM parameter - Normal Form                     *  16706800
.*-------------------------------------------------------------------*  16710000
.*                                                                 @L5A 16713200
.* If EOM was not coded and the action was not listen goto end     @L5A 16716400
         AIF ('&EOM' EQ '' AND '&ACTION' NE 'LISTEN').END_EOM      @L5A 16719600
.*                                                                 @L5A 16722800
.* If EOM was not coded and the action was listen use default      @L5A 16726000
         AIF ('&EOM' EQ '' AND '&ACTION' EQ 'LISTEN').SET_EOM_DEF  @L5A 16729200
.*                                                                 @L5A 16732400
.* If EOM is yes then goto set yes                                 @L5A 16735600
         AIF ('&EOM' EQ 'YES').SET_EOM_YES                         @L5A 16738800
.*                                                                 @L5A 16742000
.* If EOM is not no then it is invalid                             @L5A 16745200
         AIF ('&EOM' NE 'NO').INVALID_EOM                          @L5A 16748400
.*                                                                 @L5A 16751600
.* Set EOM to no                                                   @L5A 16754800
.SET_EOM_NO  ANOP                                                  @L5A 16758000
.*                                                                 @L5A 16761200
.* If the action is not listen and not null goto action error      @P9C 16763600
         AIF ('&ACTION' NE 'LISTEN' AND                                X16766000
               '&ACTION' NE '').EOM_ERROR_ACTION                   @P9C 16768400
.*                                                                 @L5A 16770800
.* Set the default EOM value depending on other parameters         @L5A 16774000
.SET_EOM_DEF  ANOP                                                 @L5A 16777200
.*                                                                 @L5A 16780400
.* If SRBEXIT was coded or EOT=YES was coded the default is YES    @L5A 16783600
         AIF ('&SRBEXIT' NE '' OR '&EOT' EQ 'YES').SET_EOM_YES     @L5A 16786800
.*                                                                 @L5A 16790000
.* Set the default to NO                                           @L5A 16793200
&FLG     SETA    X'00'+&FLG                                        @L5A 16796400
         AGO     .DONE_EOM                                         @L5A 16799600
.*                                                                 @L5A 16802800
.* Set the default to YES                                          @L5A 16806000
.SET_EOM_YES  ANOP                                                 @L5A 16809200
.*                                                                 @L5A 16812400
.* If the action is not listen and not null goto action error      @P9C 16814800
         AIF ('&ACTION' NE 'LISTEN' AND                                X16817200
               '&ACTION' NE '').EOM_ERROR_ACTION                   @P9C 16819600
.*                                                                 @L5A 16822000
.* Set EOM to YES                                                  @L5A 16825200
&FLG     SETA    X'02'+&FLG                                        @L5A 16828400
         AGO     .DONE_EOM                                         @L5A 16831600
.*                                                                 @L5A 16834800
.* EOM is not valid with the specified ACTION                      @L5A 16838000
.EOM_ERROR_ACTION ANOP                                             @L5A 16841200
         MNOTE   04,'EOM NOT ALLOWED FOR &ACTION REQUEST'          @L5A 16844400
         AGO     .DONE_EOM                                         @L5A 16847600
.*                                                                 @L5A 16850800
.* EOM value is not YES or NO                                      @L5A 16854000
.INVALID_EOM ANOP                                                  @L5A 16857200
         MNOTE   08,'INVALID EOM : EOM=&EOM'                       @L5A 16860400
         AGO     .DONE_EOM                                         @L5A 16863600
.*                                                                 @L5A 16866800
.* EOT processing is complete set done bit so that EOT processing  @L5A 16870000
.* will be skipped under the execute/register form                 @L5A 16873200
.DONE_EOM ANOP                                                     @L5A 16876400
&DONEOM  SETB    1                                                 @L5A 16879600
.*                                                                 @L5A 16882800
.* Check for combinations of EOT, EOM and SRBEXIT                  @L5A 16886000
.*                                                                 @L5A 16889200
.* Check for EOT=YES and EOM=NO                                    @L5A 16892400
         AIF ('&EOT' EQ 'YES' AND '&EOM' EQ 'NO').EOT_EOM_ERROR    @L5A 16895600
         AGO     .CHECK_EOM_SRBEXIT                                @L5A 16898800
.*                                                                 @L5A 16902000
.CHECK_EOM_SRBEXIT ANOP                                            @L5A 16905200
.*                                                                 @L5A 16908400
.* Check if SRBEXIT was specified with EOM=NO                      @L5A 16911600
         AIF ('&SRBEXIT' NE '' AND '&EOM' EQ 'NO').SRBEXIT_EOM_ERR @L5A 16914800
         AGO     .END_EOM                                          @L5A 16918000
.*                                                                 @L5A 16921200
.* When SRBEXIT is specified EOM=NO is not valid                   @L5A 16924400
.SRBEXIT_EOM_ERR ANOP                                              @L5A 16927600
         MNOTE   04,'EOM=NO NOT VALID WITH SRBEXIT'                @L5A 16930800
         AGO     .END_EOM                                          @L5A 16934000
.*                                                                 @L5A 16937200
.* It is not valid to specify EOM=YES and EOT=NO                   @L5A 16940400
.EOT_EOM_ERROR ANOP                                                @L5A 16943600
         MNOTE   04,'EOM=NO EOT=YES IS NOT A VALID COMBINATION'    @P8C 16946800
         AGO     .END_EOM                                          @L5A 16950000
.END_EOM ANOP                                                      @L5A 16953200
.*-------------------------------------------------------------------*  16956400
.*       Process the EXIT and SRBEXIT parameter - Normal Form        *  16959600
.*-------------------------------------------------------------------*  16962800
.*                                                                 @L5A 16966000
.* If EXIT is null and SRBEXIT is null process null exit           @L5A 16969200
         AIF     ('&EXIT' EQ '' AND '&SRBEXIT' EQ '').NULL_EXIT    @L5A 16972400
.*                                                                 @L5A 16975600
.* If EXIT is not null and SRBEXIT is not null it is an error      @L5A 16978800
         AIF     ('&EXIT' NE '' AND '&SRBEXIT' NE '').ERROR_BOTH   @L5A 16982000
.*                                                                 @L5A 16985200
.* If EXIT is not null then process the EXIT parameter             @L5A 16988400
         AIF     ('&EXIT' NE '').PROCESS_EXIT                      @L5A 16991600
.*                                                                 @L5A 16994800
.* SRBEXIT was coded                                               @L5A 16998000
.PROCESS_SRBEXIT ANOP                                              @L5A 17001200
.*                                                                 @L5A 17004400
.* If the action is not LISTEN then issue error message            @L5A 17007600
         AIF     ('&ACTION' NE 'LISTEN').BAD_SRBEXIT               @L5A 17010800
.*                                                                 @L5A 17014000
.* Check if SRBEXIT was specified in a register                    @L5A 17017200
         AIF     ('&SRBEXIT'(1,1) EQ '(').END_EXIT                 @L5A 17020400
.*                                                                 @L5A 17023600
.* Set the exit value                                              @L5A 17026800
&EXTADR  SETC    '&SRBEXIT'                                        @L5A 17030000
&FLG     SETA    X'01'+&FLG                                        @L5A 17033200
         AGO     .DONE_EXIT                                        @L5A 17036400
.*                                                                 @L5A 17039600
.* Exit was coded                                                  @L5A 17042800
.PROCESS_EXIT ANOP                                                 @L5A 17046000
.*                                                                 @L5A 17049200
.* If the action is DELETE or QUERY then issue error message       @L5A 17052400
         AIF     ('&ACTION' EQ 'DELETE').BAD_EXIT                  @L5A 17055600
         AIF     ('&ACTION' EQ 'QUERY').BAD_EXIT                   @L5A 17058800
.*                                                                 @L5A 17062000
.* Check if EXIT was specified in a register                       @L5A 17065200
         AIF     ('&EXIT'(1,1) EQ '(').END_EXIT                    @L5A 17068400
.*                                                                 @L5A 17071600
.* Set the exit value                                              @L5A 17074800
&EXTADR  SETC    '&EXIT'                                           @L5A 17078000
         AGO     .DONE_EXIT                                        @L5A 17081200
.*                                                                 @L5A 17084400
.* Both EXIT and SRBEXIT were coded                                @L5A 17087600
.ERROR_BOTH ANOP                                                   @L5A 17090800
         MNOTE   08,'EXIT NOT ALLOWED WITH SRBEXIT'                @L6C 17094000
         AGO     .DONE_EXIT                                        @L5A 17097200
.*                                                                 @L5A 17100400
.* No exit was coded                                               @L5A 17103600
.NULL_EXIT ANOP                                                    @L5A 17106800
.*                                                                 @L5A 17110000
.* If the action is not listen then done                           @L5A 17113200
         AIF     ('&ACTION' NE 'LISTEN').DONE_EXIT                 @L5A 17116400
.*                                                                 @L5A 17119600
.* Else EXIT or SRBEXIT is required for LISTEN                     @L5A 17122800
         MNOTE   08,'EXIT OR SRBEXIT REQUIRED FOR LISTEN REQUEST'  @L5A 17126000
         AGO     .DONE_EXIT                                        @L5A 17129200
.*                                                                 @L5A 17132400
.* EXIT was specified with action DELETE or QUERY                  @L5A 17135600
.BAD_EXIT ANOP                                                     @L5A 17138800
         MNOTE   04,'EXIT NOT ALLOWED FOR &ACTION REQUEST'         @L5A 17142000
         AGO     .DONE_EXIT                                        @L5A 17145200
.*                                                                 @L5A 17148400
.* SRBEXIT was specified with action not equal to LISTEN           @L5A 17151600
.BAD_SRBEXIT ANOP                                                  @L5A 17154800
         MNOTE   04,'SRBEXIT NOT ALLOWED FOR &ACTION REQUEST'      @L5A 17158000
         AGO     .DONE_EXIT                                        @L5A 17161200
.*                                                                 @L5A 17164400
.* SRBEXIT processing is complete set done bit on so SRBEXIT       @L5A 17167600
.* processing will be skipped under execute/register form          @L5A 17170800
.DONE_EXIT ANOP                                                    @L5A 17174000
&DONEXIT SETB    1                                                 @L5A 17177200
.END_EXIT ANOP                                                     @L5A 17180400
.*--------------------------------------------------------------------* 17180800
.*       Process the MASEXIT parameter - Normal Form              @PFA* 17181000
.*--------------------------------------------------------------------* 17181200
.* If MASEXIT was not coded and ACTION was not LISTEN, goto end    @PFA 17181400
         AIF ('&MASEXIT' EQ '' AND '&ACTION' NE 'LISTEN').END_MASE @PFA 17181600
.*                                                                 @PFA 17181800
.* If MASEXIT was not coded and ACTION is LISTEN, use default      @PFA 17182000
         AIF ('&MASEXIT' EQ '' AND                                     +17182200
               '&ACTION' EQ 'LISTEN').SET_MASE_DEF                 @PFA 17182400
.*                                                                 @PFA 17182600
.* If MASEXIT is YES, then goto set it to yes                      @PFA 17182800
         AIF ('&MASEXIT' EQ 'YES').SET_MASE_YES                    @PFA 17183000
.*                                                                 @PFA 17183200
.* If MASEXIT is not equal to NO, then it must be invalid          @PFA 17183400
         AIF ('&MASEXIT' NE 'NO').INVALID_MASE                     @PFA 17183600
.*                                                                 @PFA 17183800
.* Set MASEXIT to NO                                               @PFA 17184000
.SET_MASE_NO ANOP                                                  @PFA 17184200
.*                                                                 @PFA 17184400
.* If the ACTION is not LISTEN and not null, goto action error     @PFA 17184600
         AIF ('&ACTION' NE 'LISTEN' AND                                +17184800
               '&ACTION' NE '').MASE_ERROR_ACTION                  @PFA 17185000
.*                                                                 @PFA 17185200
.* Check if SRBEXIT was specified                                  @PFA 17185400
         AIF ('&SRBEXIT' NE '').SRBEXIT_MASE_ERR                   @PFA 17185600
.*                                                                 @PFA 17185800
.* Set MASEXIT to the default value NO                             @PFA 17186000
.SET_MASE_DEF ANOP                                                 @PFA 17186200
&FLG2    SETA    X'00'+&FLG2                                       @PFA 17186400
         AGO     .DONE_MASE                                        @PFA 17186600
.*                                                                 @PFA 17186800
.* Set MASEXIT to YES                                              @PFA 17187000
.SET_MASE_YES ANOP                                                 @PFA 17187200
.* If the ACTION is not LISTEN and not null, goto action error     @PFA 17187400
         AIF ('&ACTION' NE 'LISTEN' AND                                +17187600
               '&ACTION' NE '').MASE_ERROR_ACTION                  @PFA 17187800
.* Check if SRBEXIT was specified                                  @PFA 17188000
         AIF ('&SRBEXIT' NE '').SRBEXIT_MASE_ERR                   @PFA 17188200
.*                                                                 @PFA 17188400
.* Set MASEXIT to YES                                              @PFA 17188600
&FLG2    SETA    X'10'+&FLG2                                       @PFA 17188800
         AGO     .DONE_MASE                                        @PFA 17189000
.*                                                                 @PFA 17189200
.* MASEXIT was coded with ACTION other than listen, so issue error @PFA 17189400
.MASE_ERROR_ACTION ANOP                                            @PFA 17189600
         MNOTE   04,'MASEXIT NOT ALLOWED FOR &ACTION REQUEST'      @PFA 17189800
         AGO     .DONE_MASE                                        @PFA 17190000
.*                                                                 @PFA 17190200
.* MASEXIT value was not valid, so issue error                     @PFA 17190400
.INVALID_MASE ANOP                                                 @PFA 17190600
         MNOTE   08,'INVALID MASEXIT: MASEXIT=&MASEXIT'            @PFA 17190800
         AGO     .DONE_MASE                                        @PFA 17191000
.*                                                                 @PFA 17191200
.* When SRBEXIT is specified, MASEXIT is not allowed               @PFA 17191400
.SRBEXIT_MASE_ERR ANOP                                             @PFA 17191600
         MNOTE   04,'MASEXIT NOT VALID WITH SRBEXIT'               @PFA 17191800
         AGO     .DONE_MASE                                        @PFA 17192000
.*                                                                 @PFA 17192200
.* MASEXIT processing is complete, set done bit so that MASEXIT    @PFA 17192400
.* processing will be skipped under the execute/register form      @PFA 17192600
.DONE_MASE ANOP                                                    @PFA 17192800
&DONEMASE SETB   1                                                 @PFA 17193000
.*                                                                 @PFA 17193200
.END_MASE ANOP                                                     @PFA 17193400
.*-------------------------------------------------------------------*  17200000
.*       PROCESS THE PARM PARAMETER - NORMAL FORM (NOT REGISTER)     *  17250000
.*-------------------------------------------------------------------*  17300000
         AIF     ('&PARM' EQ '').DONEPRM                                17350000
         AIF     ('&ACTION' EQ '' OR '&ACTION' EQ 'SIGNAL' OR          X17383300
               '&ACTION' EQ 'LISTEN').SETPRM0                     @L5C  17416600
         MNOTE   04,'PARM NOT ALLOWED FOR &ACTION REQUEST - IGNORED'    17450000
         AGO     .DONEPRM                                               17500000
.SETPRM0 ANOP                                                           17550000
         AIF     ('&PARM'(1,1) EQ '(').ENDPRM0                          17600000
&PARMS   SETC    '&PARM'               SAVE USER PARM LIST              17650000
.DONEPRM ANOP                                                           17700000
&DONEPRM SETB    1                     NO NEED TO GENERATE CODE         17750000
.ENDPRM0 ANOP                                                           17800000
.*-------------------------------------------------------------------*  17802000
.*       PROCESS THE DISABLE PARAMETER - NORMAL FORM             @L4A*  17804000
.*-------------------------------------------------------------------*  17806000
         AIF     ('&DISABLE' EQ '').ENDDIS0  Don't set flags     @PDC   17808000
         AIF     ('&ACTION' EQ 'LISTEN').CONTDI0 LISTEN CODED    @L4A   17810000
         MNOTE   04,'DISABLE NOT ALLOWED FOR &ACTION REQUEST - IGNORED' 17812000
         AGO     .ENDDIS0                      IGNORE DISABLE    @L4A   17814000
.CONTDI0 AIF     ('&ESTBNME' NE '' AND '&EXITNME' NE '').DISN1   @L4A   17816000
         MNOTE   08,'ESTBNME AND EXITNME REQUIRED WITH DISABLE'  @L4A   17818000
.DISN1   ANOP                                                    @L4A   17820000
         AIF     ('&DISABLE' EQ 'YES').DISY0  DISABLE = YES      @L4A   17822000
         AIF     ('&DISABLE' NE 'NO').BADDIS0 EXPECT DISABLE=NO  @L4A   17824000
.DISN0   ANOP                                                    @L4A   17826000
&FLG     SETA    X'20'+&FLG            DISABLE = NO AND ALLOWED  @L4A   17828000
         AGO     .ENDDIS0                                        @L4A   17830000
.DISDEF  ANOP                                                    @L4A   17832000
         AIF     ('&ACTION' NE 'LISTEN').ENDDIS0 LISTEN CODED    @L4A   17834000
.DISY0   ANOP                                                    @L4A   17836000
&FLG     SETA    X'60'+&FLG            DISABLE = YES AND ALLOWED @L4A   17838000
         AGO     .ENDDIS0                                        @L4A   17840000
.BADDIS0 MNOTE   08,'INVALID DISABLE : DISABLE=&DISABLE IGNORED' @L4A   17842000
         AGO     .DISY0                USE DEFAULT : DISABLE=YES @L4A   17844000
.ENDDIS0 ANOP                                                    @L4A   17846000
&DONEDIS SETB    1                         DISABLE COMPLETED     @L4A   17848000
.*-------------------------------------------------------------------*  17850000
.*       PROCESS THE ESTBNME AND EXITNME PARAMETERS - NORMAL FORM    *  17854100
.*-------------------------------------------------------------------*  17858200
         AIF     ('&ESTBNME' EQ '' AND '&EXITNME' EQ '').ENDE0    @D1A  17862300
         AIF     ('&ESTBNME' NE '' AND '&EXITNME' NE '').SETEE0   @D1A  17866400
         MNOTE   08,'BOTH ESTBNME AND EXITNME MUST BE SPECIFIED'  @D1A  17870500
         AGO     .ENDE0                                           @D1A  17874600
.SETEE0  ANOP                                                     @D1A  17878700
&ESTB    SETC    '&ESTBNME'            SAVE ESTABLISHER NAME      @D1A  17882800
&ENME    SETC    '&EXITNME'            SAVE LISTEN EXIT NAME      @D1A  17886900
.ENDE0   ANOP                                                     @D1A  17891000
.*-------------------------------------------------------------------*  17895100
.*       PROCESS THE QMASK PARAMETER - NORMAL FORM                   *  17900000
.*-------------------------------------------------------------------*  17950000
         AIF     ('&QMASK' EQ '').ENDQMK0 QMASK NOT SPECIFIED           18000000
         AGO     .GETMASK              GET QMASK                        18050000
.INITMSK ANOP                          QMASK SHOULD BE INITIALIZED      18100000
.ENDQMK0 ANOP                                                           18150000
&DONEMSK SETB    1                     QMASK PROCESSING COMPLETED       18200000
.*-------------------------------------------------------------------*  18250000
.*    Process the PARMLEN parameter - normal form (not register)   @L6A 18251200
.*-------------------------------------------------------------------*  18252400
         AIF   ('&PARMLEN' EQ '').DONE_PLEN  PARMLEN not coded     @L6A 18253600
         AIF   (N'&PARMLEN GT 1).PLEN_TOO_MANY_PARMS  >1 parameter @L6A 18254800
.*                                                                      18256000
.* If the action is not SIGNAL or null, issue an MNOTE.            @L6A 18257200
.* (An appropriate error message for null action is issued         @L6A 18258400
.* elsewhere.)                                                     @L6A 18259600
         AIF   ('&ACTION' NE 'SIGNAL' AND                              +18260800
               '&ACTION' NE '').PLEN_ERROR_ACTION  Wrong action    @L6A 18262000
         AIF   ('&PARM' EQ '').PLEN_NO_PARM  Need PARM w/PARMLEN   @L6A 18263200
.* If a relocatable PARMLEN value is provided, get the value       @L6A 18264400
.* later, after the parameter list is defined                      @L6A 18265600
         AIF   ('&PARMLEN'(1,1) EQ '(').END_PLEN  PARMLEN in reg   @L6A 18266800
         AIF   (T'&PARMLEN(1) NE 'N').END_PLEN  Non-numeric value -    +18268400
                                         defer processing          @PEC 18270000
.*                                                                      18271600
&FREELEN SETC  '&PARMLEN(1)'           Remember PARMLEN value      @L6A 18272800
         AGO   .DONE_PLEN                                               18274000
.*                                                                      18275200
.PLEN_NO_PARM  ANOP                    PARMLEN without PARM        @L6A 18276400
         MNOTE 08,'PARM REQUIRED WITH PARMLEN'                     @PCC 18277600
         AGO   .DONE_PLEN                                          @L6A 18278800
.*                                                                      18280000
.PLEN_ERROR_ACTION ANOP                PARMLEN with wrong action   @L6A 18281200
         MNOTE 04,'PARMLEN NOT ALLOWED FOR &ACTION REQUEST - IGNORED'  +18282400
                                                                   @L6A 18283600
         AGO   .DONE_PLEN                                          @L6A 18284800
.*                                                                      18286000
.PLEN_TOO_MANY_PARMS ANOP              Too many parameters         @L6A 18287200
         MNOTE 08,'MORE THAN 1 PARMLEN VALUE - PARMLEN IGNORED'    @L6A 18288400
.*                                                                      18289600
.DONE_PLEN ANOP                                                    @L6A 18290800
&DONEPLEN SETB    1                    Remember done with PARMLEN  @L6A 18292000
.*                                                                      18293200
.END_PLEN ANOP                                                     @L6A 18294400
.*-------------------------------------------------------------------*  18295600
.*       PROCESS THE FREEPRM PARAMETER - NORMAL FORM (SET ENFPFREE)  *  18300000
.*-------------------------------------------------------------------*  18350000
         AIF     ('&FREEPRM' EQ '').ENDFPN                              18400000
         AIF     ('&ACTION' NE 'SIGNAL').BADFPM0                        18450000
         AIF     ('&PARMLEN' NE '').FREEPRM_AND_PARMLEN            @L6A 18475000
         AIF     ('&PARM' NE '').FREEPRO PROCESS FREEPRM AS IN LIST     18500000
.*                                     FORM. RETURN POINT = ENDFRPN     18550000
         MNOTE   08,'PARM REQUIRED WITH FREEPRM'                   @PCC 18570000
         AGO     .ENDFPN                                                18590000
.FREEPRM_AND_PARMLEN  ANOP             Both FREEPRM and PARMLEN    @L6A 18610000
         MNOTE   08,'FREEPRM NOT ALLOWED WITH PARMLEN'             @L6A 18630000
         AGO     .ENDFPN                                                18650000
.BADFPM0 MNOTE   04,'FREEPRM NOT ALLOWED FOR &ACTION REQUEST- IGNORED'  18700000
.ENDFPN  ANOP                                                           18750000
&DONEFRP SETB    1                     ENFPFREE PROCESSING COMPLETED    18800000
.ENDFRPN ANOP                          END OF FREEPRM PROCESSING        18850000
.*-------------------------------------------------------------------*  18850300
.*       Process the XSYS parameter - normal form (set ENFPXSYS)   @L6A 18850600
.*-------------------------------------------------------------------*  18850900
.*                                                                      18851200
.* If XSYS was not coded, it defaults to NO (ENFPXSYS off)         @L6A 18851500
         AIF   ('&XSYS' EQ '').END_XSYS                            @L6A 18851800
.*                                                                      18852100
.* If more than one parameter, issue MNOTE                         @L6A 18852400
         AIF   (N'&XSYS GT 1).XSYS_TOO_MANY_PARMS                  @L6A 18852700
.*                                                                      18853000
.* If the action is not LISTEN, SIGNAL, or null, issue MNOTE.      @L6A 18853300
.* (An appropriate error message for null action is issued         @L6A 18853600
.* elsewhere.)                                                     @L6A 18853900
         AIF   ('&ACTION' NE 'LISTEN' AND                              +18854200
               '&ACTION' NE 'SIGNAL' AND                               +18854500
               '&ACTION' NE '').XSYS_ERROR_ACTION                  @L6A 18854800
.*                                                                      18855100
.* If XSYS is YES, set the flag appropriately.  If it is NO, no    @L6A 18855400
.* action is required.  If it's anything else, issue an MNOTE.     @L6A 18855700
         AIF   ('&XSYS' EQ 'YES').SET_XSYS_YES                     @L6A 18856000
         AIF   ('&XSYS' NE 'NO').INVALID_XSYS                      @L6A 18856300
         AGO   .DONE_XSYS                                          @L6A 18856600
.*                                                                      18856900
.SET_XSYS_YES ANOP                     Set XSYS to yes             @L6A 18857200
&FLG     SETA  X'10'+&FLG                                          @L6A 18857500
         AGO   .DONE_XSYS                                          @L6A 18857800
.*                                                                      18858100
.INVALID_XSYS ANOP                     XSYS value not valid        @L6A 18858400
         MNOTE 08,'INVALID XSYS: XSYS=&XSYS'                       @L6A 18858700
         AGO   .DONE_XSYS                                          @L6A 18859000
.*                                                                      18859300
.XSYS_ERROR_ACTION ANOP                XSYS w/inappropriate action @L6A 18859600
         MNOTE 04,'XSYS NOT ALLOWED FOR &ACTION REQUEST - IGNORED'     +18859900
                                                                   @L6A 18860200
         AGO   .DONE_XSYS                                          @L6A 18860500
.*                                                                      18860800
.XSYS_TOO_MANY_PARMS ANOP              Too many parameters         @L6A 18861100
         MNOTE 08,'MORE THAN 1 XSYS VALUE - XSYS IGNORED'          @L6A 18861400
.*                                                                      18861700
.* XSYS processing is complete.  Set bit so that XSYS processing   @L6A 18862000
.* will be skipped under the execute/register form                 @L6A 18862300
.DONE_XSYS ANOP                                                    @L6A 18862600
&DONEXSYS SETB    1                                                @L6A 18862900
.*                                                                      18863200
.END_XSYS ANOP                                                     @L6A 18863500
.*--------------------------------------------------------------------* 18863800
.*       Process the BITQUAL parameter - normal form               @L6A 18864100
.*                                                                      18864400
.* If BITQUAL is specified as a hex number (X'xxx'), it is placed  @L6A 18864700
.* in the inline parameter list.  If it is specified as anything   @L6A 18865000
.* else, processing is deferred to the section that handles the    @L6A 18865300
.* execute form.                                                   @L6A 18865600
.*--------------------------------------------------------------------* 18865900
         AIF   ('&BITQUAL' EQ '').END_BITQUAL  No BITQUAL          @L6A 18866200
         AIF   (N'&BITQUAL GT 1).BITQUAL_TOO_MANY_PARMS   Too many     +18866500
                                         parameters                @L6A 18866800
.* If the action is DELETE, issue an MNOTE.  (A null action will   @L6A 18867100
.* be flagged as an error elsewhere.)                              @L6A 18867400
         AIF   ('&ACTION' EQ 'DELETE').BITQUAL_ERROR_ACTION        @L6A 18867700
         AIF   ('&BITQUAL'(1,2) NE 'X''' AND                           +18867900
               '&BITQUAL'(1,2) NE 'x''').END_BITQUAL  BITQUAL not      +18868100
                                         hex number                @PAC 18868300
&BQUAL   SETC  '&BITQUAL'(3,K'&BITQUAL-3)  Capture BITQUAL value   @L6A 18868600
         AGO   .DONE_BITQUAL                                       @L6A 18868900
.*                                                                      18869200
.BITQUAL_ERROR_ACTION ANOP             BITQUAL with wrong action   @L6A 18869500
         MNOTE  04,'BITQUAL NOT ALLOWED FOR &ACTION REQUEST - IGNORED' +18869800
                                                                   @L6A 18870100
         AGO    .DONE_BITQUAL                                      @L6A 18870400
.*                                                                      18870700
.BITQUAL_TOO_MANY_PARMS ANOP           Too many parameters         @L6A 18871000
         MNOTE  08,'MORE THAN 1 BITQUAL VALUE - BITQUAL IGNORED'   @L6A 18871300
.*                                                                      18871600
.DONE_BITQUAL ANOP                     BITQUAL processing done     @L6A 18871900
&DONEBQUAL SETB 1                      Done with BITQUAL           @L6A 18872200
.*                                                                      18872500
.END_BITQUAL ANOP                                                       18872800
.*-------------------------------------------------------------------*  18873100
.*  Process the BITCOMPARE parameter - normal form (set ENFPBCMP)  @L6A 18873400
.*-------------------------------------------------------------------*  18873700
.*                                                                      18874000
.* If BITCOMPARE was not coded, it defaults to SUBSET (ENFPBCMP    @L6A 18874300
.* = B'000')                                                       @L6A 18874600
         AIF   ('&BITCOMPARE' EQ '').END_BITCOMPARE                @L6A 18874900
.*                                                                      18875200
         AIF   (N'&BITCOMPARE GT 1).BITCOMPARE_TOO_MANY_PARMS      @L6A 18875500
.*                                                                      18875800
         AIF   ('&ACTION' NE 'LISTEN').BITCOMPARE_ERROR_ACTION     @L6A 18876200
.*                                                                      18876700
         AIF   ('&BITCOMPARE' EQ 'SUBSET').SET_SUBSET              @L6A 18877000
         AIF   ('&BITCOMPARE' EQ 'INTERSECT').SET_INTERSECT        @L6A 18877300
         AIF   ('&BITCOMPARE' EQ 'EQUAL').SET_EQUAL                @L6A 18877600
         MNOTE 08,'INVALID BITCOMPARE: BITCOMPARE=&BITCOMPARE'     @L6A 18877900
         AGO   .DONE_BITCOMPARE                                    @L6A 18878200
.*                                                                      18878500
.SET_SUBSET  ANOP                      Set BITCOMPARE to SUBSET    @L6A 18878800
&FLG2    SETA  B'00000000'+&FLG2                                   @L6A 18879100
         AGO   .DONE_BITCOMPARE                                    @L6A 18879400
.SET_INTERSECT ANOP                    Set BITCOMPARE to INTERSECT @L6A 18879700
&FLG2    SETA  B'00100000'+&FLG2                                   @L6A 18880000
         AGO   .DONE_BITCOMPARE                                    @L6A 18880300
.SET_EQUAL  ANOP                       Set BITCOMPARE to EQUAL     @L6A 18880600
&FLG2    SETA  B'01000000'+&FLG2                                   @L6A 18880900
         AGO   .DONE_BITCOMPARE                                    @L6A 18881200
.*                                                                      18881500
.BITCOMPARE_ERROR_ACTION ANOP          BITCOMPARE w/inappropriate      +18881800
                                         action                    @L6A 18882100
         MNOTE 04,'BITCOMPARE NOT ALLOWED FOR &ACTION REQUEST - IGNORED+18882400
               '                                                   @L6A 18882700
         AGO   .DONE_BITCOMPARE                                    @L6A 18883000
.*                                                                      18883300
.BITCOMPARE_TOO_MANY_PARMS ANOP        Too many parameters         @L6A 18883600
         MNOTE 08,'MORE THAN 1 BITCOMPARE VALUE - BITCOMPARE IGNORED'  +18883900
                                                                   @L6A 18884200
         AGO   .DONE_BITCOMPARE                                    @L6A 18884500
.*                                                                      18884800
.* BITCOMPARE processing is complete. Set bit so that BITCOMPARE   @L6A 18885100
.* processing will be skipped under the execute/register form      @L6A 18885400
.DONE_BITCOMPARE ANOP                                              @L6A 18885700
&DONEBCOMP SETB 1                                                  @L6A 18886000
.*                                                                      18886300
.END_BITCOMPARE ANOP                                               @L6A 18886600
.*--------------------------------------------------------------------* 18886900
.* Check additional parameter combinations for normal form         @L6A 18887200
.*--------------------------------------------------------------------* 18887500
.*--------------------------------------------------------------------* 18887800
.* Ensure FREEPRM or PARMLEN coded for a cross-system signal       @L6A 18888100
.* request with parameters                                         @L6A 18888400
.*--------------------------------------------------------------------* 18888700
         AIF   ('&ACTION' NE 'SIGNAL' OR                               +18889000
               '&PARM' EQ '' OR                                        +18889300
               '&XSYS' NE 'YES').LENGTH_NOT_REQD Length not needed @L6A 18889600
         AIF   ('&FREEPRM' NE '' OR                                    +18889900
               '&PARMLEN' NE '').GOT_LENGTH  Length provided       @L6A 18890200
        MNOTE 08,'FREEPRM OR PARMLEN REQUIRED FOR SIGNAL WHEN XSYS=YES +18890500
               AND PARM SPECIFIED'                                 @PAC 18890800
.LENGTH_NOT_REQD  ANOP                                             @L6A 18891100
.GOT_LENGTH  ANOP                                                  @L6A 18891400
.*--------------------------------------------------------------------* 18891700
.* Ensure PARMLEN coded only for a cross-system signal request     @L6A 18892000
.*--------------------------------------------------------------------* 18892300
         AIF   ('&PARMLEN' EQ '' OR                                    +18892600
               '&ACTION' NE 'SIGNAL').NOXSYSMSG  PARMLEN not coded or  +18892900
                                         incorrect action (already     +18893200
                                         caught)                   @L6A 18893500
         AIF   ('&XSYS' EQ 'YES').NOXSYSMSG   Cross-system signal  @L6A 18893800
         MNOTE 08,'XSYS=YES REQUIRED WITH PARMLEN'                 @PAC 18894100
.NOXSYSMSG  ANOP                                                   @L6A 18894400
.*-------------------------------------------------------------------*  18900000
.*    END PARAMETER LIST PROCESSING (NOT REGISTER) FOR NORMAL FORM   *  18950000
.*                                                                   *  19000000
.*-------------------------------------------------------------------*  19050000
         CNOP    0,4                   ALIGN ON HALFWORD BOUNDARY       19100000
&NAME    BAL     1,&GNAME.A            BRANCH AROUND PARM LIST          19150000
         AGO     .GENLIST              GO GENERATE PARM LIST            19200000
.*********************************************************************  19250000
.*                                                                   *  19300000
.*       MF=L SPECIFIED : BEGIN PARAMETER PROCESSING FOR LIST FORM   *  19350000
.*                                                                   *  19400000
.*********************************************************************  19450000
.LISTFM  ANOP                          BEGIN LIST FORM                  19500000
&LIST    SETB    1                     LIST FORM REQUESTED              19550000
.*-------------------------------------------------------------------*  19600000
.*       PROCESS THE ACTION  PARAMETER - LIST FORM                   *  19650000
.*-------------------------------------------------------------------*  19700000
         AIF     ('&ACTION' EQ '').ENDACTN   ACTION NOT SPECIFIED       19750000
         AIF     ('&ACTION' EQ 'SIGNAL').SIGNAL                         19800000
         AIF     ('&ACTION' EQ 'DELETE').DELETE                         19850000
         AIF     ('&ACTION' EQ 'LISTEN').LISTEN                         19900000
         AIF     ('&ACTION' EQ 'QUERY').QUERY                     @D2A  19925000
         MNOTE   12,'INVALID ACTION : ACTION=&ACTION-MACRO TERMINATED'  19950000
         AGO     .ERREXIT                                               20000000
.SIGNAL  ANOP                                                           20050000
&ACT     SETA    X'01'                 ACTION=SIGNAL (ENFPSIG)          20100000
         AGO     .ENDACTN                                               20150000
.LISTEN  ANOP                                                           20200000
&ACT     SETA    X'02'                 ACTION=LISTEN (ENFPLIS)          20250000
         AGO     .ENDACTN                                               20300000
.DELETE  ANOP                                                           20350000
&ACT     SETA    X'03'                 ACTION=DELETE (ENFPDEL)          20400000
         AGO     .ENDACTN                                         @D2A  20412500
.QUERY   ANOP                          ACTION=QUERY  (ENFPQRY)    @D2A  20425000
&ACT     SETA    X'04'                                            @D2A  20437500
.ENDACTN ANOP                                                           20450000
.*-------------------------------------------------------------------*  20500000
.*       PROCESS THE CODE PARAMETER - LIST FORM                      *  20550000
.*-------------------------------------------------------------------*  20600000
         AIF     ('&CODE' EQ '').CDEEND CODE NOT SPECIFIED              20650000
&CDE     SETC    '&CODE'               SAVE EVENT CODE                  20700000
.CDEEND  ANOP                                                           20750000
.*-------------------------------------------------------------------*  20800000
.*       PROCESS THE DTOKEN PARAMETER - LIST FORM                    *  20850000
.*-------------------------------------------------------------------*  20900000
         AIF     ('&DTOKEN' EQ '').ENDDTOK  DTOKEN NOT SPECIFIED        20950000
         MNOTE   04,'DTOKEN NOT ALLOWED IN LIST FORM - IGNORED'         21000000
.ENDDTOK ANOP                                                           21050000
.*-------------------------------------------------------------------*  21100000
.*       PROCESS THE STOKEN PARAMETER - LIST FORM                    *  21150000
.*-------------------------------------------------------------------*  21200000
         AIF     ('&STOKEN' EQ '').ENDSTOK  STOKEN NOT SPECIFIED        21250000
         AIF     ('&ACTION' NE '' AND '&ACTION' NE 'SIGNAL').BADSTK1    21300000
&TOK     SETC    '&STOKEN'              SAVE STOKEN FOR LATER           21350000
         AGO     .ENDSTOK                                               21400000
.BADSTK1 MNOTE   04,'STOKEN NOT ALLOWED FOR &ACTION REQUEST - IGNORED'  21450000
.ENDSTOK ANOP                                                           21500000
.*-------------------------------------------------------------------*  21550000
.*       PROCESS THE TYPE PARAMETER - LIST FORM                      *  21600000
.*-------------------------------------------------------------------*  21650000
         AIF     ('&TYPE' EQ '').ENDSYN TYPE NOT SPECIFIED              21700000
         AIF     ('&TYPE' EQ 'ASYNC').ASYN   TYPE=ASYNC SPECIFIED       21750000
         AIF     ('&TYPE' NE 'SYNC').BADSYN1 TYPE=SYNC  SPECIFIED       21800000
&FLG     SETA    X'00'+&FLG            SYNCHRONOUS CALLER               21850000
         AGO     .ENDSYN                                                21900000
.ASYN    ANOP                                                           21950000
&FLG     SETA    X'80'+&FLG            ASYNCHRONOUS CALLER(ENFPASN)     22000000
         AGO     .ENDSYN                                                22050000
.BADSYN1 MNOTE   08,'INVALID TYPE : TYPE=&TYPE IGNORED'                 22100000
.ENDSYN  ANOP                                                           22150000
.*-------------------------------------------------------------------*  22200000
.*       PROCESS THE QUAL   PARAMETER  - LIST FORM                   *  22250000
.*-------------------------------------------------------------------*  22300000
         AIF     ('&QUAL' EQ '').ENDQUL  QUALIFIER NOT SPECIFIED        22350000
         AIF     ('&ACTION' EQ 'DELETE').BADQUL1                        22400000
&QUALIF  SETC    '&QUAL'               SAVE QUALIFER FOR LATER          22450000
         AGO     .ENDQUL                                                22500000
.BADQUL1 MNOTE   04,'QUAL NOT ALLOWED FOR DELETE REQUEST - IGNORED'     22550000
.ENDQUL  ANOP                                                           22600000
.*-------------------------------------------------------------------*  22650000
.*       PROCESS THE QMASK PARAMETER - (ALL FORMS)                   *  22700000
.*-------------------------------------------------------------------*  22750000
.GETMASK ANOP                          GENERATE QMASK                   22800000
&ERRMASK SETB    1                     INITIALIZE ERRMASK               22850000
         AIF     ('&QMASK' EQ '').ENDQMSK QMASK NOT SPECIFIED           22900000
         AIF     ('&ACTION' NE 'LISTEN').BADMASK                        22950000
.BEGINSL ANOP                          BEGIN PROCESS SUBLIST            23000000
&N       SETA    N'&QMASK              NUMBER OF ENTRIES                23050000
         AIF     (&N GT &MAXQMSK).BADMSK2 ALLOW UP TO &MAXQMSK VALUES   23100000
&I       SETA    1                                                      23150000
.LOOP    AIF     (&I GT &N).ENDLOOP    ALL ENTRIES PROCESSED            23200000
         AIF     ('&QMASK(&I)' EQ 'ALL').ALL  QMASK=(ALL)               23250000
         AIF     ('&QMASK(&I)' EQ 'NONE').NOQMASK QMASK=(NONE)          23300000
         AIF     (K'&QMASK(&I) NE 5).BADMSK BYTEX EXPECTED              23350000
         AIF     ('&QMASK(&I)'(1,4) NE 'BYTE').BADMSK                   23400000
&INX     SETC    '&QMASK(&I)'(5,1)     EXTRACT LAST DIGIT               23450000
         AIF     (('&INX' LT '1') OR ('&INX' GT '4')).BADMSK            23500000
         AIF     (&QBYTE(&INX) NE 0).DUPMSK                             23550000
&QBYTE(&INX) SETB 1                    SET CORRESPONDING QBYTE          23600000
.NEXT    ANOP                                                           23650000
&I       SETA    &I+1                  INCREMENT COUNTER                23700000
         AGO     .LOOP                 PROCESS ANOTHER ENTRY            23750000
.BADMSK  ANOP                                                           23800000
         MNOTE   08,'INVALID QMASK VALUE : &QMASK(&I) IGNORED'          23850000
         AGO     .NEXT                 SKIP THIS BYTE                   23900000
.DUPMSK  ANOP                                                           23950000
         MNOTE   08,'DUPLICATE QMASK VALUE : &QMASK(&I)'                24000000
         AGO     .NEXT                                                  24050000
.BADMASK ANOP                                                           24100000
         AIF     ('&ACTION' EQ '' AND (NOT &NORMAL)).BEGINSL            24150000
.*                                     MAY SPECIFY IN LIST OR           24200000
.*                                     EXECUTE FORM                     24250000
         MNOTE   04,'QMASK NOT ALLOWED FOR &ACTION REQUEST - IGNORED'   24300000
         AGO     .ENDQMSK              IGNORE THE QMASK                 24350000
.BADMSK2 ANOP                                                           24400000
         MNOTE   08,'MORE THAN &MAXQMSK QMASK VALUES - QMASK IGNORED'   24450000
         AGO     .ENDQMSK                                               24500000
.NOQMASK ANOP                                                           24550000
         AIF     (&N EQ 1).SETNOQM                                      24600000
         MNOTE   08,'EXTRANEOUS QMASK INFO - QMASK=(NONE) ASSUMED'      24650000
.SETNOQM ANOP                                                           24700000
&MSK     SETC    '00000000'            RESET MSK TO ZERO                24750000
         AGO     .RETMSK                                                24800000
.ALL     ANOP                                                           24850000
         AIF     (&N EQ 1).SETALL                                       24900000
         MNOTE   08,'EXTRANEOUS QMASK INFO - QMASK=(ALL) ASSUMED'       24950000
.SETALL  ANOP                                                           25000000
&MSK     SETC    '00001111'            SET MSK TO ALL BYTES             25050000
         AGO     .RETMSK                                                25100000
.ENDLOOP ANOP                                                           25150000
&MSK     SETC    '0000'.'&QBYTE(1)'.'&QBYTE(2)'.'&QBYTE(3)'.'&QBYTE(4)' 25200000
.RETMSK  ANOP                                                           25250000
&ERRMASK SETB    0                     NO ERROR FOUND                   25300000
.ENDQMSK ANOP                                                           25350000
.*                                                                      25400000
         AIF     (&EXECUTE).MVQMASK    RETURN TO EXECUTE FORM           25450000
         AIF     (&NORMAL).INITMSK     RETURN TO NORMAL FORM            25500000
.*-------------------------------------------------------------------*  25550000
.*       Process the EOT parameter - List Form                       *  25600000
.*-------------------------------------------------------------------*  25650000
.*                                                                 @L5A 25652000
.* If EOT is null and action is not LISTEN then we are done        @L5A 25654000
      AIF ('&EOT' EQ '' AND '&ACTION' NE 'LISTEN').END_EOT_MFL     @L5A 25656000
.*                                                                 @L5A 25658000
.* If EOT is null and action is LISTEN then set EOT to default     @L5A 25660000
      AIF ('&EOT' EQ '' AND '&ACTION' EQ 'LISTEN').SET_EOT_DEF_MFL @L5A 25662000
.*                                                                 @L5A 25664000
.* If EOT is yes then set EOT to yes                               @L5A 25666000
      AIF ('&EOT' EQ 'YES').SET_EOT_YES_MFL                        @L5A 25668000
.*                                                                 @L5A 25670000
.* If EOT is not no then it is invalid                             @L5A 25672000
      AIF ('&EOT' NE 'NO').INVALID_EOT_MFL                         @L5A 25674000
.*                                                                 @L5A 25676000
.* Set EOT to no                                                   @L5A 25678000
.SET_EOT_NO_MFL  ANOP                                              @L5A 25680000
.*                                                                 @L5A 25682000
.* If the action is not listen and not null goto action error      @P9C 25683500
         AIF ('&ACTION' NE 'LISTEN' AND                                X25685000
               '&ACTION' NE '').EOT_ERROR_ACTION_MFL               @P9C 25686500
.*                                                                 @L5A 25688000
.* Set the default EOT value                                       @L5A 25690000
.SET_EOT_DEF_MFL  ANOP                                             @L5A 25692000
.*                                                                 @L5A 25694000
.* Set EOT to no                                                   @L5A 25696000
&FLG     SETA    X'00'+&FLG                                        @L5A 25698000
         AGO     .END_EOT_MFL                                      @L5A 25700000
.*                                                                 @L5A 25702000
.* Set EOT to yes                                                  @L5A 25704000
.SET_EOT_YES_MFL  ANOP                                             @L5A 25706000
.*                                                                 @L5A 25708000
.* If the action is not listen and not null goto action error      @P9C 25709500
         AIF ('&ACTION' NE 'LISTEN' AND                                X25711000
               '&ACTION' NE '').EOT_ERROR_ACTION_MFL               @P9C 25712500
.*                                                                 @L5A 25714000
.* Set EOT to yes                                                  @L5A 25716000
&FLG     SETA    X'04'+&FLG                                        @L5A 25718000
         AGO     .END_EOT_MFL                                      @L5A 25720000
.*                                                                 @L5A 25722000
.* EOT was specified with an action other than LISTEN              @L5A 25724000
.EOT_ERROR_ACTION_MFL ANOP                                         @L5A 25726000
.*                                                                 @L5A 25728000
.* Issue error message                                             @L5A 25730000
         MNOTE   04,'EOT NOT ALLOWED FOR &ACTION REQUEST'          @L5A 25732000
         AGO     .END_EOT_MFL                                      @L5A 25734000
.*                                                                 @L5A 25736000
.* The EOT value was not yes or no                                 @L5A 25738000
.INVALID_EOT_MFL ANOP                                              @L5A 25740000
.*                                                                 @L5A 25742000
.* Issue error message                                             @L5A 25744000
         MNOTE   08,'INVALID EOT: EOT=&EOT'                        @L5A 25746000
         AGO     .END_EOT_MFL                                      @L5A 25748000
.END_EOT_MFL ANOP                                                  @L5A 25750000
.*-------------------------------------------------------------------*  25752000
.*       Process the EOM parameter - List Form                       *  25754000
.*-------------------------------------------------------------------*  25756000
.*                                                                 @L5A 25758000
.* If EOM is null and action is not LISTEN or null then done       @P9C 25759500
      AIF ('&EOM' EQ '' AND '&ACTION' NE 'LISTEN' AND                  X25761000
               '&ACTION' NE '').END_EOM_MFL                        @P9C 25762500
.*                                                                 @L5A 25764000
.* If EOM is null and action is LISTEN or null set the default     @P9C 25765500
      AIF ('&EOM' EQ '' AND ('&ACTION' EQ 'LISTEN' OR                  X25767000
               '&ACTION' EQ '')).SET_EOM_DEF_MFL                   @P9C 25768500
.*                                                                 @L5A 25770000
.* If EOM is yes then set EOM to yes                               @L5A 25772000
      AIF ('&EOM' EQ 'YES').SET_EOM_YES_MFL                        @L5A 25774000
.*                                                                 @L5A 25776000
.* If EOM is not no then it is invalid                             @L5A 25778000
      AIF ('&EOM' NE 'NO').INVALID_EOM_MFL                         @L5A 25780000
.*                                                                 @L5A 25782000
.* Set EOM to no                                                   @L5A 25784000
.SET_EOM_NO_MFL  ANOP                                              @L5A 25786000
.*                                                                 @L5A 25788000
.* If the action is not listen and not null goto action error      @P9C 25789500
         AIF ('&ACTION' NE 'LISTEN' AND                                X25791000
               '&ACTION' NE '').EOM_ERROR_ACTION_MFL               @P9C 25792500
.*                                                                 @L5A 25794000
.* Set EOM to the default no value                                 @L5A 25796000
.SET_EOM_DEF_MFL  ANOP                                             @L5A 25798000
.*                                                                 @L5A 25800000
.* If SRBEXIT was coded or EOT=YES then set EOM to yes             @L5A 25802000
         AIF ('&SRBEXIT' NE '' OR '&EOT' EQ 'YES').SET_EOM_YES_MFL @L5A 25804000
.*                                                                 @L5A 25806000
.* Set EOM to no                                                   @L5A 25808000
&FLG     SETA    X'00'+&FLG                                        @L5A 25810000
         AGO     .DONE_EOM_MFL                                     @L5A 25812000
.*                                                                 @L5A 25814000
.* Set EOM to yes                                                  @L5A 25816000
.SET_EOM_YES_MFL  ANOP                                             @L5A 25818000
.*                                                                 @L5A 25820000
.* If the action is not listen and not null goto action error      @P9C 25821500
         AIF ('&ACTION' NE 'LISTEN' AND                                X25823000
               '&ACTION' NE '').EOM_ERROR_ACTION_MFL               @P9C 25824500
.*                                                                 @L5A 25826000
.* Set EOM to yes                                                  @L5A 25828000
&FLG     SETA    X'02'+&FLG                                        @L5A 25830000
         AGO     .DONE_EOM_MFL                                     @L5A 25832000
.*                                                                 @L5A 25834000
.* Issue error message ACTION not valid with EOM                   @L5A 25836000
.EOM_ERROR_ACTION_MFL ANOP                                         @L5A 25838000
         MNOTE   04,'EOM NOT ALLOWED FOR &ACTION REQUEST'          @L5A 25840000
         AGO     .DONE_EOM_MFL                                     @L5A 25842000
.*                                                                 @L5A 25844000
.* Issue error message EOM value is not yes or no                  @L5A 25846000
.INVALID_EOM_MFL ANOP                                              @L5A 25848000
         MNOTE   08,'INVALID EOM : EOM=&EOM'                       @L5A 25850000
         AGO     .END_EOM_MFL                                      @L5A 25852000
.*                                                                 @L5A 25854000
.* Done with EOM processing now check combinations                 @L5A 25856000
.DONE_EOM_MFL ANOP                                                 @L5A 25858000
.*                                                                 @L5A 25860000
.* EOT=YES and EOM=NO is not valid                                 @L5A 25862000
       AIF ('&EOT' EQ 'YES' AND '&EOM' EQ 'NO').EOT_EOM_ERROR_MFL  @P7C 25864000
       AGO     .CHECK_EOM_SRBEXIT_MFL                              @L5A 25866000
.*                                                                 @L5A 25868000
.* Check if SRBEXIT was coded with EOM=YES                         @L5A 25870000
.CHECK_EOM_SRBEXIT_MFL ANOP                                        @L5A 25872000
.*                                                                 @L5A 25874000
.* SRBEXIT and EOM=YES is not valid                                @L5A 25876000
     AIF ('&SRBEXIT' NE '' AND '&EOM' EQ 'NO').SRBEXIT_EOM_ERR_MFL @P7C 25878000
     AGO     .END_EOM_MFL                                          @L5A 25880000
.*                                                                 @L5A 25882000
.* Issue error message                                             @L5A 25884000
.SRBEXIT_EOM_ERR_MFL ANOP                                          @L5A 25886000
         MNOTE   04,'EOM=NO NOT VALID WITH SRBEXIT'                @L5A 25888000
         AGO     .END_EOM_MFL                                      @L5A 25890000
.*                                                                 @L5A 25892000
.* Issue error message                                             @L5A 25894000
.EOT_EOM_ERROR_MFL ANOP                                            @L5A 25896000
         MNOTE   04,'EOM=NO EOT=YES IS NOT A VALID COMBINATION'    @P7C 25898000
         AGO     .END_EOM_MFL                                      @L5A 25900000
.END_EOM_MFL ANOP                                                  @L5A 25902000
.*-------------------------------------------------------------------*  25904000
.*       Process the EXIT and SRBEXIT parameter - List Form          *  25906000
.*-------------------------------------------------------------------*  25908000
.*                                                                 @L5A 25910000
.* If EXIT is null and SRBEXIT is null then we are done            @L5A 25912000
         AIF   ('&EXIT' EQ '' AND '&SRBEXIT' EQ '').END_EXIT_MFL   @L5A 25914000
.*                                                                 @L5A 25916000
.* If EXIT is not null and SRBEXIT is not null then both are coded @L5A 25918000
         AIF   ('&EXIT' NE '' AND '&SRBEXIT' NE '').ERROR_BOTH_MFL @L5A 25920000
.*                                                                 @L5A 25922000
.* If EXIT is not null then process EXIT                           @L5A 25924000
         AIF   ('&EXIT' NE '').PROCESS_EXIT_MFL                    @L5A 25926000
.*                                                                 @L5A 25928000
.* Process SRBEXIT                                                 @L5A 25930000
.PROCESS_SRBEXIT_MFL ANOP                                          @L5A 25932000
.*                                                                 @L5A 25934000
.* If action is not LISTEN then there is an error                  @L5A 25936000
         AIF     ('&ACTION' NE 'LISTEN').BAD_SRBEXIT_MFL           @L5A 25938000
.*                                                                 @L5A 25940000
.* Set the exit address                                            @L5A 25942000
&EXTADR  SETC    '&SRBEXIT'                                        @L5A 25944000
&FLG     SETA    X'01'+&FLG                                        @L5A 25946000
         AGO     .END_EXIT_MFL                                     @L5A 25948000
.PROCESS_EXIT_MFL ANOP                                             @L5A 25950000
.*                                                                 @L5A 25952000
.* If action is DELETE or QUERY then that is an error              @L5A 25954000
         AIF     ('&ACTION' EQ 'DELETE').BAD_EXIT_MFL              @L5A 25956000
         AIF     ('&ACTION' EQ 'QUERY').BAD_EXIT_MFL               @L5A 25958000
.*                                                                 @L5A 25960000
.* Set the exit address                                            @L5A 25962000
&EXTADR  SETC    '&EXIT'                                           @L5A 25964000
         AGO     .END_EXIT_MFL                                     @L5A 25966000
.*                                                                 @L5A 25968000
.* Both EXIT and SRBEXIT were coded issue error                    @L5A 25970000
.ERROR_BOTH_MFL ANOP                                               @L5A 25972000
         MNOTE   08,'EXIT NOT ALLOWED WITH SRBEXIT'                @L6C 25974000
         AGO     .END_EXIT_MFL                                     @L5A 25976000
.*                                                                 @L5A 25978000
.* EXIT was specified with DELETE or QUERY                         @L5A 25980000
.BAD_EXIT_MFL ANOP                                                 @L5A 25982000
         MNOTE   04,'EXIT NOT ALLOWED FOR &ACTION REQUEST'         @L5A 25984000
         AGO     .END_EXIT_MFL                                     @L5A 25986000
.*                                                                 @L5A 25988000
.* SRBEXIT was specified with action different than LISTEN         @L5A 25990000
.BAD_SRBEXIT_MFL ANOP                                              @L5A 25992000
         MNOTE   04,'SRBEXIT NOT ALLOWED FOR &ACTION REQUEST'      @L5A 25994000
         AGO     .END_EXIT_MFL                                     @L5A 25996000
.END_EXIT_MFL ANOP                                                 @L5A 25998000
.*--------------------------------------------------------------------* 25998100
.*       Process the MASEXIT parameter - List Form                @PFA* 25998200
.*--------------------------------------------------------------------* 25998300
.* If MASEXIT was not coded and ACTION was not LISTEN, goto end    @PFA 25998400
         AIF ('&MASEXIT' EQ '' AND                                     +25998500
               '&ACTION' NE 'LISTEN').END_MASE_MFL                 @PFA 25998600
.*                                                                 @PFA 25998700
.* If MASEXIT was not coded and ACTION is LISTEN, use default      @PFA 25998800
         AIF ('&MASEXIT' EQ '' AND                                     +25998900
               '&ACTION' EQ 'LISTEN').SET_MASE_DEF_MFL             @PFA 25999000
.*                                                                 @PFA 25999100
.* If MASEXIT is YES, then goto set it to yes                      @PFA 25999200
         AIF ('&MASEXIT' EQ 'YES').SET_MASE_YES_MFL                @PFA 25999300
.*                                                                 @PFA 25999400
.* If MASEXIT is not equal to NO, then it must be invalid          @PFA 25999500
         AIF ('&MASEXIT' NE 'NO').INVALID_MASE_MFL                 @PFA 25999600
.*                                                                 @PFA 25999700
.* Set MASEXIT to NO                                               @PFA 25999800
.SET_MASE_NO_MFL ANOP                                              @PFA 25999900
.*                                                                 @PFA 26000000
.* If the ACTION is not LISTEN and not null, goto action error     @PFA 26000100
         AIF ('&ACTION' NE 'LISTEN' AND                                +26000200
               '&ACTION' NE '').MASE_ERROR_ACTION_MFL              @PFA 26000300
.*                                                                 @PFA 26000400
.* Check if SRBEXIT was specified                                  @PFA 26000500
         AIF ('&SRBEXIT' NE '').SRBEXIT_MASE_ERR_MFL               @PFA 26000600
.*                                                                 @PFA 26000700
.* Set MASEXIT to the default value NO                             @PFA 26000800
.SET_MASE_DEF_MFL ANOP                                             @PFA 26000900
&FLG2    SETA    X'00'+&FLG2                                       @PFA 26001000
         AGO     .END_MASE_MFL                                     @PFA 26001100
.*                                                                 @PFA 26001200
.* Set MASEXIT to YES                                              @PFA 26001300
.SET_MASE_YES_MFL ANOP                                             @PFA 26001400
.* If the ACTION is not LISTEN and not null, goto action error     @PFA 26001500
         AIF ('&ACTION' NE 'LISTEN' AND                                +26001600
               '&ACTION' NE '').MASE_ERROR_ACTION_MFL              @PFA 26001700
.* Check if SRBEXIT was specified                                  @PFA 26001800
         AIF ('&SRBEXIT' NE '').SRBEXIT_MASE_ERR_MFL               @PFA 26001900
.*                                                                 @PFA 26002000
.* Set MASEXIT to YES                                              @PFA 26002100
&FLG2    SETA    X'10'+&FLG2                                       @PFA 26002200
         AGO     .END_MASE_MFL                                     @PFA 26002300
.*                                                                 @PFA 26002400
.* MASEXIT was coded with ACTION other than listen, so issue error @PFA 26002500
.MASE_ERROR_ACTION_MFL ANOP                                        @PFA 26002600
         MNOTE   04,'MASEXIT NOT ALLOWED FOR &ACTION REQUEST'      @PFA 26002700
         AGO     .END_MASE_MFL                                     @PFA 26002800
.*                                                                 @PFA 26002900
.* MASEXIT value was not valid, so issue error                     @PFA 26003000
.INVALID_MASE_MFL ANOP                                             @PFA 26003100
         MNOTE   08,'INVALID MASEXIT: MASEXIT=&MASEXIT'            @PFA 26003200
         AGO     .END_MASE_MFL                                     @PFA 26003300
.*                                                                 @PFA 26003400
.* When SRBEXIT is specified, MASEXIT is not allowed               @PFA 26003500
.SRBEXIT_MASE_ERR_MFL ANOP                                         @PFA 26003600
         MNOTE   04,'MASEXIT NOT VALID WITH SRBEXIT'               @PFA 26003700
         AGO     .END_MASE_MFL                                     @PFA 26003800
.*                                                                 @PFA 26003900
.END_MASE_MFL ANOP                                                 @PFA 26004000
.*-------------------------------------------------------------------*  26004100
.*    Process the PARMLEN parameter - list form                    @L6A 26004200
.*-------------------------------------------------------------------*  26004300
         AIF   ('&PARMLEN' EQ '').DONE_PLEN_MFL  PARMLEN not coded @L6A 26004400
         AIF   (N'&PARMLEN GT 1).PLEN_TOO_MANY_PARMS_MFL  >1 parm  @L6A 26005600
.*                                                                      26007000
.* If the action is not SIGNAL or null, issue an MNOTE.            @L6A 26008400
.* (A null action is acceptable since it may be specified          @L6A 26009800
.* on the MF=E invocation.)                                        @L6A 26011200
         AIF   ('&ACTION' NE 'SIGNAL' AND                              +26012600
               '&ACTION' NE '').PLEN_ERROR_ACTION_MFL Wrong action @L6A 26014000
         AIF   ('&PARMLEN'(1,1) EQ '(').PLEN_IN_REG  Value in          +26015400
                                         register                  @L6A 26016800
.*                                                                      26018200
&FREELEN SETC  '&PARMLEN(1)'           Remember PARMLEN value      @L6A 26019600
         AGO   .DONE_PLEN_MFL                                      @L6A 26021000
.*                                                                      26022400
.PLEN_IN_REG  MNOTE  08,'PARMLEN IN REGISTER NOT ALLOWED FOR LIST FORM'+26023800
                                                                   @L6A 26025200
         AGO   .DONE_PLEN_MFL                                      @L6A 26026600
.*                                                                      26028000
.PLEN_ERROR_ACTION_MFL ANOP            PARMLEN with wrong action   @L6A 26029400
         MNOTE 04,'PARMLEN NOT ALLOWED FOR &ACTION REQUEST - IGNORED'  +26030800
                                                                   @L6A 26032200
         AGO   .DONE_PLEN_MFL                                      @L6A 26033600
.*                                                                      26035000
.PLEN_TOO_MANY_PARMS_MFL ANOP          Too many parameters         @L6A 26036400
         MNOTE 08,'MORE THAN 1 PARMLEN VALUE - PARMLEN IGNORED'    @L6A 26037800
.*                                                                      26039200
.DONE_PLEN_MFL ANOP                                                @L6A 26040600
&DONEPLEN SETB    1                    Remember done with PARMLEN  @L6A 26042000
.*                                                                      26043400
.END_PLEN_MFL ANOP                                                 @L6A 26044800
.*-------------------------------------------------------------------*  26046200
.*       PROCESS THE FREEPRM PARAMETER - LIST & NORMAL (NO REG) FORM *  26050000
.*-------------------------------------------------------------------*  26100000
         AIF     ('&FREEPRM' EQ '').DONEFRP                             26150000
         AIF     ('&ACTION' NE '' AND '&ACTION' NE 'SIGNAL').BADFPM1    26200000
         AIF     ('&PARMLEN' NE '').FREEPRM_AND_PARMLEN_MFL        @L6A 26225000
.FREEPRO ANOP                                                           26250000
&N       SETA    N'&FREEPRM            NO OF FREEPRM VALUES SPECIFIED   26300000
         AIF     (&N GT &MAXF).BADFRV0      TOO MANY FREEPRM VALUES     26350000
         AIF     (&N GE &MINF).SPPROC       CORRECT NO OF VALUES        26400000
         MNOTE   08,'SUBPOOL AND LENGTH REQUIRED - FREEPRM IGNORED'     26450000
         AGO     .DONEFRP                                               26500000
.BADFRV0 ANOP                                                           26550000
         MNOTE   08,'MORE THAN &MAXF FREEPRM VALUES - FREEPRM IGNORED'  26600000
         AGO     .DONEFRP                                               26612500
.FREEPRM_AND_PARMLEN_MFL ANOP          Both FREEPRM and PARMLEN    @L6A 26625000
         MNOTE   08,'FREEPRM NOT ALLOWED WITH PARMLEN'             @L6A 26637500
         AGO     .DONEFRP                                               26650000
.BADFPM1 MNOTE   04,'FREEPRM NOT ALLOWED FOR &ACTION REQUEST- IGNORED'  26700000
         AGO     .DONEFRP                                               26750000
.*  -------------------------------------------   *                     26800000
.*       SUBPOOL = &FREEPRM(1)                    *                     26850000
.*  -------------------------------------------   *                     26900000
.SPPROC  ANOP                          BEGIN SUBPOOL PROCESSING         26950000
         AIF     ('&FREEPRM(1)' EQ '').MISSP0  MISSING SUBPOOL NUMBER   27000000
         AIF     ('&FREEPRM(1)'(1,1) NE '(').SETFRSP                    27050000
         AIF     (&NORMAL).ENDSP       SUBPOOL VALUE IN REGISTER        27100000
         MNOTE   08,'SUBPOOL IN REGISTER NOT ALLOWED FOR LIST FORM'     27150000
         AGO     .DONEFRP                                               27200000
.MISSP0  ANOP                                                           27250000
         MNOTE   08,'SUBPOOL REQUIRED IN FREEPRM - FREEPRM IGNORED'     27300000
         AGO     .DONEFRP                                               27350000
.SETFRSP ANOP                          SAVE SUBPOOL VALUE               27400000
&FREESP  SETC    '&FREEPRM(1)'                                          27450000
&DONESP  SETB    1                     NO NEED TO GENERATE CODE         27500000
.ENDSP   ANOP                          END OF SUBPOOL PROCESSING        27550000
.*  -------------------------------------------   *                     27600000
.*       LENGTH = &FREEPRM(2)                     *                     27650000
.*  -------------------------------------------   *                     27700000
         AIF     ('&FREEPRM(2)' EQ '').MISLEN0                          27750000
         AIF     ('&FREEPRM(2)'(1,1) NE '(').SETFLEN                    27800000
         AIF     (&NORMAL).ENDFLEN     GENERATE CODE LATER ON           27850000
         MNOTE   08,'LENGTH IN REGISTER NOT ALLOWED FOR LIST FORM'      27900000
         AGO     .DONEFRP                                               27950000
.MISLEN0 ANOP                                                           28000000
         MNOTE   08,'LENGTH REQUIRED IN FREEPRM - FREEPRM IGNORED'      28050000
         AGO     .DONEFRP                                               28100000
.SETFLEN ANOP                          SAVE LENGTH VALUE                28150000
&FREELEN SETC    '&FREEPRM(2)'                                          28200000
&DONELEN SETB    1                     NO NEED TO GENERATE CODE         28250000
.ENDFLEN ANOP                          END OF LENGTH PROCESSING         28300000
.*  -------------------------------------------   *                     28350000
.*       KEY = &FREEPRM(3)                        *                     28400000
.*  -------------------------------------------   *                     28450000
         AIF     (&N NE 3).DEFKEY0     KEY NOT SPECIFIED                28500000
         AIF     ('&FREEPRM(3)' EQ '').DEFKEY0                          28550000
         AIF     ('&FREEPRM(3)'(1,1) NE '(').SETFKEY                    28600000
         AIF     (&NORMAL).ENDFKEY     KEY VALUE IN REGISTER            28650000
         MNOTE   08,'KEY IN REGISTER NOT ALLOWED FOR LIST FORM'         28700000
         AGO     .DONEFRP                                               28750000
.SETFKEY ANOP                                                           28800000
         AIF     (T'&FREEPRM(3) NE 'N').GOODKEY   EQUATED VALUE         28850000
         AIF     (&FREEPRM(3) LE 15).GOODKEY      KEY = 0 TO 15         28900000
         MNOTE   08,'INVALID FREEPRM KEY VALUE - FREEPRM IGNORED'       28950000
&FREELEN SETC    '0'                   RESET LENGTH VALUE TO 0          29000000
&FREESP  SETC    '0'                   RESET SUBPOOL VALUE TO 0         29050000
         AGO     .DONEFRP                                               29100000
.DEFKEY0 ANOP                                                           29150000
&FREEKEY SETC    '0'                   DEFAULT TO KEY 0                 29200000
         AGO     .SETDKEY                                               29250000
.GOODKEY ANOP                                                           29300000
&FREEKEY SETC    '&FREEPRM(3)'         SAVE KEY VALUE FOR EPL           29350000
.SETDKEY ANOP                          KEY IN EPL                       29400000
&DONEKEY SETB    1                     KEY ATTRIBUTE PROCESSED          29450000
.ENDFKEY ANOP                          COMPLETE KEY PROCESSING          29500000
.*  -------------------------------------------   *                     29550000
.*       SET ENFPFREE                             *                     29600000
.*  -------------------------------------------   *                     29650000
&FLG     SETA    &FLG+X'08'            FLAG (ENFPFREE) TO FREEMAIN      29700000
&DONEFFG SETB    1                     ENFPFREE IS SET UP               29750000
.*                                                                      29800000
         AIF     (NOT (&DONEKEY AND &DONESP AND &DONELEN)).ENDFREE      29850000
.DONEFRP ANOP                                                           29900000
&DONEFRP SETB    1                     NO NEED TO GENERATE CODE         29950000
.ENDFREE ANOP                                                           30000000
         AIF     (&NORMAL).ENDFRPN     RETURN TO NORMAL FORM            30050000
.*-------------------------------------------------------------------*  30100000
.*       PROCESS THE PARM PARAMETER - LIST FORM                      *  30150000
.*-------------------------------------------------------------------*  30200000
         AIF     ('&PARM' EQ '').ENDPRM                                 30250000
         AIF     ('&ACTION' NE '' AND '&ACTION' NE 'SIGNAL' AND        X30283300
               '&ACTION' NE 'LISTEN').BADPRM1                     @L5A  30316600
&PARMS   SETC    '&PARM'                                                30350000
         AGO     .ENDPRM                                                30400000
.BADPRM1 MNOTE   04,'PARM NOT ALLOWED FOR &ACTION REQUEST - IGNORED'    30450000
.ENDPRM  ANOP                                                           30500000
.*-------------------------------------------------------------------*  30505500
.*       PROCESS THE ESTBNME AND EXITNME PARAMETERS - LIST FORM      *  30511000
.*-------------------------------------------------------------------*  30516500
         AIF     ('&ESTBNME' EQ '').EST1 ESTBNME NOT SPECIFIED    @D1A  30522000
         MNOTE   08,'ESTBNME NOT ALLOWED FOR LIST FORM'           @D1A  30527500
.EST1    AIF     ('&EXITNME' EQ '').DONEE1 EXITNME NOT SPECIFIED  @D1A  30533000
         MNOTE   08,'EXITNME NOT ALLOWED FOR LIST FORM'           @D1A  30538500
.DONEE1  ANOP                                                     @D1A  30544000
.*-------------------------------------------------------------------*  30544100
.*       PROCESS THE DISABLE PARAMETER - LIST FORM                @L4A  30544200
.*-------------------------------------------------------------------*  30544300
         AIF     ('&DISABLE' EQ '').DONED1 DISABLE NOT SPECIFIED  @L4A  30544400
         MNOTE   08,'DISABLE NOT ALLOWED FOR LIST FORM'           @L4A  30544500
.DONED1  ANOP                                                     @L4A  30544600
.*-------------------------------------------------------------------*  30544800
.*       PROCESS THE LISTENRS PARAMETER - LIST FORM                  *  30545600
.*-------------------------------------------------------------------*  30546400
         AIF     ('&LISTENRS' EQ '').ENDLISL LISTENRS NOT CODED    @L3A 30547200
         MNOTE   04,'LISTENRS NOT ALLOWED FOR LIST FORM - IGNORED' @L3A 30548000
.ENDLISL ANOP                                                      @L3A 30548800
.*-------------------------------------------------------------------*  30549200
.*       Process the XSYS parameter - List Form                    @L6A 30549600
.*-------------------------------------------------------------------*  30550000
.*                                                                      30550400
.* If XSYS was not coded, it defaults to NO (ENFPXSYS off)         @L6A 30550800
         AIF ('&XSYS' EQ '').END_XSYS_MFL                          @L6A 30551200
.*                                                                      30551600
.* If more than one parameter, issue MNOTE                         @L6A 30552000
         AIF (N'&XSYS GT 1).XSYS_TOO_MANY_PARMS_MFL                @L6A 30552400
.*                                                                      30552800
.* If the action is not LISTEN, SIGNAL, or null, issue MNOTE.      @L6A 30553200
.* (A null action is acceptable since it may be specified          @L6A 30553600
.* on the MF=E invocation.)                                        @L6A 30554000
         AIF ('&ACTION' NE 'LISTEN' AND                                +30554400
               '&ACTION' NE 'SIGNAL' AND                               +30554800
               '&ACTION' NE '').XSYS_ERROR_ACTION_MFL              @L6A 30555200
.*                                                                      30555600
.* If XSYS is YES, set the flag appropriately.  If it is NO, no    @L6A 30556000
.* action is required.  If it's anything else, issue an MNOTE.     @L6A 30556400
         AIF ('&XSYS' EQ 'YES').SET_XSYS_YES_MFL                   @L6A 30556800
         AIF ('&XSYS' NE 'NO').INVALID_XSYS_MFL                    @L6A 30557200
         AGO     .END_XSYS_MFL                                     @L6A 30557600
.*                                                                      30558000
.SET_XSYS_YES_MFL ANOP                 Set XSYS to YES             @L6A 30558400
&FLG     SETA    X'10'+&FLG                                        @L6A 30558800
         AGO     .END_XSYS_MFL                                     @L6A 30559200
.*                                                                      30559600
.INVALID_XSYS_MFL ANOP                 XSYS value not valid        @L6A 30560000
         MNOTE   08,'INVALID XSYS: XSYS=&XSYS'                     @L6A 30560400
         AGO     .END_XSYS_MFL                                     @L6A 30560800
.*                                                                      30561200
.XSYS_ERROR_ACTION_MFL ANOP            XSYS w/inappropriate action @L6A 30561600
         MNOTE   04,'XSYS NOT ALLOWED FOR &ACTION REQUEST - IGNORED'   +30562000
                                                                   @L6A 30562400
         AGO     .END_XSYS_MFL                                     @L6A 30562800
.*                                                                      30563200
.XSYS_TOO_MANY_PARMS_MFL ANOP          Too many parameters         @L6A 30563600
         MNOTE   08,'MORE THAN 1 XSYS VALUE - XSYS IGNORED'        @L6A 30564000
.*                                                                      30564400
.END_XSYS_MFL ANOP                                                 @L6A 30564800
.*--------------------------------------------------------------------* 30565200
.*       PROCESS THE BITQUAL PARAMETER  - LIST FORM                @L6A 30565600
.*                                                                      30566000
.* If BITQUAL is specified on the list form, it must be a hex      @L6A 30566400
.* literal value.  Equates cannot be accepted, because there is    @L6A 30566800
.* no way to specify 32-byte absolute values in a format that can  @L6A 30567200
.* be placed in an in-line parameter list.                         @L6A 30567600
.*--------------------------------------------------------------------* 30568000
         AIF   ('&BITQUAL' EQ '').END_BITQUAL_MFL  No BITQUAL      @L6A 30568400
         AIF   (N'&BITQUAL GT 1).BITQUAL_TOO_MANY_PARMS_MFL   Too      +30568800
                                         many parameters           @L6A 30569200
.* If the action is DELETE, issue an MNOTE.  (A null action is     @L6A 30569600
.* acceptable since it may be specified on the MF=E invocation.)   @L6A 30570000
         AIF   ('&ACTION' EQ 'DELETE').BITQUAL_ERROR_ACTION_MFL    @L6A 30570400
         AIF   ('&BITQUAL'(1,2) NE 'X''' AND                           +30570600
               '&BITQUAL'(1,2) NE 'x''').BITQUAL_NOT_HEX_MFL       @PAC 30570800
&BQUAL   SETC  '&BITQUAL'(3,K'&BITQUAL-3)  Capture BITQUAL value   @L6A 30571200
         AGO   .END_BITQUAL_MFL                                    @L6A 30571600
.*                                                                      30572000
.BITQUAL_NOT_HEX_MFL  ANOP             Invalid BITQUAL value       @L6A 30572400
         MNOTE 08,'BITQUAL MUST BE A HEX NUMERIC VALUE'            @L6A 30572800
         AGO   .END_BITQUAL_MFL                                    @L6A 30573200
.*                                                                      30573600
.BITQUAL_ERROR_ACTION_MFL ANOP         BITQUAL with wrong action   @L6A 30574000
         MNOTE  04,'BITQUAL NOT ALLOWED FOR &ACTION REQUEST - IGNORED' +30574400
                                                                   @L6A 30574800
         AGO    .END_BITQUAL_MFL                                   @L6A 30575200
.*                                                                      30575600
.BITQUAL_TOO_MANY_PARMS_MFL ANOP       Too many parameters         @L6A 30576000
         MNOTE  08,'MORE THAN 1 BITQUAL VALUE - BITQUAL IGNORED'   @L6A 30576400
.*                                                                      30576800
.END_BITQUAL_MFL ANOP                                              @L6A 30577200
.*--------------------------------------------------------------------* 30577600
.*  Process the BITCOMPARE parameter - list form (set ENFPBCMP)    @L6A 30578000
.*--------------------------------------------------------------------* 30578400
.*                                                                      30578800
.* If BITCOMPARE was not coded, it defaults to SUBSET (ENFPBCMP    @L6A 30579200
.* = B'000')                                                       @L6A 30579600
         AIF   ('&BITCOMPARE' EQ '').END_BITCOMPARE_MFL            @L6A 30580000
.*                                                                      30580400
         AIF   (N'&BITCOMPARE GT 1).BITCOMPARE_TOO_MANY_PARMS_MFL  @L6A 30580800
.*                                                                      30581200
.* If the action is anything but LISTEN or not specified, issue an @L6A 30581300
.* MNOTE.  (A null action is acceptable since it may be specified  @L6A 30581400
.* on the MF=E invocation.)                                        @L6A 30581500
         AIF   ('&ACTION' NE 'LISTEN' AND                              +30581600
               '&ACTION' NE '').BITCOMPARE_ERROR_ACTION_MFL        @L6A 30582000
.*                                                                      30582400
         AIF   ('&BITCOMPARE' EQ 'SUBSET').SET_SUBSET_MFL          @L6A 30582800
         AIF   ('&BITCOMPARE' EQ 'INTERSECT').SET_INTERSECT_MFL    @L6A 30583200
         AIF   ('&BITCOMPARE' EQ 'EQUAL').SET_EQUAL_MFL            @L6A 30583600
         MNOTE 08,'INVALID BITCOMPARE: BITCOMPARE=&BITCOMPARE'     @L6A 30584000
         AGO   .END_BITCOMPARE_MFL                                 @L6A 30584400
.*                                                                      30584800
.SET_SUBSET_MFL ANOP                   Set BITCOMPARE to SUBSET    @L6A 30585200
&FLG2    SETA  B'00000000'+&FLG2                                   @L6A 30585600
         AGO   .END_BITCOMPARE_MFL                                 @L6A 30586000
.SET_INTERSECT_MFL ANOP                Set BITCOMPARE to INTERSECT @L6A 30586400
&FLG2    SETA  B'00100000'+&FLG2                                   @L6A 30586800
         AGO   .END_BITCOMPARE_MFL                                 @L6A 30587200
.SET_EQUAL_MFL ANOP                    Set BITCOMPARE to EQUAL     @L6A 30587600
&FLG2    SETA  B'01000000'+&FLG2                                   @L6A 30588000
         AGO   .END_BITCOMPARE_MFL                                 @L6A 30588400
.*                                                                      30588800
.BITCOMPARE_ERROR_ACTION_MFL ANOP      BITCOMPARE w/inappropriate      +30589200
                                         action                    @L6A 30589600
         MNOTE 04,'BITCOMPARE NOT ALLOWED FOR &ACTION REQUEST - IGNORED+30590000
               '                                                   @L6A 30590400
         AGO   .END_BITCOMPARE_MFL                                 @L6A 30590800
.*                                                                      30591200
.BITCOMPARE_TOO_MANY_PARMS_MFL ANOP    Too many parameters         @L6A 30591600
         MNOTE 08,'MORE THAN 1 BITCOMPARE VALUE - BITCOMPARE IGNORED'  +30592000
                                                                   @L6A 30592400
.*                                                                      30592800
.END_BITCOMPARE_MFL ANOP                                           @L6A 30593200
.*********************************************************************  30593600
.*                                                                   *  30600000
.*       GENERATE PARAMETER LIST                                     *  30650000
.*                                                                   *  30700000
.*********************************************************************  30750000
.GENLIST ANOP                                                           30800000
         AIF     (&STOPLOP).ENFBUG * DEBUG : BUG IN ENF                 30850000
&STOPLOP SETB    1                 * DEBUG : SHOULD DO THIS ONLY ONCE   30900000
         AIF     (&NORMAL).EPLIST                                       30950000
&NAME    DS      0F                    START OF ENF PARAMETER LIST      31000000
.EPLIST  ANOP                          EVENT PARAMETER LIST             31050000
         DC      AL2(&LEN)             LENGTH OF ENF PARAMETER LIST     31100000
         DC      AL2(&ACT)             REQUESTED ENF ACTION             31150000
         DC      AL4(&CDE)             EVENT CODE                       31200000
         DC      AL1(&FLG)             FLAG FIELD                       31250000
         DC      AL1(B'&MSK')          MASK FOR COMPARING QUALIFIERS    31300000
         DC      AL1(&FREEKEY*16)      KEY FOR FREEPRM                  31350000
         DC      AL1(&FREESP)          SUBPOOL FOR FREEPRM              31400000
         DC      AL4(&QUALIF)          QUALIFIER                        31450000
         DC      AL4(&EXTADR)          EXIT ROUTINE ADDRESS             31500000
         DC      AL4(&PARMS)           Address of caller's parameters   31550000
         DC      AL4(&TOK)             TOKEN                            31600000
         DC      AL4(&FREELEN)         Length of caller's parameters    31629100
         DC      AL2(&VERS)            VERSION OF PARM LIST       @D1A  31658300
         DC      AL2(&RESV)            RESERVED FIELD             @D1A  31666600
         DC      AL4(&RTAD)            RETURN ADDRESS             @D1A  31674900
         DC      CL8'        '         ESTABLISHER NAME           @D1A  31683200
         DC      CL8'        '         LISTEN EXIT NAME           @D1A  31691500
         DC      AL4(&LISTR)           LISTENER NUMBER (RETURNED) @L3A  31695700
         DC      CL4'    '             SPECIAL EXIT RETURN CODE   @P5A  31697800
         AIF     (&VERS LT 3).ENDV1                               @PAA  31698000
         DC      XL32'&BQUAL'          Bit-mapped qualifier       @L6A  31698300
         DC      AL1(&FLG2)            Flag byte                  @L6A  31698800
         DC      XL7'00'               Reserved                   @L6A  31699300
.ENDV1   ANOP                                                     @PAA  31699600
         AIF     (&LIST).NORMEND       LIST FORM PROCESSING COMPLETED   31700000
&GNAME.A DS      0H                    END OF ENF PARAMETER LIST        31750000
         AGO     .PARMCHK              CHECK THE OTHER PARAMETERS       31800000
.*                                     FOR NORMAL FORM                  31850000
.*********************************************************************  31900000
.*                                                                   *  31950000
.*       MF = (E,PARMLIST) SPECIFIED : PARAMETER PROCESSING FOR      *  32000000
.*                                     EXECUTE FORM                  *  32050000
.*                                                                   *  32100000
.*********************************************************************  32150000
.EXECFM  ANOP                          BEGIN EXECUTE FORM               32200000
&EXECUTE SETB    1                     EXECUTE FORM REQUESTED           32250000
         AIF     ('&NAME' EQ '').SKIPLB NO LABEL SPECIFIED              32300000
&NAME    DS      0H                                                     32350000
.SKIPLB  ANOP                                                           32400000
         AIF     ('&MF(2)' EQ '(1)').ENDLDPM    ADDR IN REG 1           32450000
         AIF     ('&MF(2)'(1,1) EQ '(').LOADREG ADDR IN REGISTER        32500000
         AIF     (T'&MF(2) EQ 'N').BADMF1                               32550000
         LA      1,&MF(2)              LOAD ADDR OF PARM LIST           32600000
         AGO     .ENDLDPM                                               32650000
.LOADREG ANOP                                                           32700000
&REGC    SETC    '&MF(2)'(2,K'&MF(2)-2) EXTRACT REG FROM SUBLIST        32750000
         LR      1,&REGC               MOVE ADDR INTO REG 1             32800000
.ENDLDPM ANOP                          PARM ADDR NOW IN REG 1           32850000
.********************************************************************** 32900000
.*                                                                    * 32950000
.*       CODE GENERATION FOR EXECUTE FORM OR NORMAL FORM (WHEN        * 33000000
.*       PARAMETERS ARE SPECIFIED IN REGISTERS, AND FOR STOKEN,       * 33050000
.*       DTOKEN, QUAL, BITQUAL, AND FREEPRM PARAMETER PROCESSING) @L6C* 33100000
.*                                                                    * 33150000
.********************************************************************** 33200000
.PARMCHK ANOP                                                           33250000
.*-------------------------------------------------------------------*  33300000
.*       PROCESS THE ACTION PARAMETER - EXECUTE FORM                 *  33350000
.*-------------------------------------------------------------------*  33400000
         AIF     (&DONEACT).ENDACT     ACTION IN PARM LIST ALREADY      33450000
         AIF     ('&ACTION' EQ '').ENDACT        ACTION NOT SPECIFIED   33500000
         AIF     ('&ACTION' EQ 'SIGNAL').SIGACT  ACTION=SIGNAL          33550000
         AIF     ('&ACTION' EQ 'DELETE').DELACT  ACTION=DELETE          33600000
         AIF     ('&ACTION' EQ 'LISTEN').LISACT  ACTION=LISTEN          33650000
         AIF     ('&ACTION' EQ 'QUERY').QRYACT   ACTION=QUERY     @D2A  33675000
         MNOTE   12,'INVALID ACTION : ACTION=&ACTION-MACRO TERMINATED'  33700000
         AGO     .ERREXIT                                               33750000
.LISACT  ANOP                                                           33800000
         MVI     ENFPACT2,ENFPLIS      SET ACTION CODE TO LISTEN        33850000
         AGO     .ENDACT                                                33900000
.SIGACT  ANOP                                                           33950000
         MVI     ENFPACT2,ENFPSIG      SET ACTION CODE TO SIGNAL        34000000
         AGO     .ENDACT                                                34050000
.QRYACT  ANOP                                                     @D2A  34062500
         MVI     ENFPACT2,ENFPQRY      SET ACTION CODE TO QUERY   @D2A  34075000
         AGO     .ENDACT                                          @D2A  34087500
.DELACT  ANOP                                                           34100000
         MVI     ENFPACT2,ENFPDEL      SET ACTION CODE TO DELETE        34150000
.ENDACT  ANOP                                                           34200000
.*-------------------------------------------------------------------*  34250000
.*       PROCESS THE CODE PARAMETER - NORMAL(REG) OR EXECUTE FORM    *  34300000
.*-------------------------------------------------------------------*  34350000
         AIF     (&DONECDE).ENDCODE    ALREADY DONE EARLIER             34400000
         AIF     ('&CODE' EQ '').ENDCODE                                34450000
         AIF     ('&CODE'(1,1) EQ '(').SETCDER  CODE IN REGISTER        34500000
         LA      14,&CODE              EVENT CODE INTO REG 14           34550000
         ST      14,ENFPCODE           STORE INTO ENF PARM LIST         34600000
         AGO     .ENDCODE                                               34650000
.LDADR   ANOP                                                           34700000
&REGC    SETC    '&CODE'(3,K'&CODE-4)  EXTRACT REGISTER NUMBER          34750000
         MVC     ENFPCODE,0(&REGC)     MOVE EVENT CODE FROM REG         34800000
         AGO     .ENDCODE                                               34850000
.SETCDER ANOP                                                           34900000
         AIF     ('&CODE'(1,2) EQ '((').LDADR  ADDR OF CODE IN REG      34950000
&REGC    SETC    '&CODE(1)'            SAVE REGISTER NUMBER             35000000
         ST      &REGC,ENFPCODE        MOVE EVENT CODE FROM REG         35050000
.ENDCODE ANOP                                                           35100000
.*-------------------------------------------------------------------*  35150000
.*       PROCESS THE DTOKEN PARAMETER - NORMAL OR EXECUTE FORM       *  35200000
.*-------------------------------------------------------------------*  35250000
         AIF     ('&DTOKEN' NE '').DTOKN DTOKEN IS SPECIFIED            35300000
         AIF     (&EXECUTE).ENDDTKN    DTOKEN SPECIFIED IN LIST FORM    35350000
         AIF     ('&ACTION' NE 'DELETE').ENDDTKN                        35400000
         MNOTE   08,'DTOKEN REQUIRED FOR DELETE REQUEST'                35450000
         AGO     .ENDDTKN                                               35500000
.DTOKN   ANOP                                                           35550000
         AIF     ('&ACTION' EQ '').MISACTD ACTION NOT SPECIFIED    @P2A 35600000
         AIF     ('&ACTION' EQ 'SIGNAL').BADDTK2                        35650000
         AIF     ('&ACTION' EQ 'QUERY').BADDTK2                    @D2A 35675000
         AIF     ('&ACTION' EQ 'LISTEN').ENDDTKN RESTORE DTOKEN AFTER   35700000
.*                                               RETURN FROM ENF        35750000
         AIF     ('&DTOKEN'(1,1) EQ '(').SETTKNR DTOKEN IN REG          35800000
         MVC     ENFPTOK,&DTOKEN       DTOKEN                           35850000
         AGO     .ENDDTKN                                               35900000
.BADDTK2 MNOTE   04,'DTOKEN NOT ALLOWED FOR &ACTION REQUEST - IGNORED'  35933300
.*                                                                 @D2C 35966600
         AGO     .ENDDTKN                                               36000000
.MISACTD MNOTE   08,'ACTION REQUIRED WITH DTOKEN - DTOKEN IGNORED' @P2A 36050000
         AGO     .ENDDTKN                                          @P2A 36100000
.SETTKNR ANOP                                                           36150000
&REGC    SETC    '&DTOKEN(1)'          EXTRACT REGISTER NUMBER          36200000
         ST      &REGC,ENFPTOK         MOVE DTOKEN FROM REG             36250000
.ENDDTKN ANOP                                                           36300000
.*-------------------------------------------------------------------*  36350000
.*       PROCESS THE STOKEN PARAMETER - NORMAL OR EXECUTE FORM       *  36400000
.*-------------------------------------------------------------------*  36450000
         AIF     ('&STOKEN' EQ '').ENDSTKN                              36500000
         AIF     ('&ACTION' NE '' AND '&ACTION' NE 'SIGNAL').BADSTK2    36550000
         AIF     ('&STOKEN'(1,1) EQ '(').STOKR                          36600000
         MVC     ENFPTOK,&STOKEN       STOKEN                           36650000
         AGO     .ENDSTKN                                               36700000
.BADSTK2 ANOP                                                           36750000
         MNOTE   04,'STOKEN NOT ALLOWED FOR &ACTION REQUEST - IGNORED'  36800000
         AGO     .ENDSTKN                                               36850000
.STOKR   ANOP                                                           36900000
&REGC    SETC    '&STOKEN(1)'          EXTRACT REG NUMBER               36950000
         ST      &REGC,ENFPTOK         STORE STOKEN FROM REG            37000000
.ENDSTKN ANOP                                                           37050000
.*-------------------------------------------------------------------*  37100000
.*       PROCESS THE TYPE PARAMETER - EXECUTE FORM                   *  37150000
.*-------------------------------------------------------------------*  37200000
         AIF     (&DONETYP).ENDSYNC   TYPE IN PARM LIST ALREADY         37250000
         AIF     ('&TYPE' EQ '').ENDSYNC      TYPE NOT SPECIFIED        37300000
         AIF     ('&TYPE' EQ 'ASYNC').ASYNC   TYPE=ASYNC                37350000
         AIF     ('&TYPE' NE 'SYNC').BADSYN2  EXPECT TYPE=SYNC          37400000
         NI      ENFPFLG,255-ENFPASN   SYNCHRONOUS CALLER               37450000
         AGO     .ENDSYNC                                               37500000
.ASYNC   OI      ENFPFLG,ENFPASN       ASYNCHRONOUS CALLER              37550000
         AGO     .ENDSYNC                                               37600000
.BADSYN2 MNOTE   08,'INVALID TYPE : TYPE=&TYPE IGNORED'                 37650000
.ENDSYNC ANOP                                                           37700000
.*-------------------------------------------------------------------*  37750000
.*       PROCESS THE QUAL PARAMETER -  NORMAL OR EXECUTE FORM        *  37800000
.*-------------------------------------------------------------------*  37850000
         AIF     ('&QUAL' EQ '').ENDQUAL                                37900000
         AIF     ('&ACTION' EQ 'DELETE').BADQUL2                        37950000
         AIF     ('&QUAL'(1,1) EQ '(').SETQULR  QUALIFIER IN REG        38000000
         MVC     ENFPQUAL,&QUAL        QUALIFIER                        38050000
         AGO     .ENDQUAL                                               38100000
.SETQULR ANOP                                                           38150000
&REGC    SETC    '&QUAL(1)'            GET REGISTER NUMBER              38200000
         ST      &REGC,ENFPQUAL        MOVE QUALIFIER FROM REG          38250000
         AGO     .ENDQUAL                                               38300000
.BADQUL2 MNOTE   04,'QUAL NOT ALLOWED FOR DELETE REQUEST - IGNORED'     38350000
.ENDQUAL ANOP                                                           38400000
.*-------------------------------------------------------------------*  38450000
.*       PROCESS THE QMASK PARAMETER - EXECUTE FORM                  *  38500000
.*-------------------------------------------------------------------*  38550000
         AIF     (&DONEMSK).ENDQMK     ALREADY PUT IN PARM LIST         38600000
         AIF     ('&QMASK' EQ '').ENDQMK  QMASK NOT SPECIFIED           38650000
         AGO     .GETMASK              GET QMASK                        38700000
.MVQMASK ANOP                                                           38750000
         AIF     (&ERRMASK).ENDQMK     ERROR : DONT GENERATE CODE       38800000
         MVI     ENFPQMSK,B'&MSK'      SET UP QMASK                     38850000
.ENDQMK  ANOP                                                           38900000
.*-------------------------------------------------------------------*  38950000
.*       Process the EOT parameter - Execute Form                    *  39000000
.*-------------------------------------------------------------------*  39050000
.*                                                                 @L5A 39053300
.* If EOT was already processed on the normal form or              @L5A 39059900
.*    EOT was not coded then done                                  @P9A 39066500
      AIF (&DONEOT OR '&EOT' EQ '').END_EOT_MFE                    @P9A 39073100
.*                                                                 @P9D 39079700
.* If EOT is yes then goto set EOT to yes                          @L5A 39086300
      AIF ('&EOT' EQ 'YES').SET_EOT_YES_MFE                        @L5A 39089600
.*                                                                 @L5A 39092900
.* If EOT is not no then it is invalid                             @L5A 39096200
      AIF ('&EOT' NE 'NO').INVALID_EOT_MFE                         @L5A 39099500
.*                                                                 @L5A 39102800
.* Set EOT to no                                                   @L5A 39106100
.SET_EOT_NO_MFE  ANOP                                              @L5A 39109400
.*                                                                 @L5A 39112700
.* If the action is not listen and not null goto action error      @P9C 39116400
         AIF ('&ACTION' NE 'LISTEN' AND                                X39120100
               '&ACTION' NE '').EOT_ERROR_ACTION_MFE               @P9C 39123800
.*                                                                 @P9D 39127500
.* Set EOT to no                                                   @L5A 39135800
         NI      ENFPFLG,255-ENFPEOT   Set EOT to no               @P7C 39139100
         AGO     .END_EOT_MFE                                      @L5A 39142400
.*                                                                 @L5A 39145700
.* Set EOT to yes                                                  @L5A 39149000
.SET_EOT_YES_MFE  ANOP                                             @L5A 39152300
.*                                                                 @L5A 39155600
.* If the action is not listen and not null goto action error      @P9C 39158000
         AIF ('&ACTION' NE 'LISTEN' AND                                X39160400
               '&ACTION' NE '').EOT_ERROR_ACTION_MFE               @P9C 39162800
.*                                                                 @L5A 39165500
.* Set EOT to yes                                                  @L5A 39168800
         OI      ENFPFLG,ENFPEOT       Set EOT to yes              @P7C 39172100
         AGO     .END_EOT_MFE                                      @L5A 39175400
.*                                                                 @L5A 39178700
.* EOT was specified with an action other than listen              @L5A 39182000
.EOT_ERROR_ACTION_MFE ANOP                                         @L5A 39185300
         MNOTE   04,'EOT NOT ALLOWED FOR &ACTION REQUEST'          @L5A 39188600
         AGO     .END_EOT_MFE                                      @L5A 39191900
.*                                                                 @L5A 39195200
.* EOT value was not yes or no                                     @L5A 39198500
.INVALID_EOT_MFE ANOP                                              @L5A 39201800
         MNOTE   08,'INVALID EOT: EOT=&EOT'                        @L5A 39205100
         AGO     .END_EOT_MFE                                      @L5A 39208400
.END_EOT_MFE ANOP                                                  @L5A 39211700
.*-------------------------------------------------------------------*  39215000
.*       Process the EOM parameter - Execute Form                    *  39218300
.*-------------------------------------------------------------------*  39221600
.*                                                                 @L5A 39224900
.* If EOM was already processed on the normal form then done       @L5A 39228200
      AIF (&DONEOM).END_EOM_MFE                                    @L5A 39231500
.*                                                                 @L5A 39234800
.* If EOM is null and action is not listen and action is no null   @P9C 39237200
      AIF ('&EOM' EQ '' AND '&ACTION' NE 'LISTEN' AND                  X39239600
               '&ACTION' NE '').END_EOM_MFE                        @P9C 39242000
.*                                                                 @L5A 39244700
.* If EOM is null and the action is listen or null set default     @P9C 39247100
      AIF ('&EOM' EQ '' AND ('&ACTION' EQ 'LISTEN' OR                  X39249500
               '&ACTION' EQ '')).SET_EOM_DEF_MFE                   @P9C 39251900
.*                                                                 @L5A 39254600
.* If EOM is yes then set EOM to yes                               @L5A 39257900
      AIF ('&EOM' EQ 'YES').SET_EOM_YES_MFE                        @L5A 39261200
.*                                                                 @L5A 39264500
.* If EOM is not no then it is invalid                             @L5A 39267800
      AIF ('&EOM' NE 'NO').INVALID_EOM_MFE                         @L5A 39271100
.*                                                                 @L5A 39274400
.* Set EOM to no                                                   @L5A 39277700
.SET_EOM_NO_MFE  ANOP                                              @L5A 39281000
.*                                                                 @L5A 39284300
.* If the action is not listen and not null goto action error      @P9C 39286700
         AIF ('&ACTION' NE 'LISTEN' AND                                X39289100
               '&ACTION' NE '').EOM_ERROR_ACTION_MFE               @P9C 39291500
.*                                                                 @L5A 39294200
.* Set the default EOM value                                       @L5A 39297500
.SET_EOM_DEF_MFE  ANOP                                             @L5A 39300800
.*                                                                 @L5A 39304100
.* If SRBEXIT was coded or EOT=YES was coded EOM defaults to yes   @L5A 39307400
         AIF ('&SRBEXIT' NE '' OR '&EOT' EQ 'YES').SET_EOM_YES_MFE @L5A 39310700
.* If EOM is null then don't set the default                       @P9A 39311800
         AIF ('&EOM' EQ '').DONE_EOM_MFE                           @P9A 39312900
.*                                                                 @L5A 39314000
.* Set EOM to no                                                   @L5A 39317300
         NI      ENFPFLG,255-ENFPEOM   Set EOM to no               @P7C 39320600
         AGO     .DONE_EOM_MFE                                     @L5A 39323900
.*                                                                 @L5A 39327200
.* Set EOM to yes                                                  @L5A 39330500
.SET_EOM_YES_MFE  ANOP                                             @L5A 39333800
.*                                                                 @L5A 39337100
.* If the action is not listen and not null goto action error      @P9C 39339500
         AIF ('&ACTION' NE 'LISTEN' AND                                X39341900
               '&ACTION' NE '').EOM_ERROR_ACTION_MFE               @P9C 39344300
.*                                                                 @L5A 39347000
.* Set EOM to yes                                                  @L5A 39350300
         OI      ENFPFLG,ENFPEOM       Set EOM to yes              @P7C 39353600
         AGO     .DONE_EOM_MFE                                     @L5A 39356900
.*                                                                 @L5A 39360200
.* The action specified with EOM is not allowed                    @L5A 39363500
.EOM_ERROR_ACTION_MFE ANOP                                         @L5A 39366800
         MNOTE   04,'EOM NOT ALLOWED FOR &ACTION REQUEST'          @L5A 39370100
         AGO     .END_EOM_MFE                                      @L5A 39373400
.*                                                                 @L5A 39376700
.* The EOM value was not yes or no                                 @L5A 39380000
.INVALID_EOM_MFE ANOP                                              @L5A 39383300
         MNOTE   08,'INVALID EOM : EOM=&EOM'                       @L5A 39386600
         AGO     .DONE_EOM_MFE                                     @L5A 39389900
.*                                                                 @L5A 39393200
.* EOM processing is done                                          @L5A 39396500
.DONE_EOM_MFE ANOP                                                 @L5A 39399800
.*                                                                 @L5A 39403100
.* Check the EOM, EOT and SRBEXIT combinations                     @L5A 39406400
.*                                                                 @L5A 39409700
.* EOT=YES and EOM=NO is not valid                                 @L5A 39413000
      AIF ('&EOT' EQ 'YES' AND '&EOM' EQ 'NO').EOT_EOM_ERROR_MFE   @L5A 39416300
      AGO     .CHECK_EOM_SRBEXIT_MFE                               @L5A 39419600
.CHECK_EOM_SRBEXIT_MFE ANOP                                        @L5A 39422900
.*                                                                 @L5A 39426200
.* EOM=NO is not allowed with SRBEXIT                              @L5A 39429500
     AIF ('&SRBEXIT' NE '' AND '&EOM' EQ 'NO').SRBEXIT_EOM_ERR_MFE @L5A 39432800
     AGO     .END_EOM_MFE                                          @L5A 39436100
.*                                                                 @L5A 39439400
.* Issue error message                                             @L5A 39442700
.SRBEXIT_EOM_ERR_MFE ANOP                                          @L5A 39446000
         MNOTE   04,'EOM=NO NOT VALID WITH SRBEXIT'                @L5A 39449300
         AGO     .END_EOM_MFE                                      @L5A 39452600
.*                                                                 @L5A 39455900
.* Issue error message                                             @L5A 39459200
.EOT_EOM_ERROR_MFE ANOP                                            @L5A 39462500
         MNOTE   04,'EOM=NO EOT=YES IS NOT A VALID COMBINATION'    @P8C 39465800
         AGO     .END_EOM_MFE                                      @L5A 39469100
.END_EOM_MFE ANOP                                                  @L5A 39472400
.*-------------------------------------------------------------------*  39475700
.*       Process the EXIT and SRBEXIT parameter - Execute Form       *  39479000
.*-------------------------------------------------------------------*  39482300
.*                                                                 @L5A 39485600
.* If SRBEXIT was already processed on the normal form then done   @L5A 39488900
         AIF   (&DONEXIT).END_EXIT_MFE                             @L5A 39492200
.*                                                                 @L5A 39495500
.* If EXIT equals null and SRBEXIT equals null then done           @L5A 39498800
         AIF   ('&EXIT' EQ '' AND '&SRBEXIT' EQ '').END_EXIT_MFE   @L5A 39502100
.*                                                                 @L5A 39505400
.* If EXIT is not null and SRBEXIT is not null then error          @L5A 39508700
         AIF   ('&EXIT' NE '' AND '&SRBEXIT' NE '').ERROR_BOTH_MFE @L5A 39512000
.*                                                                 @L5A 39515300
.* If EXIT is not null then process EXIT                           @L5A 39518600
         AIF   ('&EXIT' NE '').PROCESS_EXIT_MFE                    @L5A 39521900
.*                                                                 @L5A 39525200
.* Process the SRBEXIT keyword                                     @L5A 39528500
.PROCESS_SRBEXIT_MFE ANOP                                          @L5A 39531800
.*                                                                 @L5A 39535100
.* If ACTION is not equal to LISTEN then error                     @L5A 39538400
         AIF     ('&ACTION' NE 'LISTEN').BAD_SRBEXIT_MFE           @L5A 39541700
.*                                                                 @L5A 39545000
.* Set bit indicating SRBEXIT was specified                        @L5A 39548300
         OI      ENFPFLG,ENFPSRBE      Indicate SRBEXIT coded      @P7C 39551600
.*                                                                 @L5A 39554900
.* If SRBEXIT is in a register then                                @L5A 39558200
         AIF     ('&SRBEXIT'(1,1) EQ '(').REG_SRBEXIT_MFE          @L5A 39561500
.*                                                                 @L5A 39564800
.* Get SRBEXIT address                                             @L5A 39568100
         LA      15,&SRBEXIT           Get exit address            @P7C 39571400
         ST      15,ENFPEADR           Store address               @P7C 39574700
         AGO     .END_EXIT_MFE                                     @L5A 39578000
.*                                                                 @L5A 39581300
.* SRBEXIT address is specified in a register                      @L5A 39584600
.REG_SRBEXIT_MFE ANOP                                              @L5A 39587900
.*                                                                 @L5A 39591200
.* Get SRBEXIT address                                             @L5A 39594500
&REGC    SETC    '&SRBEXIT(1)'                                     @L5A 39597800
         ST      &REGC,ENFPEADR        Store address               @P7C 39601100
         AGO     .END_EXIT_MFE                                     @L5A 39604400
.*                                                                 @L5A 39607700
.* Process the EXIT keyword                                        @L5A 39611000
.PROCESS_EXIT_MFE ANOP                                             @L5A 39614300
.*                                                                 @L5A 39617600
.* If action is DELETE or QUERY then issue error                   @L5A 39620900
         AIF     ('&ACTION' EQ 'DELETE').BAD_EXIT_MFE              @L5A 39624200
         AIF     ('&ACTION' EQ 'QUERY').BAD_EXIT_MFE               @L5A 39627500
.*                                                                 @L5A 39630800
.* If EXIT is in a register                                        @L5A 39634100
         AIF     ('&EXIT'(1,1) EQ '(').REG_EXIT_MFE                @L5A 39637400
.*                                                                 @L5A 39640700
.* Set exit address                                                @L5A 39644000
         LA      15,&EXIT              Get exit address            @P7C 39647300
         ST      15,ENFPEADR           Store address               @P7C 39650600
         AGO     .END_EXIT_MFE                                     @L5A 39653900
.*                                                                 @L5A 39657200
.* Exit is in a register                                           @L5A 39660500
.REG_EXIT_MFE ANOP                                                 @L5A 39663800
.*                                                                 @L5A 39667100
.* Set exit address                                                @L5A 39670400
&REGC    SETC    '&EXIT(1)'                                        @L5A 39673700
         ST      &REGC,ENFPEADR        Store address               @P7C 39677000
         AGO     .END_EXIT_MFE                                     @L5A 39680300
.*                                                                 @L5A 39683600
.* Exit was specified with delete or query                         @L5A 39686900
.BAD_EXIT_MFE ANOP                                                 @L5A 39690200
         MNOTE   04,'EXIT NOT ALLOWED FOR &ACTION REQUEST'         @L5A 39693500
         AGO     .END_EXIT_MFE                                     @L5A 39696800
.*                                                                 @L5A 39700100
.* Exit and srbexit were both specified                            @L5A 39703400
.ERROR_BOTH_MFE ANOP                                               @L5A 39706700
         MNOTE   08,'EXIT NOT ALLOWED WITH SRBEXIT'                @L6A 39710000
         AGO     .END_EXIT_MFE                                     @L5A 39713300
.*                                                                 @L5A 39716600
.* SRBEXIT was specified with action other than listen             @L5A 39719900
.BAD_SRBEXIT_MFE ANOP                                              @L5A 39723200
         MNOTE   04,'SRBEXIT NOT ALLOWED FOR &ACTION REQUEST'      @L5A 39726500
         AGO     .END_EXIT_MFE                                     @L5A 39729800
.END_EXIT_MFE ANOP                                                 @L5A 39733100
.*--------------------------------------------------------------------* 39733300
.*       Process the MASEXIT parameter - Execute Form             @PFA* 39733500
.*--------------------------------------------------------------------* 39733700
.* If MASEXIT was already processed on the Normal form, then done  @PFA 39733900
         AIF (&DONEMASE).END_MASE_MFE                              @PFA 39734100
.*                                                                 @PFA 39734300
.* If MASEXIT was not coded and ACTION was not LISTEN, goto end    @PFA 39734500
         AIF ('&MASEXIT' EQ '' AND                                     +39734700
               '&ACTION' NE 'LISTEN').END_MASE_MFE                 @PFA 39734900
.*                                                                 @PFA 39735100
.* If MASEXIT was not coded and ACTION is LISTEN, use default      @PFA 39735300
         AIF ('&MASEXIT' EQ '' AND                                     +39735500
               '&ACTION' EQ 'LISTEN').SET_MASE_DEF_MFE             @PFA 39735700
.*                                                                 @PFA 39735900
.* If MASEXIT is YES, then goto set it to yes                      @PFA 39736100
         AIF ('&MASEXIT' EQ 'YES').SET_MASE_YES_MFE                @PFA 39736300
.*                                                                 @PFA 39736500
.* If MASEXIT is not equal to NO, then it must be invalid          @PFA 39736700
         AIF ('&MASEXIT' NE 'NO').INVALID_MASE_MFE                 @PFA 39736900
.*                                                                 @PFA 39737100
.* Set MASEXIT to NO                                               @PFA 39737300
.SET_MASE_NO_MFE ANOP                                              @PFA 39737500
.*                                                                 @PFA 39737700
.* If the ACTION is not LISTEN and not null, goto action error     @PFA 39737900
         AIF ('&ACTION' NE 'LISTEN' AND                                +39738100
               '&ACTION' NE '').MASE_ERROR_ACTION_MFE              @PFA 39738300
.*                                                                 @PFA 39738500
.* Check if SRBEXIT was specified                                  @PFA 39738700
         AIF ('&SRBEXIT' NE '').SRBEXIT_MASE_ERR_MFE               @PFA 39738900
.*                                                                 @PFA 39739100
.* Set MASEXIT to the default value NO                             @PFA 39739300
.SET_MASE_DEF_MFE ANOP                                             @PFA 39739500
         NI      ENFPFLG2,255-ENFPMASE                             @PFA 39739700
         AGO     .END_MASE_MFE                                     @PFA 39739900
.*                                                                 @PFA 39740100
.* Set MASEXIT to YES                                              @PFA 39740300
.SET_MASE_YES_MFE ANOP                                             @PFA 39740500
.* If the ACTION is not LISTEN and not null, goto action error     @PFA 39740700
         AIF ('&ACTION' NE 'LISTEN' AND                                +39740900
               '&ACTION' NE '').MASE_ERROR_ACTION_MFE              @PFA 39741100
.* Check if SRBEXIT was specified                                  @PFA 39741300
         AIF ('&SRBEXIT' NE '').SRBEXIT_MASE_ERR_MFE               @PFA 39741500
.*                                                                 @PFA 39741700
.* Set MASEXIT to YES                                              @PFA 39741900
         OI      ENFPFLG2,ENFPMASE                                 @PFA 39742100
         AGO     .END_MASE_MFE                                     @PFA 39742300
.*                                                                 @PFA 39742500
.* MASEXIT was coded with ACTION other than listen, so issue error @PFA 39742700
.MASE_ERROR_ACTION_MFE ANOP                                        @PFA 39742900
         MNOTE   04,'MASEXIT NOT ALLOWED FOR &ACTION REQUEST'      @PFA 39743100
         AGO     .END_MASE_MFE                                     @PFA 39743300
.*                                                                 @PFA 39743500
.* MASEXIT value was not valid, so issue error                     @PFA 39743700
.INVALID_MASE_MFE ANOP                                             @PFA 39743900
         MNOTE   08,'INVALID MASEXIT: MASEXIT=&MASEXIT'            @PFA 39744100
         AGO     .END_MASE_MFE                                     @PFA 39744300
.*                                                                 @PFA 39744500
.* When SRBEXIT is specified, MASEXIT is not allowed               @PFA 39744700
.SRBEXIT_MASE_ERR_MFE ANOP                                         @PFA 39744900
         MNOTE   04,'MASEXIT NOT VALID WITH SRBEXIT'               @PFA 39745100
         AGO     .END_MASE_MFE                                     @PFA 39745300
.*                                                                 @PFA 39745500
.END_MASE_MFE ANOP                                                 @PFA 39745700
.*-------------------------------------------------------------------*  39750000
.*    Process the PARMLEN parameter - execute form                 @L6A 39751100
.*-------------------------------------------------------------------*  39752200
         AIF (&DONEPLEN).END_PLEN_MFE  PARMLEN already processed   @L6A 39753300
         AIF ('&PARMLEN' EQ '').END_PLEN_MFE   PARMLEN not coded   @L6A 39754400
         AIF (N'&PARMLEN GT 1).PLEN_TOO_MANY_PARMS_MFE    >1 parm  @L6A 39755500
.*                                                                      39756600
.* If the action is not SIGNAL or null, issue an MNOTE.            @L6A 39757700
.* (A null action is acceptable since it may be specified          @L6A 39758800
.* on the MF=L invocation.)                                        @L6A 39759900
         AIF   ('&ACTION' NE 'SIGNAL' AND                              +39761000
               '&ACTION' NE '').PLEN_ERROR_ACTION_MFE Wrong action @L6A 39762100
.* Set parameter length value from register, storage, or constant, @L6A 39763200
.* as appropriate                                                  @L6A 39764300
         AIF   ('&PARMLEN'(1,1) EQ '(').REGPLEN  If in register    @L6A 39765400
         AIF   (T'&PARMLEN EQ 'N').NUMPLEN  Numeric value          @L6A 39766500
.*                                                                 @PED 39767600
         MVC     ENFPFLEN(L'ENFPFLEN),&PARMLEN  Move length value  @L6A 39768700
         AGO   .END_PLEN_MFE                                       @L6A 39769800
.*                                                                5@PED 39773100
.NUMPLEN ANOP                          Length value is numerical   @L6A 39776400
         MVC     ENFPFLEN,=F'&PARMLEN' Move length value           @L6A 39777500
         AGO   .END_PLEN_MFE                                       @L6A 39778600
.REGPLEN ANOP                          Handle register value       @L6A 39779700
&REGC    SETC  '&PARMLEN'(2,K'&PARMLEN-2)  Value inside parens     @L6A 39780800
         ST      &REGC,ENFPFLEN        Save length value                39781900
         AGO   .END_PLEN_MFE                                       @L6A 39783000
.*                                                                      39784100
.PLEN_ERROR_ACTION_MFE ANOP            PARMLEN with wrong action   @L6A 39785200
         MNOTE 04,'PARMLEN NOT ALLOWED FOR &ACTION REQUEST - IGNORED'  +39786300
                                                                   @L6A 39787400
         AGO   .END_PLEN_MFE                                       @L6A 39788500
.*                                                                      39789600
.PLEN_TOO_MANY_PARMS_MFE ANOP          Too many parameters         @L6A 39790700
         MNOTE 08,'MORE THAN 1 PARMLEN VALUE - PARMLEN IGNORED'    @L6A 39791800
.*                                                                      39792900
.END_PLEN_MFE ANOP                                                 @L6A 39794000
.*-------------------------------------------------------------------*  39795100
.*       PROCESS THE FREEPRM PARAMETER - NORMAL (REG) & EXECUTE FORM *  39800000
.*-------------------------------------------------------------------*  39850000
         AIF     (&DONEFRP).ENDFRPE    FREEPRM ALREADY PROCESSED        39900000
         AIF     ('&FREEPRM' EQ '').ENDFRPE NOT SPECIFIED IN EXEC FORM  39950000
         AIF     ('&ACTION' NE '' AND '&ACTION' NE 'SIGNAL').BADFPM2    40000000
         AIF     ('&PARMLEN' NE '').FREEPRM_AND_PARMLEN_MFE        @L6A 40025000
&N       SETA    N'&FREEPRM            NO OF FREEPRM VALUES SPECIFIED   40050000
         AIF     (&N GT &MAXF).BADFRV1      TOO MANY FREEPRM VALUES     40100000
         AIF     (&N GE &MINF).SPPROC1      CORRECT NO OF VALUES        40150000
         MNOTE   08,'SUBPOOL AND LENGTH REQUIRED - FREEPRM IGNORED'     40200000
         AGO     .ENDFRPE                                               40250000
.BADFRV1 ANOP                                                           40300000
         MNOTE   08,'MORE THAN &MAXF FREEPRM VALUES - FREEPRM IGNORED'  40350000
         AGO     .ENDFRPE                                               40362500
.FREEPRM_AND_PARMLEN_MFE ANOP          Both FREEPRM and PARMLEN    @L6A 40375000
         MNOTE   08,'FREEPRM NOT ALLOWED WITH PARMLEN'             @L6A 40387500
         AGO     .ENDFRPE                                               40400000
.BADFPM2 MNOTE   04,'FREEPRM NOT ALLOWED FOR &ACTION REQUEST- IGNORED'  40450000
         AGO     .ENDFRPE                                               40500000
.*  -------------------------------------------   *                     40550000
.*       SUBPOOL = &FREEPRM(1)                    *                     40600000
.*  -------------------------------------------   *                     40650000
.SPPROC1 ANOP                          BEGIN SUBPOOL PROCESSING         40700000
         AIF     (&DONESP).ENDSP1                                       40750000
         AIF     ('&FREEPRM(1)' EQ '').MISSP1                           40800000
         AIF     ('&FREEPRM(1)'(1,1) NE '(').SETFRS1                    40850000
&REGC    SETC    '&FREEPRM(1)'(2,K'&FREEPRM(1)-2)                       40900000
         STC     &REGC,ENFPFSPL        SAVE SUBPOOL NUMBER              40950000
         AGO     .ENDSP1                                                41000000
.MISSP1  ANOP                                                           41050000
         MNOTE   08,'SUBPOOL REQUIRED IN FREEPRM - FREEPRM IGNORED'     41100000
         AGO     .ENDFRPE                                               41150000
.SETFRS1 ANOP                          SAVE SUBPOOL VALUE               41200000
         LA      15,&FREEPRM(1)        GET SUBPOOL NUMBER               41250000
         STC     15,ENFPFSPL           SAVE SUBPOOL NUMBER              41300000
.ENDSP1  ANOP                          END OF SUBPOOL PROCESSING        41350000
.*  -------------------------------------------   *                     41400000
.*       LENGTH = &FREEPRM(2)                     *                     41450000
.*  -------------------------------------------   *                     41500000
         AIF     (&DONELEN).ENDFLN1                                     41550000
         AIF     ('&FREEPRM(2)' EQ '').MISLEN1                          41600000
         AIF     ('&FREEPRM(2)'(1,1) NE '(').SETFLN1                    41650000
&REGC    SETC    '&FREEPRM(2)'(2,K'&FREEPRM(2)-2)                       41700000
         ST      &REGC,ENFPFLEN        SAVE LENGTH VALUE                41750000
         AGO     .ENDFLN1                                               41800000
.MISLEN1 ANOP                                                           41850000
         MNOTE   08,'LENGTH REQUIRED IN FREEPRM - FREEPRM IGNORED'      41900000
         AGO     .ENDFRPE                                               41950000
.SETFLN1 ANOP                          SAVE LENGTH VALUE                42000000
         AIF     (T'&FREEPRM(2) EQ 'N').NUMLEN  Numeric value           42050000
         B       &GNAME.C              BRANCH AROUND LENGTH VALUE       42100000
&GNAME.B DC      A(&FREEPRM(2))        DEFINE LENGTH VALUE              42150000
&GNAME.C MVC     ENFPFLEN,&GNAME.B     MOVE LENGTH VALUE                42200000
         AGO     .ENDFLN1                                               42250000
.NUMLEN  ANOP                          LENGTH VALUE IS A CONSTANT       42300000
         AIF     (&FREEPRM(2) LT 4096).MVABSL                           42350000
         MVC     ENFPFLEN,=F'&FREEPRM(2)' MOVE LENGTH VALUE             42400000
         AGO     .ENDFLN1                                               42450000
.MVABSL  ANOP                                                           42500000
         LA      15,&FREEPRM(2)        LOAD LENGTH VALUE                42550000
         ST      15,ENFPFLEN           SAVE LENGTH VALUE                42600000
.ENDFLN1 ANOP                          END OF LENGTH VALUE PROCESSING   42650000
.*  -------------------------------------------   *                     42700000
.*       KEY = &FREEPRM(3)                        *                     42750000
.*  -------------------------------------------   *                     42800000
         AIF     (&DONEKEY).ENDFKY1                                     42850000
         AIF     (&N NE 3).DEFKEY1     KEY NOT SPECIFIED                42900000
         AIF     ('&FREEPRM(3)' EQ '').DEFKEY1                          42950000
         AIF     ('&FREEPRM(3)'(1,1) NE '(').SETFKY1                    43000000
&REGC    SETC    '&FREEPRM(3)'(2,K'&FREEPRM(3)-2)                       43050000
         STC     &REGC,ENFPFKEY        SAVE KEY NUMBER                  43100000
         AGO     .ENDFKY1                                               43150000
.SETFKY1 ANOP                                                           43200000
         AIF     (T'&FREEPRM(3) NE 'N').GOODKY1 EQUATED VALUE           43250000
         AIF     (&FREEPRM(3) LE 15).GOODKY1     KEY= 0 TO 15           43300000
         MNOTE   08,'INVALID KEY VALUE &FREEPRM(3), FREEPRM IGNORED'    43350000
         AGO     .ENDFRPE                                               43400000
.DEFKEY1 ANOP                                                           43450000
         MVI     ENFPFKEY,X'00'        DEFAULT TO KEY 0                 43500000
         AGO     .ENDFKY1                                               43550000
.GOODKY1 ANOP                                                           43600000
         LA      15,&FREEPRM(3)        LOAD STORAGE KEY                 43650000
         SLL     15,4(0)               LOAD STORAGE KEY                 43700000
         STC     15,ENFPFKEY           SAVE STORAGE KEY FOR FREEMAIN    43750000
.ENDFKY1 ANOP                          COMPLETE KEY PROCESSING          43800000
.*  -------------------------------------------   *                     43850000
.*       SET ENFPFREE                             *                     43900000
.*  -------------------------------------------   *                     43950000
         AIF     (&DONEFFG).ENDFRPE    ENFPFREE ALREADY SET UP          44000000
         OI      ENFPFLG,ENFPFREE      FREE SIGNAL PARAM LIST           44050000
.*                                                                      44100000
.ENDFRPE ANOP                                                           44150000
.*-------------------------------------------------------------------*  44200000
.*       PROCESS THE PARM PARAMETER - NORMAL(REG) OR EXECUTE FORM    *  44250000
.*-------------------------------------------------------------------*  44300000
         AIF     (&DONEPRM).ENDPARM   PARM ALREADY IN PARM LIST         44350000
         AIF     ('&PARM' EQ '').ENDPARM                                44400000
         AIF     ('&ACTION' EQ '' OR '&ACTION' EQ 'SIGNAL' OR          X44433300
               '&ACTION' EQ 'LISTEN').SETPARM                    @L5C   44466600
.BADPRM2 MNOTE   04,'PARM NOT ALLOWED FOR &ACTION REQUEST - IGNORED'    44500000
         AGO     .ENDPARM                                               44550000
.SETPARM ANOP                                                           44600000
         AIF     ('&PARM'(1,1) EQ '(').SETPRMR                          44650000
         LA      15,&PARM              GET PTR TO USER PARM LIST        44700000
         ST      15,ENFPSPRM           SAVE PTR TO USER PARM LIST       44750000
         AGO     .ENDPARM                                               44800000
.SETPRMR ANOP                                                           44850000
&REGC    SETC    '&PARM(1)'                                             44900000
         ST      &REGC,ENFPSPRM        PUT PARM INTO ENF PARM LIST      44950000
.ENDPARM ANOP                                                           45000000
.*-------------------------------------------------------------------*  45050000
.*       PROCESS THE DISABLE PARAMETER -  EXECUTE FORM           @L4A*  45050100
.*-------------------------------------------------------------------*  45050200
         AIF     (&DONEDIS).ENDDIS2   DISABLE ALREADY CODED       @L4A  45050300
         AIF     ('&DISABLE' EQ '').ENDDIS2  Not specified        @PDC  45050400
         AIF     ('&ACTION' EQ 'LISTEN').CONTDI2 LISTEN CODED     @L4A  45050500
         MNOTE   04,'DISABLE NOT ALLOWED FOR &ACTION REQUEST - IGNORED' 45050600
         AGO     .ENDDIS2                      IGNORE DISABLE     @L4A  45050700
.CONTDI2 AIF     ('&ESTBNME' NE '' AND '&EXITNME' NE '').DIS2     @L4A  45050800
         MNOTE   08,'ESTBNME AND EXITNME REQUIRED WITH DISABLE'   @L4A  45050900
.DIS2    ANOP                                                     @L4A  45051000
         AIF     ('&DISABLE' EQ 'YES').DISY2   DISABLE=YES        @L4A  45051100
         AIF     ('&DISABLE' NE 'NO').BADDIS2  EXPECT DISABLE=NO  @L4A  45051200
         NI      ENFPFLG,255-ENFPDISA  SET DISABLE=NO             @L4A  45051300
         OI      ENFPFLG,ENFPDISO      DISABLE OPERATIONAL        @L4A  45051400
         AGO     .ENDDIS2                                         @L4A  45051500
.DISDEF2 ANOP                                                     @L4A  45051600
         AIF     ('&ACTION' NE 'LISTEN').ENDDIS2 LISTEN CODED     @L4A  45051700
.DISY2   OI      ENFPFLG,ENFPDISA      SET DISABLE=YES            @L4A  45051800
         OI      ENFPFLG,ENFPDISO      DISABLE OPERATIONAL        @L4A  45051900
         AGO     .ENDDIS2                                         @L4A  45052000
.BADDIS2 MNOTE   08,'INVALID DISABLE : DISABLE=&DISABLE IGNORED'  @L4A  45052100
.ENDDIS2  ANOP                                                    @L4A  45052200
.*-------------------------------------------------------------------*  45052300
.*       PROCESS THE ESTBNME AND EXITNME PARAMETERS - EXECUTE FORM   *  45054100
.*-------------------------------------------------------------------*  45058200
         AIF     ('&ESTBNME' EQ '' AND '&EXITNME' EQ '').ENDE2    @D1A  45062300
         AIF     ('&ESTBNME' NE '' AND '&EXITNME' NE '').SETEE2   @D1A  45066400
         MNOTE   08,'BOTH ESTBNME AND EXITNME MUST BE SPECIFIED'  @D1A  45070500
         AGO     .ENDE2                                           @D1A  45074600
.SETEE2  ANOP                                                     @D1A  45078700
         AIF     ('&ESTBNME'(1,1) EQ '(').SETBNME - IN A REG.     @01A  45079500
         MVC     ENFPLNME(8),&ESTBNME  STORE ESTABLISHER NAME     @D1A  45080300
         AGO     .ENDBNM2                                         @01A  45081100
.SETBNME ANOP                                                     @01A  45081900
&ESTB    SETC    '&ESTBNME(1)'         GET REGISTER               @01A  45082700
         MVC     ENFPLNME(8),0(&ESTB)  STORE ESTABLISHER NAME     @01A  45083500
.ENDBNM2 ANOP                                                     @01A  45084300
         AIF     ('&EXITNME'(1,1) EQ '(').SETTNME - IN A REG.     @01A  45085100
         MVC     ENFPXNME(8),&EXITNME  STORE LISTEN EXIT NAME     @D1A  45085900
         AGO     .ENDE2                                           @01A  45086700
.SETTNME ANOP                                                     @01A  45087500
&ENME    SETC    '&EXITNME(1)'         GET REGISTER               @01A  45088300
         MVC     ENFPXNME(8),0(&ENME)  STORE EXIT NAME            @01A  45089100
.ENDE2   ANOP                                                     @D1A  45091000
.*--------------------------------------------------------------------* 45091400
.*       Process the XSYS parameter - execute form                 @L6A 45091800
.*--------------------------------------------------------------------* 45092200
.*                                                                      45092600
.* If XSYS was already processed on the normal form or             @L6A 45093000
.*    XSYS was not coded then done                                 @L6A 45093400
         AIF (&DONEXSYS OR '&XSYS' EQ '').END_XSYS_MFE             @L6A 45093800
.*                                                                      45094200
.* If more than one parameter, issue MNOTE                         @L6A 45094600
         AIF (N'&XSYS GT 1).XSYS_TOO_MANY_PARMS_MFE                @L6A 45095000
.*                                                                      45095400
.* If the action is not LISTEN, SIGNAL, or null, issue MNOTE.      @L6A 45095800
.* (A null action is acceptable since it may have been specified   @L6A 45096200
.* on the MF=L invocation.)                                        @L6A 45096600
         AIF ('&ACTION' NE 'LISTEN' AND                                +45097000
               '&ACTION' NE 'SIGNAL' AND                               +45097400
               '&ACTION' NE '').XSYS_ERROR_ACTION_MFE              @L6A 45097800
.*                                                                      45098200
.* If XSYS is YES or NO, set the flag appropriately.  If it's      @L6A 45098600
.* anything else, issue an MNOTE.                                  @L6A 45099000
         AIF ('&XSYS' EQ 'YES').SET_XSYS_YES_MFE                   @L6A 45099400
         AIF ('&XSYS' EQ 'NO').SET_XSYS_NO_MFE                     @L6A 45099800
         AGO     .INVALID_XSYS_MFE                                 @L6A 45100200
.*                                                                      45100600
.SET_XSYS_YES_MFE ANOP                 Set XSYS to YES             @L6A 45101000
         OI      ENFPFLG,ENFPXSYS      Cross-system request       @L6A  45101400
         AGO     .END_XSYS_MFE                                     @L6A 45101800
.*                                                                      45102200
.SET_XSYS_NO_MFE ANOP                  Set XSYS to NO              @L6A 45102600
         NI      ENFPFLG,255-ENFPXSYS  Non-cross-system request   @L6A  45103000
         AGO     .END_XSYS_MFE                                     @L6A 45103400
.*                                                                      45103800
.INVALID_XSYS_MFE ANOP                 XSYS value not valid        @L6A 45104200
         MNOTE   08,'INVALID XSYS: XSYS=&XSYS'                     @L6A 45104600
         AGO     .END_XSYS_MFE                                     @L6A 45105000
.*                                                                      45105400
.XSYS_ERROR_ACTION_MFE ANOP            XSYS w/inappropriate action @L6A 45105800
         MNOTE   04,'XSYS NOT ALLOWED FOR &ACTION REQUEST - IGNORED'   +45106200
                                                                   @L6A 45106600
         AGO     .END_XSYS_MFE                                     @L6A 45107000
.*                                                                      45107400
.XSYS_TOO_MANY_PARMS_MFE ANOP          Too many parameters         @L6A 45107800
         MNOTE   08,'MORE THAN 1 XSYS VALUE - XSYS IGNORED'        @L6A 45108200
.*                                                                      45108600
.END_XSYS_MFE ANOP                                                 @L6A 45109000
.*--------------------------------------------------------------------* 45109400
.*       Process the BITQUAL parameter - normal or execute form    @L6A 45109800
.*--------------------------------------------------------------------* 45110200
         AIF   (&DONEBQUAL OR '&BITQUAL' EQ '').END_BITQUAL_MFNE       +45110600
                                       BITQUAL processed or not        +45111000
                                         coded                     @L6A 45111400
         AIF   (N'&BITQUAL GT 1).BITQUAL_TOO_MANY_PARMS_MFNE  Too      +45111800
                                         many parameters           @L6A 45112200
.*                                                                      45112600
.* If the action is DELETE, issue an MNOTE.  (A null action is     @L6A 45113000
.* acceptable since it may have been specified on the MF=L         @L6A 45113400
.* invocation.)                                                    @L6A 45113800
         AIF   ('&ACTION' EQ 'DELETE').BITQUAL_ERROR_ACTION_MFNE   @L6A 45114200
.*                                                                      45114600
.* Set bit-mapped qualifier from register, numeral, or storage, as @L6A 45115000
.* appropriate                                                     @L6A 45115400
         AIF   ('&BITQUAL'(1,1) EQ '(').REGBQUAL  If in register   @L6A 45115800
         AIF   ('&BITQUAL'(1,2) EQ 'X''' OR                            +45116000
               '&BITQUAL'(1,2) EQ 'x''').HEXBQUAL Hex number       @PAC 45116200
         AIF   (T'&BITQUAL EQ 'N').NUMBQUAL  Numeric value         @L6A 45116600
         MVC     ENFPBMQ(L'ENFPBMQ),&BITQUAL  Move BITQUAL value  @L6A  45117000
         AGO   .END_BITQUAL_MFNE                                   @L6A 45117400
.NUMBQUAL ANOP                         Handle numeric value        @L6A 45117800
         MNOTE 08,'BITQUAL MUST BE A HEX NUMERIC VALUE'            @L6A 45118200
         AGO   .END_BITQUAL_MFNE                                   @L6A 45118600
.HEXBQUAL ANOP                         Handle hex number           @L6A 45119000
&BQUAL   SETC  '&BITQUAL'(3,K'&BITQUAL-3)  Capture BITQUAL value   @L6A 45119400
         MVC     ENFPBMQ,=XL32'&BQUAL'    Move numeric value      @L6A  45119800
         AGO   .END_BITQUAL_MFNE                                   @L6A 45120200
.REGBQUAL ANOP                         Handle register value       @L6A 45120600
&REGC    SETC  '&BITQUAL'(2,K'&BITQUAL-2)  Value inside parens     @L6A 45121000
         MVC     ENFPBMQ(L'ENFPBMQ),0(&REGC)  Move BITQUAL value  @L6A  45121400
         AGO   .END_BITQUAL_MFNE                                   @L6A 45121800
.*                                                                      45122200
.BITQUAL_ERROR_ACTION_MFNE ANOP        BITQUAL with wrong action   @L6A 45122600
         MNOTE  04,'BITQUAL NOT ALLOWED FOR &ACTION REQUEST - IGNORED' +45123000
                                                                   @L6A 45123400
         AGO    .END_BITQUAL_MFNE                                  @L6A 45123800
.*                                                                      45124200
.BITQUAL_TOO_MANY_PARMS_MFNE ANOP      Too many parameters         @L6A 45124600
         MNOTE  08,'MORE THAN 1 BITQUAL VALUE - BITQUAL IGNORED'   @L6A 45125000
.*                                                                      45125400
.END_BITQUAL_MFNE ANOP                                             @L6A 45125800
.*--------------------------------------------------------------------* 45126200
.*  Process the BITCOMPARE parameter - execute form                @L6A 45126600
.*--------------------------------------------------------------------* 45127000
.*                                                                      45127400
.* If BITCOMPARE was not coded, it defaults to SUBSET (ENFPBCMP    @L6A 45127800
.* = B'000')                                                       @L6A 45128200
         AIF   (&DONEBCOMP OR '&BITCOMPARE' EQ '').END_BITCOMPARE_MFE  +45128600
                                                                   @L6A 45129000
         AIF   (N'&BITCOMPARE GT 1).BITCOMPARE_TOO_MANY_PARMS_MFE  @L6A 45129400
.*                                                                      45129800
.* If the action is anything but LISTEN or not specified, issue an @L6A 45129900
.* MNOTE.  (A null action is acceptable since it may be specified  @L6A 45130000
.* on the MF=L invocation.)                                        @L6A 45130100
         AIF   ('&ACTION' NE 'LISTEN' AND                              +45130200
               '&ACTION' NE '').BITCOMPARE_ERROR_ACTION_MFE        @L6A 45130600
.*                                                                      45131000
         AIF   ('&BITCOMPARE' EQ 'SUBSET').SET_SUBSET_MFE          @L6A 45131400
         AIF   ('&BITCOMPARE' EQ 'INTERSECT').SET_INTERSECT_MFE    @L6A 45131800
         AIF   ('&BITCOMPARE' EQ 'EQUAL').SET_EQUAL_MFE            @L6A 45132200
         MNOTE 08,'INVALID BITCOMPARE: BITCOMPARE=&BITCOMPARE'     @L6A 45132600
         AGO   .END_BITCOMPARE_MFE                                 @L6A 45133000
.*                                                                      45133400
.SET_SUBSET_MFE ANOP                Set BITCOMPARE to SUBSET       @L6A 45133800
         NI      ENFPFLG2,ENFPBQMK     Clear 3 high-order bits    @L6A  45134200
         AGO   .END_BITCOMPARE_MFE                                 @L6A 45134600
.SET_INTERSECT_MFE ANOP             Set BITCOMPARE to INTERSECT    @L6A 45135000
         NI      ENFPFLG2,ENFPBQMK     Clear 3 high-order bits    @L6A  45135400
         OI      ENFPFLG2,ENFPBQIN     BITCOMPARE=INTERSECT       @L6A  45135800
         AGO   .END_BITCOMPARE_MFE                                 @L6A 45136200
.SET_EQUAL_MFE ANOP                 Set BITCOMPARE to EQUAL        @L6A 45136600
         NI      ENFPFLG2,ENFPBQMK     Clear 3 high-order bits    @L6A  45137000
         OI      ENFPFLG2,ENFPBQEQ     BITCOMPARE=EQUAL           @L6A  45137400
         AGO   .END_BITCOMPARE_MFE                                 @L6A 45137800
.*                                                                      45138200
.BITCOMPARE_ERROR_ACTION_MFE ANOP      BITCOMPARE w/inappropriate      +45138600
                                         action                    @L6A 45139000
         MNOTE 04,'BITCOMPARE NOT ALLOWED FOR &ACTION REQUEST - IGNORED+45139400
               '                                                   @L6A 45139800
         AGO   .END_BITCOMPARE_MFE                                 @L6A 45140200
.*                                                                      45140600
.BITCOMPARE_TOO_MANY_PARMS_MFE ANOP    Too many parameters         @L6A 45141000
         MNOTE 08,'MORE THAN 1 BITCOMPARE VALUE - BITCOMPARE IGNORED'  +45141400
                                                                   @L6A 45141800
.*                                                                      45142200
.END_BITCOMPARE_MFE ANOP                                           @L6A 45142600
.*--------------------------------------------------------------------* 45143200
.*  Process the PLISTVER parameter - execute form                  @PAA 45143800
.*--------------------------------------------------------------------* 45144400
         AIF     ('&PLISTVER' EQ '').END_PLISTVER_MFE              @PAA 45145000
         AIF     ('&MF' EQ '').END_PLISTVER_MFE                    @PAA 45145600
         MVC     ENFPVERS,=H'&VERS'    Move parameter list version @PAA 45146200
         MVC     ENFPLEN,=H'&LEN'      Move parameter list length  @PAA 45146800
.END_PLISTVER_MFE ANOP                                             @PAA 45147400
.*-------------------------------------------------------------------*  45148000
.*       ALL SPECIFIED PARAMETERS ARE PROCESSED. CALL IEFENFFX       *  45148600
.*-------------------------------------------------------------------*  45150000
.*                                                              5@P4D   45183300
.STVERS  ST      1,ENFPTR              STORE ADDR OF PARM LIST          45216600
         LA      1,ENFPTR              LOAD ADDR OF ENFPTR              45250000
         L       15,CVTPTR(0,0)        GET ADDRESS OF CVT        @02C   45300000
         L       15,X'C0'(0,15)        GET ADDRESS OF ENFCT      @02C   45350000
.*                                                              2@02D   45400000
         USING   ENFCT,15              ADDRESSIBILITY TO ENFCT          45500000
         L       15,ENFCFMOD           ADDRESS OF ENFFX                 45550000
         DROP    15                    RELEASE ENFCT BASE REGISTER      45600000
         BALR    14,15                 INVOKE IEFENFFX                  45650000
.*------------------------------------------------------------------*   45700000
.*       RETURN TOKEN TO LISTENER - NORMAL OR EXECUTE FORM          *   45750000
.*------------------------------------------------------------------*   45800000
         AIF     ('&ACTION' NE 'LISTEN').NRSSTKN                        45850000
         AIF     ('&DTOKEN' EQ '').NRSSTKN                              45900000
         AIF     ('&DTOKEN'(1,1) EQ '(').RSTTOKR                        45950000
         AIF     ('&TYPE' EQ 'ASYNC').NRSSTKN                           46000000
         L       1,ENFPTR              RESTORE POINTER TO EPL           46050000
         MVC     &DTOKEN.(4),ENFPTOK   SAVE TOKEN FOR DELETE            46100000
         AGO     .NRSSTKN                                               46150000
.RSTTOKR ANOP                                                           46200000
&REGC    SETC    '&DTOKEN(1)'          GET REG NUMBER                   46250000
         L       1,ENFPTR              RESTORE POINTER TO EPL           46300000
         L       &REGC,ENFPTOK         RETURN TOKEN IN REG              46350000
.NRSSTKN ANOP                          END OF RESTORING DTOKEN          46400000
.*------------------------------------------------------------------*   46500000
.*       RETURN LISTENR COUNT - NORMAL(REG) OR EXECUTE FORM         *   46502300
.*------------------------------------------------------------------*   46504600
         AIF     ('&LISTENRS' EQ '').ENDLISE                      @L3A  46506900
         AIF     ('&TYPE' EQ 'ASYNC').ERRLSE1                     @L3A  46509200
         AGO     .SETLSE                                          @L3A  46511500
.ERRLSE1 MNOTE   04,'LISTENRS NOT ALLOWED WITH TYPE=ASYNC'        @L3A  46513800
         AGO     .ENDLISE                                         @L3A  46516100
.SETLSE  ANOP                                                     @L3A  46518400
         AIF     ('&ACTION' NE 'QUERY').ERRLSE2                   @D2A  46518700
         AGO     .SETLSE2                                         @D2A  46519000
.ERRLSE2 MNOTE   04,'LISTENRS NOT ALLOWED FOR &ACTION REQUEST -'  @D2A  46519300
         AGO     .ENDLISE                                         @D2A  46519600
.SETLSE2 ANOP                                                     @D2A  46519900
         AIF     ('&LISTENRS'(1,1) EQ '(').SETLSER                @L3A  46520700
         L       1,ENFPTR              RESTORE POINTER TO EPL     @L3A  46523000
         L       1,ENFPLSNM            GET LISTENRS VALUE         @L3A  46525300
         ST      1,&LISTENRS           SAVE LISTENER VALUE IN VAR @L3A  46527600
         AGO     .ENDLISE                                         @L3A  46529900
.SETLSER ANOP                                                     @L3A  46532200
&REGC    SETC    '&LISTENRS(1)'                                   @L3A  46534500
         L       1,ENFPTR              RESTORE POINTER TO EPL     @L3A  46536800
         L       &REGC,ENFPLSNM        SAVE LISTENER VALUE IN REG @L3A  46539100
.ENDLISE ANOP                                                     @L3A  46541400
         AGO     .END                  NORMAL TERMINATION         @L3A  46543700
.*------------------------------------------------------------------*   46546000
.*       ABNORMAL TERMINATION                                       *   46550000
.*------------------------------------------------------------------*   46600000
.ENFBUG  ANOP                                                           46650000
         MNOTE   12,'ERROR IN ENFREQ MACRO - MACRO TERMINATED'          46700000
.ERREXIT ANOP                                                           46750000
.*------------------------------------------------------------------*   46800000
.*       NORMAL TERMINATION                                         *   46850000
.*------------------------------------------------------------------*   46900000
.END     ANOP                                                           46950000
         AIF     (NOT &USING1).NORMEND NO USING DONE               @PAC 47000000
         DROP    1                     RELEASE BASE REGISTER            47050000
.NORMEND ANOP                          NORMAL TERMINATION (LIST FORM)   47100000
         MEND                                                           47150000
* */ ENFREQ : MACRO                                                     47200000
*          KEYS(ACTION,CODE,TYPE,QUAL,QMASK,EXIT,PARM,ESTBNME,EXITNME,  47250000
*         LISTENRS,DTOKEN,STOKEN,FREEPRM,MF,RELATED,DISABLE,            47283300
*         RETCODE,SRBEXIT,EOT,EOM,XSYS,PARMLEN,BITQUAL,                 47305500
*         BITCOMPARE,PLISTVER,MASEXIT);       /*                 @PFC*/ 47327700
*             ANS('?'||MACLABEL||'ENFREQP '||MACLIST||MACKEYS||';');    47350000
*   %END ENFREQ;                                                        47400000
