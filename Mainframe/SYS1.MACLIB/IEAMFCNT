*  /* START OF SPECIFICATIONS ***************************************** 00050000
*                                                                       00100000
*01*  MACRO-NAME = IEAMFCNT                                             00150000
*                                                                       00200000
*01*  DESCRIPTIVE-NAME = Feature Count Service Macro                    00250000
*                                                                       00300000
*01*  COPYRIGHT =                                                       00350000
*       5685-001                                                        00400000
*       THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     00450000
*       (C) COPYRIGHT IBM CORP. 1989                                    00500000
*       LICENSED MATERIALS - PROPERTY OF IBM                            00550000
*                                                                       00600000
*01*  STATUS = JBB3313                                                  00650000
*                                                                       00700000
*01*  FUNCTION = Interface to the Feature Count Service Routine         00750000
*                (IEAVEFCN).  IEAVEFCN will increment the field         00800000
*                in the ASSB (associated with the FEATURE specified     00850000
*                on invocation) using the VALUE specified.              00900000
*                                                                       00950000
*                                                                       01000000
*02*    INPUT (BAL) =                                                   01050000
*                                                                       01100000
*          IEAMFCNT   FEATURE=CRYPTO                                    01150000
*                                                                       01200000
*                     ,VALUE=rx-address                                 01250000
*                                                                       01300000
*02*    INPUT (PLAS) =                                                  01350000
*                                                                       01400000
*          ?IEAMFCNT  FEATURE  (CRYPTO)                                 01450000
*                                                                       01500000
*                     VALUE    (address)                                01550000
*                                                                       01600000
*                                                                       01650000
*01*  MACRO USAGE REQUIREMENTS =                                        01700000
*                                                                       01750000
*02*    AMODE =     31 BIT CALLERS ONLY                                 01800000
*02*    STATE =     SUPERVISOR STATE                                    01850000
*02*    KEY   =     0                                                   01900000
*02*    ASC MODE =  PRIMARY OR AR ASC MODE                              01950000
*                                                                       02000000
*       IEAMFCNT DEPENDS ON THE SYSSTATE MACRO VARIABLE BEING           02050000
*       ACCURATE FOR PROPER CODE GENERATION.                            02100000
*                                                                       02150000
*                                                                       02200000
*01*  PROCESSOR = ASSEMBLER H, PL/AS    (BILINGUAL)                     02250000
*                                                                       02300000
*01*  CHANGE ACTIVITY =                                                 02350000
*      $00=OY27050 JBB3313  890403  PD16EJ: Encryption Asymmetric       02400000
*                                            Feature Support            02450000
*      $P1=PIN0010 JBB3313  890911  PD16M6: Declare PSASVT              02500000
*      $P2=PIN0013 JBB3313  891128  PD16M6: Change DISTLIB to AINTLIB   02550000
*                                                                       02600000
*01*  COMPONENT = SC1C5 (Supervisor Control)                            02650000
*                                                                       02700000
*01*  DISTRIBUTION LIBRARY = AINTLIB                                    02750000
*                                                                       02800000
***** END OF SPECIFICATIONS ******************************************* 02850000
         MACRO                                                          02900000
&LABL    IEAMFCNT &FEATURE=,&VALUE=                                     02950000
         GBLC   &SYSASCE            Declare Global SYSSTATE variable.   03000000
.*                                                                      03050000
.********************************************************************** 03100000
.*       Declare a bit to keep track of errors                        * 03150000
.********************************************************************** 03200000
.*                                                                      03250000
         LCLB  &ERROR               If this bit gets turned on,         03300000
.*                                  there will be no code generation.   03350000
&ERROR   SETB  0                                                        03400000
.*                                                                      03450000
         LCLC  &ERRMSG              Error Message                       03500000
.*                                                                      03550000
         LCLC  &ERRS(20)            Error Message Array                 03600000
.*                                                                      03650000
.********************************************************************** 03700000
.*    Store Error Messages in the Error Message Array                   03750000
.********************************************************************** 03800000
.*                                                                      03850000
&ERRS(1) SETC  'EXCESSIVE POSITIONAL PARAMETERS.'                       03900000
&ERRS(2) SETC  'KEYWORD IS REQUIRED BUT NOT SPECIFIED.'                 03950000
&ERRS(3) SETC  'KEYWORD HAS TOO MANY SUBLISTS SPECIFIED.'               04000000
&ERRS(4) SETC  'IS AN INVALID VALUE FOR FEATURE KEYWORD.'               04050000
&ERRS(5) SETC  'KEYWORD CANNOT USE REGISTER NOTATION.'                  04100000
.*                                                                      04150000
.********************************************************************** 04200000
.*       Put out BAL MACDATE comment line regardless of errors.       * 04250000
.********************************************************************** 04300000
.*                                                                      04350000
*        MACDATE = 4/03/89                                              04400000
.*                                                                      04450000
.********************************************************************** 04500000
.*       Check for extraneous positional parms                        * 04550000
.********************************************************************** 04600000
.*                                                                      04650000
         AIF   (N'&SYSLIST EQ 0).CHFEATR                                04700000
&ERROR   SETB  1                                                        04750000
         MNOTE 8,' &ERRS(1)'        Issue Error Message                 04800000
.*                                                                      04850000
.********************************************************************** 04900000
.*                                                                    * 04950000
.*       Validate FEATURE parameter if present                        * 05000000
.*                                                                    * 05050000
.********************************************************************** 05100000
.*                                                                      05150000
.CHFEATR ANOP  ,                                                        05200000
         AIF   ('&FEATURE' NE '').CHFTRNM    Check number of sublists   05250000
&ERROR   SETB  1                                                        05300000
         MNOTE 8,'''FEATURE'' &ERRS(2)'      Issue Error Message        05350000
         AGO   .CHVALUE                      Go Check VALUE Keyword     05400000
.*                                                                      05450000
.CHFTRNM ANOP  ,                                                        05500000
         AIF   (N'&FEATURE EQ 1).CHFTROP     Check number of arguments  05550000
&ERROR   SETB  1                             Too many arguments         05600000
         MNOTE 8,'''FEATURE'' &ERRS(3)'      Issue Error Message        05650000
         AGO   .CHVALUE                      Go Check VALUE Keyword     05700000
.CHFTROP ANOP  ,                             Check operand value        05750000
         AIF   ('&FEATURE' EQ 'CRYPTO').CHVALUE    Feature Must be      05800000
.*                                                  CRYPTO              05850000
&ERROR   SETB  1                                                        05900000
         MNOTE 8,'''&FEATURE(1)'' &ERRS(4)'  Issue Error Message        05950000
.*                                                                      06000000
.********************************************************************** 06050000
.*                                                                    * 06100000
.*                 Ensure VALUE operand is present                    * 06150000
.*                                                                    * 06200000
.********************************************************************** 06250000
.*                                                                      06300000
.CHVALUE ANOP  ,                                                        06350000
         AIF   ('&VALUE' NE '').CHVALNM      Ensure VALUE operand       06400000
.*                                            is present                06450000
&ERROR   SETB  1                                                        06500000
         MNOTE 8,'''VALUE'' &ERRS(2)'        Issue Error Message        06550000
         AGO   .CFORERR                                                 06600000
.*                                                                      06650000
.CHVALNM ANOP  ,                                                        06700000
         AIF   (N'&VALUE EQ 1).CHVALRG       VALUE must have 1 arg      06750000
&ERROR   SETB  1                                                        06800000
         MNOTE 8,'''VALUE'' &ERRS(3)'        Issue Error Message        06850000
         AGO   .CFORERR                                                 06900000
.CHVALRG ANOP  ,                             VALUE must not be REG      06950000
         AIF   ('&VALUE'(1,1) NE '(').CFORERR  Check for Register       07000000
.*                                              Notation                07050000
&ERROR   SETB  1                                                        07100000
         MNOTE 8,'''VALUE'' &ERRS(5)'        Issue Error Message        07150000
.CFORERR ANOP  ,                             Check for any errors       07200000
         AIF   ('&ERROR' NE '1').NOERRS      If any errors found, exit  07250000
         MEXIT                                                          07300000
.*                                                                      07350000
.NOERRS  ANOP  ,                                                        07400000
         AIF   ('&FEATURE' EQ 'CRYPTO').CRYPTO  If crypto request...    07450000
         MEXIT                                                          07500000
.*                                                                      07550000
.* Set Register 0 to 0 to indicate Feature=Crypto                       07600000
.*                                                                      07650000
.*                                                                      07700000
.CRYPTO  ANOP  ,                                                        07750000
         SLR   0,0                  SET REG 0 TO 0 INDICATING CRYPTO    07800000
.GENCODE ANOP  ,                                                        07850000
         L     1,&VALUE             LOAD REG 1 WITH VALUE TO ADD        07900000
.********************************************************************** 07950000
.*       Generate interface code                                      * 08000000
.********************************************************************** 08050000
.*  Reg 15 must be used an an index register in case issuer is in       08100000
.*   AR mode.                                                           08150000
         L     15,2892(0,0)         GET SVT ADDRESS                     08200000
         L     15,620(15,0)         GET SERVICE ROUTINE ADDRESS         08250000
.*                                                                      08300000
.********************************************************************** 08350000
.*   If invoker in AR Mode, generate SACs around Call to IEAVEFCT       08400000
.********************************************************************** 08450000
.*                                                                      08500000
         AIF ('&SYSASCE' NE 'AR').PRIM                                  08550000
         SAC   0                    SAC TO PRIMARY                      08600000
         BALR  14,15                BRANCH TO SERVICE ROUTINE           08650000
         SAC   512                  SAC BACK TO AR MODE                 08700000
         MEXIT                                                          08750000
.*                                                                      08800000
.*                                                                      08850000
.PRIM    ANOP  ,                    INVOKER IN PRIMARY MODE             08900000
         BALR  14,15                BRANCH TO SERVICE ROUTINE           08950000
         MEXIT                                                          09000000
         MEND                                                           09050000
* */                                                                    09100000
*@EJECT;                                                                09150000
*%IEAMFCNT:                                                             09200000
*        MACRO KEYS(FEATURE,VALUE);                                     09250000
*/********************************************************************/ 09300000
*/*                Define external macro variables                   */ 09350000
*/********************************************************************/ 09400000
*                                                                       09450000
* DECLARE                                                               09500000
*   EHAREGS   CHARACTER EXT; /* Contains declared register numbers.  */ 09550000
*                                                                       09600000
*/********************************************************************/ 09650000
*/*                Define internal macro variables                   */ 09700000
*/********************************************************************/ 09750000
*                                                                       09800000
* DECLARE CC       FIXED;    /* Starting column for PL/AS comments   */ 09850000
* DECLARE ERRS(20) CHAR;     /* Error Message Array.                 */ 09900000
* DECLARE ERRMSG   CHAR;     /* Comment for error messages.          */ 09950000
* DECLARE IMACRO   CHAR;     /* Macro Parameters.                    */ 10000000
* DECLARE MPREFIX  CHAR;     /* Message Prefix.                      */ 10050000
* DECLARE IVRC     FIXED;    /* Return code to determine if text will   10100000
*                               be generated.                        */ 10150000
* DECLARE INCMNT FIXED;      /* Indent Value for Errors.             */ 10200000
* DECLARE INDENT FIXED;      /* Indent Value for Listing.            */ 10250000
* DECLARE SERVICE  CHAR;     /* Service Indicator.                   */ 10300000
*                                                                       10350000
*/********************************************************************/ 10400000
*/*                Initialize internal macro variables               */ 10450000
*/********************************************************************/ 10500000
*                                                                       10550000
* INCMNT = MACLMAR;                 /* Indent for Error Comments.    */ 10600000
* INDENT = MACCOL + 2;              /* Indent two columns for format */ 10650000
* IVRC       = 0;            /* Set code to generate text.           */ 10700000
* MPREFIX    ='?IEAMFCNT -->'; /* Error Message Prefix.              */ 10750000
*IMACRO = '?'||MACNAME||' '||MACLIST||' '||MACKEYS||                    10800000
*         ' MACDATE(04/03/89)';    /* Set up Macro Invocation.      */  10850000
*ERRS(1)=' EXCESSIVE POSITIONAL PARAMETERS.';                           10900000
*ERRS(2)=/*keyword*/ 'KEYWORD IS REQUIRED BUT NOT SPECIFIED.';          10950000
*ERRS(3)=/*keyword*/ 'KEYWORD HAS TOO MANY SUBLISTS SPECIFIED.';        11000000
*ERRS(4)=/*FEATURE(1)*/ 'IS AN INVALID VALUE FOR FEATURE KEYWORD.';     11050000
*ERRS(5)=/*keyword*/ 'KEYWORD MUST HAVE ONE ARGUMENT.';                 11100000
*ERRS(6)=' ERRORS ENCOUNTERED; NO CODE GENERATED.';                     11150000
*ANS(MACLABEL);                     /* Put Out Label.                */ 11200000
*ANS('BEGIN;'||COMMENT(IMACRO)) COL(MACLMAR);   /* List Macro Parms. */ 11250000
*                                                                       11300000
*/********************************************************************  11350000
*                                                                    *  11400000
*                     Validate Macro Invocation.                     *  11450000
*                                                                    *  11500000
**********************************************************************/ 11550000
*                                                                       11600000
*IF (NUMBER(MACLIST) ^= 0) THEN     /* If there were any positional     11650000
*                                      parameters...                 */ 11700000
* DO;                                                                   11750000
*  ERRMSG = MPREFIX||ERRS(1);       /* Set Error Message.            */ 11800000
*  ANS MSG(ERRMSG) NORESCAN;                                            11850000
*  ANS (COMMENT(ERRMSG)) COL(INCMNT);                                   11900000
*  IVRC = 8;                        /* Set Error Flag.               */ 11950000
* END;                                                                  12000000
*                                                                       12050000
*/********************************************************************/ 12100000
*/*                Process FEATURE keyword                           */ 12150000
*/********************************************************************/ 12200000
*                                                                       12250000
* IF FEATURE ^= ''           /* FEATURE SPECIFIED?                   */ 12300000
*   THEN DO;                 /* Yes - add keyword to comment         */ 12350000
*     IF FEATURE(1) ^= ''    /* Was argument specified?              */ 12400000
*       THEN DO;             /* Yes - FEATURE(1) specified           */ 12450000
*         IF NUMBER(FEATURE) > 1 /* Too many FEATURE arguments?      */ 12500000
*           THEN DO;         /* Yes - issue message                  */ 12550000
*             ERRMSG = MPREFIX||'''FEATURE'' '||ERRS(3);                12600000
*             ANS MSG(ERRMSG) NORESCAN;                                 12650000
*             ANS(COMMENT(ERRMSG)) COL(INCMNT);                         12700000
*             IVRC = 8;      /* Kill text generation                 */ 12750000
*           END;             /* NUMBER(FEATURE) > 1                  */ 12800000
*         IF (FEATURE(1) ^= 'CRYPTO') THEN DO;                          12850000
*          ERRMSG = MPREFIX||''''||FEATURE(1)||''' '||ERRS(4);          12900000
*          ANS MSG(ERRMSG) NORESCAN;                                    12950000
*          ANS(COMMENT(ERRMSG)) COL(INCMNT);                            13000000
*          IVRC = 8;         /* Kill text generation                 */ 13050000
*       END;                 /* FEATURE(1) specified                 */ 13100000
*       END;                 /* FEATURE specified                    */ 13150000
*       ELSE DO;             /* No argument - issue message          */ 13200000
*         ERRMSG = MPREFIX||'''FEATURE'' '||ERRS(5);                    13250000
*         ANS MSG(ERRMSG) NORESCAN;                                     13300000
*         ANS(COMMENT(ERRMSG)) COL(INCMNT);                             13350000
*         IVRC = 8;          /* Kill text generation                 */ 13400000
*       END;                 /* No FEATURE argument                  */ 13450000
*   END;                     /* FEATURE keyword specified            */ 13500000
*   ELSE DO;                 /* FEATURE not specified                */ 13550000
*     ERRMSG = MPREFIX||'''FEATURE'' '||ERRS(2);                        13600000
*     ANS MSG(ERRMSG) NORESCAN;                                         13650000
*     ANS(COMMENT(ERRMSG)) COL(INCMNT);                                 13700000
*     IVRC = 8;              /* Kill text generation                 */ 13750000
*   END;                     /* FEATURE not specified                */ 13800000
*                                                                       13850000
*/********************************************************************/ 13900000
*/*                Process VALUE Keyword                             */ 13950000
*/********************************************************************/ 14000000
*                                                                       14050000
* IF VALUE  ^= ''            /* VALUE specified?                     */ 14100000
*   THEN DO;                                                            14150000
*     IF VALUE(1) ^= ''      /* Was argument specified?              */ 14200000
*       THEN DO;             /* Yes - RC(1) specified                */ 14250000
*         IF NUMBER(VALUE) > 1  /* Too many VALUE arguments?         */ 14300000
*           THEN DO;         /* Yes - issue message                  */ 14350000
*             ERRMSG = MPREFIX||'''VALUE'' '||ERRS(3);                  14400000
*             ANS MSG(ERRMSG) NORESCAN;                                 14450000
*             ANS(COMMENT(ERRMSG)) COL(INCMNT);                         14500000
*             IVRC = 8;      /* Kill text generation.                */ 14550000
*           END;             /* NUMBER(VALUE) > 1                    */ 14600000
*         END;               /* No VALUE argument                    */ 14650000
*     ELSE                                                              14700000
*       DO;                  /* No arguments specified.              */ 14750000
*         ERRMSG = MPREFIX||'''VALUE'' '||ERRS(5);                      14800000
*         ANS MSG(ERRMSG) NORESCAN;                                     14850000
*         ANS (COMMENT(ERRMSG)) COL(INCMNT);                            14900000
*         IVRC = 8;          /* Kill text generation.                */ 14950000
*       END;                 /* No arguments specified.              */ 15000000
*   END;                     /* VALUE specified                      */ 15050000
* ELSE                                                                  15100000
*   DO;                      /* VALUE keyword not Specified.         */ 15150000
*     ERRMSG = MPREFIX||'''VALUE'' '||ERRS(2);                          15200000
*     ANS MSG(ERRMSG) NORESCAN;                                         15250000
*     ANS (COMMENT(ERRMSG)) COL(INCMNT);                                15300000
*     IVRC = 8;              /* Kill text generation.                */ 15350000
*   END;                     /* VALUE keyword not Specified.         */ 15400000
*                                                                       15450000
*/********************************************************************/ 15500000
*/*                Determine if text should be produced              */ 15550000
*/********************************************************************/ 15600000
*                                                                       15650000
* IF IVRC > 4                /* Any severe errors?                   */ 15700000
*   THEN DO;                 /* Yes -                                */ 15750000
*     ERRMSG = MPREFIX||ERRS(6);                                        15800000
*           ANS MSG(ERRMSG) NORESCAN;                                   15850000
*           ANS(COMMENT(ERRMSG)) COL(INCMNT);                           15900000
*     GOTO LHA09000;         /*       EXIT - no text produced.       */ 15950000
*     END;                                                              16000000
*                                                                       16050000
*/********************************************************************/ 16100000
*/*                Define register names                             */ 16150000
*/********************************************************************/ 16200000
*                                                                       16250000
* IF INDEX(EHAREGS,'00F')=0  /* Register 0 previously defined?       */ 16300000
*   THEN                     /* No  -                                */ 16350000
*     EHAREGS=EHAREGS||'00F';/*       Define it.                     */ 16400000
* IF INDEX(EHAREGS,'01F')=0  /* Register 1 previously defined?       */ 16450000
*   THEN                     /* No  -                                */ 16500000
*     EHAREGS=EHAREGS||'01F';/*       Define it.                     */ 16550000
* IF INDEX(EHAREGS,'15P')=0  /* Fixed Reg 15 previously defined?     */ 16600000
*   THEN                     /* No  -                                */ 16650000
*     EHAREGS=EHAREGS||'15P';/*       Define it.                     */ 16700000
*                                                                       16750000
*/********************************************************************/ 16800000
*/*       Set Service Variable to Feature Selected.                  */ 16850000
*/********************************************************************/ 16900000
*                                                                       16950000
*                                                                       17000000
* IF (FEATURE(1) = 'CRYPTO')                                            17050000
*   THEN                                                                17100000
*     SERVICE = '0';         /* Set SERVICE indicator to 0.          */ 17150000
*                                                                       17200000
*/********************************************************************/ 17250000
*/*                Generate linkage to IEAVFCNT Service              */ 17300000
*/********************************************************************/ 17350000
*                                                                       17400000
* ANS('DCL IEAMFCNT_PSASVT PTR(31) LOCATION(2892);')                    17450000
*                  SKIP COL(INDENT);             /*              @P1A*/ 17500000
* ANS('RESPECIFY') SKIP COL(INDENT);                                    17550000
* ANS('(GPR00F,')  SKIP COL(INDENT);                                    17600000
* ANS(' GPR01F,')  SKIP COL(INDENT);                                    17650000
* ANS(' GPR15P) RESTRICTED;') SKIP COL(INDENT);                         17700000
*  /* Set up Register 15 for call to module */                          17750000
*                                                                       17800000
* ANS('GPR00F = '|| SERVICE ||'; '||                                    17850000
*   COMMENT('SELECT PROPER FEATURE')) SKIP COL(INDENT);                 17900000
* ANS('GPR01F = '|| VALUE(1) ||'; '||                                   17950000
*   COMMENT('STORE INCREMENT VALUE IN REG 1')) SKIP COL(INDENT);        18000000
* ANS('GPR15P = ((IEAMFCNT_PSASVT)+620)->I031P; '||                     18050000
*   COMMENT('GET SERVICE ROUTINE ADDRESS')) SKIP COL(INDENT)            18100000
*   NORESCAN;                                  /*                @P1C*/ 18150000
*                                                                       18200000
*/********************************************************************/ 18250000
*/*                Call service routine                              */ 18300000
*/********************************************************************/ 18350000
*                                                                       18400000
* ANS('CALL GPR15P->I31ANY; '|| COMMENT('CALL SERVICE ROUTINE'))        18450000
*    SKIP COL(INDENT);                                                  18500000
* ANS('RESPECIFY') SKIP COL(INDENT);                                    18550000
* ANS('(GPR00F,') SKIP COL(INDENT);                                     18600000
* ANS(' GPR01F,') SKIP COL(INDENT);                                     18650000
* ANS(' GPR15P) UNRESTRICTED; ') SKIP COL(INDENT);                      18700000
*                                                                       18750000
*/********************************************************************/ 18800000
*/*                Close out BEGIN group and return                  */ 18850000
*/********************************************************************/ 18900000
*                                                                       18950000
*LHA09000:                   /* Close out BEGIN group.               */ 19000000
*ANS (' END; '||COMMENT(IMACRO)) COL(MACCOL); /* LIST MACRO PARMS.   */ 19050000
* RETURN CODE(IVRC);                                                    19100000
*                                                                       19150000
* % END IEAMFCNT;                                                       19200000
