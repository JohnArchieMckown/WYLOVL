*/***************   START  OF  SPECIFICATIONS   **********************/         
*/*                                                                  */         
*/*01* MODULE-NAME  -  DEFSERV                                       */         
*/*                                                                  */         
*/*                                                                  */         
*/*01* DESCRIPTIVE-NAME                                              */         
*/*                                                                  */         
*/*           MVS Enhanced Connectivity Facility Define Server Macro */         
*/*                                                                  */         
*/***PROPRIETARY_STATEMENT********************************************/         
*/*01* PROPRIETARY STATEMENT=                                        */         
*/*                                                                  */         
*/*                                                                  */         
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */         
*/* THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      */         
*/* 5685-025 (C) COPYRIGHT IBM CORP. 1986, 1989                      */         
*/* SEE COPYRIGHT INSTRUCTIONS                                       */         
*/*                                                                  */         
*/* STATUS= JTE21X2                                                  */         
*/*                                                                  */         
*/***END_OF_PROPRIETARY_STATEMENT*************************************/         
*/*                                                                  */         
*/*01* FUNCTION                                                      */         
*/*                                                                  */         
*/*            DEFSERV is used in order to define "servers" to       */         
*/*            MVS Enhanced Connectivity Facility. It can be issued  */         
*/*            by either:                                            */         
*/*                                                                  */         
*/*              1) The server task initialization/termination       */         
*/*                 program.                                         */         
*/*                                                                  */         
*/*              2) A server.                                        */         
*/*                                                                  */         
*/*              3) A service function within a server.              */         
*/*                                                                  */         
*/*                                                                  */         
*/*            DEFSERV generates code to:                            */         
*/*                                                                  */         
*/*              1) Initialize a CPRB with the required fields to    */         
*/*                 represent a "Define Server" request.             */         
*/*              2) Initialize the CPRB PLIST area.                  */         
*/*              3) Set up the required parameter list.              */         
*/*              4) Invoke the Enhanced Connectivity Facility router */         
*/*                                                                  */         
*/*                                                                  */         
*/*  02* RECOVERY OPERATION                                          */         
*/*          The recovery that is set up by the issuing program      */         
*/*          will receive control in the event of an abnormal        */         
*/*          termination. If no recovery has been established,       */         
*/*          the MVS Enhanced Connectivity Facility Recovery Manager */         
*/*          (CHSTREC) will receive control.                         */         
*/*                                                                  */         
*/*01* NOTES                                                         */         
*/*                                                                  */         
*/*                                                                  */         
*/*  02* DEPENDENCIES                                                */         
*/*                                                                  */         
*/*          - The issuing program must include the mapping          */         
*/*            for a CPRB.                                           */         
*/*          - The issuing program must have GETMAINED storage       */         
*/*            for a CPRB that begins on a fullword boundary.        */         
*/*          - The issuing program must set Register 13 to point     */         
*/*            to a standard 18 word savearea prior to invoking      */         
*/*            DEFSERV.                                              */         
*/*          - In PL/AS (or PL/S), the issuing program must DECLARE  */         
*/*            the CED as PTR(31).                                   */         
*/*                                                                  */         
*/*                                                                  */         
*/*  02* RESTRICTIONS                                                */         
*/*                                                                  */         
*/*            NONE                                                  */         
*/*                                                                  */         
*/*  02* REGISTER-CONVENTIONS                                        */         
*/*                                                                  */         
*/*            Registers 0,1,14, and 15 will be modified by DEFSERV  */         
*/*                                                                  */         
*/*01* MODULE-TYPE                                                   */         
*/*                                                                  */         
*/*            Executable MACRO                                      */         
*/*                                                                  */         
*/*  02* PROCESSOR                                                   */         
*/*                                                                  */         
*/*            PL/AS, PL/S, or Assembler                             */         
*/*                                                                  */         
*/*                                                                  */         
*/*01* INPUT                                                         */         
*/*                                                                  */         
*/*    The issuing program must:                                     */         
*/*                                                                  */         
*/*    1) Set Register 13 to point to a standard 18 word save area   */         
*/*                                                                  */         
*/*                                                                  */         
*/*01* INVOCATION                                                    */         
*/*                                                                  */         
*/*    PL/AS (or PL/S):                                              */         
*/*                                                                  */         
*/*       - For the Execute form, all parameters are required        */         
*/*         keyword parameters:                                      */         
*/*                                                                  */         
*/*        ?label:  DEFSERV  CPRB (cprb name)                        */         
*/*                          CPRB ((cprb address))                   */         
*/*                                                                  */         
*/*                          CED (ced name)                          */         
*/*                          CED ((ced address))                     */         
*/*                                                                  */         
*/*                          SERVNAME (server name)                  */         
*/*                                                                  */         
*/*                          SERVEPA  (server entry point label)     */         
*/*                          SERVEPA  ((server entry point addr))    */         
*/*                                                                  */         
*/*                          SERVPARM (server parameter name)        */         
*/*                          SERVPARM ((server parameter addr))      */         
*/*                                                                  */         
*/*                          MF (E,parmlist name);                   */         
*/*                                                                  */         
*/*        - For the List form, a label and the MF keyword are both  */         
*/*          required:                                               */         
*/*                                                                  */         
*/*         ?label:  DEFSERV MF(L);                                  */         
*/*                                                                  */         
*/*        PARAMETER   MEANING                                       */         
*/*        ---------   -------                                       */         
*/*                                                                  */         
*/*        CPRB        This parameter specifies the PL/AS name       */         
*/*                    or address of the CPRB.                       */         
*/*                                                                  */         
*/*        CED         This parameter specifies the PL/AS name       */         
*/*                    or address of the CED that was passed to      */         
*/*                    the issuing program as a parameter.           */         
*/*                                                                  */         
*/*        SERVNAME    This is a CHAR(8) PL/AS variable that         */         
*/*                    contains the name of the SERVER being defined */         
*/*                    DEFSERV macro places this name into the       */         
*/*                    CRBSNAME field of the CPRB.                   */         
*/*                                                                  */         
*/*        SERVEPA     This contains the entry label or entry        */         
*/*                    point address of the server being defined.    */         
*/*                                                                  */         
*/*        SERVPARM    This contains the name or address of          */         
*/*                    the parameter that is to be passed to the     */         
*/*                    server when it is invoked.                    */         
*/*                                                                  */         
*/*        MF(E,parmlist name)                                       */         
*/*                     This parameter specifies the name of a five  */         
*/*                     word area that contains:                     */         
*/*                                                                  */         
*/*                     1) The Enhanced Connectivity Facility        */         
*/*                        server parameter list.                    */         
*/*                                                                  */         
*/*                     2) The "Define server parameter area" that   */         
*/*                        is pointed to from the CPRB.              */         
*/*                                                                  */         
*/*                     ______________________                       */         
*/*                     |                    | <--                   */         
*/*                     |   CPRB  address    |   |------Enhanced     */         
*/*                     |                    |   |      Connectivity */         
*/*                     |--------------------|   |      Facility     */         
*/*                     |                    |   |      Server       */         
*/*                     |   CED   address    |   |      Parameter    */         
*/*                     |                    |   |      List         */         
*/*                     |--------------------| <--                   */         
*/*                     |--------------------| <--                   */         
*/*                     |                    |   |                   */         
*/*                     |   Server  EPA      |   |                   */         
*/*                     |                    |   |                   */         
*/*                     |--------------------|   |                   */         
*/*                     |                    |   |----- Define       */         
*/*                     |   Server Parameter |   |      Server       */         
*/*                     |                    |   |      Parameter    */         
*/*                     |--------------------|   |      area         */         
*/*                     |                    |   |                   */         
*/*                     |   ** Reserved **   |   |                   */         
*/*                     |                    |   |                   */         
*/*                     |--------------------| <--                   */         
*/*                                                                  */         
*/*                                                                  */         
*/*                     The execute form of the DEFSERV macro        */         
*/*                     expansion places the address of the CPRB and */         
*/*                     CED into the Enhanced Connectivity Facility  */         
*/*                     parameter list, and the server entry point   */         
*/*                     address and server parameter pointer into    */         
*/*                     the Define Server parameter area.            */         
*/*                                                                  */         
*/*        MF(L)                                                     */         
*/*                     This parameter generates a DECLARE for five  */         
*/*                     fullwords of storage to contain both the     */         
*/*                     Enhanced Connectivity Facility parameter     */         
*/*                     list (two fullwords) and the Define Server   */         
*/*                     parameter area (three fullwords). The        */         
*/*                     issuing program should GETMAIN storage to    */         
*/*                     contain this list in order to maintain       */         
*/*                     program reentrancy.                          */         
*/*                                                                  */         
*/*                                                                  */         
*/*    Assembler:                                                    */         
*/*                                                                  */         
*/*       - For the Execute form, all parameters are required        */         
*/*         keyword parameters:                                      */         
*/*                                                                  */         
*/*    label  DEFSERV  CPRB=addr,                                    */         
*/*                    CED=addr,                                     */         
*/*                    SERVNAME=name,                                */         
*/*                    SERVEPA=addr,                                 */         
*/*                    SERVPARM=addr,                                */         
*/*                    MF=(E,parmlist name)                          */         
*/*                    or (E,(reg))                                  */         
*/*                                                                  */         
*/*        - For the List form, a label and the MF keyword are both  */         
*/*          required:                                               */         
*/*                                                                  */         
*/*    label  DEFSERV  MF=L                                          */         
*/*                                                                  */         
*/*                                                                  */         
*/*                                                                  */         
*/*        PARAMETER    MEANING                                      */         
*/*        ---------    -------                                      */         
*/*        CPRB=addr    This parameter specifies the address of      */         
*/*                     the CPRB that describes the desired          */         
*/*                     service function.                            */         
*/*                                                                  */         
*/*                     The address may be any address valid         */         
*/*                     in an RX instruction or the number of        */         
*/*                     one of the general registers 2-12            */         
*/*                     enclosed in parentheses.                     */         
*/*                                                                  */         
*/*        CED=addr     This parameter specifies the address of the  */         
*/*                     CED that was passed to the issuing program   */         
*/*                     as a parameter.                              */         
*/*                                                                  */         
*/*                     The address may be any address valid         */         
*/*                     in an RX instruction or the number of        */         
*/*                     one of the general registers 2-12            */         
*/*                     enclosed in parentheses.                     */         
*/*                                                                  */         
*/*        SERVNAME=name                                             */         
*/*                     This is the name of the server being         */         
*/*                     defined. The DEFSERV macro places this       */         
*/*                     name in the 'CRBSNAME' field of the CPRB.    */         
*/*                                                                  */         
*/*                     A general register 2-12 can also be used     */         
*/*                     to specify the address of an 8 byte          */         
*/*                     field that contains the server name if       */         
*/*                     the register number is enclosed in           */         
*/*                     parentheses.                                 */         
*/*                                                                  */         
*/*        SERVEPA=addr                                              */         
*/*                     This is the entry point address of the       */         
*/*                     server being defined.                        */         
*/*                                                                  */         
*/*                     The address may be any address valid         */         
*/*                     in an RX instruction or the number of        */         
*/*                     one of the general registers 2-12            */         
*/*                     enclosed in parentheses.                     */         
*/*                                                                  */         
*/*        SERVPARM=addr                                             */         
*/*                     This is the parameter (if any) that is to be */         
*/*                     passed to the server when it is invoked.     */         
*/*                     If no parmlist is desired, code              */         
*/*                     SERVPARM = 0.                        @YA19155*/         
*/*                                                                  */         
*/*                     The address may be any address valid         */         
*/*                     in an RX instruction or the number of        */         
*/*                     one of the general registers 2-12            */         
*/*                     enclosed in parentheses.                     */         
*/*                                                                  */         
*/*        MF=(E,parmlist name)                                      */         
*/*                     This parameter specifies the name of a five  */         
*/*                     word area that contains:                     */         
*/*                                                                  */         
*/*                     1) The Enhanced Connectivity Facility        */         
*/*                        server parameter list.                    */         
*/*                                                                  */         
*/*                     2) The "Define server parameter area" that   */         
*/*                        is pointed to from the CPRB.              */         
*/*                                                                  */         
*/*                     The execute form of the DEFSERV macro        */         
*/*                     expansion places the address of the CPRB and */         
*/*                     CED into the Enhanced Connectivity Facility  */         
*/*                     parameter list, and the server entry point   */         
*/*                     address and server parameter pointer into    */         
*/*                     the Define Server parameter area.            */         
*/*                                                                  */         
*/*                                                                  */         
*/*        MF=L                                                      */         
*/*                     This parameter generates a DSECT for five    */         
*/*                     fullwords of storage to contain both the     */         
*/*                     Enhanced Connectivity Facility parameter     */         
*/*                     list (two fullwords) and the Define server   */         
*/*                     parameter area (three fullwords). The        */         
*/*                     issuing program should GETMAIN storage       */         
*/*                     to contain this list in order to maintain    */         
*/*                     reentrancy.                                  */         
*/*                                                                  */         
*/*01* DEFSERV PROCESSING                                            */         
*/*                                                                  */         
*/*      The DEFSERV macro expands to generate the following:        */         
*/*                                                                  */         
*/*      LIST FORM:                                                  */         
*/*            Generate a DSECT (or PL/S - PL/AS structure) to map   */         
*/*            the five word parameter areas as described under      */         
*/*            "INVOCATION".                                         */         
*/*                                                                  */         
*/*      EXECUTE FORM:                                               */         
*/*            Generates executable code to:                         */         
*/*                                                                  */         
*/*            1) Fill in the following fields in the CPRB:          */         
*/*                                                                  */         
*/*               CRBF1     - Set to the CPRB version number         */         
*/*                                                                  */         
*/*               CRBF4     - Set to the request type (X'03'         */         
*/*                           represents a "Define Server" request)  */         
*/*                                                                  */         
*/*               CPRBCPRB  - EBCDIC self identifier, set to "CPRB"  */         
*/*                                                                  */         
*/*               CRBSNAME  - Sets to eight character server name    */         
*/*                           specified on "SERVNAME" parameter      */         
*/*                                                                  */         
*/*               CRBRQPLN  - Set to the length of the "Define       */         
*/*                           Server Parameter Area" (12 bytes)      */         
*/*                                                                  */         
*/*               CRBRQPRM  - Set to address of the "Define          */         
*/*                           Server Parameter Area"                 */         
*/*                                                                  */         
*/*            2) Build the Enhanced Connectivity Facility           */         
*/*               server parameter list:                             */         
*/*                                                                  */         
*/*               Set parameter 1 to the 'CPRB' address              */         
*/*               Set parameter 2 to the 'CED'  address              */         
*/*                                                                  */         
*/*            3) Build the Define server parameter area:            */         
*/*                                                                  */         
*/*               Set parameter 1 to the server EPA address          */         
*/*                   as specified on the SERVEPA parameter.         */         
*/*               Set parameter 2 to the server parameter pointer    */         
*/*                   as specified on the SERVPARM parameter.        */         
*/*               Set parameter 3 to 'ZERO'                          */         
*/*                                                                  */         
*/*            4) Invoke Enhanced Connectivity Facility using        */         
*/*               the EPA address in the 'CED'                       */         
*/*                                                                  */         
*/*01* OUTPUT                                                        */         
*/*                                                                  */         
*/*                                                                  */         
*/*       RETURN CODE:                                               */         
*/*                                                                  */         
*/*          - When the DEFSERV macro returns control to the         */         
*/*            invoker, the return code from Enhanced Connectivity   */         
*/*            facility is propagated via Register 15. This return   */         
*/*            code should be inspectec before any CPRB, PLIST, or   */         
*/*            data area is used:                                    */         
*/*                                                                  */         
*/*                                                                  */         
*/*01* CHANGE-ACTIVITY                                               */         
*/*                                                                  */         
*/*            A0000000-A9999999                            @E2369I5 */         
*/*                                                                  */         
*/*    PCW0015 - Incorrect message output when MF keyword is         */         
*/*              missing.                                    @PCW0015*/         
*/*                                                                  */         
*/*    PCW0040 - Added support for register format on CPRB,  @PCW0040*/         
*/*              CED, SERVPARM, SERVEPA, and SERVNAME keys   @PCW0040*/         
*/*              in assembler portion.                       @PCW0040*/         
*/*                                                                  */         
*/*    PCW0045 - On register form of CED key (PL/AS portion) @PCW0045*/         
*/*              the CED address is stored into DFS0001      @PCW0045*/         
*/*              instead of DFS0002 causing the invoking     @PCW0045*/         
*/*              init/term program to ABEND.                 @PCW0045*/         
*/*                                                                  */         
*/*    PCW0048 - Too many levels of indirection (assembler)  @PCW0048*/         
*/*              on CED, CPRB, etc., before calling router.  @PCW0048*/         
*/*              If register form is NOT used, a LA instr.   @PCW0048*/         
*/*              is generated instead of a L.                @PCW0048*/         
*/*                                                                  */         
*/*    TCW0038 - Change CPS to Enhanced Connectivity Facility@TCW0048*/         
*/*                                                                  */         
*/*    PD70101 - Change generated code to column 10, not MACCOL.     */         
*/*              MACCOL causes generated code to be placed in the    */         
*/*              same column as the macro was invoked in, which      */         
*/*              causes errors during assembly, since comments       */         
*/*              may overflow to next line. (PL/AS only).    @PD70101*/         
*/*                                                                  */         
*/*    OY17155 - Change generated assembler code overflow comments   */         
*/*              to begin in MACGLMAR instead of column one.  PLAS   */         
*/*              version only.                               @YA17155*/         
*/*                                                                  */         
*/*    OY19155 - Added SERVPARM=0 support on SERVPARM key.           */         
*/*              (assembler version only)                    @YA19155*/         
*/*                                                                  */         
*/*    OY46631 - Fixed copyright data in error               @YA46631*/         
*/*                                                                  */         
*/***************   END  OF  SPECIFICATIONS   ************************/         
*/********** -Start of DEFSERV  - ASSEMBLER MACRO ****************              
         MACRO                                                                  
&LABEL   DEFSERV &CPRB=,&CED=,&SERVNAME=,&SERVEPA=,&SERVPARM=,&MF=              
.*                                                                              
.********************************************************************           
.*   Assembler generation                                                       
.********************************************************************           
.*                                                                              
.*                                                                              
.* ******************************************************************           
.*   DEFINE LOCAL VARIABLES                                                     
.* ******************************************************************           
.*                                                                              
            LCLA  &MACRET,&LGTH                                                 
            LCLC  &MFREG      Register form used on MF                          
&MACRET     SETA  0           *** ASSUME NO ERRORS                              
.********************************************************************           
.*                                                                              
.*  Validate the MF= parameter                                                  
.*                                                                              
.*      - Insure MF parameter is supplied                      @PCW0015         
.*      - Check number of positionals                                           
.*      - If more than 2 positionals specified,                                 
.*        - Issue appropriate message                                           
.*        - Set macro return code to 8                                          
.*                                                                              
.********************************************************************           
            AIF   (N'&MF GT 0).OKMF0                          @PCW0015          
            MNOTE 8,'DFSV14 The MF key is required.'          @PCW0015          
&MACRET     SETA  8                                           @PCW0015          
            AGO   .VALCPRB                                                      
.OKMF0      ANOP                                              @PCW0015          
            AIF   (N'&MF LE 2).OKMF1                                            
            MNOTE 8,'DFSV02 The MF key is invalid.'                             
&MACRET     SETA  8                                                             
.OKMF1      ANOP                                                                
.********************************************************************           
.*                                                                              
.*  IF MF=L specified,                                                          
.*      - IF label specified,                                                   
.*         - Output the define storage for the parameter lists.                 
.*      - else (no label)                                                       
.*         - Issue appropriate error message and terminate expansion            
.*                                                                              
.********************************************************************           
            AIF   ('&MF(1)' NE 'L').VALMFE                                      
            AIF   ('&LABEL' EQ '').BADMF1                                       
&LABEL      DS    5F                 Define parameter lists.                    
            AGO   .ENDIT                                                        
.BADMF1     ANOP                                                                
            MNOTE 8,'DFSV01 A label must be specified when using MF=L.'         
&MACRET     SETA  8                                                             
            AGO   .ENDIT                                                        
.VALMFE     ANOP                                                                
.********************************************************************           
.*                                                                              
.*  IF MF=E specified,                                                          
.*       If parmlist not specified                                              
.*          Issue appropriate message                                           
.*       Else (continue validation)                                             
.*  else (MF parameter wrong)                                                   
.*       Issue appropriate message                                              
.*                                                                              
.********************************************************************           
            AIF   ('&MF(1)' NE 'E').BADMF2                                      
            AIF   (N'&MF EQ 2).VALCPRB                                          
            MNOTE 8,'DFSV03 The parmlist field is required for MF=E.'           
&MACRET     SETA  8                                                             
            AGO   .VALCPRB                                                      
.********************************************************************           
.*                                                                              
.*  If neither MF=E or MF=L specified, issue appropriate error message          
.*                                                                              
.********************************************************************           
.BADMF2     ANOP                                                                
            MNOTE 8,'DFSV02 The MF key is invalid.'                             
&MACRET     SETA  8                                                             
.*                                                                              
.VALCPRB    ANOP                                                                
.********************************************************************           
.*                                                                              
.*  Validate the CPRB=addr parameter                                            
.*                                                                              
.*      - If CPRB parameter not specified,                                      
.*        - Issue appropriate error message                                     
.*        - Set macro return code to 8                                          
.*        - Continue validation                                                 
.*                                                                              
.********************************************************************           
            AIF   (K'&CPRB(1) GT 0).OKCPRB1                                     
            MNOTE 8,'DFSV04 The CPRB macro key is required.'                    
&MACRET     SETA  8                                                             
            AGO .VALCED                                                         
.OKCPRB1    ANOP                                                                
.********************************************************************           
.*                                                                              
.*      - If more than 1 positional specified,                                  
.*        - Issue appropriate message                                           
.*        - Set macro return code to 8                                          
.*                                                                              
.********************************************************************           
            AIF   (N'&CPRB EQ 1).VALCED                                         
            MNOTE 8,'DFSV05 The CPRB macro key is invalid.'                     
&MACRET     SETA  8                                                             
.*                                                                              
.VALCED     ANOP                                                                
.********************************************************************           
.*                                                                              
.*  Validate the CED=addr parameter                                             
.*                                                                              
.*      - If CED parameter not specified,                                       
.*        - Issue appropriate error message                                     
.*        - Set macro return code to 8                                          
.*        - Continue validation                                                 
.*                                                                              
.********************************************************************           
            AIF   (K'&CED(1) GT 0).OKCED1                                       
            MNOTE 8,'DFSV06 The CED macro key is required.'                     
&MACRET     SETA  8                                                             
            AGO .VALNAME                                                        
.OKCED1     ANOP                                                                
.********************************************************************           
.*                                                                              
.*      - If more than 1 positional specified,                                  
.*        - Issue appropriate message                                           
.*        - Set macro return code to 8                                          
.*                                                                              
.********************************************************************           
            AIF   (N'&CED EQ 1).VALNAME                                         
            MNOTE 8,'DFSV07 The CED macro key is invalid.'                      
&MACRET     SETA  8                                                             
.*                                                                              
.VALNAME    ANOP                                                                
.********************************************************************           
.*                                                                              
.*  Validate the SERVNAME=addr parameter                                        
.*                                                                              
.*      - If SERVNAME parameter not specified,                                  
.*        - Issue appropriate error message                                     
.*        - Set macro return code to 8                                          
.*        - Continue validation                                                 
.*                                                                              
.********************************************************************           
            AIF   (K'&SERVNAME(1) GT 0).OKNAME1                                 
            MNOTE 8,'DFSV08 The SERVNAME macro key is required.'                
&MACRET     SETA  8                                                             
            AGO .VALEPA                                                         
.OKNAME1 ANOP                                                                   
.********************************************************************           
.*                                                                              
.*      - If more than 1 positional specified,                                  
.*        - Issue appropriate message                                           
.*        - Set macro return code to 8                                          
.*                                                                              
.********************************************************************           
            AIF   (N'&SERVNAME EQ 1).VALEPA                                     
            MNOTE 8,'DFSV09 The SERVNAME macro key is invalid.'                 
&MACRET     SETA  8                                                             
.*                                                                              
.VALEPA     ANOP                                                                
.********************************************************************           
.*                                                                              
.*  Validate the SERVEPA=addr parameter                                         
.*                                                                              
.*      - If SERVEPA parameter not specified,                                   
.*        - Issue appropriate error message                                     
.*        - Set macro return code to 8                                          
.*        - Continue validation                                                 
.*                                                                              
.********************************************************************           
            AIF   (K'&SERVEPA(1) GT 0).OKEPA1                                   
            MNOTE 8,'DFSV10 The SERVEPA macro key is required.'                 
&MACRET     SETA  8                                                             
            AGO .VALPARM                                                        
.OKEPA1 ANOP                                                                    
.********************************************************************           
.*                                                                              
.*      - If more than 1 positional specified,                                  
.*        - Issue appropriate message                                           
.*        - Set macro return code to 8                                          
.*                                                                              
.********************************************************************           
            AIF   (N'&SERVEPA EQ 1).VALPARM                                     
            MNOTE 8,'DFSV11 The SERVEPA macro key is invalid.'                  
&MACRET     SETA  8                                                             
.*                                                                              
.VALPARM    ANOP                                                                
.********************************************************************           
.*                                                                              
.*  Validate the SERVPARM=addr parameter                                        
.*                                                                              
.*      - If SERVPARM parameter not specified,                                  
.*        - Issue appropriate error message                                     
.*        - Set macro return code to 8                                          
.*                                                                              
.********************************************************************           
            AIF   (K'&SERVPARM(1) GT 0).OKPARM1                                 
            MNOTE 8,'DFSV12 The SERVPARM macro key is required.'                
&MACRET     SETA  8                                                             
            AGO .OKKEYS                                                         
.OKPARM1 ANOP                                                                   
.********************************************************************           
.*                                                                              
.*      - If more than 1 positional specified,                                  
.*        - Issue appropriate message                                           
.*        - Set macro return code to 8                                          
.*                                                                              
.********************************************************************           
            AIF   (N'&SERVPARM EQ 1).OKKEYS                                     
            MNOTE 8,'DFSV13 The SERVPARM macro key is invalid.'                 
&MACRET     SETA  8                                                             
.OKKEYS     ANOP                                                                
.********************************************************************           
.*                                                                              
.*                                                                              
.* All parameters have been validated.                                          
.*                                                                              
.* If any errors occurred, terminate expansion.                                 
.*                                                                              
.********************************************************************           
            AIF   (&MACRET GT 0).ENDIT                                          
.********************************************************************           
.*                                                                              
.*                                                                              
.*    If a label was specified,                                                 
.*                                                                              
.********************************************************************           
          AIF   (K'&LABEL EQ 0).LAB3                                            
.*                                                                              
.LAB2     ANOP                                                                  
&LABEL      DC    0H'0'       *** Output label                                  
.LAB3     ANOP                                                                  
.*                                                                              
.*    Check if register form used on MF parameter                               
.*                                                                              
          AIF   ('&MF(2)'(1,1) NE '(').NOTREG                                   
.*                                                                              
.*    Register form, extract the register                                       
.*                                                                              
&LGTH     SETA  K'&MF(2)-2                                                      
&MFREG    SETC  '&MF(2)'(2,&LGTH)                                               
          AGO   .DOCPRB                                                         
.*                                                                              
.*    Not register form                                                         
.*                                                                              
.NOTREG   ANOP                                                                  
&MFREG    SETC  ' '                                                             
&PARMREG  SETC  ' '                                                             
*                                                                               
*     Initialize the CPRB                                                       
*                                                                               
.DOCPRB   ANOP                                                                  
          MVI     CRBF1,CRBVERS           Set control block version id          
          MVI     CRBF4,CRBDFS            Set request type to:                  
*                                         "Define Server"                       
          MVC     CRBCPRB(4),=C'CPRB'     Set control block id                  
          AIF   ('&SERVNAME'(1,1) EQ '(').NAMER Check for reg  @PCW0040         
.*                                     form on CPRB key.       @PCW0040         
          MVC     CRBSNAME(8),&SERVNAME.  Set server name field                 
*                                         to name specified on                  
*                                         SERVNAME key.                         
          AGO     .NAMENR              Skip register form      @PCW0040         
.NAMER    ANOP                         Register form           @PCW0040         
          MVC     CRBSNAME(8),0&SERVNAME. Set server name field                 
*                                         to name specified on                  
*                                         SERVNAME key.        @PCW0040         
.NAMENR   ANOP                            Not register form    @PCW0040         
          LA      1,12                    Define server parameter               
*                                         length is 12 bytes                    
          ST      1,CRBRQPLN              Store length in CPRB                  
*                                                                               
*     Set define server parameter area address                                  
*                                                                               
          AIF     ('&MFREG' NE ' ').REGA Check for register form                
          LA      1,&MF(2).            Find beginning of parmlist               
          AGO     .REGB                                                         
.REGA     ANOP                         Register Form                            
          LR      1,&MFREG.            Find beginning of parmlist               
.REGB     ANOP                                                                  
          LA      0,8                  Offset of 8                              
          ALR     1,0                  Add offset to beginning                  
          ST      1,CRBRQPRM           Store address in CPRB                    
*                                                                               
*     Build Enhanced Connectivity Facility server parameter list                
*                                                                               
          AIF   ('&CPRB'(1,1) EQ '(').CPRBR  Check for reg     @PCW0040         
.*                                     form on CPRB key.       @PCW0040         
          L       0,&CPRB(1).          Get address of CPRB     @PCW0048         
          AGO     .CPRBNR              Skip register form      @PCW0040         
.CPRBR    ANOP                         Register form           @PCW0040         
          LR      0,&CPRB(1).          Get address of CPRB     @PCW0040         
.CPRBNR   AIF   ('&CED'(1,1) EQ '(').CEDR   Check for reg      @PCW0040         
.*                                     form on CED key.        @PCW0040         
          L       1,&CED(1).           Get address of CED      @PCW0048         
          AGO     .CEDNR               Skip register form      @PCW0040         
.CEDR     ANOP                         Register form           @PCW0040         
          LR      1,&CED(1).           Get address of CED      @PCW0040         
.CEDNR    AIF     ('&MFREG' NE ' ').REGC Check for register form                
          ST      0,&MF(2).+0          Store into parameter 1                   
          ST      1,&MF(2).+4          Store into parameter 2                   
          AGO     .REGD                                                         
.REGC     ANOP                         Register form                            
          ST      0,0(,&MFREG.)        Store into parameter 1                   
          ST      1,4(,&MFREG.)        Store into parameter 2                   
.REGD     ANOP                                                                  
*                                                                               
*     Build define server parameter area                                        
*                                                                               
          AIF   ('&SERVEPA'(1,1) EQ '(').EPAR Check for reg  @PCW0040           
.*                                     form on SERVEPA key.    @PCW0040         
          L       0,&SERVEPA(1).       Get EPA of server       @PCW0048         
          AGO     .EPANR               Skip register form      @PCW0040         
.EPAR     ANOP                         Register form           @PCW0040         
          LR      0,&SERVEPA(1).       Get EPA of server       @PCW0040         
.EPANR    AIF   ('&SERVPARM'(1,1) NE '0').PARMN0  Check for 0  @YA19155         
.*                                     on SERVPARM key.        @YA19155         
          LA      1,0                  Get server parameter    @YA19155         
          AGO     .PARMNR              Skip other forms        @YA19155         
.PARMN0   AIF   ('&SERVPARM'(1,1) EQ '(').PARMR Check for reg  @YA19155         
.*                                     form on SERVPARM key.   @PCW0040         
          L       1,&SERVPARM(1).      Get server parameter    @PCW0048         
          AGO     .PARMNR              Skip register form      @PCW0040         
.PARMR    ANOP                         Register form           @PCW0040         
          LR      1,&SERVPARM(1).      Get server parameter    @PCW0040         
.PARMNR   AIF     ('&MFREG' NE ' ').REGE Check for register form                
          ST      0,&MF(2).+8          Store EPA into          @PCW0040         
*                                      parameter 1             @PCW0040         
          ST      1,&MF(2).+12         Store server parm into  @PCW0040         
*                                      parameter 2             @PCW0040         
          SR      1,1                  Clear register 1                         
          ST      1,&MF(2).+16         Store into reserved field                
          LA      1,&MF(2).            Point to Enhanced Connectivity           
*                                      Facility server parameter list.          
          AGO     .REGF                                                         
.REGE     ANOP                         Register form                            
          ST      0,8(,&MFREG.)        Store EPA into          @PCW0040         
*                                      parameter 1             @PCW0040         
          ST      1,12(,&MFREG.)       Store server parm into  @PCW0040         
*                                      parameter 2             @PCW0040         
          SR      1,1                  Clear register 1                         
          ST      1,16(,&MFREG.)       Store into reserved field                
          LR      1,&MFREG.            Point to Enhanced Connectivity           
*                                      Facility server parameter list.          
.REGF     ANOP                                                                  
*                                                                               
*     Invoke Enhanced Connectivity Facility                                     
*                                                                               
          AIF   ('&CED'(1,1) EQ '(').CEDR2  Check for reg      @PCW0040         
.*                                     form on CED key.        @PCW0040         
          L       15,&CED(1).          Point to the CED                         
          AGO     .CEDNR2              Skip register form      @PCW0040         
.CEDR2    ANOP                         Register form           @PCW0040         
          LR      15,&CED(1).          Get address of CED      @PCW0040         
.CEDNR2   ANOP                         Not register form       @PCW0040         
          L      15,0(,15)             Point to entry point of Enhanced         
*                                      Connectivity Facility                    
          BALR   14,15                 Invoke Enhanced Connectivity             
*                                      Facility                                 
          SPACE 1                                                               
.ENDIT   ANOP                                                                   
         MEND                                                                   
.***  END OF DEFSERV ASSEMBLER MACRO*/                                          
*/*****************************************************************             
*                                                                               
*  START OF DEFSERV - PL/AS MACRO                                               
*                                                                               
*                                                                               
****/                                                                           
*%DEFSERV: MACRO KEYS(CPRB,CED,SERVNAME,SERVEPA,SERVPARM,MF);                   
*                                                                               
*/***************************************************************/              
*/* Declare macro variables.                                    */              
*/***************************************************************/              
*                                                                               
*  DCL RC    FIXED,             /* Macro compile return code    */              
*      TEXT  CHAR,              /* Used to print error messages */              
*      COM   CHAR,              /* Used to print comments       */              
*      TITLE CHAR;              /* DEFSERV head/tail comment field */           
*                                                                               
*  RC = 0;                      /* Initialize macro return code */              
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/* Set up DEFSERV head/tail comment field.                          */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*  TITLE = MACNAME || ' ' || MACLIST || ' ' || MACKEYS;                         
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/*     If MF=L specified,                                           */         
*/*           Output the DECLARE for the parameter list              */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*  IF MF(1) = 'L' THEN               /* If LIST form of macro                   
*                                       specified,               */             
*                                                                               
*     IF MACLABEL = '' THEN          /* Insure a label was                      
*                                       specified                */             
*                                                                               
*        DO;                         /* No, error.               */             
*           TEXT = 'DFSV01 A label must be specified when using MF(L).';        
*           ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;               
*           RC = 8;                                                             
*        END;                                                                   
*                                                                               
*     ELSE                           /* Label specified, generate               
*                                       DECLARE.                 */             
*        DO;                                                                    
*/********************************************************************/         
*/*                                                                  */         
*/*        Generate DECLARE for five full words of storage.          */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*         TITLE = MACLABEL || ' ' ||  TITLE;   /* Add label to                  
*                                                 title          */             
*         ANS(COMMENT(TITLE))                                                   
*             COL(MACCOL+2) NORESCAN;                                           
*                                                                               
*         ANS('DECLARE  1 ' || MACLABEL(1:LENGTH(MACLABEL)-1) || ',' ||         
*               COMMENT(TITLE))                                                 
*               COL(MACCOL);                                                    
*                                                                               
*          ANS('3 DFS0001 PTR(31),' ||                                          
*               COMMENT('CPRB address'))                                        
*               COL(MACCOL);                                                    
*                                                                               
*          ANS('3 DFS0002 PTR(31),' ||                                          
*               COMMENT('CED address'))                                         
*               COL(MACCOL);                                                    
*                                                                               
*          ANS('3 DFS0003 PTR(31),' ||                                          
*               COMMENT('Server EPA'))                                          
*               COL(MACCOL);                                                    
*                                                                               
*          ANS('3 DFS0004 PTR(31),' ||                                          
*               COMMENT('Server Parameter'))                                    
*               COL(MACCOL);                                                    
*                                                                               
*          ANS('3 DFS0005 PTR(31);' ||                                          
*               COMMENT('Reserved.'))                                           
*               COL(MACCOL);                                                    
*                                                                               
*        END;                                                                   
*                                                                               
*  ELSE                               /* MF not 'L'              */             
*/********************************************************************/         
*/*                                                                  */         
*/*     Insure MF key was specified.                         @PCW0015*/         
*/*     If MF=(E,parmlist name) specified, all other macro keys are  */         
*/*        validated. In this case, all macro keys are required.     */         
*/*                                                                  */         
*/********************************************************************/         
*     DO;                                                                       
*                                                                               
*  IF NUMBER(MF) = 0 THEN            /* Insure required MF key                  
*                                       specified       @PCW0015 */             
*                                                                               
*     DO;                            /* No, error.      @PCW0015 */             
*        TEXT = 'DFSV14 The MF key is required.'; /*    @PCW0015 */             
*        ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN; /*               
*                                                       @PCW0015 */             
*        RC = 8;                                  /*    @PCW0015 */             
*     END;                                                                      
*                                                                               
*  ELSE                              /* MF key specified @PCW0015 */            
*                                                                               
*     IF NUMBER(MF) > 2  |                                                      
*        MF(1) ^= 'E' THEN                                                      
*            DO;                                                                
*                                                                               
*             TEXT = 'DFSV02 The MF key is invalid.';                           
*             ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;             
*             RC = 8;                                                           
*                                                                               
*            END;                                                               
*                                                                               
*                                                                               
*     ELSE                        /* MF = E                       */            
*                                                                               
*     IF MF(2) = '' THEN             /* Parmlist name was not                   
*                                       specified.                   */         
*        DO;                                                                    
*           TEXT = 'DFSV03 The parmlist name is required for MF(E).';           
*           ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;               
*           RC = 8;                                                             
*        END;                                                                   
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/* Include a label, if specified.                                   */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*         IF MACLABEL ^= ''                                                     
*            THEN                                                               
*              ANS(MACLABEL) COL(2);                                            
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/* Validate the CPRB key                                            */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*           IF NUMBER(CPRB) = 0 THEN                                            
*            DO;                                                                
*                                                                               
*             TEXT = 'DFSV04 The CPRB macro key is required.';                  
*             ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;             
*             RC = 8;                                                           
*                                                                               
*            END;                                                               
*                                                                               
*                                                                               
*           IF NUMBER(CPRB) > 1 THEN                                            
*            DO;                                                                
*                                                                               
*             TEXT = 'DFSV05 The CPRB macro key is invalid.';                   
*             ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;             
*             RC = 8;                                                           
*                                                                               
*            END;                                                               
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/* Validate the CED key                                             */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*           IF NUMBER(CED) = 0 THEN                                             
*            DO;                                                                
*                                                                               
*             TEXT = 'DFSV06 The CED macro key is required.';                   
*             ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;             
*             RC = 8;                                                           
*                                                                               
*            END;                                                               
*                                                                               
*                                                                               
*           IF NUMBER(CED) > 1 THEN                                             
*            DO;                                                                
*                                                                               
*             TEXT = 'DFSV07 The CED macro key is invalid.';                    
*             ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;             
*             RC = 8;                                                           
*                                                                               
*            END;                                                               
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/* Validate the SERVNAME key                                        */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*           IF NUMBER(SERVNAME) = 0 THEN                                        
*            DO;                                                                
*                                                                               
*             TEXT = 'DFSV08 The SERVNAME macro key is required.';              
*             ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;             
*             RC = 8;                                                           
*                                                                               
*            END;                                                               
*                                                                               
*                                                                               
*           IF NUMBER(SERVNAME) > 1 THEN                                        
*            DO;                                                                
*                                                                               
*             TEXT = 'DFSV09 The SERVNAME macro key is invalid.';               
*             ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;             
*             RC = 8;                                                           
*                                                                               
*            END;                                                               
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/* Validate the SERVEPA key                                         */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*           IF NUMBER(SERVEPA) = 0 THEN                                         
*            DO;                                                                
*                                                                               
*             TEXT = 'DFSV10 The SERVEPA macro key is required.';               
*             ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;             
*             RC = 8;                                                           
*                                                                               
*            END;                                                               
*                                                                               
*           IF NUMBER(SERVEPA) > 1 THEN                                         
*            DO;                                                                
*                                                                               
*             TEXT = 'DFSV11 The SERVEPA macro key is invalid.';                
*             ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;             
*             RC = 8;                                                           
*                                                                               
*            END;                                                               
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/* Validate the SERVPARM key                                        */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*           IF NUMBER(SERVPARM) = 0 THEN                                        
*            DO;                                                                
*                                                                               
*             TEXT = 'DFSV12 The SERVPARM macro key is required.';              
*             ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;             
*             RC = 8;                                                           
*                                                                               
*            END;                                                               
*                                                                               
*                                                                               
*           IF NUMBER(SERVPARM) > 1 THEN                                        
*            DO;                                                                
*                                                                               
*             TEXT = 'DFSV13 The SERVPARM macro key is invalid.';               
*             ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;             
*             RC = 8;                                                           
*                                                                               
*            END;                                                               
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/* Validation complete. If no errors were detected, continue        */         
*/* expansion.                                                       */         
*/*                                                                  */         
*/********************************************************************/         
*            IF RC = 0 THEN                                                     
*               DO;                                                             
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/*    Include an opening comment.                                   */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*                  ANS('DO; ' || COMMENT(TITLE))                                
*                     COL(MACCOL);                                              
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/*    Initialize the CPRB:                                          */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*                  ANS(COMMENT('Initialize the CPRB'))                          
*                     COL(MACCOL+2) NORESCAN;                                   
*                                                                               
*                  ANS('CRBF1 = CRBVERS;' ||                                    
*                     COMMENT('Set the control block version id.'))             
*                     COL(MACCOL+2);                                            
*                                                                               
*                  COM = 'Set the request type to represent ' ||                
*                        'a "Define Server" request.';                          
*                  ANS('CRBF4 = CRBDFS;' ||                                     
*                     COMMENT(COM))                                             
*                     COL(MACCOL+2);                                            
*                                                                               
*                  ANS('CRBCPRB = CRBNAME; ' ||                                 
*                     COMMENT('Set the control block id.'))                     
*                     COL(MACCOL+2);                                            
*                                                                               
*                                                                               
*                  COM = 'Set server name field to server  ' ||                 
*                        'name specified on the SERVNAME key.';                 
*                  ANS('CRBSNAME = ' || SERVNAME(1) || ';' ||                   
*                     COMMENT(COM)) COL(MACCOL+2);                              
*                                                                               
*                                                                               
*                  COM = 'Set the "Define Server Parameter ' ||                 
*                        'area" length to 3 fullwords (12 bytes).';             
*                  ANS('CRBRQPLN = 12;' ||                                      
*                     COMMENT(COM)) COL(MACCOL+2);                              
*                                                                               
*                                                                               
*                  COM = 'Set the "Define Server Parameter ' ||                 
*                        'area" address to the parameter list ' ||              
*                        'address plus an offset of 8 bytes.';                  
*                  ANS('CRBRQPRM = ADDR(' || MF(2) || ') + 8;' ||               
*                     COMMENT(COM)) COL(MACCOL+2);                              
*                                                                               
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/*  Build the Enhanced Connectivity Facility server parameter list: */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*                  ANS(COMMENT('Build the Enhanced Connectivity Facility        
* server parameter list.'))                                                     
*                     COL(MACCOL+2) SKIP(1);                                    
*                                                                               
*                  COM = 'Set Parameter 1 to the address of the CPRB.';         
*                  IF INDEX(CPRB(1),'(') = 0 THEN                               
*                    ANS('DFS0001 = ADDR(' || CPRB(1) || ');' ||                
*                       COMMENT(COM)) COL(MACCOL+2);                            
*                  ELSE                                                         
*                    ANS('DFS0001 = ' || CPRB(1,2:INDEX(CPRB(1),')')-1)         
*                       || ';' || COMMENT(COM)) COL(MACCOL+2);                  
*                                                                               
*                                                                               
*                  COM = 'Set Parameter 2 to the address of the CED.';          
*                  IF INDEX(CED(1),'(') = 0 THEN                                
*                    ANS('DFS0002 = ADDR(' || CED(1) || ');' ||                 
*                       COMMENT(COM)) COL(MACCOL+2);                            
*                  ELSE                                                         
*                    ANS('DFS0002 = ' || CED(1,2:INDEX(CED(1),')')-1) ||        
*                       ';' || COMMENT(COM)) COL(MACCOL+2); /*@PCW0045*/        
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/*    Build the Define Server parameter area:                       */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*                                                                               
*                  COM = 'Build the "Define Server Parameter Area".';           
*                  ANS(COMMENT(COM)) COL(MACCOL+2) SKIP(1);                     
*                                                                               
*                  COM = 'Set Parameter 1 to the server ' ||                    
*                        'entry point address.';                                
*                  IF INDEX(SERVEPA(1),'(') = 0 THEN                            
*                    ANS('DFS0003 = ADDR(' || SERVEPA(1) || ');' ||             
*                       COMMENT(COM)) COL(MACCOL+2);                            
*                  ELSE                                                         
*                   DO;                                                         
*                     TEXT = SERVEPA(1,2:INDEX(SERVEPA(1),')')-1);              
*                     ANS('DFS0003 = ' || TEXT                                  
*                          || ';' || COMMENT(COM)) COL(MACCOL+2);               
*                   END;                                                        
*                                                                               
*                                                                               
*                  COM = 'Set Parameter 2 to the server ' ||                    
*                        'parameter pointer.';                                  
*                  IF INDEX(SERVPARM(1),'(') = 0 THEN                           
*                    ANS('DFS0004 = ADDR(' || SERVPARM(1) || ');' ||            
*                       COMMENT(COM)) COL(MACCOL+2);                            
*                  ELSE                                                         
*                   DO;                                                         
*                     TEXT = SERVPARM(1,2:INDEX(SERVPARM(1),')')-1);            
*                     ANS('DFS0004 = ' || TEXT                                  
*                          || ';' || COMMENT(COM)) COL(MACCOL+2);               
*                   END;                                                        
*                                                                               
*                                                                               
*                  ANS('DFS0005 = 0;' ||                                        
*                     COMMENT('Set Parameter 3 to ZERO (Reserved).'))           
*                     COL(MACCOL+2);                                            
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/*    Set up to invoke Enhanced Connectivity Facility:              */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*                  COM = 'Set up to invoke Enhanced Service Facility.';         
*                  ANS(COMMENT(COM)) COL(MACCOL+2) SKIP(1);                     
*                                                                               
*                  ANS('GENERATE CODE;' ||                                      
*                     COMMENT('Generate code to manipulate registers.'))        
*                       COL(10);                      /*     @PD70101*/         
*                                                                               
*                  COM = 'Point to the Enhanced Connectivity';                  
*                  ANS('LA   1,' || MF(2) || '  ' || COM)                       
*                       COL(10);                      /*     @PD70101*/         
*                  ANS('*                      Facility parameter list')        
*                       COL(MACGLMAR);                    /* @YA17155*/         
*                                                                               
*                  COM = 'Point to the CED';                                    
*                  ANS('L    15,DFS0002    ' || COM)                            
*                       COL(10);                      /*     @PD70101*/         
*                                                                               
*                  COM = 'Point to the EPA of Enhanced Connectivity';           
*                  ANS('L    15,0(,15)     ' || COM)                            
*                       COL(10);                      /*     @PD70101*/         
*                  ANS('*                         Facility')                    
*                       COL(MACGLMAR);                    /* @YA17155*/         
*                                                                               
*                  COM = 'Invoke Enhanced Connectivity Facility';               
*                  ANS('BALR 14,15         ' || COM)                            
*                       COL(10);                      /*     @PD70101*/         
*                                                                               
*                  ANS('@ENDGEN;' ||                                            
*                     COMMENT('End of code generation.'))                       
*                       COL(10);                      /*     @PD70101*/         
*                                                                               
*                  ANS('@SPACE;')                                               
*                     COL(MACCOL);                                              
*                                                                               
*                  ANS('END; '|| COMMENT(TITLE))                                
*                     COL(MACCOL);                                              
*                                                                               
*               END;                   /* End "continue expansion"   */         
*                                                                               
*     END;                             /* End MF = E                 */         
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/* Return the completion code.                                      */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*  EXITLBL:                                                                     
*                                                                               
*  RETURN CODE(RC);                                                             
*                                                                               
*% END DEFSERV;                                                                 
