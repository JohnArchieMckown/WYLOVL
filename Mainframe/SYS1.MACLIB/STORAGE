* %       GOTO PLSSKIP;                                                 00050000
*/********************************************************************/ 00100000
*/*                                                                  */ 00150000
*/* MACRO: STORAGE                                                   */ 00200000
*/*                                                                  */ 00250000
*/*01* PROPRIETARY STATEMENT=                                        */ 00294400
*/***PROPRIETARY_STATEMENT********************************************/ 00338800
*/*                                                                  */ 00383200
*/*                                                                  */ 00427600
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 00472000
*/* THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      */ 00516400
*/* 5647-A01 (C) COPYRIGHT IBM CORP. 1988, 2000                      */ 00566400
*/*                                                                  */ 00650000
*/* STATUS= HBB7703                                                  */ 00665600
*/*                                                                  */ 00681200
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 00725000
*/*                                                                  */ 00731200
*/*01* EXTERNAL CLASSIFICATION: PI                                   */ 00737400
*/*01* END OF EXTERNAL CLASSIFICATION:                               */ 00743600
*/*                                                                  */ 00750000
*/* FUNCTION: INTERFACE TO STORAGE ROUTINES                          */ 00800000
*/*                                                                  */ 00850000
*/* SYNTAX: STORAGE OBTAIN|RELEASE                                   */ 00900000
*/*                <,COND=YES|NO>                                    */ 00950000
*/*                <INADDR=VARIABLE1>                                */ 00975000
*/*                <,ADDR=RX-TYPE ADDRESS|REGISTER(1),(2)-(12)>  @D3C*/ 01000000
*/*                <,ALET=SYMBOL|DECIMAL DIGIT                       */ 01033300
*/*                       |ACCESS REGISTER(1),(2)-(12)>              */ 01066600
*/*                <,LENGTH=(LENGTH1=SYMBOL|DECIMAL DIGIT|           */ 01100000
*/*                              REGISTER(0),(2)-(12))               */ 01150000
*/*                         (,LENGTH2=SYMBOL|DECIMAL VALUE|          */ 01200000
*/*                              REGISTER(1),(2)-(12))>              */ 01250000
*/*                <,SP=DECIMAL NUMBER|REGISTER(15),(2)-(12)>        */ 01300000
*/*                <,BNDRY=DBLWD|PAGE>                               */ 01350000
*/*                <,KEY=DECIMAL NUMBER|REGISTER(2)-(12)>            */ 01400000
*/*                <,LOC=(RES|24|31|EXPLICIT<,ANY>)|                 */ 01433300
*/*                  RES|24|31|EXPLICIT|EXPLICIT,31|EXPLICIT,64>     */ 01476590
*/*                <,LINKAGE=SYSTEM>                                 */ 01500000
*/*                <,RTCD=SYMBOL|REGISTER(15),(2)-(12)>              */ 01550000
*/*                <,OWNER=HOME|PRIMARY|SECONDARY|SYSTEM>        @L3A*/ 01562500
*/*                <,TCBADDR=RS-TYPE ADDRESS | REGISTER(2)-(12)> @D4A*/ 01568700
*/*                <,CHECKZERO=YES|NO>                           @D5A*/ 01571800
*/*                <,STARTBDY=value>                             @L8A*/ 01572800
*/*                <,CONTBDY=value>                              @L8A*/ 01573800
*/*                <,RELATED=ANY VALID MACRO KEYWORD SPECIFIED>      */ 01575000
*/*                                                                  */ 01600000
*/*                                                                  */ 01650000
*/* NOTE: THE DEFAULT FOR THE ALET OPERAND IS '0'                    */ 01700000
*/*       THE DEFAULT FOR THE BNDRY OPERAND IS 'DBLWD'               */ 01800000
*/*       THE DEFAULT FOR THE COND OPERAND IS 'NO'                   */ 01812500
*/*       THE DEFAULT FOR THE KEY OPERAND IS '0'                     */ 01825000
*/*       THE DEFAULT FOR THE LINKAGE OPERAND IS 'SYSTEM'            */ 01837500
*/*       THE DEFAULT FOR THE LOC OPERAND IS 'RES'                   */ 01850000
*/*       THE DEFAULT FOR THE SP OPERAND IS '0'                      */ 01900000
*/*       THE DEFAULT FOR THE OWNER OPERAND IS 'HOME'            @L3A*/ 01915000
*/*       THE DEFAULT FOR THE CHECKZERO OPERAND IS 'NO'          @D5A*/ 01922500
*/*       BNDRY OPERAND IS NOT VALID WITH RELEASE                    */ 01930000
*/*       CONTBDY PARAMETER IS NOT VALID WITH RELEASE            @L8A*/ 01931600
*/*       STARTBDY PARAMETER IS NOT VALID WITH RELEASE           @L8A*/ 01933200
*/*       CONTBDY PARAMETER IS NOT VALID WITH VARIABLE           @L8A*/ 01934800
*/*       STARTBDY PARAMETER IS NOT VALID WITH VARIABLE          @L8A*/ 01936400
*/*       CONTBDY PARAMETER IS NOT VALID WITH LOC=EXPLICIT       @L8A*/ 01938000
*/*       STARTBDY PARAMETER IS NOT VALID WITH LOC=EXPLICIT      @L8A*/ 01939600
*/*       CONTBDY PARAMETER IS NOT VALID WITH BNDRY              @L8A*/ 01941200
*/*       STARTBDY PARAMETER IS NOT VALID WITH BNDRY             @L8A*/ 01942800
*/*       OWNER PARAMETER IS NOT VALID WITH RELEASE              @L3A*/ 01945000
*/*       CHECKZERO PARAMETER IS NOT VALID WITH RELEASE          @D5A*/ 01952500
*/*       LOC OPERAND IS NOT VALID WITH RELEASE                      */ 01960000
*/*       CALLRKY OPERAND IS NOT VALID WITH KEY                  @L2A*/ 01975000
*/*       RTCD OPERAND IS NOT VALID WITH both COND=NO            @D5C*/ 01990000
*/*         and CHECKZERO=NO                                     @D5C*/ 02005000
*/*       SP OPERAND IS REQUIRED WHEN KEY IS SPECIFIED               */ 02020000
*/*       BNDRY OPERAND IS NOT VALID WITH LOC=EXPLICIT           @L4A*/ 02027500
*/*       LOC=EXPLICIT REQUIRED WITH INADDR                      @P7C*/ 02035000
*/*       INADDR OPERAND IS NOT VALID WITH RELEASE               @L4A*/ 02042500
*/*                                                                  */ 02050000
*/* |KEYWORDS->|   | L | L |   |   |   |   |   | L |   |   | R |C| | */ 02096400
*/* |          |   | E | E |   |   |   |   |   | I |   |   | E |A|I| */ 02142800
*/* |          |   | N | N |   |   | B |   |   | N |   |   | L |L|N| */ 02189200
*/* |          | C | G | G |   | A | N |   |   | K | A | R | A |L|A| */ 02235600
*/* |          | O | T | T |   | L | D | K | L | A | D | T | T |R|D| */ 02282000
*/* |          | N | H | H | S | E | R | E | O | G | D | C | E |K|D| */ 02328400
*/* |          | D |(1)|(2)| P | T | Y | Y | C | E | R | D | D |Y|R| */ 02374800
*/* |__________|___|___|___|___|___|___|___|___|___|___|___|___|_|_| */ 02421200
*/* |OBTAIN    | O | R | O | O | O | O | O | O | O | O | O | O |O|O| */ 02467600
*/* |__________|___|___|___|___|___|___|___|___|___|___|___|___|_|_| */ 02514000
*/* |RELEASE   | O | R | I | O | O | E | O | E | O | R | O | O |O|E| */ 02560400
*/* |          |   |(*)|   |(*)|   |   |   |   |   |(*)|   |   | | | */ 02606800
*/* |__________|___|___|___|___|___|___|___|___|___|___|___|___|_|_| */ 02653200
*/*                                                                  */ 02656100
*/* |KEYWORDS->|   | T | C |   |   |   |   |   |   |   |   |   | | | */ 02658400
*/* |          |   | C | H |   |   |   |   |   |   |   |   |   | | | */ 02660700
*/* |          | O | B | E |   |   |   |   |   |   |   |   |   | | | */ 02663000
*/* |          | W | A | C |   |   |   |   |   |   |   |   |   | | | */ 02665300
*/* |          | N | D | K |   |   |   |   |   |   |   |   |   | | | */ 02667600
*/* |          | E | D | Z |   |   |   |   |   |   |   |   |   | | | */ 02669900
*/* |          | R | R | E |   |   |   |   |   |   |   |   |   | | | */ 02672200
*/* |          |   |   | R |   |   |   |   |   |   |   |   |   | | | */ 02674500
*/* |          |   |   | O |   |   |   |   |   |   |   |   |   | | | */ 02676800
*/* |__________|___|___|___|___|___|___|___|___|___|___|___|___|_|_| */ 02679300
*/* |OBTAIN    | O | O | O |   |   |   |   |   |   |   |   |   | | | */ 02682200
*/* |__________|___|___|___|___|___|___|___|___|___|___|___|___|_|_| */ 02685100
*/* |RELEASE   | E | O | E |   |   |   |   |   |   |   |   |   | | | */ 02688000
*/* |          |   |   |   |   |   |   |   |   |   |   |   |   | | | */ 02690900
*/* |__________|___|___|___|___|___|___|___|___|___|___|___|___|_|_| */ 02693800
*/*                                                                  */ 02696700
*/*                                                                  */ 02700000
*/*            E = ERROR IF SPECIFIED                                */ 02750000
*/*            I = IGNORED                                           */ 02800000
*/*            O = OPTIONAL                                          */ 02850000
*/*            R = REQUIRED                                          */ 02900000
*/*           (1)= SINGLE LENGTH REQUEST OR MAXIMUM LENGTH REQUEST   */ 02950000
*/*           (2)= MINIMUM LENGTH REQUEST                            */ 03000000
*/*           (*)= For subpool release, SP must be specified without */ 03010100
*/*                ADDR and LENGTH.                                  */ 03020200
*/*                For a "normal" release (i.e. not a subpool        */ 03030300
*/*                  release),                                       */ 03040400
*/*                - ADDR AND LENGTH ARE REQUIRED,                   */ 03050600
*/*                  AND SP IS OPTIONAL.                             */ 03050900
*/*                                                                  */ 03051000
*/* Valid uses of registers to pass the subpool and key follow.      */ 03051100
*/* (All others are not valid)                                       */ 03051200
*/*                                                                  */ 03051300
*/* Valid use #1:    ------------------------------------------------*/ 03051400
*/*                                                                  */ 03051500
*/* Reg X:  xxxx xxxx  xxxx xxxx  xxxx xxxx KKKK xxxx                */ 03051600
*/* Reg Y:  xxxx xxxx  xxxx xxxx  xxxx xxxx SSSS SSSS                */ 03051700
*/*                                                                  */ 03051800
*/* Each 'x' represents 1 bit.                                       */ 03051900
*/* KKKK represents the key, SSSS SSSS represents the subpool.       */ 03052000
*/* Reg X can be any of the following registers: 2-12, 15.           */ 03052100
*/* Reg Y can be any of the following registers: 2-12, 15.           */ 03052200
*/* Reg X cannot be the same as reg Y.                               */ 03052300
*/*                                                                  */ 03052400
*/*                                                                  */ 03052500
*/* Valid use #2, both subpool and key in 1 reg:  -------------------*/ 03052600
*/*                                                                  */ 03052700
*/* Reg X:  xxxx xxxx  KKKK xxxx  SSSS SSSS xxxx xxxx                */ 03052800
*/*                                                                  */ 03052900
*/* Each 'x' represents 1 bit.                                       */ 03053000
*/* KKKK represents the key, SSSS SSSS represents the subpool.       */ 03053100
*/* Reg X can be any of the following registers: 2-12, 15.           */ 03053200
*/*                                                                  */ 03053300
*/*                                                                  */ 03053400
*/* INPUT TO 'OBTAIN':                                               */ 03053500
*/*   REGISTER 0  -  LENGTH OF SINGLE LENGTH REQUEST                 */ 03053600
*/*               -  MAXIMUM LENGTH OF VARIABLE LENGTH REQUEST       */ 03054800
*/*   REGISTER 1  -  Input address for EXPLICIT request          @L4C*/ 03056400
*/*               -  MINIMUM LENGTH OF VARIABLE LENGTH REQUEST       */ 03058000
*/*   REGISTER 14 -  PC NUMBER TO INVOKE THE STORAGE ROUTINE         */ 03059600
*/*   REGISTER 15 -                                                  */ 03061200
*/*     BYTE 0       FLAGS                                       @L2C*/ 03061400
*/*       BIT 0      RESERVED                                        */ 03061600
*/*       BIT 1      0 ==> CALLRKY NOT SPECIFIED                 @L2A*/ 03061800
*/*                  1 ==> CALLRKY SPECIFIED                     @L2A*/ 03062000
*/*       BIT 2      0 ==> No AR15 stuff                         @L8C*/ 03062100
*/*                  1 ==> AR15 stuff                            @L8C*/ 03062200
*/*       BIT 3      0 ==> Not LOC=(,64)                         @L7C*/ 03062300
*/*                  1 ==> LOC=(,64)                             @L7C*/ 03062400
*/*       BIT 4      0 ==> CHECKZERO=NO specified or defaulted   @D5A*/ 03062500
*/*                  1 ==> CHECKZERO=YES specified               @D5A*/ 03062600
*/*       BIT  5     TCBADDR PROVIDED                            @D4A*/ 03062700
*/*       BITS 6-7   OWNER (00=H, 01=P, 10=S, 11=SY)             @L3A*/ 03062800
*/*     BYTE 1       KEY (BITS 8-11)                                 */ 03062900
*/*     BYTE 2       SUBPOOL NUMBER                                  */ 03063000
*/*     BYTE 3       FLAGS                                           */ 03063600
*/*       BIT 0      0 ==> ALET NOT SPECIFIED                        */ 03064400
*/*                  1 ==> ALET SPECIFIED                            */ 03066000
*/*       BIT 1      WHEN LOC=EXPLICIT CODED                     @L4A*/ 03066500
*/*                  0 ==> LOC=(,24) SPECIFIED                   @L4A*/ 03066800
*/*                  1 ==> LOC=(,31) SPECIFIED OR DEFAULTED      @L4A*/ 03067100
*/*                     OR LOC=(,64) SPECIFIED OR DEFAULTED      @L7A*/ 03067500
*/*                  OTHERWISE                                   @L4A*/ 03068000
*/*                  0 ==> LOC=(,31) NOT SPECIFIED                   */ 03068900
*/*                  1 ==> LOC=(,31) OR LOC=(,64)                @L7C*/ 03069800
*/*       BITS 2-3   00 ==> LOC=RES SPECIFIED                        */ 03070800
*/*                  01 ==> LOC=24 SPECIFIED                         */ 03072400
*/*                  10 ==> LOC=EXPLICIT SPECIFIED                   */ 03074000
*/*                  11 ==> LOC=31 SPECIFIED                         */ 03075600
*/*       BIT 4      0 ==> SINGLE LENGTH REQUEST                     */ 03077200
*/*                  1 ==> VARIABLE LENGTH REQUEST                   */ 03078800
*/*       BIT 5      0 ==> DOUBLEWORD BOUNDARY                       */ 03080400
*/*                  1 ==> PAGE BOUNDARY                             */ 03082000
*/*       BIT 6      0 ==> COND=YES                                  */ 03083600
*/*                  1 ==> COND=NO                                   */ 03085200
*/*       BIT 7      0 ==> OBTAIN REQUEST                            */ 03086800
*/*                  1 ==> RELEASE REQUEST                           */ 03088400
*/*   ACCESS REG0 -  IGNORED IF TCBADDR PARAMETER IS NOT SPECIFIED   */ 03090500
*/*               -  INDICATES THE INPUT TCB                     @D4A*/ 03092600
*/*   ACCESS REG1 -  IGNORED IF ALET PARAMETER IS NOT SPECIFIED      */ 03094800
*/*               -  INDICATE WHICH ADDRESS SPACE STORAGE            */ 03096400
*/*                  IS TO BE OBTAINED FROM                          */ 03098000
*/*   ACCESS REG15-  Ignored unless BIT 2 of flags is on         @L8A*/ 03098200
*/*     BYTE 0       reserved                                        */ 03098400
*/*     BYTE 1       containing boundary                             */ 03098600
*/*     BYTE 2       starting boundary                               */ 03098800
*/*     BYTE 3       FLAGS                                           */ 03099000
*/*       BIT 6      0 ==> byte 1 is ignored                         */ 03099200
*/*                  1 ==> byte 1 contains containing boundary       */ 03099400
*/*       BIT 7      0 ==> byte 2 is ignored                         */ 03099600
*/*                  1 ==> byte 2 contains start boundary            */ 03099800
*/*                                                                  */ 03100000
*/* OUTPUT OF 'OBTAIN':                                              */ 03100900
*/*   REGISTER 0    -  UNPREDICTABLE IF SINGLE LENGTH REQUEST        */ 03101800
*/*                 -  MAXIMUM LENGTH OF VARIABLE LENGTH REQUEST     */ 03102700
*/*   REGISTER 1    -  ADDRESS OF OBTAINED STORAGE                   */ 03103600
*/*   REGISTER 2-13 -  UNCHANGED                                     */ 03104500
*/*   REGISTER 14   -  UNPREDICTABLE                                 */ 03105400
*/*   REGISTER 15   -  Return code for COND=YES or ZEROCHK=YES only  */ 03106300
*/*                    0 ==> VIRTUAL STORAGE WAS ALLOCATED           */ 03107200
*/*                    4 ==> EXPLICIT REQUEST: storage requested @L4C*/ 03107500
*/*                          was outside the region boundaries       */ 03107800
*/*                          OTHERWISE: insufficient contiguous      */ 03108100
*/*                          virtual storage in region to satisfy    */ 03108400
*/*                          request.                                */ 03108700
*/*                    8 ==> REAL STORAGE WAS NOT AVAILABLE          */ 03109000
*/*                          FOR BACKING THE REQUEST OR INTERNAL     */ 03109900
*/*                          STORAGE MANAGEMENT CONTROL BLOCKS       */ 03110800
*/*                    10==> EXPLICIT REQUEST: Storage requested @L4A*/ 03110900
*/*                          is not available for one of four        */ 03111000
*/*                          reasons:                                */ 03111100
*/*                          - some or all is already allocated      */ 03111200
*/*                          - some part of a page containing part   */ 03111300
*/*                            of the storage requested              */ 03111400
*/*                            a) is allocated to another subpool    */ 03111500
*/*                            b) has a real storage attribute which */ 03111600
*/*                               conflicts with the real storage    */ 03111700
*/*                               attribute requested                */ 03111800
*/*                            c) is allocated with a key that is    */ 03111900
*/*                               different from the key of the      */ 03112000
*/*                               storage requested                  */ 03112100
*/*                    14==> Virtual storage was allocated, and  @D5A*/ 03112200
*/*                          the value of every byte of the storage  */ 03112300
*/*                          is X'00'.  This return code value is    */ 03112400
*/*                          returned only if CHECKZERO=YES was      */ 03112500
*/*                          specified.                              */ 03112600
*/*   ACCESS REG0   -  Unpredictable                                 */ 03112700
*/*   ACCESS REG1   -  0 ==> IF ALET PARAMETER IS NOT SPECIFIED      */ 03112800
*/*                 -  ALET OF OBTAINED STORAGE                      */ 03112900
*/*   ACCESS REG 2-13 - Unchanged                                    */ 03113000
*/*   ACCESS REG 14 -  Unpredictable                                 */ 03113100
*/*   ACCESS REG 15 -  Unpredictable                                 */ 03113300
*/*                                                                  */ 03113500
*/* INPUT TO 'RELEASE':                                              */ 03114400
*/*   REGISTER 0  -  LENGTH OF STORAGE BEING RELEASED                */ 03115300
*/*               -  0 ==> RELEASE ENTIRE SUBPOOL                    */ 03116200
*/*   REGISTER 1  -  ADDRESS OF STORAGE BEING RELEASED               */ 03117100
*/*               -  0 ==> RELEASE ENTIRE SUBPOOL                    */ 03118000
*/*   REGISTER 14 -  PC NUMBER TO INVOKE THE STORAGE ROUTINE         */ 03118900
*/*   REGISTER 15 -                                                  */ 03119800
*/*     BYTE 0       FLAGS                                       @L2C*/ 03119900
*/*       BIT 0      RESERVED                                        */ 03120000
*/*       BIT 1      0 ==> CALLRKY NOT SPECIFIED                 @L2A*/ 03120100
*/*                  1 ==> CALLRKY SPECIFIED                     @L2A*/ 03120200
*/*       BITS 2-4   RESERVED                                    @D4C*/ 03120300
*/*       BIT  5     TCBADDR PROVIDED                            @D4A*/ 03120400
*/*       BITS 6-7   RESERVED                                    @D4C*/ 03120500
*/*     BYTE 1       KEY (BITS 8-11)                                 */ 03120600
*/*     BYTE 2       SUBPOOL NUMBER                                  */ 03120700
*/*     BYTE 3       FLAGS                                           */ 03121000
*/*       BIT 0      0 ==> ALET NOT SPECIFIED                        */ 03121600
*/*                  1 ==> ALET SPECIFIED                            */ 03122500
*/*       BITS 1-5   RESERVED                                        */ 03123400
*/*       BIT 6      0 ==> COND=YES                                  */ 03124300
*/*                  1 ==> COND=NO                                   */ 03125200
*/*       BIT 7      0 ==> OBTAIN REQUEST                            */ 03126100
*/*                  1 ==> RELEASE REQUEST                           */ 03127000
*/*   ACCESS REG0 -  IGNORED IF TCBADDR PARAMETER IS NOT SPECIFIED   */ 03128200
*/*               -  INDICATES THE INPUT TCB                     @D4A*/ 03129400
*/*   ACCESS REG1 -  IGNORED IF ALET PARAMETER IS NOT SPECIFIED      */ 03130600
*/*               -  INDICATE WHICH ADDRESS SPACE STORAGE            */ 03131500
*/*                  IS TO BE RELEASED FROM                          */ 03132400
*/*                                                                  */ 03133300
*/* OUTPUT OF 'RELEASE':                                             */ 03134200
*/*   REGISTER 0    -  UNPREDICTABLE                                 */ 03135100
*/*   REGISTER 1    -  UNPREDICTABLE                                 */ 03136000
*/*   REGISTER 2-13 -  UNCHANGED                                     */ 03136900
*/*   REGISTER 14   -  UNPREDICTABLE                                 */ 03137800
*/*   REGISTER 15   -  RETURN CODE FOR COND=YES ONLY                 */ 03138700
*/*                    0 ==> VIRTUAL STORAGE WAS FREED               */ 03139600
*/*                    4 ==> NOT ALL VIRTUAL STORAGE WAS FREED       */ 03140500
*/*                    8 ==> PART OF AREA BEING FREED IS STILL FIXED.*/ 03141400
*/*                          THIS CONDITION CAUSES AN A78 ABEND      */ 03142300
*/*                          UNLESS TCBEOTFM INDICATOR IS ON.        */ 03143200
*/*   ACCESS REG0   -  Unpredictable                                 */ 03143600
*/*   ACCESS REG1   -  Unpredictable                                    03144000
*/*   ACCESS REG 2-13 - Unchanged                                    */ 03144400
*/*   ACCESS REG 14 -  Unpredictable                                 */ 03144800
*/*   ACCESS REG 15 -  Unpredictable                                 */ 03145200
*/*                                                                  */ 03145900
*/* MACROS: NONE                                                     */ 03150000
*/*                                                                  */ 03200000
*/* CHANGE ACTIVITY:                                                 */ 03250000
*/*                                                                  */ 03300000
*/*        $L0=AR,HBB3310,850925,PDFT: STORAGE MACRO                 */ 03350000
*/*        $P1=PC40005,HBB3310,860115,PDFT:                          */ 03355000
*/*            MNOTE MUST BE ISSUED WHEN MORE THAN ONE POSITIONAL    */ 03360000
*/*            PARAMETER IS SPECIFIED                            @P1A*/ 03365000
*/*        $P2=PC40006,HBB3310,860115,PDFT:                          */ 03370000
*/*            MNOTE SHOULD BE ISSUED IN ORDER TO BE CONSISTENT      */ 03375000
*/*            WITH OTHER PARAMETERS.                                */ 03376600
*/*            (I.E. STORAGE OBTAIN,COND=YES,LENGTH=8,ADDR=(,(1)),   */ 03378000
*/*            SP=(,255),RTCD=(,(15))                                */ 03379400
*/*            THERE ARE 2 MNOTES ISSUED FOR THE SP KEYWORD,         */ 03380800
*/*            BUT THERE IS 1 MNOTE ISSUED EACH FOR THE ADDR KEYWORD */ 03382200
*/*            AND THE RTCD KEYWORD.)                            @P2A*/ 03383600
*/*        $P3=PC40009,HBB3310,860115,PDFT:                          */ 03385000
*/*            KEY CAN BE SPECIFIED AS A NUMBER OR                   */ 03390000
*/*            REGISTER (2)-(12)                                 @P3A*/ 03395000
*/*        $D1=DCR3,HBB3310,860219,PDFT:                             */ 03395500
*/*            REGISTER 15 HAS THE FOLLOWING INPUT:                  */ 03396000
*/*            BYTE 0: RESERVED                                      */ 03396600
*/*            BYTE 1: KEY (BITS 8-11)                               */ 03397400
*/*            BYTE 2: SUBPOOL                                       */ 03398200
*/*            BYTE 3: FLAGS                                     @D1A*/ 03399000
*/*        $P4=PC40029,HBB3310,860219,PDFT:                          */ 03399300
*/*            STORAGE UPDATE                                    @P4A*/ 03399600
*/*        $P5=PC40056,HBB3310,860418,PDFT:                          */ 03399700
*/*            DIFFERENT PC NUMBER FOR STORAGE OBTAIN AND            */ 03399800
*/*            STORAGE RELEASE                                   @P5A*/ 03399900
*/*        $P6=PC40014,HBB3310,860728,PDFT:                          */ 03408200
*/*            ONLY ONE MNOTE ISSUED WHEN                            */ 03416500
*/*            'COND=NO' OR DEFAULT OF 'COND' SPECIFIED              */ 03424800
*/*              WITH 'RTCD'                                     @P6A*/ 03433100
*/*        $D2=DCR173,HBB3310,861229,PDT6:  Change the               */ 03435800
*/*            requirements for specifying subpool release.      @D2A*/ 03438500
*/*        $L1=PROD310,HBB3310,870603,PDF5:                          */ 03439400
*/*            C-p-y-right changes                               @L1A*/ 03440300
*/*        $D3=DCR303,HBB3310,880120,PDT6:  Fix documentation        */ 03440600
*/*            about the ADDR parameter (RX-type address).       @D3A*/ 03440900
*/*        OY30573 - Change KEY processing to not alter the          */ 03441000
*/*            register it was passed in and add mnote if any        */ 03441100
*/*            parameter uses an invalid register            @YA30573*/ 03441200
*/*        $L2=TCSAU,  HBB4430,910805,PDXB: CALLRKY                  */ 03441300
*/*        $L3=TCSAU  ,HBB4430,911003,PDXB:  OWNER                   */ 03444200
*/*        $L4=POSIXVSM,HBB4430,910722,PD00BV:                       */ 03444900
*/*            STORAGE OBTAIN BY ADDRESS                         @L4A*/ 03445600
*/*        $P7=PKB2328 ,HBB4430,920429,PD00XB: Fix messages          */ 03446300
*/*        $D4=DKB0110 ,HBB4430,920617,PD00XB: TCBADDR               */ 03446700
*/*        $P8=PIG2882 ,HBB5510,930907,PD00XB: AREA                  */ 03446900
*/*        $L5=DYLPAVSM,JBB6604,960808,PD00XB: FLAGVALUE             */ 03447000
*/*        $D5=DVT0002 ,HBB6606,980119,PD00H6: CHECKZERO             */ 03448000
*/*        $L8=50MEGVSM JBB6609 990201 PD00XB: BACK                  */ 03448100
*/*        $L6=50MEGVSM,JBB6609,990201,PD00XB:                       */ 03448300
*/*        $L7=64BITVSM,HBB7703,980101,PD00XB: CONTBDY,STARTBDY      */ 03448500
*/*        $L8=64BITVSM HBB7703 980101 PD00XB: StartBdy/ContBdy      */ 03448700
*/*        $01=OW45896  HBB7703 000817 PD00XB: Check &BAR15          */ 03448800
*/*        $02=OW46191  HBB7703 000909 PD00XB: Set LOC(,31) when     */ 03448860
*/*                                            LOC(,64)              */ 03448920
*/*                                                                  */ 03449000
*/********************************************************************/ 03450000
*/* A - 000000-999999                                                */ 03500000
*/*                                                                     03550000
         MACRO                                                          03600000
&LABEL   STORAGE &TYPE,                                                +03650000
               &COND=,                                                 +03675000
               &INADDR=,                                           @L4A+03687500
               &ADDR=,                                                 +03700000
               &ALET=,                                                 +03725000
               &LENGTH=,                                               +03750000
               &SP=,                                                   +03775000
               &BNDRY=,                                                +03800000
               &KEY=,                                                  +03825000
               &LOC=,                                                  +03850000
               &LINKAGE=,                                              +03875000
               &RTCD=,                                                 +03900000
               &CALLRKY=,                                          @L2A+03912500
               &OWNER=,                                            @L3A+03918700
               &TCBADDR=,                                          @D4A+03921800
               &CHECKZERO=,                                        @D5A+03923400
               &CONTBDY=,                                          @L8A+03923900
               &STARTBDY=,                                         @L8A+03924400
               &RELATED=                                                03925000
.*                                                                      03950000
.********************************************************************** 03975000
.*                                                                      04000000
.*       DECLARE INTERNAL VARIABLES                                     04025000
.*                                                                      04050000
.********************************************************************** 04075000
.*                                                                      04100000
         LCLB   &ADDRREG           1 ==> ADDRESS IS IN A REGISTER       04125000
         LCLB   &ALETREG           1 ==> ALET IS IN A REGISTER          04150000
         LCLC   &ARGM1             FIRST ARGUMENT                       04158300
         LCLC   &ARGM2             SECOND ARGUMENT                      04166600
         LCLC   &BALET             INDICATOR IF ALET SPECIFIED          04175000
         LCLC   &BBND              INDICATOR IF PAGE SPECIFIED          04200000
         LCLC   &BFUNC             INDICATOR IF RELEASE SPECIFIED       04300000
         LCLC   &BLOC            00 FOR RES, 01 FOR 24, 11 FOR 31       04310400
         LCLC   &BREAL             INDICATOR IF 31 REAL SPECIFIED       04320800
         LCLC   &BREAL64           INDICATOR IF 64 REAL            @L7A 04331200
         LCLB   &BSPRLS            1 ==> SUBPOOL RELEASE                04341600
         LCLC   &BUNCN             INDICATOR IF COND=YES/NO             04350000
         LCLC   &BCKEY             INDICATOR IF CALLRKY=YES/NO     @L2A 04356200
         LCLC   &BVAR              INDICATOR IF MIN-VALUE SPECIFIED     04362500
         LCLC   &BCHKZ             1 ==> CHECKZERO=YES specified   @D5A 04368700
         LCLC   &BAR15             1 ==> AR15 stuff                @L8A 04370200
         LCLC   &BCBDY             1 ==> CONTBDY=YES specified     @L8A 04371700
         LCLC   &BSBDY             1 ==> STARTBDY=YES specified    @L8A 04373200
         LCLA   &ERROR4            ERROR CODE OF 4                      04375000
         LCLA   &ERROR12           ERROR CODE OF 12                     04400000
         LCLC   &FLAGS             FLAGS FOR OBTAIN AND RELEASE         04425000
         LCLC   &GNAME             VARIABLE NAME                        04450000
         LCLC   &IADDR             ADDRESS OF STORAGE                   04500000
         LCLB   &IADRREG           1 ==> INADDR IS IN A REGISTER   @L4A 04525000
         LCLC   &ICHKZ             Value of CHECKZERO              @D5A 04537500
         LCLC   &ICBDY,&ICBDY1     Value of CONTBDY                @L8A 04541600
         LCLC   &ISBDY,&ISBDY1     Value of STARTBDY               @L8A 04545700
         LCLC   &IALET             ACCESS LIST ENTRY TOKEN              04550000
         LCLC   &IBKEY             INDICATOR IF KEY SPECIFIED           04600000
         LCLC   &IBNDRY            BOUNDARY                             04650000
         LCLC   &ICOND             COND(YES|NO)                         04700000
         LCLC   &ICKEY             CALLRKY(YES|NO)                 @L2A 04750000
         LCLC   &IFUNC             FUNCTION SPECIFIED                   05000000
         LCLC   &IKEY              KEY                                  05050000
         LCLC   &ILEN1             FIRST ARGUMENT OF LENGTH PARAMETER   05100000
         LCLC   &ILEN2             SECOND ARGUMENT OF LENGTH PARAMETER  05150000
         LCLC   &ILINK             LINKAGE                              05200000
         LCLC   &ILOC1             FIRST ARGUMENT OF LOC PARAMETER      05250000
         LCLC   &ILOC2             SECOND ARGUMENT OF LOC PARAMETER     05300000
         LCLC   &IINADDR           ADDRESS OF STORAGE TO OBTAIN    @L4A 05325000
         LCLC   &INAME             INVOCATION MACRO NAME                05350000
         LCLC   &INVALID           INVALID MESSAGE TEXT                 05400000
         LCLC   &IOWN              OWNER information               @L3A 05425000
         LCLC   &ITCBADD           TCBADDR information             @D4A 05433300
         LCLC   &ITCBADB           TCBADDR 0 or 1 (Bit info)       @D4A 05441600
         LCLC   &IREGS             USE OR SAVE REGISTERS                05450000
         LCLA   &IREG15            REGISTER 15                          05475000
         LCLC   &IRTCD             RTCD NAME                            05500000
         LCLC   &ISP               SUBPOOL                              05550000
         LCLC   &I313              MESSAGE ID                           05650000
         LCLC   &I323              MESSAGE ID                           05700000
         LCLC   &I331              MESSAGE ID                           05750000
         LCLC   &I343              MESSAGE ID                           05800000
         LCLC   &I351              MESSAGE ID                           05850000
         LCLB   &KEYREG            1 ==> KEY IS IN A REGISTER           05852400
         LCLB   &LEN1REG           1 ==> LENGTH(1) IS IN A REGISTER     05854800
         LCLB   &LEN2REG           1 ==> LENGTH(2) IS IN A REGISTER     05857200
         LCLC   &NOARG             MESSAGE TEXT                         05859600
         LCLC   &NOTSPEC           MESSAGE TEXT                         05869200
         LCLC   &NOVALU1           MESSAGE TEXT                         05878800
         LCLC   &NOVALU2           MESSAGE TEXT                         05888400
         LCLC   &REGNOGD           MESSAGE TEXT                @YA30573 05890800
         LCLB   &RTCDREG           1 ==> RETURN CODE IS IN A REGISTER   05893200
         LCLB   &SPREG             1 ==> SUBPOOL IS IN A REGISTER       05898000
         LCLB   &TCBAREG           1 ==> TCBADDR IS IN A REGISTER  @D4A 05902800
         LCLC   &TOLONG            MESSAGE TEXT                         05907600
.*                                                                      05917200
.********************************************************************** 05926800
.*                                                                      05936400
.*       INITIALIZE INTERNAL VARIABLES                                  05946000
.*                                                                      05955600
.********************************************************************** 05965200
.*                                                                      05974800
&ADDRREG SETB   0                  ASSUME ADDR NOT IN REG               05978000
&ALETREG SETB   0                  ASSUME ALET NOT IN REG               05981200
&BSPRLS  SETB   0                  ASSUME NOT SUBPOOL RELEASE           05982800
&ERROR4  SETA   0                  ASSUME NO ERROR                      05984400
&ERROR12 SETA   0                  ASSUME NO ERROR                      05994000
&GNAME   SETC   'IHB'.'&SYSNDX'    VARIABLE NAME                        06003600
&IADRREG SETB   0                  ASSUME INADDR NOT IN REG       @L4A  06006000
&INAME   SETC   '&LABEL'           MACRO LABEL                          06008400
&IREG15  SETA   15                 REGISTER 15                          06013200
&KEYREG  SETB   0                  ASSUME KEY NOT IN REG                06014500
&LEN1REG SETB   0                  ASSUME LEN1 NOT IN REG               06015800
&LEN2REG SETB   0                  ASSUME LEN2 NOT IN REG               06017100
&RTCDREG SETB   0                  ASSUME RTCD NOT IN REG               06018400
&SPREG   SETB   0                  ASSUME SP NOT IN REG                 06019700
&TCBAREG SETB   0                  ASSUME TCBADDR NOT IN REG      @D4A  06021200
&BAR15   SETC   '0'                Initialize                      @L8A 06022000
.*                                                                      06022800
.********************************************************************** 06032400
.*                                                                      06042000
.*       MESSAGES TO BE GENERATED                                       06051600
.*                                                                      06061200
.********************************************************************** 06070800
.*                                                                      06080400
&ARGM1   SETC   'THE FIRST ARGUMENT IN'                                 06083600
&ARGM2   SETC   'THE SECOND ARGUMENT IN'                                06086800
&I313    SETC   'IHB313 NO TEXT GENERATED.'                             06090000
&I323    SETC   'IHB323 NO TEXT GENERATED.'                             06099600
&I331    SETC   'IHB331 '                                               06109200
&I343    SETC   'IHB343 NO TEXT GENERATED.'                             06118800
&I351    SETC   'IHB351 NO TEXT GENERATED.'                             06128400
&INVALID SETC   'IS NOT VALID WITH'                                     06138000
&NOARG   SETC   'NO ARGUMENT SPECIFIED FOR THE'                         06150000
&NOTSPEC SETC   'IS REQUIRED BUT NOT SPECIFIED.'                        06200000
&NOVALU1 SETC   'NO VALUE SPECIFIED FOR THE FIRST     ARGUMENT OF THE'  06250000
&NOVALU2 SETC   'NO VALUE SPECIFIED FOR THE SECOND    ARGUMENT OF THE'  06300000
&REGNOGD SETC   'REGISTER SPECIFIED IS NOT VALID FOR'          @YA30573 06350000
&TOLONG  SETC   'HAS TOO MANY ARGUMENTS. TRUNCATED TO:'                 06400000
&VALDREG SETC   'PARAMETER.  VALID REGISTERS ARE'              @YA30573 06450000
.*                                                                      06469200
.********************************************************************** 06488400
.*       Initialize SYSSTATE indicators                                 06507600
.********************************************************************** 06526800
         GBLC  &SYSAM64                Global character variable -      06546000
.*                                     indicates whether the invoker    06565200
.*                                     of GETMAIN is in AMODE 64 or     06584400
.*                                     AMODE 24/31                 @L8A 06603600
         SYSSTATE TEST            This macro sets SYSASCE and      @L8a 06622800
.*                                SYSAM64. SYSAM64 is used to      @L8a 06642000
.*                                determine whether the caller is  @L8a 06661200
.*                                in AMODE 64 or not.              @L8a 06680400
.*                                                                      06700000
.********************************************************************** 06750000
.*                                                                      06800000
.*       CHECK VALIDITY OF MACRO OPERANDS                               06850000
.*                                                                      06900000
.********************************************************************** 06950000
.*                                                                      06975000
.*                                                                      07050000
.********************************************************************** 07100000
.* CHECK FIRST POSITIONAL PARAMETER FOR OBTAIN OR RELEASE               07150000
.********************************************************************** 07200000
.*                                                                      07207100
         AIF ('&TYPE(1)' EQ '').FUNCER IF TYPE WAS NOT SPECIFIED        07214200
         AIF ((N'&TYPE GT 1) OR (N'&SYSLIST GT 1)).FUNCER1 IF TOO      +07218900
                                       MANY SUBFIELDS OR TOO MANY      +07222000
                                       POSITIONAL PARAMETERS            07225100
         AIF ('&TYPE(1)' NE 'OBTAIN').CHKFUNC  IF OBTAIN NOT SPECIFIED  07228400
&IFUNC   SETC   'OBTAIN'               OBTAIN WAS SPECIFIED             07235500
&BFUNC   SETC   '0'                    SET INDICATOR BIT FOR OBTAIN     07242600
         AGO    .CHKCOND               CONTINUE TO CHECK NEXT KEYWORD   07249700
.CHKFUNC ANOP                                                           07256800
         AIF ('&TYPE(1)' NE 'RELEASE').FUNCER IF RELEASE NOT SPECIFIED  07263900
&IFUNC   SETC   'RELEASE'              RELEASE WAS SPECIFIED            07280900
&BFUNC   SETC   '1'                    SET INDICATOR BIT FOR RELEASE    07297900
         AGO    .CHKCOND               CONTINUE TO CHECK NEXT KEYWORD   07314900
.FUNCER  ANOP                          NEITHER OBTAIN NOR RELEASE WAS  +07331900
                                       SPECIFIED                        07348900
         MNOTE  12,'&I343 POSITIONAL PARAMETER MUST BE         ''OBTAIN+07365900
               '' OR ''RELEASE''.'                                      07382900
&ERROR12 SETA   12                     INDICATE ERROR                   07400000
         MEXIT                                                          07450000
.FUNCER1 ANOP                          TOO MANY POSITIONAL PARMS        07500000
         MNOTE  12,'&I343 TOO MANY POSITIONAL PARAMETERS.'              07550000
&ERROR12 SETA   12                     INDICATE ERROR                   07600000
         MEXIT                                                          07650000
.*                                                                      08200000
.********************************************************************** 08250000
.*                                                                      08300000
.* CHECK KEYWORD FOR THE COND SPECIFICATION. ARGUMENT CAN BE EITHER     08350000
.* 'YES' OR 'NO'.                                                       08400000
.*                                                                      08450000
.********************************************************************** 08500000
.*                                                                      08550000
.CHKCOND ANOP                                                           08600000
&BUNCN   SETC   '1'       SET INDICATOR BIT TO ASSUME COND=NO SPECIFIED 08637500
&ICOND   SETC   'NO'      SET ARGUMENT TO ASSUME COND=NO SPECIFIED      08675000
         AIF ('&COND' EQ '').CHKCKEY   IF COND WAS NOT SPECIFIED @L2A   08712500
         AIF (N'&COND LT 2).CHKCON1    IF NUMBER OF ARGUMENTS LT 2      08750000
         MNOTE  4,'&I331 ''COND=&COND'' &TOLONG ''COND=&COND(1)''.'     08800000
&ERROR4  SETA   4                      NOTE ERROR                       08825000
.CHKCON1 ANOP                                                           08850000
&ICOND   SETC   '&COND(1)'                SAVE COND SPECIFICATION       08900000
         AIF ('&ICOND' EQ '').CHKCON2     IF NO ARGUMENT FOR COND       08950000
         AIF ('&ICOND' EQ 'NO').CHKCKEY   IF COND=NO SPECIFIED     @L2A 09000000
         AIF ('&ICOND' EQ 'YES').CHKCON3  IF COND=YES SPECIFIED         09050000
         MNOTE  12,'&I343 ''&COND(1)'' IN ''COND=&COND'' MUST BE ''YES'+09100000
               ' OR ''NO''.'                                            09150000
&ERROR12 SETA   12                     NOTE ERROR                       09200000
         AGO    .CHKCKEY               CONTINUE TO CHECK NEXT      @L2A 09250000
.CHKCON2 ANOP                                                           09300000
         MNOTE  12,'&I313 &NOARG        ''COND'' PARAMETER.'            09350000
&ERROR12 SETA   12                     NOTE ERROR                       09400000
         AGO    .CHKCKEY               CONTINUE TO CHECK NEXT      @L2A 09450000
.CHKCON3 ANOP                                                           09500000
&BUNCN   SETC   '0'                    SET INDICATOR BIT FOR COND=YES   09700000
.*                                                                      09701300
.********************************************************************** 09702600
.*                                                                      09703900
.* CHECK KEYWORD FOR THE CALLRKY SPECIFICATION.                         09705200
.* ARGUMENT CAN BE EITHER 'YES' OR 'NO'.                          @L2A  09706500
.*                                                                      09707800
.********************************************************************** 09709100
.*                                                                      09710400
.CHKCKEY ANOP                                                      @L2A 09711700
&BCKEY   SETC   '0'  SET INDICATOR BIT TO ASSUME CKEY=NO SPECIFIED @L2A 09713000
&ICKEY   SETC   'NO'      SET ARGUMENT TO ASSUME CKEY=NO SPECIFIED @L2A 09714300
         AIF ('&CALLRKY' EQ '').ENDCKEY IF CKEY WAS NOT SPECIFIED  @D5C 09715600
         AIF ('&KEY' EQ '').CKEYOK                                 @L2A 09716900
       MNOTE  12,'&I323 ''CALLRKY'' PARAMETER &INVALID ''KEY''.'   @L2A 09718200
&ERROR12 SETA   12                     NOTE ERROR                  @L2A 09719500
.CKEYOK  ANOP                                                      @L2A 09720800
      AIF (N'&CALLRKY LT 2).CHKCKEY1 IF NUMBER OF ARGUMENTS LT 2   @L2A 09722100
         MNOTE  4,'&I331 ''CALLRKY=&CALLRKY'' &TOLONG ''CALLRKY=&CALLRK+09723400
               Y(1)''.'                                            @L2A 09724700
&ERROR4  SETA   4                      NOTE ERROR                  @L2A 09726000
.CHKCKEY1 ANOP                                                     @L2A 09727300
&ICKEY   SETC   '&CALLRKY(1)'          SAVE CALLRKY SPECIFICATION  @L2A 09728600
         AIF ('&ICKEY' EQ '').CHKCKEY2    IF NO ARGUMENT FOR CKEY  @L2A 09729900
         AIF ('&ICKEY' EQ 'NO').ENDCKEY   IF CALLRKY=NO SPECIFIED  @D5C 09731200
         AIF ('&ICKEY' EQ 'YES').CHKCKEY3 IF CALLRKY=YES           @L2A 09732500
         MNOTE  12,'&I343 ''&CALLRKY(1)'' IN ''CALLRKY=&CALLRKY'' MUST +09733800
               BE ''YES'' OR ''NO''.'                              @L2A 09735100
&ERROR12 SETA   12                     NOTE ERROR                  @L2A 09736400
         AGO    .ENDCKEY            CONTINUE TO CHECK NEXT KEYWORD @D5C 09737700
.CHKCKEY2 ANOP                                                     @L2A 09739000
         MNOTE  12,'&I313 &NOARG        ''CALLRKY'' PARAMETER.'    @L2A 09740300
&ERROR12 SETA   12                     NOTE ERROR                  @L2A 09741600
         AGO    .ENDCKEY            CONTINUE TO CHECK NEXT KEYWORD @D5C 09742900
.CHKCKEY3 ANOP                                                     @L2A 09744200
&BCKEY   SETC   '1'                 SET INDICATOR BIT FOR CKEY=YES @L2A 09745500
.ENDCKEY ANOP                       End of CALLRKY processing      @D5C 09745600
.*                                                                      09745700
.********************************************************************** 09745800
.*                                                                      09745900
.* Check keyword for the CHECKZERO specification.                       09746000
.* Argument can be either 'YES' or 'NO'.                                09746100
.* CHECKZERO is not allowed with RELEASE.                         @D5A  09746200
.*                                                                      09746300
.********************************************************************** 09746400
.*                                                                      09746500
&BCHKZ   SETC   '0'  SET INDICATOR BIT TO ASSUME CKKZ=NO SPECIFIED @D5A 09746600
&ICHKZ   SETC   'NO'      SET ARGUMENT TO ASSUME CHKZ=NO SPECIFIED @D5A 09746700
         AIF ('&CHECKZERO' EQ '').ENDCHKZ IF CHKZ WAS NOT SPECed   @D5A 09746800
         AIF ('&IFUNC' EQ 'OBTAIN').CHKCHKZ4 IF 'OBTAIN' FUNCTION  @D5A 09746900
         MNOTE  12,'&I323 ''CHECKZERO'' PARAMETER &INVALID  ''&IFUNC''.+09747000
               '                                                   @D5A 09747100
&ERROR12 SETA   12                     NOTE ERROR                  @D5A 09747200
         AGO    .ENDCHKZ            CONTINUE TO CHECK NEXT KEYWORD @D5A 09747300
.CHKCHKZ4 ANOP                                                     @D5A 09747400
      AIF (N'&CHECKZERO LT 2).CHKCHKZ1 IF NUMBER OF ARGUMENTS LT 2 @D5A 09747500
         MNOTE  4,'&I331 ''CHECKZERO=&CHECKZERO'' &TOLONG ''CHECKZERO=&+09747600
               CHECKZERO(1)''.'                                    @D5A 09747700
&ERROR4  SETA   4                      NOTE ERROR                  @D5A 09747800
.CHKCHKZ1 ANOP                                                     @D5A 09747900
&ICHKZ   SETC   '&CHECKZERO(1)'      SAVE CHECKZERO SPECIFICATION  @D5A 09748000
         AIF ('&ICHKZ' EQ '').CHKCHKZ2    IF NO ARGUMENT FOR CHKZ  @D5A 09748100
         AIF ('&ICHKZ' EQ 'NO').ENDCHKZ  IF CHECKZERO=NO SPECIFIED @D5A 09748200
         AIF ('&ICHKZ' EQ 'YES').CHKCHKZ3 IF CHECKZERO=YES         @D5A 09748300
         MNOTE  12,'&I343 ''&CHECKZERO(1)'' IN ''CHECKZERO=&CHECKZERO''+09748400
                MUST BE ''YES'' OR ''NO''.'                        @D5A 09748500
&ERROR12 SETA   12                     NOTE ERROR                  @D5A 09748600
         AGO    .ENDCHKZ            CONTINUE TO CHECK NEXT KEYWORD @D5A 09748700
.CHKCHKZ2 ANOP                                                     @D5A 09748800
         MNOTE  12,'&I313 &NOARG        ''CHECKZERO'' PARAMETER.'  @D5A 09748900
&ERROR12 SETA   12                     NOTE ERROR                  @D5A 09749000
         AGO    .ENDCHKZ            CONTINUE TO CHECK NEXT KEYWORD @D5A 09749100
.CHKCHKZ3 ANOP                                                     @D5A 09749200
&BCHKZ   SETC   '1'                 SET INDICATOR BIT FOR CHKZ=YES @D5A 09749300
.ENDCHKZ ANOP                       End of CHECKZERO processing    @D5A 09749400
.*                                                                      09749800
.********************************************************************** 09750200
.*                                                                      09750600
.* Check keyword for the CONTBDY specification.                         09751000
.* CONTBDY is not allowed with RELEASE.                            @L8A 09751400
.* CONTBDY is not allowed with variable-form                       @L8A 09751800
.* CONTBDY is not allowed with LOC=EXPLICIT                        @L8A 09752200
.* CONTBDY is not allowed with BNDRY                               @L8A 09752600
.*                                                                      09753000
.********************************************************************** 09753400
.*                                                                      09753800
&BCBDY   SETC   '0'  SET INDICATOR BIT TO ASSUME NO CBDY           @L8A 09754200
&ICBDY   SETC   ''        SET ARGUMENT TO ASSUME NO CBDY           @L8A 09754600
         AIF ('&CONTBDY' EQ '').ENDCBDY IF CBDY WAS NOT SPECed     @L8A 09755000
         AIF ('&IFUNC' EQ 'OBTAIN').CHKCBDY4 IF 'OBTAIN' FUNCTION  @L8A 09755400
         MNOTE  12,'&I323 ''CONTBDY'' PARAMETER &INVALID  ''&IFUNC''.' +09755800
                                                                   @L8A 09756200
&ERROR12 SETA   12                     NOTE ERROR                  @L8A 09756600
         AGO    .ENDCBDY            CONTINUE TO CHECK NEXT KEYWORD @L8A 09757000
.CHKCBDY4 ANOP                                                     @L8A 09757400
         AIF (N'&LENGTH LT 2).CHKCBDY5  Variable-length            @L8A 09757800
         MNOTE 12,'&I323 ''CONTBDY'' PARAMETER &INVALID ''LENGTH=&LENGT+09758200
               H''.'                                               @L8A 09758600
&ERROR12 SETA   12                     NOTE ERROR                  @L8A 09759000
         AGO    .ENDCBDY            CONTINUE TO CHECK NEXT KEYWORD @L8A 09759400
.CHKCBDY5 ANOP                                                     @L8A 09759800
   AIF ('&ILOC1' NE 'EXPLICIT').CHKCBDY6 IF LOC=EXPLICIT           @L8A 09760200
  MNOTE  12,'&I323 ''CONTBDY'' PARAMETER &INVALID  ''LOC=EXPLICIT''.'  +09760600
                                                                   @L8A 09761000
&ERROR12 SETA   12                     NOTE ERROR                  @L8A 09761400
         AGO    .ENDCBDY            CONTINUE TO CHECK NEXT KEYWORD @L8A 09761800
.CHKCBDY6 ANOP                                                     @L8A 09762200
   AIF ('&BNDRY' EQ '').CHKCBDY7 IF BNDRY                          @L8A 09762600
  MNOTE  12,'&I323 ''CONTBDY'' PARAMETER &INVALID BNDRY.'          @L8A 09763000
&ERROR12 SETA   12                     NOTE ERROR                  @L8A 09763400
         AGO    .ENDCBDY            CONTINUE TO CHECK NEXT KEYWORD @L8A 09763800
.CHKCBDY7 ANOP                                                     @L8A 09764200
      AIF (N'&CONTBDY LT 2).CHKCBDY1 IF NUMBER OF ARGUMENTS LT 2   @L8A 09764600
         MNOTE 12,'&I331 ''CONTBDY=&CONTBDY'' &TOLONG ''CONTBDY=&CONTBD+09765000
               Y(1)''.'                                            @L8A 09765400
&ERROR12 SETA   12                     NOTE ERROR                  @L8A 09765800
         AGO    .ENDCBDY            CONTINUE TO CHECK NEXT KEYWORD @L8A 09766200
.CHKCBDY1 ANOP                                                     @L8A 09766600
&ICBDY   SETC   '&CONTBDY'           SAVE CONTBDY SPECIFICATION    @L8A 09767000
&ICBDY1  SETC   '&CONTBDY(1)'        SAVE CONTBDY SPECIFICATION    @L8A 09767400
         AIF ('&ICBDY' NE '').CHKCBDY3  Continue if argument       @L8A 09767800
         MNOTE  12,'&I313 &NOARG        ''CONTBDY'' PARAMETER.'    @L8A 09768200
&ERROR12 SETA   12                     NOTE ERROR                  @L8A 09768600
         AGO    .ENDCBDY            CONTINUE TO CHECK NEXT KEYWORD @L8A 09769000
.CHKCBDY3 ANOP                                                     @L8A 09769400
&BCBDY   SETC   '1'                 SET INDICATOR BIT FOR CBDY=YES @L8A 09769800
&BAR15   SETC   '1'                 SET INDICATOR BIT FOR AR 15    @L8A 09770200
.ENDCBDY ANOP                       End of CONTBDY processing      @L8A 09770600
.*                                                                      09771000
.********************************************************************** 09771400
.*                                                                      09771800
.* Check keyword for the STARTBDY specification.                        09772200
.* STARTBDY is not allowed with RELEASE.                           @L8A 09772600
.* STARTBDY is not allowed with variable-form                      @L8A 09773000
.* STARTBDY is not allowed with LOC=EXPLICIT                       @L8A 09773400
.* STARTBDY is not allowed with BNDRY                              @L8A 09773800
.*                                                                      09774200
.********************************************************************** 09774600
.*                                                                      09775000
&BSBDY   SETC   '0'  SET INDICATOR BIT TO ASSUME NO SBDY           @L8A 09775400
&ISBDY   SETC   ''        SET ARGUMENT TO ASSUME NO SBDY           @L8A 09775800
         AIF ('&STARTBDY' EQ '').ENDSBDY IF SBDY WAS NOT SPECed    @L8A 09776200
         AIF ('&IFUNC' EQ 'OBTAIN').CHKSBDY4 IF 'OBTAIN' FUNCTION  @L8A 09776600
        MNOTE  12,'&I323 ''STARTBDY'' PARAMETER &INVALID  ''&IFUNC''.' +09777000
                                                                   @L8A 09777400
&ERROR12 SETA   12                     NOTE ERROR                  @L8A 09777800
         AGO    .ENDSBDY            CONTINUE TO CHECK NEXT KEYWORD @L8A 09778200
.CHKSBDY4 ANOP                                                     @L8A 09778600
         AIF (N'&LENGTH LT 2).CHKSBDY5  Variable-length            @L8A 09779000
         MNOTE 12,'&I323 ''STARTBDY'' PARAMETER &INVALID ''LENGTH=&LENG+09779400
               TH''.'                                              @L8A 09779800
&ERROR12 SETA   12                     NOTE ERROR                  @L8A 09780200
         AGO    .ENDSBDY            CONTINUE TO CHECK NEXT KEYWORD @L8A 09780600
.CHKSBDY5 ANOP                                                     @L8A 09781000
   AIF ('&ILOC1' NE 'EXPLICIT').CHKSBDY6 IF LOC=EXPLICIT           @L8A 09781400
  MNOTE  12,'&I323 ''STARTBDY'' PARAMETER &INVALID  ''LOC=EXPLICIT''.' +09781800
                                                                   @L8A 09782200
&ERROR12 SETA   12                     NOTE ERROR                  @L8A 09782600
         AGO    .ENDSBDY            CONTINUE TO CHECK NEXT KEYWORD @L8A 09783000
.CHKSBDY6 ANOP                                                     @L8A 09783400
   AIF ('&BNDRY' EQ '').CHKSBDY7 IF BNDRY                          @L8A 09783800
  MNOTE  12,'&I323 ''STARTBDY'' PARAMETER &INVALID BNDRY.'         @L8A 09784200
&ERROR12 SETA   12                     NOTE ERROR                  @L8A 09784600
         AGO    .ENDSBDY            CONTINUE TO CHECK NEXT KEYWORD @L8A 09785000
.CHKSBDY7 ANOP                                                     @L8A 09785400
      AIF (N'&STARTBDY LT 2).CHKSBDY1 IF NUMBER OF ARGUMENTS LT 2  @L8A 09785800
      MNOTE  8,'&I331 ''STARTBDY=&STARTBDY'' &TOLONG ''STARTBDY=&STARTB+09786200
               DY(1)''.'                                           @L8A 09786600
&ERROR12 SETA   12                     NOTE ERROR                  @L8A 09787000
         AGO    .ENDSBDY            CONTINUE TO CHECK NEXT KEYWORD @L8A 09787400
.CHKSBDY1 ANOP                                                     @L8A 09787800
&ISBDY   SETC   '&STARTBDY'          SAVE STARTBDY SPECIFICATION   @L8A 09788200
&ISBDY1  SETC   '&STARTBDY(1)'       SAVE STARTBDY SPECIFICATION   @L8A 09788600
         AIF ('&ISBDY' NE '').CHKSBDY3  Continue if argument       @L8A 09789000
         MNOTE  12,'&I313 &NOARG        ''STARTBDY'' PARAMETER.'   @L8A 09789400
&ERROR12 SETA   12                     NOTE ERROR                  @L8A 09789800
         AGO    .ENDSBDY            CONTINUE TO CHECK NEXT KEYWORD @L8A 09790200
.CHKSBDY3 ANOP                                                     @L8A 09790600
&BSBDY   SETC   '1'                 SET INDICATOR BIT FOR SBDY=YES @L8A 09791000
&BAR15   SETC   '1'                 SET INDICATOR BIT FOR AR 15    @L8A 09791400
.ENDSBDY ANOP                       End of STARTBDY processing     @L8A 09791800
.*                                                                      09792200
.********************************************************************** 09800000
.*                                                                      09850000
.* CHECK KEYWORD FOR THE ADDRESS OF STORAGE                             10100000
.*                                                                      10150000
.*     When the ADDR parm is passed as a register, addtional checks     10158300
.* are made to make sure that a valid register is selected.  For the    10166600
.* ADDR parm only regs 1 thru 12 are valid with reg 1 being the         10174900
.* preferred register.                                                  10183200
.*                                                                      10191500
.********************************************************************** 10200000
.*                                                                      10225000
         AIF ('&ADDR' EQ '').CHKTADD   IF ADDR WAS NOT SPECIFIED   @D4C 10300000
         AIF (N'&ADDR LT 2).CHKADDR1   IF NUMBER OF ARGUMENTS LT 2      10350000
         MNOTE  4,'&I331 ''ADDR=&ADDR'' &TOLONG ''ADDR=&ADDR(1)''.'     10400000
&ERROR4  SETA   4                      NOTE ERROR                       10425000
&IADDR   SETC   '&ADDR(1)'             SAVE ADDR SPECIFICATION          10450000
         AGO    .CHKADDR2              CONTINUE TO CHECK THE KEYWORD    10500000
.CHKADDR1 ANOP                                                          10550000
&IADDR   SETC   '&ADDR'                SAVE ADDR SPECIFICATION          10600000
.CHKADDR2 ANOP                                                          10637500
         AIF ('&IADDR' EQ '').CHKADDR3  IF ARGUMENT NULL                10656200
&ADDRREG SETB  ('&IADDR'(1,1) EQ '(')   SET IF INA ADDR IS IN REGISTER  10674900
         AIF (NOT &ADDRREG).CHKTADD      IF ADDR NOT IN REGISTER   @D4C 10693600
&IADDR   SETC   '&IADDR'(2,K'&IADDR-2)  STRIP PARENS           @YA30573 10696400
         AIF ('&IADDR' EQ '').CHKADDR3  IF ARGUMENT NULL       @YA30573 10699200
         AIF ('&IADDR' EQ '0').CHKADDR12 IF REG NOT VALID FOR ADDR      10702000
.*                                      ISSUE MNOTE            @YA30573 10704800
         AIF ('&IADDR' EQ '00').CHKADDR12 IF REG NOT VALID FOR ADDR     10705500
.*                                      ISSUE MNOTE            @YA30573 10706200
         AIF ('&IADDR' EQ '13').CHKADDR12 IF REG NOT VALID FOR ADDR     10706900
.*                                      ISSUE MNOTE            @YA30573 10707600
         AIF ('&IADDR' EQ '14').CHKADDR12 IF REG NOT VALID FOR ADDR     10708300
.*                                      ISSUE MNOTE            @YA30573 10709000
         AIF ('&IADDR' EQ '15').CHKADDR12 IF REG NOT VALID FOR ADDR     10709700
.*                                      ISSUE MNOTE            @YA30573 10710400
         AGO    .CHKTADD               CONTINUE WITH NEXT KEYWORD  @D4C 10711100
.*                                                             @YA30573 10711800
.CHKADDR12 ANOP                                                @YA30573 10713200
         MNOTE  12,'&I343 &REGNOGD  ''ADDR'' &VALDREG 1-12.' REG        10716000
.*                                     SPECIFIED WAS NOT 1-12  @YA30573 10718800
&ERROR12 SETA   12                     NOTE ERROR              @YA30573 10721600
         AGO    .CHKTADD               CONTINUE WITH NEXT KEYWORD  @D4C 10724400
.*                                                             @YA30573 10727200
.CHKADDR3 ANOP                                                          10731200
        MNOTE  12,'&I313 &NOARG        ''ADDR'' PARAMETER.'             10750000
&ERROR12 SETA   12                     NOTE ERROR                       10800000
.*                                                                      10801000
.********************************************************************** 10802000
.*                                                                      10803000
.* CHECK KEYWORD FOR THE TCB ADDRESS                                    10804000
.*                                                                      10805000
.*     When the TCBADDR parm is passed as a register, additional checks 10806000
.* are made to make sure that a valid register is selected.  For the    10807000
.* TCBADDR parm only regs 2 through 12 are valid.                       10808000
.*                                                                      10809000
.********************************************************************** 10810000
.*                                                                      10811000
.CHKTADD ANOP                                                      @D4A 10812000
&ITCBADB SETC '0'                      TCBADDR NOT SPECIFIED       @D4A 10813000
         AIF ('&TCBADDR' EQ '').CHKIADD IF TCBADDR NOT SPECIFIED   @D4A 10814000
         AIF (N'&TCBADDR LT 2).CHKTCBA1 IF NUMBER OF ARGUMENTS<2   @D4A 10815000
 MNOTE  4,'&I331 ''TCBADDR=&TCBADDR'' &TOLONG ''TCBADDR=&TCBADDR(1)''.'*10816000
                                                                   @D4A 10817000
&ERROR4  SETA   4                      NOTE ERROR                  @D4A 10818000
&ITCBADD SETC  '&TCBADDR(1)'           SAVE TCBADDR SPECIFICATION  @D4A 10819000
         AGO    .CHKTCBA2            CONTINUE TO CHECK THE KEYWORD @D4A 10820000
.CHKTCBA1 ANOP                                                     @D4A 10821000
&ITCBADD  SETC  '&TCBADDR'             SAVE TCBADDR SPECIFICATION  @D4A 10822000
.CHKTCBA2 ANOP                                                     @D4A 10823000
&ITCBADB SETC '1'                      TCBADDR SPECIFIED           @D4A 10824000
         AIF ('&ITCBADD' EQ '').CHKTCBA3 IF ARGUMENT NULL          @D4A 10825000
&TCBAREG SETB  ('&ITCBADD'(1,1) EQ '(') SET IF TCBADDR IN REGISTER @D4A 10826000
         AIF (NOT &TCBAREG).CHKIADD      IF TCBADDR NOT IN REG     @D4A 10827000
&ITCBADD SETC  '&ITCBADD'(2,K'&ITCBADD-2) STRIP PARENS             @D4A 10828000
         AIF ('&ITCBADD' EQ '').CHKTCBA3 IF ARGUMENT NULL          @D4A 10829000
         AIF (T'&ITCBADD NE 'N').CHKIADD   NOT NUMERIC             @D4A 10830000
         AIF ('&ITCBADD' LT '2').CHKTCBA12   Issue Mnote if not         10831000
.*                                      valid reg for TCBADDR      @D4A 10832000
         AIF ('&ITCBADD' GT '12').CHKTCBA12   Issue Mnote if not        10833000
.*                                      valid reg for TCBADDR      @D4A 10834000
         AGO    .CHKIADD               CONTINUE WITH NEXT KEYWORD  @D4A 10835000
.*                                                                 @D4A 10836000
.CHKTCBA12 ANOP                                                    @D4A 10837000
         MNOTE  12,'&I343 &REGNOGD  ''TCBADDR'' &VALDREG 2-12.' REG     10838000
.*                                     SPECIFIED WAS NOT 2-12      @D4A 10839000
&ERROR12 SETA   12                     NOTE ERROR                  @D4A 10840000
         AGO    .CHKIADD               CONTINUE WITH NEXT KEYWORD  @D4A 10841000
.*                                                                 @D4A 10842000
.CHKTCBA3 ANOP                                                     @D4A 10843000
        MNOTE  12,'&I313 &NOARG        ''TCBADDR'' PARAMETER.'     @D4A 10844000
&ERROR12 SETA   12                     NOTE ERROR                  @D4A 10845000
.*                                                                      10850000
.********************************************************************** 10900000
.*                                                                      10950000
.* CHECK KEYWORD FOR THE INPUT ADDRESS OF STORAGE TO OBTAIN        @L4A 10950500
.*                                                                      10951000
.*     When the INADDR parm is passed as a register, addtional checks   10951500
.* are made to make sure that a valid register is selected.  For the    10952000
.* INADDR parm only regs 1 thru 12 are valid with reg 1 being the       10952500
.* preferred register.                                                  10953000
.*     INADDR requires that (OBTAIN) and LOC=EXPLICIT be specified.     10953500
.*     INADDR is mutually exclusive with BNDRY and variable length      10954000
.*                                                                      10954500
.********************************************************************** 10955000
.*                                                                      10955500
.CHKIADD ANOP                                                           10956000
         AIF ('&INADDR' EQ '').CHKALET IF INADDR WAS NOT SPECIFIED @L4A 10956500
         AIF ('&IFUNC' EQ 'OBTAIN').CHKIAD1 IF 'OBTAIN' FUNCTION   @P7A 10956600
         MNOTE  12,'&I323 ''INADDR'' PARAMETER &INVALID ''&IFUNC''.'    10956700
&ERROR12 SETA   12                     NOTE ERROR                  @P7A 10956800
         AGO    .CHKALET               CONTINUE TO CHECK NEXT      @P7A 10956900
.CHKIAD1 ANOP                                                      @P7A 10957000
         AIF (N'&INADDR LT 2).CHKIADD1 IF NUMBER OF ARGUMENTS LT 2 @L4A 10957100
         MNOTE  4,'&I331 ''INADDR=&INADDR'' &TOLONG                    +10957500
                                     ''INADDR=&INADDR(1)''.'       @L4A 10958000
&ERROR4  SETA   4                      NOTE ERROR                  @L4A 10958500
&IINADDR SETC   '&INADDR(1)'           SAVE INADDR SPECIFICATION   @L4A 10959000
         AGO    .CHKIADD2              CONTINUE TO CHECK KEYWORD   @L4A 10959500
.CHKIADD1 ANOP                                                          10960000
&IINADDR SETC   '&INADDR'              SAVE INADDR SPECIFICATION   @L4A 10960500
.CHKIADD2 ANOP                                                          10961000
         AIF ('&IINADDR' EQ '').CHKIADD3 IF ARGUMENT NULL          @L4A 10961500
&IADRREG SETB  ('&IINADDR'(1,1) EQ '(') SET IF INADDR IN REGISTER  @L4A 10962000
        AIF (NOT &IADRREG).CHKIADDZ     IF INADDR NOT IN REGISTER  @L4A 10962500
&IINADDR SETC   '&IINADDR'(2,K'&IINADDR-2) STRIP PARENS            @L4A 10963000
         AIF ('&IINADDR' EQ '').CHKIADD3 IF ARGUMENT NULL          @L4A 10963500
         AIF ('&IINADDR' EQ '0').CHKIADDY IF REG NOT VALID FOR INADDR   10964000
.*                                      ISSUE MNOTE                @L4A 10964500
         AIF ('&IINADDR' EQ '00').CHKIADDY IF REG NOT VALID FOR INADDR  10965000
.*                                      ISSUE MNOTE                @L4A 10965500
         AIF ('&IINADDR' EQ '13').CHKIADDY IF REG NOT VALID FOR INADDR  10966000
.*                                      ISSUE MNOTE                @L4A 10966500
         AIF ('&IINADDR' EQ '14').CHKIADDY IF REG NOT VALID FOR INADDR  10967000
.*                                      ISSUE MNOTE                @L4A 10967500
         AIF ('&IINADDR' EQ '15').CHKIADDY IF REG NOT VALID FOR INADDR  10968000
.*                                      ISSUE MNOTE                @L4A 10968500
.CHKIADDZ ANOP                                                     @L4A 10969000
         AIF ('&LOC(1)' NE 'EXPLICIT').CHKIADD4 LOC=EXPLICIT MUST BE    10969500
.*                                      SPECIFIED WITH INADDR      @L4A 10970000
         AIF ('&IFUNC' EQ 'RELEASE').CHKIADD5  CANNOT USE INADDR ON     10970500
.*                                      RELEASE REQUEST            @L4A 10971000
         AIF ('&BNDRY' NE '').CHKIADD6  BNDRY NOT ALLOWED WITH INADDR   10971500
.*                                                                 @L4A 10972000
         AIF ('&LENGTH' NE '' AND N'&LENGTH GT 1).CHKIADD7         @L4A 10972500
.*                                     VARIABLE LENGTH WITH INADDR @L4A 10973000
         AIF ('&OWNER' NE '').CHKIADD8 OWNER WITH INADDR           @P7A 10973700
         AGO    .CHKALET               CONTINUE TO CHECK NEXT KEYWORD   10974500
.*                                                                 @L4A 10975000
.CHKIADDY ANOP                                                     @L4A 10975500
         MNOTE  12,'&I343 &REGNOGD  ''INADDR'' &VALDREG 1-12.' REG      10976000
.*                                     SPECIFIED WAS NOT 1-12      @L4A 10976500
&ERROR12 SETA   12                     NOTE ERROR                  @L4A 10977000
         AGO    .CHKALET               CONTINUE WITH NEXT KEYWORD  @L4A 10977500
.*                                                                 @L4A 10978000
.CHKIADD3 ANOP                                                     @L4A 10978500
         MNOTE  12,'&I313 &NOARG       ''INADDR'' PARAMETER.'           10979000
.*                                                                 @L4A 10979500
&ERROR12 SETA   12                     NOTE ERROR                  @L4A 10980000
         AGO    .CHKALET               CONTINUE WITH NEXT KEYWORD  @L4A 10980500
.CHKIADD4 ANOP                                                     @L4A 10981000
         MNOTE  12,'&I313 ''LOC=EXPLICIT'' REQUIRED WITH ''INADDR''.'   10981500
.*                                                                 @P7C 10982000
&ERROR12 SETA   12                     NOTE ERROR                  @L4A 10982500
         AGO    .CHKALET               CONTINUE WITH NEXT KEYWORD  @L4A 10983000
.CHKIADD5 ANOP                                                     @L4A 10983500
         MNOTE  12,'&I313 ''INADDR'' ONLY ALLOWED WITH ''OBTAIN''.'     10984000
.*                                                                 @L4A 10984500
&ERROR12 SETA   12                     NOTE ERROR                  @L4A 10985000
         AGO    .CHKALET               CONTINUE WITH NEXT KEYWORD  @L4A 10985500
.CHKIADD6 ANOP                                                     @L4A 10986000
         MNOTE  12,'&I313 ''BNDRY'' NOT ALLOWED WITH ''INADDR''.'       10986500
.*                                                                 @L4A 10987000
&ERROR12 SETA   12                     NOTE ERROR                  @L4A 10987500
         AGO    .CHKALET               CONTINUE WITH NEXT KEYWORD  @L4A 10988000
.CHKIADD7 ANOP                                                     @L4A 10988500
         MNOTE  12,'&I313 VARIABLE LENGTH NOT ALLOWED WITH ''INADDR''.' 10989000
.*                                                                 @L4A 10989500
&ERROR12 SETA   12                     NOTE ERROR                  @L4A 10990000
         AGO    .CHKALET               CONTINUE WITH NEXT KEYWORD  @L4A 10990500
.CHKIADD8 ANOP                                                     @L4A 10991000
         MNOTE  12,'&I313 ''OWNER'' NOT ALLOWED WITH ''INADDR''.'       10991500
.*                                                                 @P7C 10992000
&ERROR12 SETA   12                     NOTE ERROR                  @L4A 10992500
.*                                                                      10993000
.********************************************************************** 10993500
.*                                                                      10994000
.* CHECK KEYWORD FOR THE ACCESS LIST ENTRY TOKEN                        11000000
.*                                                                      11050000
.********************************************************************** 11100000
.*                                                                      11125000
.CHKALET ANOP                                                           11150000
&BALET   SETC   '0'  SET INDICATOR BIT TO ASSUME PRIMARY ADDRESS SPACE  11166600
&IALET   SETC   '0'  SET ARGUMENT TO ASSUME PRIMARY ADDRESS SPACE       11183200
         AIF ('&ALET' EQ '').CHKLEN    IF ALET WAS NOT SPECIFIED        11200000
         AIF (N'&ALET LT 2).CHKALET1   IF NUMBER OF ARGUMENTS LT 2      11250000
         MNOTE  4,'&I331 ''ALET=&ALET'' &TOLONG ''ALET=&ALET(1)''.'     11300000
&ERROR4  SETA   4                      NOTE ERROR                       11325000
&IALET   SETC   '&ALET(1)'             SAVE ALET SPECIFICATION          11350000
         AGO    .CHKALET2              CONTINUE TO CHECK THE KEYWORD    11400000
.CHKALET1 ANOP                                                          11450000
&IALET   SETC   '&ALET'                SAVE ALET SPECIFICATION          11500000
.CHKALET2 ANOP                                                          11550000
         AIF ('&IALET' EQ '').CHKALET21 IF ARGUMENT IS NULL             11566600
&ALETREG SETB  ('&IALET'(1,1) EQ '(')   SET BIT IF ALET IS IN REGISTER  11583200
         AIF (NOT &ALETREG).CHKALET3    IF ALET IS NOT IN REGISTER      11599800
         AIF ('&IALET'(2,K'&IALET-2) NE '').CHKALET3 IF ARG NOT NULL    11616400
.CHKALET21 ANOP                                                         11633000
         MNOTE  12,'&I313 &NOARG        ''ALET'' PARAMETER.'            11650000
&ERROR12 SETA   12                     NOTE ERROR                       11700000
         AGO    .CHKLEN                CONTINUE TO CHECK NEXT KEYWORD   11712500
.CHKALET3 ANOP                                                          11725000
&BALET   SETC   '1'                    INDICATE ALET SPECIFIED          11737500
.*                                                                      11750000
.********************************************************************** 11800000
.*                                                                      11850000
.* CHECK KEYWORD FOR THE LENGTH OF STORAGE                              11900000
.*                                                                      11950000
.*     When the LENGTH parm is passed as a register, addtional checks   11955500
.* are made to make sure that a valid register is selected.  For the    11961000
.* LENGTH parm only regs 0, 2-12 are valid with reg 0 being the         11966500
.* preferred register.  If min and max lengths are passed, the valid    11972000
.* regs for the min value are 0, 2-12 (with reg 0 being preferred),     11977500
.* the valid regs for the max value are 1-12 (with reg 1 being          11983000
.* preferred).                                                          11988500
.*                                                                      11994000
.********************************************************************** 12000000
.*                                                                      12025000
.CHKLEN  ANOP                                                           12050000
&BVAR    SETC   '0'                    ASSUME SINGLE LENGTH REQUEST     12100000
         AIF ('&LENGTH' NE '').CHKLEN0 IF LENGTH WAS NOT SPECIFIED      12121400
         AIF ('&IFUNC' EQ 'RELEASE').CHKSP   IF RELEASE                 12132100
         MNOTE  12,'&I313 ''LENGTH'' PARAMETER &NOTSPEC.'               12142800
&ERROR12 SETA   12                     NOTE ERROR                       12164200
         AGO    .CHKSP                 CONTINUE TO CHECK NEXT KEYWORD   12185600
.CHKLEN0 ANOP                                                           12207000
         AIF ('&IFUNC' NE 'RELEASE').CHKLNOB IF NOT RELEASE             12228400
         AIF (N'&LENGTH LT 2).CHKLEN11 IF NUMBER OF ARGUMENTS LT 2      12250000
         MNOTE  4,'&I331 ''LENGTH=&LENGTH'' &TOLONG ''LENGTH=&LENGTH(1)+12300000
               ''.'                                                     12350000
&ERROR4  SETA   4                      NOTE ERROR                       12375000
         AGO   .CHKLEN1                CONTINUE TO CHECK THE KEYWORD    12400000
.CHKLNOB ANOP                                                           12425000
         AIF (N'&LENGTH LT 3).CHKLEN10 IF NUMBER  OF ARGUMENTS LT 3     12450000
         MNOTE  4,'&I331 ''LENGTH=&LENGTH'' &TOLONG ''LENGTH=(&LENGTH(1+12500000
               ),&LENGTH(2))''.'                                        12550000
&ERROR4  SETA   4                      NOTE ERROR                       12600000
         AGO   .CHKLEN1                CONTINUE TO CHECK THE KEYWORD    12625000
.CHKLEN10 ANOP                                                          12650000
         AIF (N'&LENGTH LT 2).CHKLEN11 IF NUMBER OF ARGUMENTS LT 2      12675000
.CHKLEN1 ANOP                                                           12700000
&ILEN1   SETC   '&LENGTH(1)'           SAVE 1ST ARGUMENT OF LENGTH      12750000
         AGO   .CHKLEN12               CONTINUE TO CHECK THE KEYWORD    12765000
.CHKLEN11 ANOP                                                          12780000
&ILEN1   SETC   '&LENGTH'              SAVE ARGUMENT OF LENGTH          12795000
.CHKLEN12 ANOP                                                          12810000
         AIF ('&ILEN1' EQ '').CHKLEN13 IF 1ST ARGUMENT IS NULL          12825000
&LEN1REG SETB  ('&ILEN1'(1,1) EQ '(')  SET BIT IF LEN1 IS IN REGISTER   12840000
         AIF (NOT &LEN1REG).CHKLEN2    IF LEN1 IS NOT IN REGISTER       12855000
&ILEN1   SETC   '&ILEN1'(2,K'&ILEN1-2) STRIP PARENS            @YA30573 12857300
         AIF ('&ILEN1' EQ '').CHKLEN13 IF 1ST ARGUMENT IS NULL @YA30573 12859600
         AIF ('&ILEN1' EQ '1').CHKLEN14 IF REG NOT VALID                12861900
.*                                     ISSUE MNOTE             @YA30573 12864200
         AIF ('&ILEN1' EQ '01').CHKLEN14 IF REG NOT VALID               12864800
.*                                     ISSUE MNOTE             @YA30573 12865400
         AIF ('&ILEN1' EQ '13').CHKLEN14 IF REG NOT VALID               12866000
.*                                     ISSUE MNOTE             @YA30573 12866600
         AIF ('&ILEN1' EQ '14').CHKLEN14 IF REG NOT VALID               12867200
.*                                     ISSUE MNOTE             @YA30573 12867800
         AIF ('&ILEN1' EQ '15').CHKLEN14 IF REG NOT VALID               12868400
.*                                     ISSUE MNOTE             @YA30573 12869000
         AGO    .CHKLEN2               CONTINUE TO CHECK NEXT ARGUMENT  12869600
.*                                                             @YA30573 12870200
.CHKLEN14 ANOP                                                 @YA30573 12871100
         MNOTE  12,'&I343 &REGNOGD  ''LENGTH'' &VALDREG 0,2-12.' REG    12873400
.*                                    SPECIFIED WAS NOT 0,2-12 @YA30573 12875700
&ERROR12 SETA   12                     NOTE ERROR              @YA30573 12878000
         AGO    .CHKLEN2               CONTINUE TO CHECK NEXT ARGUMENT  12880300
.*                                                             @YA30573 12882600
.CHKLEN13 ANOP                                                          12885000
         MNOTE  12,'&I313 &NOVALU1 ''LENGTH'' PARAMETER.'               12900000
&ERROR12 SETA   12                                                      12950000
.CHKLEN2 ANOP                                                           13000000
         AIF (N'&LENGTH EQ 1).CHKSP    IF ONLY ONE ARGUMENT SPECIFIED   13050000
         AIF ('&IFUNC' EQ 'RELEASE').CHKSP IF RELEASE                   13100000
&ILEN2 SETC     '&LENGTH(2)'           SAVE 2ND ARGUMENT OF LENGTH      13150000
&BVAR    SETC   '1'                    INDICATE VARIABLE LENGTH REQUEST 13200000
         AIF ('&ILEN2' EQ '').CHKLEN21 IF 2ND ARGUMENT IS NULL          13216600
&LEN2REG SETB  ('&ILEN2'(1,1) EQ '(')  SET BIT IF LEN2 IS IN REGISTER   13233200
         AIF (NOT &LEN2REG).CHKSP      IF LEN2 IS NOT IN REGISTER       13249800
&ILEN2   SETC   '&ILEN2'(2,K'&ILEN2-2) STRIP PARENS            @YA30573 13252300
         AIF ('&ILEN2' EQ '').CHKLEN21 IF 2ND ARGUMENT IS NULL @YA30573 13254800
         AIF ('&ILEN2' EQ '0').CHKLEN24 IF REG NOT VALID                13257300
.*                                     ISSUE MNOTE             @YA30573 13259800
         AIF ('&ILEN2' EQ '00').CHKLEN24 IF REG NOT VALID               13260400
.*                                     ISSUE MNOTE             @YA30573 13261000
         AIF ('&ILEN2' EQ '13').CHKLEN24 IF REG NOT VALID               13261600
.*                                     ISSUE MNOTE             @YA30573 13262200
         AIF ('&ILEN2' EQ '14').CHKLEN24 IF REG NOT VALID               13262800
.*                                     ISSUE MNOTE             @YA30573 13263400
         AIF ('&ILEN2' EQ '15').CHKLEN24 IF REG NOT VALID               13264000
.*                                     ISSUE MNOTE             @YA30573 13264600
         AGO    .CHKSP                 CONTINUE TO CHECK NEXT KEYWORD   13265200
.*                                                             @YA30573 13265800
.CHKLEN24 ANOP                                                 @YA30573 13267300
         MNOTE  12,'&I343 &REGNOGD  2ND ''LENGTH'' &VALDREG 1-12.' REG  13269800
.*                                     SPECIFIED WAS NOT 1-12  @YA30573 13272300
&ERROR12 SETA   12                     NOTE ERROR              @YA30573 13274800
         AGO    .CHKSP                 CONTINUE TO CHECK NEXT KEYWORD   13277300
.*                                                             @YA30573 13279800
.CHKLEN21 ANOP                                                          13283000
         MNOTE  12,'&I313 &NOVALU2 ''LENGTH'' PARAMETER.'               13300000
&ERROR12 SETA   12                     NOTE ERROR                       13350000
.*                                                                      13400000
.********************************************************************** 13450000
.*                                                                      13500000
.* CHECK KEYWORD FOR THE SUBPOOL                                        13550000
.*                                                                      13554500
.*     When the SP parm is passed as a register, addtional checks       13559000
.* are made to make sure that a valid register is selected.  For the    13563500
.* SP parm only regs 2 - 12 and 15 are valid with reg 15 being the      13568000
.* preferred register.  KEY and SP can be passed in the same reg but    13572500
.* the KEY value must be in bits 8-11 and the SP value must be in       13577000
.* bits 16-23.  if SP is passed in its own reg it must be in bits       13581500
.* 24-31.  the remainder of the bits should be zero in either case.     13586000
.*     When the SP parm is passed as a decimal number, the value is     13590500
.* checked to be 0-255.                                                 13595000
.*                                                                      13600000
.********************************************************************** 13650000
.*                                                                      13675000
.CHKSP   ANOP                                                           13700000
&ISP     SETC   '0'                    ASSUME SUBPOOL 0                 13725000
         AIF ('&SP' EQ '').CHKBNDY     IF SP WAS NOT SPECIFIED          13750000
         AIF (N'&SP  LT 2).CHKSP1      IF NUMBER OF ARGUMENTS LT 2      13800000
         MNOTE  4,'&I331 ''SP=&SP'' &TOLONG ''SP=&SP(1)''.'             13850000
&ERROR4  SETA   4                      NOTE ERROR                       13875000
&ISP     SETC   '&SP(1)'               SAVE SP SPECIFICATION            13950000
         AGO    .CHKSP10               CONTINUE TO CHECK NEXT KEYWORD   13960000
.CHKSP1  ANOP                                                           13970000
&ISP     SETC   '&SP'                  SAVE SP SPECIFICATION            13980000
.CHKSP10 ANOP                                                           13990000
         AIF ('&ISP' EQ '').CHKSP11    IF ARGUMENT IS NULL              14000000
&SPREG   SETB  ('&ISP'(1,1) EQ '(')    SET BIT IF SP IS IN REGISTER     14010000
         AIF (NOT &SPREG).CHKSP2       IF SP IS NOT IN REGISTER         14020000
&ISP     SETC '&ISP'(2,K'&ISP-2)       STRIP PARENS            @YA30573 14021300
         AIF ('&ISP' EQ '').CHKSP11    IF ARGUMENT IS NULL     @YA30573 14022600
         AIF ('&ISP' EQ '0').CHKSP12   IF REG NOT VALID                 14023900
.*                                     ISSUE MNOTE             @YA30573 14025200
         AIF ('&ISP' EQ '1').CHKSP12   IF REG NOT VALID                 14025700
.*                                     ISSUE MNOTE             @YA30573 14026200
         AIF ('&ISP' EQ '00').CHKSP12  IF REG NOT VALID                 14026700
.*                                     ISSUE MNOTE             @YA30573 14027200
         AIF ('&ISP' EQ '01').CHKSP12  IF REG NOT VALID                 14027700
.*                                     ISSUE MNOTE             @YA30573 14028200
         AIF ('&ISP' EQ '13').CHKSP12  IF REG NOT VALID                 14028700
.*                                     ISSUE MNOTE             @YA30573 14029200
         AIF ('&ISP' EQ '14').CHKSP12  IF REG NOT VALID                 14029700
.*                                     ISSUE MNOTE             @YA30573 14030200
         AGO    .CHKBNDY               CONTINUE TO CHECK NEXT KEYWORD   14030700
.*                                                             @YA30573 14031200
.CHKSP12 ANOP                                                  @YA30573 14031700
         MNOTE  12,'&I343 &REGNOGD  ''SP'' &VALDREG 2-12,15.' REG       14033000
.*                                   SPECIFIED WAS NOT 2-12,15 @YA30573 14034300
&ERROR12 SETA   12                     NOTE ERROR              @YA30573 14035600
         AGO    .CHKBNDY               CONTINUE TO CHECK NEXT KEYWORD   14036900
.*                                                             @YA30573 14038200
.CHKSP11 ANOP                                                           14040000
         MNOTE  12,'&I313 &NOARG        ''SP'' PARAMETER.'              14050000
&ERROR12 SETA   12                     NOTE ERROR                       14100000
         AGO    .CHKBNDY               CONTINUE TO CHECK NEXT KEYWORD   14150000
.CHKSP2  ANOP                                                           14200000
         AIF (T'&ISP NE 'N').CHKBNDY   NOT SPECIFIED AS A DECIMAL       14250000
         AIF (&ISP LE 255).CHKBNDY     VALUE LESS THAN OR EQUAL TO 255  14300000
&ERROR12 SETA   12                     NOTE ERROR                       14350000
         MNOTE  12,'&I343 ''&ISP'' IN ''SP=&ISP'' MUST BE LESS THAN 256+14400000
               .'                                                       14450000
.*                                                                      14500000
.********************************************************************** 14550000
.*                                                                      14600000
.* CHECK KEYWORD FOR THE BOUNDARY USAGE.  ARGUMENT ONE CAN BE EITHER    14650000
.* 'DBLWD' OR 'PAGE'.                                                   14700000
.* BNDRY CANNOT BE SPECIFIED WITH RELEASE.                              14725000
.*                                                                      14750000
.********************************************************************** 14800000
.*                                                                      14825000
.CHKBNDY ANOP                                                           14850000
&BBND    SETC   '0'      SET INDICATOR BIT TO ASSUME BNDRY=DBLWD        14900000
&IBNDRY  SETC   'DBLWD'  SET ARGUMENT TO ASSUME BNDRY=DBLWD             14925000
         AIF ('&BNDRY' EQ '').CHKKEY   IF BNDRY WAS NOT SPECIFIED       14950000
         AIF ('&IFUNC' EQ 'OBTAIN').CHKBNDY1 IF 'OBTAIN' FUNCTION       14964200
         MNOTE  12,'&I323 ''BNDRY'' PARAMETER &INVALID  ''&IFUNC''.'    14978400
&ERROR12 SETA   12                     NOTE ERROR                       14992600
         AGO    .CHKKEY                CONTINUE TO CHECK NEXT KEYWORD   15006800
.CHKBNDY1 ANOP                                                          15021000
         AIF (N'&BNDRY LT 2).CHKBNDY2  IF NUMBER OF ARGUMENTS LT 2      15035200
         MNOTE  4,'&I331 ''BNDRY=&BNDRY'' &TOLONG ''BNDRY=&BNDRY(1)''.' 15050000
&ERROR4  SETA   4                      NOTE ERROR                       15075000
.CHKBNDY2 ANOP                                                          15100000
&IBNDRY  SETC   '&BNDRY(1)'            SAVE BNDRY SPECIFICATION         15150000
         AIF ('&IBNDRY' NE '').CHKBNDY3 IF ARGUMENT NOT NULL            15172200
         MNOTE  12,'&I313 &NOARG        ''BNDRY'' PARAMETER.'           15194400
&ERROR12 SETA   12                     NOTE ERROR                       15216600
         AGO    .CHKKEY                CONTINUE TO CHECK NEXT KEYWORD   15238800
.CHKBNDY3 ANOP                                                          15261000
         AIF ('&IBNDRY' EQ 'PAGE').CHKBNDY4 IF BNDRY=PAGE               15283200
         AIF ('&IBNDRY' EQ 'DBLWD').CHKKEY  IF BNDRY=DBLWD              15305400
&ERROR12 SETA   12                     NOTE ERROR                       15327600
         MNOTE  12,'&I343 ''&BNDRY(1)'' IN ''BNDRY=&BNDRY'' MUST BE ''P+15350000
               AGE'' OR ''DBLWD''.'                                     15387500
         AGO    .CHKKEY                CONTINUE TO CHECK NEXT KEYWORD   15425000
.CHKBNDY4 ANOP                                                          15462500
&BBND    SETC   '1'                    SET INDICATOR BIT FOR BNDRY=PAGE 15500000
.*                                                                      15700000
.********************************************************************** 15750000
.*                                                                      15800000
.* CHECK KEYWORD FOR THE KEY NUMBER                                     15850000
.*                                                                      15900000
.*     When the KEY parm is passed as a register, addtional checks      15904500
.* are made to make sure that a valid register is selected.  For the    15909000
.* KEY parm only regs 2 - 12 and 15 are valid with reg 15 being the     15913500
.* preferred register.  KEY and SP can be passed in the same reg but    15918000
.* the KEY value must be in bits 8-11 and the SP value must be in       15922500
.* bits 16-23.  if KEY is passed in its own reg it must be in bits      15927000
.* 24-27.  the remainder of the bits should be zero in either case.     15931500
.*     When the KEY parm is passed as a decimal number, the value is    15936000
.* checked to be 0-16.                                                  15940500
.*                                                                      15945000
.********************************************************************** 15950000
.*                                                                      15975000
.CHKKEY  ANOP                                                           16000000
&IKEY    SETC   '0'                    ASSUME KEY 0                     16025000
         AIF ('&KEY' EQ '').CHKLOC     IF KEY WAS NOT SPECIFIED         16050000
         AIF (N'&KEY LT 2).CHKKEY1     IF NUMBER OF ARGUMENTS LT 2      16100000
         MNOTE  4,'&I331 ''KEY=&KEY'' &TOLONG ''KEY=&KEY(1)''.'         16150000
&ERROR4  SETA   4                      NOTE ERROR                       16175000
&IKEY    SETC   '&KEY(1)'              SAVE KEY SPECIFICATION           16250000
         AGO    .CHKKEY10              CONTINUE TO CHECK NEXT KEYWORD   16260000
.CHKKEY1 ANOP                                                           16270000
&IKEY    SETC   '&KEY'                 SAVE KEY SPECIFICATION           16280000
.CHKKEY10 ANOP                                                          16290000
         AIF ('&IKEY' EQ '').CHKKEY11  IF ARGUMENT NULL                 16300000
&KEYREG  SETB  ('&IKEY'(1,1) EQ '(')   SET BIT IF KEY IS IN REG         16310000
         AIF (NOT &KEYREG).CHKKEY2     IF KEY IS NOT IN REGISTER        16320000
&IKEY    SETC   '&IKEY'(2,K'&IKEY-2)   STRIP PARENS            @YA30573 16321300
         AIF ('&IKEY' EQ '').CHKKEY11  IF ARGUMENT NULL        @YA30573 16322600
         AIF ('&IKEY' EQ '0').CHKKEY12 IF REG NOT VALID                 16323900
.*                                     ISSUE MNOTE             @YA30573 16325200
         AIF ('&IKEY' EQ '1').CHKKEY12 IF REG NOT VALID                 16325700
.*                                     ISSUE MNOTE             @YA30573 16326200
         AIF ('&IKEY' EQ '00').CHKKEY12 IF REG NOT VALID                16326700
.*                                     ISSUE MNOTE             @YA30573 16327200
         AIF ('&IKEY' EQ '01').CHKKEY12 IF REG NOT VALID                16327700
.*                                     ISSUE MNOTE             @YA30573 16328200
         AIF ('&IKEY' EQ '13').CHKKEY12 IF REG NOT VALID                16328700
.*                                     ISSUE MNOTE             @YA30573 16329200
         AIF ('&IKEY' EQ '14').CHKKEY12 IF REG NOT VALID                16329700
.*                                     ISSUE MNOTE             @YA30573 16330200
         AGO    .CHKLOC                CONTINUE TO CHECK NEXT KEYWORD   16330700
.*                                                             @YA30573 16331200
.CHKKEY12 ANOP                                                 @YA30573 16331700
         MNOTE  12,'&I343 &REGNOGD  ''KEY'' &VALDREG 2-12,15.' REG      16333000
.*                                   SPECIFIED WAS NOT 2-12,15 @YA30573 16334300
&ERROR12 SETA   12                     NOTE ERROR              @YA30573 16335600
         AGO    .CHKLOC                CONTINUE TO CHECK NEXT KEYWORD   16336900
.*                                                             @YA30573 16338200
.CHKKEY11 ANOP                                                          16340000
         MNOTE  12,'&I313 &NOARG        ''KEY'' PARAMETER.'             16350000
&ERROR12 SETA   12                     NOTE ERROR                       16400000
         AGO    .CHKLOC                CONTINUE TO CHECK NEXT KEYWORD   16450000
.CHKKEY2 ANOP                                                           16500000
         AIF (T'&IKEY NE 'N').CHKLOC   IF NOT A DECIMAL NUMBER          16525000
         AIF (&IKEY LT 16).CHKLOC      IF LESS THAN 16                  16550000
         MNOTE  12,'&I343 ''&IKEY'' IN ''KEY=&IKEY'' MUST BE A DECIMAL +16600000
               NUMBER LESS THAN 16.'                                    16650000
&ERROR12 SETA   12                     NOTE ERROR                       16700000
.*                                                                      16800000
.********************************************************************** 16850000
.*                                                                      16900000
.* CHECK KEYWORD FOR THE LOCATION SPECIFICATION. THERE MAY BE EITHER    16950000
.* ONE OR TWO ARGUMENTS.  THE FIRST STANDS FOR THE VIRTUAL STORAGE AND  17000000
.* MAY BE EITHER 'RES', '24', '31' or 'EXPLICIT'.        THE 2nd   @L4C 17016600
.* ARGUMENT STANDS FOR REAL STORAGE AND MAY BE '31',                    17033200
.* OR '64', OR, IF EXPLICIT                                             17049800
.* WAS SPECIFIED FOR THE FIRST ARGUMENT, '24'. THE DEFAULT FOR     @L4C 17066400
.* THE SECOND ARGUMENT WHEN THE FIRST ARGUMENT IS 'EXPLICIT' IS    @L4C 17083200
.* '31'.THE DEFAULT FOR THE FIRST ARGUMENT IS 'RES'.               @L4C 17104100
.* LOC CANNOT BE SPECIFIED WITH RELEASE.                                17125000
.* INADDR IS REQUIRED WITH LOC=EXPLICIT                            @L4A 17137500
.*                                                                      17150000
.********************************************************************** 17200000
.*                                                                      17240000
.CHKLOC  ANOP                                                           17280000
&BLOC    SETC   '00'                   ASSUME RES FOR VIRTUAL           17320000
&BREAL   SETC   '0'                    ASSUME 31 NOT SPECIFIED          17346600
&BREAL64 SETC   '0'                    ASSUME 64 NOT SPECIFIED     @L7A 17373300
         AIF ('&LOC' EQ '').CHKLINK    IF LOC WAS NOT SPECIFIED         17400000
         AIF ('&IFUNC' EQ 'OBTAIN').CHKLOC1 IF 'OBTAIN' FUNCTION        17410700
         MNOTE  12,'&I323 ''LOC'' PARAMETER &INVALID    ''&IFUNC''.'    17421400
&ERROR12 SETA   12                     NOTE ERROR                       17432100
         AGO    .CHKLINK               CONTINUE TO CHECK NEXT KEYWORD   17442800
.CHKLOC1 ANOP                                                           17453500
         AIF (N'&LOC  LT 3).CHKLOC2    IF NUMBER OF ARGUMENTS LT 3      17464200
         MNOTE  4,'&I331 ''LOC=&LOC'' &TOLONG ''LOC=(&LOC(1),&LOC(2))''+17475000
               .'                                                       17500000
&ERROR4  SETA   4                      NOTE ERROR                       17525000
.CHKLOC2 ANOP                                                           17550000
&ILOC1   SETC   '&LOC(1)'              SAVE FIRST ARGUMENT              17600000
         AIF ('&ILOC1' NE '').CHKLOC3  IF FIRST ARGUMENT NOT NULL       17621400
         MNOTE  12,'&I313 &NOVALU1 ''LOC'' PARAMETER.'                  17642800
&ERROR12 SETA   12                     NOTE ERROR                       17664200
         AGO    .CHKLOC6               CONTINUE TO CHECK THE KEYWORD    17685600
.CHKLOC3 ANOP                                                           17707000
         AIF ('&ILOC1' EQ 'EXPLICIT').CHKLOC6 IF EXPLICIT LOCATION      17721300
         AIF ('&ILOC1' EQ 'RES').CHKLOC7    IF RES LOCATION             17735600
         AIF ('&ILOC1' EQ 'BELOW').CHKLOC4  IF BELOW LOCATION           17750000
         AIF ('&ILOC1' EQ '24').CHKLOC4     IF 24 LOCATION              17775000
         AIF ('&ILOC1' EQ 'ANY').CHKLOC5    IF ANY LOCATION             17800000
         AIF ('&ILOC1' EQ '31').CHKLOC5     IF ANY LOCATION             17837500
         MNOTE  12,'&I343 &ARGM1 ''LOC=&LOC'' MUST BE ''RES'', ''24'', +17875000
               ''31'' OR ''EXPLICIT''.'                            @L4C 17912500
&ERROR12 SETA   12                     NOTE ERROR                       17950000
         AGO    .CHKLOC7               CONTINUE TO CHECK KEYWORD   @L4C 18000000
.CHKLOC4 ANOP                          24 LOCATION                      18050000
&BLOC    SETC   '01'                   SET INDICATOR BIT                18200000
         AGO    .CHKLOC7               CHECK SECOND OPERAND        @L4C 18250000
.CHKLOC5 ANOP                          31 LOCATION                      18300000
&BLOC    SETC   '11'                   SET INDICATOR BIT                18350000
         AGO    .CHKLOC7               CHECK SECOND OPERAND        @L4A 18361300
.CHKLOC6 ANOP                          EXPLICIT LOCATION           @L4A 18372600
&BLOC    SETC   '10'                   SET INDICATOR BIT           @L4A 18383900
         AIF ('&IINADDR' NE '').CHKLOC7 INADDR REQUIRED WITH EXPLICIT   18395200
.*                                                                 @L4A 18406500
         MNOTE  12,'&I313 ''INADDR'' IS REQUIRED WITH ''LOC=EXPLICIT''.+18417800
               '                                                   @L4A 18429100
&ERROR12 SETA   12                     NOTE ERROR                       18440400
         AGO    .CHKLINK               CONTINUE TO CHECK NEXT KEYWORD   18451700
.CHKLOC7 ANOP                          CHECK SECOND OPERAND        @L4C 18463000
         AIF (N'&LOC  EQ 1).CHKLOC9    IF ONLY 1 ARGUMENT WAS SPECIFIED 18474300
&ILOC2   SETC   '&LOC(2)'              SAVE SECOND ARGUMENT             18485600
         AIF ('&ILOC2' NE '').CHKLOC8  IF SECOND ARGUMENT NOT NULL @L4C 18528400
         MNOTE  12,'&I313 &NOVALU2 ''LOC'' PARAMETER.'                  18571200
&ERROR12 SETA   12                     NOTE ERROR                       18614000
         AGO    .CHKLINK               CONTINUE TO CHECK NEXT KEYWORD   18656800
.CHKLOC8 ANOP                          SECOND OPERAND IS 31        @L4C 18680100
         AIF ('&ILOC2' EQ 'ANY').CHKLOCA ANY LOCATION                   18703400
         AIF ('&ILOC2' EQ '31').CHKLOCA ANY LOCATION                    18717700
         AIF ('&ILOC2' EQ '64').CHKLOC64 ANY 64                    @L8A 18732000
         AIF ('&ILOC1' EQ 'EXPLICIT').CHKLOCB MAYBE EXPLICIT,24    @L4A 18746300
         MNOTE  12,'&I343 &ARGM2 ''LOC=&LOC'' MUST BE ''31''.'          18760600
&ERROR12 SETA   12                     NOTE ERROR                       18775000
         AGO    .CHKLINK               CONTINUE TO CHECK NEXT KEYWORD   18781200
.CHKLOC9 ANOP                          NO SECOND OPERAND SPECIFIED @L4A 18784300
         AIF ('&ILOC1' NE 'EXPLICIT').CHKLINK FIRST ARG NOT EXPICIT@L4A 18787400
.CHKLOCA ANOP                          SECOND OPERAND IS 31        @L4C 18789700
&BREAL   SETC   '1'                    INDICATE 31 SPECIFIED            18792000
         AGO    .CHKLINK               CHECK NEXT KEYWORD          @L4A 18794500
.CHKLOC64 ANOP                         SECOND OPERAND IS 64        @L8A 18794700
&BREAL64 SETC   '1'                    INDICATE 64 SPECIFIED       @L7A 18794900
&BREAL   SETC   '1'                    INDICATE 31 SPECIFIED       @02A 18795000
         AGO    .CHKLINK               CHECK NEXT KEYWORD          @L8A 18795100
.CHKLOCB ANOP                          EXPLICIT,xxx                @L4C 18795400
         AIF ('&ILOC2' EQ 'BELOW').CHKLINK  BELOW SPECIFIED             18796300
         AIF ('&ILOC2' EQ '24').CHKLINK     24 SPECIFIED                18796900
         MNOTE  12,'&I343 &ARGM2 ''LOC=&LOC'' MUST BE ''24'', ''31'', O+18797500
               R ''64''.'                                               18798100
&ERROR12 SETA   12                     NOTE ERROR                       18799000
.*                                                                      18800000
.********************************************************************** 18850000
.*                                                                      18900000
.* CHECK KEYWORD FOR THE LINKAGE.  ARGUMENT CAN ONLY BE 'SYSTEM'        18950000
.*                                                                      19000000
.********************************************************************** 19050000
.*                                                                      19075000
.CHKLINK ANOP                                                           19100000
&ILINK   SETC   'SYSTEM'               ASSUME LINKAGE SYSTEM            19125000
         AIF ('&LINKAGE' EQ '').CHKOWNR  IF LINKAGE WAS NOT SPECIFIED   19156200
         AIF (N'&LINKAGE  LT 2).CHKLINK1 IF NUMBER OF ARGUMENTS LT 2    19203100
         MNOTE  4,'&I331 ''LINKAGE=&LINKAGE'' &TOLONG ''LINKAGE=&LINKAG+19250000
               E(1)''.'                                                 19300000
&ERROR4  SETA   4                      NOTE ERROR                       19325000
.CHKLINK1 ANOP                                                          19350000
&ILINK   SETC   '&LINKAGE(1)'          SAVE LINKAGE SPECIFICATION       19400000
         AIF ('&ILINK' NE '').CHKLINK2 IF ARGUMENT NOT NULL             19414200
         MNOTE  12,'&I313 &NOARG        ''LINKAGE'' PARAMETER.'         19428400
&ERROR12 SETA   12                     NOTE ERROR                       19442600
         AGO    .CHKOWNR               CONTINUE TO CHECK NEXT KEYWORD   19456800
.CHKLINK2 ANOP                                                          19471000
         AIF ('&ILINK' EQ 'SYSTEM').CHKOWNR IF NOT EQUAL TO SYSTEM      19485200
         MNOTE 12,'&I343 ''&LINKAGE(1)'' IN ''LINKAGE=&LINKAGE'' MUST B+19500000
               E ''SYSTEM''.'                                           19550000
&ERROR12 SETA   12                     NOTE ERROR                       19600000
.*                                                                      19602500
.********************************************************************** 19605000
.*                                                                      19607500
.* CHECK KEYWORD FOR THE OWNER.                                    @L3A 19610000
.*                                                                      19612500
.********************************************************************** 19615000
.*                                                                      19617500
.CHKOWNR ANOP                                                      @L3A 19620000
&IOWN    SETC   '00'                   ASSUME OWNER=HOME           @L3A 19622500
         AIF ('&OWNER' EQ '').CHKRTCD    IF OWNER NOT SPECIFIED    @L3A 19625000
         AIF (N'&OWNER    LT 2).CHKOWN1  IF NUMBER OF ARGS LT 2    @L3A 19627500
         MNOTE  4,'&I331 ''OWNER=&OWNER'' &TOLONG ''OWNER=&OWNER(1)''.'*19630000
                                                                   @L3A 19632500
&ERROR4  SETA   4                      NOTE ERROR                  @L3A 19635000
.CHKOWN1 ANOP                                                      @L3A 19637500
         AIF   ('&OWNER(1)' NE 'HOME').CHKOWN2                     @L3A 19640000
&IOWN    SETC   '00'                   OWNER=HOME                  @L3A 19642500
         AGO   .CHKOWN9                                            @L3A 19645000
.CHKOWN2 ANOP                                                      @L3A 19647500
         AIF   ('&OWNER(1)' NE 'PRIMARY').CHKOWN3                  @L3A 19650000
&IOWN    SETC   '01'                   OWNER = PRIMARY             @L3A 19652500
         AGO   .CHKOWN9                                            @L3A 19655000
.CHKOWN3 ANOP                                                      @L3A 19657500
         AIF   ('&OWNER(1)' NE 'SECONDARY').CHKOWN4                @L3A 19660000
&IOWN    SETC   '10'                   OWNER = SECONDARY           @L3A 19662500
         AGO   .CHKOWN9                                            @L3A 19665000
.CHKOWN4 ANOP                                                      @L3A 19667500
         AIF   ('&OWNER(1)' NE 'SYSTEM').CHKOWN5                   @L3A 19670000
&IOWN    SETC   '11'                   OWNER = SYSTEM              @L3A 19672500
         AGO   .CHKOWN9                                            @L3A 19675000
.CHKOWN5 ANOP                                                      @L3A 19677500
         MNOTE 12,'&I343 ''&OWNER(1)'' IN ''OWNER=&OWNER'' MUST BE ''HO+19680000
               ME'', ''PRIMARY'', ''SECONDARY'', OR ''SYSTEM''.'   @L3A 19682500
&ERROR12 SETA   12                     NOTE ERROR                  @L3A 19685000
.CHKOWN9 ANOP                                                      @L3A 19687500
         AIF ('&IFUNC' EQ 'OBTAIN').CHKRTCD IF 'OBTAIN' FUNCTION   @L3A 19690000
      MNOTE 12,'&I323 ''OWNER'' PARAMETER &INVALID ''RELEASE''.'   @L3A 19692500
&ERROR12 SETA   12                     NOTE ERROR                  @L3A 19695000
         AGO    .CHKRTCD               CHECK NEXT KEYWORD          @L3A 19697500
.*                                                                      19700000
.********************************************************************** 19750000
.*                                                                      19800000
.* CHECK KEYWORD FOR THE RETURN CODE                                    19850000
.*                                                                      19900000
.*     When the RTCD parm is passed as a register, addtional checks     19908300
.* are made to make sure that a valid register is selected.  For the    19916600
.* RTCD parm only regs 2 - 12 and 15 are valid with reg 15 being the    19924900
.* preferred register.                                                  19933200
.*                                                                      19941500
.********************************************************************** 19950000
.*                                                                      20000000
.CHKRTCD ANOP                                                           20050000
         AIF ('&RTCD' EQ '').CHKSEM    IF RTCD WAS NOT SPECIFIED        20100000
         AIF ('&ICOND' EQ 'NO' AND '&ICHKZ' EQ 'NO').CHKSEM   If        20112500
.*                                     neither COND=YES or              20125000
.*                                     CHECKZERO=YES               @D5C 20137500
         AIF (N'&RTCD LT 2).CHKRTCD1   IF NUMBER OF ARGUMENTS LT 2      20150000
         MNOTE  4,'&I331 ''RTCD=&RTCD'' &TOLONG ''RTCD=&RTCD(1)''.'     20200000
&ERROR4  SETA   4                      NOTE ERROR                       20225000
&IRTCD   SETC   '&RTCD(1)'             SAVE RTCD SPECIFICATION          20250000
         AGO    .CHKRTCD10                                              20300000
.CHKRTCD1 ANOP                                                          20350000
&IRTCD   SETC   '&RTCD'                SAVE RTCD SPECIFICATION          20400000
.CHKRTCD10 ANOP                                                         20405500
         AIF ('&IRTCD' EQ '').CHKRTCD2 IF ARGUMENT NULL                 20411000
&RTCDREG SETB  ('&IRTCD'(1,1) EQ '(')   SET BIT IF RTCD IS IN REGISTER  20416500
         AIF (NOT &RTCDREG).CHKSEM      IF RTCD IS NOT IN REGISTER      20422000
&IRTCD   SETC   '&IRTCD'(2,K'&IRTCD-2)   STRIP PARENS          @YA30573 20422700
         AIF ('&IRTCD' EQ '').CHKRTCD2 IF ARGUMENT NULL        @YA30573 20423400
         AIF ('&IRTCD' EQ '0').CHKRTCD12 IF REG NOT VALID               20424100
.*                                     ISSUE MNOTE             @YA30573 20424800
         AIF ('&IRTCD' EQ '1').CHKRTCD12 IF REG NOT VALID               20425000
.*                                     ISSUE MNOTE             @YA30573 20425200
         AIF ('&IRTCD' EQ '00').CHKRTCD12 IF REG NOT VALID              20425400
.*                                     ISSUE MNOTE             @YA30573 20425600
         AIF ('&IRTCD' EQ '01').CHKRTCD12 IF REG NOT VALID              20425800
.*                                     ISSUE MNOTE             @YA30573 20426000
         AIF ('&IRTCD' EQ '13').CHKRTCD12 IF REG NOT VALID              20426200
.*                                     ISSUE MNOTE             @YA30573 20426400
         AIF ('&IRTCD' EQ '14').CHKRTCD12 IF REG NOT VALID              20426600
.*                                     ISSUE MNOTE             @YA30573 20426800
         AGO    .CHKSEM                CONTINUE TO CHECK NEXT KEYWORD   20427000
.*                                                             @YA30573 20427200
.CHKRTCD12 ANOP                                                @YA30573 20428300
         MNOTE  12,'&I343 &REGNOGD  ''RTCD'' &VALDREG 2-12,15.' REG     20429000
.*                                   SPECIFIED WAS NOT 2-12,15 @YA30573 20429700
&ERROR12 SETA   12                     NOTE ERROR              @YA30573 20430400
         AGO    .CHKSEM                CONTINUE TO CHECK NEXT KEYWORD   20431100
.*                                                             @YA30573 20431800
.CHKRTCD2 ANOP                                                          20433300
         MNOTE  12,'&I313 &NOARG        ''RTCD'' PARAMETER.'            20500000
&ERROR12 SETA   12                     NOTE ERROR                       20550000
.*                                                                      20600000
.********************************************************************** 20650000
.*                                                                      20700000
.*    CHECK SEMANTICS FOR 'OBTAIN' AND 'RELEASE'                        20750000
.*       - SUBPOOL MUST BE SPECIFIED WHEN KEY IS SPECIFIED              20800000
.*       - RTCD CAN ONLY BE SPECIFIED WITH COND=YES or                  20833300
.*              CHECKZERO=YES                                     @D5C  20866600
.*                                                                      20900000
.********************************************************************** 21750000
.*                                                                      21800000
.CHKSEM  ANOP                                                           21850000
         AIF ('&SP' NE '' OR '&KEY' EQ '').CHKSEM1 IF SP WAS           +21900000
                                       SPECIFIED OR KEY WAS NOT        +23650000
                                       SPECIFIED                        23675000
&ERROR12 SETA   12                     NOTE ERROR                       23700000
         MNOTE  12,'&I351 ''SP'' IS REQUIRED WHEN ''KEY'' IS       SPEC+23750000
               IFIED.'                                                  23800000
.CHKSEM1 AIF ('&RTCD' NE '' AND '&ICOND' EQ 'NO' AND '&ICHKZ' EQ 'NO').+23850000
               CHKSEM2                 If RTCD was specified without   +23900000
                                       COND=YES or CHECKZERO=YES   @D5C 23950000
         AGO  .CHKSPRLS                                                 24000000
.CHKSEM2 ANOP                                                           24050000
&ERROR12 SETA  12                      NOTE ERROR                       24100000
         MNOTE 12,'&I323 ''RTCD'' PARAMETER &INVALID   ''COND=NO'' AND +24133300
               ''CHECKZERO=NO''.'                                  @D5C 24166600
.*                                                                      24200000
.********************************************************************** 24250000
.*                                                                      24251500
.*    IF SUBPOOL RELEASE REQUEST:                                       24253000
.*       - ADDR AND LENGTH CANNOT BE SPECIFIED, AND SP IS REQUIRED      24254500
.*                                                                      24256000
.********************************************************************** 24257500
.*                                                                      24259000
.CHKSPRLS ANOP                                                          24260500
         AIF ('&IFUNC' EQ 'OBTAIN').CHKEND  DO NOT PROCESS SUBPOOL     +24262000
                                       RELEASE IF OBTAIN FUNCTION       24263500
         AIF ('&ADDR' EQ '').SPRLS1         IF ADDR WAS NOT SPECIFIED   24265500
         AIF ('&LENGTH' NE '').CHKEND       IF LENGTH WAS SPECIFIED     24267500
         MNOTE  12,'&I313 ''LENGTH'' PARAMETER &NOTSPEC.'               24269500
&ERROR12 SETA   12                     NOTE ERROR                       24271000
         AGO    .CHKEND                CONTINUE CHECKING                24272500
.SPRLS1  ANOP                                                           24274000
         AIF ('&LENGTH' EQ '').SPRLS2       IF LENGTH WAS NOT SPECIFIED 24275500
         MNOTE  12,'&I313 ''ADDR'' PARAMETER &NOTSPEC.'                 24277000
&ERROR12 SETA   12                     NOTE ERROR                       24278500
         AGO    .CHKEND                CONTINUE CHECKING                24280000
.SPRLS2  ANOP                                                           24281500
         AIF ('&SP' NE '').SPRLS3           IF SP WAS SPECIFIED         24283000
         MNOTE  12,'&I313 ''ADDR'' PARAMETER &NOTSPEC.'                 24284500
         MNOTE  12,'&I313 ''LENGTH'' PARAMETER &NOTSPEC.'               24286000
&ERROR12 SETA   12                     NOTE ERROR                       24287500
         AGO    .CHKEND                CONTINUE CHECKING                24289000
.SPRLS3  ANOP                                                           24290500
&BSPRLS  SETB   1                      SET BIT IF SUBPOOL RELEASE       24292000
&IADDR   SETC   '0'                    SET ADDR TO ZERO                 24293500
.*                                                                      24295000
.********************************************************************** 24296500
.*       GENERATE ASSEMBLER CODE IF NO SEVERE ERROR FOUND               24300000
.********************************************************************** 24350000
.*                                                                      24387500
.CHKEND  ANOP                                                           24425000
         AIF (&ERROR12 EQ 0).GENTEXT     CONTINUE PROCESSING IF NO     +24456200
                                         SEVERE ERROR WAS FOUND         24487400
         MEXIT                           OTHERWISE TERMINATE PROCESSING 24518600
.GENTEXT ANOP                                                           24550000
         AIF ('&INAME' EQ '').GENDCL     IF NO LABEL TO BE GENERATED    24600000
&INAME   DS     0H                                                      24650000
.*                                                                      24675000
.********************************************************************** 24700000
.*     DECLARE VARIABLES                                                24700400
.********************************************************************** 24700800
.*                                                                      24701200
.GENDCL  ANOP                                                           24701600
         CNOP   0,4                                                     24702000
         B      &GNAME.B                     .BRANCH AROUND DATA        24702400
         AIF   (('&ALET' EQ '') OR &ALETREG                            +24702600
               OR (T'&IALET NE 'N')).REGLEN1 IF ALET WAS NOT SPECIFIED,+24702800
                                              OR ALET IS IN REGISTER,  +24703000
                                              OR ALET IS A SYMBOL  @P4C 24703200
&GNAME.A DC     A(&IALET)                    .ALET                      24703600
.REGLEN1 ANOP                                                           24704000
         AIF   (&LEN1REG OR &BSPRLS).REGLEN2  LEN1 IN REG OR SP RELEASE 24704400
&GNAME.L DC     A(&ILEN1)                    .STORAGE LENGTH            24704800
.REGLEN2 ANOP                                                           24705200
         AIF   (('&ILEN2' EQ '') OR &LEN2REG).REGADDR IF LEN2 WAS NOT  +24705600
                                             SPECIFIED, OR IN REGISTER  24706000
&GNAME.M DC     A(&ILEN2)                    .MINIMUM STORAGE LENGTH    24706400
.REGADDR ANOP                                                           24706800
         AIF ('&IFUNC' EQ 'OBTAIN').FLAGOBT  IF OBTAIN WAS SPECIFIED    24707200
.*                                                                3@P4D 24708000
&FLAGS   SETC   '&BALET.00000&BUNCN&BFUNC'   FLAGS FOR RELEASE          24708800
         AGO   .BYTE0                                                   24709200
.FLAGOBT ANOP                                                           24709600
&FLAGS   SETC   '&BALET&BREAL&BLOC&BVAR&BBND&BUNCN&BFUNC' FLAGS FOR    +24710000
                                             OBTAIN                     24710400
.BYTE0   ANOP                                                           24710800
&GNAME.F DC     BL1'0&BCKEY.&BAR15&BREAL64&BCHKZ&ITCBADB.&IOWN.'   @L7C 24711000
         AIF ('&KEY' EQ '').BYTE1            IF KEY WAS NOT SPECIFIED   24711200
         AIF   (&KEYREG).BYTE2               IF KEY IN REG              24711400
.BYTE1   ANOP                                                           24711600
         DC     AL1(&IKEY*16)                .KEY                       24714400
.BYTE2   ANOP                                                           24714500
         AIF ('&SP' EQ '').BYTE2A            IF SP WAS NOT SPECIFIED    24714600
         AIF   (&SPREG).BYTE3                SUBPOOL IN REGISTER        24714700
.BYTE2A  DC     AL1(&ISP)                    .SUBPOOL                   24714800
.BYTE3   ANOP                                                           24714900
         DC     BL1'&FLAGS'                  .FLAGS                     24715000
.*                                                                      24715100
.********************************************************************** 24715200
.*     GENERATE CODE TO SET UP ACCESS REGISTER 15                       24715300
.********************************************************************** 24715400
.*                                                                      24715500
         AIF   ('&BAR15' EQ '0').NOAR15                            @01C 24715640
.A15BYTE0 ANOP                                                          24715700
&GNAME.A15 DC   BL1'00000000'                .FLAGS                @L8A 24715800
         AIF   ('&ICBDY' EQ '').A15BYTE1A    If CBDY, branch       @L8A 24715900
         AIF   ('&ICBDY'(1,1) EQ '(').A15BYTE1A if reg, branch     @L8A 24716000
         AIF   (T'&ICBDY EQ 'N').A15BYTE1    Numeric               @L8A 24716100
.A15BYTE1A ANOP                                                         24716200
         DC    AL1(0)                        .No CBDY              @L8A 24716300
         AGO   .A15BYTE2                                           @L8A 24716400
.A15BYTE1 ANOP                                                          24716500
         DC    AL1(&ICBDY)                   .CBDY                      24716600
.A15BYTE2 ANOP                                                          24716700
         AIF   ('&ISBDY' EQ '').A15BYTE2A1   If SBDY, branch       @L8A 24716800
         AIF   ('&ISBDY'(1,1) EQ '(').A15BYTE2A1 if reg, branch    @L8A 24716900
         AIF   (T'&ISBDY EQ 'N').A15BYTE2A   Numeric               @L8A 24717000
.A15BYTE2A1 ANOP                                                        24717100
         DC    AL1(0)                        .No SBDY              @L8A 24717200
         AGO   .A15BYTE3                                           @L8A 24717300
.A15BYTE2A ANOP                                                         24717400
         DC    AL1(&ISBDY)                   .SBDY                      24717500
.A15BYTE3 ANOP                                                          24717600
         DC    BL1'000000&BCBDY&BSBDY.'      .FLAGS                @L8A 24717700
.*                                                                      24717800
.********************************************************************** 24717900
.*     GENERATE CODE TO SET UP ACCESS REGISTER 15                       24718000
.********************************************************************** 24718100
.*                                                                      24718200
.NOAR15  ANOP                                                      @L8A 24718300
&GNAME.B DS     0F                                                      24718400
.* We can just load the value we formed if there are no dynamic    @L8A 24718500
.* specifications of cbdy/sbdy                                     @L8A 24718600
         AIF   ('&BAR15' EQ '0').NOAR15A                           @L8A 24718700
         AIF   ('&ISBDY' EQ '').CKAR15A                            @L8A 24718800
         AIF   ('&ISBDY'(1,1) EQ '(').AR15B     if reg, branch     @L8A 24718900
         AIF   (T'&ISBDY NE 'N').AR15B                             @L8A 24719000
.CKAR15A ANOP                                                      @L8A 24719100
         AIF   ('&ICBDY' EQ '').DOAR15A                            @L8A 24719200
         AIF   ('&ICBDY'(1,1) EQ '(').AR15B     if reg, branch     @L8A 24719300
         AIF   (T'&ICBDY NE 'N').AR15B                             @L8A 24719400
.DOAR15A ANOP                                                      @L8A 24719500
         LAM   15,15,&GNAME.A15                .SET ACCESS REGISTER 15  24719600
.*                                                                 @L8A 24719700
         AGO   .NOAR15A                                            @L8A 24719800
.* When there was a dynamic specification of cbdy/sbdy, we must    @L8A 24719900
.* process each individually                                       @L8A 24720000
.AR15B   ANOP                                                      @L8A 24720100
         L     14,&GNAME.A15                 .SET GPR 14           @L8A 24720200
         AIF   ('&ISBDY' EQ '').AR15B1                             @L8A 24720300
         AIF   ('&ISBDY'(1,1) EQ '(').AR15B1R  Check for "(n)"     @L8A 24720400
         AIF   (T'&ISBDY EQ 'N').AR15B1                            @L8A 24720500
         SLR   15,15                         .clear work reg       @L8A 24720600
         IC    15,&ISBDY                     .move to work reg     @L8A 24720700
         AGO   .AR15B1R1                                           @L8A 24720800
.AR15B1R ANOP                                                      @L8A 24720900
         LR    15,&ISBDY1                    .move to work reg     @L8A 24721000
.AR15B1R1 ANOP                                                     @L8A 24721100
         SLL   15,8                          .Shift to 16-23       @L8A 24721200
         OR    14,15                         .Put into GPR         @L8A 24721300
.AR15B1  ANOP                                                      @L8A 24721400
         AIF   ('&ICBDY' EQ '').AR15B2                             @L8A 24721500
         AIF   ('&ICBDY'(1,1) EQ '(').AR15B2R   Check for "(n)"    @L8A 24721600
         AIF   (T'&ICBDY EQ 'N').AR15B2                            @L8A 24721700
         SLR   15,15                         .Clear work reg       @L8A 24721800
         IC    15,&ICBDY                     .Put into work reg    @L8A 24721900
         AGO   .AR15B2R1                                           @L8A 24722000
.AR15B2R ANOP                                                      @L8A 24722100
         LR    15,&ICBDY1                    .Move to work reg     @L8A 24722200
.AR15B2R1 ANOP                                                     @L8A 24722300
         SLL   15,16                         .Shift to 8-15        @L8A 24722400
         OR    14,15                         .Put into GPR         @L8A 24722500
.AR15B2  ANOP                                                      @L8A 24722600
         SAR   15,14                         .SET AR 15            @L8A 24722700
.NOAR15A ANOP                                                      @L8A 24722800
.*                                                                      24722900
.********************************************************************** 24723000
.*     GENERATE CODE TO SET UP ACCESS REGISTER 1                        24723100
.********************************************************************** 24723200
.*                                                                      24723300
         AIF   ('&ALET' EQ '').GENLN1        IF ALET WAS NOT SPECIFIED  24723400
         AIF   (&ALETREG).ALETRG             ALET IN REGISTER           24723500
         AIF   (T'&IALET NE 'N').ALETVAR     NOT SPECIFIED AS A NUMBER  24723600
         LAM    1,1,&GNAME.A                 .SET ACCESS REGISTER 1     24723700
.*                                                                @P4C  24723800
         AGO   .GENLN1                                            @P4C  24723900
.ALETVAR ANOP                                                           24724000
         LAM    1,1,&IALET                   .SET ACCESS REGISTER 1     24724100
.*                                                                @P4C  24724200
.*                                                               2@P4D  24724300
         AGO   .GENLN1                                                  24724400
.ALETRG  ANOP                                                           24724500
&IALET   SETC   '&IALET'(2,K'&IALET-2)  STRIP PARENS                    24724600
         AIF ('&IALET' EQ '1').GENLN1  ACCESS REG SPECIFICATION IS 1    24724700
         CPYA   1,&IALET                     .SET ACCESS REGISTER 1     24724800
.*                                                                      24724900
.********************************************************************** 24725000
.*     GENERATE CODE TO SET UP REGISTER 0 FOR 'OBTAIN', AND 'RELEASE'   24725100
.********************************************************************** 24725200
.*                                                                      24725300
.GENLN1  ANOP                                                           24725400
         AIF (&BSPRLS).GENSPRLL              IF SUBPOOL RELEASE         24725500
         AIF (&LEN1REG).GENLN1R              IN REGISTER                24725600
.*                                                                @P4D  24725700
         L      0,&GNAME.L                   .STORAGE LENGTH            24725800
         AGO    .GENLN2            CONTINUE GENERATING                  24725900
* GENERAL REGISTER                                                      24726000
.GENLN1R ANOP                                                           24726100
         AIF ('&ILEN1' EQ '0').GENLN2 REGISTER SPECIFICATION IS 0       24726200
         LR     0,&ILEN1                     .STORAGE LENGTH            24726400
         AGO    .GENLN2            CONTINUE GENERATING                  24726800
.*                                                               3@P4D  24727000
.GENSPRLL ANOP                                                          24727300
         SR     0,0                          .STORAGE LENGTH            24727600
.GENLN2  ANOP                                                           24727800
.*                                                                      24728000
.********************************************************************** 24728100
.*     GENERATE CODE TO SET UP AR 0 with TCBADDR                        24728200
.********************************************************************** 24728300
.*                                                                      24728400
.GENTC0  ANOP                                                     @D4A  24728500
         AIF ('&ITCBADB' EQ '0').GENLN3      No TCB to do         @D4A  24728600
         AIF (&TCBAREG).GENTC0R              IN REGISTER          @D4A  24728700
         LAM    0,0,&ITCBADD                 .TCB ADDRESS         @D4A  24728800
         AGO    .GENLN3            CONTINUE GENERATING            @D4A  24728900
* GENERAL REGISTER                                                @D4A  24729000
.GENTC0R ANOP                                                     @D4A  24729100
         SAR    0,&ITCBADD                   .TCB ADDRESS         @D4A  24729200
         AGO    .GENLN3            CONTINUE GENERATING            @D4A  24729300
.*                                                                      24729400
.********************************************************************** 24729500
.*     GENERATE CODE TO SET UP REGISTER1 FOR 'OBTAIN'                   24729600
.********************************************************************** 24729700
.*                                                                      24729800
.GENLN3  ANOP                                                           24729900
         AIF ('&IFUNC' EQ 'RELEASE').GENADDR IF RELEASE WAS SPECIFIED   24730400
         AIF ('&ILEN2' EQ '').GENIA       MINIMUM LENGTH NOT SPECIFIED  24730800
         AIF (&LEN2REG).GENLN2R           IN REGISTER                   24731200
.*                                                                @P4D  24731400
         L      1,&GNAME.M                   .MINIMUM STORAGE LENGTH    24732000
         AGO    .GENR15            CONTINUE GENERATING                  24732200
* GENERAL REGISTER                                                      24732400
.GENLN2R ANOP                      A REGISTER                           24732800
         AIF ('&ILEN2' EQ '1').GENR15 REGISTER SPECIFICATION IS 1       24733600
         LR     1,&ILEN2                     .MINIMUM STORAGE LENGTH    24734000
         AGO    .GENR15            CONTINUE GENERATING                  24734100
.GENIA   ANOP                                                      @L4A 24734200
         AIF   ('&IINADDR' EQ '').GENR15     INADDR not specified  @L4A 24734300
         AIF   (&IADRREG).GENIA1             A REGISTER            @L4A 24734400
.* RX-TYPE ADDRESS                                                 @L4A 24734500
         L      1,&IINADDR                   .ADDRESS OF STORAGE   @L4A 24734600
         AGO    .GENR15            CONTINUE GENERATING             @L4A 24734700
.* REGISTER                                                        @L4A 24734800
.GENIA1 ANOP                                                       @L4A 24734900
         AIF ('&IINADDR' EQ '1').GENR15 REGISTER SPECIFIED IS 1    @L4A 24735000
         LR     1,&IINADDR                   .ADDRESS OF STORAGE   @L4A 24735100
         AGO    .GENR15            CONTINUE GENERATING             @L4A 24735200
.*                                                                 @L4A 24735300
.*                                                                      24735400
.********************************************************************** 24735500
.*     GENERATE CODE TO SET UP REGISTER1 FOR 'RELEASE'                  24735600
.********************************************************************** 24736000
.*                                                                      24736400
.GENADDR ANOP                                                           24736800
         AIF (&BSPRLS).GENSPRLA               IF SUBPOOL RELEASE        24737200
         AIF (&ADDRREG).GENADR                A REGISTER                24737600
.* RX-TYPE ADDRESS                                               @D3C   24738000
         L      1,&IADDR                     .ADDRESS OF STORAGE        24738400
         AGO    .GENR15            CONTINUE INITIALIZATION              24738800
.* REGISTER                                                             24739200
.GENADR ANOP                       A REGISTER                           24739600
         AIF ('&IADDR' EQ '1').GENR15 REGISTER SPECIFICATION IS 1       24740400
         LR     1,&IADDR                     .ADDRESS OF STORAGE        24740800
         AGO    .GENR15            CONTINUE INITIALIZATION              24741200
.GENSPRLA ANOP                                                          24741600
         SR     1,1                          .ADDRESS OF STORAGE        24742000
.*                                                                      24742400
.********************************************************************** 24742800
.*     GENERATE CODE TO SET UP REGISTER 15                              24750000
.*                                                                      24800000
.*    BYTE 0   **********************                                   24850000
.*             *   RESERVED         *                                   25000000
.*    BYTE 1   **********************                                   25016600
.*             *   KEY   *   RSVD   *                                   25033200
.*    BYTE 2   **********************                                   25050000
.*             *   SUBPOOL          *                                   25100000
.*    BYTE 3   **********************                                   25150000
.*             *   FLAGS            *                                   25200000
.*             **********************                                   25250000
.*                                                                      25300000
.********************************************************************** 25350000
.*                                                                      29100000
.GENR15   ANOP                                                          29112700
         AIF    (&KEYREG OR &SPREG).KYSPREG  IF KEY OR SP IN REG        29114800
         L      &IREG15,&GNAME.F             .CONTROL INFORMATION       29116900
         AGO   .GENPC                        CONTINUE GENERATING        29119000
.KYSPREG ANOP                                                           29121100
         AIF    (&KEYREG AND &SPREG).BOTHREG IF KEY AND SP IN REG       29123200
         AIF    (&KEYREG).KEYINREG           IF KEY IN REG              29125400
         AIF ('&ISP' EQ '&IREG15').SPINPRG   IF SP IS IN REG15          29134800
         LR     &IREG15,&ISP                 .OBTAIN SUBPOOL ID         29144200
.SPINPRG SLL    &IREG15,8(0)                 .MOVE SUBPOOL TO BYTE 2    29145000
         ICM    &IREG15,13,&GNAME.F          .CONTROL INFORMATION       29145900
         AGO   .GENPC                        CONTINUE GENERATING        29146100
.KEYINREG ANOP                                                          29146300
         AIF ('&IKEY' EQ '&IREG15').KEYINR15 IF KEY ALREADY IN REG 15   29146500
.*                                                             @YA30573 29146700
         LR     &IREG15,&IKEY                .GET STORAGE KEY           29147100
.KEYINR15 ANOP                                                 @YA30573 29147200
         SLL    &IREG15,16(0)                .MOVE KEY TO BITS 8-11     29147300
         ICM    &IREG15,11,&GNAME.F          .CONTROL INFORMATION       29147500
         AGO   .GENPC                        CONTINUE GENERATING        29147700
.BOTHREG ANOP                                                  @YA30573 29197700
         AIF ('&IKEY' EQ '&ISP').SAMEREG     IF KEY AND SP IN SAME REG  29247700
.*                                                             @YA30573 29297700
         AIF ('&IKEY' EQ '&IREG15').KEYREG15 IF KEY ALREADY IN REG 15   29347700
.*                                                             @YA30573 29397700
         AIF ('&ISP' EQ '&IREG15').SPREG15   IF SP ALREADY IN REG 15    29447700
.*                                                             @YA30573 29497700
         LR     &IREG15,&IKEY                .OBTAIN KEY       @YA30573 29547700
.KEYREG15 ANOP                                                 @YA30573 29597700
         SLL    &IREG15,8(0)                 .MOVE KEY OVER    @YA30573 29647700
         OR     &IREG15,&ISP                 .GET SUBPOOL ID   @YA30573 29697700
         SLL    &IREG15,8(0)                 .MOVE KEY AND SUBPOOL      29747700
.*                                                             @YA30573 29797700
         ICM    &IREG15,9,&GNAME.F           .CONTROL FLAGS    @YA30573 29847700
         AGO   .GENPC                                          @YA30573 29897700
.SPREG15 ANOP                                                  @YA30573 29947700
         LR     14,&IKEY                     .OBTAIN KEY       @YA30573 29997700
         SLL    14,8(0)                      .MOVE KEY OVER    @YA30573 30047700
         OR     &IREG15,14                   .OR INTO REG 15   @YA30573 30097700
         SLL    &IREG15,8(0)                 .MOVE KEY AND SUBPOOL      30147700
.*                                                             @YA30573 30197700
         ICM    &IREG15,9,&GNAME.F           .CONTROL FLAGS    @YA30573 30247700
         AGO   .GENPC                                          @YA30573 30297700
.SAMEREG ANOP                                                  @YA30573 30347700
         AIF ('&IKEY' EQ '&IREG15').BOTHR15  IF KEY AND SP IN REG 15    30397700
.*                                                             @YA30573 30447700
         LR     &IREG15,&IKEY                .OBTAIN KEY & SP  @YA30573 30497700
.BOTHR15 ANOP                                                  @YA30573 30547700
         ICM    &IREG15,9,&GNAME.F           .CONTROL INFORMATION       30597700
.*                                                                      30647700
.********************************************************************** 30697700
.*     GENERATE CODE TO SET UP REGISTER 14                              33100000
.********************************************************************** 33150000
.*                                                                      33175000
.GENPC  ANOP                                                            33200000
         AIF   ('&SYSAM64' NE 'YES').NO64A1                        @L7A 33210000
         LLGT   14,16(0,0)                   .CVT ADDRESS               33220000
         AGO   .NO64A2                                             @L7A 33230000
.NO64A1  ANOP                                                      @L7A 33240000
         L      14,16(0,0)                   .CVT ADDRESS               33250000
.NO64A2  ANOP                                                      @L7A 33265000
         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   33280000
.*                                                                 @P4C 33310000
         AIF ('&IFUNC' EQ 'RELEASE').GENPC1  IF RELEASE WAS SPECIFIED   33330000
.*                                                                 @P5A 33340000
         L      14,160(14,0)                 .OBTAIN LX/EX FOR OBTAIN   33350000
.*                                                                 @P4C 33370000
         AGO    .GENPC2                                            @P5A 33376000
.GENPC1  ANOP                                                      @P5A 33382000
         L      14,204(14,0)                 .OBTAIN LX/EX FOR RELEASE  33388000
.*                                                                 @P5A 33392000
.GENPC2  ANOP                                                      @P5A 33396000
         PC     0(14)                        .PC TO STORAGE RTN         33400000
.*                                                                      33650000
.********************************************************************** 33700000
.*     GENERATE CODE TO SAVE RETURN CODE, AND ADDRESS IF SPECIFIED      33750000
.*     WITH 'OBTAIN'                                                    33800000
.********************************************************************** 33850000
.*                                                                      33883300
         AIF   ('&IFUNC' NE 'OBTAIN' OR '&IADDR' EQ '').SAVERC          33950000
         AIF   (&ADDRREG).SAVEA              A REGISTER                 34000000
.* RX-TYPE ADDRESS                                              @D3C    34050000
         ST     1,&IADDR                     .SAVE ADDR OF STORAGE      34100000
         AGO    .SAVERC            CONTINUE SAVE RETURN CODE            34150000
.* REGISTER                                                             34200000
.SAVEA  ANOP                                                            34250000
         AIF ('&IADDR' EQ '1').SAVERC REGISTER SPECIFICATION IS 1       34350000
         LR     &IADDR,1                     .SAVE ADDR OF STORAGE      34400000
.SAVERC  AIF   ('&IRTCD' EQ '').MMEND                                   34450000
         AIF   (&RTCDREG).SAVERC1            A REGISTER                 34500000
.* A-TYPE ADDRESS                                                       34550000
         ST     15,&IRTCD                    .SAVE RETURN CODE          34600000
         AGO    .MMEND             CONTINUE SAVE RETURN CODE            34650000
.* REGISTER                                                             34700000
.SAVERC1 ANOP                       A REGISTER                          34750000
         AIF ('&IRTCD' EQ '15').MMEND  REGISTER SPECIFICATION IS 15     34850000
         LR     &IRTCD,15                    .SAVE RETURN CODE          34900000
.MMEND   MEXIT                     MACRO IS COMPLETE                    34950000
         MEND                                                           35000000
*      */                                                               35050000
* %PLSSKIP:  ;                                                          35100000
*%    STORAGE:                                                          35150000
* MACRO KEYS(COND,                       /* COND=YES|NO              */ 35187500
*            INADDR,                     /* ADDR OF STORAGE TO OBTAIN   35225000
*                                                                @L4A*/ 35262500
*            ADDR,                       /* ADDRESS OF STORAGE   @P8A*/ 35291600
*            AREA,                       /* AREA OF STORAGE          */ 35320700
*            LENGTH,                     /* AMOUNT OF STORAGE        */ 35350000
*            SP,                         /* SUBPOOL ID               */ 35400000
*            ALET,                       /* ACCESS LIST ENTRY TOKEN  */ 35450000
*            BNDRY,                      /* BOUNDARY ALIGNMENT       */ 35500000
*            KEY,                        /* KEY                      */ 35550000
*            CALLRKY,                    /* CALLRKY(YES|NO)      @L2A*/ 35575000
*            LOC,                        /* LOCATION                 */ 35600000
*            RTCD, RETCODE,              /* RETURN CODE              */ 35650000
*            LINKAGE,                    /* SYSTEM                   */ 35700000
*            OWNER,                      /* OWNER                @L3A*/ 35725000
*            TCBADDR,                    /* TCB ADDRESS          @D4A*/ 35737500
*            FLAGVALUE,                  /* FLAGS for GPR 15     @L5A*/ 35740000
*            AR15VALUE,                  /* Value for AR 15      @L8A*/ 35741200
*            FAILPROCESS,                /* Statements in               35742500
*                          ASAXCODE anyprocess format to be executed    35745000
*                          when non-zero RC is returned          @L5A*/ 35747500
*            CHECKZERO,                  /* CHECKZERO(YES|NO)    @D5A*/ 35748700
*            BACK,                       /* BACK(BYSPT|NONE)     @L6A*/ 35749100
*            CONTBDY, STARTBDY,          /* CONTBDY,STARTBDY     @L8A*/ 35749500
*            RELATED);                   /* INFORMATION USED TO         35750000
*                                           SELF-DOCUMENT            */ 35800000
*    ANS('?'|| MACLABEL || 'STORAGEP' || MACLIST || MACKEYS || ';');    35850000
*%END STORAGE;                                                          35900000
