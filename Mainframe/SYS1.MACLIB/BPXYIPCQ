*        %GOTO IPCQPRO ;        /* Bilingual header                     00050000
         MACRO                                                          00100000
         BPXYIPCQ  &DSECT=YES,&LIST=YES                                 00150000
         GBLB  &IPCQ411                                                 00200000
         AIF   (&IPCQ411 EQ 1).E411                                     00250000
&IPCQ411 SETB  1                                                        00300000
         AIF   ('&LIST' EQ 'YES').A411                                  00350000
         PUSH  PRINT  BPXYIPCQ: w_getipc return data structure          00400000
         PRINT OFF                                                      00450000
         AGO   .A411                                                    00500000
*                               */                                      00550000
*%IPCQPRO : ;                                                           00600000
*/****START OF SPECIFICATIONS****************************************** 00650000
*    $MAC (BPXYIPCQ) COMP(SCPX1) PROD(BPX):                             00700000
*01* MACRO NAME: BPXYIPCQ                                               00750000
*01* DSECT NAME: N/A                                                    00800000
*01* DESCRIPTIVE NAME: OpenMVS Interprocess Communications w_getipc     00850000
*                      data return mapping.                             00900000
*02*   ACRONYM: IPCQ                                                    00950000
**/                                                                     01000000
*/*01* PROPRIETARY STATEMENT=                                        */ 01050000
*/***PROPRIETARY_STATEMENT********************************************/ 01100000
*/*                                                                  */ 01150000
*/*                                                                  */ 01200000
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 01250000
*/* THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      */ 01300000
*/* 5647-A01 (C) COPYRIGHT IBM CORP. 1995,2000                       */ 01350000
*/*                                                                  */ 01400000
*/* STATUS= HBB7703                                                  */ 01450000
*/*                                                                  */ 01500000
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 01550000
*/*                                                                     01600000
*                                                                       01625000
*01* EXTERNAL CLASSIFICATION:  GUPI                                     01650000
*01* END OF EXTERNAL CLASSIFICATION:                                    01700000
*                                                                       01750000
*01* FUNCTION:   Mapping of user buffer into which BPX1GET (w_getipc)   01800000
*                will place status information for InterProcess         01850000
*                Communication (1) message queues, (2) semaphores,      01900000
*                (3) shared memory segments, or (4) and overview or     01950000
*                all these mechanisms.                                  02000000
*01* METHOD OF ACCESS:                                                  02050000
*02*   PL/X:                                                            02100000
*        %INCLUDE SYSLIB(BPXYIPCQ)                                      02150000
*02*   ASM:                                                             02200000
*        BPXYIPCQ DSECT=YES/NO,LIST=YES/NO                              02250000
*01* POINTED TO BY: Second parameter in call to BPX1GET (w_getipc)      02300000
*01* CREATED BY:   User                                                 02350000
*01* DELETED BY:   User                                                 02400000
*01* STORAGE ATTRIBUTES:  User                                          02450000
*02*   SUBPOOL:    User                                                 02500000
*02*   KEY:        User                                                 02550000
*02*   RESIDENCY:  User                                                 02600000
*01* SIZE: IPCQ#LENGTH  - third parameter in call to BPX1GET            02650000
*01* FREQUENCY: 1 IPCQ per call to BPX1GET                              02700000
*01* SERIALIZATION: N/A                                                 02750000
*01* DEPENDENCIES:  If Ipcq#Length should exceed 256, the MVC must      02800000
*                   be made LONG in the syscall.                        02850000
*01* NOTES: None                                                        02900000
*01* COMPONENT:  OpenMVS (SCPX1)                                        02950000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     03000000
*01* EYE-CATCHER: None.                                                 03050000
*01* CHANGE-ACTIVITY:                                                   03100000
*    $D0=DPFA051  HOM1130 940131 PDJM: A051.04 Initial XPG4 IPC         03150000
* $D0=DWKA301 HBB6608 980914 PDJM: A301 - PLO return data changes       03200000
****END OF SPECIFICATIONS*********************************************/ 03250000
*        %GOTO IPCQPLS ;        /* Bilingual header                     03300000
.A411    ANOP  ,                                                        03350000
** BPXYIPCQ: w_getipc interface mapping                                 03400000
**  Used By: GET                                                        03450000
         AIF   ('&DSECT' EQ 'NO').B411                                  03500000
IPCQ          DSECT ,      Interprocess Communications - Query          03550000
         AGO   .C411                                                    03600000
.B411    ANOP  ,                                                        03650000
IPCQ          DS    0F     Interprocess Communications - Query          03700000
.C411    ANOP  ,                                                        03750000
IPCQLENGTH    DS    F      IPCQ#LENGTH used by system call.  If not     03800000
*                          equal, check BPXYIPCQ and system levels.     03850000
IPCQTYPE      DS    CL4    "IMSG", "ISEM", "ISHM", "OVER"               03900000
IPCQOVER      DS    0F     OVERVIEW MAPPING STARTS HERE                 03950000
IPCQMID       DS    FL4    MEMBER ID                                    04000000
IPCQKEY       DS    XL4    KEY                                          04050000
IPCQIPCP      DS    CL20   MAPPED BY BPXYIPCP                           04100000
IPCQGTIME     DS    XL4    TIME_T OF LAST ...GET()                      04150000
IPCQCTIME     DS    XL4    TIME_T OF LAST ...CTL()                      04200000
IPCQTTIME     DS    XL4    TIME_T CHANGED BY TERMINATION                04250000
IPCQREST      DS    0C     IPCQMSG, IPCQSHM, IPCQSEM                    04300000
              SPACE ,                                                   04350000
              ORG   IPCQREST Message Queue unique data                  04400000
              DS    0F                                                  04450000
IPCQBYTES     DS    F      # BYTES OF MESSAGES ON QUEUE                 04500000
IPCQQBYTES    DS    F      MAX # BYTES OF MESSAGES ALLOWED ON QUEUE     04550000
IPCQLSPID     DS    F      PID OF LAST MSGSND()                         04600000
IPCQLRPID     DS    F      PID OF LAST MSGRCV()                         04650000
IPCQSTIME     DS    F      TIME_T OF LAST MSGSND()                      04700000
IPCQRTIME     DS    F      TIME_T OF LAST MSGRCV()                      04750000
IPCQNUM       DS    F      # OF MESSAGES ON QUEUE                       04800000
IPCQRCNT      DS    F      COUNT OF WAITING MSGRCV                      04850000
IPCQSCNT      DS    F      COUNT OF WAITING MSGSND                      04900000
              DS    0CL16  MSGRCV AND MSGSND WAITERS                    04950000
              DS    0CL8    MSGRCV - WAIT FOR TYPE                      05000000
IPCQQRPID     DS    F        PROCESS ID                                 05050000
IPCQQRMSGTYPE DS    F        MESSAGE TYPE                               05100000
              DS    0CL8    MSGSND - WAIT FOR ROOM TO SEND              05150000
IPCQQSPID     DS    F        PROCESS ID                                 05200000
IPCQQSMSGLEN  DS    F        MESSAGE LENGTH                             05250000
              DS    9CL16  MSGSND AND MSGRCV WAITERS                    05300000
              DS    0CL8   MESSAGES WAITING TO BE RECEIVED              05350000
IPCQQMPID     DS    F        PROCESS ID                                 05400000
IPCQQMMSGTYPE DS    F        MESSAGE TYPE                               05450000
              DS    9CL8   MESSAGES                                     05500000
              SPACE ,                                                   05550000
              ORG   IPCQREST Semaphore Unique data                      05600000
              DS    0F                                                  05650000
IPCQLOPID     DS    XL4    PID OF LAST SEMOP                            05700000
IPCQOTIME     DS    F      TIME_T LAST SEMOP                            05750000
IPCQADJBADCNT DS    F      TERMINATION BUMPS SEM_VAL LIMITS             05800000
IPCQNSEMS     DS    FL2    NUMBER OF SEMAPHORES IN THIS SET             05850000
IPCQADJCNT    DS    FL2    NUMBER OF UNDO STRUCTURES                    05900000
IPCQNCNT      DS    FL2    COUNT OF WAITERS FOR >0                      05950000
IPCQZCNT      DS    FL2    COUNT OF WAITERS FOR =0                      06000000
              DS    0CL16  WAITERS AND ADJUSTERS                        06050000
              DS    0CL8    WAITER                                      06100000
IPCQSWPID     DS    F        PROCESS ID                                 06150000
IPCQSWNUM     DS    H        SEMAPHORE NUMBER                           06200000
IPCQSWOP      DS    H        SEMAPHORE OPERATION                        06250000
              DS    0CL8    ADJUSTER                                    06300000
IPCQSAPID     DS    F        PROCESS ID                                 06350000
IPCQSANUM     DS    H        SEMAPHORE NUMBER                           06400000
IPCQSAADJ     DS    H        SEMAPHORE OPERATION                        06450000
              DS    9CL16  WAITERS AND ADJUSTERS                        06500000
              SPACE ,                                                   06550000
              ORG   IPCQREST Shared Memory unique data                  06600000
              DS    0F                                                  06650000
IPCQACNT      DS    F      USE COUNT (#SHMAT - #SHMDT)                  06700000
IPCQSEGSZ     DS    F      MEMORY SEGMENT SIZE                          06750000
IPCQDTIME     DS    F      TIME_T OF LAST SHMDT()                       06800000
IPCQATIME     DS    F      TIME_T OF LAST SHMAT()                       06850000
IPCQLPID      DS    F      PID OF LAST SHMAT() OR SHMDT()               06900000
IPCQCPID      DS    XL4    PID OF CREATOR                               06950000
IPCQATPID     DS    F      ATTACHED PROCESS ID                          07000000
IPCQATADDRESS DS    F      SEGMENT ADDRESS FOR PROCESS                  07050000
              DS    18F    MORE ATTACHED PROCESS IDS AND                07100000
*                          SEGMENT ADDRESS                              07150000
              SPACE ,                                                   07200000
              ORG   IPCQOVER Overview                                   07250000
                 DS    0F  MESSAGE QUEUES                               07300000
IPCQOMSGNIDS     DS    F        Maximum number MSQs allowed             07350000
IPCQOMSGHIGHH2O  DS    F        Most MSQs at one time                   07400000
IPCQOMSGFREE     DS    F        Number MSQs available                   07450000
IPCQOMSGPRIVATE  DS    F        Number MSQs with Ipc_PRIVATE            07500000
IPCQOMSGKEYED    DS    F        Number MSQs with KEYs                   07550000
IPCQOMSGREJECTS  DS    F        TIMES MSGGET DENIED                     07600000
IPCQOMSGQBYTES   DS    F        MAX BYTES PER QUEUE                     07650000
IPCQOMSGQMNUM    DS    F        MAX NUMBER MESSAGES PER QUEUE           07700000
IPCQOMSGNOALC    DS    F        # MSGSNDS THAT RETURNED ENOMEM          07750000
                 DS    F                                                07800000
                 DS    0F  SEMAPHORE                                    07850000
IPCQOSEMNIDS     DS    F        Maximum number SEMs allowed             07900000
IPCQOSEMHIGHH2O  DS    F        Most SEMs at one time                   07950000
IPCQOSEMFREE     DS    F        Number SEMs available                   08000000
IPCQOSEMPRIVATE  DS    F        Number SEMs with Ipc_PRIVATE            08050000
IPCQOSEMKEYED    DS    F        Number SEMs with KEYs                   08100000
IPCQOSEMREJECTS  DS    F        TIMES SEMGET DENIED                     08150000
IPCQOSEMSNSEMS   DS    F        MAX NUMBER OF SEMAPHORES PER SET        08200000
IPCQOSEMSNOPS    DS    F        MAX NUMBER OPERATION IN SEMOP           08250000
IPCQOSEMSBYTES   DS    F        STORAGE LIMIT                           08300000
IPCQOSEMCBYTES   DS    F        STORAGE COUNT                           08350000
                 DS    F                                                08400000
                 DS    0F  SHARED MEMORY                                08450000
IPCQOSHMNIDS     DS    F        Maximum number SHMs allowed             08500000
IPCQOSHMHIGHH2O  DS    F        Most SHMs at one time                   08550000
IPCQOSHMFREE     DS    F        Number SHMs available                   08600000
IPCQOSHMPRIVATE  DS    F        Number SHMs with Ipc_PRIVATE            08650000
IPCQOSHMKEYED    DS    F        Number SHMs with KEYs                   08700000
IPCQOSHMREJECTS  DS    F        TIMES SHMGET DENIED                     08750000
IPCQOSHMSPAGES   DS    F        MAX # PAGES PER SYSTEM LIMIT            08800000
IPCQOSHMMPAGES   DS    F        MAX # PAGES PER SEGMENT LIMIT           08850000
IPCQOSHMNSEGS    DS    F        MAX # SEGMENTS PER PROCESS LIMIT        08900000
IPCQOSHMCPAGES   DS    F        CURRENT # BYTES SYSTEM WIDE             08950000
*                               This field does not include pages for   09000000
*                               shared memory requests processed with   09050000
*                               the ipc_MEGA option                     09100000
IPCQOSHMBIGGEST  DS    F        LARGEST SEGMENT ALLOCATED               09150000
              SPACE ,                                                   09200000
              ORG   ,                                                   09250000
IPCQ#LENGTH   EQU   *-IPCQ Storage needed for w_getipc function         09300000
* w-getipc Command:                                                     09350000
IPCQ#MSG      EQU   1      Retrieve next message queue                  09400000
IPCQ#SHM      EQU   2      Retrieve next shared memory segment          09450000
IPCQ#SEM      EQU   3      Retrieve next semaphore set                  09500000
IPCQ#ALL      EQU   4      Retrieve next member, all mechanisms         09550000
IPCQ#OVER     EQU   5      Retrieve overview                            09600000
** BPXYIPCQ End                                                         09650000
         SPACE 3                                                        09700000
         AIF   ('&LIST' EQ 'YES').E411                                  09750000
         POP   PRINT                                                    09800000
.E411    ANOP  ,                                                        09850000
               MEND                                                     09900000
     Terminating PL/X comment                                       */  09950000
 %IPCQPLS : ;                                                           10000000
 %IF IPCQBASE='' %THEN                                                  10050000
   %DO;                                                                 10100000
     %IPCQBASE='Based';                                                 10150000
   %END;                                                                10200000
 Declare 1 IPCQ IPCQBASE Bdy(Word),        /* Structure to query IPC */ 10250000
     3   IpcqCommon1     ,          /* Common to MSG, SEM, SHM       */ 10300000
      5  IpcqCommon2     ,          /* Common to above and OVER      */ 10350000
       7 IpcqLength      Fixed(31), /* Ipcq#Length of syscall- could be 10400000
                                       different from caller.        */ 10450000
       7 IpcqType        Char(4),   /* "IMSG", "ISEM", "ISHM", "OVER"*/ 10500000
      5  IpcqMID         IsA(IpcID_t), /* Member ID                  */ 10550000
      5  IpcqKey         Fixed(31), /* Key (0 for private)           */ 10600000
      5  IpcqIpcp        Char(Length(IPCP)),                            10650000
                                    /* uid,gid,cuid,cgid,mode        */ 10700000
      5  IpcqGTime       IsA(time_t), /* time_t of ...get()          */ 10750000
      5  IpcqCTime       IsA(time_t), /* time_t of last ...ctl()     */ 10800000
      5  IpcqTTime       IsA(time_t); /* time changed by termination */ 10850000
                                                                        10900000
 /* M E S S A G E    Q U E U E S                                     */ 10950000
 Declare 1 Ipcq_MSG      Bdy(Word)  Based(Addr(IPCQ)),                  11000000
     3   *               Char(Length(IpcqCommon1)),                     11050000
     3   IpcqBytes       Fixed(32),   /* # bytes of messages on queue*/ 11100000
     3   IpcqQBytes      Fixed(32),   /* max # bytes of messages        11150000
                                         allowed on queue            */ 11200000
     3   IpcqLSPid       IsA(pid_t),  /* pid of last msgsnd()        */ 11250000
     3   IpcqLRPid       IsA(pid_t),  /* pid of last msgrcv()        */ 11300000
     3   IpcqSTime       IsA(time_t), /* time_t of last msgsnd()     */ 11350000
     3   IpcqRTime       IsA(time_t), /* time_t of last msgrcv()     */ 11400000
     3   IpcqNum         Fixed(32),   /* # of messages on queue      */ 11450000
     3   IpcqRCnt        Fixed(32),   /* Count of waiting msgrcv     */ 11500000
     3   IpcqSCnt        Fixed(32),   /* Count of waiting msgsnd     */ 11550000
     3   IpcqQW (10)     ,            /* Receive and Send waiters    */ 11600000
      5  *               ,            /*  Msgrcv                     */ 11650000
       7 IpcqQRPid       IsA(pid_t),  /*    process ID               */ 11700000
       7 IpcqQRMsgType   Fixed(31),   /*    message type             */ 11750000
      5  *               ,            /*  Msgsnd                     */ 11800000
       7 IpcqQSPid       IsA(pid_t),  /*    process ID               */ 11850000
       7 IpcqQSMsgLen    Fixed(32),   /*    message length           */ 11900000
     3   IpcqQM (10)     ,            /* Messages on the queue       */ 11950000
      5  IpcqQMPid       IsA(pid_t),  /*    process ID               */ 12000000
      5  IpcqQMMsgType   Fixed(31);   /*    message type             */ 12050000
                                                                        12100000
                                                                        12150000
 /* S E M A P H O R E    S E T S                                     */ 12200000
 Declare 1 Ipcq_SEM      Bdy(Word)  Based(Addr(IPCQ)),                  12250000
     3   *               Char(Length(IpcqCommon1)),                     12300000
     3   IpcqLOPid       IsA(pid_t),  /* PID of last semop           */ 12350000
     3   IpcqOTime       IsA(time_t), /* time of last semop          */ 12400000
     3   IpcqAdjBadCnt   Fixed(31),   /* termination bumps val limits*/ 12450000
     3   IpcqNSems       Fixed(15),   /* number of semaphores        */ 12500000
     3   IpcqAdjCnt      Fixed(15),   /* processes with UNDOs        */ 12550000
     3   IpcqNCnt        Fixed(15),   /* cnt Processes waiting on >0 */ 12600000
     3   IpcqZCnt        Fixed(15),   /* cnt Processes waiting on =0 */ 12650000
     3   IpcqSW (10)     ,            /* waiters and adjusters       */ 12700000
      5  *               ,            /*  Semop                      */ 12750000
       7 IpcqSWPid       IsA(pid_t),  /*    process ID               */ 12800000
       7 IpcqSWnum       Fixed(15),   /*    sem_num                  */ 12850000
       7 IpcqSWop        Fixed(15),   /*    sem_op                   */ 12900000
      5  *               ,            /*  Adjusters (UNDO)           */ 12950000
       7 IpcqSAPid       IsA(pid_t),  /*    process ID               */ 13000000
       7 IpcqSAnum       Fixed(15),   /*    sem_num                  */ 13050000
       7 IpcqSAadj       Fixed(15);   /*    sem_adj                  */ 13100000
                                                                        13150000
                                                                        13200000
 /* S H A R E D   M E M O R Y   S E G M E N T S                      */ 13250000
 Declare 1 Ipcq_SHM      Bdy(Word)  Based(Addr(IPCQ)),                  13300000
     3   *               Char(Length(IpcqCommon1)),                     13350000
     3   IpcqACnt        Fixed(31),   /* Number of current attaches  */ 13400000
     3   IpcqSegSz       Fixed(31),   /* Memory segment size         */ 13450000
     3   IpcqDTime       IsA(time_t), /* time_t of last shmdt()      */ 13500000
     3   IpcqATime       IsA(time_t), /* time_t of last shmat()      */ 13550000
     3   IpcqLPid        IsA(pid_t),  /* pid of last shmat(), shmdt()*/ 13600000
     3   IpcqCPid        IsA(pid_t),  /* process ID of creator       */ 13650000
     3   IpcqAt (10)     ,            /* Attacher                    */ 13700000
      5  IpcqAtPid       IsA(pid_t),  /*    process ID               */ 13750000
      5  IpcqAtAddress   Pointer;     /* segment address for process */ 13800000
                                                                        13850000
                                                                        13900000
 /* O V E R V I E W   -   M S G  /  S E M   /   SHM                  */ 13950000
 Declare 1 Ipcq_Over     Bdy(Word)  Based(Addr(IPCQ)),                  14000000
     3   *               Char(Length(IpcqCommon2)),                     14050000
     3   *               ,          /* Message Queues Overview       */ 14100000
      5  IpcqOMsgNIDs    Fixed(31), /*   maximun number MSQs allowed */ 14150000
      5  IpcqOMsgHighH2O Fixed(31), /*   most MSQs at one time       */ 14200000
      5  IpcqOMsgFree    Fixed(31), /*   number MSQs available       */ 14250000
      5  IpcqOMsgPrivate Fixed(31), /*   number MSQs with Ipc_PRIVATE*/ 14300000
      5  IpcqOMsgKeyed   Fixed(31), /*   number MSQs with KEYs       */ 14350000
      5  IpcqOMsgRejects Fixed(31), /*   Times msgget denied         */ 14400000
      5  IpcqOMsgQBytes  Fixed(31), /*   bytes per queue - max       */ 14450000
      5  IpcqOMsgQMNum   Fixed(31), /*   max number messages per q   */ 14500000
      5  IpcqOMsgNoAlc   Fixed(31), /*   # msgsnds that returned        14550000
                                         ENOMEM                      */ 14600000
      5  *               Fixed(31), /*                               */ 14650000
     3   *               ,          /* Semaphore Sets Overview       */ 14700000
      5  IpcqOSemNIDs    Fixed(31), /*   maximun number SEMs allowed */ 14750000
      5  IpcqOSemHighH2O Fixed(31), /*   most SEMs at one time       */ 14800000
      5  IpcqOSemFree    Fixed(31), /*   number SEMs available       */ 14850000
      5  IpcqOSemPrivate Fixed(31), /*   number SEMs with Ipc_PRIVATE*/ 14900000
      5  IpcqOSemKeyed   Fixed(31), /*   number SEMs with KEYs       */ 14950000
      5  IpcqOSemRejects Fixed(31), /*   Times semget denied         */ 15000000
      5  IpcqOSemNSems   Fixed(31), /*   max # semaphores per set    */ 15050000
      5  IpcqOSemNOps    Fixed(31), /*   max # operations per semop  */ 15100000
      5  IpcqOSemSBytes  Fixed(31), /*   storage limit               */ 15150000
      5  IpcqOSemCBytes  Fixed(31), /*   current storage count       */ 15200000
      5  *               Fixed(31), /*                               */ 15250000
     3   *               ,          /* Shared memory overview        */ 15300000
      5  IpcqOShmNIDs    Fixed(31), /*   maximun number SHMs allowed */ 15350000
      5  IpcqOShmHighH2O Fixed(31), /*   most SHMs at one time       */ 15400000
      5  IpcqOShmFree    Fixed(31), /*   number SHMs available       */ 15450000
      5  IpcqOShmPrivate Fixed(31), /*   number SHMs with Ipc_PRIVATE*/ 15500000
      5  IpcqOShmKeyed   Fixed(31), /*   number SHMs with KEYs       */ 15550000
      5  IpcqOShmRejects Fixed(31), /*   Times shmget denied         */ 15600000
      5  IpcqOShmSPages  Fixed(31), /*   # pages per system  limit   */ 15650000
      5  IpcqOShmMPages  Fixed(31), /*   # pages per segment limit   */ 15700000
      5  IpcqOShmNSegs   Fixed(31), /*   # segments per process limit*/ 15750000
      5  IpcqOShmCPages  Fixed(31), /*   # pages system wide, current.  15800000
                                         This field does not include    15850000
                                         pages for shared memory        15900000
                                         requests processed with the    15950000
                                         ipc_MEGA option             */ 16000000
      5  IpcqOShmBiggest Fixed(31), /*   largest segment allocated   */ 16050000
      5  *               Fixed(31); /*                               */ 16100000
                                                                        16150000
 Declare                                                                16200000
     Ipcq#Length   Constant(Max(LENGTH(Ipcq_Msg),                       16250000
                                LENGTH(Ipcq_Sem),                       16300000
                                LENGTH(Ipcq_Shm),                       16350000
                                LENGTH(Ipcq_Over))),                    16400000
     Ipcq#MSG      Fixed(31)  CONSTANT(01),  /* message queue        */ 16450000
     Ipcq#SHM      Fixed(31)  CONSTANT(02),  /* shared memory        */ 16500000
     Ipcq#SEM      Fixed(31)  CONSTANT(03),  /* semaphore            */ 16550000
     Ipcq#ALL      Fixed(31)  CONSTANT(04),  /* all mechanisms       */ 16600000
     Ipcq#OVER     Fixed(31)  CONSTANT(05);  /* overview of IPC      */ 16650000
