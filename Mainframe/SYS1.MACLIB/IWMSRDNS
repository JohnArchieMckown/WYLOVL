*%IWMSRDNS: MACRO KEYS(LOCATION_NAMES,ANSLEN,ENTRY_COUNT,QUERYLEN,      00000100
*                 RETCODE,RSNCODE,PLISTVER,MF);                         00000200
*/**** START OF SPECIFICATIONS **************************************** 00000300
*                                                                     * 00000400
*                                                                     * 00000500
*01* MACRO NAME:  IWMSRDNS                              -03/14/97-<0> * 00000600
*                                                                     * 00000700
*                                                                     * 00000800
*01* DESCRIPTIVE NAME:  Sysplex Routing Location List                 * 00000900
*                                                                     * 00001000
*01* PROPRIETARY STATEMENT:                                           * 00001100
*                                                                     * 00001200
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001300
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001400
*     5647-A01 (C) COPYRIGHT IBM CORP. 1997                           * 00001500
*                                                                     * 00001600
* STATUS= JBB6604                                                     * 00001700
*                                                                     * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*01* FUNCTION:                                                        * 00002100
*                                                                     * 00002200
*      IWMSRDNS will return a list of location names for all          * 00002300
*      registered servers which have been registered with a host      * 00002400
*      name, known to the system on which the service is invoked.     * 00002500
*      Servers which have deregistered, via IWMSRDRS, may still be    * 00002600
*      present in the output list, due to the asynchronous nature of  * 00002700
*      deregistration. Conversely, some registered servers may not    * 00002800
*      appear for this same reason.                                   * 00002900
*                                                                     * 00003000
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00003100
*                                                                     * 00003200
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00003300
*                                                                     * 00003400
*01* ENVIRONMENT:                                                     * 00003500
*                                                                     * 00003600
*                                                                     * 00003700
*      Minimum authorization: Problem state with any PSW key.         * 00003800
*                                                                     * 00003900
*      Dispatchable unit mode: Task mode.                             * 00004000
*                                                                     * 00004100
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00004200
*                                                                     * 00004300
*      AMODE:            31-bit.                                      * 00004400
*                                                                     * 00004500
*      ASC mode:         Primary.                                     * 00004600
*                                                                     * 00004700
*      Interrupt status: Enabled for I/O and external interrupts.     * 00004800
*                                                                     * 00004900
*      Locks:            No locks held.  FRRs may be established.     * 00005000
*                                                                     * 00005100
*      Control parameters: Control parameters must be in the primary  * 00005200
*                        address space.                               * 00005300
*                                                                     * 00005400
*                                                                     * 00005500
*                                                                     * 00005600
*01* PROGRAMMING REQUIREMENTS:                                        * 00005700
*                                                                     * 00005800
*                                                                     * 00005900
*    1.  The macro CVT must be included to use this macro.            * 00006000
*                                                                     * 00006100
*    2.  The macro IWMYCON must be included to use this macro.        * 00006200
*                                                                     * 00006300
*    3.  The macro IWMPB must be in the library concatenation, since  * 00006400
*        it is included by IWMYCON.                                   * 00006500
*                                                                     * 00006600
*    4.  Note that the high order halfword of register 0, and the     * 00006700
*        reason code variable when specified, may be non-zero and     * 00006800
*        represents diagnostic data which is NOT part of the external * 00006900
*        interface.  The high order halfword should thus be excluded  * 00007000
*        from comparison with the reason code values described above. * 00007100
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00007200
*        be used for this purpose.                                    * 00007300
*                                                                     * 00007400
*    5.  All character data, unless otherwise specified, is assumed   * 00007500
*        to be left justified and padded with blanks on the right, as * 00007600
*        needed, to occupy the specified number of bytes.             * 00007700
*                                                                     * 00007800
*                                                                     * 00007900
*                                                                     * 00008000
*01* RESTRICTIONS:                                                    * 00008100
*                                                                     * 00008200
*                                                                     * 00008300
*    1.  This macro may not be used prior to the completion of WLM    * 00008400
*        address space initialization                                 * 00008500
*                                                                     * 00008600
*    2.  This macro may only be used on MVS/ESA SP6.4 or higher       * 00008700
*        levels.                                                      * 00008800
*                                                                     * 00008900
*                                                                     * 00009000
*                                                                     * 00009100
*01* INPUT REGISTER INFORMATION:                                      * 00009200
*                                                                     * 00009300
*    Before issuing the IWMSRDNS macro, the caller does not have to   * 00009400
*    place any information into any register unless using it in       * 00009500
*    register notation for a particular parameter, or using it as a   * 00009600
*    base register.                                                   * 00009700
*                                                                     * 00009800
*01* OUTPUT REGISTER INFORMATION:                                     * 00009900
*                                                                     * 00010000
*    When control returns to the caller, the GPRs contain:            * 00010100
*                                                                     * 00010200
*                                                                     * 00010300
*    REGISTER  CONTENTS                                               * 00010400
*                                                                     * 00010500
*    0         Reason code if GR15 return code is non-zero            * 00010600
*                                                                     * 00010700
*    1         Used as work register by the system                    * 00010800
*                                                                     * 00010900
*    2-13      Unchanged                                              * 00011000
*                                                                     * 00011100
*    14        Used as work register by the system                    * 00011200
*                                                                     * 00011300
*    15        Return code                                            * 00011400
*                                                                     * 00011500
*                                                                     * 00011600
*                                                                     * 00011700
*    When control returns to the caller, the ARs contain:             * 00011800
*                                                                     * 00011900
*                                                                     * 00012000
*    REGISTER  CONTENTS                                               * 00012100
*                                                                     * 00012200
*    0-1       Used as work registers by the system                   * 00012300
*                                                                     * 00012400
*    2-13      Unchanged                                              * 00012500
*                                                                     * 00012600
*    14-15     Used as work registers by the system                   * 00012700
*                                                                     * 00012800
*                                                                     * 00012900
*                                                                     * 00013000
*    Some callers depend on register contents remaining the same      * 00013100
*    before and after issuing a service.  If the system changes the   * 00013200
*    contents of registers on which the caller depends, the caller    * 00013300
*    must save them before issuing the service, and restore them      * 00013400
*    after the system returns control.                                * 00013500
*                                                                     * 00013600
*01* PERFORMANCE IMPLICATIONS:                                        * 00013700
*                                                                     * 00013800
*    None                                                             * 00013900
*                                                                     * 00014000
*01* SYNTAX:                                                          * 00014100
*                                                                     * 00014200
*[xlabel]  IWMSRDNS     LOCATION_NAMES                                * 00014300
*                                      =xlocation_names               * 00014400
*                      ,ANSLEN=xanslen                                * 00014500
*                     [,ENTRY_COUNT=xentry_count]                     * 00014600
*                      ,QUERYLEN=xquerylen                            * 00014700
*                     [,RETCODE=xretcode]                             * 00014800
*                     [,RSNCODE=xrsncode]                             * 00014900
*                     [,PLISTVER=xplistver|IMPLIED_VERSION]         * 00015000
*                    [,MF=S]                                         * 00015100
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00015200
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00015300
*                                                                     * 00015400
*                                                                     * 00015500
*      Where:                                                         * 00015600
*                                                                     * 00015700
*                                                                     * 00015800
*      [xlabel]                                                       * 00015900
*          is an optional symbol, starting in column 1, that is the   * 00016000
*          name on the IWMSRDNS macro invocation.  The name must      * 00016100
*          conform to the rules for an ordinary assembler language    * 00016200
*          symbol.                                                    * 00016300
*          DEFAULT: No name.                                          * 00016400
*                                                                     * 00016500
*                                                                     * 00016600
*                                                                     * 00016700
*                                                                     * 00016800
*      LOCATION_NAMES(xlocation_names)                                * 00016900
*          is a required input.  It is the name (RS-type) (or address * 00017000
*          in register (2)-(12) ASM only) of the area to be filled in * 00017100
*          with the list of location names for the registered,        * 00017200
*          active, LUs in the SYSPLEX registered with a host name.    * 00017300
*                                                                     * 00017400
*          The area must be large enough to contain at least 1 entry. * 00017500
*          The format of this area is mapped by IWMWSYSL.             * 00017600
*                                                                     * 00017700
*                                                                     * 00017800
*                                                                     * 00017900
*                                                                     * 00018000
*      ANSLEN(xanslen)                                                * 00018100
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00018200
*          only) of a required fullword input which contains the      * 00018300
*          length of the LOCATION_NAMES in bytes.                     * 00018400
*                                                                     * 00018500
*                                                                     * 00018600
*                                                                     * 00018700
*                                                                     * 00018800
*      [ENTRY_COUNT(xentry_count)]                                    * 00018900
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00019000
*          only) of an optional fullword output which will hold the   * 00019100
*          number of location entries returned by the service.  This  * 00019200
*          is the number of entries in the SYSL_INFO array (see       * 00019300
*          IWMWSYSL).                                                 * 00019400
*                                                                     * 00019500
*                                                                     * 00019600
*                                                                     * 00019700
*                                                                     * 00019800
*      QUERYLEN(xquerylen)                                            * 00019900
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00020000
*          only) of a required fullword output variable which         * 00020100
*          contains the number of bytes needed for all data           * 00020200
*          requested.                                                 * 00020300
*                                                                     * 00020400
*                                                                     * 00020500
*                                                                     * 00020600
*                                                                     * 00020700
*      [RETCODE(xretcode)]                                            * 00020800
*          is the name (RS-type) of an optional fullword output       * 00020900
*          variable (or register (2)-(12) ASM only) into which the    * 00021000
*          return code is to be copied from GPR 15.                   * 00021100
*                                                                     * 00021200
*                                                                     * 00021300
*                                                                     * 00021400
*                                                                     * 00021500
*      [RSNCODE(xrsncode)]                                            * 00021600
*          is the name (RS-type) of an optional fullword output       * 00021700
*          variable (or register (2)-(12) ASM only) into which the    * 00021800
*          reason code is to be copied from GPR 0.                    * 00021900
*                                                                     * 00022000
*                                                                     * 00022100
*                                                                     * 00022200
*                                                                     * 00022300
*      [PLISTVER(xplistver|IMPLIED_VERSION)]                        * 00022400
*          is an optional byte input decimal value in the "0-0" range * 00022500
*          that specifies the macro version.  PLISTVER is the only    * 00022600
*          key allowed on the list form of MF and determines which    * 00022700
*          parameter list is generated.  Note that MAX may be         * 00022800
*          specified instead of a number, and the parameter list will * 00022900
*          be of the largest size currently supported. This size may  * 00023000
*          grow from release to release (thus possibly affecting the  * 00023100
*          amount of storage needed by your program).  If your        * 00023200
*          program can tolerate this, IBM recommends that you always  * 00023300
*          specify MAX when creating the list form parameter list as  * 00023400
*          that will ensure that the list form parameter list is      * 00023500
*          always long enough to hold whatever parameters might be    * 00023600
*          specified on the execute form.                             * 00023700
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00023800
*          default is the lowest version which allows all of the      * 00023900
*          parameters specified on the invocation to be processed.    * 00024000
*                                                                     * 00024100
*                                                                     * 00024200
*                                                                     * 00024300
*                                                                     * 00024400
*      [MF(S|L|E)]                                                  * 00024500
*          is an optional keyword input which specifies the macro     * 00024600
*          form.                                                      * 00024700
*          DEFAULT: S                                                 * 00024800
*                                                                     * 00024900
*                                                                     * 00025000
*          [MF(S)]                                                    * 00025100
*              specifies the standard form of the macro.  The "S"     * 00025200
*              form generates code to put the parameters into the     * 00025300
*              parameter list and invoke the desired service.  Full   * 00025400
*              checking for required macro keys is done along with    * 00025500
*              supplying defaults for omitted optional parameters.    * 00025600
*              The ?EPILOG macro must be invoked at the end of the    * 00025700
*              module.                                                * 00025800
*                                                                     * 00025900
*              For assembly language code modules, the "S" form       * 00026000
*              generates code to put the parameters into an in-line   * 00026100
*              parameter list and invoke the desired service.  Full   * 00026200
*              checking for required macro keys is done along with    * 00026300
*              supplying defaults for omitted optional parameters.    * 00026400
*                                                                     * 00026500
*          [MF(L,xmfctrl,xmfattr|BDY(DWORD))]                       * 00026600
*              specifies the list form of the macro.  The "L" form    * 00026700
*              defines an area to be used for the parameter list.     * 00026800
*              Only the PLISTVER key may be specified on the          * 00026900
*              invocation.  All other macro parameters are flagged as * 00027000
*              errors.  If PLISTVER is not specified, the original    * 00027100
*              parameter list definition is used.                     * 00027200
*                                                                     * 00027300
*            ,xmfctrl                                                 * 00027400
*              is a required input.  It is the name of a storage area * 00027500
*              for the parameter list.                                * 00027600
*                                                                     * 00027700
*            ,xmfattr|BDY(DWORD)                                    * 00027800
*              is an optional 60 character input string that varies   * 00027900
*              from 1 to 60 characters. Use it to force boundary      * 00028000
*              alignment of the parameter list. Use any value that    * 00028100
*              represents a boundary and is valid on an assembler DS  * 00028200
*              pseudo op (assembler-only).                            * 00028300
*              DEFAULT: 0D for Assembler, BDY(DWORD) for PL/X, which  * 00028400
*              forces the parameter list to a doubleword boundary.    * 00028500
*                                                                     * 00028600
*          [MF(E,xmfctrl,COMPLETE)]                                 * 00028700
*              specifies the execute form of the macro.  The "E" form * 00028800
*              generates code to put the parameters into the          * 00028900
*              parameter list specified by xmfctrl and provides full  * 00029000
*              syntax checking with default setting.                  * 00029100
*                                                                     * 00029200
*            ,xmfctrl                                                 * 00029300
*              is a required input.  It is the name (RS-type) (or     * 00029400
*              address in register (1)-(12) ASM only) of a storage    * 00029500
*              area for the parameter list.                           * 00029600
*                                                                     * 00029700
*            ,COMPLETE                                              * 00029800
*              is an optional keyword input which specifies the       * 00029900
*              degree of macro parameter syntax checking.             * 00030000
*              DEFAULT: COMPLETE                                      * 00030100
*                                                                     * 00030200
*                                                                     * 00030300
*              COMPLETE                                               * 00030400
*                  Checking for required macro keys is done and       * 00030500
*                  defaults are supplied for omitted optional         * 00030600
*                  parameters.                                        * 00030700
*                                                                     * 00030800
*                                                                     * 00030900
*                                                                     * 00031000
*                                                                     * 00031100
*                                                                     * 00031200
*                                                                     * 00031300
*                                                                     * 00031400
*01* ABEND CODES:  None.                                              * 00031500
*                                                                     * 00031600
*01* RETURN CODES:                                                    * 00031700
*                                                                     * 00031800
*                                                                     * 00031900
*            0    Name: IwmRetCodeOk                                  * 00032000
*                                                                     * 00032100
*                 Meaning: Successful completion.                     * 00032200
*                                                                     * 00032300
*                 Action: None required.                              * 00032400
*                                                                     * 00032500
*            4    Name: IwmRetCodeWarning                             * 00032600
*                                                                     * 00032700
*                 Meaning: Successful completion, unusual conditions  * 00032800
*                 noted.                                              * 00032900
*                                                                     * 00033000
*                                                                     * 00033100
*                 HEX REASON  MEANING/ACTION                          * 00033200
*                 CODE                                                * 00033300
*                                                                     * 00033400
*                 xxxx040A    Name: IwmRsnCodeOutputAreaTooSmall      * 00033500
*                                                                     * 00033600
*                             Meaning:  The output area supplied is   * 00033700
*                             too small to receive all the available  * 00033800
*                             information.                            * 00033900
*                                                                     * 00034000
*                             Action: None required.  If necessary,   * 00034100
*                             reinvoke the service with an output     * 00034200
*                             area of sufficient size to receive all  * 00034300
*                             information.                            * 00034400
*                                                                     * 00034500
*                 xxxx040B    Name: IwmRsnCodeNoServersRegistered     * 00034600
*                                                                     * 00034700
*                             Meaning:  No Servers have registered in * 00034800
*                             the sysplex.                            * 00034900
*                                                                     * 00035000
*                             Action: None required.                  * 00035100
*                                                                     * 00035200
*                                                                     * 00035300
*                                                                     * 00035400
*            8    Name: IwmRetCodeInvocError                          * 00035500
*                                                                     * 00035600
*                 Meaning: Invalid invocation environment or          * 00035700
*                 parameters.                                         * 00035800
*                                                                     * 00035900
*                                                                     * 00036000
*                 HEX REASON  MEANING/ACTION                          * 00036100
*                 CODE                                                * 00036200
*                                                                     * 00036300
*                 xxxx0803    Name: IwmRsnCodeDisabled                * 00036400
*                                                                     * 00036500
*                             Meaning: Caller is disabled.            * 00036600
*                                                                     * 00036700
*                             Action: Avoid requesting this function  * 00036800
*                             while disabled.                         * 00036900
*                                                                     * 00037000
*                 xxxx0804    Name: IwmRsnCodeLocked                  * 00037100
*                                                                     * 00037200
*                             Meaning: Caller is locked.              * 00037300
*                                                                     * 00037400
*                             Action: Avoid requesting this function  * 00037500
*                             while locked.                           * 00037600
*                                                                     * 00037700
*                 xxxx080B    Name: IwmRsnCodeBadPl                   * 00037800
*                                                                     * 00037900
*                             Meaning:  Error accessing parameter     * 00038000
*                             list.                                   * 00038100
*                                                                     * 00038200
*                             Action: Check for possible storage      * 00038300
*                             overlay.                                * 00038400
*                                                                     * 00038500
*                 xxxx0823    Name: IwmRsnCodeDatoff                  * 00038600
*                                                                     * 00038700
*                             Meaning: Caller invoked service while   * 00038800
*                             DATOFF                                  * 00038900
*                                                                     * 00039000
*                             Action: Avoid requesting this function  * 00039100
*                             in this environment.                    * 00039200
*                                                                     * 00039300
*                 xxxx0824    Name: IwmRsnCodeAmode24                 * 00039400
*                                                                     * 00039500
*                             Meaning: Caller invoked service but was * 00039600
*                             in 24 bit addressing mode.              * 00039700
*                                                                     * 00039800
*                             Action: Request this function only when * 00039900
*                             you are in 31 bit addressing mode.      * 00040000
*                                                                     * 00040100
*                 xxxx0825    Name: IwmRsnCodeAscModeNotPrimary       * 00040200
*                                                                     * 00040300
*                             Meaning: Caller invoked service but was * 00040400
*                             not DAT on Primary ASC mode.            * 00040500
*                                                                     * 00040600
*                             Action: Avoid requesting this function  * 00040700
*                             in this environment.                    * 00040800
*                                                                     * 00040900
*                                                                     * 00041000
*                                                                     * 00041100
*            C    Name: IwmRetCodeEnvError                            * 00041200
*                                                                     * 00041300
*                 Meaning: Environmental error.                       * 00041400
*                                                                     * 00041500
*                                                                     * 00041600
*                 HEX REASON  MEANING/ACTION                          * 00041700
*                 CODE                                                * 00041800
*                                                                     * 00041900
*                 xxxx0C01    Name: IwmRsnCodeNoStg                   * 00042000
*                                                                     * 00042100
*                             Meaning:  Storage is not available for  * 00042200
*                             the request.                            * 00042300
*                                                                     * 00042400
*                             Action: There is a storage shortage.    * 00042500
*                             The function may work successfully at a * 00042600
*                             later time.                             * 00042700
*                                                                     * 00042800
*                                                                     * 00042900
*                                                                     * 00043000
*            10   Name: IwmRetCodeCompError                           * 00043100
*                                                                     * 00043200
*                 Meaning: Component error.                           * 00043300
*                                                                     * 00043400
*                 Action: No action required.  The function may be    * 00043500
*                 successful if invoked again.                        * 00043600
*                                                                     * 00043700
*                                                                     * 00043800
*                                                                     * 00043900
*01* REASON CODES:                                                    * 00044000
*                                                                     * 00044100
*       A unique reason code will be returned whenever the return     * 00044200
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00044300
*       under their corresponding return code.  Reason code and       * 00044400
*       return code constants are defined within IWMYCON.  Note that  * 00044500
*       the high order halfword of register 0, and the reason code    * 00044600
*       variable when specified, may be non-zero and represents       * 00044700
*       diagnostic data which is NOT part of the external interface.  * 00044800
*       The high order halfword should thus be excluded from          * 00044900
*       comparison with the reason code values described above.  The  * 00045000
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00045100
*       used for this purpose.                                        * 00045200
*                                                                     * 00045300
*01* MODULE TYPE:  ASSEM-PL/AS MACRO                                  * 00045400
*                                                                     * 00045500
*02*   PROCESSOR:  ASSEM-PL/AS                                        * 00045600
*                                                                     * 00045700
*01* COMPONENT:  SCWLM                                                * 00045800
*                                                                     * 00045900
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00046000
*                                                                     * 00046100
*01* EXAMPLES:                                                        * 00046200
*                                                                     * 00046300
*    To list all locations registered with a host name:               * 00046400
*                                                                     * 00046500
*               IWMSRDNS LOCATION_NAMES=DATA,                         * 00046600
*                        ANSLEN=SIZE,                                 * 00046700
*                        ENTRY_COUNT=E,                               * 00046800
*                        QUERYLEN=Q,                                  * 00046900
*                        RETCODE=RC,RSNCODE=RSN                       * 00047000
*      *                                                              * 00047100
*      * Storage areas                                                * 00047200
*      *                                                              * 00047300
*      DATA     DS    CL200           Area to receive output          * 00047400
*      SIZEEQU  EQU   *-DATA          Equate for size of Data         * 00047500
*      E        DS    F               Field to receive entry count    * 00047600
*      Q        DS    F               Field to receive query length   * 00047700
*      RC       DS    F               Return code                     * 00047800
*      RSN      DS    F               Reason code                     * 00047900
*      SIZE     DC    A(SIZEEQU)      Field to hold size              * 00048000
*                                                                     * 00048100
*                                                                     * 00048200
*01* MACRO USAGE NOTES:                                               * 00048300
*                                                                     * 00048400
*                                                                     * 00048500
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00048600
*        global macro variable.  Any value other than 'NO' will       * 00048700
*        result in the macro expansion being printed.  The default is * 00048800
*        'YES'.  The following examples illustrate how the ZPRINT     * 00048900
*        variable should be set.                                      * 00049000
*                                                                     * 00049100
*                    GBLC &ZPRINT                                     * 00049200
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00049300
*                                                                     * 00049400
*                                                                     * 00049500
*    2.  All   keys   currently   contained  in  the  IWMSRDNS  macro * 00049600
*        correspond  to  version  0.   If you specify PLISTVER, use a * 00049700
*        value of 0 or MAX.                                           * 00049800
*                                                                     * 00049900
*                                                                     * 00050000
*                                                                     * 00050100
*                                                                     * 00050200
*01* CHANGE ACTIVITY:                                                 * 00050300
*                                                                     * 00050400
*   Flag LineItem  FMID    Date   ID    Comment                       * 00050500
*                                                                     * 00050600
*    $L0=WLMPDNS  JBB6604 961031 PDKP:  Host name Support.            * 00050700
*    $P1=PSY0169  JBB6604 970117 PDKP:  Change PC number to correct   * 00050800
*                                         value.                      * 00050900
****** END OF SPECIFICATIONS *****************************************/ 00051000
*/* TLINE 1 *********************************************************** 00051100
         MACRO                                                          00051200
&XLABEL  IWMSRDNS &LOCATION_NAMES=,&ANSLEN=,&ENTRY_COUNT=,&QUERYLEN=,  *00051300
               &RETCODE=,&RSNCODE=,&PLISTVER=,&MF=                      00051400
.*                                                                      00051500
*                    MACDATE -03/14/97-<0>                              00051600
.*                                                                      00051700
.*******************************************************************    00051800
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00051900
.*******************************************************************    00052000
                    GBLC  &ZPRINT     YES=PRINT NO=NO PRINT             00052100
                    GBLC  &ZTEST      YES=TEST NO=NO TEST               00052200
                    GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX       00052300
.*                                                                      00052400
                    GBLC  &ZIWMSRDNS  YES=MACRO USED AT LEAST ONCE      00052500
.*******************************************************************    00052600
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00052700
.*******************************************************************    00052800
                    LCLC  &ZMS        ERROR MESSAGE WORK AREA           00052900
                    LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS      00053000
                    LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED        00053100
                    LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR       00053200
                    LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE       00053300
                    LCLA  &ZAWRK      USED AS A WORK AREA               00053400
                    LCLA  &ZASIZ      USED FOR SIZE OF VALUE            00053500
                    LCLA  &ZN         NUMERIC WORK VARIABLE             00053600
                    LCLC  &ZC         CHARACTER WORK VARIABLE           00053700
                    LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE       00053800
                    LCLA  &ZTLA       VALUE TOO LONG VARIABLE           00053900
                    LCLA  &ZMACRET    MACRO RETURN CODE                 00054000
&ZMACRET            SETA  0           ASSUME NO ERRORS                  00054100
.*                                                                      00054200
                    LCLC  &ZCSYSLIST(255)       NONXKEY, POS ARRAY      00054300
                    LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()        00054400
                    LCLA  &ZPLLEN     PARAMETER LIST LENGTH             00054500
                    LCLC  &ZENDBASEPL           End of base PL          00054600
                    LCLA  &ZPLWORKA   PARAMETER LIST LENGTH             00054700
.*******************************************************************    00054800
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00054900
.*******************************************************************    00055000
                    LCLA  &ZI         INDEX FOR ARRAY                   00055100
                    LCLA  &ZJ         INDEX FOR PARMS                   00055200
                    LCLA  &ZK         INDEX FOR PARSE                   00055300
                    LCLA  &ZLO        LOW RANGE VALUE                   00055400
                    LCLA  &ZHI        HIGH RANGE VALUE                  00055500
                    LCLC  &ZW         WORK AREA FOR PARM                00055600
.********************************************************************   00055700
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00055800
.********************************************************************   00055900
                    GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL           00056000
                    GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE    00056100
.*                                                                      00056200
                    AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED    00056300
                    AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED     00056400
                    SPLEVEL  TEST                                       00056500
.ZSYS2              ANOP  ,                                             00056600
                    AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1         00056700
                    AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1         00056800
                    SYSSTATE TEST                                       00056900
                    AGO   .ZSYS4                                        00057000
.ZSYS3              ANOP  ,                                             00057100
&SYSASCE            SETC  'P'         ASSUME SYSSTATE PRIMARY           00057200
.ZSYS4              ANOP  ,                                             00057300
.*******************************************************************    00057400
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00057500
.*******************************************************************    00057600
                    LCLC  &XLOCATION_NAMES      ++ NAME                 00057700
                    LCLC  &XANSLEN    ++ NAME                           00057800
                    LCLC  &XENTRY_COUNT         ++ NAME                 00057900
                    LCLC  &XQUERYLEN  ++ NAME                           00058000
                    LCLC  &XRETCODE   ++ NAME                           00058100
                    LCLC  &XRSNCODE   ++ NAME                           00058200
                    LCLA  &XPLISTVER  ++ VALUE                          00058300
                    LCLC  &XMF        ++ VALUE                          00058400
                    LCLC  &XMFCTRL    ++ NAME                           00058500
                    LCLC  &XMFATTR    ++ VALUE                          00058600
                    LCLC  &XMFSCK     ++ VALUE                          00058700
.*******************************************************************    00058800
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00058900
.*******************************************************************    00059000
                    LCLC  &ZXLOCATION_NAMES     ++ INPUT NAME           00059100
                    LCLC  &ZXANSLEN   ++ INPUT NAME                     00059200
                    LCLC  &ZXENTRY_COUNT        ++ OUTPUT NAME          00059300
                    LCLC  &ZXQUERYLEN           ++ OUTPUT NAME          00059400
                    LCLC  &ZXRETCODE  ++ OUTPUT NAME                    00059500
                    LCLC  &ZXRSNCODE  ++ OUTPUT NAME                    00059600
                    LCLC  &ZXPLISTVER           ++ INPUT VALUE          00059700
                    LCLC  &ZXMF       ++ INPUT VALUE                    00059800
                    LCLC  &ZXMFCTRL   ++ INPUT NAME                     00059900
                    LCLC  &ZXMFATTR   ++ INPUT VALUE                    00060000
                    LCLC  &ZXMFSCK    ++ INPUT VALUE                    00060100
.********************************************************************   00060200
.***AC.PLV01  PROCESS PLISTVER                                      *   00060300
.********************************************************************   00060400
&XPLISTVER      SETA  0                                                 00060500
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00060600
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00060700
&XPLISTVER      SETA  0                                                 00060800
.ZPLV0          ANOP  ,                                                 00060900
.*                                                                      00061000
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00061100
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00061200
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00061300
.*-------------------------------------------------------------------   00061400
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00061500
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00061600
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00061700
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00061800
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00061900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00062000
                AGO   .ZPVCK2                                           00062100
.ZPVCK3         ANOP  ,                                                 00062200
.*-------------------------------------------------------------------   00062300
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00062400
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00062500
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00062600
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00062700
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00062800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00062900
                AGO   .ZPVCKE                                           00063000
.ZPVCK2         ANOP  ,                                                 00063100
.*-------------------------------------------------------------------   00063200
&ZCVAL          SETC  '&PLISTVER(1)'                                    00063300
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00063400
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00063500
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00063600
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00063700
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00063800
.ZPVCK6         ANOP  ,                                                 00063900
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00064000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00064100
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00064200
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00064300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00064400
&XPLISTVER      SETA  0                                                 00064500
                AGO   .ZPVCKE                                           00064600
.*-------------------------------------------------------------------   00064700
.ZPVCK4A        ANOP  ,                                                 00064800
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00064900
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00065000
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00065100
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00065200
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00065300
                MNOTE 8,' &ZMS IS REQUIRED.'                            00065400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00065500
                AGO   .ZPVCK5                                           00065600
.ZPVCK4         ANOP  ,                                                 00065700
&XPLISTVER      SETA  &PLISTVER(1)                                      00065800
.ZPVCK5         ANOP  ,                                                 00065900
.ZPVCKE         ANOP  ,                                                 00066000
.********************************************************************   00066100
.***AG.MF01 PROCESS MF MACRO FORMS                                      00066200
.********************************************************************   00066300
                    ACTR  10000                                         00066400
.*------------------------------------------------------------------    00066500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00066600
&XMF                SETC  ''          INITIALIZE XVARIABLE              00066700
.*-------------------------------------------------------------------   00066800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00066900
.ZG24               ANOP  ,                                             00067000
&ZTLC               SETC 'S'                                            00067100
                    AIF   ('&MF(1)' NE '&ZTLC').ZG25                    00067200
&XMF                SETC  'S'         SET KEYWORD                       00067300
                    AIF   (N'&MF LE 1).ZG24A    CK NUM                  00067400
&ZMS                SETC  '"MF='      *KPOSA* MNOTE                     00067500
&ZMS                SETC  '&ZMS.&MF"'                                   00067600
&ZMS                SETC  '&ZMS "MF"'                                   00067700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00067800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00067900
.ZG24A              ANOP  ,                                             00068000
.*-------------------------------------------------------------------   00068100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00068200
.ZG25               ANOP  ,                                             00068300
&ZTLC               SETC 'L'                                            00068400
                    AIF   ('&MF(1)' NE '&ZTLC').ZG32                    00068500
&XMF                SETC  'L'         SET KEYWORD                       00068600
                    AIF   (N'&MF LE 3).ZG25A    CK NUM                  00068700
&ZMS                SETC  '"MF='      *KPOSA* MNOTE                     00068800
&ZMS                SETC  '&ZMS.&MF"'                                   00068900
&ZMS                SETC  '&ZMS "MF"'                                   00069000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'          00069100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00069200
.ZG25A              ANOP  ,                                             00069300
.*-------------------------------------------------------------------   00069400
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00069500
                    AIF   (N'&SYSLIST NE 0).ZG25B  POSITIONALS?         00069600
                    AIF   ('&LOCATION_NAMES' NE '').ZG25B  KEYS?        00069700
                    AIF   ('&ANSLEN' NE '').ZG25B  KEYS?                00069800
                    AIF   ('&ENTRY_COUNT' NE '').ZG25B  KEYS?           00069900
                    AIF   ('&QUERYLEN' NE '').ZG25B  KEYS?              00070000
                    AIF   ('&RETCODE' NE '').ZG25B  KEYS?               00070100
                    AIF   ('&RSNCODE' NE '').ZG25B  KEYS?               00070200
                    AGO    .ZG25C     INVOCATION OKAY                   00070300
.ZG25B              ANOP  ,                                             00070400
&ZMS                SETC  'THE "L" FORM OF "MF"'  *MFLA* MNOTE          00070500
&ZMS                SETC  '&ZMS CAN ONLY HAVE'                          00070600
&ZMS                SETC  '&ZMS THE "PLISTVER" KEY'                     00070700
                    MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'        00070800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00070900
.ZG25C              ANOP  ,                                             00071000
.*-------------------------------------------------------------------   00071100
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00071200
&ZXMFCTRL           SETC  'INPUT'     SET IN/OUTPUT                     00071300
&XMFCTRL            SETC  '&MF(2,1)'  SET XVARIABLE                     00071400
                    AIF   (N'&MF(2) GT 1).ZG27B  MULTI PARMS            00071500
&XMFCTRL            SETC  '&MF(2)'    SET XVARIABLE                     00071600
.ZG27B              AIF   (K'&MF(2) GT 0).ZG27C                         00071700
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   00071800
&ZMS                SETC  'WHEN "L" IS SPECIFIED'  *KRQDA*              00071900
&ZMS                SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'           00072000
                    MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                  00072100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00072200
.ZG27C              ANOP  ,                                             00072300
.*-------------------------------------------------------------------   00072400
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00072500
                    AIF   (K'&ZXMFCTRL LE 0).ZG27P  NOT I/O             00072600
                    AIF   ('&XMFCTRL'(1,1) NE '(').ZG27P                00072700
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   00072800
&ZMS                SETC  '"MF='      *KGPRA* MNOTE                     00072900
&ZMS                SETC  '&ZMS.&MF"'                                   00073000
&ZMS                SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'     00073100
                    MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'             00073200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00073300
.ZG27P              ANOP  ,                                             00073400
.*-------------------------------------------------------------------   00073500
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00073600
&ZXMFATTR           SETC  'INPUT'     SET IN/OUTPUT                     00073700
&XMFATTR            SETC  '0D'                                          00073800
                    AIF   (K'&MF(3) LE 0).ZG30B  PARM                   00073900
&XMFATTR            SETC  '&MF(3,1)'  SET XVARIABLE                     00074000
                    AIF   (N'&MF(3) GT 1).ZG30B  MULTI PARMS            00074100
&XMFATTR            SETC  '&MF(3)'    SET XVARIABLE                     00074200
.ZG30B              ANOP  ,                                             00074300
.*-------------------------------------------------------------------   00074400
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00074500
                    AIF   (K'&ZXMFATTR LE 0).ZG30P  NOT I/O             00074600
                    AIF   ('&XMFATTR'(1,1) NE '(').ZG30P                00074700
&ZXMFATTR           SETC  ''          RESET IN/OUTPUT                   00074800
&ZMS                SETC  '"MF='      *KGPRA* MNOTE                     00074900
&ZMS                SETC  '&ZMS.&MF"'                                   00075000
&ZMS                SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'     00075100
                    MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'             00075200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00075300
.ZG30P              ANOP  ,                                             00075400
.*-------------------------------------------------------------------   00075500
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00075600
                    AIF   (K'&ZXMFATTR LE 0).ZG30S  NOT I/O             00075700
                    AIF   (K'&XMFATTR LE 60).ZG30S  LNG OK              00075800
&ZXMFATTR           SETC  ''          RESET IN/OUTPUT                   00075900
&ZMS                SETC  '"MF='      *KLNGA* MNOTE                     00076000
&ZMS                SETC  '&ZMS.&MF"'                                   00076100
&ZMS                SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'         00076200
                    MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'            00076300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00076400
.ZG30S              ANOP  ,                                             00076500
.*-------------------------------------------------------------------   00076600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00076700
.ZG32               ANOP  ,                                             00076800
&ZTLC               SETC 'E'                                            00076900
                    AIF   ('&MF(1)' NE '&ZTLC').ZG40                    00077000
&XMF                SETC  'E'         SET KEYWORD                       00077100
                    AIF   (N'&MF LE 3).ZG32A    CK NUM                  00077200
&ZMS                SETC  '"MF='      *KPOSA* MNOTE                     00077300
&ZMS                SETC  '&ZMS.&MF"'                                   00077400
&ZMS                SETC  '&ZMS "MF"'                                   00077500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'          00077600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00077700
.ZG32A              ANOP  ,                                             00077800
.*-------------------------------------------------------------------   00077900
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00078000
&ZXMFCTRL           SETC  'INPUT'     SET IN/OUTPUT                     00078100
&XMFCTRL            SETC  '&MF(2,1)'  SET XVARIABLE                     00078200
                    AIF   (N'&MF(2) GT 1).ZG34B  MULTI PARMS            00078300
&XMFCTRL            SETC  '&MF(2)'    SET XVARIABLE                     00078400
.ZG34B              AIF   (K'&MF(2) GT 0).ZG34C                         00078500
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   00078600
&ZMS                SETC  'WHEN "E" IS SPECIFIED'  *KRQDA*              00078700
&ZMS                SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'           00078800
                    MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                  00078900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00079000
.ZG34C              ANOP  ,                                             00079100
.*-------------------------------------------------------------------   00079200
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00079300
                    AIF   (K'&ZXMFCTRL LE 0).ZG34R  NOT I/O             00079400
                    AIF   ('&XMFCTRL'(1,1) NE '(').ZG34R                00079500
&ZCGPR              SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                    00079600
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG34P                  00079700
                    AIF   (K'&ZCGPR GT 2).ZG34Q                         00079800
                    AIF   ('&ZCGPR' EQ '0').ZG34Q                       00079900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00080000
                    AIF   (T'&ZCGPR NE 'N').ZG34Q  INVALID REG NAME     00080100
.ZG34P              ANOP  ,                                             00080200
                    AIF   (T'&ZCGPR NE 'N').ZG34R  NON NUMERIC          00080300
                    AIF   ('&ZCGPR' LT '1').ZG34Q                       00080400
                    AIF   ('&ZCGPR' LE '12').ZG34R                      00080500
.ZG34Q              ANOP  ,                                             00080600
&ZMS                SETC  '"MF='      *KGPRA* MNOTE                     00080700
&ZMS                SETC  '&ZMS.&MF"'                                   00080800
&ZMS                SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'     00080900
                    MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'              00081000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00081100
.ZG34R              ANOP  ,                                             00081200
.*-------------------------------------------------------------------   00081300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00081400
&XMFSCK             SETC  ''          INITIALIZE XVARIABLE              00081500
.ZG38A   AIF   ('&MF(3)' NE 'COMPLETE').ZG39A                           00081600
&XMFSCK             SETC  'COMPLETE'  SET KEYWORD                       00081700
.*-------------------------------------------------------------------   00081800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00081900
.ZG39A              AIF   (K'&XMFSCK GT 0).ZG39C  KEYWORD               00082000
                    AIF   (K'&MF(3) LE 0).ZG39B                         00082100
&ZMS                SETC  '"MF='      *KUKWA* MNOTE                     00082200
&ZMS                SETC  '&ZMS.&MF"'                                   00082300
&ZMS                SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '     00082400
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00082500
&ZMS                SETC  '&ZMS "COMPLETE".'    VALID KEYWORD           00082600
                    MNOTE 8,' &ZMS '                                    00082700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00082800
.ZG39B              ANOP  ,                                             00082900
&XMFSCK             SETC  'COMPLETE'  SET DEFAULT KEYWORD               00083000
.ZG39C              ANOP  ,                                             00083100
&ZXMFSCK            SETC  'INPUT'     SET IN/OUTPUT                     00083200
.*------------------------------------------------------------------    00083300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00083400
.ZG40               ANOP  ,                                             00083500
&ZXMF               SETC  'INPUT'     SET IN/OUTPUT                     00083600
                    AIF   (K'&XMF GT 0).ZG40E   VALID ARG               00083700
                    AIF   (T'&MF EQ 'O').ZG40D  OMITTED                 00083800
&ZASYSLNDX          SETA  0                                             00083900
.ZG40A              ANOP  ,           POSITIONAL MACRO KEY              00084000
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00084100
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG40C              00084200
&ZTLC               SETC 'MF'                                           00084300
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG40A     00084400
.ZG40B              ANOP  ,                                             00084500
&ZXMF               SETC  ''          RESET IN/OUTPUT                   00084600
&ZMS                SETC  'THE "MF" KEY'        *KOPTA* MNOTE           00084700
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00084800
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00084900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00085000
                    AGO   .ZG40E                                        00085100
.ZG40C              ANOP  ,                                             00085200
&ZXMF               SETC  ''          RESET IN/OUTPUT                   00085300
&ZMS                SETC  '"MF='      *KUKWA* MNOTE                     00085400
&ZMS                SETC  '&ZMS.&MF"'                                   00085500
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00085600
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00085700
&ZMS                SETC  '&ZMS "S",'           VALID KEYWORD           00085800
&ZMS                SETC  '&ZMS "L",'           VALID KEYWORD           00085900
&ZMS                SETC  '&ZMS OR "E".'        VALID KEYWORD           00086000
                    MNOTE 8,' &ZMS '                                    00086100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00086200
                    AGO   .ZG40E                                        00086300
.ZG40D              ANOP  ,                                             00086400
&XMF                SETC  'S'         SET DEFAULT KEYWORD               00086500
&XMFSCK             SETC  'COMPLETE'  COMPLETE CHECKING                 00086600
.ZG40E              ANOP  ,                                             00086700
.********************************************************************   00086800
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00086900
.********************************************************************   00087000
                    ACTR  10000                                         00087100
.*-------------------------------------------------------------------   00087200
.***AG.MF03 MF=(SLE)                                                    00087300
                    AIF   ('&XMF' EQ 'L').ZGMFX                         00087400
.*----------------------------------------------------------------***   00087500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00087600
                    AIF   (N'&LOCATION_NAMES LE 1).ZG2A  CK NUM         00087700
&ZMS                SETC  '"LOCATION_NAMES='    *KPOSA* MNOTE           00087800
&ZMS                SETC  '&ZMS.&LOCATION_NAMES"'                       00087900
&ZMS                SETC  '&ZMS "LOCATION_NAMES"'                       00088000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00088100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00088200
.ZG2A               ANOP  ,                                             00088300
.*-------------------------------------------------------------------   00088400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00088500
&ZXLOCATION_NAMES   SETC  'INPUT'     SET IN/OUTPUT                     00088600
&XLOCATION_NAMES    SETC  '&LOCATION_NAMES(1)'  SET XVARIABLE           00088700
                    AIF   (N'&LOCATION_NAMES GT 1).ZG2B  MULTI PARMS    00088800
&XLOCATION_NAMES    SETC  '&LOCATION_NAMES'     SET XVARIABLE           00088900
.ZG2B               AIF   (K'&LOCATION_NAMES(1) GT 0).ZG2C              00089000
&ZXLOCATION_NAMES   SETC  ''          RESET IN/OUTPUT                   00089100
&ZMS                SETC  ' '         *KRQDA*                           00089200
&ZMS                SETC  '&ZMS "LOCATION_NAMES" KEY AND ITS ARGUMENT'  00089300
                    MNOTE 8,' &ZMS ARE REQUIRED.'                       00089400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00089500
.ZG2C               ANOP  ,                                             00089600
.*-------------------------------------------------------------------   00089700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00089800
                    AIF   (K'&ZXLOCATION_NAMES LE 0).ZG2R  NOT I/O      00089900
                    AIF   ('&XLOCATION_NAMES'(1,1) NE '(').ZG2R         00090000
&ZCGPR              SETC  '&XLOCATION_NAMES'(2,K'&XLOCATION_NAMES-2)    00090100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                   00090200
                    AIF   (K'&ZCGPR GT 2).ZG2Q                          00090300
                    AIF   ('&ZCGPR' EQ '0').ZG2Q                        00090400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00090500
                    AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME      00090600
.ZG2P               ANOP  ,                                             00090700
                    AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC           00090800
                    AIF   ('&ZCGPR' LT '2').ZG2Q                        00090900
                    AIF   ('&ZCGPR' LE '12').ZG2R                       00091000
.ZG2Q               ANOP  ,                                             00091100
&ZMS                SETC  '"LOCATION_NAMES='    *KGPRA* MNOTE           00091200
&ZMS                SETC  '&ZMS.&LOCATION_NAMES"'                       00091300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00091400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00091500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00091600
.ZG2R               ANOP  ,                                             00091700
.*----------------------------------------------------------------***   00091800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00091900
                    AIF   (N'&ANSLEN LE 1).ZG5A  CK NUM                 00092000
&ZMS                SETC  '"ANSLEN='  *KPOSA* MNOTE                     00092100
&ZMS                SETC  '&ZMS.&ANSLEN"'                               00092200
&ZMS                SETC  '&ZMS "ANSLEN"'                               00092300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00092400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00092500
.ZG5A               ANOP  ,                                             00092600
.*-------------------------------------------------------------------   00092700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00092800
&ZXANSLEN           SETC  'INPUT'     SET IN/OUTPUT                     00092900
&XANSLEN            SETC  '&ANSLEN(1)'          SET XVARIABLE           00093000
                    AIF   (N'&ANSLEN GT 1).ZG5B  MULTI PARMS            00093100
&XANSLEN            SETC  '&ANSLEN'   SET XVARIABLE                     00093200
.ZG5B               AIF   (K'&ANSLEN(1) GT 0).ZG5C                      00093300
&ZXANSLEN           SETC  ''          RESET IN/OUTPUT                   00093400
&ZMS                SETC  ' '         *KRQDA*                           00093500
&ZMS                SETC  '&ZMS "ANSLEN" KEY AND ITS ARGUMENT'          00093600
                    MNOTE 8,' &ZMS ARE REQUIRED.'                       00093700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00093800
.ZG5C               ANOP  ,                                             00093900
.*-------------------------------------------------------------------   00094000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00094100
                    AIF   (K'&ZXANSLEN LE 0).ZG5R  NOT I/O              00094200
                    AIF   ('&XANSLEN'(1,1) NE '(').ZG5R                 00094300
&ZCGPR              SETC  '&XANSLEN'(2,K'&XANSLEN-2)                    00094400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                   00094500
                    AIF   (K'&ZCGPR GT 2).ZG5Q                          00094600
                    AIF   ('&ZCGPR' EQ '0').ZG5Q                        00094700
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00094800
                    AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME      00094900
.ZG5P               ANOP  ,                                             00095000
                    AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC           00095100
                    AIF   ('&ZCGPR' LT '2').ZG5Q                        00095200
                    AIF   ('&ZCGPR' LE '12').ZG5R                       00095300
.ZG5Q               ANOP  ,                                             00095400
&ZMS                SETC  '"ANSLEN='  *KGPRA* MNOTE                     00095500
&ZMS                SETC  '&ZMS.&ANSLEN"'                               00095600
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00095700
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00095800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00095900
.ZG5R               ANOP  ,                                             00096000
.*----------------------------------------------------------------***   00096100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00096200
                    AIF   (N'&ENTRY_COUNT LE 1).ZG8A  CK NUM            00096300
&ZMS                SETC  '"ENTRY_COUNT='       *KPOSA* MNOTE           00096400
&ZMS                SETC  '&ZMS.&ENTRY_COUNT"'                          00096500
&ZMS                SETC  '&ZMS "ENTRY_COUNT"'                          00096600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00096700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00096800
.ZG8A               ANOP  ,                                             00096900
.*-------------------------------------------------------------------   00097000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00097100
                    AIF   (K'&ENTRY_COUNT(1) LE 0).ZG8C  NO PARM        00097200
&ZXENTRY_COUNT      SETC  'OUTPUT'    SET OUTPUT                        00097300
&XENTRY_COUNT       SETC  '&ENTRY_COUNT(1)'     SET XVARIABLE           00097400
                    AIF   (N'&ENTRY_COUNT GT 1).ZG8C                    00097500
&XENTRY_COUNT       SETC  '&ENTRY_COUNT'        SET XVARIABLE           00097600
.ZG8C               ANOP  ,                                             00097700
.*-------------------------------------------------------------------   00097800
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00097900
                    AIF   (K'&ZXENTRY_COUNT LE 0).ZG8R  NOT I/O         00098000
                    AIF   ('&XENTRY_COUNT'(1,1) NE '(').ZG8R            00098100
&ZCGPR              SETC  '&XENTRY_COUNT'(2,K'&XENTRY_COUNT-2)          00098200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                   00098300
                    AIF   (K'&ZCGPR GT 2).ZG8Q                          00098400
                    AIF   ('&ZCGPR' EQ '0').ZG8Q                        00098500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00098600
                    AIF   (T'&ZCGPR NE 'N').ZG8Q  INVALID REG NAME      00098700
.ZG8P               ANOP  ,                                             00098800
                    AIF   (T'&ZCGPR NE 'N').ZG8R  NON NUMERIC           00098900
                    AIF   ('&ZCGPR' LT '2').ZG8Q                        00099000
                    AIF   ('&ZCGPR' LE '12').ZG8R                       00099100
.ZG8Q               ANOP  ,                                             00099200
&ZMS                SETC  '"ENTRY_COUNT='       *KGPRA* MNOTE           00099300
&ZMS                SETC  '&ZMS.&ENTRY_COUNT"'                          00099400
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00099500
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00099600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00099700
.ZG8R               ANOP  ,                                             00099800
.*----------------------------------------------------------------***   00099900
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00100000
                    AIF   (N'&QUERYLEN LE 1).ZG11A  CK NUM              00100100
&ZMS                SETC  '"QUERYLEN='          *KPOSA* MNOTE           00100200
&ZMS                SETC  '&ZMS.&QUERYLEN"'                             00100300
&ZMS                SETC  '&ZMS "QUERYLEN"'                             00100400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00100500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00100600
.ZG11A              ANOP  ,                                             00100700
.*-------------------------------------------------------------------   00100800
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00100900
&ZXQUERYLEN         SETC  'OUTPUT'    SET IN/OUTPUT                     00101000
&XQUERYLEN          SETC  '&QUERYLEN(1)'        SET XVARIABLE           00101100
                    AIF   (N'&QUERYLEN GT 1).ZG11B  MULTI PARMS         00101200
&XQUERYLEN          SETC  '&QUERYLEN'           SET XVARIABLE           00101300
.ZG11B              AIF   (K'&QUERYLEN(1) GT 0).ZG11C                   00101400
&ZXQUERYLEN         SETC  ''          RESET IN/OUTPUT                   00101500
&ZMS                SETC  ' '         *KRQDA*                           00101600
&ZMS                SETC  '&ZMS "QUERYLEN" KEY AND ITS ARGUMENT'        00101700
                    MNOTE 8,' &ZMS ARE REQUIRED.'                       00101800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00101900
.ZG11C              ANOP  ,                                             00102000
.*-------------------------------------------------------------------   00102100
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00102200
                    AIF   (K'&ZXQUERYLEN LE 0).ZG11R  NOT I/O           00102300
                    AIF   ('&XQUERYLEN'(1,1) NE '(').ZG11R              00102400
&ZCGPR              SETC  '&XQUERYLEN'(2,K'&XQUERYLEN-2)                00102500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                  00102600
                    AIF   (K'&ZCGPR GT 2).ZG11Q                         00102700
                    AIF   ('&ZCGPR' EQ '0').ZG11Q                       00102800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00102900
                    AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME     00103000
.ZG11P              ANOP  ,                                             00103100
                    AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC          00103200
                    AIF   ('&ZCGPR' LT '2').ZG11Q                       00103300
                    AIF   ('&ZCGPR' LE '12').ZG11R                      00103400
.ZG11Q              ANOP  ,                                             00103500
&ZMS                SETC  '"QUERYLEN='          *KGPRA* MNOTE           00103600
&ZMS                SETC  '&ZMS.&QUERYLEN"'                             00103700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00103800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00103900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00104000
.ZG11R              ANOP  ,                                             00104100
.*----------------------------------------------------------------***   00104200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00104300
                    AIF   (N'&RETCODE LE 1).ZG14A  CK NUM               00104400
&ZMS                SETC  '"RETCODE='           *KPOSA* MNOTE           00104500
&ZMS                SETC  '&ZMS.&RETCODE"'                              00104600
&ZMS                SETC  '&ZMS "RETCODE"'                              00104700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00104800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00104900
.ZG14A              ANOP  ,                                             00105000
.*-------------------------------------------------------------------   00105100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00105200
                    AIF   (K'&RETCODE(1) LE 0).ZG14C  NO PARM           00105300
&ZXRETCODE          SETC  'OUTPUT'    SET OUTPUT                        00105400
&XRETCODE           SETC  '&RETCODE(1)'         SET XVARIABLE           00105500
                    AIF   (N'&RETCODE GT 1).ZG14C                       00105600
&XRETCODE           SETC  '&RETCODE'  SET XVARIABLE                     00105700
.ZG14C              ANOP  ,                                             00105800
.*-------------------------------------------------------------------   00105900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00106000
                    AIF   (K'&ZXRETCODE LE 0).ZG14R  NOT I/O            00106100
                    AIF   ('&XRETCODE'(1,1) NE '(').ZG14R               00106200
&ZCGPR              SETC  '&XRETCODE'(2,K'&XRETCODE-2)                  00106300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                  00106400
                    AIF   (K'&ZCGPR GT 2).ZG14Q                         00106500
                    AIF   ('&ZCGPR' EQ '0').ZG14Q                       00106600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00106700
                    AIF   (T'&ZCGPR NE 'N').ZG14Q  INVALID REG NAME     00106800
.ZG14P              ANOP  ,                                             00106900
                    AIF   (T'&ZCGPR NE 'N').ZG14R  NON NUMERIC          00107000
                    AIF   ('&ZCGPR' LT '2').ZG14Q                       00107100
                    AIF   ('&ZCGPR' LE '12').ZG14R                      00107200
.ZG14Q              ANOP  ,                                             00107300
&ZMS                SETC  '"RETCODE='           *KGPRA* MNOTE           00107400
&ZMS                SETC  '&ZMS.&RETCODE"'                              00107500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00107600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00107700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00107800
.ZG14R              ANOP  ,                                             00107900
.*----------------------------------------------------------------***   00108000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00108100
                    AIF   (N'&RSNCODE LE 1).ZG17A  CK NUM               00108200
&ZMS                SETC  '"RSNCODE='           *KPOSA* MNOTE           00108300
&ZMS                SETC  '&ZMS.&RSNCODE"'                              00108400
&ZMS                SETC  '&ZMS "RSNCODE"'                              00108500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00108600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00108700
.ZG17A              ANOP  ,                                             00108800
.*-------------------------------------------------------------------   00108900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00109000
                    AIF   (K'&RSNCODE(1) LE 0).ZG17C  NO PARM           00109100
&ZXRSNCODE          SETC  'OUTPUT'    SET OUTPUT                        00109200
&XRSNCODE           SETC  '&RSNCODE(1)'         SET XVARIABLE           00109300
                    AIF   (N'&RSNCODE GT 1).ZG17C                       00109400
&XRSNCODE           SETC  '&RSNCODE'  SET XVARIABLE                     00109500
.ZG17C              ANOP  ,                                             00109600
.*-------------------------------------------------------------------   00109700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00109800
                    AIF   (K'&ZXRSNCODE LE 0).ZG17R  NOT I/O            00109900
                    AIF   ('&XRSNCODE'(1,1) NE '(').ZG17R               00110000
&ZCGPR              SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                  00110100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG17P                  00110200
                    AIF   (K'&ZCGPR GT 2).ZG17Q                         00110300
                    AIF   ('&ZCGPR' EQ '0').ZG17Q                       00110400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00110500
                    AIF   (T'&ZCGPR NE 'N').ZG17Q  INVALID REG NAME     00110600
.ZG17P              ANOP  ,                                             00110700
                    AIF   (T'&ZCGPR NE 'N').ZG17R  NON NUMERIC          00110800
                    AIF   ('&ZCGPR' LT '2').ZG17Q                       00110900
                    AIF   ('&ZCGPR' LE '12').ZG17R                      00111000
.ZG17Q              ANOP  ,                                             00111100
&ZMS                SETC  '"RSNCODE='           *KGPRA* MNOTE           00111200
&ZMS                SETC  '&ZMS.&RSNCODE"'                              00111300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00111400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00111500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00111600
.ZG17R              ANOP  ,                                             00111700
.******************************************************************     00111800
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00111900
.******************************************************************     00112000
                    ACTR  10000                                         00112100
.*----------------------------------------------------------------***   00112200
.***AH.P02 EXTRA POSITIONALS                                            00112300
                    AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS          00112400
                    AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL          00112500
                    AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL      00112600
                    AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL       00112700
.ZGLISTX1           ANOP  ,                                             00112800
&ZCVAL              SETC  ''          ERROR FIELD                       00112900
&ZAWRK              SETA  0           POSITIONAL NUMBER                 00113000
.ZGLIST2            ANOP  ,                                             00113100
&ZAWRK              SETA  &ZAWRK+1    NEXT POSITIONAL                   00113200
                    AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE          00113300
&ZCVAL              SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA               00113400
                    AGO   .ZGLIST2                                      00113500
.*                                                                      00113600
.ZGLIST3            ANOP  ,                                             00113700
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA            00113800
&ZMS                SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE      00113900
&ZMS                SETC  '&ZMS "&ZCVAL"'                               00114000
&ZMS                SETC  '&ZMS CANNOT BE USED.'                        00114100
&ZMS                SETC  '&ZMS NO POSITIONAL ARGUMENTS'                00114200
                    MNOTE 8,' &ZMS ARE ALLOWED.'                        00114300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00114400
.ZGLISTX            ANOP  ,                                             00114500
&ZASYSLNDX          SETA  0                                             00114600
.*-------------------------------------------------------------------   00114700
.***AG.MF04 MF=(SLE)                                                    00114800
.ZGMFX              ANOP  ,           END OF FULL SYNTAX CHECK          00114900
.*******************************************************************    00115000
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00115100
.*******************************************************************    00115200
                    AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED          00115300
.*******************************************************************    00115400
.***AE.01  START OF IWMSRDNS MACRO CODE                                 00115500
.*******************************************************************    00115600
                    LCLC  &M0M0001                 NAME                 00115700
&M0M0001            SETC  '&XLABEL'                SET NAME             00115800
                    AIF   (K'&XLABEL NE 0).XLAB2                        00115900
&M0M0001            SETC  'M00M&SYSNDX'            DEFAULT NAME         00116000
.*                                                                      00116100
.XLAB2              ANOP  ,                                             00116200
                    AIF   ('&XMF' EQ 'L').XLAB3                         00116300
&M0M0001 DS    0H                             IWMSRDNS-0                00116400
.XLAB3              ANOP  ,                                             00116500
.*******************************************************************    00116600
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00116700
.*******************************************************************    00116800
              PUSH  PRINT                                               00116900
                    AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON    00117000
                    PRINT OFF         ++ PR01                           00117100
                    AGO   .ZPRNTXX                                      00117200
.ZPRINTX            PRINT ON                                            00117300
.ZPRNTXX            ANOP  ,                                             00117400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00117500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00117600
.********************************************************************   00117700
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00117800
.********************************************************************   00117900
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00118000
                      LCLA  &ZOPN1         INVOCATION INDEX             00118100
                      LCLC  &ZOPL(4095)    LABEL                        00118200
                      LCLC  &ZOPO(4095)    OPERATION                    00118300
                      LCLC  &ZOPV(4095)    VALUE                        00118400
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00118500
.*                                                                      00118600
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00118700
.******************************************************************     00118800
.***AL.L10 IWMSRDNS FMT=LIST MF=S|L PARAMETERS                          00118900
.******************************************************************     00119000
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00119100
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00119200
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00119300
&XMFATTR              SETC  '0D'                                        00119400
.*                                                                      00119500
&ZOPN                 SETA  &ZOPN+1                                     00119600
&ZOPL(&ZOPN)          SETC  ' '                                         00119700
&ZOPO(&ZOPN)          SETC  'B'                                         00119800
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00119900
&ZOPD(&ZOPN)          SETC  '++ IWMSRDNS ARG PARMS'                     00120000
.*                                                                      00120100
&ZOPN                 SETA  &ZOPN+1                                     00120200
&ZOPL(&ZOPN)          SETC  ' '                                         00120300
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00120400
&ZOPV(&ZOPN)          SETC  '1'                                         00120500
&ZOPD(&ZOPN)          SETC  ' '                                         00120600
.*                                                                      00120700
.ZLMFSL2              ANOP  ,                                           00120800
.*-------------------------------------------------------------------   00120900
.***AM.L00  IWMSRDNS FMT=LIST name                                      00121000
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00121100
&ZOPN                 SETA &ZOPN+1                                      00121200
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00121300
&ZOPO(&ZOPN)          SETC 'EQU'                                        00121400
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00121500
&ZOPD(&ZOPN)          SETC '++ IWMSRDNS NAME'                           00121600
.ZLMFSL2M             ANOP  ,                                           00121700
.*-------------------------------------------------------------------   00121800
.***AM.L01  IWMSRDNS FMT=LIST PARAMETERS                                00121900
&ZOPN                 SETA &ZOPN+1                                      00122000
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00122100
&ZOPO(&ZOPN)          SETC 'DS'                                         00122200
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00122300
&ZOPD(&ZOPN)          SETC '++ IWMSRDNS PARM LIST'                      00122400
.*-------------------------------------------------------------------   00122500
.***AM.L02 XVERSION XL1                                                 00122600
&ZOPN                 SETA &ZOPN+1                                      00122700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00122800
&ZOPO(&ZOPN)          SETC 'DS'                                         00122900
&ZOPV(&ZOPN)          SETC 'XL1'                                        00123000
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00123100
.*-------------------------------------------------------------------   00123200
.***AM.L09  XRSV001 CL1                                                 00123300
&ZOPN                 SETA &ZOPN+1                                      00123400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV001'                          00123500
&ZOPO(&ZOPN)          SETC 'DS'                                         00123600
&ZOPV(&ZOPN)          SETC 'CL1'                                        00123700
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV001'                       00123800
.*-------------------------------------------------------------------   00123900
.***AM.L09  XPLISTLEN XL2                                               00124000
&ZOPN                 SETA &ZOPN+1                                      00124100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00124200
&ZOPO(&ZOPN)          SETC 'DS'                                         00124300
&ZOPV(&ZOPN)          SETC 'XL2'                                        00124400
&ZOPD(&ZOPN)          SETC '++ INPUT  XPLISTLEN'                        00124500
.*-------------------------------------------------------------------   00124600
.***AM.L09  XLOCATION_NAMES A                                           00124700
&ZOPN                 SETA &ZOPN+1                                      00124800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLOCATION_NAMES'                  00124900
&ZOPO(&ZOPN)          SETC 'DS'                                         00125000
&ZOPV(&ZOPN)          SETC 'A'                                          00125100
&ZOPD(&ZOPN)          SETC '++ &ZXLOCATION_NAMES  XLOCATION_NAMES'      00125200
.*-------------------------------------------------------------------   00125300
.***AM.L09  XANSLEN F                                                   00125400
&ZOPN                 SETA &ZOPN+1                                      00125500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSLEN'                          00125600
&ZOPO(&ZOPN)          SETC 'DS'                                         00125700
&ZOPV(&ZOPN)          SETC 'F'                                          00125800
&ZOPD(&ZOPN)          SETC '++ &ZXANSLEN  XANSLEN'                      00125900
.*-------------------------------------------------------------------   00126000
.***AM.L09  XQUERYLEN F                                                 00126100
&ZOPN                 SETA &ZOPN+1                                      00126200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XQUERYLEN'                        00126300
&ZOPO(&ZOPN)          SETC 'DS'                                         00126400
&ZOPV(&ZOPN)          SETC 'F'                                          00126500
&ZOPD(&ZOPN)          SETC '++ &ZXQUERYLEN  XQUERYLEN'                  00126600
.*-------------------------------------------------------------------   00126700
.***AM.L09  XENTRY_COUNT F                                              00126800
&ZOPN                 SETA &ZOPN+1                                      00126900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENTRY_COUNT'                     00127000
&ZOPO(&ZOPN)          SETC 'DS'                                         00127100
&ZOPV(&ZOPN)          SETC 'F'                                          00127200
&ZOPD(&ZOPN)          SETC '++ &ZXENTRY_COUNT  XENTRY_COUNT'            00127300
.*-------------------------------------------------------------------   00127400
.***AM.L10 END OF IWMSRDNS LIST PARAMETERS                              00127500
&ZOPN                 SETA &ZOPN+1                                      00127600
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00127700
&ZOPO(&ZOPN)          SETC 'EQU'                                        00127800
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00127900
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00128000
.*                                                                      00128100
&ZOPN                 SETA &ZOPN+1                                      00128200
&ZOPL(&ZOPN)          SETC ' '                                          00128300
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00128400
&ZOPV(&ZOPN)          SETC '1'                                          00128500
&ZOPD(&ZOPN)          SETC ' '                                          00128600
.*-------------------------------------------------------------------   00128700
.***AL.L12 IWMSRDNS FMT=LIST MF=S|L PARAMETERS                          00128800
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00128900
.*                                                                      00129000
&ZOPN                 SETA  &ZOPN+1                                     00129100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00129200
&ZOPO(&ZOPN)          SETC  'DC'                                        00129300
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00129400
&ZOPD(&ZOPN)          SETC  '++ IWMSRDNS ARG PARMS'                     00129500
.*                                                                      00129600
.ZLMFSLX              ANOP  ,                                           00129700
.*-------------------------------------------------------------------   00129800
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00129900
&ZPLLEN               SETA 20                                           00130000
.*                                                                      00130100
.******************************************************************     00130200
.***AI.L01 IWMSRDNS FMT=LIST FILL IN PARAMETER AREA                     00130300
.******************************************************************     00130400
                      ACTR  10000                                       00130500
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00130600
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00130700
&ZCVAL                SETC  'LAE'          XAX MODE                     00130800
.ZIMFXA               ANOP ,                                            00130900
.*                                                                      00131000
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00131100
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00131200
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00131300
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00131400
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00131500
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00131600
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00131700
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00131800
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00131900
&ZOPN                 SETA  &ZOPN+1                                     00132000
&ZOPL(&ZOPN)          SETC  ' '                                         00132100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00132200
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00132300
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00132400
                      AGO   .ZIMFNX                                     00132500
.*                                                                      00132600
.ZIMFN2               ANOP ,                                            00132700
&ZOPN                 SETA  &ZOPN+1                                     00132800
&ZOPL(&ZOPN)          SETC  ' '                                         00132900
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00133000
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00133100
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00133200
.ZIMFNX               ANOP ,                                            00133300
.********************************************************************   00133400
.***AI.L02 IWMSRDNS FMT=LIST INITIALIZE PARAMETER AREA                  00133500
.********************************************************************   00133600
.***AI.L03 MF=(SLE)                                                     00133700
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00133800
.*                                                                      00133900
&ZOPN                 SETA  &ZOPN+1                                     00134000
&ZOPL(&ZOPN)          SETC  ' '                                         00134100
&ZOPO(&ZOPN)          SETC  'XC'                                        00134200
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00134300
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00134400
.ZIMFLX               ANOP  ,                                           00134500
.*-------------------------------------------------------------------   00134600
.***AI.L04 XPLISTLEN XL2                                                00134700
&ZOPN                 SETA  &ZOPN+1                                     00134800
&ZOPL(&ZOPN)          SETC  ' '                                         00134900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00135000
&ZOPV(&ZOPN)          SETC  '2(2,1),=AL2(&ZPLLEN)'                      00135100
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00135200
.*-------------------------------------------------------------------   00135300
.***AI.L19  XLOCATION_NAMES A                                           00135400
                      AIF   ('&ZXLOCATION_NAMES' EQ '').ZI4H            00135500
&ZCLNG                SETC  '&XLOCATION_NAMES'                          00135600
&ZCGPR                SETC  '14'                                        00135700
         AIF   ('&XLOCATION_NAMES'(1,1) EQ '(').ZI4F  IN GPR            00135800
.*                                                                      00135900
&ZOPN                 SETA  &ZOPN+1                                     00136000
&ZOPL(&ZOPN)          SETC  ' '                                         00136100
&ZOPO(&ZOPN)          SETC  'LA'                                        00136200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00136300
&ZOPD(&ZOPN)          SETC  '++ &ZXLOCATION_NAMES XLOCATION_NAMES'      00136400
.*                                                                      00136500
                      AGO   .ZI4G                                       00136600
.*                                                                      00136700
.ZI4F                 ANOP  ,                                           00136800
&ZCGPR   SETC  '&XLOCATION_NAMES'(2,K'&XLOCATION_NAMES-2)               00136900
.*                                                                      00137000
.ZI4G                 ANOP  ,                                           00137100
.*                                                                      00137200
&ZOPN                 SETA  &ZOPN+1                                     00137300
&ZOPL(&ZOPN)          SETC  ' '                                         00137400
&ZOPO(&ZOPN)          SETC  'ST'                                        00137500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4(,1)'                              00137600
&ZOPD(&ZOPN)          SETC  '++ &ZXLOCATION_NAMES XLOCATION_NAMES'      00137700
.*                                                                      00137800
.ZI4H                 ANOP  ,                                           00137900
.*-------------------------------------------------------------------   00138000
.***AI.L25  XANSLEN F                                                   00138100
                      AIF   ('&ZXANSLEN' EQ '').ZI5E                    00138200
                      AIF   ('&ZXANSLEN' EQ 'OUTPUT').ZI5E              00138300
&ZCGPR                SETC  '&XANSLEN'                                  00138400
.*                                                                      00138500
                      AIF   ('&XANSLEN'(1,1) NE '(').ZI5B               00138600
&ZCGPR   SETC  '0('.'&XANSLEN'(2,K'&XANSLEN-2).')'                      00138700
                      AGO   .ZI5D                                       00138800
.ZI5B                 ANOP  ,                                           00138900
.*                                                                      00139000
&ZC                   SETC  '&XANSLEN'(1,1)                             00139100
                      AIF   (T'&ZC NE 'N').ZI5D                         00139200
&ZC                   SETC  '&XANSLEN'                                  00139300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI5D                00139400
&ZCGPR                SETC  '=FL4''&XANSLEN'''                          00139500
.*                                                                      00139600
.ZI5D                 ANOP  ,                                           00139700
.*                                                                      00139800
&ZOPN                 SETA  &ZOPN+1                                     00139900
&ZOPL(&ZOPN)          SETC  ' '                                         00140000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00140100
&ZOPV(&ZOPN)          SETC  '8(4,1),&ZCGPR'                             00140200
&ZOPD(&ZOPN)          SETC  '++ &ZXANSLEN XANSLEN'                      00140300
.*                                                                      00140400
.ZI5E                 ANOP  ,                                           00140500
.*-------------------------------------------------------------------   00140600
&ZOPN1                SETA &ZOPN                                        00140700
.*******************************************************************    00140800
.***  PROCESS IWMSRDNS OUTPUT PARAMETERS                                00140900
.*******************************************************************    00141000
                      ACTR  10000                                       00141100
.*------------------------------------------------------------------    00141200
.***AO.L02 XQUERYLEN F                                                  00141300
         AIF   ('&ZXQUERYLEN' EQ 'OUTPUT').ZO6A  OUTPUT                 00141400
         AIF   ('&ZXQUERYLEN' NE 'INOUT').ZO6C  INOUT                   00141500
.ZO6A    AIF   ('&XQUERYLEN'(1,1) NE '(').ZO6B  ADDR IN GPR             00141600
&ZCGPR   SETC  '&XQUERYLEN'(2,K'&XQUERYLEN-2)                           00141700
&ZOPN                 SETA  &ZOPN+1                                     00141800
&ZOPL(&ZOPN)          SETC  ' '                                         00141900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00142000
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),12(1)'                         00142100
&ZOPD(&ZOPN)          SETC  '++ XQUERYLEN F'                            00142200
                      AGO   .ZO6C                                       00142300
.*                                                                      00142400
.ZO6B                 ANOP  ,                                           00142500
&ZAWRK   SETA  K'&XQUERYLEN                                             00142600
         AIF   ('&XQUERYLEN'(&ZAWRK,1) NE ')').ZO6G                     00142700
&ZN      SETA  2                                                        00142800
.ZO6H    ANOP                                                           00142900
         AIF   (&ZN GE &ZAWRK).ZO6G                                     00143000
         AIF   ('&XQUERYLEN'(&ZN,1) NE '(').ZO6I                        00143100
&ZC      SETC  '&XQUERYLEN'(1,&ZN).'4'.','                              00143200
&ZC      SETC  '&ZC'.'&XQUERYLEN'(&ZN+1,&ZAWRK-&ZN).',12(1)'            00143300
         AGO   .ZO6J                                                    00143400
.ZO6I    ANOP                                                           00143500
&ZN      SETA  &ZN+1                                                    00143600
         AGO   .ZO6H                                                    00143700
.ZO6G    ANOP                                                           00143800
&ZC      SETC  '&XQUERYLEN.(4),12(1)'                                   00143900
.ZO6J    ANOP                                                           00144000
&ZOPN                 SETA  &ZOPN+1                                     00144100
&ZOPL(&ZOPN)          SETC  ' '                                         00144200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00144300
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00144400
&ZOPD(&ZOPN)          SETC  '++ XQUERYLEN F'                            00144500
.ZO6C                 ANOP  ,                                           00144600
.*------------------------------------------------------------------    00144700
.***AO.L02 XENTRY_COUNT F                                               00144800
         AIF   ('&ZXENTRY_COUNT' EQ 'OUTPUT').ZO7A  OUTPUT              00144900
         AIF   ('&ZXENTRY_COUNT' NE 'INOUT').ZO7C  INOUT                00145000
.ZO7A    AIF   ('&XENTRY_COUNT'(1,1) NE '(').ZO7B  ADDR IN GPR          00145100
&ZCGPR   SETC  '&XENTRY_COUNT'(2,K'&XENTRY_COUNT-2)                     00145200
&ZOPN                 SETA  &ZOPN+1                                     00145300
&ZOPL(&ZOPN)          SETC  ' '                                         00145400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00145500
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),16(1)'                         00145600
&ZOPD(&ZOPN)          SETC  '++ XENTRY_COUNT F'                         00145700
                      AGO   .ZO7C                                       00145800
.*                                                                      00145900
.ZO7B                 ANOP  ,                                           00146000
&ZAWRK   SETA  K'&XENTRY_COUNT                                          00146100
         AIF   ('&XENTRY_COUNT'(&ZAWRK,1) NE ')').ZO7G                  00146200
&ZN      SETA  2                                                        00146300
.ZO7H    ANOP                                                           00146400
         AIF   (&ZN GE &ZAWRK).ZO7G                                     00146500
         AIF   ('&XENTRY_COUNT'(&ZN,1) NE '(').ZO7I                     00146600
&ZC      SETC  '&XENTRY_COUNT'(1,&ZN).'4'.','                           00146700
&ZC      SETC  '&ZC'.'&XENTRY_COUNT'(&ZN+1,&ZAWRK-&ZN).',16(1)'         00146800
         AGO   .ZO7J                                                    00146900
.ZO7I    ANOP                                                           00147000
&ZN      SETA  &ZN+1                                                    00147100
         AGO   .ZO7H                                                    00147200
.ZO7G    ANOP                                                           00147300
&ZC      SETC  '&XENTRY_COUNT.(4),16(1)'                                00147400
.ZO7J    ANOP                                                           00147500
&ZOPN                 SETA  &ZOPN+1                                     00147600
&ZOPL(&ZOPN)          SETC  ' '                                         00147700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00147800
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00147900
&ZOPD(&ZOPN)          SETC  '++ XENTRY_COUNT F'                         00148000
.ZO7C                 ANOP  ,                                           00148100
.*******************************************************************    00148200
.***AO.X02  RETURN CODE PROCESSING                                      00148300
.*******************************************************************    00148400
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00148500
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00148600
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00148700
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00148800
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00148900
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00149000
&ZOPN                 SETA  &ZOPN+1                                     00149100
&ZOPL(&ZOPN)          SETC  ' '                                         00149200
&ZOPO(&ZOPN)          SETC  'ST'                                        00149300
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00149400
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00149500
                      AGO   .ZMRETX                                     00149600
.*                                                                      00149700
.ZMRET2               ANOP  ,                                           00149800
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00149900
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00150000
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00150100
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00150200
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00150300
&ZOPN                 SETA  &ZOPN+1                                     00150400
&ZOPL(&ZOPN)          SETC  ' '                                         00150500
&ZOPO(&ZOPN)          SETC  'LR'                                        00150600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00150700
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00150800
.ZMRETX               ANOP  ,                                           00150900
.*******************************************************************    00151000
.***AO.X03  REASON CODE PROCESSING                                      00151100
.*******************************************************************    00151200
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00151300
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00151400
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00151500
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00151600
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00151700
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00151800
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00151900
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00152000
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00152100
&ZOPN                 SETA  &ZOPN+1                                     00152200
&ZOPL(&ZOPN)          SETC  ' '                                         00152300
&ZOPO(&ZOPN)          SETC  'ST'                                        00152400
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00152500
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00152600
                      AGO   .ZMRSNX                                     00152700
.*                                                                      00152800
.ZMRSN2               ANOP  ,                                           00152900
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00153000
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00153100
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00153200
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00153300
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00153400
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00153500
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00153600
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00153700
&ZOPN                 SETA  &ZOPN+1                                     00153800
&ZOPL(&ZOPN)          SETC  ' '                                         00153900
&ZOPO(&ZOPN)          SETC  'LR'                                        00154000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00154100
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00154200
.ZMRSNX               ANOP  ,                                           00154300
.*******************************************************************    00154400
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00154500
.*******************************************************************    00154600
.ZMFLX                ANOP  ,              MF=L PROCESSING              00154700
.*******************************************************************    00154800
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00154900
.*******************************************************************    00155000
                      ACTR  10000                                       00155100
.*                                                                      00155200
                      LCLA  &ZLC           COLUMN POSITION              00155300
                      LCLA  &ZOPX          LIST TABLE INDEX             00155400
                      LCLC  &ZLL           LABEL                        00155500
                      LCLC  &ZLOP          OPERATION                    00155600
                      LCLC  &ZLV           VALUE                        00155700
                      LCLC  &ZLD           DESCRIPTION                  00155800
.*                                                                      00155900
&ZOPX                 SETA  1                                           00156000
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00156100
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00156200
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00156300
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00156400
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00156500
                      AIF   (K'&ZLD LE 0).ZL5                           00156600
&ZLC                  SETA  35             COMMENT COLUMN               00156700
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00156800
&ZLC                  SETA  33             COMMMENT COLUMN              00156900
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00157000
&ZLV                  SETC  '&ZLV'.' '                                  00157100
                      AGO   .ZL3                                        00157200
.*                                                                      00157300
.ZL4                  ANOP  ,                                           00157400
&ZLV                  SETC  '&ZLV'.' '                                  00157500
.ZL5                  ANOP  ,                                           00157600
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00157700
.*                                                                      00157800
&ZLL     &ZLOP &ZLV                                                     00157900
.*                                                                      00158000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00158100
                      AGO   .ZL2           CONTINUE LOOPING             00158200
.*                                                                      00158300
.ZLX                  ANOP  ,                                           00158400
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00158500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00158600
         L     14,16(0,0)              GET CVT ADDRESS                  00158700
         L     14,772(14,0)            GET SFT ADDRESS                  00158800
         L     14,380(14,0)            GET LX FOR SERVICE ROUTINE       00158900
         LA    15,61                   GET EX FOR SERVICE ROUTINE       00159000
         OR    14,15                   GET PC NUMBER                    00159100
         PC    0(14)                                                    00159200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00159300
.ZLINKX               ANOP  ,                                           00159400
.*******************************************************************    00159500
.***AP.X01  FORMAT GENERATED CODE                                       00159600
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00159700
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00159800
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00159900
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00160000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00160100
                      AIF   (K'&ZLD LE 0).ZL51                          00160200
&ZLC                  SETA  35             COMMENT COLUMN               00160300
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00160400
&ZLC                  SETA  33             COMMENT COLUMN               00160500
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00160600
&ZLV                  SETC  '&ZLV'.' '                                  00160700
                      AGO   .ZL31                                       00160800
.*                                                                      00160900
.ZL41                 ANOP  ,                                           00161000
&ZLV                  SETC  '&ZLV'.' '                                  00161100
.ZL51                 ANOP  ,                                           00161200
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00161300
.*                                                                      00161400
&ZLL     &ZLOP &ZLV                                                     00161500
.*                                                                      00161600
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00161700
                      AGO   .ZL21          CONTINUE LOOPING             00161800
.*                                                                      00161900
.ZLX1                 ANOP  ,                                           00162000
.*******************************************************************    00162100
.***AP.X02  END OF IWMSRDNS MACRO                                       00162200
&ZIWMSRDNS            SETC  'YES'          SET IWMSRDNS USED            00162300
         POP   PRINT                                                    00162400
*                                            IWMSRDNS-0                 00162500
         SPACE 1                                                        00162600
.ZLX2                 ANOP  ,                                           00162700
         MEND                                                           00162800
**********************************************************************/ 00162900
*/**** START OF SPECIFICATIONS **************************************** 00163000
*                                                                     * 00163100
*                                                                     * 00163200
*01* MACRO NAME:  IWMSRDNS                              -03/14/97-<0> * 00163300
*                                                                     * 00163400
*                                                                     * 00163500
*01* DESCRIPTIVE NAME:  Sysplex Routing Location List                 * 00163600
*                                                                     * 00163700
*01* PROPRIETARY STATEMENT:                                           * 00163800
*                                                                     * 00163900
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00164000
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00164100
*     5647-A01 (C) COPYRIGHT IBM CORP. 1997                           * 00164200
*                                                                     * 00164300
* STATUS= JBB6604                                                     * 00164400
*                                                                     * 00164500
*                                                                     * 00164600
*                                                                     * 00164700
*01* FUNCTION:                                                        * 00164800
*       See the IWMSRDNS macro prologue for details.                  * 00164900
*                                                                     * 00165000
*01* INPUT:                                                           * 00165100
*                                                                     * 00165200
*            ?IWMSRDNS     LOCATION_NAMES                             * 00165300
*                                         (xlocation_names)           * 00165400
*                          ANSLEN(xanslen)                            * 00165500
*                         [ENTRY_COUNT(xentry_count)]                 * 00165600
*                          QUERYLEN(xquerylen)                        * 00165700
*                         [RETCODE(xretcode)]                         * 00165800
*                         [RSNCODE(xrsncode)]                         * 00165900
*                         [PLISTVER(xplistver|IMPLIED_VERSION)]     * 00166000
*                        [MF(S)]                                     * 00166100
*                        [MF(L,xmfctrl,xmfattr|BDY(DWORD))]        * 00166200
*                        [MF(E,xmfctrl,COMPLETE)]                  * 00166300
*                                                                     * 00166400
****** END OF SPECIFICATIONS *****************************************/ 00166500
*/*PB.ECHO01 MACRO INVOCATION ECHO-----------------------------------*/ 00166600
*  ANS('@SPACE;') NORESCAN COL(MACLMAR);                                00166700
*  ANS('/* ? IWMSRDNS '||MACLIST||' ')                                  00166800
*      NORESCAN COL(MACLMAR+5);    /* START ECHO */                     00166900
*                                                                       00167000
*  DCL ZELO  FIXED;                                                     00167100
*  DCL ZECOL FIXED;                                                     00167200
*                                                                       00167300
*  ZELO=1;     /* STARTING COLUMN */                                    00167400
*  DO WHILE ZELO<=LENGTH(MACKEYS);  /* PARENTHSIS SCAN */               00167500
*    ZECOL=INDEX(MACKEYS(ZELO:LENGTH(MACKEYS)),')');                    00167600
*    IF ZECOL>0                                                         00167700
*      THEN                                                             00167800
*        DO;   /* PARENTHESIS FOUND */                                  00167900
*          ANS(MACKEYS(ZELO:ZELO+ZECOL-1)||' ')                         00168000
*             NORESCAN COL(MACLMAR+5);                                  00168100
*          ZELO=ZELO+ZECOL;        /* NEXT PORTION */                   00168200
*        END;                                                           00168300
*      ELSE                                                             00168400
*        DO;   /* REMAINING KEYS */                                     00168500
*          ANS(MACKEYS(ZELO:LENGTH(MACKEYS)))                           00168600
*             NORESCAN COL(MACLMAR+5);                                  00168700
*          ZELO=LENGTH(MACKEYS)+1;                                      00168800
*        END;                                                           00168900
*  END;                                                                 00169000
*  ANS(' -03/14/97-0- */')                                              00169100
*      NORESCAN COL(MACLMAR+5);    /* END ECHO */                       00169200
*/********************************************************************/ 00169300
*/*PV.DCL01 MACRO DECLARES AND CODE GENERATION CONTROLS              */ 00169400
*/********************************************************************/ 00169500
*  DCL ZPRINT  EXTERNAL; DEACT ZPRINT; /* YES=PRINT, NO=NO PRINT     */ 00169600
*  DCL ZTEST   EXTERNAL; DEACT ZTEST;  /* YES=TEST, NO=NO TEST       */ 00169700
*  DCL ZSYSTEM EXTERNAL; DEACT ZSYSTEM;/* PCCODE10, MVS, SAK, VM     */ 00169800
*                                                                       00169900
*  DCL   ZIWMSRDNS CHAR EXTERNAL; /* YES=USED AT LEAST ONCE          */ 00170000
*  DEACT ZIWMSRDNS;                                                     00170100
*                                                                       00170200
*  DCL ZMACRET FIXED; DEACT ZMACRET;                                    00170300
*  ZMACRET=0;                   /* MACRO COMPILE RETURN CODE         */ 00170400
*                                                                       00170500
*  DCL ZMS CHAR;   DEACT ZMS;   /* ERROR MESSAGE                     */ 00170600
*  DCL ZCVAL CHAR; DEACT ZCVAL; /* ERROR MESSAGE WORK AREA           */ 00170700
*                                                                       00170800
*  DCL ZI FIXED;  DEACT ZI;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 00170900
*  DCL ZJ FIXED;  DEACT ZJ;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 00171000
*  DCL ZK FIXED;  DEACT ZK;     /* INDEX FOR RANGE COLON (:)         */ 00171100
*  DCL ZL FIXED;  DEACT ZL;     /* INDEX FOR RANGE VALUE CHECKING    */ 00171200
*  DCL ZLO FIXED; DEACT ZLO;    /* LOW RANGE VALUE                   */ 00171300
*  DCL ZHI FIXED; DEACT ZHI;    /* HIGH RANGE VALUE                  */ 00171400
*  DCL ZW CHAR;   DEACT ZW;     /* WORK AREA FOR RANGE VALUE SUBLIST */ 00171500
*  DCL ZN FIXED;  DEACT ZN;     /* NUMERIC WORK VARIABLE             */ 00171600
*  DCL ZC CHAR;   DEACT ZC;     /* CHARACTER WORK VARIABLE           */ 00171700
*  DCL ZMAXINVOCLEN FIXED; DEACT ZMAXINVOCLEN;  /* INVOCATION LENGTH */ 00171800
*  DCL ZPLLEN FIXED; DEACT ZPLLEN;        /* PARAMETER LIST LENGTH   */ 00171900
*                                                                       00172000
*  DCL ZPRMMAX FIXED;           /* MAXIMUM PARM LIST SIZE            */ 00172100
*  DCL ZPRMNUM FIXED;           /* PARAMETER ARRAY INDEX             */ 00172200
*  DCL ZPRM(100);               /* PARAMETER ENTRY                   */ 00172300
*  DCL EHAMAXLEN FIXED EXTERNAL;   /* MAX ILIST SIZE FOR PARM LISTS  */ 00172400
*  DCL EHAREGS CHARACTER EXTERNAL; /* REG DCLS                       */ 00172500
*  DCL EHALIST CHARACTER EXTERNAL; /* STANDARD PARM LIST GENERATION  */ 00172600
*/*******************************************************************/  00172700
*/*PV.XVAR01 DECLARE ALL MACRO PARAMETER VARIABLES                  */  00172800
*/*******************************************************************/  00172900
*  DCL   XLOCATION_NAMES;          /***PV.XVAR03 INPUT NAME */          00173000
*  DEACT XLOCATION_NAMES;          /***PV.XVAR03 INPUT NAME */          00173100
*  DCL   ZXLOCATION_NAMES;         /***INPUT/OUTPUT CONTROL */          00173200
*  DEACT ZXLOCATION_NAMES;         /***INPUT/OUTPUT CONTROL */          00173300
*  DCL XANSLEN;  DEACT XANSLEN;    /***PV.XVAR02 INPUT NAME */          00173400
*  DCL ZXANSLEN; DEACT ZXANSLEN;   /***INPUT/OUTPUT CONTROL */          00173500
*  DCL   XENTRY_COUNT;             /***PV.XVAR03 OUTPUT NAME */         00173600
*  DEACT XENTRY_COUNT;             /***PV.XVAR03 OUTPUT NAME */         00173700
*  DCL   ZXENTRY_COUNT;            /***INPUT/OUTPUT CONTROL */          00173800
*  DEACT ZXENTRY_COUNT;            /***INPUT/OUTPUT CONTROL */          00173900
*  DCL XQUERYLEN;  DEACT XQUERYLEN;  /***PV.XVAR02 OUTPUT NAME */       00174000
*  DCL ZXQUERYLEN; DEACT ZXQUERYLEN;  /***INPUT/OUTPUT CONTROL */       00174100
*  DCL XRETCODE;  DEACT XRETCODE;  /***PV.XVAR02 OUTPUT NAME */         00174200
*  DCL ZXRETCODE; DEACT ZXRETCODE;  /***INPUT/OUTPUT CONTROL */         00174300
*  DCL XRSNCODE;  DEACT XRSNCODE;  /***PV.XVAR02 OUTPUT NAME */         00174400
*  DCL ZXRSNCODE; DEACT ZXRSNCODE;  /***INPUT/OUTPUT CONTROL */         00174500
*  DCL XPLISTVER FIXED;  DEACT XPLISTVER;  /***PV.XVAR02 INPUT VALUE */ 00174600
*  DCL ZXPLISTVER; DEACT ZXPLISTVER;  /***INPUT/OUTPUT CONTROL */       00174700
*  DCL XMF;  DEACT XMF;            /***PV.XVAR02 INPUT VALUE */         00174800
*  DCL ZXMF; DEACT ZXMF;           /***INPUT/OUTPUT CONTROL */          00174900
*  DCL XMFCTRL;  DEACT XMFCTRL;    /***PV.XVAR02 INPUT NAME */          00175000
*  DCL ZXMFCTRL; DEACT ZXMFCTRL;   /***INPUT/OUTPUT CONTROL */          00175100
*  DCL XMFATTR;  DEACT XMFATTR;    /***PV.XVAR02 INPUT VALUE */         00175200
*  DCL ZXMFATTR; DEACT ZXMFATTR;   /***INPUT/OUTPUT CONTROL */          00175300
*  DCL XMFSCK;  DEACT XMFSCK;      /***PV.XVAR02 INPUT VALUE */         00175400
*  DCL ZXMFSCK; DEACT ZXMFSCK;     /***INPUT/OUTPUT CONTROL */          00175500
*/********************************************************************/ 00175600
*/***PC.PLV01  PROCESS PLISTVER                                      */ 00175700
*/********************************************************************/ 00175800
*  IF TRANSLATE(PLISTVER(1)) = 'MAX' THEN                               00175900
*    XPLISTVER=0;                                                       00176000
*  ELSE                                                                 00176100
*    XPLISTVER=0;                                                       00176200
*  IF PLISTVER^=''                                                      00176300
*     & TRANSLATE(PLISTVER(1))^='IMPLIED_VERSION'                       00176400
*     & TRANSLATE(PLISTVER(1))^='MAX'                                   00176500
*    THEN                                                               00176600
*      DO;                                                              00176700
*                                                                       00176800
*        ZCVAL='';                           /* ERROR FLAG */           00176900
*        IF PLISTVER='PLISTVER' | PLISTVER='()'  /*CHECK ENTRY*/        00177000
*          THEN                                                         00177100
*            DO;                                                        00177200
*              ZMS=' 8, THE "PLISTVER" KEY'|| /**KOPTP* MSG*/           00177300
*                  ' MUST CONTAIN ONE'||                                00177400
*                  ' (OR MORE) ARGUMENT(S).';                           00177500
*              ANS MSG('?IWMSRDNS ---> '||ZMS);                         00177600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00177700
*              ZMACRET=8;                    /* MACRO ERROR */          00177800
*              ZCVAL='NO_ARGUMENT';                                     00177900
*            END;                                                       00178000
*        IF NUMBER(PLISTVER)>1               /* CHECK POSITIONALS */    00178100
*          THEN                                                         00178200
*            DO;                                                        00178300
*              ZMS=' 8, "PLISTVER'||         /**KPOSP* MSG*/            00178400
*                  PLISTVER||                                           00178500
*                  '" "PLISTVER"'||                                     00178600
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        00178700
*              ANS MSG('?IWMSRDNS ---> '||ZMS);                         00178800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00178900
*              ZMACRET=8;                    /* MACRO ERROR */          00179000
*            END;                                                       00179100
*                                                                       00179200
*        ZC=PLISTVER(1);                                                00179300
*        DO ZL=1 TO LENGTH(ZC);              /* MUST BE NUMBER */       00179400
*          IF ZC(ZL:ZL)<'0' |                /* MUST BE NUMERIC */      00179500
*             ZC(ZL:ZL)>'9'                  /* MUST BE NUMERIC */      00179600
*            THEN                                                       00179700
*              ZCVAL='NUMERIC';              /* NUMERIC ERROR */        00179800
*        END;                                                           00179900
*        IF ZCVAL=''                                                    00180000
*          THEN                                                         00180100
*            DO;                             /* CHECK RANGE LIMITS */   00180200
*            IF FIXED(PLISTVER(1))>=XPLISTVER                           00180300
*              THEN                                                     00180400
*                XPLISTVER=FIXED(PLISTVER(1));                          00180500
*              ELSE                                                     00180600
*                DO;                                                    00180700
*              ZMS=' 8, PLISTVER='||         /**KVALP* MSG*/            00180800
*                    PLISTVER(1)||                                      00180900
*                  ', BUT PLISTVER OF '||                               00181000
*                    CHAR(XPLISTVER)||                                  00181100
*                  ' IS REQUIRED.';                                     00181200
*              ANS MSG('?IWMSRDNS ---> '||ZMS);                         00181300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00181400
*              ZMACRET=8;                    /* MACRO ERROR */          00181500
*                END;                                                   00181600
*              IF XPLISTVER<0 |              /* LOW LIMIT */            00181700
*                 XPLISTVER>0                /* HIGH LIMIT */           00181800
*                THEN                                                   00181900
*                  ZCVAL='RANGE';            /* RANGE ERROR */          00182000
*            END;                                                       00182100
*        IF ZCVAL^=''                                                   00182200
*          THEN                                                         00182300
*            DO;                             /* RANGE ERROR */          00182400
*              ZXPLISTVER='';                /* RESET IN/OUTPUT */      00182500
*              ZMS=' 8, "PLISTVER '||        /**KRNGP* MSG*/            00182600
*                  PLISTVER||                                           00182700
*                  '" THE RANGE IS "0-0"'||                             00182800
*                  ' FOR ARGUMENT 1.';                                  00182900
*              ANS MSG('?IWMSRDNS ---> '||ZMS);                         00183000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00183100
*              ZMACRET=8;                    /* MACRO ERROR */          00183200
*            END;                                                       00183300
*      END;                                                             00183400
*                                                                       00183500
*/********************************************************************/ 00183600
*/***PG.MF01  PROCESS MF MACRO FORMS                                 */ 00183700
*/********************************************************************/ 00183800
*/*PG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00183900
*  XMF='';                                                              00184000
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00184100
*  IF TRANSLATE(MF(1))                                                  00184200
*              = 'S'                         /* CHECK FOR KEYWORD */    00184300
*    THEN                                                               00184400
*      DO;                                                              00184500
*        XMF='S';                            /* SET XVARIABLE */        00184600
*        IF NUMBER(MF)>1                     /* CHECK POSITIONALS */    00184700
*          THEN                                                         00184800
*            DO;                                                        00184900
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            00185000
*                  MF||                                                 00185100
*                  '" "MF"'||                                           00185200
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        00185300
*              ANS MSG('?IWMSRDNS ---> '||ZMS);                         00185400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00185500
*              ZMACRET=8;                    /* MACRO ERROR */          00185600
*            END;                                                       00185700
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00185800
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     00185900
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00186000
*  IF TRANSLATE(MF(1))                                                  00186100
*              = 'L'                         /* CHECK FOR KEYWORD */    00186200
*    THEN                                                               00186300
*      DO;                                                              00186400
*        XMF='L';                            /* SET XVARIABLE */        00186500
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    00186600
*          THEN                                                         00186700
*            DO;                                                        00186800
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            00186900
*                  MF||                                                 00187000
*                  '" "MF"'||                                           00187100
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       00187200
*              ANS MSG('?IWMSRDNS ---> '||ZMS);                         00187300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00187400
*              ZMACRET=8;                    /* MACRO ERROR */          00187500
*            END;                                                       00187600
*/*PG.KKCTL10 -MF(L) SPECIAL CHECK-----------------------------------*/ 00187700
*        ZMAXINVOCLEN = LENGTH(MF) + 2;                                 00187800
*        IF PLISTVER ^= ''                                              00187900
*          THEN                                                         00188000
*            ZMAXINVOCLEN=ZMAXINVOCLEN + LENGTH(PLISTVER) + 8;          00188100
*        IF LENGTH(MACKEYS) > ZMAXINVOCLEN |                            00188200
*           MACLIST ^= ''                    /* CHECK FOR OTHER PARMS*/ 00188300
*          THEN                                                         00188400
*            DO;                                                        00188500
*              ZMS=' 8, THE "L" FORM OF "MF"'|| /**MFLP* MSG*/          00188600
*                  ' CAN ONLY HAVE'||                                   00188700
*                  ' THE "PLISTVER" KEY'||                              00188800
*                  ' SPECIFIED ON THE INVOCATION.';                     00188900
*              ANS MSG('?IWMSRDNS ---> '||ZMS);                         00189000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00189100
*              ZMACRET=8;                    /* MACRO ERROR */          00189200
*            END;                                                       00189300
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 00189400
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        00189500
*  IF MF(2)=''                               /* CHECK FOR NULL */       00189600
*   THEN                                                                00189700
*    DO;                                     /* KEY IS REQUIRED */      00189800
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      00189900
*        ZMS=' 8, WHEN "L" IS SPECIFIED'||                              00190000
*            ' FOR THE "MF" KEY, POSITIONAL'||                          00190100
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            00190200
*        ANS MSG('?IWMSRDNS ---> '||ZMS);                               00190300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00190400
*        ZMACRET=8;                          /* MACRO ERROR */          00190500
*    END;                                                               00190600
*  ELSE                                                                 00190700
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        00190800
*/*PG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE--------------------*/ 00190900
*  ZXMFATTR='INPUT';                         /* SET IN/OUTPUT */        00191000
*  XMFATTR='BDY(DWORD)';                     /* SET DEFAULT */          00191100
*  IF MF(3)^=''                              /* CHECK FOR NULL */       00191200
*    THEN                                                               00191300
*      XMFATTR=MF(3);                        /* SET XVARIABLE */        00191400
*/*PG.KCK01 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH---------------*/ 00191500
*  IF ZXMFATTR^='' &                         /* NOT IN/OUTPUT */        00191600
*     LENGTH(XMFATTR)>60                                                00191700
*    THEN                                                               00191800
*      DO;                                                              00191900
*        ZXMFATTR='';                        /* RESET IN/OUTPUT */      00192000
*        ZMS=' 8, "MF'||                     /**KLNGP* MSG*/            00192100
*            MF||                                                       00192200
*            '" ARGUMENT 3 EXCEEDS THE MAXIMUM'||                       00192300
*            ' LENGTH OF 60 CHARACTERS. ';                              00192400
*        ANS MSG('?IWMSRDNS ---> '||ZMS);                               00192500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00192600
*        ZMACRET=8;                          /* MACRO ERROR */          00192700
*      END;                                                             00192800
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00192900
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     00193000
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00193100
*  IF TRANSLATE(MF(1))                                                  00193200
*              = 'E'                         /* CHECK FOR KEYWORD */    00193300
*    THEN                                                               00193400
*      DO;                                                              00193500
*        XMF='E';                            /* SET XVARIABLE */        00193600
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    00193700
*          THEN                                                         00193800
*            DO;                                                        00193900
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            00194000
*                  MF||                                                 00194100
*                  '" "MF"'||                                           00194200
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       00194300
*              ANS MSG('?IWMSRDNS ---> '||ZMS);                         00194400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00194500
*              ZMACRET=8;                    /* MACRO ERROR */          00194600
*            END;                                                       00194700
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 00194800
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        00194900
*  IF MF(2)=''                               /* CHECK FOR NULL */       00195000
*   THEN                                                                00195100
*    DO;                                     /* KEY IS REQUIRED */      00195200
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      00195300
*        ZMS=' 8, WHEN "E" IS SPECIFIED'||                              00195400
*            ' FOR THE "MF" KEY, POSITIONAL'||                          00195500
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            00195600
*        ANS MSG('?IWMSRDNS ---> '||ZMS);                               00195700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00195800
*        ZMACRET=8;                          /* MACRO ERROR */          00195900
*    END;                                                               00196000
*  ELSE                                                                 00196100
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        00196200
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 00196300
*  XMFSCK='';                                /* RESET XVARIABLE */      00196400
*  IF TRANSLATE(MF(3))                                                  00196500
*              = 'COMPLETE'                  /* CHECK FOR KEYWORD */    00196600
*    THEN                                                               00196700
*      XMFSCK = 'COMPLETE';                  /* SET XVARIABLE */        00196800
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 00196900
*  ZXMFSCK='INPUT';                          /* SET IN/OUTPUT */        00197000
*  IF XMFSCK=''                              /* CHECK FOR KEYWORD */    00197100
*    THEN                                                               00197200
*      DO;                                   /* KEYWORD NOT ENTERED */  00197300
*        XMFSCK='COMPLETE';                  /* SET DEFAULT */          00197400
*        IF MF(3)^=''                                                   00197500
*          THEN                                                         00197600
*            DO;                                                        00197700
*              ZXMFSCK='';                   /* RESET IN/OUTPUT */      00197800
*              ZMS=' 8, "MF'||               /**KUKWP* MSG*/            00197900
*                  MF||'"'||                                            00198000
*                  ' ARGUMENT 3 IS AN UNKNOWN KEYWORD. '||              00198100
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    00198200
*                  ' "COMPLETE".';           /* VALID KEYWORD */        00198300
*              ANS MSG('?IWMSRDNS ---> '||ZMS);                         00198400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00198500
*              ZMACRET=8;                    /* MACRO ERROR */          00198600
*            END;                                                       00198700
*      END;                                                             00198800
*/*PG.KKCTL05 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00198900
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     00199000
*/*PG.KKCTL06 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00199100
*  IF MF='MF'                                                           00199200
*    | MF='()'                               /*CHECK ENTRY*/            00199300
*     THEN                                                              00199400
*       DO;                                                             00199500
*              ZMS=' 8, THE "MF" KEY'||      /**KOPTP* MSG*/            00199600
*                  ' MUST CONTAIN ONE'||                                00199700
*                  ' (OR MORE) ARGUMENT(S).';                           00199800
*              ANS MSG('?IWMSRDNS ---> '||ZMS);                         00199900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00200000
*              ZMACRET=8;                    /* MACRO ERROR */          00200100
*       END;                                                            00200200
*  ELSE                                                                 00200300
*    DO;                                                                00200400
*      ZXMF='INPUT';                         /* SET IN/OUTPUT */        00200500
*      IF XMF=''                             /* CHECK FOR KEYWORD */    00200600
*        THEN                                                           00200700
*          DO;                               /* KEYWORD NOT ENTERED */  00200800
*            XMF='S';                        /* SET DEFAULT */          00200900
*            XMFSCK='COMPLETE';              /* COMPLETE CHECKING */    00201000
*            IF MF(1)^=''                    /* CHECK FOR KEYWORD */    00201100
*              THEN                                                     00201200
*                DO;                                                    00201300
*                  ZXMF='';                  /* RESET IN/OUTPUT */      00201400
*              ZMS=' 8, "MF'||               /**KUKWP* MSG*/            00201500
*                  MF||'"'||                                            00201600
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              00201700
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    00201800
*                  ' "S",'||                 /* VALID KEYWORD */        00201900
*                  ' "L",'||                 /* VALID KEYWORD */        00202000
*                  ' OR "E".';               /* VALID KEYWORD */        00202100
*              ANS MSG('?IWMSRDNS ---> '||ZMS);                         00202200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00202300
*              ZMACRET=8;                    /* MACRO ERROR */          00202400
*                END;                                                   00202500
*          END;                                                         00202600
*    END;                                                               00202700
*/********************************************************************/ 00202800
*/***PD.P01 FULL DEFAULT CHECKING                                    */ 00202900
*/********************************************************************/ 00203000
*  IF PLISTVER=''                                                       00203100
*     | PLISTVER(1)='IMPLIED_VERSION'                                   00203200
*    THEN                                                               00203300
*      ZC='ON';                              /* DEFAULT FLAG ON */      00203400
*    ELSE                                                               00203500
*      ZC='OFF';                             /* DEFAULT FLAG OFF */     00203600
*/********************************************************************/ 00203700
*/***PD.P02 DEFAULT ECHO                                             */ 00203800
*/********************************************************************/ 00203900
*/*PD.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00204000
*  IF XMF^='L'                                                          00204100
*    THEN                                                               00204200
*      DO;                                   /* FULL SYNTAX CHECK */    00204300
*        ANS('/*DEFAULT(S): */')                                        00204400
*           NORESCAN COL(MACLMAR+5);                                    00204500
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 00204600
*  IF PLISTVER=''                                                       00204700
*    THEN                                                               00204800
*      ANS('/* PLISTVER('||                                             00204900
*          CHAR(XPLISTVER)||                                            00205000
*          ')*/')                                                       00205100
*          NORESCAN COL(MACLMAR+5);                                     00205200
*  IF ZC='OFF'                               /*NO DEFAULTS TAKEN */     00205300
*    THEN                                                               00205400
*      ANS('/* NONE. */')                                               00205500
*         NORESCAN COL(MACLMAR+5);                                      00205600
*/*PD.P04 END DEFAULT ECHO ------------------------------------------*/ 00205700
*      END;                                                             00205800
*/********************************************************************/ 00205900
*/*PB.SYSL01 INVOKE SP LEVEL AND SYSTEM STATE MACROS                 */ 00206000
*/********************************************************************/ 00206100
*  DCL SYSSPLV CHAR EXTERNAL; DEACT SYSSPLV;/* SPLEVEL 1,2,3         */ 00206200
*  DCL SYSASCE CHAR EXTERNAL; DEACT SYSASCE;/* STATE ANY P AR */        00206300
*                                                                       00206400
*  IF SYSASCE=''                                                        00206500
*    THEN                                                               00206600
*      DO;                                                              00206700
*        IF SYSSPLV=''                                                  00206800
*          THEN                                                         00206900
*            ANS('?SPLEVEL  (TEST);') COL(MACLMAR);                     00207000
*        IF SYSSPLV^='1' & SYSSPLV^='2'                                 00207100
*          THEN                                                         00207200
*            ANS('?SYSSTATE (TEST);') COL(MACLMAR);                     00207300
*          ELSE                                                         00207400
*            SYSASCE='P';                    /* SYSSTATE DEFAULT*/      00207500
*      END;                                                             00207600
*/********************************************************************/ 00207700
*/***PG.P01 FULL MACRO SYNTAX CHECKING                               */ 00207800
*/********************************************************************/ 00207900
*/*PG.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00208000
*  IF XMF^='L'                                                          00208100
*    THEN                                                               00208200
*      DO;                                   /* FULL SYNTAX CHECK */    00208300
*/*PG.P03 EXCESSIVE POSITIONAL ARGUMENTS-----------------------------*/ 00208400
*  IF NUMBER(MACLIST)>0                      /* CHECK POSITIONALS */    00208500
*    THEN                                                               00208600
*      DO;                                                              00208700
*        ZMS=' 8, POSITIONAL ARGUMENT(S),'|| /**PPOSP* MSG*/            00208800
*            ' "'||MACLIST||'"'||                                       00208900
*            ' CANNOT BE USED.'||                                       00209000
*            ' NO POSITIONAL ARGUMENTS'||                               00209100
*            ' ARE ALLOWED.';                                           00209200
*        ANS MSG('?IWMSRDNS ---> '||ZMS);                               00209300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00209400
*        ZMACRET=8;                          /* MACRO ERROR */          00209500
*      END;                                                             00209600
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00209700
*  IF NUMBER(LOCATION_NAMES)>1               /* CHECK POSITIONALS */    00209800
*    THEN                                                               00209900
*      DO;                                                              00210000
*        ZMS=' 8, "LOCATION_NAMES'||         /**KPOSP* MSG*/            00210100
*            LOCATION_NAMES||                                           00210200
*            '" "LOCATION_NAMES"'||                                     00210300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00210400
*        ANS MSG('?IWMSRDNS ---> '||ZMS);                               00210500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00210600
*        ZMACRET=8;                          /* MACRO ERROR */          00210700
*      END;                                                             00210800
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 00210900
*  XLOCATION_NAMES=LOCATION_NAMES(1);        /* SET XVARIABLE */        00211000
*  IF LOCATION_NAMES(1)=''                   /* CHECK FOR NULL */       00211100
*   THEN                                                                00211200
*    DO;                                     /* KEY IS REQUIRED */      00211300
*        ZXLOCATION_NAMES='';                /* RESET IN/OUTPUT */      00211400
*        ZMS=' 8,  '||                                                  00211500
*            ' "LOCATION_NAMES" KEY AND ITS ARGUMENT'||                 00211600
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            00211700
*        ANS MSG('?IWMSRDNS ---> '||ZMS);                               00211800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00211900
*        ZMACRET=8;                          /* MACRO ERROR */          00212000
*    END;                                                               00212100
*  ELSE                                                                 00212200
*    ZXLOCATION_NAMES='INPUT';               /* SET IN/OUTPUT */        00212300
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00212400
*  IF NUMBER(ANSLEN)>1                       /* CHECK POSITIONALS */    00212500
*    THEN                                                               00212600
*      DO;                                                              00212700
*        ZMS=' 8, "ANSLEN'||                 /**KPOSP* MSG*/            00212800
*            ANSLEN||                                                   00212900
*            '" "ANSLEN"'||                                             00213000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00213100
*        ANS MSG('?IWMSRDNS ---> '||ZMS);                               00213200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00213300
*        ZMACRET=8;                          /* MACRO ERROR */          00213400
*      END;                                                             00213500
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 00213600
*  XANSLEN=ANSLEN(1);                        /* SET XVARIABLE */        00213700
*  IF ANSLEN(1)=''                           /* CHECK FOR NULL */       00213800
*   THEN                                                                00213900
*    DO;                                     /* KEY IS REQUIRED */      00214000
*        ZXANSLEN='';                        /* RESET IN/OUTPUT */      00214100
*        ZMS=' 8,  '||                                                  00214200
*            ' "ANSLEN" KEY AND ITS ARGUMENT'||                         00214300
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            00214400
*        ANS MSG('?IWMSRDNS ---> '||ZMS);                               00214500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00214600
*        ZMACRET=8;                          /* MACRO ERROR */          00214700
*    END;                                                               00214800
*  ELSE                                                                 00214900
*    ZXANSLEN='INPUT';                       /* SET IN/OUTPUT */        00215000
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 00215100
*  IF ENTRY_COUNT='ENTRY_COUNT' | ENTRY_COUNT='()'  /*CHECK ENTRY*/     00215200
*    THEN                                                               00215300
*      DO;                                                              00215400
*        ZMS=' 8, THE "ENTRY_COUNT" KEY'||   /**KOPTP* MSG*/            00215500
*            ' MUST CONTAIN ONE'||                                      00215600
*            ' (OR MORE) ARGUMENT(S).';                                 00215700
*        ANS MSG('?IWMSRDNS ---> '||ZMS);                               00215800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00215900
*        ZMACRET=8;                          /* MACRO ERROR */          00216000
*      END;                                                             00216100
*  IF NUMBER(ENTRY_COUNT)>1                  /* CHECK POSITIONALS */    00216200
*    THEN                                                               00216300
*      DO;                                                              00216400
*        ZMS=' 8, "ENTRY_COUNT'||            /**KPOSP* MSG*/            00216500
*            ENTRY_COUNT||                                              00216600
*            '" "ENTRY_COUNT"'||                                        00216700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00216800
*        ANS MSG('?IWMSRDNS ---> '||ZMS);                               00216900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00217000
*        ZMACRET=8;                          /* MACRO ERROR */          00217100
*      END;                                                             00217200
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 00217300
*  IF ENTRY_COUNT(1)^=''                     /* CHECK FOR NULL */       00217400
*    THEN                                                               00217500
*      DO;                                                              00217600
*        XENTRY_COUNT=ENTRY_COUNT(1);        /* SET XVARIABLE */        00217700
*        ZXENTRY_COUNT='OUTPUT';             /* SET OUTPUT */           00217800
*      END;                                                             00217900
*  ELSE                                                                 00218000
*    IF ZXENTRY_COUNT^=''                                               00218100
*      THEN                                                             00218200
*        ZXENTRY_COUNT='';                   /* RESET OUTPUT */         00218300
*/*PG.KXVAR01 NAME, RQD OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 00218400
*  IF NUMBER(QUERYLEN)>1                     /* CHECK POSITIONALS */    00218500
*    THEN                                                               00218600
*      DO;                                                              00218700
*        ZMS=' 8, "QUERYLEN'||               /**KPOSP* MSG*/            00218800
*            QUERYLEN||                                                 00218900
*            '" "QUERYLEN"'||                                           00219000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00219100
*        ANS MSG('?IWMSRDNS ---> '||ZMS);                               00219200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00219300
*        ZMACRET=8;                          /* MACRO ERROR */          00219400
*      END;                                                             00219500
*/*PG.KXVAR03 NAME, RQD OUTPUT, KEYS -XVARIABLE----------------------*/ 00219600
*  XQUERYLEN=QUERYLEN(1);                    /* SET XVARIABLE */        00219700
*  IF QUERYLEN(1)=''                         /* CHECK FOR NULL */       00219800
*   THEN                                                                00219900
*    DO;                                     /* KEY IS REQUIRED */      00220000
*        ZXQUERYLEN='';                      /* RESET IN/OUTPUT */      00220100
*        ZMS=' 8,  '||                                                  00220200
*            ' "QUERYLEN" KEY AND ITS ARGUMENT'||                       00220300
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            00220400
*        ANS MSG('?IWMSRDNS ---> '||ZMS);                               00220500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00220600
*        ZMACRET=8;                          /* MACRO ERROR */          00220700
*    END;                                                               00220800
*  ELSE                                                                 00220900
*    ZXQUERYLEN='OUTPUT';                    /* SET IN/OUTPUT */        00221000
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 00221100
*  IF RETCODE='RETCODE' | RETCODE='()'       /*CHECK ENTRY*/            00221200
*    THEN                                                               00221300
*      DO;                                                              00221400
*        ZMS=' 8, THE "RETCODE" KEY'||       /**KOPTP* MSG*/            00221500
*            ' MUST CONTAIN ONE'||                                      00221600
*            ' (OR MORE) ARGUMENT(S).';                                 00221700
*        ANS MSG('?IWMSRDNS ---> '||ZMS);                               00221800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00221900
*        ZMACRET=8;                          /* MACRO ERROR */          00222000
*      END;                                                             00222100
*  IF NUMBER(RETCODE)>1                      /* CHECK POSITIONALS */    00222200
*    THEN                                                               00222300
*      DO;                                                              00222400
*        ZMS=' 8, "RETCODE'||                /**KPOSP* MSG*/            00222500
*            RETCODE||                                                  00222600
*            '" "RETCODE"'||                                            00222700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00222800
*        ANS MSG('?IWMSRDNS ---> '||ZMS);                               00222900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00223000
*        ZMACRET=8;                          /* MACRO ERROR */          00223100
*      END;                                                             00223200
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 00223300
*  IF RETCODE(1)^=''                         /* CHECK FOR NULL */       00223400
*    THEN                                                               00223500
*      DO;                                                              00223600
*        XRETCODE=RETCODE(1);                /* SET XVARIABLE */        00223700
*        ZXRETCODE='OUTPUT';                 /* SET OUTPUT */           00223800
*      END;                                                             00223900
*  ELSE                                                                 00224000
*    IF ZXRETCODE^=''                                                   00224100
*      THEN                                                             00224200
*        ZXRETCODE='';                       /* RESET OUTPUT */         00224300
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 00224400
*  IF RSNCODE='RSNCODE' | RSNCODE='()'       /*CHECK ENTRY*/            00224500
*    THEN                                                               00224600
*      DO;                                                              00224700
*        ZMS=' 8, THE "RSNCODE" KEY'||       /**KOPTP* MSG*/            00224800
*            ' MUST CONTAIN ONE'||                                      00224900
*            ' (OR MORE) ARGUMENT(S).';                                 00225000
*        ANS MSG('?IWMSRDNS ---> '||ZMS);                               00225100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00225200
*        ZMACRET=8;                          /* MACRO ERROR */          00225300
*      END;                                                             00225400
*  IF NUMBER(RSNCODE)>1                      /* CHECK POSITIONALS */    00225500
*    THEN                                                               00225600
*      DO;                                                              00225700
*        ZMS=' 8, "RSNCODE'||                /**KPOSP* MSG*/            00225800
*            RSNCODE||                                                  00225900
*            '" "RSNCODE"'||                                            00226000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00226100
*        ANS MSG('?IWMSRDNS ---> '||ZMS);                               00226200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00226300
*        ZMACRET=8;                          /* MACRO ERROR */          00226400
*      END;                                                             00226500
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 00226600
*  IF RSNCODE(1)^=''                         /* CHECK FOR NULL */       00226700
*    THEN                                                               00226800
*      DO;                                                              00226900
*        XRSNCODE=RSNCODE(1);                /* SET XVARIABLE */        00227000
*        ZXRSNCODE='OUTPUT';                 /* SET OUTPUT */           00227100
*      END;                                                             00227200
*  ELSE                                                                 00227300
*    IF ZXRSNCODE^=''                                                   00227400
*      THEN                                                             00227500
*        ZXRSNCODE='';                       /* RESET OUTPUT */         00227600
*/*PG.P04 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00227700
*      END;                                  /* END COMPLETE CHECKING*/ 00227800
*/********************************************************************/ 00227900
*/***PE.MR01 GENERATE CODE IF ZMACRET=0                              */ 00228000
*/********************************************************************/ 00228100
*  IF ZMACRET = 0                                                       00228200
*    THEN                                                               00228300
*      DO;                                                              00228400
*/********************************************************************/ 00228500
*/***PE.PR01 PRINT CONTROLS, DEFAULT IS YES                          */ 00228600
*/********************************************************************/ 00228700
*  ANS(MACCONC||'LIST PUSH NOECHO;') NORESCAN COL(MACLMAR);             00228800
*  IF ZPRINT='NO'                            /* PRINT IS OFF */         00228900
*    THEN                                                               00229000
*      ANS(MACCONC||'LIST OFF NOECHO;') NORESCAN COL(MACLMAR);          00229100
*    ELSE                                                               00229200
*      ANS(MACCONC||'LIST ON NOECHO;')  NORESCAN COL(MACLMAR);          00229300
*/********************************************************************/ 00229400
*/*PE.DO02 OUTER MACRO DO STATEMENT----------------------------------*/ 00229500
*  IF XMF^='L'                                                          00229600
*    THEN                                                               00229700
*      ANS('DO; /* IWMSRDNS-PLISTVER */')                               00229800
*          NORESCAN COL(MACLMAR);                                       00229900
*/*MCMPLS01 RFY 15*/                                                    00230000
*  IF XMF^='L' & ZMACRET = 0                                            00230100
*    THEN                                                               00230200
*      ANS('RFY GPR15F RSTD;') NORESCAN COL(MACLMAR);                   00230300
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00230400
       DCL EHAMAPS CHAR EXTERNAL;                                       00230500
       IF INDEX(EHAMAPS,'XM@')=0 THEN                                   00230600
         EHAMAPS=EHAMAPS||'XM@,';                                       00230700
       IF INDEX(EHAREGS,'00F')=0                                        00230800
         THEN                                                           00230900
           EHAREGS=EHAREGS||'00F'; /* GPR00F                      */    00231000
       IF INDEX(EHAREGS,'15F')=0                                        00231100
         THEN                                                           00231200
           EHAREGS=EHAREGS||'15F'; /* GPR15F                      */    00231300
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00231400
*/*PL.LL01 ?IWMSRDNS MF=L PARAMETER LIST-----------------------------*/ 00231500
*  IF XMF='L'                                                           00231600
*    THEN                                                               00231700
*      DO;                                                              00231800
*        ANS('DCL 1 '||XMFCTRL||' '||XMFATTR||', '||                    00231900
*            '/* ?IWMSRDNS PARM LIST*/')                                00232000
*            NORESCAN COL(MACLMAR);                                     00232100
*/*PL.LL02  XVERSION FIXED(8) INPUT----------------------------------*/ 00232200
*        ANS('2 '||XMFCTRL||                                            00232300
*            '_XVERSION FIXED(8), '||                                   00232400
*            '/* INPUT XVERSION*/')                                     00232500
*            NORESCAN COL(MACLMAR+2);                                   00232600
*/*PL.LL13  XRSV001 CHAR(1) RESERVED---------------------------------*/ 00232700
*        ANS('2 '||XMFCTRL||                                            00232800
*            '_XRSV001 CHAR(1), '||                                     00232900
*            '/* RESERVED */')                                          00233000
*            NORESCAN COL(MACLMAR+2);                                   00233100
*/*PL.LL02  XPLISTLEN FIXED(16) BDY(BYTE) INPUT----------------------*/ 00233200
*        ANS('2 '||XMFCTRL||                                            00233300
*            '_XPLISTLEN FIXED(16) BDY(BYTE), '||                       00233400
*            '/* INPUT XPLISTLEN*/')                                    00233500
*            NORESCAN COL(MACLMAR+2);                                   00233600
*/*PL.LL13  XLOCATION_NAMES PTR(31) INPUT NAME-----------------------*/ 00233700
*        ANS('2 '||XMFCTRL||                                            00233800
*            '_XLOCATION_NAMES PTR(31), '||                             00233900
*            '/* '||ZXLOCATION_NAMES||' XLOCATION_NAMES */')            00234000
*            NORESCAN COL(MACLMAR+2);                                   00234100
*/*PL.LL13  XANSLEN FIXED(31) INPUT----------------------------------*/ 00234200
*        ANS('2 '||XMFCTRL||                                            00234300
*            '_XANSLEN FIXED(31), '||                                   00234400
*            '/* '||ZXANSLEN||' XANSLEN */')                            00234500
*            NORESCAN COL(MACLMAR+2);                                   00234600
*/*PL.LL13  XQUERYLEN FIXED(31) OUTPUT-------------------------------*/ 00234700
*        ANS('2 '||XMFCTRL||                                            00234800
*            '_XQUERYLEN FIXED(31), '||                                 00234900
*            '/* '||ZXQUERYLEN||' XQUERYLEN */')                        00235000
*            NORESCAN COL(MACLMAR+2);                                   00235100
*/*PL.LL13  XENTRY_COUNT FIXED(32) OUTPUT----------------------------*/ 00235200
*        ANS('2 '||XMFCTRL||                                            00235300
*            '_XENTRY_COUNT FIXED(32), '||                              00235400
*            '/* '||ZXENTRY_COUNT||' XENTRY_COUNT */')                  00235500
*            NORESCAN COL(MACLMAR+2);                                   00235600
*/*PL.LL18 ----------------------------------------------------------*/ 00235700
*        ANS('2 * CHAR(0);')                                            00235800
*            NORESCAN COL(MACLMAR+2);                                   00235900
*/*PL.LL17 END OF MF=L PARAMETER LIST--------------------------------*/ 00236000
*      END;                                                             00236100
*/*PL.L01 MACRO WORK VARIABLES---------------------------------------*/ 00236200
*  DCL ZPRMLINE CHAR;          /* ZPRM ARRAY ENTRY ACCUMULATOR      */  00236300
*  DEACT ZPRMLINE;                                                      00236400
*  DCL ZNDX CHAR;              /* UNIQUE LIST STRUCTURE NAME        */  00236500
*  DEACT ZNDX;                                                          00236600
*  ZNDX=MACINDEX;              /* MACINDEX                          */  00236700
*  DCL XVERSION CHAR;                                                   00236800
*  DEACT XVERSION;                                                      00236900
*/*PL.L02 ?IWMSRDNS PARAMETER LIST-----------------------------------*/ 00237000
*  IF XMF^='L'                                                          00237100
*    THEN                                                               00237200
*      DO;                                                              00237300
*/*PL.L03 ?IWMSRDNS PARAMETER LIST-----------------------------------*/ 00237400
*        IF XMF='S'                                                     00237500
*          THEN                                                         00237600
*            XMFCTRL='#ZPLIST';                                         00237700
*/*PL.L04 ?IWMSRDNS PARAMETER LIST-----------------------------------*/ 00237800
*        ZPRMLINE='DCL 1 #Z'||ZNDX||' DEF('||XMFCTRL||'),'||            00237900
*                 ' /* ?IWMSRDNS PARM LIST*/';                          00238000
*/*PL.L05  XVERSION FIXED(8) INPUT-----------------------------------*/ 00238100
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00238200
*                 '_XVERSION FIXED(8), '||                              00238300
*                 '/* INPUT XVERSION*/';                                00238400
*/*PL.L08  XRSV001 CHAR(1) RESERVED----------------------------------*/ 00238500
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00238600
*                 '_XRSV001 CHAR(1), '||                                00238700
*                 '/* RESERVED */';                                     00238800
*/*PL.L05  XPLISTLEN FIXED(16) BDY(BYTE) INPUT-----------------------*/ 00238900
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00239000
*                 '_XPLISTLEN FIXED(16) BDY(BYTE), '||                  00239100
*                 '/* INPUT XPLISTLEN*/';                               00239200
*/*PL.L08  XLOCATION_NAMES PTR(31) INPUT NAME------------------------*/ 00239300
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00239400
*                 '_XLOCATION_NAMES PTR(31), '||                        00239500
*                 '/* '||ZXLOCATION_NAMES||' XLOCATION_NAMES */';       00239600
*/*PL.L08  XANSLEN FIXED(31) INPUT-----------------------------------*/ 00239700
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00239800
*                 '_XANSLEN FIXED(31), '||                              00239900
*                 '/* '||ZXANSLEN||' XANSLEN */';                       00240000
*/*PL.L08  XQUERYLEN FIXED(31) OUTPUT--------------------------------*/ 00240100
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00240200
*                 '_XQUERYLEN FIXED(31), '||                            00240300
*                 '/* '||ZXQUERYLEN||' XQUERYLEN */';                   00240400
*/*PL.L08  XENTRY_COUNT FIXED(32) OUTPUT-----------------------------*/ 00240500
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00240600
*                 '_XENTRY_COUNT FIXED(32), '||                         00240700
*                 '/* '||ZXENTRY_COUNT||' XENTRY_COUNT */';             00240800
*/*PL.L11 CONSTANT TO ENSURE THAT LIST FORM IS LONG ENOUGH ----------*/ 00240900
*        ZPRMNUM=ZPRMNUM+1;                                             00241000
*        ZPRM(ZPRMNUM)=ZPRMLINE||' 2 * CHAR(0);';                       00241100
*        IF XPLISTVER^=0                                                00241200
*           & XMF^='S'                                                  00241300
*          THEN                                                         00241400
*            DO;                                                        00241500
*              ZPRMNUM=ZPRMNUM+1;                                       00241600
*              ZPRM(ZPRMNUM)=                                           00241700
*               'DCL #Z'||ZNDX||'_LENCHECK FIXED(32) CONSTANT('||       00241800
*               'LENGTH('||XMFCTRL||')-LENGTH(#Z'||ZNDX||'));'||        00241900
*               '/* CONSTANT TO ENSURE THAT THE LIST FORM'||            00242000
*               ' IS LONG ENOUGH */';                                   00242100
*            END;                                                       00242200
*/*PL.L12 PARAMETER LIST SIZE----------------------------------------*/ 00242300
*        ZPLLEN=20;                                                     00242400
*        IF ZPRMMAX<ZPLLEN                                              00242500
*           & XMF^='E'                                                  00242600
*          THEN                                                         00242700
*            ZPRMMAX=ZPLLEN;                                            00242800
*/*PL.L13 -----------------------------------------------------------*/ 00242900
*      END;                                                             00243000
*/*PI.L01 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00243100
*  IF XMF^='L'                                                          00243200
*    THEN                                                               00243300
*      DO;                                                              00243400
*        ANS('RFY GPR15F UNRSTD;') NORESCAN COL(MACLMAR);               00243500
*/*PI.L03 CLEAR PARAMETER LIST --------------------------------------*/ 00243600
*            ANS('#Z'||ZNDX||'=''''B;'||                                00243700
*                '/* CLEAR PARAMETER AREA */')                          00243800
*                NORESCAN COL(MACLMAR);                                 00243900
*/*PI.L05C XPLISTLEN FIXED(16)---------------------------------------*/ 00244000
*        ANS('#Z'||ZNDX||'_XPLISTLEN=LENGTH(#Z'||ZNDX||');'||           00244100
*            '/* XPLISTLEN FIXED(16) */')                               00244200
*            NORESCAN COL(MACLMAR);                                     00244300
*/*PI.L23 XLOCATION_NAMES NAME---------------------------------------*/ 00244400
*        IF ZXLOCATION_NAMES^=''                                        00244500
*          THEN                                                         00244600
*            ANS('#Z'||ZNDX||'_XLOCATION_NAMES='||                      00244700
*                'ADDR('||XLOCATION_NAMES||');'||                       00244800
*                '/* XLOCATION_NAMES NAME */')                          00244900
*                NORESCAN COL(MACLMAR);                                 00245000
*/*PI.L17 XANSLEN FIXED(31)------------------------------------------*/ 00245100
*        IF ZXANSLEN='INPUT' |                                          00245200
*           ZXANSLEN='INOUT'                                            00245300
*          THEN                                                         00245400
*            ANS('#Z'||ZNDX||'_XANSLEN='||                              00245500
*                XANSLEN||';'||                                         00245600
*                '/* XANSLEN FIXED(31) */')                             00245700
*                NORESCAN COL(MACLMAR);                                 00245800
*/*PI.L31 INVOKE FUNCTION--------------------------------------------*/ 00245900
*              IF NUMBER(RSNCODE)>0                                     00246000
*                THEN                                                   00246100
*                  ANS('RFY GPR00F RSTD;') NORESCAN COL(MACLMAR);       00246200
*              ANS('RFY GPR01P RSTD;') NORESCAN COL(MACLMAR);           00246300
*              ANS('GPR01P=ADDR(#Z'||ZNDX||');'||                       00246400
*                  '/* PARAMETER LIST */')                              00246500
*                  NORESCAN COL(MACLMAR);                               00246600
*              IF SYSASCE^='P'                                          00246700
*                THEN                                                   00246800
*                  ANS('SAR(GPR01P,ALET(#Z'||ZNDX||'));'||              00246900
*                      '/* PARAMETER LIST AR */')                       00247000
*                      NORESCAN COL(MACLMAR);                           00247100
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00247200
         ANS('PC(XM@(96)|61);') SKIP COL(5);                            00247300
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00247400
*              ANS('RFY GPR01P UNRSTD;') NORESCAN COL(MACLMAR);         00247500
*              IF NUMBER(RETCODE)>0                                     00247600
*                THEN                                                   00247700
*                  ANS('RFY GPR15F RSTD;') NORESCAN COL(MACLMAR);       00247800
*/*PO.L03 XQUERYLEN FIXED(31)----------------------------------------*/ 00247900
*              IF ZXQUERYLEN='OUTPUT' |                                 00248000
*                 ZXQUERYLEN='INOUT'                                    00248100
*                THEN                                                   00248200
*                  ANS(XQUERYLEN||                                      00248300
*                      '=#Z'||ZNDX||'_XQUERYLEN;'||                     00248400
*                      '/* XQUERYLEN FIXED(31) */')                     00248500
*                      NORESCAN COL(MACLMAR);                           00248600
*/*PO.L03 XENTRY_COUNT FIXED(32)-------------------------------------*/ 00248700
*              IF ZXENTRY_COUNT='OUTPUT' |                              00248800
*                 ZXENTRY_COUNT='INOUT'                                 00248900
*                THEN                                                   00249000
*                  ANS(XENTRY_COUNT||                                   00249100
*                      '=#Z'||ZNDX||'_XENTRY_COUNT;'||                  00249200
*                      '/* XENTRY_COUNT FIXED(32) */')                  00249300
*                      NORESCAN COL(MACLMAR);                           00249400
*/*PO.L08 XRETCODE FIXED(32) RETURN CODE-----------------------------*/ 00249500
*              IF NUMBER(RETCODE)>0                                     00249600
*                THEN                                                   00249700
*                    ANS(XRETCODE||                                     00249800
*                     '=GPR15F; /* SET RETURN CODE */')                 00249900
*                      NORESCAN COL(MACLMAR);                           00250000
*/*PO.L09 XRSNCODE FIXED(32) REASON CODE-----------------------------*/ 00250100
*              IF NUMBER(RSNCODE)>0                                     00250200
*                THEN                                                   00250300
*                    ANS(XRSNCODE||                                     00250400
*                     '=GPR00F; /* SET REASON CODE */')                 00250500
*                      NORESCAN COL(MACLMAR);                           00250600
*/*PO.L10 REMOVE REGISTER RESTRICTIONS-------------------------------*/ 00250700
*              IF NUMBER(RSNCODE)>0                                     00250800
*                THEN                                                   00250900
*              ANS('RFY GPR00F UNRSTD;') NORESCAN COL(MACLMAR);         00251000
*              IF NUMBER(RETCODE)>0                                     00251100
*                THEN                                                   00251200
*              ANS('RFY GPR15F UNRSTD;') NORESCAN COL(MACLMAR);         00251300
*/*PO.L12 END OF PARAMETER LIST PROCESSING---------------------------*/ 00251400
*      END;                                                             00251500
*/*PO.L13 IWMSRDNS USAGE INDICATOR-----------------------------------*/ 00251600
*  ZIWMSRDNS='YES';                          /* SET IWMSRDNS USED */    00251700
*/*PO.L15 END OF EXECUTABLE IWMSRDNS-PLISTVER MACRO------------------*/ 00251800
*  IF XMF^='L'                                                          00251900
*    THEN                                                               00252000
*      ANS('END; /* IWMSRDNS-PLISTVER */')                              00252100
*          NORESCAN COL(MACLMAR);                                       00252200
*/*PO.L16 RESTORE PRINT CONTROLS-------------------------------------*/ 00252300
*  ANS(MACCONC||'LIST POP NOECHO;') NORESCAN COL(MACLMAR);              00252400
*/*PO.L17 END OF IWMSRDNS MACRO--------------------------------------*/ 00252500
*  ANS(MACCONC||'SPACE;') NORESCAN COL(MACLMAR);                        00252600
*  ANS(' ') NORESCAN COL(MACLMAR);                                      00252700
*/*******************************************************************/  00252800
*/*  PO.L18 END OF CODE TO BE BYPASSED WHEN ZMACRET ^= 0            */  00252900
*/*******************************************************************/  00253000
*      END;                                                             00253100
*/*******************************************************************/  00253200
*/*  MVS ONLY     -CHECK IF AMG PARM LISTS ARE PRESENT              */  00253300
*/*               -ROUND MAX AMG PARM LIST TO DOUBLEWORD MULTIPLES  */  00253400
*/*******************************************************************/  00253500
*  IF ZPRMNUM>0                   /* NUMBER OF AMG PARM LIST ENTRIES*/  00253600
*    THEN                                                               00253700
*      DO;                                                              00253800
*        ZPRMMAX=((ZPRMMAX+7)/8)*8; /* ROUND PARM LIST SIZE UP TO       00253900
*                                      DOUBLEWORD MULTIPLES        */   00254000
*/*******************************************************************/  00254100
*/*  MVS -GENERATE PARM LIST DCL TO OVERLAY ?EPILOG'S ILIST AREA    */  00254200
*/*******************************************************************/  00254300
*        IF XMF ^= 'M' & XMF ^= 'E'                                     00254400
*          THEN                                                         00254500
*            DO;                                                        00254600
*              IF INDEX(EHALIST,',AMG,')=0 /* HAS DECLARE BEEN DONE?*/  00254700
*                THEN                                                   00254800
*                  DO;                                                  00254900
*                    ANS('?EPILOG                                       00255000
*                        STRING(''DCL #ZPLIST DEF(ILIST);'');');        00255100
*                    EHALIST=EHALIST||',AMG,';                          00255200
*                  END;                                                 00255300
*            END;                                                       00255400
*/*******************************************************************/  00255500
*/*  MVS  -EXTRACT PARM LISTS FROM AMG GLOBAL MACRO ARRAYS          */  00255600
*/*******************************************************************/  00255700
*        IF XMF ^= 'M' & XMF ^= 'E'                                     00255800
*          THEN                                                         00255900
*            DO;                                                        00256000
*              IF ZPRMMAX>EHAMAXLEN                                     00256100
*                THEN                                                   00256200
*                  EHAMAXLEN=ZPRMMAX; /* SET MAX PARM LIST SIZE     */  00256300
*            END;                                                       00256400
*        DO ZI=1 TO ZPRMNUM; /* EXTRACT AMG PARM LISTS               */ 00256500
*          ANS('?EPILOG STRING('''||ZPRM(ZI)||''');')                   00256600
*              COL(MACLMAR);                                            00256700
*        END;                                                           00256800
*      END;                                                             00256900
*/*-----------------------------------------------------------------*/  00257000
*/*  MVS  -ENSURE THAT GPRS NEEDED BY AMG MACROS WILL BE PROVIDED   */  00257100
*/*        BY ?EPILOG                                               */  00257200
*/*-----------------------------------------------------------------*/  00257300
*        IF INDEX(EHAREGS,'01P')=0                                      00257400
*          THEN                                                         00257500
*            EHAREGS=EHAREGS||'01P'; /* GPR01P                      */  00257600
*        IF INDEX(EHAREGS,'00F')=0                                      00257700
*          & NUMBER(RSNCODE)>0                                          00257800
*          THEN                                                         00257900
*            EHAREGS=EHAREGS||'00F'; /* GPR00F                      */  00258000
*        IF INDEX(EHAREGS,'15F')=0                                      00258100
*          THEN                                                         00258200
*            EHAREGS=EHAREGS||'15F'; /* GPR15F                      */  00258300
*  RETURN CODE(ZMACRET);                                                00258400
*%END IWMSRDNS;                                                         00258500
