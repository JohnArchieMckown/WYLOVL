*/***  Start of Specifications for BLSQNTKP  *************************/ 00050000
*/*                                                                  */ 00100000
*/* $MAC(BLSQNTKP) COMP(SC132) PROD(JBB4422): Name/Token Service     */ 00150000
*/*                                          Parameter List          */ 00200000
*/*                                                                  */ 00207100
*/*   Acronym:    NTKP                                               */ 00214200
*/*   Descriptive Name: Name/Token Service Parameter List            */ 00221300
*/*   Macro Name: BLSQNTKP                                           */ 00228400
*/*   Dsect Name: Caller supplied                                    */ 00235500
*/*   Component:  (SC132) - IPCS                                     */ 00242600
*/*                                                                  */ 00250000
*/*    PROPRIETARY STATEMENT =                                       */ 00283300
*/*                                                                  */ 00299900
*/*    LICENSED MATERIALS - PROPERTY OF IBM                          */ 00316600
*/*    THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                   */ 00349900
*/*    5695-047 (C) COPYRIGHT IBM CORP. 1991                         */ 00383200
*/*    SEE COPYRIGHT INSTRUCTIONS.                                   */ 00416500
*/*                                                                  */ 00449800
*/*    STATUS = JBB4422                                              */ 00483100
*/*                                                                  */ 00516400
*/*                                                                  */ 00550000
*/* FUNCTION= BLSQNTKP contains the mapping of the parameters used   */ 00600000
*/* for communication between IPCS exits and the Name/Token service  */ 00650000
*/* exit.                                                            */ 00700000
*/*                                                                  */ 00750000
*/*   Eye Catcher: NTKP                                              */ 00775000
*/*   Offset:      0                                                 */ 00800000
*/*   Length:      4                                                 */ 00825000
*/*                                                                  */ 00850000
*/*   STORAGE ATTRIBUTES:                                            */ 00856200
*/*   Main Storage:                                                  */ 00862400
*/*   Virtual Storage:                                               */ 00868600
*/*   Auxiliary Storage:                                             */ 00874800
*/*   Subpool:                                                       */ 00881000
*/*   Key:                                                           */ 00887200
*/*   Data Space:                                                    */ 00893400
*/*   Residency:                                                     */ 00899600
*/*   Size:       128 bytes                                          */ 00905800
*/*                                                                  */ 00912000
*/*   Created by:    Caller                                          */ 00918200
*/*   Pointed to by:                                                 */ 00924400
*/*   Serialization:                                                 */ 00930600
*/*                                                                  */ 00936800
*/*    METHOD OF ACCESS:                                             */ 00943000
*/*                                                                  */ 00950000
*/*     PLS = The macro can expand in a LIST or SUBLIST format.      */ 01000000
*/*                                                                  */ 01050000
*/*       Set macro variable EHBENDCHAR to comma or semicolon.       */ 01100000
*/*       Defaults to semicolon for LIST form and must be set        */ 01150000
*/*       for the SUBLIST form.  For example:                        */ 01200000
*/*                                                                  */ 01250000
*/*         %DCL EHBENDCHAR EXTERNAL CHAR                            */ 01300000
*/*         %EHBENDCHAR=','                                          */ 01350000
*/*                                                                  */ 01400000
*/*      LIST FORM    = ?BLSQNTKP MF(LIST,PREFIX,STORCLASS)          */ 01450000
*/*                                                                  */ 01500000
*/*      SUBLIST FORM = ?BLSQNTKP MF(SUBLIST,PREFIX,STORCLASS,LEVEL) */ 01550000
*/*                                                                  */ 01600000
*/*        MF                                                        */ 01650000
*/*       PARM  Meaning                                              */ 01700000
*/*       ----  ---------------------------------------------------  */ 01750000
*/*                                                                  */ 01800000
*/*        1    LIST or L for LIST form                              */ 01850000
*/*             SUBLIST or S for SUBLIST form                        */ 01900000
*/*                                                                  */ 01950000
*/*        2    PREFIX is from 1 to 4 alpha-numeric starting with    */ 02000000
*/*             an alpha character. e.g. 'NTKP'                      */ 02050000
*/*                                                                  */ 02100000
*/*        3    STORAGE CLASS and initialization attribute           */ 02150000
*/*             COMPLETE keyword will cause initial values to        */ 02200000
*/*             be generated.  Default storage class with COMPLETE   */ 02250000
*/*             is STATIC LOCAL.  Can specify BASED, DEFINED ...     */ 02300000
*/*                                                                  */ 02350000
*/*        4    Structure level number to start with.  This can      */ 02400000
*/*             only be specified on the SUBLIST form.               */ 02450000
*/*                                                                  */ 02500000
*/*    ASM = The assembler format takes the form                     */ 02550000
*/*                                                                  */ 02600000
*/*          LABEL  BLSQNTKP DSECT=YES                               */ 02650000
*/*                                NO                                */ 02700000
*/*                                                                  */ 02750000
*/*          The LABEL is used as the prefix for all the             */ 02800000
*/*          field names.  The label cannot exceed 4 characters.     */ 02850000
*/*          For example code 'NTKP   BLSQNTKP DSECT=YES'            */ 02900000
*/*                                                                  */ 02950000
*/*          DSECT=YES will cause a DSECT to be generated.           */ 03000000
*/*                    The initial values will be ignored.           */ 03050000
*/*                                                                  */ 03100000
*/*          DSECT=NO  will cause a set of initialized DCs           */ 03150000
*/*                    to be generated.                              */ 03200000
*/*                                                                  */ 03250000
*/* NOTES =                                                          */ 03300000
*/*   DEPENDENCIES = This macro requires external macro variables    */ 03350000
*/*                  be declared in one of the two following ways:   */ 03400000
*/*                                                                  */ 03450000
*/*                  1. Use the BLSRPROC macro to generate the       */ 03500000
*/*                     PROC statement and macro declares.           */ 03550000
*/*                                                                  */ 03600000
*/*                  2. Use the BLSRMAC0 macro to generate only      */ 03650000
*/*                     the declares.                                */ 03700000
*/*                                                                  */ 03750000
*/*   CHARACTER CODE DEPENDENCIES = None                             */ 03800000
*/*   RESTRICTIONS = None                                            */ 03850000
*/*   REGISTER CONVENTIONS = None                                    */ 03900000
*/* ---------------------------------------------------------------- */ 03950000
*/*                                                                  */ 04000000
*/* CHANGE-ACTIVITY=                                                 */ 04050000
*/*                                                                  */ 04100000
*/* $L0=TOKEN    JBB4422  910308  PDE4  : Name/Token Service         */ 04150000
*/*                                       Parameter List.            */ 04200000
*/*    =SHOWHDR  HBB4430  920214  PDKV  : Add SHOWHDR info to prolog */ 04205000
*/*                                                                  */ 04210000
*/*   PTMs = none                                                    */ 04225000
*/*                                                                  */ 04240000
*/*   Maintenance =                                                  */ 04242500
*/* $01= OY45304,JBB4422,910701,PDE4: Flag bits rearranged.  OY45304 */ 04245000
*/*      fix is also fix for PTM PKI0354.                            */ 04247500
*/*                                                                  */ 04250000
*/* END OF SPECIFICATIONS FOR BLSQNTKP ******************************** 04300000
         MACRO                                                          04350000
&P       BLSQNTKP &DSECT=YES                                            04400000
         IEZBITS ,                Define symbolic bits                  04450000
         AIF   ('&DSECT' EQ 'NO').L010 No DSECT statement               04500000
&P       DSECT ,                  IPCS name service parameter list      04550000
         AGO   .L020              Define structure of record            04600000
.L010    ANOP  ,                  No DSECT statement                    04650000
         DS    0D                 Align on doubleword boundary          04700000
&P       DS    0CL128             IPCS name service parameter list      04750000
.L020    ANOP  ,                  Define structure of record            04800000
&P.000   DS    0C                 Begin BLSQNTKP                        04850000
&P.ID    DS    0CL6               Name/Token service parameter         *04900000
                                  identifier                            04950000
&P.IDC   DC    CL4'NTKP'          NTKP acronym                          05000000
&P.IDL   DC    CL1'1'             NTKP level indicator                  05050000
         DC    CL1' '             Reserved                              05100000
&P.LCODE DC    H'0'               Level code                            05150000
&P.MODN  DC    CL8' '             The name of the module requesting the*05200000
                                  service                               05250000
&P.NAME  DC    CL16' '            The input NAME to be translated       05300000
&P.TCBP  DC    A(0)               The TCB the input NAME is associated *05350000
                                  with                                  05400000
&P.ASID  DC    XL2'00'            The ASID the input NAME is associated*05450000
                                  with                                  05500000
&P.PFLG  DS    0BL2               Processing flags                      05550000
&P.PFL1  DC    BL1'0'             First byte of flags (input)           05600000
&P.FNOT  EQU   X'80'              No output requested                   05650000
*                                 Set by caller, not housekept          05700000
*                                                                       05750000
*                                                                       05800000
&P.PFL2  DC    BL1'0'             Second byte of flags (output)         05850000
&P.NOTF  EQU   X'80'              Requested Name/Token not found        05900000
&P.AUTH  EQU   X'40'              The Name/Token element creator was   *05950000
                                  authorized                            06000000
&P.PRST  EQU   X'20'              The Name/Token element was marked    *06050000
                                  persistent                            06100000
&P.MSTG  EQU   X'10'              Missing storage                       06150000
&P.FLERR EQU   X'08'              Logical error in data                 06200000
&P.RBAD  DC    A(0)               Referenced block address, ASSB/STCB   06250000
&P.TOKN  DC    XL16'00'           The output TOKEN                      06300000
&P.OUTL  DC    F'0'               Length of contents of NTKPOUT field   06350000
&P.OUT   DC    CL40' '            Name/Token service output area        06400000
&P.CASID DC    XL2'00'            The ASID the input NAME is associated*06450000
                                  with, for system level requests       06500000
&P.RSVD  DC    XL26'00'           Reserved                              06550000
&P.999   DS    0C                 End BLSQNTKP                          06600000
&P.TLEV  EQU   1,C'H',2           Task level                            06650000
&P.ALEV  EQU   2,C'H',2           Address space level                   06700000
&P.SLEV  EQU   3,C'H',2           System level                          06750000
         MEND  ,                  End assembler macro BLSQNTKP       */ 06800000
*                                                                       06850000
*%BLSQNTKP:                         /* Name/Token service parameter     06900000
                                       list                          */ 06950000
*   MACRO KEYS(MF);                 /*                               */ 07000000
*/*------------------------------------------------------------------*/ 07050000
*/* Define Macro-Variables                                           */ 07100000
*/*------------------------------------------------------------------*/ 07150000
*                                                                       07200000
*   DECLARE                         /* External macro variables      */ 07250000
*     ELSRNTKP CHARACTER EXTERNAL,  /* BLSQNTKP global data          */ 07300000
*     EHBENDCHAR CHARACTER EXTERNAL, /* Final punctuation            */ 07350000
*     EHBBLRPENDESS CHARACTER EXTERNAL, /* Deferred macro requests   */ 07400000
*                                                                       07450000
*     EHBLVL1  CHARACTER EXTERNAL,  /* First level number            */ 07500000
*     EHBLVL2  CHARACTER EXTERNAL,  /* Second level number           */ 07550000
*     EHBLVL3  CHARACTER EXTERNAL,  /* Third level number            */ 07600000
*     EHBLVL4  CHARACTER EXTERNAL,  /* Fourth level number           */ 07650000
*     EHBMF1   CHARACTER EXTERNAL,  /* Macro form                    */ 07700000
*     EHBMF2   CHARACTER EXTERNAL,  /* Prefix characters             */ 07750000
*     EHBMF3   CHARACTER EXTERNAL,  /* Scope/storage class           */ 07800000
*     EHBMF3A  CHARACTER EXTERNAL,  /* Complete initialization flag  */ 07850000
*                                                                       07900000
*     BLSRENDDECLARE CHARACTER EXTERNAL, /* Deferred declarations    */ 07950000
*                                                                       08000000
*     EHBCOL1  FIXED EXTERNAL,      /* First indentation column      */ 08050000
*     EHBCOL2  FIXED EXTERNAL,      /* Second indentation column     */ 08100000
*     EHBCOL3  FIXED EXTERNAL,      /* Third indentation column      */ 08150000
*     EHBCOL4  FIXED EXTERNAL,      /* Fourth indentation column     */ 08200000
*     EHBCSECT CHARACTER EXTERNAL,  /* CSECT name                    */ 08250000
*     EHBRC    FIXED EXTERNAL;      /* Macro return code             */ 08300000
*   DEACTIVATE ELSRNTKP,BLSRENDDECLARE; /* Prevent accidents         */ 08350000
*   DECLARE                         /* Internal macro variables      */ 08400000
*     CENDCHAR CHARACTER INTERNAL,  /* Final punctuation             */ 08450000
*     CLVL2    CHARACTER INTERNAL,  /* Second level number           */ 08500000
*     CLVL3    CHARACTER INTERNAL,  /* Third level number            */ 08550000
*     CLVL4    CHARACTER INTERNAL,  /* Fourth level number           */ 08600000
*     CMF1     CHARACTER INTERNAL,  /* Macro form                    */ 08650000
*     CMF2     CHARACTER INTERNAL,  /* Prefix characters             */ 08700000
*     CMF3A    CHARACTER INTERNAL,  /* Complete initialization flag  */ 08750000
*                                                                       08800000
*     CQCOMPLETE CHARACTER INTERNAL, /* Literal                      */ 08850000
*     CQINITIAL CHARACTER INTERNAL, /* Literal                       */ 08900000
*     FCOL2    FIXED INTERNAL,      /* Second indentation column     */ 08950000
*     FCOL3    FIXED INTERNAL,      /* Third indentation column      */ 09000000
*     FCOL4    FIXED INTERNAL,      /* Fourth indentation column     */ 09050000
*     FRC      FIXED INTERNAL,      /* Macro return code             */ 09100000
*     F1       FIXED INTERNAL;      /* Utility variable              */ 09150000
*   DEACTIVATE CENDCHAR,CLVL2,CLVL3,CLVL4,CMF1,CMF2,CMF3A,CQCOMPLETE,   09200000
*       CQINITIAL,FCOL2,FCOL3,FCOL4,FRC,F1; /* Prevent accidents     */ 09250000
*   CQINITIAL = ' INITIAL(';        /* Literal                       */ 09300000
*   CQCOMPLETE = 'COMPLETE';        /* Literal                       */ 09350000
*/*------------------------------------------------------------------*/ 09400000
*/* Invoke BLRMF (analyze the MF keyword and set global variables).  */ 09450000
*/*------------------------------------------------------------------*/ 09500000
*                                                                       09550000
*   ANSWER('?'||MACLABEL||'BLRMF('||MF||') FORMS(L,S);'); /*         */ 09600000
*   FRC = EHBRC;                    /* Macro return code             */ 09650000
*   IF FRC > 8 THEN                 /* BLRMF return code             */ 09700000
*     GO TO EXITNTKP;               /* Error detected, exit          */ 09750000
*   CENDCHAR = EHBENDCHAR;          /* Final punctuation             */ 09800000
*   EHBENDCHAR = ',';               /* Final punctuation             */ 09850000
*   CLVL2 = EHBLVL2;                /* Second level number           */ 09900000
*   CLVL3 = EHBLVL3;                /* Third level number            */ 09950000
*   CLVL4 = EHBLVL4;                /* Fourth level number           */ 10000000
*   CMF1 = EHBMF1;                  /* Macro form                    */ 10050000
*   CMF2 = EHBMF2;                  /* Prefix characters             */ 10100000
*   CMF3A = EHBMF3A;                /* Complete initialization flag     10150000
*                                                                    */ 10200000
*   FCOL2 = EHBCOL2;                /* Second indentation column     */ 10250000
*   FCOL3 = EHBCOL3;                /* Third indentation column      */ 10300000
*   FCOL4 = EHBCOL4;                /* Fourth indentation column     */ 10350000
*   BLSRENDDECLARE = BLSRENDDECLARE || CMF2 ||                          10400000
*       'NTKP CHAR(5) CONSTANT(''NTKP1''),' ||                          10450000
*       '/*NTKP identifier constant used to fill in NTKPID.*/';         10500000
*                                                                       10550000
*/*--Request level constants ----------------------------------------*/ 10600000
*   BLSRENDDECLARE = BLSRENDDECLARE || CMF2 ||                          10650000
*       'TLEV FIXED(16) CONSTANT(1),'  ||                               10700000
*        '/* Task level request */';                                    10750000
*   BLSRENDDECLARE = BLSRENDDECLARE || CMF2 ||                          10800000
*       'ALEV FIXED(16) CONSTANT(2),'  ||                               10850000
*        '/* Address space level request */';                           10900000
*   BLSRENDDECLARE = BLSRENDDECLARE || CMF2 ||                          10950000
*       'SLEV FIXED(16) CONSTANT(3),'  ||                               11000000
*        '/* System level request */';                                  11050000
*/*------------------------------------------------------------------*/ 11100000
*/* Generate the main level declaration for the structure.           */ 11150000
*/*------------------------------------------------------------------*/ 11200000
*                                                                       11250000
*   IF CMF1 = 'LIST' THEN           /* List form                     */ 11300000
*     ANSWER('DECLARE/*BLSQNTKP #MD90xxx*/') COLUMN(5); /*           */ 11350000
*   ANSWER(EHBLVL1||CMF2||' BOUNDARY(WORD)'||EHBMF3||',/*BLSQNTKP'||    11400000
*       MACLIST||' '||MACKEYS||'*/') COLUMN(EHBCOL1);                   11450000
*/*------------------------------------------------------------------*/ 11500000
*/* Generate text for the elements of the substructure.              */ 11550000
*/*------------------------------------------------------------------*/ 11600000
*                                                                       11650000
*   ANSWER(CLVL2||CMF2||'ID CHAR(6)') COLUMN(FCOL2); /*              */ 11700000
*   IF CMF3A = CQCOMPLETE THEN      /*                               */ 11750000
*     ANSWER(CQINITIAL||'''NTKP1'')');                                  11800000
*   ANSWER(',/*Name/Token service parameter list identifier*/');        11850000
*   ANSWER(CLVL3||CMF2||'IDC CHARACTER(4),/*NTKP acronym*/') COLUMN(    11900000
*       FCOL3);                                                         11950000
*   ANSWER(CLVL3||CMF2||'IDL CHARACTER(1),/*NTKP level indicator*/')    12000000
*       COLUMN(FCOL3);                                                  12050000
*   ANSWER(CLVL3||'*   CHARACTER(1),/*Reserved*/') COLUMN(FCOL3);       12100000
*/*--Request level code ---------------------------------------------*/ 12150000
*   ANSWER(CLVL2||CMF2||'LCODE FIXED(16)') COLUMN(FCOL2);               12200000
*   IF CMF3A = CQCOMPLETE THEN                                          12250000
*     ANSWER(CQINITIAL||'''00''X)');                                    12300000
*   ANSWER(',/*Level code,1=TCB, 2=ASID, 3=system */');                 12350000
*                                                                       12400000
*/*--Module name-----------------------------------------------------*/ 12450000
*                                                                       12500000
*   ANSWER(CLVL2||CMF2||'MODN CHAR(8)') COLUMN(FCOL2); /*            */ 12550000
*   IF CMF3A = CQCOMPLETE THEN      /*                               */ 12600000
*     IF LENGTH(EHBCSECT) >= 8 THEN /* CSECT name defined by BLRPROC    12650000
*                                                                    */ 12700000
*       ANSWER(CQINITIAL||QUOTE(EHBCSECT(1:8))||')'); /*             */ 12750000
*     ELSE                          /* No token specified            */ 12800000
*       ANSWER(CQINITIAL||'''        '')'); /* Default is blanks     */ 12850000
*   ANSWER(',/*Name of module requesting the service*/'); /*         */ 12900000
*/*--NAME------------------------------------------------------------*/ 12950000
*                                                                       13000000
*   ANSWER(CLVL2||CMF2||'NAME CHAR(16)') COLUMN(FCOL2);                 13050000
*   IF CMF3A = CQCOMPLETE THEN                                          13100000
*     ANSWER(CQINITIAL||''' '')');                                      13150000
*   ANSWER(',/*The input NAME to be translated*/');                     13200000
*/*--TCB-------------------------------------------------------------*/ 13250000
*                                                                       13300000
*   ANSWER(CLVL2||CMF2||'TCBP POINTER(31)') COLUMN(FCOL2);              13350000
*   IF CMF3A = CQCOMPLETE THEN                                          13400000
*     ANSWER(CQINITIAL||'0)');                                          13450000
*   ANSWER(',/*The TCB the input NAME is associated with */');          13500000
*/*--ASID input -----------------------------------------------------*/ 13550000
*                                                                       13600000
*   ANSWER(CLVL2||CMF2||'ASID FIXED(16)') COLUMN(FCOL2);                13650000
*   IF CMF3A = CQCOMPLETE THEN                                          13700000
*     ANSWER(CQINITIAL||'''00''X)');                                    13750000
*   ANSWER(',/*The ASID the input NAME is associated with */');         13800000
*/*--Flag bytes------------------------------------------------------*/ 13850000
*                                                                       13900000
*   ANSWER(CLVL2||CMF2||'PFLG BIT(16),/*Processing flags*/') COLUMN(    13950000
*       FCOL3);                                                         14000000
*   ANSWER(CLVL3||CMF2||'PFL1 BIT(8)') COLUMN(FCOL3);                   14050000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required?      */ 14100000
*     ANSWER(CQINITIAL||'''00''X)');                                    14150000
*   ANSWER(',/*First flag byte (input) */');                            14200000
*   ANSWER(CLVL4||CMF2||'FNOT BIT(1),/*No output requested*/') COLUMN(  14250000
*       FCOL4);                     /*                           @01M*/ 14300000
*   ANSWER(CLVL4||'* BIT(7),/*Reserved*/') COLUMN(FCOL4);               14350000
*   ANSWER(CLVL3||CMF2||'PFL2 BIT(8)') COLUMN(FCOL3);                   14400000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required?      */ 14450000
*     ANSWER(CQINITIAL||'''00''X)');                                    14500000
*   ANSWER(',/*Second flag byte (output) */');                          14550000
*   ANSWER(CLVL4||CMF2||'NOTF BIT(1),/*TOKEN not found*/') COLUMN(      14600000
*       FCOL4);                                                         14650000
*   ANSWER(CLVL4||CMF2||'AUTH BIT(1),/*Element creator authorized*/')   14700000
*       COLUMN(FCOL4);                                                  14750000
*   ANSWER(CLVL4||CMF2||'PRST BIT(1),/*Element marked persistent*/')    14800000
*       COLUMN(FCOL4);                                                  14850000
*   ANSWER(CLVL4||CMF2||'MSTG BIT(1),/*Missing storage*/')              14900000
*       COLUMN(FCOL4);                                                  14950000
*   ANSWER(CLVL4||CMF2||'FLERR BIT(1),/* Logical error in data */')     15000000
*       COLUMN(FCOL4);              /*                           @01M*/ 15050000
*   ANSWER(CLVL4||'* BIT(3),/*Reserved*/') COLUMN(FCOL4);               15100000
*/*--Referenced blocks, request level -------------------------------*/ 15150000
*                                                                       15200000
*   ANSWER(CLVL2||CMF2||'RBAD POINTER(31)') COLUMN(FCOL2);              15250000
*   IF CMF3A = CQCOMPLETE THEN                                          15300000
*     ANSWER(CQINITIAL||'0)');                                          15350000
*   ANSWER(',/*Referenced block address, ASSB/STCB */');                15400000
*/*--TOKEN-----------------------------------------------------------*/ 15450000
*                                                                       15500000
*   ANSWER(CLVL2||CMF2||'TOKN CHAR(16)') COLUMN(FCOL2);                 15550000
*   IF CMF3A = CQCOMPLETE THEN                                          15600000
*     ANSWER(CQINITIAL||''' '')');                                      15650000
*   ANSWER(',/*The output token*/');                                    15700000
*/*--Output display area---------------------------------------------*/ 15750000
*                                                                       15800000
*   ANSWER(CLVL2||CMF2||'OUTL UNSIGNED BINARY(32)') COLUMN(FCOL2);      15850000
*   IF CMF3A = CQCOMPLETE THEN                                          15900000
*     ANSWER(CQINITIAL||'0)');                                          15950000
*   ANSWER(',/*Length of contents of NTKPOUT field*/');                 16000000
*   ANSWER(CLVL2||CMF2||'OUT CHAR(40)') COLUMN(FCOL2);                  16050000
*   IF CMF3A = CQCOMPLETE THEN                                          16100000
*     ANSWER(CQINITIAL||''' '')');                                      16150000
*   ANSWER(',/*Name/Token service output area */');                     16200000
*/*--ASID output ----------------------------------------------------*/ 16250000
*                                                                       16300000
*   ANSWER(CLVL2||CMF2||'CASID FIXED(16)') COLUMN(FCOL2);               16350000
*   IF CMF3A = CQCOMPLETE THEN                                          16400000
*     ANSWER(CQINITIAL||'''00''X)');                                    16450000
*   ANSWER(',/*The ASID creating the system level */');                 16500000
*/*--Reserved space--------------------------------------------------*/ 16550000
*                                                                       16600000
*   ANSWER(CLVL2||CMF2||'RSVD CHAR(26)') COLUMN(FCOL2);                 16650000
*   IF CMF3A = CQCOMPLETE THEN                                          16700000
*     ANSWER(CQINITIAL||''' '')');                                      16750000
*   ANSWER(',/*Reserved*/');                                            16800000
*   ANSWER(CLVL2||CMF2||'999 CHARACTER(0)'||CENDCHAR||                  16850000
*       '/*BLSQNTKP #MD90xxx*/') COLUMN(FCOL2);                         16900000
*   IF CENDCHAR = ';' THEN                                              16950000
*     ANSWER('?BLSR002;');          /* Process deferred declarations    17000000
*                                                                    */ 17050000
*   ANSWER('?BLR003(BLSQNTKP,'||CHAR(EHBRC)||');'); /*               */ 17100000
*EXITNTKP:                                                              17150000
*   RETURN CODE(FRC);               /*                               */ 17200000
*   %END BLSQNTKP;                                                      17250000
