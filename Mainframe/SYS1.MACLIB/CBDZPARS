*/****  START OF SPECIFICATIONS  *************************************/ 00001990
*/*                                                                  */ 00002980
*/*  ACRONYM:  CBDZPARS                                              */ 00003970
*/*  EXTERNAL CLASSIFICATION:  PSPI                                  */ 00004960
*/*  END OF EXTERNAL CLASSIFICATION                                  */ 00005950
*/*  MACRO NAME:  CBDZPARS                                           */ 00006940
*/*  DSECT NAME:  PARS                                               */ 00007930
*/*  DESCRIPTIVE NAME = Generate parse macros.                       */ 00008920
*/*                                                                  */ 00009910
*/*01*  PROPRIETARY STATEMENT =                                      */ 00010900
*/*                                                                  */ 00011890
*/*        LICENSED MATERIALS - PROPERTY OF IBM                      */ 00012880
*/*        THIS MACRO IS "RESTRICTED MATERIALS OF IBM"               */ 00013870
*/*        5647-A01 (C) COPYRIGHT IBM CORP. 1990, 2000           @HCC*/ 00014860
*/*                                                                  */ 00015850
*/*     STATUS = HCS6091                                         @HCA*/ 00016840
*/*                                                                  */ 00017830
*/*01*  FUNCTION =                                                   */ 00018820
*/*       CBDZPARS contains the macros needed to parse               */ 00019810
*/*       the IOCP, MVSCP and HCPRIO input statements.           @LEC*/ 00020800
*/*                                                                  */ 00021790
*/*02*    OPERATION =                                                */ 00022780
*/*         The macros contained within CBDZPARS will be used        */ 00023770
*/*         to parse the IOCP and MVSCP or HCPRIO input          @LEC*/ 00024760
*/*         statements and chain the                             @LEC*/ 00025750
*/*         resulting internal text records sequentially.            */ 00026740
*/*                                                                  */ 00027730
*/*         In the event of an error, syntax checking will           */ 00028720
*/*         continue for the remainder of the input. Invalid         */ 00029710
*/*         records will be chained by a generated header,           */ 00030700
*/*         but no internal text will be created for the input       */ 00031690
*/*         record.                                                  */ 00032680
*/*                                                                  */ 00033670
*/*01*  NOTES =                                                      */ 00034660
*/*                                                                  */ 00035650
*/*02*    DEPENDENCIES = Each macro has its own dependencies         */ 00036640
*/*                                                                  */ 00037630
*/*02*    RESTRICTIONS = For HCD use only.                           */ 00038620
*/*                                                                  */ 00039610
*/*01*  MODULE TYPE = BAL MACROS                                     */ 00040600
*/*                                                                  */ 00041590
*/*02*    PROCESSOR = ASSEMBLER-H                                    */ 00042580
*/*                                                                  */ 00043570
*/*02*    INVOCATION = See prologue of each macro                    */ 00044560
*/*                                                                  */ 00045550
*/*                                                                  */ 00046540
*/*01*  CHANGE ACTIVITY =                                            */ 00047530
*/*                                                                  */ 00048520
*/*   $L0= HCD,   HCSH101 900420 BOEB: Hardware Configuration Dialog */ 00049510
*/*   $L1= HCD,   HCSH201 900927 BOEB: Dynamic I/O support           */ 00050500
*/*   $LB= MIF,   HCSH301 910410 BOEB: MIF support                   */ 00051490
*/*   $H1= HCD,   HCSH201 900719 BOEB: 9221 Support                  */ 00052480
*/*   $M1= HCD,   HCSH201 901001 BOEB: Quality Improvements          */ 00053470
*/*   $M3= HCD,   HCSH501 930927 BOEB: Quality Improvements        FB*/ 00054460
*/*   $LE= MIG,   HCSH301 910327 BOEB: VM Migration                  */ 00055450
*/*   $P1= PTM    HCSH301 921014 BOEB: PTM KGL0675                 WS*/ 00056440
*/*   $P2= PTM    HCSH301 930310 BOEB: APAR OY62437                WS*/ 00057430
*/*   $P3= PTM    HCSH501 931025 BOEB: PTM KGWxxxx                 FB*/ 00058420
*/*   $P4= PTM    HCSH501 931124 BOEB: PTM KGX0021                 FB*/ 00059410
*/*   $P5= -enh-  HCSH501 940210 BOEB: Enhanced PARTITION syntax   FB*/ 00060400
*/*   $LT= CF,    HCSH501 930515 BOEB: Coupling Facility Support   FB*/ 00061390
*/*   $N3= CF,    HCSH501 931122 BOEB: Migration Enhancements      FB*/ 00062380
*/*   $H3= CBY,   HCSH501 940330 BOEB: CBY channel path support    FB*/ 00063370
*/*   $H4= OSA,   HCSH501 940330 BOEB: OSA channel path support    FB*/ 00064360
*/*   $P6= -enh-  HCSH501 940520 BOEB: Esoteric token support      WS*/ 00065350
*/*   $P7= -enh-  HCSH501 940607 BOEB: Support NOTPART=(0)         FB*/ 00066340
*/*   $N6=UCBVSCR,HCSH521 940817 BOEB: UCB VSCR support (LOCANY)   FB*/ 00067330
*/*   $01= PTM    HCSH521 940907 BOEB: Esoteric w/o '/' in 1st pos FB*/ 00068320
*/*   $H6=IOCPMOD HCSH521 941229 BOEB: TOK keyword support         FB*/ 00069310
*/*   $M4=MIGENH  HCSH521 950221 BOEB: Enhanced migration support  FB*/ 00070300
*/*                                    SPE OW12423                   */ 00071290
*/*   $H5=ISD     HCSH521 960402 BBEI: ISD channel path support      */ 00072280
*/*   $C3=VOL     HCS6031 960621 BBEI: IODEVICE VOLSER number        */ 00073270
*/*   $L2=SWMIG   HCS6051 970209 BBEI: Migrate switch configuration  */ 00074260
*/*   $H8=NTV     HCS6051 970312 BKRE: NTV chpid support             */ 00075250
*/*   $H9=ICB     HCS6051 980128 BBEI: ICB channel support           */ 00076240
*/*   $HA=FIBRE   HCS6051 980128 BBEI: Fibre channel support         */ 00077230
*/*   $HB=OSAEX   HCS6051 980404 WEID: OSA Express support           */ 00078220
*/*   $02=OW31629 HCS6051 980723 BBEI: Correct DEVPREF migration     */ 00079210
*/*   $HC=PLTR    HCS6091 981224 WEID: DSD, EIO support              */ 00080200
*/*   $M5=DCM     HCS6091 990324 BBEI: Dynamic CHPID Management      */ 00081190
*/*   $B1=ESS     HCS6091 991027 REDDE: support more than 8 ports/CU */ 00082180
*/*   $HD=PEER    HCS6091 991202 WEID: Peer channel support          */ 00083170
*/*   $03=OW47247 HCS6091 001215 BBEI: Correct esoteric token migrate*/ 00084160
*/*   $HE=iQDIO   HCS6091 000713 BBEI: iQDIO Support                 */ 00085150
*/*   $04=OW47636 HCS6091 010112 BBEI: Check for correct TPATH count */ 00086140
*/*                                                                  */ 00087130
*/**** END OF SPECIFICATIONS *****************************************/ 00088120
*/*                                                                  */ 00089110
*/*==================================================================*/ 00090100
*/*==================================================================*/ 00091090
         TITLE 'RESOURCE - RESOURCE MACRO'                         @LBA 00092080
         MACRO  --  RESOURCE INFORMATION                           @LBA 00093070
&SYMBOL  RESOURCE &PARTITION=,&PART=,&DESCL=,&USAGE=               @HDC 00094060
.*                                                                      00095050
         AGO   .SKIP                                               @LBA 00096040
*/********************************************************************/ 00097030
*/*                                                                  */ 00098020
*/*01*  MACRO NAME = RESOURCE                                        */ 00099010
*/*                                                                  */ 00100000
*/*02*  DESCRIPTIVE NAME = Resource Information                      */ 00100990
*/*                                                                  */ 00101980
*/*01*  MACRO CALL =                                                 */ 00102970
*/*       label RESOURCE PARTition=((p1,n),(p2,n),..),           @M4C*/ 00103960
*/*                      DESCL=(desc1,desc2,...)                 @M4A*/ 00104950
*/*                      USAGE=(use1,use2,...)                   @HDA*/ 00105940
*/*                                                                  */ 00106930
*/*01*  FUNCTION = The RESOURCE statement is used to define          */ 00107920
*/*                the partitions for a MIF processor and assign     */ 00108910
*/*                image identifiers to the partitions.              */ 00109900
*/*                                                                  */ 00110890
*/*01*  NOTES =  N/A                                                 */ 00111880
*/*                                                                  */ 00112870
*/*02*    DEPENDENCIES = None.                                       */ 00113860
*/*                                                                  */ 00114850
*/*02*    RESTRICTIONS = FOR HCD use only                            */ 00115840
*/*                                                                  */ 00116830
*/*01*  INPUT =                                                      */ 00117820
*/*             # PARTITION=((p1<,n>),(p2<,n>),...)                  */ 00118810
*/*                          p1    -  partition name                 */ 00119800
*/*                          n     -  partition image number  (hex)  */ 00120790
*/*               USAGE=(type1,type2, ..) partition usage type   @HDA*/ 00121780
*/*               DESCL=(desc1,desc2,...)                        @M4A*/ 00122770
*/*                          descN -  description of partition N @M4A*/ 00123760
*/*             #  - Required keyword                                */ 00124750
*/*                                                                  */ 00125740
*/*01*  OUTPUT = Generated RESOURCE internal text record             */ 00126730
*/*                                                                  */ 00127720
*/********************************************************************/ 00128710
*/*                                                                     00129700
.SKIP    ANOP                                                      @LBA 00130690
         GBLA  &SYSITRN           HCD statement number             @LBA 00131680
         GBLA  &$STRLEN           String length                    @L2A 00132670
         GBLB  &$ERR              Global error flag                @LBA 00133660
         GBLC  &CWK               Character work variable          @LBA 00134650
.*                                                                      00135640
         LCLA  &SUB               Sublist element number           @LBA 00136630
         LCLA  &L                 Maximum operand length           @LBA 00137620
         LCLA  &LEN               Actual operand length            @N3A 00138610
         LCLA  &IL                Maximum length of image number   @LBA 00139600
         LCLA  &IP                Specified number of partitions   @HDA 00140590
         LCLA  &NDX               Loop variable                    @LBA 00141580
         LCLA  &MAXSUB            Maximum number of sublist entries@LBA 00142570
         LCLA  &MAXVAL            Maximum value of operand         @LBA 00143560
         LCLA  &MINVAL            Minimum value of operand         @LBA 00144550
         LCLA  &PLCT              Number of entries in partition list  *00145540
                                                                   @LBA 00146530
         LCLA  &USE(64)           Partition usage type             @HDA 00147520
         LCLA  &PID(64)           Partition image number           @LBA 00148510
         LCLC  &PNAME(64)         Partition list                   @LBA 00149500
         LCLC  &PDESC(64)         Partition description            @M4A 00150490
         LCLC  &CNO               EBCDIC version of SYSITRN        @LBA 00151480
         LCLC  &DESCR             Description work area            @L2A 00152470
         LCLC  &DSC               Description work area            @L2A 00153460
         LCLC  &IMAGE             Image number                     @LBA 00154450
         LCLB  &ERROR             Error flag                       @LBA 00155440
         LCLB  &USESET(64)        Usage type set indicator         @HDA 00156430
.*                                                                      00157420
         ACTR  10000              Set for infinite loop control    @LBA 00158410
.*                                                                      00159400
&SYMBOL  TXTHDR RESOURCE                                           @LBA 00160390
.*                                                                      00161380
.********************************************************************** 00162370
.*                                                                    * 00163360
.*       Check if unrecognized parameters are specified               * 00164350
.*                                                                    * 00165340
.********************************************************************** 00166330
         AIF   (N'&SYSLIST EQ 0).XPOSA0    No positional parameter @P3A 00167320
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @P3A 00168310
&ERROR   SETB  1                  Indicate error                   @P3A 00169300
         AGO   .XPOSA0            and continue                     @P3A 00170290
.*                                                                      00171280
.XPOSA0  ANOP  ,                                                   @P3A 00172270
.*                                                                      00173260
.********************************************************************** 00174250
.*                                                                    * 00175240
.*       Validate PARTITION  Parameter  ((name<,n>),(name<,n>),...)   * 00176230
.*                                                                    * 00177220
.********************************************************************** 00178210
.*                                                                      00179200
&MAXSUB  SETA  64                     Maximum number of partitions @LBA 00180190
&L       SETA  8                      Maximum PARTITION length     @LBA 00181180
&IL      SETA  1                      Maximum length of image number   *00182170
                                                                   @LBA 00183160
.*                                                                      00184150
         AIF   ('&PARTITION' EQ '').PART100 omitted PARTITION parm @LBA 00185140
&PLCT    SETA  0                      Initialize number of entries in  *00186130
                                      partition list               @LBA 00187120
.*                                                                      00188110
.********************************************************************** 00189100
.*       Loop to validate each sublist entry                          * 00190090
.********************************************************************** 00191080
         AIF   (N'&PARTITION GT &MAXSUB).PARTE01  Too many operands in *00192070
                                      partition list               @LBA 00193060
&IP      SETA  N'&PARTITION           Set number of partitions     @HDA 00194050
         AIF   (N'&USAGE GT N'&PARTITION).PARTE07 Too many operands in *00195040
                                      usage list                   @HDA 00196030
&SUB     SETA  1                      Address first sublist entry  @LBA 00197020
.LPART10 ANOP ,                                                    @LBA 00198010
         AIF   ('&PARTITION(&SUB,1)' EQ '').PARTE02  No partition  @LBA 00199000
         PARTTEST NAME=&PARTITION(&SUB,1),SUB=&SUB                 @LBA 00199990
         AIF   (NOT &$ERR).LPART20    Continue if no error detected@LBA 00200980
&ERROR   SETB  1                      Otherwise indicate error     @LBA 00201970
         AGO   .LPART50               and continue                 @LBA 00202960
.*                                                                      00203950
.LPART20 ANOP ,                                                    @LBA 00204940
&PLCT    SETA  &PLCT+1                Increment  number of entries in  *00205930
                                      partition list               @LBA 00206920
&PNAME(&PLCT)  SETC '&PARTITION(&SUB,1)'   Save partition name     @LBA 00207910
&USE(&PLCT)    SETA  0                Initialize partition usage   @HDA 00208900
&USESET(&PLCT) SETB  0                No usage type set so far     @HDA 00209890
.*                                                                      00210880
         AIF   ('&PARTITION(&SUB,2)' EQ '').LPART50 No image no    @LBA 00211870
         AIF   (K'&PARTITION(&SUB,2) GT &IL).PARTE03  Report error if  *00212860
                                      image no  > maximum          @LBA 00213850
&IMAGE   SETC  '&PARTITION(&SUB,2)'   Isolate image number         @LBA 00214840
         HEXCHECK STRING=&IMAGE       Verify if hexadecimal        @LBA 00215830
         AIF   (&$ERR).PARTE04        Report error, if encountered @LBA 00216820
         AIF   ('&IMAGE' EQ '0').PARTE06 Image number 0 is invalid @LBA 00217810
.*                                                                      00218800
&PID(&PLCT)    SETA 10                Save partition image number  @LBA 00219790
         AIF   ('&IMAGE' EQ 'A').LPART25 Image number set          @HDC 00220780
&PID(&PLCT)    SETA 11                Save partition image number  @LBA 00221770
         AIF   ('&IMAGE' EQ 'B').LPART25 Image number set          @HDC 00222760
&PID(&PLCT)    SETA 12                Save partition image number  @LBA 00223750
         AIF   ('&IMAGE' EQ 'C').LPART25 Image number set          @HDC 00224740
&PID(&PLCT)    SETA 13                Save partition image number  @LBA 00225730
         AIF   ('&IMAGE' EQ 'D').LPART25 Image number set          @HDC 00226720
&PID(&PLCT)    SETA 14                Save partition image number  @LBA 00227710
         AIF   ('&IMAGE' EQ 'E').LPART25 Image number set          @HDC 00228700
&PID(&PLCT)    SETA 15                Save partition image number  @LBA 00229690
         AIF   ('&IMAGE' EQ 'F').LPART25 Image number set          @HDC 00230680
&PID(&PLCT)    SETA &IMAGE            Save partition image number  @LBA 00231670
.*                                                                      00232660
.LPART25 ANOP                         Check for usage type         @HDA 00233650
         AIF   ('&USAGE(&SUB)' EQ '').LPART50        No usage type @HDA 00234640
         AIF   ('&USAGE(&SUB)' NE 'OS').LPART30       Check for OS @HDA 00235630
&USESET(&PLCT) SETB 1                 Indicate usage set           @HDA 00236620
&USE(&PLCT)    SETA 0                 Set usage type OS            @HDA 00237610
         AGO   .LPART50               Goto end of loop             @HDA 00238600
.LPART30 ANOP                         Check for next usage type    @HDA 00239590
         AIF   ('&USAGE(&SUB)' NE 'CF').LPART35       Check for CF @HDA 00240580
&USESET(&PLCT) SETB 1                 Indicate usage set           @HDA 00241570
&USE(&PLCT)    SETA 1                 Set usage type CF            @HDA 00242560
         AGO   .LPART50               Goto end of loop             @HDA 00243550
.LPART35 ANOP                         Check for next usage type    @HDA 00244540
         AIF   ('&USAGE(&SUB)' NE 'CF/OS').PARTE05       Chk CF/OS @HDA 00245530
&USESET(&PLCT) SETB 1                 Indicate usage set           @HDA 00246520
&USE(&PLCT)    SETA 2                 Set usage type CF/OS         @HDA 00247510
         AGO   .LPART50               Goto end of loop             @HDA 00248500
.LPART50 ANOP                         Process next partition       @LBA 00249490
&SUB     SETA  &SUB+1                  Point to next sublist entry @LBA 00250480
         AIF   (&SUB LE N'&PARTITION).LPART10  More partition's    @LBA 00251470
         AGO   .XPART                 and continue                 @LBA 00252460
.*                                                                      00253450
.*                                                                      00254440
.********************************************************************** 00255430
.*                                                                    * 00256420
.*       Validate PART  Parameter  ((name<,n>),(name<,n>),...)        * 00257410
.*                                                                    * 00258400
.*      Note:  This piece of code must follow the PARTITION routine,  * 00259390
.*             since branches are made from the partition routine     * 00260380
.*             to the error handling code of PART.                    * 00261370
.*                                                                    * 00262360
.********************************************************************** 00263350
.*                                                                      00264340
.PART100 ANOP                                                      @LBA 00265330
         AIF   ('&PART' EQ '').NOPART PARTITION parm not specified @LBA 00266320
.*                                                                      00267310
&PLCT    SETA  0                      Initialize number of entries in  *00268300
                                      partition list               @LBA 00269290
.*                                                                      00270280
.********************************************************************** 00271270
.*       Loop to validate each sublist entry                          * 00272260
.********************************************************************** 00273250
         AIF   (N'&PART GT &MAXSUB).PARTE01  Too many operands in      *00274240
                                      partition list               @LBA 00275230
&IP      SETA  N'&PART                Set number of partitions     @HDA 00276220
         AIF   (N'&USAGE GT N'&PART).PARTE07 Too many operands in      *00277210
                                      usage list                   @HDA 00278200
&SUB     SETA  1                      Address first sublist entry  @LBA 00279190
.PART110 ANOP  ,                                                   @LBA 00280180
         AIF   ('&PART(&SUB,1)' EQ '').PARTE02  No partition name  @LBA 00281170
         PARTTEST NAME=&PART(&SUB,1),SUB=&SUB                      @LBA 00282160
         AIF   (NOT &$ERR).PART120    Continue if no error detected@LBA 00283150
&ERROR   SETB  1                      Otherwise indicate error     @LBA 00284140
         AGO   .PART150               and continue                 @LBA 00285130
.*                                                                      00286120
.PART120 ANOP ,                                                    @LBA 00287110
&PLCT    SETA  &PLCT+1                Increment  number of entries in  *00288100
                                      partition list               @LBA 00289090
&PNAME(&PLCT)  SETC '&PART(&SUB,1)'   Save partition name          @LBA 00290080
&USE(&PLCT)    SETA  0                Initialize partition usage   @HDA 00291070
&USESET(&PLCT) SETB  0                No usage type set so far     @HDA 00292060
.*                                                                      00293050
         AIF   ('&PART(&SUB,2)' EQ '').PART150 Image number omitted@LBA 00294040
         AIF   (K'&PART(&SUB,2) GT &IL).PARTE03  Report error if image *00295030
                                      number > maximum             @LBA 00296020
&IMAGE   SETC  '&PART(&SUB,2)'        Isolate image number         @LBA 00297010
         HEXCHECK STRING=&IMAGE       Verify if hexadecimal        @LBA 00298000
         AIF   (&$ERR).PARTE04        Report error, if encountered @LBA 00298990
         AIF   ('&IMAGE' EQ '0').PARTE06 Image number 0 is invalid @LBA 00299980
.*                                                                      00300970
&PID(&PLCT)    SETA 10                Save partition image number  @LBA 00301960
         AIF   ('&IMAGE' EQ 'A').PART125 Image number set          @HDC 00302950
&PID(&PLCT)    SETA 11                Save partition image number  @LBA 00303940
         AIF   ('&IMAGE' EQ 'B').PART125 Image number set          @HDC 00304930
&PID(&PLCT)    SETA 12                Save partition image number  @LBA 00305920
         AIF   ('&IMAGE' EQ 'C').PART125 Image number set          @HDC 00306910
&PID(&PLCT)    SETA 13                Save partition image number  @LBA 00307900
         AIF   ('&IMAGE' EQ 'D').PART125 Image number set          @HDC 00308890
&PID(&PLCT)    SETA 14                Save partition image number  @LBA 00309880
         AIF   ('&IMAGE' EQ 'E').PART125 Image number set          @HDC 00310870
&PID(&PLCT)    SETA 15                Save partition image number  @LBA 00311860
         AIF   ('&IMAGE' EQ 'F').PART125 Image number set          @HDC 00312850
&PID(&PLCT)    SETA &IMAGE            Save partition image number  @LBA 00313840
.*                                                                      00314830
.PART125 ANOP ,                                                    @HDA 00315820
         AIF   ('&USAGE(&SUB)' EQ '').PART150        No usage type @HDA 00316810
         AIF   ('&USAGE(&SUB)' NE 'OS').PART130   Check for OS     @HDA 00317800
&USESET(&PLCT) SETB 1                 Indicate usage set           @HDA 00318790
&USE(&PLCT)    SETA 0                 Set usage type OS            @HDA 00319780
         AGO   .PART150               Goto end of loop             @HDA 00320770
.PART130 ANOP                         Check for next usage type    @HDA 00321760
         AIF   ('&USAGE(&SUB)' NE 'CF').PART135  Check for CF      @HDA 00322750
&USESET(&PLCT) SETB 1                 Indicate usage set           @HDA 00323740
&USE(&PLCT)    SETA 1                 Set usage type CF            @HDA 00324730
         AGO   .PART150               Goto end of loop             @HDA 00325720
.PART135 ANOP                         Check for next usage type    @HDA 00326710
         AIF   ('&USAGE(&SUB)' NE 'CF/OS').PARTE05 Chk CF/OS       @HDA 00327700
&USESET(&PLCT) SETB 1                 Indicate usage set           @HDA 00328690
&USE(&PLCT)    SETA 2                 Set usage type CF/OS         @HDA 00329680
         AGO   .PART150               Goto end of loop             @HDA 00330670
.*                                                                      00331660
.PART150 ANOP                         Process next partition       @LBA 00332650
&SUB     SETA  &SUB+1                  Point to next sublist entry @LBA 00333640
         AIF   (&SUB LE N'&PART).PART110  More partition's         @LBA 00334630
         AGO   .XPART                 and continue                 @LBA 00335620
.*                                                                      00336610
.PARTE01 ANOP  ,                                                   @LBA 00337600
         MNOTE 8,'045 PARTITION PARAMETER EXCEEDS &MAXSUB ENTRIES.'    *00338590
                                                                   @LBA 00339580
&ERROR   SETB  1                     Indicates error               @LBA 00340570
         AGO   .XPART                 and continue                 @LBA 00341560
.*                                                                      00342550
.PARTE02 ANOP  ,                                                   @LBA 00343540
         MNOTE 8,'017 PARTITION NAME REQUIRED IN SUBLIST ENTRY &SUB OF *00344530
               PARTITION PARAMETER.'                               @LBA 00345520
&ERROR   SETB  1                      Indicates error              @LBA 00346510
         AGO   .XPART                 and continue                 @LBA 00347500
.*                                                                      00348490
.PARTE03 ANOP  ,                                                   @LBA 00349480
         MNOTE 8,'046 PARTITION NUMBER IN SUBLIST ENTRY &SUB OF PARTITI*00350470
               ON PARAMETER EXCEEDS &IL CHARACTER.'                @LBA 00351460
&ERROR   SETB  1                      Indicates error              @LBA 00352450
         AGO   .XPART                 and continue                 @LBA 00353440
.*                                                                      00354430
.PARTE04 ANOP  ,                                                   @LBA 00355420
         MNOTE 8,'047 INVALID HEX DIGIT ''&CWK'' IN SUBLIST ENTRY &SUB *00356410
               OF PARTITION PARAMETER (PARTITION NUMBER).'         @LBA 00357400
&$ERR    SETB  1                      Indicate error               @LBA 00358390
         AGO   .XPART                 and exit                     @LBA 00359380
.*                                                                      00360370
.PARTE05 ANOP  ,                                                   @HDA 00361360
         MNOTE 8,'056 PARTITION USAGE TYPE IN SUBLIST ENTRY &SUB OF USA*00362350
               GE PARAMETER IS INVALID.'                           @HDA 00363340
&$ERR    SETB  1                      Indicate error               @HDA 00364330
         AGO   .XPART                 and exit                     @HDA 00365320
.*                                                                      00366310
.PARTE06 ANOP  ,                                                   @LBA 00367300
         MNOTE 8,'055 PARTITION NUMBER 0 IN SUBLIST ENTRY &SUB OF PARTI*00368290
               TION PARAMETER IS INVALID.'                         @LBA 00369280
&$ERR    SETB  1                      Indicate error               @LBA 00370270
         AGO   .XPART                 and exit                     @LBA 00371260
.*                                                                      00372250
.PARTE07 ANOP  ,                      Too many values              @HDA 00373240
         MNOTE 8,'045 USAGE PARAMETER EXCEEDS &IP ENTRIES.'        @HDA 00374230
&$ERR    SETB  1                      Indicate error               @HDA 00375220
         AGO   .XPART                 and exit                     @HDA 00376210
.*                                                                      00377200
.NOPART  MNOTE 8,'002 PARTITION KEYWORD NOT SPECIFIED.'            @N3A 00378190
&ERROR   SETB 1                        Indicate error              @N3A 00379180
.*                                                                      00380170
.*                                                                      00381160
.XPART   ANOP                         End of processing PARTITION  @LBA 00382150
.*                                                                      00383140
.********************************************************************** 00384130
.*                                                                    * 00385120
.*       Validate DESCL Parameter       ((desc1,(desc2),...)          * 00386110
.*                                                                    * 00387100
.********************************************************************** 00388090
.*                                                                      00389080
&MAXSUB  SETA  &PLCT                  Max. number of descriptions  @M4A 00390070
&L       SETA  32                     Maximum description length   @M4A 00391060
.*                                                                      00392050
         AIF   ('&DESCL' EQ '').XDESCL   DESCL has been omitted    @M4A 00393040
.*                                                                      00394030
.********************************************************************** 00395020
.*       Loop to validate each sublist entry                          * 00396010
.********************************************************************** 00397000
         AIF   (N'&DESCL GT &MAXSUB).PDESE01      Too many operands in *00397990
                                      description list             @M4A 00398980
&SUB     SETA  1                      Address first sublist entry  @M4A 00399970
.LPDES10 ANOP ,                                                    @M4A 00400960
         AIF   ('&DESCL(&SUB)' EQ '').PDESNUL  No description      @M4A 00401950
         AIF   ('&DESCL(&SUB)'(1,1) EQ '''').DELEN In quotes       @M4A 00402940
.*                                   (Asmblr checks for end quote) @M4A 00403930
         MNOTE 8,'008 DESCL VALUE MUST BE ENCLOSED IN QUOTES.'     @M4A 00404920
&ERROR   SETB  1                      Indicate error               @M4A 00405910
.DELEN   ANOP                                                      @M4A 00406900
&DESCR   SETC  '&DESCL(&SUB)'           Set description            @M4A 00407890
&LEN     SETA  K'&DESCL(&SUB)-2        Length of description       @M4A 00408880
         AIF   (&LEN  LE 0).DENULL    Check for zero length        @M4A 00409870
&DSC     SETC  '&DESCL(&SUB)'(2,&LEN) Set description string       @L2A 00410860
         STRLEN STRING=&DSC           Determines length            @L2A 00411850
&LEN     SETA  &$STRLEN               Sets real length             @L2A 00412840
         AIF   (&LEN  LE &L).LPDES20  Less than maximum            @M4A 00413830
         MNOTE 8,'033 DESCL VALUE EXCEEDS &L CHARACTERS.'          @M4A 00414820
&ERROR   SETB  1                      Indicate error               @M4A 00415810
.PDESNUL ANOP                                                      @M4A 00416800
&DESCR   SETC  '''  '''               Set to blank                 @M4A 00417790
.*                                                                      00418780
.LPDES20 ANOP ,                                                    @M4A 00419770
&PDESC(&SUB)   SETC '&DESCR'          Save partition description   @M4A 00420760
.*                                                                      00421750
.*                                                                      00422740
.LPDES50 ANOP                         Process next partition       @M4A 00423730
&SUB     SETA  &SUB+1                  Point to next sublist entry @M4A 00424720
         AIF   (&SUB LE &MAXSUB).LPDES10  More partition descript  @M4A 00425710
         AGO   .XDESCL                Branch to end of DESCL       @M4A 00426700
.PDESE01 ANOP  ,                      Too many values              @M4A 00427690
         MNOTE 8,'045 DESCL PARAMETER EXCEEDS &MAXSUB ENTRIES.'    @M4A 00428680
.XDESCL  ANOP  ,                                                   @M4A 00429670
.********************************************************************** 00430660
.*                                                                    * 00431650
.*       Generate internal text record                                * 00432640
.*                                                                    * 00433630
.********************************************************************** 00434620
.GENTEXT ANOP                                                      @LBA 00435610
         AIF (&ERROR).EXIT            Exit if error                @LBA 00436600
&CNO     SETC '&SYSITRN'              EBCDIC version of statement      *00437590
                                      number                       @LBA 00438580
         DC    A(0)                   Reserved                     @N3C 00439570
         DC    AL2(0)                 Reserved for later usage     @LBA 00440560
         DC    AL2(&PLCT)             Number of entries in partition   *00441550
                                      list                         @LBA 00442540
         AIF   (&PLCT EQ 0).NOPARTS   Partition list is empty      @LBA 00443530
         DC    A(@P&CNO)              Address of partition list    @LBA 00444520
         AGO   .GEN010                branch to continue           @LBA 00445510
.NOPARTS DC    A(0)                   No partition list exists     @LBA 00446500
.GEN010  ANOP  ,                                                   @LBA 00447490
         DC    XL8'00'                Reserved                     @LBA 00448480
.*--------------------------------------------------------------------* 00449470
.*                  Generate Partition List                           * 00450460
.*--------------------------------------------------------------------* 00451450
         AIF   (&PLCT EQ 0).EGPAL    Partition list is empty       @LBA 00452440
         SPACE 1                                                   @LBA 00453430
*----------------   Partition List  -------------------------------@LBA 00454420
&SUB     SETA  1                      Point to first partition     @LBA 00455410
&CWK     SETC  '@P&CNO'               Label for first partition    @LBA 00456400
.PAL10   ANOP  ,                                                   @LBA 00457390
&CWK     DC    CL8'&PNAME(&SUB)'      Partition name               @LBA 00458380
         DC    AL2(&PID(&SUB))        Partition image number       @LBA 00459370
         DC    AL1(&USE(&SUB))        Partition usage type         @HDC 00460360
         AIF   (&USESET(&SUB)).PAL12  Check if usage type given    @HDA 00461350
         DC    XL1'00'                Reserved                     @N3C 00462340
         AGO   .PAL13                 Skip                         @HDA 00463330
.PAL12   ANOP                                                      @HDA 00464320
         DC    XL1'80'                Indicate usage type set      @HDA 00465310
.PAL13   ANOP                                                      @HDA 00466300
         AIF   ('&DESCL' EQ '').PAL15 No description list given    @M4A 00467290
         DC    CL32&PDESC(&SUB)       Partition description        @M4C 00468280
         AGO   .PAL20                 Skip                         @M4A 00469270
.PAL15   ANOP                                                      @M4A 00470260
         DC    XL32'00'               Empty parameter list         @M4A 00471250
.PAL20   ANOP                                                      @M4A 00472240
&CWK     SETC  ''                     Blank out label              @LBA 00473230
&SUB     SETA  &SUB+1                 Point to next entry in list  @LBA 00474220
         AIF   (&SUB LE &PLCT).PAL10  Process next partition in list   *00475210
                                                                   @LBA 00476200
.EGPAL   ANOP  ,                                                   @LBA 00477190
.*                                                                      00478180
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to @LBA 00479170
         MNOTE ' '                     occur if NOGEN specified    @LBA 00480160
         MEND                                                      @LBA 00481150
*/*==================================================================*/ 00482140
*/*==================================================================*/ 00483130
         TITLE 'CHPID - CHANNEL PATH ID MACRO'                          00484120
         MACRO  --  CHANNEL PATH IDENTIFICATION                         00485110
&SYMBOL  CHPID &PARTITION=,&PART=,&NOTPART=,&PATH=,&SWITCH=,&TYPE=,    *00486100
               &DESC=,&SWPORT=,&TPATH=,&CPATH=,&OS=,&IOCLUSTER=         00487090
.*                                                                 @M5C 00488080
         AGO   .SKIP                                                    00489070
*/********************************************************************/ 00490060
*/*                                                                  */ 00491050
*/*01*  MACRO NAME = CHPID                                           */ 00492040
*/*                                                                  */ 00493030
*/*02*  DESCRIPTIVE NAME = Channel Path Identification.              */ 00494020
*/*                                                                  */ 00495010
*/*01*  MACRO CALL =                                                 */ 00496000
*/*       LABEL CHPID    TYPE=BL|BY|S|CNC|CTC|FX|CVC|IOC|CFR|CFS @LTC*/ 00496990
*/*                             |CBY|OSA|ISD|NTV                 @H8C*/ 00497980
*/*                             |CBR|CBS|ICR|ICS                 @H9A*/ 00498970
*/*                             |FC |FCV|FTV                     @HAA*/ 00499960
*/*                             |OSD|OSE                         @HBA*/ 00500950
*/*                             |DSD|EIO                         @HCA*/ 00501940
*/*                             |CFP|CBP|ICP                     @HDA*/ 00502930
*/*                             |IQD|FCP                         @HEA*/ 00503920
*/*                      PARTition=((p1,p2,..),(px,py,..),REC)       */ 00504910
*/*                      NOTPART=((p1,p2,..),<(px,py,..)>)       @LTA*/ 00505900
*/*                      PATH=((chpid number <,channel number        */ 00506890
*/*                         <,channel set>>),...)                    */ 00507880
*/*                      SWITCH=number                               */ 00508870
*/*                      SHARED                                      */ 00509860
*/*                      OS=value                                @M5A*/ 00510850
*/*                      IOCLUSTER=I/O cluster                   @M5A*/ 00511840
*/*                      DESC='description'                      @N3A*/ 00512830
*/*                      SWPORT=((sw1,port1),(sw2,port2),...)    @M4A*/ 00513820
*/*                      TPATH=((proc1,chpid1<,cunum1,devnum1>),...) */ 00514810
*/*                                                              @M4A*/ 00515800
*/*                      CPATH=(chpid,...,chpid)    ignored      @H8A*/ 00516790
*/*                                                                  */ 00517780
*/*01*  FUNCTION = The CHPID macro is used to define channel paths.  */ 00518770
*/*                Up to 8 channel paths can be defined on each      */ 00519760
*/*                CHPID macro instruction.                          */ 00520750
*/*                                                                  */ 00521740
*/*01*  NOTES =  Each channel path in the I/O configuration must be  */ 00522730
*/*              specified on a CHPID macro instruction in order to  */ 00523720
*/*              be used.                                            */ 00524710
*/*                                                                  */ 00525700
*/*02*    DEPENDENCIES = None.                                       */ 00526690
*/*                                                                  */ 00527680
*/*02*    RESTRICTIONS = FOR HCD use only                            */ 00528670
*/*                                                                  */ 00529660
*/*01*  INPUT =                                                      */ 00530650
*/*               DESC=     description of channel path(s)       @M4A*/ 00531640
*/*               OS=       2 char hex value                     @M5A*/ 00532630
*/*               PART=                                              */ 00533620
*/*                 or                                               */ 00534610
*/*               PARTition=((p1,p2,..),(px,py,..),REC)              */ 00535600
*/*                          p1,p2,..  - partition access list       */ 00536590
*/*                          px,py,..  - partition candidate list    */ 00537580
*/*                          REC       - Reconfigurable (optional)   */ 00538570
*/*               NOTPART=  ((p1,p2,..),(px,py,..))              @LTA*/ 00539560
*/*                          p1,p2,..  - partitions which are    @LTA*/ 00540550
*/*                                      excluded from the       @LTA*/ 00541540
*/*                                      partition access list.  @LTA*/ 00542530
*/*                                      (0) is invalid          @LTA*/ 00543520
*/*                          px,py,..  - partitions which are    @LTA*/ 00544510
*/*                                      excluded from the       @LTA*/ 00545500
*/*                                      partition candidate list@LTA*/ 00546490
*/*                                      (optional)              @LTA*/ 00547480
*/*              (PARTition and NOTPART are mutually exclusive)  @LTA*/ 00548470
*/*             # PATH=   1 to 8 chpid numbers,                      */ 00549460
*/*                       1 or 2 hex digits for channel number       */ 00550450
*/*                       channel set : 0                            */ 00551440
*/*                                     1                            */ 00552430
*/*               SWITCH= 2 hex digits                               */ 00553420
*/*               SWPORT= 1 to 8 list entries (swid,portid)      @M4A*/ 00554410
*/*                       2 hex digits switch id,                @M4A*/ 00555400
*/*                       2 hex digits port id                   @M4A*/ 00556390
*/*               SHARED                                             */ 00557380
*/*               IOCLUSTER= 8 alphameric character sysplex name @M5A*/ 00558370
*/*             # TYPE= BL   - Block multiplexer channel             */ 00559360
*/*                     BY   - Byte multiplexer channel              */ 00560350
*/*                     CTC  - Channel to channel                    */ 00561340
*/*                     FX   - Fiber extended                        */ 00562330
*/*                     CVC  - Fiber extended                    @M1A*/ 00563320
*/*                     S    - Serial                                */ 00564310
*/*                     CNC  - Serial                            @M1A*/ 00565300
*/*                     IOC  - I/O Controller                    @H1A*/ 00566290
*/*                     CFR  - Coupling facility receiver channel@LTA*/ 00567280
*/*                     CFS  - Coupling facility sender channel  @LTA*/ 00568270
*/*                     CBY  - Byte Pacer channel path           @H3A*/ 00569260
*/*                     OSA  - Open Systems Adapter channel path @H3A*/ 00570250
*/*                     ISD  - Integrated System Device          @H5A*/ 00571240
*/*                     NTV  - New Test Vehicles chpid           @H8A*/ 00572230
*/*                     CBR  - Cluster Bus Receiver chpid        @H9A*/ 00573220
*/*                     CBS  - Cluster Bus Sender chpid          @H9A*/ 00574210
*/*                     ICR  - Internal CF receiver chpid        @H9A*/ 00575200
*/*                     ICS  - Internal CF sender chpid          @H9A*/ 00576190
*/*                     FC   - Fibre channel chpid               @HAA*/ 00577180
*/*                     FCV  - Fibre conversion chpid            @HAA*/ 00578170
*/*                     FTV  - Fibre test vehicle                @HAA*/ 00579160
*/*                     OSD  - OSD chpid                         @HBA*/ 00580150
*/*                     OSE  - OSE chpid                         @HBA*/ 00581140
*/*                     DSD  - Direct System Device chpid        @HCA*/ 00582130
*/*                     EIO  - Emulated I/O chpid                @HCA*/ 00583120
*/*                     CFP  - Peer ISC-3   chpid                @HDA*/ 00584110
*/*                     CBP  - Peer ICB     chpid                @HDA*/ 00585100
*/*                     ICP  - Peer IC-3    chpid                @HDA*/ 00586090
*/*                     IQD  - Internal Queued Direct Communicat @HEA*/ 00587080
*/*                     FCP  - Fibre Channel Protocol            @HEA*/ 00588070
*/*                TPATH= list of (proc,chpid <,cunum,devnum>) of    */ 00589060
*/*                            connected Chpids                  @M4A*/ 00590050
*/*             #  - Required keyword                                */ 00591040
*/*                                                                  */ 00592030
*/*01*  OUTPUT = List of channel path id numbers.                    */ 00593020
*/*                                                                  */ 00594010
*/********************************************************************* 00595000
*/*                                                                     00595990
.*                                                                      00596980
.SKIP    ANOP                                                           00597970
         GBLA  &SYSITRN           HCD statement number                  00598960
         GBLA  &$STRLEN           String length                    @L2A 00599950
         GBLB  &$ERR              Global error flag                @LBA 00600940
         GBLB  &INTERR            Global error flag                @M4A 00601930
         GBLC  &CWK               Character work variable          @M4A 00602920
         LCLA  &AWK               Arithmetic work variable              00603910
         LCLA  &AWK1              Arithmetic work variable              00604900
         LCLA  &L                 Maximum or required operand length    00605890
         LCLA  &LA                Maximum or required operand length    00606880
         LCLA  &LB                Maximum or required operand cnt  @04A 00607870
         LCLA  &L1                Maximum or required length       @M4A 00608860
         LCLA  &L2                Maximum or required length       @M4A 00609850
         LCLA  &L3                Maximum or required length       @M4A 00610840
         LCLA  &LEN               Actual operand length            @N3A 00611830
         LCLA  &COMMA             Index to comma in sublist entry       00612820
         LCLA  &MAXPATH           Maximum number of PATH id's           00613810
         LCLA  &NUMCHP            number of CHPIDs specfied             00614800
         LCLA  &SINDX             Starting index for CHPID              00615790
         LCLA  &NDX               Substring index                       00616780
         LCLA  &MAXSUB            Maximum number of sublist entries@LBA 00617770
         LCLA  &NSWPO             Number of entry switch ports     @M4A 00618760
         LCLA  &NSPAT             Number of elements in TPATH      @C2A 00619750
         LCLA  &NTPAT             Number of connected CHPIDs       @M4A 00620740
         LCLA  &PAASTRK           Count of PATH=**                      00621730
         LCLA  &SUB               Sublist element number                00622720
         LCLA  &TYP               TYPE flag                             00623710
         LCLA  &FLAG              Flag byte                             00624700
         LCLA  &CHNBIT            Flag byte for channel number          00625690
         LCLA  &ESWBIT            Flag byte for entry port mask    @M4A 00626680
         LCLA  &SWTF              Operand flag  - SWITCH           @LBC 00627670
         LCLA  &PARTF             Operand flag  - PARTITION        @LTA 00628660
         LCLA  &NPRTF             Operand flag  - NOTPART          @LTA 00629650
         LCLA  &SPLXF             Operand flag  - IOCLUSTER        @M5A 00630640
         LCLA  &PACT              Number of entries in partition access*00631630
                                  list                             @LBA 00632620
         LCLA  &PCCT              Number of entries in partition       *00633610
                                  candidate list                   @LBA 00634600
         LCLA  &UMODE             Channel path usage mode          @LBA 00635590
         LCLA  &AREC,&ASHR,&ADED  Usage mode flags                 @LBA 00636580
         LCLB  &ERROR             Error flag                            00637570
         LCLB  &NPPS              PATH parm follows new syntax     @P2A 00638560
         LCLB  &SINGLE            Only single list element         @M4A 00639550
         LCLC  &CNO               EBCDIC version of SYSITRN             00640540
         LCLC  &STRING            Work string                      @LBA 00641530
         LCLC  &POS               subentry indication              @LBA 00642520
         LCLC  &PATHID            Character sublist entry               00643510
         LCLC  &PACHID(8)         Chpid number from PATH sublist        00644500
         LCLC  &PACHAN(8)         Channel number from PATH sublist      00645490
         LCLC  &PACHSE(8)         Channel set from PATH sublist         00646480
         LCLC  &ESWPORT           Character sublist entry          @M4A 00647470
         LCLC  &ESWID             Character sublist entry          @M4A 00648460
         LCLC  &ESW(8)            Entry switch id set from SWPORT  @M4A 00649450
         LCLC  &EPROC             Procedure id                     @M4A 00650440
         LCLC  &ECHPID            Connected channel path id        @M4A 00651430
         LCLC  &ECUNUM            Connected control unit number    @M4A 00652420
         LCLC  &EDEVNO            Connected device number          @M4A 00653410
         LCLC  &EPR(8)            Processor ids from TPATH         @M4A 00654400
         LCLC  &ECHP(8)           Channel path ids from TPATH      @M4A 00655390
         LCLC  &ECUN(8)           Control unit number from TPATH   @M4A 00656380
         LCLC  &EDEV(8)           Device number from TPATH         @M4A 00657370
         LCLC  &EPORT(8)          Entry switch port id from SWPORT @M4A 00658360
         LCLC  &PACC(64)          Partition access list            @LBA 00659350
         LCLC  &PCAN(64)          Partition candidate list         @LBA 00660340
         LCLC  &TEMP              Work field                       @LBA 00661330
         LCLC  &DESCR             Description                      @N3A 00662320
         LCLC  &DSC               Description                      @L2A 00663310
.*                                                                      00664300
         ACTR  10000              Set for infinite loop control         00665290
&SWTF    SETA  128                SWITCH specified                      00666280
&PARTF   SETA  64                 PARTITION specified              @LTA 00667270
&NPRTF   SETA  32                 NOTPART specified                @LTA 00668260
&SPLXF   SETA  4                  IOCLUSTER specified              @M5A 00669250
&ADED    SETA  1                  Channel path is dedicated        @LBA 00670240
&AREC    SETA  2                  Channel path is reconfigurable   @LBA 00671230
&ASHR    SETA  3                  Channel path is shared           @LBA 00672220
&UMODE   SETA  &ADED              Assume that the channel path is      *00673210
                                  dedicated (default)              @LBA 00674200
.*                                                                      00675190
&SYMBOL  TXTHDR CHPID                                                   00676180
.*                                                                      00677170
.********************************************************************** 00678160
.*                                                                    * 00679150
.*       Determine if SHARED has been specified                       * 00680140
.*                                                                    * 00681130
.********************************************************************** 00682120
         AIF   (N'&SYSLIST EQ 0).XPOSPM    No positional parameter @LBA 00683110
         AIF   ('&SYSLIST(1)' NE 'SHARED').POS015  SHARED not spec @P3A 00684100
         AIF   (N'&SYSLIST EQ 1).POS020    SHARED specified        @P3A 00685090
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(2).'        @LBA 00686080
&ERROR   SETB  1                  Indicate error                   @LBA 00687070
         AGO   .XPOSPM            and continue                     @LBA 00688060
.POS015  ANOP  ,                                                        00689050
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @LBA 00690040
&ERROR   SETB  1                  Indicate error                   @LBA 00691030
         AGO   .XPOSPM            and continue                     @LBA 00692020
.*                                                                      00693010
.POS020  ANOP  ,                                                   @LBA 00694000
&UMODE   SETA  &ASHR              Indicate that "shared" has been      *00694990
                                  specified                        @LBA 00695980
.*                                                                      00696970
.XPOSPM  ANOP  ,                                                   @LBA 00697960
.*                                                                      00698950
.********************************************************************** 00699940
.*                                                                    * 00700930
.*                               (name,name,....,name)                * 00701920
.*       Validate PARTITION      (name,REC)                           * 00702910
.*                               ((name,name,..),(name,name,..),REC)  * 00703900
.*                                                                    * 00704890
.********************************************************************** 00705880
         AIF   ('&PARTITION' EQ '').PART500 PARTITION not specified@LBA 00706870
&FLAG    SETA  &FLAG+&PARTF           Indicate PARTITION specified @LTA 00707860
.*                                                                      00708850
&MAXSUB  SETA  64                     Maximum number of partitions @LBA 00709840
&L       SETA  8                      Maximum PARTITION length          00710830
&PACT    SETA  0                      Initialize number of entries in  *00711820
                                      partition access list        @LBA 00712810
&PCCT    SETA  0                      Initialize number of entries in  *00713800
                                      partition candidate list     @LBA 00714790
.*                                                                      00715780
         AIF   ('&PARTITION'(1,2) EQ '((').PART100 double parens ? @LBA 00716770
.*                                                                      00717760
.********************************************************************** 00718750
.*       Validate simple partition list                               * 00719740
.********************************************************************** 00720730
&STRING  SETC  ''                     Indicate handling part list  @P1A 00721720
         AIF   (N'&PARTITION GT &MAXSUB).PARTE01     Too many operands *00722710
                                      in partition list            @P1A 00723700
&SUB     SETA  1                      Address first sublist entry  @P1A 00724690
         AIF   ('&PARTITION(1)' NE '0').PART010 partition name     @P5A 00725680
         AIF   (N'&PARTITION EQ 1).XPART  PART=(0) specified       @P5A 00726670
&SUB     SETA  2                      Address 2nd sublist entry    @P5A 00727660
         AIF   (N'&PARTITION GT 2).PARTE05 PART=(0,name,...) spec. @P5A 00728650
         AIF   ('&PARTITION(2)' NE 'REC').PARTE03 not PART=(0,REC) @P5A 00729640
         AGO   .PART015               Test for SHARED parameter    @P5A 00730630
.PART010 ANOP  ,                                                   @P1A 00731620
         AIF   ('&PARTITION(&SUB)' EQ '').PARTE02  No partition name   *00732610
                                      specified                    @P1A 00733600
         AIF   (&SUB NE 2).PART020    processing 2nd operand ?     @P1A 00734590
         AIF   (('&PARTITION(2)' NE 'REC') OR (N'&PARTITION NE 2)).PART*00735580
               020                    handle partition list        @P1A 00736570
.PART015 ANOP  ,                                                   @P5A 00737560
         AIF   (&UMODE NE &ADED).PARTE04  report error if also "shared"*00738550
                                      was specified                @P1A 00739540
&UMODE   SETA  &AREC                  Indicate that channel path is    *00740530
                                      reconfigurable               @P1A 00741520
         AGO   .XPART                 and continue with next parameter *00742510
                                                                   @P1A 00743500
.*                                                                      00744490
.PART020 ANOP  ,                                                   @P1A 00745480
&POS     SETC  '&SUB'                 sub entry position           @P1A 00746470
         PARTTEST NAME=&PARTITION(&SUB),SUB=&POS                   @P1A 00747460
         AIF   (NOT &$ERR).PART030    Continue if no error detected@P1A 00748450
&ERROR   SETB  1                      Otherwise indicate error     @P1A 00749440
         AGO   .PART040               and continue                 @P1A 00750430
.*                                                                      00751420
.PART030 ANOP ,                                                    @P1A 00752410
&PACT    SETA  &PACT+1                Increment  number of entries in  *00753400
                                      partition access list        @P1A 00754390
&PACC(&PACT) SETC '&PARTITION(&SUB)'  Save partition name          @P1A 00755380
.*                                                                      00756370
.PART040 ANOP                         Process next partition       @P1A 00757360
&SUB     SETA &SUB+1                  Point to next sublist entry  @P1A 00758350
         AIF  (&SUB LE N'&PARTITION).PART010  More partition's ?   @P1A 00759340
         AGO   .XPART                 and continue with next parameter *00760330
                                                                   @P1A 00761320
.*                                                                      00762310
.********************************************************************** 00763300
.*       Loop to validate each sublist entry  in access list          * 00764290
.********************************************************************** 00765280
.PART100 ANOP  ,                                                   @P1A 00766270
&STRING  SETC  'ACCESS'               Indicate handling Access list@LBA 00767260
&SUB     SETA  3                      Sets subitem to 3            @P5A 00768250
         AIF   (N'&PARTITION GT 3).PARTE05  Too many operands      @LBA 00769240
         AIF   (N'&PARTITION(1) GT &MAXSUB).PARTE01  Too many operands *00770230
                                      in access list               @LBA 00771220
&SUB     SETA  1                      Address first sublist entry  @LBA 00772210
         AIF   ('&PARTITION(1,1)' EQ '0').PART200  Null access list@LBA 00773200
.PART110 ANOP  ,                                                   @LBA 00774190
         AIF   ('&PARTITION(1,&SUB)' EQ '').PARTE02  No partition name *00775180
                                                                   @LBA 00776170
&POS     SETC  '(1,'.'&SUB'.')'       sub entry position           @LBA 00777160
         PARTTEST NAME=&PARTITION(1,&SUB),SUB=&POS                 @LBA 00778150
         AIF   (NOT &$ERR).PART120    Continue if no error detected@LBA 00779140
&ERROR   SETB  1                      Otherwise indicate error     @LBA 00780130
         AGO   .PART130               and continue                 @LBA 00781120
.*                                                                      00782110
.PART120 ANOP ,                                                    @LBA 00783100
&PACT    SETA  &PACT+1                Increment  number of entries in  *00784090
                                      partition access list        @LBA 00785080
&PACC(&PACT) SETC '&PARTITION(1,&SUB)'  Save partition name        @LBA 00786070
.*                                                                      00787060
.PART130 ANOP                         Process next partition       @LBA 00788050
&SUB     SETA &SUB+1                  Point to next sublist entry  @LBA 00789040
         AIF  (&SUB LE N'&PARTITION(1)).PART110  More partition's  @LBA 00790030
.*                                                                      00791020
.********************************************************************** 00792010
.*       Loop to validate each sublist entry in candidate list        * 00793000
.********************************************************************** 00793990
.*       The second subparameter of the PARTITION parameter can be      00794980
.*       either a candidate list or REC                                 00795970
.*                                                                      00796960
.PART200 ANOP  ,                                                   @LBA 00797950
         AIF   ('&PARTITION(2)' EQ '').PART300 No 2nd subparameter @LBA 00798940
         AIF   (('&PARTITION(2)' NE 'REC') OR (N'&PARTITION NE 2)).PART*00799930
               210                    handle candidate list        @LBA 00800920
         AIF   (&UMODE NE &ADED).PARTE04  report error if also "shared"*00801910
                                      was specified                @LBA 00802900
&UMODE   SETA  &AREC                  Indicate that channel path is    *00803890
                                      reconfigurable               @LBA 00804880
         AGO   .XPART                 and continue with next parameter *00805870
                                                                   @LBA 00806860
.*                                                                      00807850
.PART210 ANOP  ,                                                   @LBA 00808840
&SUB     SETA  1                      Address first sublist entry  @LBA 00809830
&STRING  SETC  'CANDIDATE'            Indicate handling Candidate list *00810820
                                                                   @LBA 00811810
         AIF   (N'&PARTITION(2) GT &MAXSUB).PARTE01  Too many operands *00812800
                                      in candidate list            @LBA 00813790
         AIF   ('&PARTITION(2,1)' NE '=').PART250  Different candidate *00814780
                                      list specified               @LBA 00815770
.PART220 ANOP  ,                                                   @LBA 00816760
         AIF  (&PCCT GE &PACT).PART300  No more partitions in access   *00817750
                                      list                         @LBA 00818740
&PCCT    SETA  &PCCT+1                Increment number of entries in   *00819730
                                      partition candidate list     @LBA 00820720
&PCAN(&PCCT) SETC '&PACC(&PCCT)'      Save partition name          @LBA 00821710
         AGO   .PART220               and continue                 @LBA 00822700
.*                                                                      00823690
.PART250 ANOP  ,                                                   @LBA 00824680
         AIF   ('&PARTITION(2,&SUB)' EQ '').PARTE02  No partition name *00825670
                                      specified                    @LBA 00826660
&POS     SETC  '(2,'.'&SUB'.')'       sub entry position           @LBA 00827650
         PARTTEST NAME=&PARTITION(2,&SUB),SUB=&POS                 @LBA 00828640
         AIF   (NOT &$ERR).PART260    Continue if no error detected@LBA 00829630
&ERROR   SETB  1                      Otherwise indicate error     @LBA 00830620
         AGO   .PART270               and continue                 @LBA 00831610
.*                                                                      00832600
.PART260 ANOP ,                                                    @LBA 00833590
&PCCT    SETA  &PCCT+1                Increment  number of entries in  *00834580
                                      partition candidate list     @LBA 00835570
&PCAN(&PCCT) SETC '&PARTITION(2,&SUB)'  Save partition name        @LBA 00836560
.*                                                                      00837550
.PART270 ANOP                         Process next partition       @LBA 00838540
&SUB     SETA &SUB+1                  Point to next sublist entry  @LBA 00839530
         AIF  (&SUB LE N'&PARTITION(2)).PART250  More partition's  @LBA 00840520
.*                                                                      00841510
.********************************************************************** 00842500
.*            Process 3rd subparameter (REC), if specified            * 00843490
.********************************************************************** 00844480
.PART300 ANOP  ,                                                   @LBA 00845470
&SUB     SETA  3                      Point to next sublist entry  @LBA 00846460
         AIF   ('&PARTITION(3)' EQ '').XPART    REC not specified  @LBA 00847450
         AIF   ('&PARTITION(3)' NE 'REC').PARTE03  REC not spec'ed @LBA 00848440
         AIF   (&UMODE NE &ADED).PARTE04  report error if also "shared"*00849430
                                      was specified                @LBA 00850420
&UMODE   SETA  &AREC                  Indicate that channel path is    *00851410
                                      reconfigurable               @LBA 00852400
         AGO  .XPART                  and continue                 @LBA 00853390
.*                                                                      00854380
.********************************************************************** 00855370
.*                                                                    * 00856360
.*       Validate PART parameter  ((name,name,..),(name,name,..),REC) * 00857350
.*                                                                    * 00858340
.*       This  routine must follow the PARTITION routine, since       * 00859330
.*       branches are made to this routine to issue error messages.   * 00860320
.*                                                                    * 00861310
.********************************************************************** 00862300
.PART500 ANOP                                                      @LBA 00863290
         AIF   ('&PART' EQ '').XPART   PARTITION not specified     @LBA 00864280
&FLAG    SETA  &FLAG+&PARTF           Indicate PARTITION specified @LTA 00865270
.*                                                                      00866260
&MAXSUB  SETA  64                     Maximum number of partitions @LBA 00867250
&L       SETA  8                      Maximum PARTITION length          00868240
&PACT    SETA  0                      Initialize number of entries in  *00869230
                                      partition access list        @LBA 00870220
&PCCT    SETA  0                      Initialize number of entries in  *00871210
                                      partition candidate list     @LBA 00872200
         AIF   ('&PART'(1,2) EQ '((').PART600  double parens ?     @LBA 00873190
.*                                                                      00874180
.********************************************************************** 00875170
.*       Validate simple partition list                               * 00876160
.********************************************************************** 00877150
&STRING  SETC  ''                     Indicate handling part list  @P1A 00878140
         AIF   (N'&PART GT &MAXSUB).PARTE01     Too many operands      *00879130
                                      in partition list            @P1A 00880120
&SUB     SETA  1                      Address first sublist entry  @P1A 00881110
         AIF   ('&PART(1)' NE '0').PART510 partition name          @P5A 00882100
         AIF   (N'&PART EQ 1).XPART       PART=(0) specified       @P5A 00883090
&SUB     SETA  2                      Address 2nd sublist entry    @P5A 00884080
         AIF   (N'&PART GT 2).PARTE05 PART=(0,name,...) specified  @P5A 00885070
         AIF   ('&PART(2)' NE 'REC').PARTE03 not PART=(0,REC)      @P5A 00886060
         AGO   .PART515               Test for SHARED parameter    @P5A 00887050
.PART510 ANOP  ,                                                   @P1A 00888040
         AIF   ('&PART(&SUB)' EQ '').PARTE02   No partition name       *00889030
                                      specified                    @P1A 00890020
         AIF   (&SUB NE 2).PART520    processing 2nd operand ?     @P1A 00891010
         AIF   (('&PART(2)' NE 'REC') OR (N'&PART NE 2)).PART520       *00892000
                                      handle partition list        @P1A 00892990
.PART515 ANOP  ,                                                   @P5A 00893980
         AIF   (&UMODE NE &ADED).PARTE04  report error if also "shared"*00894970
                                      was specified                @P1A 00895960
&UMODE   SETA  &AREC                  Indicate that channel path is    *00896950
                                      reconfigurable               @P1A 00897940
         AGO   .XPART                 and continue with next parameter *00898930
                                                                   @P1A 00899920
.*                                                                      00900910
.PART520 ANOP  ,                                                   @P1A 00901900
&POS     SETC  '&SUB'                 sub entry position           @P1A 00902890
         PARTTEST NAME=&PART(&SUB),SUB=&POS                        @P1A 00903880
         AIF   (NOT &$ERR).PART530    Continue if no error detected@P1A 00904870
&ERROR   SETB  1                      Otherwise indicate error     @P1A 00905860
         AGO   .PART540               and continue                 @P1A 00906850
.*                                                                      00907840
.PART530 ANOP ,                                                    @P1A 00908830
&PACT    SETA  &PACT+1                Increment  number of entries in  *00909820
                                      partition access list        @P1A 00910810
&PACC(&PACT) SETC '&PART(&SUB)'       Save partition name          @P1A 00911800
.*                                                                      00912790
.PART540 ANOP                         Process next partition       @P1A 00913780
&SUB     SETA &SUB+1                  Point to next sublist entry  @P1A 00914770
         AIF  (&SUB LE N'&PART).PART510   More partition's ?       @P1A 00915760
         AGO   .XPART                 and continue with next parameter *00916750
                                                                   @P1A 00917740
.*                                                                      00918730
.********************************************************************** 00919720
.*       Loop to validate each sublist entry  in access list          * 00920710
.********************************************************************** 00921700
.PART600 ANOP ,                                                    @P1A 00922690
&STRING  SETC  'ACCESS'               Indicate handling Access list@LBA 00923680
&SUB     SETA  3                      Address 3rd sublist entry    @P5A 00924670
         AIF   (N'&PART GT 3).PARTE05  Too many operands           @LBA 00925660
         AIF   (N'&PART(1) GT &MAXSUB).PARTE01  Too many operands      *00926650
                                      in access list               @LBA 00927640
&SUB     SETA  1                      Address first sublist entry  @LBA 00928630
         AIF   ('&PART(1,1)' EQ '0').PART700  Null access list     @LBA 00929620
.PART610 ANOP  ,                                                   @LBA 00930610
         AIF   ('&PART(1,&SUB)' EQ '').PARTE02  No partition name  @LBA 00931600
&POS     SETC  '(1,'.'&SUB'.')'       sub entry position           @LBA 00932590
         PARTTEST NAME=&PART(1,&SUB),SUB=&POS                      @LBA 00933580
         AIF   (NOT &$ERR).PART620    Continue if no error detected@LBA 00934570
&ERROR   SETB  1                      Otherwise indicate error     @LBA 00935560
         AGO   .PART630               and continue                 @LBA 00936550
.*                                                                      00937540
.PART620 ANOP ,                                                    @LBA 00938530
&PACT    SETA  &PACT+1                Increment  number of entries in  *00939520
                                      partition access list        @LBA 00940510
&PACC(&PACT) SETC '&PART(1,&SUB)'     Save partition name          @LBA 00941500
.*                                                                      00942490
.PART630 ANOP                         Process next partition       @LBA 00943480
&SUB     SETA &SUB+1                  Point to next sublist entry  @LBA 00944470
         AIF  (&SUB LE N'&PART(1)).PART610  More partition's ....  @LBA 00945460
.*                                                                      00946450
.********************************************************************** 00947440
.*       Loop to validate each sublist entry in candidate list        * 00948430
.********************************************************************** 00949420
.*       The second subparameter of the PART parameter can be           00950410
.*       either a candidate list or REC                                 00951400
.*                                                                      00952390
.PART700 ANOP  ,                                                   @LBA 00953380
         AIF   ('&PART(2)' EQ '').PART800 No 2nd subparameter      @LBA 00954370
         AIF   (('&PART(2)' NE 'REC') OR (N'&PART NE 2)).PART710       *00955360
                                      handle candidate list        @LBA 00956350
         AIF   (&UMODE NE &ADED).PARTE04  report error if also "shared"*00957340
                                      was specified                @LBA 00958330
&UMODE   SETA  &AREC                  Indicate that channel path is    *00959320
                                      reconfigurable               @LBA 00960310
         AGO   .XPART                 and continue with next parameter *00961300
                                                                   @LBA 00962290
.*                                                                      00963280
.PART710 ANOP  ,                                                   @LBA 00964270
&SUB     SETA  1                      Address first sublist entry  @LBA 00965260
&STRING  SETC  'CANDIDATE'            Indicate handling Candidate list *00966250
                                                                   @LBA 00967240
         AIF   (N'&PART(2) GT &MAXSUB).PARTE01  Too many operands      *00968230
                                      in candidate list            @LBA 00969220
         AIF   ('&PART(2,1)' NE '=').PART750  Different candidate      *00970210
                                      list specified               @LBA 00971200
.PART720 ANOP  ,                                                   @LBA 00972190
         AIF  (&PCCT GE &PACT).PART800  No more partitions in access   *00973180
                                      list                         @LBA 00974170
&PCCT    SETA  &PCCT+1                Increment number of entries in   *00975160
                                      partition candidate list     @LBA 00976150
&PCAN(&PCCT) SETC '&PACC(&PCCT)'      Save partition name          @LBA 00977140
         AGO   .PART720               and continue                 @LBA 00978130
.*                                                                      00979120
.PART750 ANOP  ,                                                   @LBA 00980110
         AIF   ('&PART(2,&SUB)' EQ '').PARTE02  No partition name      *00981100
                                      specified                    @LBA 00982090
&POS     SETC  '(2,'.'&SUB'.')'       sub entry position           @LBA 00983080
         PARTTEST NAME=&PART(2,&SUB),SUB=&POS                      @LBA 00984070
         AIF   (NOT &$ERR).PART760    Continue if no error detected@LBA 00985060
&ERROR   SETB  1                      Otherwise indicate error     @LBA 00986050
         AGO   .PART770               and continue                 @LBA 00987040
.*                                                                      00988030
.PART760 ANOP ,                                                    @LBA 00989020
&PCCT    SETA  &PCCT+1                Increment  number of entries in  *00990010
                                      partition candidate list     @LBA 00991000
&PCAN(&PCCT) SETC '&PART(2,&SUB)'     Save partition name          @LBA 00991990
.*                                                                      00992980
.PART770 ANOP                         Process next partition       @LBA 00993970
&SUB     SETA &SUB+1                  Point to next sublist entry  @LBA 00994960
         AIF  (&SUB LE N'&PART(2)).PART750  More partition's       @LBA 00995950
.*                                                                      00996940
.********************************************************************** 00997930
.*            Process 3rd subparameter (REC), if specified            * 00998920
.********************************************************************** 00999910
.PART800 ANOP  ,                                                   @LBA 01000900
&SUB     SETA  3                      Point to next sublist entry  @LBA 01001890
         AIF   ('&PART(3)' EQ '').XPART    REC not specified       @LBA 01002880
         AIF   ('&PART(3)' NE 'REC').PARTE03  REC not spec'ed      @LBA 01003870
         AIF   (&UMODE NE &ADED).PARTE04  report error if also "shared"*01004860
                                      was specified                @LBA 01005850
&UMODE   SETA  &AREC                  Indicate that channel path is    *01006840
                                      reconfigurable               @LBA 01007830
         AGO  .XPART                  and continue                 @LBA 01008820
.*                                                                      01009810
.PARTE01 ANOP  ,                                                   @LBA 01010800
         MNOTE 8,'015 PARTITION &STRING LIST EXCEEDS &MAXSUB ENTRIES.' *01011790
                                                                   @LBA 01012780
&ERROR   SETB  1                      Indicates error              @LBA 01013770
         AGO   .XPART                 and continue                 @LBA 01014760
.*                                                                      01015750
.PARTE02 ANOP  ,                                                   @LBA 01016740
         MNOTE 8,'017 PARTITION NAME REQUIRED IN SUBLIST ENTRY &SUB OF *01017730
               &STRING LIST.'                                      @LBA 01018720
&ERROR   SETB  1                      Indicates error              @LBA 01019710
         AGO   .XPART                 and continue                 @LBA 01020700
.*                                                                      01021690
.PARTE03 ANOP  ,                                                   @LBA 01022680
         MNOTE 8,'003 PARTITION SUBLIST ENTRY &SUB IS INVALID - &PARTIT*01023670
               ION(3).'                                            @LBA 01024660
&ERROR   SETB  1                      Indicates error              @LBA 01025650
         AGO   .XPART                 and continue                 @LBA 01026640
.*                                                                      01027630
.PARTE04 ANOP  ,                                                   @LBA 01028620
         MNOTE 8,'053 CONFLICTING CHANNEL PATH OPERATION MODES SPECIFIE*01029610
               D.'                                                 @LBA 01030600
&ERROR   SETB  1                      Indicates error              @LBA 01031590
         AGO   .XPART                 and continue                 @LBA 01032580
.*                                                                      01033570
.PARTE05 ANOP  ,                                                   @LBA 01034560
         MNOTE 8,'015 PARTITION PARAMETER EXCEEDS &SUB SUBLIST ENTRIES.*01035550
               '                                                   @P5C 01036540
&ERROR   SETB  1                      Indicates error              @LBA 01037530
         AGO   .XPART                 and continue                 @LBA 01038520
.*                                                                      01039510
.XPART   ANOP  ,                      End of handling parameter    @LBA 01040500
.*                                                                      01041490
.********************************************************************** 01042480
.*       Set CHPID operation mode to "Shared"  if more than one       * 01043470
.*       partition is defined in the access list.                     * 01044460
.********************************************************************** 01045450
         AIF  (&PACT LE 1).XPART2     Only one partition in access list*01046440
                                                                   @LBA 01047430
         AIF   (&UMODE NE &ADED).XPART2  operation mode "shared" or    *01048420
                                      "reconfigurable" ?           @LBA 01049410
&UMODE   SETA  &ASHR                  Indicate that channel path is    *01050400
                                      shared                       @LBA 01051390
         AGO   .XPARTX                and continue                 @LBA 01052380
.*                                                                      01053370
.********************************************************************** 01054360
.*       Set CHPID operation mode to "REC" if access list is empty    * 01055350
.*       and candidate list contains 1 entry and operation mode is    * 01056340
.*       still "dedicated".                                       @LTA* 01057330
.********************************************************************** 01058320
.XPART2  ANOP                                                           01059310
         AIF  (&PCCT EQ 0).XPARTX     Candidate list empty ?       @LBA 01060300
         AIF  (&PACT NE 0).XPARTX     Access list not empty?       @LTA 01061290
         AIF  (&PCCT GT 1).XPARTX     Candidate list > 1?          @LTA 01062280
         AIF   (&UMODE NE &ADED).XPARTX  operation mode "shared" or    *01063270
                                      "reconfigurable" ?           @LBA 01064260
&UMODE   SETA  &AREC                  Indicate that channel path is    *01065250
                                      reconfigurable               @LBA 01066240
.*                                                                      01067230
.XPARTX  ANOP  ,                      End of handling PARTITION    @LBA 01068220
.*                                                                      01069210
.*                                                                      01070200
.********************************************************************** 01071190
.*                                                                    * 01072180
.*       Validate NOTPART parameter ((name,name,..),(name,name,...))  * 01073170
.*                                                                @LTA* 01074160
.********************************************************************** 01075150
.NPRT500 ANOP                                                      @LTA 01076140
         AIF   ('&NOTPART' EQ '').XNPRTX  NOTPART not specified    @LTA 01077130
&FLAG    SETA  &FLAG+&NPRTF           Indicate NOTPART specified   @LTA 01078120
         AIF   ((('&PART' NE '') OR ('&PARTITION' NE '')) AND          *01079110
               ('&NOTPART' NE '')).NPRTE06  invalid combination    @LTA 01080100
.*                                                                      01081090
&MAXSUB  SETA  64                     Maximum number of partitions @LTA 01082080
&L       SETA  8                      Maximum PARTITION length     @LTA 01083070
&PACT    SETA  0                      Initialize number of entries in  *01084060
                                      partition access exclude list@LTA 01085050
&PCCT    SETA  0                      Initialize number of entries in  *01086040
                                      partition candidate exclude  @LTA 01087030
         AIF   ('&NOTPART'(1,2) EQ '((').NPRT600 double parens ?   @LTA 01088020
.*                                                                      01089010
.********************************************************************** 01090000
.*       Validate simple partition list                               * 01090990
.********************************************************************** 01091980
&STRING  SETC  ''                     Indicate handling part list  @LTA 01092970
         AIF   (N'&NOTPART GT &MAXSUB).NPRTE01  Too many operands      *01093960
                                      in partition list            @LTA 01094950
&SUB     SETA  1                      Address first sublist entry  @LTA 01095940
         AIF   (('&NOTPART(&SUB)' EQ '0') AND                          *01096930
               (N'&NOTPART EQ 1)).NPRT800        Null access list  @P7C 01097920
.NPRT510 ANOP  ,                                                   @LTA 01098910
         AIF   ('&NOTPART(&SUB)' EQ '').NPRTE02 No partition name      *01099900
                                      specified                    @LTA 01100890
.*                                                                      01101880
.NPRT520 ANOP  ,                                                   @LTA 01102870
&POS     SETC  '&SUB'                 sub entry position           @LTA 01103860
         PARTTEST NAME=&NOTPART(&SUB),SUB=&POS                     @LTA 01104850
         AIF   (NOT &$ERR).NPRT530    Continue if no error detected@LTA 01105840
&ERROR   SETB  1                      Otherwise indicate error     @LTA 01106830
         AGO   .NPRT540               and continue                 @LTA 01107820
.*                                                                      01108810
.NPRT530 ANOP ,                                                    @LTA 01109800
&PACT    SETA  &PACT+1                Increment  number of entries in  *01110790
                                      partition access list        @LTA 01111780
&PACC(&PACT) SETC '&NOTPART(&SUB)'    Save partition name          @LTA 01112770
.*                                                                      01113760
.NPRT540 ANOP                         Process next partition       @LTA 01114750
&SUB     SETA &SUB+1                  Point to next sublist entry  @LTA 01115740
         AIF  (&SUB LE N'&NOTPART).NPRT510   More partition's ?    @LTA 01116730
         AGO   .XNPRT                 and continue with next parameter *01117720
                                                                   @LTA 01118710
.*                                                                      01119700
.********************************************************************** 01120690
.*       Loop to validate each sublist entry  in access list          * 01121680
.********************************************************************** 01122670
.NPRT600 ANOP ,                                                    @LTA 01123660
&STRING  SETC  'ACCESS'               Indicate handling Access list@LTA 01124650
         AIF   (N'&NOTPART GT 2).NPRTE05 Too many operands         @LTA 01125640
         AIF   (N'&NOTPART(1) GT &MAXSUB).NPRTE01 Too many operands    *01126630
                                      in access list               @LTA 01127620
&SUB     SETA  1                      Address first sublist entry  @LTA 01128610
         AIF   ('&NOTPART(1,1)' EQ '0').NPRT700 Null access list   @P4C 01129600
.NPRT610 ANOP  ,                                                   @LTA 01130590
         AIF   ('&NOTPART(1,&SUB)' EQ '').NPRTE02 No partition name@LTA 01131580
&POS     SETC  '(1,'.'&SUB'.')'       sub entry position           @LTA 01132570
         PARTTEST NAME=&NOTPART(1,&SUB),SUB=&POS                   @LTA 01133560
         AIF   (NOT &$ERR).NPRT620    Continue if no error detected@LTA 01134550
&ERROR   SETB  1                      Otherwise indicate error     @LTA 01135540
         AGO   .NPRT630               and continue                 @LTA 01136530
.*                                                                      01137520
.NPRT620 ANOP ,                                                    @LTA 01138510
&PACT    SETA  &PACT+1                Increment  number of entries in  *01139500
                                      partition access list        @LTA 01140490
&PACC(&PACT) SETC '&NOTPART(1,&SUB)'  Save partition name          @LTA 01141480
.*                                                                      01142470
.NPRT630 ANOP                         Process next partition       @LTA 01143460
&SUB     SETA &SUB+1                  Point to next sublist entry  @LTA 01144450
         AIF  (&SUB LE N'&NOTPART(1)).NPRT610  More partition's .. @LTA 01145440
.*                                                                      01146430
.********************************************************************** 01147420
.*       Loop to validate each sublist entry in candidate list        * 01148410
.********************************************************************** 01149400
.*       The second subparameter of the NOTPART parameter must be       01150390
.*       the candidate exclude list                                     01151380
.*                                                                      01152370
.NPRT700 ANOP  ,                                                   @LTA 01153360
         AIF   ('&NOTPART(2)' EQ '').NPRT800 No 2nd subparameter   @LTA 01154350
.*                                                                      01155340
.NPRT710 ANOP  ,                                                   @LTA 01156330
&SUB     SETA  1                      Address first sublist entry  @LTA 01157320
&STRING  SETC  'CANDIDATE'            Indicate handling Candidate list *01158310
                                                                   @LTA 01159300
         AIF   (N'&NOTPART(2) GT &MAXSUB).NPRTE01 Too many operands    *01160290
                                      in candidate list            @LTA 01161280
         AIF   (('&NOTPART(2,1)' EQ '0') OR (('&NOTPART(1,1)' EQ '0') A*01162270
               ND ('&NOTPART(2,1)' EQ '='))).NPRTE04 Empty candidate    01163260
*                                      list                        @P4C 01164250
         AIF   ('&NOTPART(2,1)' NE '=').NPRT750 Different candidate    *01165240
                                      list specified               @LTA 01166230
.NPRT720 ANOP  ,                                                   @LTA 01167220
         AIF  (&PCCT GE &PACT).NPRT800  No more partitions in access   *01168210
                                      list                         @LTA 01169200
&PCCT    SETA  &PCCT+1                Increment number of entries in   *01170190
                                      partition candidate list     @LTA 01171180
&PCAN(&PCCT) SETC '&PACC(&PCCT)'      Save partition name          @LTA 01172170
         AGO   .NPRT720               and continue                 @LTA 01173160
.*                                                                      01174150
.NPRT750 ANOP  ,                                                   @LTA 01175140
         AIF   ('&NOTPART(2,&SUB)' EQ '').NPRTE02 No partition name    *01176130
                                      specified                    @LTA 01177120
&POS     SETC  '(2,'.'&SUB'.')'       sub entry position           @LTA 01178110
         PARTTEST NAME=&NOTPART(2,&SUB),SUB=&POS                   @LTA 01179100
         AIF   (NOT &$ERR).NPRT760    Continue if no error detected@LTA 01180090
&ERROR   SETB  1                      Otherwise indicate error     @LTA 01181080
         AGO   .NPRT770               and continue                 @LTA 01182070
.*                                                                      01183060
.NPRT760 ANOP ,                                                    @LTA 01184050
&PCCT    SETA  &PCCT+1                Increment  number of entries in  *01185040
                                      partition candidate list     @LTA 01186030
&PCAN(&PCCT) SETC '&NOTPART(2,&SUB)'  Save partition name          @LTA 01187020
.*                                                                      01188010
.NPRT770 ANOP                         Process next partition       @LTA 01189000
&SUB     SETA &SUB+1                  Point to next sublist entry  @LTA 01189990
         AIF  (&SUB LE N'&NOTPART(2)).NPRT750  More partition's    @LTA 01190980
.*                                                                      01191970
.********************************************************************** 01192960
.*            NOTPART keyword processed                               * 01193950
.********************************************************************** 01194940
.NPRT800 ANOP  ,                                                   @LTA 01195930
         AGO  .XNPRT                  and continue                 @LTA 01196920
.*                                                                      01197910
.NPRTE01 ANOP  ,                                                   @LTA 01198900
         MNOTE 8,'015 NOTPART &STRING LIST EXCEEDS &MAXSUB ENTRIES.'   *01199890
                                                                   @LTA 01200880
&ERROR   SETB  1                      Indicates error              @LTA 01201870
         AGO   .XNPRT                 and continue                 @LTA 01202860
.*                                                                      01203850
.NPRTE02 ANOP  ,                                                   @LTA 01204840
         MNOTE 8,'017 PARTITION NAME REQUIRED IN SUBLIST ENTRY &SUB OF *01205830
               &STRING LIST.'                                      @LTA 01206820
&ERROR   SETB  1                      Indicates error              @LTA 01207810
         AGO   .XNPRT                 and continue                 @LTA 01208800
.*                                                                      01209790
.NPRTE04 ANOP  ,                                                   @LTA 01210780
         MNOTE 8,'053 EMPTY CANDIDATE LIST IS NOT ALLOWED FOR NOTPART P*01211770
               ARAMETER.'                                          @P4C 01212760
&ERROR   SETB  1                      Indicates error              @LTA 01213750
         AGO   .XNPRT                 and continue                 @LTA 01214740
.*                                                                      01215730
.NPRTE05 ANOP  ,                                                   @LTA 01216720
         MNOTE 8,'015 NOTPART PARAMETER EXCEEDS 2 SUBLIST ENTRIES.'     01217710
&ERROR   SETB  1                      Indicates error              @LTA 01218700
         AGO   .XNPRT                 and continue                 @LTA 01219690
.*                                                                      01220680
.NPRTE06 ANOP  ,                                                   @LTA 01221670
         MNOTE 8,'051 NOTPART PARAMETER AND PARTITION PARAMETER ARE MUT*01222660
               UALLY EXCLUSIVE.'                                   @LTA 01223650
&ERROR   SETB  1                      Indicates error              @LTA 01224640
         AGO   .XNPRT                 and continue                 @LTA 01225630
.*                                                                      01226620
.XNPRT   ANOP  ,                      End of handling parameter    @LTA 01227610
.*                                                                      01228600
.********************************************************************** 01229590
.*       Set CHPID operation mode to "Shared"  if NOTPART is          * 01230580
.*       defined.                                                     * 01231570
.********************************************************************** 01232560
         AIF  ('&NOTPART' EQ '').XNPRTX NOTPART not specified      @LTA 01233550
&UMODE   SETA  &ASHR                  Indicate that channel path is    *01234540
                                      shared                       @LTA 01235530
         AGO   .XNPRTX                and continue                 @LTA 01236520
.*                                                                      01237510
.*                                                                      01238500
.XNPRTX  ANOP  ,                      End of handling NOTPART      @LTA 01239490
.*                                                                      01240480
.********************************************************************** 01241470
.*                                                                    * 01242460
.*       Validate OS                  2 char hex value            @M5A* 01243450
.*                                                                    * 01244440
.********************************************************************** 01245430
.CKOS    ANOP                                                           01246420
         AIF   ('&OS' EQ '').XOS             OS not specified      @M5A 01247410
&L       SETA  2                      Hex value length             @M5A 01248400
         AIF   (K'&OS NE &L).NOSE01   Length must be correct       @M5A 01249390
         HEXCHECK STRING=&OS          Check next hex value         @M5A 01250380
         AIF   (&$ERR).NOSE02         Invalid character            @M5A 01251370
         AGO   .XOS                   Check next keyword           @M5A 01252360
.NOSE01  ANOP  ,                                                   @M5A 01253350
         MNOTE 8,'015 OS PARAMETER IS NOT &L CHARACTERS.'          @M5A 01254340
&ERROR   SETB  1                      Indicates error              @M5A 01255330
         AGO   .XOS                   Check next keyword           @M5A 01256320
.*                                                                      01257310
.NOSE02  ANOP  ,                                                   @M5A 01258300
         MNOTE 8,'047 INVALID HEX DIGIT ''&CWK'' IN OS PARAMTER.'  @M5A 01259290
&ERROR   SETB  1                      Indicates error              @M5A 01260280
         AGO   .XOS                   Check next keyword           @M5A 01261270
.*                                                                      01262260
.XOS     ANOP  ,                                                   @M5A 01263250
.*                                                                      01264240
.********************************************************************** 01265230
.*                                                                    * 01266220
.*       Validate IOCLUSTER parameter (name)                          * 01267210
.*                                                                @M5A* 01268200
.********************************************************************** 01269190
.SPLX500 ANOP                                                      @M5A 01270180
         AIF   ('&IOCLUSTER' EQ '').XSPLXX SYSPLEX not specified   @M5A 01271170
&FLAG    SETA  &FLAG+&SPLXF           Indicate SYSPLEX specified   @M5A 01272160
         AIF   (('&PART' NE '') OR ('&PARTITION' NE '') OR             *01273150
               ('&NOTPART' NE '')).SPLXE06  invalid combination    @M5A 01274140
.*                                                                      01275130
&L       SETA  8                      Maximum SYSPLEX length       @M5A 01276120
&PACT    SETA  0                      Initialize number of entries in  *01277110
                                      partition access list        @M5A 01278100
.*                                                                      01279090
.********************************************************************** 01280080
.*       Validate simple partition list                               * 01281070
.********************************************************************** 01282060
         AIF   (K'&IOCLUSTER GT &L).SPLXE02 Operand value too long @M5A 01283050
         ALPHANX STRING=&IOCLUSTER         Syntax check of name    @M5A 01284040
         AIF   (NOT &INTERR).SPLX120   Continue when no error      @M5A 01285030
&ERROR   SETB  1                       Otherwise indicate error    @M5A 01286020
         AGO   .SPLXE03                and stop                    @M5A 01287010
.*                                                                 @M5A 01288000
.SPLX120 ANOP  ,                                                   @M5A 01288990
&PACT    SETA  &PACT+1                Increment  number of entries in  *01289980
                                      partition access list        @M5A 01290970
&PACC(&PACT) SETC '&IOCLUSTER'        Save sysplex name            @M5A 01291960
.*                                                                      01292950
.********************************************************************** 01293940
.*            SYSPLEX keyword processed                               * 01294930
.********************************************************************** 01295920
.SPLX800 ANOP  ,                                                   @M5A 01296910
         AGO  .XSPLXX                 and continue                 @M5A 01297900
.*                                                                      01298890
.SPLXE02 ANOP  ,                                                   @M5A 01299880
         MNOTE 8,'015 SYSPLEX NAME &IOCLUSTER EXCEEDS &L CHARACTERS.'  *01300870
                                                                   @M5A 01301860
&ERROR   SETB  1                      Indicates error              @M5A 01302850
         AGO   .XSPLXX                and continue                 @M5A 01303840
.*                                                                      01304830
.SPLXE03 ANOP  ,                                                   @M5A 01305820
         MNOTE 8,'053 SYSPLEX NAME &IOCLUSTER IS NOT ALPHANUMERIC.'    *01306810
                                                                   @M5A 01307800
&ERROR   SETB  1                      Indicates error              @M5A 01308790
         AGO   .XSPLXX                and continue                 @M5A 01309780
.*                                                                      01310770
.SPLXE06 ANOP  ,                                                   @M5A 01311760
         MNOTE 8,'051 NOTPART, PARTITION AND SYSPLEX PARAMETERS ARE MUT*01312750
               UALLY EXCLUSIVE.'                                   @M5A 01313740
&ERROR   SETB  1                      Indicates error              @M5A 01314730
         AGO   .XSPLXX                and continue                 @M5A 01315720
.*                                                                      01316710
.XSPLXX  ANOP  ,                      End of handling parameter    @M5A 01317700
.*                                                                      01318690
.********************************************************************** 01319680
.*                                                                    * 01320670
.*       Validate SWITCH              2 hex digits, 00..FF            * 01321660
.*                                                                    * 01322650
.********************************************************************** 01323640
&L       SETA  2                         Required SWITCH length         01324630
         AIF   ('&SWITCH' EQ '').XSWITCH SWITCH not specified           01325620
&FLAG    SETA  &FLAG+&SWTF               Indicate SWITCH specified      01326610
         AIF (N'&SWITCH GT 1).SWTSUBL    Operand is in sublist format   01327600
         AIF (K'&SWITCH EQ &L).SWTLEN    Length of SWITCH (no parens)   01328590
         MNOTE 8,'022 SWITCH PARAMETER MUST BE &L DIGITS.'              01329580
&ERROR   SETB 1                          Indicate error                 01330570
.SWTLEN  ANOP                                                           01331560
&NDX     SETA 1                          Point to first digit           01332550
.*--------------------------------------------------------------------* 01333540
.*       Loop to validate each number in the SWITCH                   * 01334530
.*--------------------------------------------------------------------* 01335520
.SWTLOOP ANOP                                                           01336510
         AIF ('&SWITCH'(&NDX,1) LT 'A').BADSWT   Invalid digit          01337500
         AIF ('&SWITCH'(&NDX,1) LE 'F').GOODSWT  Hex digit (A-F)        01338490
         AIF ('&SWITCH'(&NDX,1) LT '0').BADSWT   Invalid digit          01339480
         AIF ('&SWITCH'(&NDX,1) LE '9').GOODSWT  Hex digit (0-9)        01340470
.BADSWT  ANOP                            Invalid character in SWITCH    01341460
&CWK     SETC '&SWITCH'(&NDX,1)          Isolate invalid character      01342450
         MNOTE 8,'021 INVALID HEX DIGIT ''&CWK'' IN SWITCH PARAMETER.'  01343440
&ERROR   SETB 1                          Indicate error                 01344430
.GOODSWT ANOP                                                           01345420
&NDX     SETA  &NDX+1                    Point to next digit            01346410
         AIF (&NDX LE K'&SWITCH).SWTLOOP Check next digit               01347400
         AGO  .XSWITCH                   Check TYPE keyword             01348390
.*                                                                      01349380
.SWTSUBL MNOTE 8,'014 SWITCH PARAMETER MAY NOT BE A SUBLIST.'           01350370
&ERROR   SETB 1                          Indicate error                 01351360
.*                                                                      01352350
.XSWITCH ANOP  ,                                                   @P2A 01353340
.*                                                                      01354330
.********************************************************************** 01355320
.*                                                                    * 01356310
.*       Validate PATH       1 to &MAXPATH chpid's                    * 01357300
.*                           Only checks for 2 digit chpid number.    * 01358290
.*                           Ignores PATH=**                          * 01359280
.*                           Channel number 0..1F                     * 01360270
.*                           Channel set  0|1                         * 01361260
.*                                                                    * 01362250
.*    EMIF capable processors support an additional format of the     * 01363240
.*    PATH parameter. The new format became possible,                 * 01364230
.*    since the EMIF processors do no longer support /370 mode.       * 01365220
.*    The new format is:                                              * 01366210
.*        PATH=(chpid,chpid,.....)                                    * 01367200
.*    This format conflicts with the still supported format of        * 01368190
.*        PATH=(chpid,channel number<,channel set>)                   * 01369180
.*    The following alogrithm will be used to determine whether       * 01370170
.*    the PATH parameter follows the new respectively old format.     * 01371160
.*    o  channel path operation mode = REC or SHR   ==> new format    * 01372150
.*    o  Partition parameter specified              ==> new format    * 01373140
.*    o  SWITCH  parameter specified                ==> new format    * 01374130
.*    o  more then 3 subparameters                  ==> new format    * 01375120
.*    o  3rd subparameter other than 0 or 1         ==> new format    * 01376110
.*                                                                    * 01377100
.********************************************************************** 01378090
.CKPATH  ANOP                                                           01379080
&AWK1    SETA  128                     Keep track of channel numbers    01380070
&MAXPATH SETA  8                       Maximum number of PATH id's      01381060
&L       SETA  2                       Required PATH length             01382050
         AIF  ('&PATH' EQ '').NOPATH   PATH not specified               01383040
         AIF  (N'&PATH LE &MAXPATH).PASUBLE  Number of sublist entries  01384030
         MNOTE 8,'015 PATH PARAMETER EXCEEDS &MAXPATH SUBLIST ENTRIES.' 01385020
&ERROR   SETB  1                       Indicate error                   01386010
.PASUBLE ANOP                                                           01387000
&SUB     SETA  1                                                        01387990
.*--------------------------------------------------------------------* 01388980
.*       Determine format of PATH parameter by examining the context  * 01389970
.*       and peeking into the parameter values.                       * 01390960
.*--------------------------------------------------------------------* 01391950
         AIF   ('&PATH'(1,1) NE '(').PATH20    No parenthesis ?    @P2A 01392940
         AIF   ('&PATH'(1,2) EQ '((').PATH20   Double parens ?     @P2A 01393930
         AIF   (&UMODE EQ &ADED).PATH01   reconfigurable or shared @P2A 01394920
&NPPS    SETB  1                   ..Yes, remember new PATH format @P2A 01395910
.PATH01  ANOP                                                      @P2A 01396900
         AIF   ('&SWITCH' EQ '').PATH02  SWITCH parm specified ?   @P2A 01397890
&NPPS    SETB  1                   ..yes, remember new PATH format @P2A 01398880
.PATH02  ANOP                                                      @P2A 01399870
         AIF   (N'&PATH LE 3).PATH03 More then 3 subparameters ?   @P2A 01400860
&NPPS    SETB  1                   ..yes, remember new PATH format @P2A 01401850
.PATH03  ANOP                                                      @P2A 01402840
         AIF   ((N'&PATH EQ 3) AND (K'&PATH(3) EQ 1) AND               *01403830
               (('&PATH(3)' EQ '0') OR ('&PATH(3)' EQ '1'))).PATH04    *01404820
                                                                   @P2A 01405810
&NPPS    SETB  1                   ..yes, remember new PATH format @P2A 01406800
.PATH04  ANOP                                                      @P2A 01407790
         AIF   ((&PACT EQ 0) AND (&PCCT EQ 0)).PATH05              @P2A 01408780
&NPPS    SETB  1                   ..yes, remember new PATH format @P2A 01409770
.PATH05  ANOP                                                      @P2A 01410760
.*                                                                      01411750
.PATH20  ANOP                                                      @P2A 01412740
.*                                                                      01413730
.********************************************************************** 01414720
.*       Loop to validate each sublist entry                          * 01415710
.********************************************************************** 01416700
         AIF ('&PATH'(1,1) EQ '(').PARENS    Operand within parens ?    01417690
&PATHID  SETC '&PATH'                        if not, CHPID directly     01418680
&NDX     SETA 1                                specified                01419670
&SINDX   SETA 1                              start index for check      01420660
&NUMCHP  SETA 1                              one entry                  01421650
         AGO  .SUBLP1                        check it                   01422640
.*                                                                      01423630
.PARENS  ANOP                                                           01424620
&NUMCHP  SETA N'&PATH                        get number of entries      01425610
         AIF ('&PATH'(2,1) EQ '(').PALOOP    double parens ?            01426600
         AIF  (&NPPS EQ 1).PALOOP     New PATH parm format ?      @P2A  01427590
&PATHID  SETC '&PATH'                        no, take entry             01428580
&NUMCHP  SETA 1                              one entry                  01429570
         AGO  .PAREN1                        check it                   01430560
.*                                                                      01431550
.PALOOP  ANOP                                                           01432540
&PATHID  SETC  '&PATH(&SUB)'           Isolate sublist entry            01433530
.PAREN1  ANOP                                                           01434520
         AIF ('&PATH(&SUB)' EQ '').PANULL   Null sublist entry          01435510
&NDX     SETA  2                       Point to first digit of chpid    01436500
&SINDX   SETA 2                              start index for check      01437490
         AIF  (&NPPS EQ 0).SUBLP1     Old PATH parm format ?      @P2A  01438480
&SINDX   SETA 1                       ..no, start index for check @P2A  01439470
&NDX     SETA 1                       set up index                @P2A  01440460
.*                                                                      01441450
.*-------------------------------------------------------------------*  01442440
.*       Loop to validate each character in the CHPID number         *  01443430
.*-------------------------------------------------------------------*  01444420
.SUBLP1 ANOP                           Check chpid number               01445410
         AIF ('&PATHID'(&NDX,1) EQ ',').SETPAID  End of chpid number    01446400
         AIF ('&PATHID'(&NDX,1) EQ ')').SETPAID  End of chpid number    01447390
         AIF ('&PATHID'(&NDX,1) LT 'A').PASTRSK  Special char           01448380
         AIF ('&PATHID'(&NDX,1) LE 'F').GOODPA   Hex digit (A-F)        01449370
         AIF ('&PATHID'(&NDX,1) LT '0').BADPA    Invalid digit          01450360
         AIF ('&PATHID'(&NDX,1) LE '9').GOODPA   Hex digit (0-9)        01451350
.PASTRSK AIF ('&PATHID'(&NDX,2) NE '**').BADPA   Asterisk               01452340
&PAASTRK SETA &PAASTRK+1               Increment asterisk count         01453330
&NDX     SETA  &NDX+1                  Point to second asterisk         01454320
         AGO  .GOODPA                  Continue                         01455310
.BADPA   ANOP                          Invalid character in path id     01456300
&CWK     SETC '&PATHID'(&NDX,1)        Isolate invalid character        01457290
         MNOTE 8,'021 INVALID HEX DIGIT ''&CWK'' IN CHPID NUMBER SUBLIS*01458280
               T ENTRY &SUB FOR PATH PARAMETER.'                        01459270
&ERROR   SETB 1                        Indicate error                   01460260
.GOODPA  ANOP                                                           01461250
&NDX     SETA  &NDX+1                  Point to next digit              01462240
         AIF (&NDX LE K'&PATHID).SUBLP1    Check next digit             01463230
.SETPAID ANOP                                                           01464220
         AIF  (&NDX EQ &L+&SINDX).OKIDLEN  Number of digits in parens   01465210
         MNOTE 8,'022 PATH PARAMETER CHPID NUMBER SUBLIST ENTRY &SUB MU*01466200
               ST BE &L DIGITS.'                                        01467190
&ERROR   SETB 1                        Indicate error                   01468180
.OKIDLEN ANOP                                                           01469170
         AIF  (&ERROR EQ 1).NEXTAIF    Check next entry                 01470160
&PACHID(&SUB)  SETC '&PATHID'(&SINDX,&NDX-&SINDX) put CHPID into array  01471150
.NEXTAIF AIF   (&NDX GE K'&PATHID).NEXTSLE         Go do next PATH id   01472140
.*                                                                      01473130
         AIF   ('&PATHID'(&NDX,1) EQ ',').NEXTENT  Go do next entry     01474120
         MNOTE 8,'019 PATH SUBLIST ENTRY &SUB IS MISSING A COMMA.'      01475110
&ERROR   SETB  1                      Indicates error                   01476100
         AGO  .NEXTSLE                 Process next PATH chpid number   01477090
.NEXTENT ANOP                                                           01478080
&COMMA   SETA  &NDX                    Save position of comma           01479070
&NDX     SETA  &NDX+1                  Point to next digit              01480060
.*                                                                      01481050
.*--------------------------------------------------------------------* 01482040
.*       Loop to validate each character in the channel number        * 01483030
.*--------------------------------------------------------------------* 01484020
.SUBLP2 ANOP                           Check channel number             01485010
         AIF ('&PATHID'(&NDX,1) EQ ',').SETCHAN  End of channel number  01486000
         AIF ('&PATHID'(&NDX,1) EQ ')').SETCHAN  End of channel number  01486990
         AIF ('&PATHID'(&NDX,1) LT 'A').BADCHAN  Special char           01487980
         AIF ('&PATHID'(&NDX,1) LE 'F').GOODCHN  Hex digit (A-F)        01488970
         AIF ('&PATHID'(&NDX,1) LT '0').BADCHAN  Invalid digit          01489960
         AIF ('&PATHID'(&NDX,1) LE '9').GOODCHN  Hex digit (0-9)        01490950
.BADCHAN ANOP                          Invalid character in channel #   01491940
&CWK     SETC '&PATHID'(&NDX,1)        Isolate invalid character        01492930
         MNOTE 8,'021 INVALID HEX DIGIT ''&CWK'' IN CHANNEL NUMBER SUBL*01493920
               IST ENTRY &SUB FOR PATH PARAMETER.'                      01494910
&ERROR   SETB 1                        Indicate error                   01495900
.GOODCHN ANOP                                                           01496890
&NDX     SETA  &NDX+1                  Point to next digit              01497880
         AIF (&NDX LE K'&PATHID).SUBLP2    Check next digit             01498870
.SETCHAN ANOP                                                           01499860
         AIF  (&NDX EQ &COMMA+&L+1).CHANCHK   No. of digits in parens   01500850
         AIF  (&NDX EQ &COMMA-1+&L+1).CHANLEN   No. of digits in parens 01501840
&AWK     SETA  &L-1                                                     01502830
         MNOTE 8,'022 PATH PARAMETER CHANNEL NUMBER SUBLIST ENTRY &SUB *01503820
               MUST BE &AWK OR &L DIGITS.'                              01504810
&ERROR   SETB 1                        Indicate error                   01505800
.CHANCHK ANOP                                                           01506790
         AIF ('&PATHID'(&NDX-2,1) EQ '0').CHANLEN  Valid digit          01507780
         AIF ('&PATHID'(&NDX-2,1) EQ '1').CHANLEN  Valid digit          01508770
         MNOTE 8,'041 PATH PARAMETER CHANNEL NUMBER SUBLIST ENTRY &SUB *01509760
               MUST BE A NUMBER FROM 0 TO 1F.'                          01510750
&ERROR   SETB 1                        Indicate error                   01511740
.CHANLEN ANOP                                                           01512730
         AIF  (&ERROR EQ 1).NEXTIF        Check next entry              01513720
&PACHAN(&SUB)  SETC '&PATHID'(&COMMA+1,&NDX-&COMMA-1)  put # in array   01514710
&CHNBIT  SETA &CHNBIT+&AWK1               indicate occurrence           01515700
.NEXTIF  AIF   ('&PATHID'(&NDX,1) EQ ',').NEXTENY  Go do next entry     01516690
         AIF   (&NDX EQ K'&PATHID).NEXTSLE         Go do next PATH id   01517680
         MNOTE 8,'019 PATH SUBLIST ENTRY &SUB IS MISSING A COMMA.'      01518670
&ERROR   SETB  1                      Indicates error                   01519660
         AGO  .NEXTSLE                 Process next PATH chpid number   01520650
.*                                                                      01521640
.NEXTENY ANOP                                                           01522630
&NDX     SETA  &NDX+1                  Point to next digit              01523620
.*                                                                      01524610
.*------------------------------------------------------------------*   01525600
.*       Validate channel set                                       *   01526590
.*------------------------------------------------------------------*   01527580
         AIF   ('&PATHID'(&NDX,1) EQ '0').OKSET  Channel set 0          01528570
         AIF   ('&PATHID'(&NDX,1) EQ '1').OKSET  Channel set 1          01529560
      MNOTE 8,'042 PATH SUBLIST &SUB ENTRY CHANNEL SET MUST BE A NUMBER*01530550
                FROM 0 TO 1.'                                           01531540
&ERROR   SETB  1                       Indicate error                   01532530
.*                                                                      01533520
.OKSET   ANOP                                                           01534510
         AIF  (&ERROR EQ 1).NEXTSLE       Check next PATH id            01535500
&PACHSE(&SUB)  SETC '&PATHID'(&NDX,1)     Put channel set into array    01536490
         AIF   ('&PATHID'(&NDX+1,1) EQ ')').NEXTSLE  Go do next PATHid  01537480
         MNOTE 8,'016 PATH SUBLIST ENTRY &SUB EXCEEDS 3 OPERANDS.'      01538470
&ERROR   SETB  1                      Indicates error                   01539460
         AGO  .NEXTSLE                 Process next PATH chpid number   01540450
.NOPAREN MNOTE 8,'013 PATH SUBLIST ENTRY &SUB MUST BE ENCLOSED IN PAREN*01541440
               THESES.'                                                 01542430
&ERROR   SETB 1                        Indicate error                   01543420
         AGO  .NEXTSLE                 Process next PATH chpid number   01544410
.*                                                                      01545400
.PANULL  MNOTE 8,'018 PATH SUBLIST ENTRY &SUB IS MISSING.'              01546390
&ERROR   SETB 1                        Indicate error                   01547380
.*                                                                      01548370
.*                                                                      01549360
.NEXTSLE ANOP                          Process next sublist entry       01550350
&SUB     SETA &SUB+1                   Point to next path id entry      01551340
&AWK1    SETA &AWK1/2                  Proceed to next channel number   01552330
         AIF  (&SUB LE &NUMCHP).PALOOP  More PATH id's ...              01553320
         AGO  .XPATH                   Go check next operand       @P2A 01554310
.*                                                                      01555300
.NOPATH  MNOTE 8,'002 PATH KEYWORD NOT SPECIFIED.'                      01556290
&ERROR   SETB 1                        Indicate error                   01557280
.*                                                                      01558270
.XPATH   ANOP  ,                                                   @P2A 01559260
.*                                                                      01560250
.********************************************************************** 01561240
.*                                                                    * 01562230
.*       Validate TYPE         TYPE=BL|BY|CTC|S|CVC|CNC|IOC|CBY   @H3C* 01563220
.*                                  CFS|CFR|OSA|ISD|IP|NTV        @H8C* 01564210
.*                                  CBR|CBS|ICR|ICS|OSD|OSE       @HBC* 01565200
.*                                  DSD|EIO|                      @HCA* 01566190
.*                                  CFP|CBP|ICP|                  @HDA* 01567180
.*                                  IQD|FCP                       @HEA* 01568170
.********************************************************************** 01569160
         AIF ('&TYPE' EQ '').NOTYP     Exit if null                     01570150
         AIF ('&TYPE' NE 'BL').TYPBY   Not BL                           01571140
&TYP     SETA 1                        Type=BL                          01572130
         AGO  .XPATHND                 Go generate internal text   @N3C 01573120
.TYPBY   AIF ('&TYPE' NE 'BY').TYPCTC  Not BY                           01574110
&TYP     SETA 2                        Type=BY                          01575100
         AGO  .XPATHND                 Go generate internal text   @N3C 01576090
.TYPCTC  AIF ('&TYPE' NE 'CTC').TYPFX  Not CTC                          01577080
&TYP     SETA 4                        Type=CTC                         01578070
         AGO  .XPATHND                 Go generate internal text   @N3C 01579060
.TYPFX   AIF ('&TYPE' NE 'FX' AND '&TYPE' NE 'CVC').TYPS    Not FX @M1C 01580050
.*                                                     and not CVC @M1A 01581040
&TYP     SETA 5                        Type=FX                          01582030
         AGO  .XPATHND                 Go generate internal text   @N3C 01583020
.TYPS    AIF ('&TYPE' NE 'S'  AND '&TYPE' NE 'CNC').TYPIOC  Not S  @M1C 01584010
.*                                                     and not CNC @M1A 01585000
&TYP     SETA 3                        Type=S                           01585990
         AGO  .XPATHND                 Go generate internal text   @N3C 01586980
.TYPIOC  AIF ('&TYPE' NE 'IOC').TYPIRC Not IOC                     @LTC 01587970
&TYP     SETA 6                        Type=IOC                    @H1A 01588960
         AGO  .XPATHND                 Go generate internal text   @N3C 01589950
.TYPIRC  AIF ('&TYPE' NE 'CFR').TYPISC Not CFR                     @LTA 01590940
&TYP     SETA 7                        Type=CFR                    @LTA 01591930
         AGO  .XPATHND                 Go generate internal text   @N3C 01592920
.TYPISC  AIF ('&TYPE' NE 'CFS').TYPCBY Not CFS                     @H3C 01593910
&TYP     SETA 8                        Type=CFS                    @LTA 01594900
         AGO  .XPATHND                 Go generate internal text   @N3C 01595890
.TYPCBY  AIF ('&TYPE' NE 'CBY').TYPOSA Not CBY                     @H4C 01596880
&TYP     SETA 9                        Type=CBY                    @H3A 01597870
         AGO  .XPATHND                 Go generate internal text   @H3A 01598860
.TYPOSA  AIF ('&TYPE' NE 'OSA').TYPISD Not OSA                     @H5C 01599850
&TYP     SETA 10                       Type=OSA                    @H4A 01600840
         AGO  .XPATHND                 Go generate internal text   @H4A 01601830
.TYPISD  AIF ('&TYPE' NE 'ISD').TYPDSD Not ISD                     @HCC 01602820
&TYP     SETA 11                       Type=ISD                    @H5A 01603810
         AGO  .XPATHND                 Go generate internal text   @H5A 01604800
.TYPDSD  AIF ('&TYPE' NE 'DSD').TYPNTV  Not DSD                    @HCA 01605790
&TYP     SETA 12                       Type=DSD                    @HCA 01606780
         AGO  .XPATHND                 Go generate internal text   @HCA 01607770
.TYPNTV  AIF ('&TYPE' NE 'NTV').TYPFC   Not NTV                    @HAC 01608760
&TYP     SETA 13                       Type=NTV                    @H9C 01609750
         AGO  .XPATHND                 Go generate internal text   @H9A 01610740
.TYPFC   AIF ('&TYPE' NE 'FC').TYPFCV  Not FC                      @HAA 01611730
&TYP     SETA 14                       Type=FC                     @HAA 01612720
         AGO  .XPATHND                 Go generate internal text   @HAA 01613710
.TYPFCV  AIF ('&TYPE' NE 'FCV').TYPFTV  Not FCV                    @HAA 01614700
&TYP     SETA 15                       Type=FCV                    @HAA 01615690
         AGO  .XPATHND                 Go generate internal text   @HAA 01616680
.TYPFTV  AIF ('&TYPE' NE 'FTV').TYPCBR  Not FTV                    @HAA 01617670
&TYP     SETA 16                       Type=FTV                    @HAA 01618660
         AGO  .XPATHND                 Go generate internal text   @HAA 01619650
.TYPCBR  AIF ('&TYPE' NE 'CBR').TYPCBS  Not CBR                    @H9C 01620640
&TYP     SETA 17                       Type=CBR                    @H9A 01621630
         AGO  .XPATHND                 Go generate internal text   @H9A 01622620
.TYPCBS  AIF ('&TYPE' NE 'CBS').TYPICR  Not CBS                    @H9C 01623610
&TYP     SETA 18                       Type=CBS                    @H9A 01624600
         AGO  .XPATHND                 Go generate internal text   @H9A 01625590
.TYPICR  AIF ('&TYPE' NE 'ICR').TYPICS  Not ICR                    @H9C 01626580
&TYP     SETA 19                       Type=ICR                    @H9A 01627570
         AGO  .XPATHND                 Go generate internal text   @H9A 01628560
.TYPICS  AIF ('&TYPE' NE 'ICS').TYPOSD  Not ICS                    @HBC 01629550
&TYP     SETA 20                       Type=ICS                    @H9A 01630540
         AGO  .XPATHND                 Go generate internal text   @H9A 01631530
.TYPOSD  AIF ('&TYPE' NE 'OSD').TYPOSE  Not OSD                    @HBA 01632520
&TYP     SETA 21                       Type=OSD                    @HBA 01633510
         AGO  .XPATHND                 Go generate internal text   @HBA 01634500
.TYPOSE  AIF ('&TYPE' NE 'OSE').TYPEIO  Not OSE                    @HCC 01635490
&TYP     SETA 22                       Type=OSE                    @HBA 01636480
         AGO  .XPATHND                 Go generate internal text   @HBA 01637470
.TYPEIO  AIF ('&TYPE' NE 'EIO').TYPCBP  Not EIO                    @HCA 01638460
&TYP     SETA 23                       Type=EIO                    @HCA 01639450
         AGO  .XPATHND                 Go generate internal text   @HCA 01640440
.TYPCBP  AIF ('&TYPE' NE 'CFP').TYPCFP  Not CFP                    @HDA 01641430
&TYP     SETA 24                       Type=CFP                    @HDA 01642420
         AGO  .XPATHND                 Go generate internal text   @HDA 01643410
.TYPCFP  AIF ('&TYPE' NE 'CBP').TYPICP  Not CBP                    @HDA 01644400
&TYP     SETA 25                       Type=CBP                    @HDA 01645390
         AGO  .XPATHND                 Go generate internal text   @HDA 01646380
.TYPICP  AIF ('&TYPE' NE 'ICP').TYPIQD  Not ICP                    @HEC 01647370
&TYP     SETA 26                       Type=ICP                    @HDA 01648360
         AGO  .XPATHND                 Go generate internal text   @HDA 01649350
.TYPIQD  AIF ('&TYPE' NE 'IQD').TYPFCP  Not IQD                    @HEA 01650340
&TYP     SETA 27                       Type=IQD                    @HEA 01651330
         AGO  .XPATHND                 Go generate internal text   @HEA 01652320
.TYPFCP  AIF ('&TYPE' NE 'FCP').TYPERR  Not FCP                    @HEA 01653310
&TYP     SETA 28                       Type=FCP                    @HEA 01654300
         AGO  .XPATHND                 Go generate internal text   @HEA 01655290
.*                                                                      01656280
.TYPERR  MNOTE 8,'003 TYPE=&TYPE IS INVALID.'                           01657270
&ERROR   SETB 1                        Indicate error                   01658260
         AGO  .XPATHND                 Go generate internal text   @N3C 01659250
.NOTYP   MNOTE 8,'002 TYPE KEYWORD NOT SPECIFIED.'                      01660240
&ERROR   SETB 1                        Indicate error                   01661230
.*                                                                      01662220
.XPATHND ANOP                                                           01663210
.*                                                                      01664200
.********************************************************************** 01665190
.*                                                                    * 01666180
.*       Validate SWPORT     1 to &NUMCHP pairs of (switch id,port id)* 01667170
.*                           Only checks for 2 digit switch/port id.  * 01668160
.*                                                                    * 01669150
.*                           The position of (switch id/port id)  @M4A* 01670140
.*                           in SWPORT list corresponds to the    @M4A* 01671130
.*                           channel path ids in the PATH keyword @M4A* 01672120
.*                                                                    * 01673110
.********************************************************************** 01674100
.CKSWPO  ANOP                                                           01675090
&MAXSUB  SETA  &NUMCHP                 Max number of SWPORT entr.  @M4A 01676080
&L1      SETA  2                       Number of sublist length    @M4A 01677070
&L       SETA  2                       Req. Switch/port id length  @M4A 01678060
&AWK1    SETA  128                     Keep track of entry ports   @M4A 01679050
         AIF  ('&SWPORT' EQ '').XSWPO    SWPORT not specified      @M4A 01680040
         AIF  ('&SWPORT'(1,2) EQ '((').SWPO100 Double parentheses  @M4A 01681030
&SINGLE  SETB 1                        Indicate single entry       @M4A 01682020
&NSWPO   SETA 1                        Only 1 subentry             @M4A 01683010
         AGO   .SWPO105                                            @M4A 01684000
.SWPO100 ANOP  ,                                                   @M4A 01684990
         AIF  (N'&SWPORT GT &MAXSUB).SWPOE01 Higher number of          *01685980
                                       operands than in PATH list  @M4A 01686970
&NSWPO   SETA  N'&SWPORT               Set number of subentries    @M4A 01687960
&SINGLE  SETB  0                       Indicate list               @M4A 01688950
.SWPO105 ANOP  ,                                                   @M4A 01689940
&SUB     SETA  1                                                   @M4A 01690930
.SWPO110 ANOP  ,                                                   @M4A 01691920
         AIF   (&SINGLE).SWPO115                                   @M4A 01692910
         AIF   ('&SWPORT(&SUB)' EQ '').SWPO150 Entry omitted       @M4A 01693900
         AIF   ('&SWPORT(&SUB)' EQ '**').SWPO150 Entry omitted     @M4A 01694890
         AIF   (N'&SWPORT(&SUB) NE &L1).SWPOE03 Sublist not 2 entr @M4A 01695880
&ESWID   SETC  '&SWPORT(&SUB,1)'        Save switch id             @M4A 01696870
         AGO   .SWPO118                                            @M4A 01697860
.SWPO115 ANOP  ,                                                   @M4A 01698850
         AIF   ('&SWPORT' EQ '**').SWPO150       Entry omitted     @M4A 01699840
         AIF   (N'&SWPORT NE &L1).SWPOE03 Sublist not 2 entries    @M4A 01700830
&ESWID   SETC  '&SWPORT(1)'             Save switch id             @M4A 01701820
.SWPO118 ANOP  ,                                                   @M4A 01702810
         AIF   ('&ESWID'   EQ '').SWPOE02        No entry switch   @M4A 01703800
         AIF   (K'&ESWID   NE &L).SWPOE05        Switch id > 2 chr @M4A 01704790
         HEXCHECK STRING=&ESWID                                    @M4A 01705780
         AIF   (NOT &$ERR).SWPO120     Continue when no error      @M4A 01706770
&ERROR   SETB  1                       Otherwise indicate error    @M4A 01707760
         AGO   .SWPOE04                and continue                @M4A 01708750
.*                                                                 @M4A 01709740
.SWPO120 ANOP  ,                                                   @M4A 01710730
         AIF   (&SINGLE).SWPO125                                   @M4A 01711720
&ESWPORT SETC  '&SWPORT(&SUB,2)'       Save port id                @M4A 01712710
         AGO   .SWPO130                                            @M4A 01713700
.SWPO125 ANOP  ,                                                   @M4A 01714690
&ESWPORT SETC  '&SWPORT(2)'            Save port id                @M4A 01715680
.SWPO130 ANOP  ,                                                   @M4A 01716670
         AIF   ('&ESWPORT' EQ '').SWPOE02        No port id        @M4A 01717660
         AIF   (K'&ESWPORT NE &L).SWPOE05        Port id > 2 char  @M4A 01718650
         HEXCHECK STRING=&ESWPORT                                  @M4A 01719640
         AIF   (&$ERR).SWPOE04         Report error if encountered @M4A 01720630
.*                                                                 @M4A 01721620
&ESW(&SUB) SETC '&ESWID'               Save entry switch id        @M4A 01722610
&EPORT(&SUB) SETC '&ESWPORT'           Save entry port id          @M4A 01723600
&ESWBIT  SETA &ESWBIT+&AWK1            indicate occurrence         @M4A 01724590
.*                                                                 @M4A 01725580
.SWPO150 ANOP  ,                                                   @M4A 01726570
&SUB     SETA  &SUB+1                  Point to next sublist entry @M4A 01727560
&AWK1    SETA &AWK1/2                  Proceed to next entry port  @M4A 01728550
         AIF   (&SUB LE &NSWPO).SWPO110 More entry ports           @M4A 01729540
         AGO   .XSWPO                                              @M4A 01730530
.*                                                                 @M4A 01731520
.SWPOE01 ANOP  ,                                                   @M4A 01732510
         MNOTE 8,'045 SWPORT PARAMETER EXCEEDS &MAXSUB ENTRIES.'   @M4A 01733500
&ERROR   SETB  1                       Indicates error             @M4A 01734490
         AGO   .XSWPO                  and continue                @M4A 01735480
.*                                                                 @M4A 01736470
.SWPOE02 ANOP  ,                                                   @M4A 01737460
         MNOTE 8,'017 SWITCH OR PORT ID REQUIRED in SUBLIST ENTRY &SUB *01738450
               OF SWPORT PARAMETER.'                               @M4A 01739440
&ERROR   SETB  1                       Indicates error             @M4A 01740430
         AGO   .XSWPO                  and continue                @M4A 01741420
.*                                                                 @M4A 01742410
.SWPOE03 ANOP  ,                                                   @M4A 01743400
         MNOTE 8,'022 SWPORT PARAMETER SUBLIST ENTRY &SUB MUST CONTAIN *01744390
               &L ENTRIES.'                                        @M4A 01745380
&ERROR   SETB  1                       Indicates error             @M4A 01746370
         AGO   .XSWPO                  and continue                @M4A 01747360
.*                                                                 @M4A 01748350
.SWPOE04 ANOP  ,                                                   @M4A 01749340
         MNOTE 8,'047 INVALID HEX DIGIT ''&CWK'' IN SUBLIST ENTRY &SUB *01750330
               OF SWPORT PARAMETER.'                               @M4A 01751320
&ERROR   SETB  1                       Indicates error             @M4A 01752310
         AGO   .XSWPO                  and continue                @M4A 01753300
.*                                                                 @M4A 01754290
.SWPOE05 ANOP  ,                                                   @M4A 01755280
         MNOTE 8,'022 SWITCH ID OR PORT ID MUST BE &L1 DIGITS.'    @M4A 01756270
&ERROR   SETB  1                       Indicates error             @M4A 01757260
         AGO   .XSWPO                  and continue                @M4A 01758250
.*                                                                 @M4A 01759240
.XSWPO   ANOP  ,                                                   @M4A 01760230
.*                                                                      01761220
.*                                                                      01762210
.********************************************************************** 01763200
.*                                                                    * 01764190
.*       Validate TPATH      1 to 8 pairs of (processor id, chpid)    * 01765180
.*                           Only checks for 8 char processor id,     * 01766170
.*                                           2 hex char chpid,        * 01767160
.*                                           4 hex char CU number,    * 01768150
.*                                           4 hex char device number)* 01769140
.*                                                                @M4A* 01770130
.********************************************************************** 01771120
.CKTPAT  ANOP                                                           01772110
&MAXSUB  SETA  8                       Max number of TPATH entries @M4A 01773100
&L1      SETA  8                       Max length of processor id  @M4A 01774090
&L2      SETA  2                       Max length of chpid         @M4A 01775080
&L3      SETA  4                       Max length of cu/dev number @M4A 01776070
         AIF  ('&TPATH' EQ '').XTPAT   TPATH not specified         @M4A 01777060
&L       SETA  4                       Number of sublist length    @M4A 01778050
&LB      SETA  1                       Number of sublist count     @04A 01779040
         AIF  ('&TYPE' EQ 'CFS').TPAT050 Allowed CHPID type        @M4A 01780030
         AIF  ('&TYPE' EQ 'CBS').TPAT050 Allowed CHPID type        @H9A 01781020
         AIF  ('&TYPE' EQ 'ICS').TPAT050 Allowed CHPID type        @H9A 01782010
&LA      SETA  2                       Number of sublist length    @M4A 01783000
&LB      SETA  2                       Number of sublist count     @04A 01783990
         AIF  ('&TYPE' EQ 'ICP').TPAT050 Allowed CHPID type        @HDA 01784980
         AIF  ('&TYPE' EQ 'CFP').TPAT050 Allowed CHPID type        @HDA 01785970
         AIF  ('&TYPE' EQ 'CBP').TPAT050 Allowed CHPID type        @HDA 01786960
&LB      SETA  1                       Number of sublist count     @04A 01787950
         AIF  ('&TYPE' EQ 'CFR').TPAT050 Allowed CHPID type        @M4A 01788940
         AIF  ('&TYPE' EQ 'CBR').TPAT050 Allowed CHPID type        @H9A 01789930
         AIF  ('&TYPE' EQ 'ICR').TPAT050 Allowed CHPID type        @H9A 01790920
         AGO  .TPATE06                 Not allowed CHPID type      @M4A 01791910
.TPAT050 ANOP ,                                                    @M4A 01792900
         AIF  ('&TPATH'(1,2) EQ '((').TPAT100 Double parentheses   @M4A 01793890
&SINGLE  SETB 1                        Indicate single entry       @M4A 01794880
&NTPAT   SETA 1                        Only 1 subentry             @M4A 01795870
         AGO   .TPAT105                                            @M4A 01796860
.TPAT100 ANOP  ,                                                   @M4A 01797850
         AIF  (N'&TPATH GT &MAXSUB).TPATE01 Higher number of           *01798840
                                       operands than allowed       @M4A 01799830
&NTPAT   SETA  N'&TPATH                Set number of subentries    @M4A 01800820
&SINGLE  SETB  0                       Indicate list               @M4A 01801810
.TPAT105 ANOP  ,                                                   @M4A 01802800
         AIF   (&NTPAT NE &LB).TPATE08  operand list count wrong   @04A 01803790
&SUB     SETA  1                                                   @M4A 01804780
.TPAT110 ANOP  ,                                                   @M4A 01805770
&ECUNUM  SETC  ''                                                  @M4A 01806760
&EDEVNO  SETC  ''                                                  @M4A 01807750
         AIF   (&SINGLE).TPAT115                                   @M4A 01808740
&NSPAT   SETA  N'&TPATH(&SUB)          Set number of elements      @C2A 01809730
         AIF   ('&TPATH(&SUB)' EQ '').TPAT150 Entry omitted        @M4A 01810720
         AIF   ('&TPATH(&SUB)' EQ '**').TPAT150 Entry omitted      @M4A 01811710
         AIF   (N'&TPATH(&SUB) EQ &L).TPAT112 Sublist not 4 entr   @C2A 01812700
         AIF   (N'&TPATH(&SUB) NE &LA).TPATE03 Sublist not 2 entr  @C2C 01813690
.TPAT112 ANOP  ,                                                   @C2A 01814680
&EPROC   SETC  '&TPATH(&SUB,1)'         Save processor id          @M4A 01815670
         AGO   .TPAT118                                            @M4A 01816660
.TPAT115 ANOP  ,                                                   @M4A 01817650
&NSPAT   SETA  N'&TPATH                Set number of elements      @C2A 01818640
         AIF   ('&TPATH' EQ '**').TPAT150        Entry omitted     @M4A 01819630
         AIF   (N'&TPATH EQ &L).TPAT117 Sublist not 2 entries      @C2A 01820620
         AIF   (N'&TPATH NE &LA).TPATE03 Sublist not 2 entries     @C2C 01821610
.TPAT117 ANOP  ,                                                   @C2A 01822600
&EPROC   SETC  '&TPATH(1)'              Save processor id          @M4A 01823590
.TPAT118 ANOP  ,                                                   @M4A 01824580
         AIF   ('&EPROC'   EQ '').TPATE02        No processor id   @M4A 01825570
         AIF   (K'&EPROC   GT &L1).TPATE05   Processor id  > 8 chr @M4A 01826560
         AIF   ('&EPROC' EQ '*').TPAT120     Processor id is '*'   @M4A 01827550
         NAMETEST STRING=&EPROC                                    @M4A 01828540
         AIF   (NOT &INTERR).TPAT120   Continue when no error      @M4A 01829530
&ERROR   SETB  1                       Otherwise indicate error    @M4A 01830520
         AGO   .TPATE04                and stop                    @M4A 01831510
.*                                                                 @M4A 01832500
.TPAT120 ANOP  ,                                                   @M4A 01833490
         AIF   (&SINGLE).TPAT125                                   @M4A 01834480
&ECHPID  SETC  '&TPATH(&SUB,2)'        Save channel path id        @M4A 01835470
         AGO   .TPAT130                                            @M4A 01836460
.TPAT125 ANOP  ,                                                   @M4A 01837450
&ECHPID  SETC  '&TPATH(2)'             Save channel path id        @M4A 01838440
.TPAT130 ANOP  ,                                                   @M4A 01839430
         AIF   ('&ECHPID' EQ '').TPATE02        No channel path id @M4A 01840420
         AIF   (K'&ECHPID NE &L2).TPATE05       CHPID id  ^= 2 dig @M4A 01841410
         HEXCHECK STRING=&ECHPID                                   @M4A 01842400
         AIF   (&$ERR).TPATE04         Report error if encountered @M4A 01843390
.*                                                                 @M4A 01844380
         AIF   (&NSPAT EQ 2).TPAT150   All values processed        @C2C 01845370
.TPAT140 ANOP  ,                                                   @M4A 01846360
         AIF   (&SINGLE).TPAT142                                   @M4A 01847350
&ECUNUM  SETC  '&TPATH(&SUB,3)'        Save control unit number    @M4A 01848340
         AGO   .TPAT145                                            @M4A 01849330
.TPAT142 ANOP  ,                                                   @M4A 01850320
&ECUNUM  SETC  '&TPATH(3)'             Save control unit number    @M4A 01851310
.TPAT145 ANOP  ,                                                   @M4A 01852300
         AIF   ('&ECUNUM' EQ '').TPATE02        No CU number       @M4A 01853290
         AIF   (K'&ECUNUM NE &L3).TPATE07       CU num ^= 4 digits @M4A 01854280
         HEXCHECK STRING=&ECUNUM                                   @M4A 01855270
         AIF   (&$ERR).TPATE04         Report error if encountered @M4A 01856260
.*                                                                 @M4A 01857250
.TPAT147 ANOP  ,                                                   @M4A 01858240
         AIF   (&SINGLE).TPAT148                                   @M4A 01859230
&EDEVNO  SETC  '&TPATH(&SUB,4)'        Save device number          @M4A 01860220
         AGO   .TPAT149                                            @M4A 01861210
.TPAT148 ANOP  ,                                                   @M4A 01862200
&EDEVNO  SETC  '&TPATH(4)'             Save device number          @M4A 01863190
.TPAT149 ANOP  ,                                                   @M4A 01864180
         AIF   ('&EDEVNO' EQ '').TPATE02        No device number   @M4A 01865170
         AIF   (K'&EDEVNO NE &L3).TPATE07       devnum ^= 4 digits @M4A 01866160
         HEXCHECK STRING=&EDEVNO                                   @M4A 01867150
         AIF   (&$ERR).TPATE04         Report error if encountered @M4A 01868140
.*                                                                 @M4A 01869130
.TPAT150 ANOP  ,                                                   @M4A 01870120
&EPR(&SUB) SETC '&EPROC'               Save processor id           @M4A 01871110
&ECHP(&SUB) SETC '&ECHPID'             Save channel path id        @M4A 01872100
&ECUN(&SUB) SETC '&ECUNUM'             Save control unit number    @M4A 01873090
&EDEV(&SUB) SETC '&EDEVNO'             Save device number          @M4A 01874080
&SUB     SETA  &SUB+1                  Point to next sublist entry @M4A 01875070
         AIF   (&SUB LE &NTPAT).TPAT110 More connected chpids      @M4A 01876060
         AGO   .XTPAT                                              @M4A 01877050
.*                                                                 @M4A 01878040
.TPATE01 ANOP  ,                                                   @M4A 01879030
         MNOTE 8,'045 TPATH PARAMETER EXCEEDS &MAXSUB ENTRIES.'    @M4A 01880020
&ERROR   SETB  1                       Indicates error             @M4A 01881010
         AGO   .XTPAT                  and continue                @M4A 01882000
.*                                                                 @M4A 01882990
.TPATE02 ANOP  ,                                                   @M4A 01883980
         MNOTE 8,'017 PROCESSOR OR CHPANNEL PATH ID REQUIRED IN SUBLIST*01884970
                ENTRY &SUB OF TPATH PARAMETER.'                    @M4A 01885960
&ERROR   SETB  1                       Indicates error             @M4A 01886950
         AGO   .XTPAT                  and continue                @M4A 01887940
.*                                                                 @M4A 01888930
.TPATE03 ANOP  ,                                                   @M4A 01889920
         MNOTE 8,'022 TPATH PARAMETER SUBLIST ENTRY &SUB MUST CONTAIN &*01890910
               L ENTRIES.'                                         @M4A 01891900
&ERROR   SETB  1                       Indicates error             @M4A 01892890
         AGO   .XTPAT                  and continue                @M4A 01893880
.*                                                                 @M4A 01894870
.TPATE04 ANOP  ,                                                   @M4A 01895860
         MNOTE 8,'047 INVALID CHARACTER ''&CWK'' IN SUBLIST ENTRY &SUB *01896850
               OF TPATH PARAMETER.'                                @M4A 01897840
&ERROR   SETB  1                       Indicates error             @M4A 01898830
         AGO   .XTPAT                  and continue                @M4A 01899820
.*                                                                 @M4A 01900810
.TPATE05 ANOP  ,                                                   @M4A 01901800
         MNOTE 8,'022 PROCESSOR ID MUST NOT EXCEED &L1 CHARACTERS, CHPI*01902790
               D MUST BE 2 DIGITS.'                                @M4A 01903780
&ERROR   SETB  1                       Indicates error             @M4A 01904770
         AGO   .XTPAT                  and continue                @M4A 01905760
.*                                                                 @M4A 01906750
.TPATE06 ANOP  ,                                                   @M4A 01907740
         MNOTE 8,'048 TPATH KEYWORD IS NOT ALLOWED WITH TYPE=&TYPE.'   *01908730
                                                                   @M4A 01909720
&ERROR   SETB  1                       Indicates error             @M4A 01910710
         AGO   .XTPAT                  and continue                @M4A 01911700
.*                                                                 @M4A 01912690
.TPATE07 ANOP  ,                                                   @M4A 01913680
         MNOTE 8,'022 CONTROL UNIT NUMBER MUST BE &L3 DIGITS, DEVICE NU*01914670
               MBER MUST BE &L3 DIGITS.'                           @M4A 01915660
&ERROR   SETB  1                       Indicates error             @M4A 01916650
         AGO   .XTPAT                  and continue                @M4A 01917640
.*                                                                 @M4A 01918630
.TPATE08 ANOP  ,                                                   @M4A 01919620
         MNOTE 8,'025 TPATH PARAMETER MUST SPECIFY &LB ENTRIES.'   @04A 01920610
&ERROR   SETB  1                       Indicates error             @04A 01921600
         AGO   .XTPAT                  and continue                @04A 01922590
.*                                                                 @M4A 01923580
.XTPAT   ANOP  ,                                                   @M4A 01924570
.*                                                                      01925560
.********************************************************************** 01926550
.*                                                                    * 01927540
.*       Validate DESC                1 to &L EBCDIC characters       * 01928530
.*                                                                    * 01929520
.********************************************************************** 01930510
&L       SETA  32                 Maximum description length       @N3A 01931500
         AIF   ('&DESC' EQ '').DENULL   DESC is null               @N3A 01932490
         AIF   ('&DESC'(1,1) EQ '''').DELEN  Must be in quotes     @N3A 01933480
.*                                   (Asmblr checks for end quote) @N3A 01934470
         MNOTE 8,'008 DESC VALUE MUST BE ENCLOSED IN QUOTES.'      @N3A 01935460
&ERROR   SETB  1                      Indicate error               @N3A 01936450
.DELEN   ANOP                                                      @N3A 01937440
&DESCR   SETC  '&DESC'                Set description              @N3A 01938430
&LEN     SETA  K'&DESC-2              Length of description        @N3A 01939420
         AIF   (&LEN  LE 0).DENULL    Check for zero length        @N3A 01940410
&DSC     SETC  '&DESC'(2,&LEN)        Set description string       @L2A 01941400
         STRLEN STRING=&DSC           Determine length             @L2A 01942390
&LEN     SETA  &$STRLEN               Sets real length             @L2A 01943380
         AIF   (&LEN  LE &L).GENTEXT  Less than maximum            @N3A 01944370
         MNOTE 8,'033 DESC PARAMETER EXCEEDS &L CHARACTERS.'       @N3A 01945360
&ERROR   SETB  1                      Indicate error               @N3A 01946350
.DENULL  ANOP                                                      @N3A 01947340
&DESCR   SETC  ''' '''                Set to blank                 @N3A 01948330
.********************************************************************** 01949320
.*                                                                    * 01950310
.*       Generate internal text record                                * 01951300
.*                                                                    * 01952290
.********************************************************************** 01953280
.GENTEXT ANOP                                                           01954270
         AIF (&ERROR EQ 1).EXIT       Exit if error                     01955260
&CNO     SETC '&SYSITRN'              EBCDIC version of stmnt number    01956250
         DC    AL1(&TYP)              Channel path type                 01957240
&AWK     SETA &NUMCHP-&PAASTRK        Number of entries in PATH sublist 01958230
         DC    AL1(&AWK)              Number of entries in PATH list    01959220
         DC    AL1(&UMODE)            Channel path operation mode  @LBA 01960210
         DC    X'00'                  Reserved                     @LBC 01961200
         DC    AL1(&FLAG)             Flag byte                         01962190
         DC    XL1'00'                Reserved                          01963180
         AIF   ('&SWITCH' EQ '').NOSWT     SWITCH specified             01964170
         DC    XL1'&SWITCH'           Channel path switch number        01965160
         AGO   .ESWT                                                    01966150
.NOSWT   DC    XL1'00'                SWITCH (not specified)            01967140
.ESWT    ANOP                                                           01968130
         DC    AL1(&CHNBIT)           Bit mask for channel numbers      01969120
         DC    AL1(&ESWBIT)           Bit mask for entry ports     @M4A 01970110
         AIF   ('&OS' EQ '').NOOS     OS specified                 @M5A 01971100
         DC    XL1'&OS'               OS parameter value           @M5A 01972090
         AGO   .NODSA                                              @M5A 01973080
.NOOS    DC    XL1'00'                OS (not specified)           @M5A 01974070
.NODSA   DC    XL2'00'                Reserved                     @M5C 01975060
.*                                                                      01976050
         DC    AL2(&PACT)             Number of entries in partition   *01977040
                                      access list                  @LBA 01978030
         DC    AL2(&PCCT)             Number of entries in partition   *01979020
                                      candidate list               @LBA 01980010
         AIF   (&PACT EQ 0).NOACCP    Partition access list is empty   *01981000
                                                                   @LBA 01981990
         DC    A(@A&CNO)              Address of partition access list *01982980
                                                                   @LBA 01983970
         AGO   .GENCANP               branch to continue           @LBA 01984960
.NOACCP  DC    A(0)                   No partition list exists     @LBA 01985950
.GENCANP ANOP  ,                                                   @LBA 01986940
         AIF   (&PCCT EQ 0).NOCANP    Partition candidate list empty   *01987930
                                                                   @LBA 01988920
         DC    A(@C&CNO)              Address of partition candidate   *01989910
                                      list                         @LBA 01990900
         AGO   .EGCANP                branch to continue           @LBA 01991890
.NOCANP  DC    A(0)                   No partition candidate list      *01992880
                                      exists                       @LBA 01993870
.EGCANP  ANOP  ,                                                   @LBA 01994860
         AIF   (&NTPAT EQ 0).NOTPATH  No connected channel paths   @M4A 01995850
         DC    A(@X&CNO)              Address of connected chpids  @M4A 01996840
         AGO   .GENDESC               branch to continue           @M4A 01997830
.NOTPATH DC    A(0)                   Reserved                     @LBA 01998820
.GENDESC ANOP  ,                                                   @M4A 01999810
         AIF   ('&DESC' EQ '').NODESC Description specified        @N3A 02000800
         DC    CL32&DESCR             Channel path description     @N3A 02001790
         AGO   .EDESCP                branch to continue           @N3A 02002780
.NODESC  ANOP  ,                      Description not specified    @N3A 02003770
         DC    XL32'00'               Channel path description     @N3A 02004760
.EDESCP  ANOP  ,                                                   @N3A 02005750
.*                                                                      02006740
&SUB     SETA  1                      Point to first PATH id            02007730
         AIF   (&NUMCHP-&PAASTRK EQ 0).ZEROS      No PATH list          02008720
.GENLP1  ANOP                                                           02009710
         AIF   ('&PACHID(&SUB)' EQ '**').INASTR Skip asterisks(**)      02010700
         DC    XL1'&PACHID(&SUB)'     Channel path id                   02011690
         AIF   ('&PACHAN(&SUB)' EQ '').CHANEMP  Channel # empty         02012680
         DC    XL1'&PACHAN(&SUB)'     Channel number                    02013670
         AGO   .ENDCHAN                                                 02014660
.CHANEMP DC    XL1'00'                Channel number not specified      02015650
.ENDCHAN ANOP                                                           02016640
         AIF   ('&PACHSE(&SUB)' EQ '').SETEMP   Channel set empty       02017630
         DC    XL1'&PACHSE(&SUB)'     Channel set                       02018620
         AGO   .ENDSET                                                  02019610
.SETEMP  DC    XL1'00'                Channel set not specified         02020600
.ENDSET  ANOP                                                           02021590
         AIF   ('&ESW(&SUB)' EQ '').SWPEMP  No Switch/port id      @M4A 02022580
         AIF   ('&ESW(&SUB)' EQ '**').SWPEMP No Switch/port id     @M4A 02023570
         DC    XL1'&ESW(&SUB)'        Entry switch id              @M4A 02024560
         DC    XL1'&EPORT(&SUB)'      Entry port id                @M4A 02025550
         AGO   .EGPAL1                                             @M4A 02026540
.SWPEMP  ANOP  ,                                                   @M4A 02027530
         DC    XL1'00'                Reserved for Entry switch    @N3A 02028520
         DC    XL1'00'                Reserved for Entry port      @N3A 02029510
         AGO   .EGPAL1                                                  02030500
.INASTR  ANOP                                                           02031490
.EGPAL1  ANOP                                                           02032480
&SUB     SETA &SUB+1                  Point to next sublist entry       02033470
         AIF  (&SUB LE &NUMCHP).GENLP1   Go insert next PATH id         02034460
&SUB     SETA &SUB-&PAASTRK           Account for asterisk entries      02035450
.ZEROS   AIF  (&SUB GT &MAXPATH).GPARTL    Fill in all bytes            02036440
         DC    XL1'00'                Reserved for Channel path id      02037430
         DC    XL1'00'                Reserved for Channel number       02038420
         DC    XL1'00'                Reserved for Channel set          02039410
         DC    XL1'00'                Reserved for Entry switch    @N3A 02040400
         DC    XL1'00'                Reserved for Entry port      @N3A 02041390
&SUB     SETA &SUB+1                  Point to next null entry          02042380
         AGO  .ZEROS                  Fill in all bytes                 02043370
.*                                                                 @LBA 02044360
.*------------------   Generate Partition access list -------------@LBA 02045350
.*                                                                 @LBA 02046340
.GPARTL  AIF   (&PACT EQ 0).EGACCL   Partition access list is empty@LBA 02047330
         SPACE 1                                                   @LBA 02048320
*----------------   Partition Access List  ------------------------@LBA 02049310
&SUB     SETA  1                      Point to first partition     @LBA 02050300
&CWK     SETC  '@A&CNO'               Label for first partition    @LBA 02051290
.ACCL10  ANOP  ,                                                   @LBA 02052280
&CWK     DC    CL8'&PACC(&SUB)'       Partition                    @LBA 02053270
&CWK     SETC  ''                     Blank out label              @LBA 02054260
&SUB     SETA  &SUB+1                 Point to next entry in array @LBA 02055250
         AIF   (&SUB LE &PACT).ACCL10   Process next partition in      *02056240
                                        access list                @LBA 02057230
.EGACCL  ANOP  ,                                                   @LBA 02058220
.*                                                                 @LBA 02059210
.*---------------   Generate Partition candidate list -------------@LBA 02060200
.*                                                                 @LBA 02061190
         AIF   (&PCCT EQ 0).EGCANL   Partition candidate list is       *02062180
                                     empty                         @LBA 02063170
         SPACE 1                                                   @LBA 02064160
*----------------   Partition Candidate List  ---------------------@LBA 02065150
&SUB     SETA  1                      Point to first partition     @LBA 02066140
&CWK     SETC  '@C&CNO'               Label for first partition    @LBA 02067130
.CANL10  ANOP  ,                                                   @LBA 02068120
&CWK     DC    CL8'&PCAN(&SUB)'       Partition                    @LBA 02069110
&CWK     SETC  ''                     Blank out label              @LBA 02070100
&SUB     SETA  &SUB+1                 Point to next entry in array @LBA 02071090
         AIF   (&SUB LE &PCCT).CANL10   Process next partition in      *02072080
                                        candidate list             @LBA 02073070
.EGCANL  ANOP  ,                                                   @LBA 02074060
.*                                                                      02075050
.*                                                                 @LBA 02076040
.*---------------   Generate List of connected channel paths ------@M4A 02077030
.*                                                                 @M4A 02078020
         AIF   (&NTPAT EQ 0).EGTCPL   Connected channel path list is   *02079010
                                     empty                         @M4A 02080000
         SPACE 1                                                   @M4A 02080990
*----------------   List of connected channel paths ---------------@M4A 02081980
&CWK     SETC  '@X&CNO'               Label for first channel path @M4A 02082970
&CWK     DC    H'&NTPAT'              Number of connected chpids   @M4A 02083960
&CWK     SETC  ''                     Blank out label              @M4A 02084950
&SUB     SETA  1                      Point to first target chpid  @M4A 02085940
.TCPL10  ANOP  ,                                                   @M4A 02086930
         DC    CL8'&EPR(&SUB)'        Processor                    @M4A 02087920
         DC    XL1'&ECHP(&SUB)'       Channel path id              @M4A 02088910
         AIF   ('&ECUN(&SUB)' EQ '').TCPL15                        @M4A 02089900
         DC    AL1(1)                 Number of devices            @M4A 02090890
         DC    XL2'&ECUN(&SUB)'       Control unit number          @M4A 02091880
         DC    XL2'&EDEV(&SUB)'       Device number 1              @M4A 02092870
         DC    XL2'0000'              Device number suffix         @M4A 02093860
         DC    XL28'00'               Reserved                     @M4A 02094850
         AGO   .TCPL18                                             @M4A 02095840
.TCPL15  ANOP  ,                                                   @M4A 02096830
         DC    XL35'00'               Reserved                     @M4A 02097820
.TCPL18  ANOP  ,                                                   @M4A 02098810
&SUB     SETA  &SUB+1                 Point to next entry in array @M4A 02099800
         AIF   (&SUB LE &NTPAT).TCPL10  Process next channel path in   *02100790
                                        connected channel path lst @M4A 02101780
.EGTCPL  ANOP  ,                                                   @M4A 02102770
.*                                                                      02103760
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to      02104750
         MNOTE ' '                     occur if NOGEN specified         02105740
         MEND                                                           02106730
*/*==================================================================*/ 02107720
*/*==================================================================*/ 02108710
         TITLE 'HCD MACRO LISTING - CNTLUNIT - CONTROL UNIT'            02109700
         MACRO  --  CONTROL UNIT INFORMATION                            02110690
&SYMBOL  CNTLUNIT &BRSTMPX=,&CUADD=,&CUNUMBR=,&LINK=,&PATH=,           *02111680
               &PROTOCL=,&REDRIVE=,&SHARED=,&UNIT=,&UNITADD=,&DESC=,   *02112670
               &SERIAL=,&SWPORT=                                        02113660
.*                                                                 @M4C 02114650
         AGO   .SKIP                                                    02115640
*/********************************************************************/ 02116630
*/*                                                                  */ 02117620
*/*01*  MACRO NAME = CNTLUNIT                                        */ 02118610
*/*                                                                  */ 02119600
*/*01*  DESCRIPTIVE NAME = Control Unit characteristics.             */ 02120590
*/*                                                                  */ 02121580
*/*01*  MACRO CALL =                                                 */ 02122570
*/*       LABEL CNTLUNIT  BRSTMPX= NOT PARSED                        */ 02123560
*/*                       CUADD=number                               */ 02124550
*/*                       CUNUMBR=number                             */ 02125540
*/*                       DESC='description'                     @N3A*/ 02126530
*/*                       LINK=(addr<,addr>...)                      */ 02127520
*/*                       PATH=(chpid<,chpid|**>...)             @M5C*/ 02128510
*/*                       PROTOCL=D | S | S4 (D=default)             */ 02129500
*/*                       REDRIVE= NOT PARSED                        */ 02130490
*/*                       SERIAL=serial number                   @N3A*/ 02131480
*/*                       SHARED=Y | YB | N                          */ 02132470
*/*                       SWPORT=((sw1,port1),(sw2,port2),...)   @M4A*/ 02133460
*/*                       UNIT=type                                  */ 02134450
*/*                       UNITADD=((address<,number>),...)           */ 02135440
*/*                                                                  */ 02136430
*/*01*  FUNCTION =  Describes the characteristics of the control     */ 02137420
*/*                 unit, the channel paths to which the control     */ 02138410
*/*                 unit is attached, and the unit addresses the     */ 02139400
*/*                 control unit recognizes.                         */ 02140390
*/*                                                                  */ 02141380
*/*01*  NOTES =  A control unit can be attached to a maximum of      */ 02142370
*/*              eight channel paths.                                */ 02143360
*/*                                                                  */ 02144350
*/*02*    DEPENDENCIES = None.                                       */ 02145340
*/*                                                                  */ 02146330
*/*02*    RESTRICTIONS = For HCD use only.                           */ 02147320
*/*                                                                  */ 02148310
*/*01*  INPUT =   BRSTMPX= NOT PARSED                                */ 02149300
*/*             # CUADD=   2 Hex digit control unit address      @HAC*/ 02150290
*/*             # CUNUMBR= 3 or 4 Hex digit control unit number.     */ 02151280
*/*               DESC=    String of 0 to 32 EBCDIC characters.  @N3A*/ 02152270
*/*             # PATH=    Up to 8 channel paths (2 digtits ea) to   */ 02153260
*/*                        which the control unit is attached.       */ 02154250
*/*                        For a floating channel path,          @M5A*/ 02155240
*/*                        two asterisks are coded.              @M5A*/ 02156230
*/*               LINK=    Up to 8 link addresses (2 digtits ea)     */ 02157220
*/*               PROTOCL= Specifies the interface protocol.         */ 02158210
*/*                        D  = 1                                    */ 02159200
*/*                        S  = 2                                    */ 02160190
*/*                        S4 = 3                                    */ 02161180
*/*               REDRIVE= NOT PARSED                                */ 02162170
*/*               SERIAL=  Serial number (1 to 10 chars)         @N3A*/ 02163160
*/*               SHARED=  Level of concurrency of I/O requests that */ 02164150
*/*                        the channel allows for the control unit.  */ 02165140
*/*               SWPORT=  Up to 32 sublists (switch id,port id) @B1C*/ 02166130
*/*             # UNIT=    Type of control unit (name).              */ 02167120
*/*               UNITADD= Specify the unit addresses (2 digits) @LTC*/ 02168110
*/*                        of the I/O devices that are recognized    */ 02169100
*/*                        by the control unit.                      */ 02170090
*/*                        The number field (3 digits) is the count  */ 02171080
*/*                        of consecutive devices (up to 256)        */ 02172070
*/*             # - Required keyword                                 */ 02173060
*/*                                                                  */ 02174050
*/*01*  OUTPUT = Internal text                                       */ 02175040
*/*                                                                  */ 02176030
*/********************************************************************/ 02177020
*/*                                                                     02178010
.*                                                                      02179000
.SKIP    ANOP                                                           02179990
         GBLA  &SYSITRN           HCD statement number                  02180980
         GBLA  &$STRLEN           String length                    @L2A 02181970
         GBLB  &$ERR              Global error flag                @M4A 02182960
         LCLA  &AWK               Arithmetic work variable              02183950
         LCLA  &AWK1              Arithmetic work variable 1            02184940
         LCLB  &ASTF              Asteriks flag                         02185930
         LCLA  &COMMA             Index to comma in sublist entry       02186920
         LCLA  &FLAG,&LBIT        Flag byte variables                   02187910
         LCLA  &FCHPC             Count of floating CHPIDs         @M5A 02188900
         LCLA  &SCHPC             Count of static CHPIDs           @M5A 02189890
         LCLA  &L                 Maximum or required operand length    02190880
         LCLA  &LEN               Actual operand length            @N3A 02191870
         LCLA  &MAXVAL            Maximum value of operand              02192860
         LCLC  &MAXVALC           Maximum value of operand              02193850
         LCLA  &MAXLINK           Maximum number of LINK id's           02194840
         LCLA  &MAXPATH           Maximum number of PATH id's           02195830
         LCLA  &MAXSWPO           Maximum number of port connects  @B1A 02196820
         LCLA  &MAXUNAD           Maximum number of unit addresses      02197810
         LCLA  &NUMUNA            Number of UNITADD values              02198800
         LCLA  &SINDX             Starting substring index              02199790
         LCLA  &NDX               Substring index                       02200780
         LCLA  &SUB               Sublist element number                02201770
         LCLB  &ERROR             Error flag                            02202760
         LCLA  &PROTCL            PROTOCL number                        02203750
         LCLA  &SHARD             I/O concurrency level                 02204740
         LCLC  &CNO               EBCDIC version of SYSITRN             02205730
         LCLC  &CWK               Character work variable               02206720
         LCLC  &DESCR             Description work area            @N3A 02207710
         LCLC  &DSC               Description work area            @L2A 02208700
         LCLC  &SERR              Serial number work area          @M5A 02209690
         LCLC  &LINKID            LINK sublist entry (to parse)         02210680
         LCLC  &LIADDR(8)         Array of LINK address identifiers     02211670
         LCLC  &PATHID            PATH sublist entry (to parse)         02212660
         LCLC  &PACHID(8)         Array of channel PATH identifiers     02213650
         LCLC  &UNADD             Unit address sublist entry (to parse) 02214640
         LCLC  &UNAE(8)           Unit addresses from UNITADD sublist   02215630
         LCLC  &UNACNT(8)         Number of sequential unit addresses   02216620
         LCLC  &UNITN             Unit name                             02217610
         LCLC  &UNITM             Unit type  (MODEL)                    02218600
         LCLA  &NSWPO             Number of entry switch ports     @M4A 02219590
         LCLB  &SINGLE            Only single list element         @M4A 02220580
         LCLC  &ESWPORT           Character sublist entry          @M4A 02221570
         LCLC  &ESWID             Character sublist entry          @M4A 02222560
         LCLC  &ESW(32)           Entry switch id set from SWPORT  @B1C 02223550
         LCLC  &EPORT(32)         Entry switch port id from SWPORT @B1C 02224540
         ACTR  10000              Set for infinite loop control         02225530
&SYMBOL  TXTHDR CNTLUNIT                                                02226520
.*                                                                      02227510
.********************************************************************** 02228500
.*                                                                    * 02229490
.*       Check if unrecognized parameters are specified               * 02230480
.*                                                                    * 02231470
.********************************************************************** 02232460
         AIF   (N'&SYSLIST EQ 0).XPOS10    No positional parameter @P3A 02233450
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @P3A 02234440
&ERROR   SETB  1                  Indicate error                   @P3A 02235430
         AGO   .XPOS10            and continue                     @P3A 02236420
.*                                                                      02237410
.XPOS10  ANOP  ,                                                   @P3A 02238400
.*                                                                      02239390
.********************************************************************** 02240380
.*                                                                    * 02241370
.*       Validate BRSTMPX             --- NOT PARSED ---              * 02242360
.*                                                                    * 02243350
.********************************************************************** 02244340
         AIF   ('&BRSTMPX' EQ '').CKCUADD    BRSTMPX not specified      02245330
         MNOTE *,'    005 BRSTMPX KEYWORD IGNORED BY MVS/XA.'           02246320
.********************************************************************** 02247310
.*                                                                    * 02248300
.*       Validate CUADD                1 or 2 HEX digits          @HAC* 02249290
.*                                                                    * 02250280
.********************************************************************** 02251270
.CKCUADD ANOP                                                           02252260
&L       SETA  2                             Maximum CUADD length  @HAC 02253250
         AIF   ('&CUADD' EQ '').CKCUNUM      CUADD not specified        02254240
         AIF   (N'&CUADD GT 1).SUBCUA        Invalid in sublist format  02255230
         AIF   (K'&CUADD LE &L).CUACHAR      Number of characters  @HAC 02256220
         MNOTE 8,'032 CUADD PARAMETER MUST NOT EXCEED &L CHARACTERS.'   02257210
&ERROR   SETB  1                      Indicates error              @HAC 02258200
         AGO   .CKCUNUM                                                 02259190
.CUACHAR ANOP                                                           02260180
&NDX     SETA 1                       Point to first digit              02261170
.*                                                                 @HAA 02262160
.CUALOOP ANOP ,                                                    @HAA 02263150
.*       Loop to validate each number in the chpid id                   02264140
.*       Validate the CUADD                                             02265130
         AIF   ('&CUADD'(&NDX,1) LT 'A').BADCUA Invalid digit      @HAC 02266120
         AIF   ('&CUADD'(&NDX,1) LE 'F').GOODCUA (A-F)             @HAC 02267110
         AIF   ('&CUADD'(&NDX,1) LT '0').BADCUA Invalid digit      @HAC 02268100
         AIF   ('&CUADD'(&NDX,1) LE '9').GOODCUA (0-9)             @HAC 02269090
.BADCUA  ANOP                         Invalid char in generic name      02270080
&CWK     SETC '&CUADD'(&NDX,1)        Isolate invalid character    @HAA 02271070
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN CUADD PARAMETER.'   02272060
&ERROR   SETB  1                      Indicates error                   02273050
         AGO   .CKCUNUM               Go check next keyword        @HAA 02274040
.GOODCUA ANOP  ,                                                   @HAA 02275030
&NDX     SETA  &NDX+1                 Point to next digit          @HAA 02276020
         AIF (&NDX LE K'&CUADD).CUALOOP Check next digit           @HAA 02277010
.*                                                                5@HDD 02278000
         AGO   .CKCUNUM               Go check next keyword        @HAA 02278990
.SUBCUA  MNOTE 8,'014 CUADD PARAMETER MAY NOT BE A SUBLIST.'       @HAA 02279980
&ERROR   SETB  1                      Indicates error              @HAA 02280970
.********************************************************************** 02281960
.*                                                                    * 02282950
.*       Validate CUNUMBR              1, 2, 3 or 4 Hex digits        * 02283940
.*                                                                    * 02284930
.********************************************************************** 02285920
.CKCUNUM ANOP                                                           02286910
&L       SETA  4                             Max. CUNUMBR length        02287900
         AIF   ('&CUNUMBR' EQ '').NOCUNUM    CUNUMBR not specified      02288890
         AIF   (N'&CUNUMBR GT 1).CUSUB       Invalid in sublist format  02289880
         AIF   (K'&CUNUMBR EQ &L).CUCHAR     Must be exact length       02290870
         AIF   (K'&CUNUMBR EQ &L-1).CUCHAR   Must be exact length       02291860
         AIF   (K'&CUNUMBR EQ &L-2).CUCHAR   Must be exact length       02292850
         AIF   (K'&CUNUMBR EQ &L-3).CUCHAR   Must be exact length       02293840
&AWK     SETA  &L-3                                                     02294830
        MNOTE 8,'022 CUNUMBR PARAMETER MUST BE BETWEEN &AWK AND &L DIGI*02295820
               TS.'                                                     02296810
&ERROR   SETB  1                      Indicates error                   02297800
.CUCHAR  ANOP                                                           02298790
.*                                                                      02299780
.*       Loop to validate each character in the control unit number     02300770
.*                                                                      02301760
&NDX     SETA  1                      Points to 1st digit of cu number  02302750
.CULOOP  ANOP                                                           02303740
         AIF   ('&CUNUMBR'(&NDX,1) LT 'A').BADCU    Non-hex digit       02304730
         AIF   ('&CUNUMBR'(&NDX,1) LE 'F').GOODCU   Hex digit (A-F)     02305720
         AIF   ('&CUNUMBR'(&NDX,1) LT '0').BADCU    Non-hex digit       02306710
         AIF   ('&CUNUMBR'(&NDX,1) LE '9').GOODCU   Hex digit (0-9)     02307700
.BADCU   ANOP                         Invalid HEX digit                 02308690
&CWK     SETC  '&CUNUMBR'(&NDX,1)     Isolate invalid number            02309680
         MNOTE 8,'021 INVALID HEX DIGIT ''&CWK'' IN CUNUMBR PARAMETER.' 02310670
&ERROR   SETB  1                      Indicates error                   02311660
.GOODCU  ANOP                                                           02312650
&NDX     SETA  &NDX+1                 Points to next digit in cu number 02313640
         AIF   (&NDX LE K'&CUNUMBR).CULOOP  Check next digit            02314630
         AGO   .CKPATH                Go check next keyword             02315620
.CUSUB   MNOTE 8,'014 CUNUMBR NOT VALID IN SUBLIST FORMAT.'             02316610
&ERROR   SETB  1                      Indicates error                   02317600
         AGO   .CKPATH                Go check next keyword             02318590
.NOCUNUM MNOTE 8,'002 CUNUMBR KEYWORD NOT SPECIFIED.'                   02319580
&ERROR   SETB  1                      Indicates error                   02320570
.********************************************************************** 02321560
.*                                                                    * 02322550
.*       Validate PATH                1 to &MAXPATH chpid's           * 02323540
.*                                                                    * 02324530
.********************************************************************** 02325520
.CKPATH  ANOP                                                           02326510
&MAXPATH SETA  8                       Maximum number of PATH id's      02327500
&L       SETA  2                       Required PATH length             02328490
         AIF ('&PATH' EQ '').NOPATH    PATH not specified               02329480
         AIF (N'&PATH LE &MAXPATH).PASUBLE  Number of sublists          02330470
         MNOTE 8,'015 PATH PARAMETER EXCEEDS &MAXPATH SUBLIST ENTRIES.' 02331460
&ERROR   SETB  1                       Indicate error                   02332450
.PASUBLE ANOP                                                           02333440
&SUB     SETA  1                       Point to first sublist           02334430
&FCHPC   SETA  0                       Initialize floater count    @M5A 02335420
.********************************************************************** 02336410
.*       Loop to validate each sublist entry                          * 02337400
.********************************************************************** 02338390
.PALOOP  ANOP                                                           02339380
&PATHID  SETC  '&PATH(&SUB)'          Isoloate sublist entry            02340370
         AIF ('&PATH(&SUB)' EQ '').PANULL   Null sublist entry          02341360
         AIF ('&PATH(&SUB)' EQ '**').PAASTR  Floating entry        @M5A 02342350
         AIF (K'&PATHID EQ &L).PACHAR  Must be exact length parens)     02343340
         MNOTE 8,'022 PATH PARAMETER SUBLIST ENTRY &SUB MUST BE &L DIGI*02344330
               TS.'                                                     02345320
&ERROR   SETB  1                      Indicate error                    02346310
         AGO   .PACHAR                                             @M5A 02347300
.PAASTR  ANOP  ,                                                   @M5A 02348290
&FCHPC   SETA  &FCHPC+1               Increment number of floaters @M5A 02349280
         AGO   .NXTPAID               Continue with next           @M5A 02350270
.PACHAR  ANOP                                                           02351260
&NDX     SETA  1                      Point to 1st digit of number      02352250
.*                                                                      02353240
.*       Loop to validate each character in the chpid number            02354230
.PALOOPA ANOP                                                           02355220
         AIF   ('&PATHID'(&NDX,1) LT 'A').BADPA    Non-hex digit        02356210
         AIF   ('&PATHID'(&NDX,1) LE 'F').GOODPA   Hex digit (A-F)      02357200
         AIF   ('&PATHID'(&NDX,1) LT '0').BADPA    Non-hex digit        02358190
         AIF   ('&PATHID'(&NDX,1) LE '9').GOODPA   Hex digit (0-9)      02359180
.BADPA   ANOP                         Invalid HEX digit                 02360170
&CWK     SETC  '&PATHID'(&NDX,1)      Isolate invalid number            02361160
         MNOTE 8,'021 INVALID HEX DIGIT ''&CWK'' IN SUBLIST ENTRY &SUB *02362150
               FOR PATH PARAMETER.'                                     02363140
&ERROR   SETB  1                      Indicates error                   02364130
.GOODPA  ANOP                                                           02365120
&NDX     SETA  &NDX+1                 Point to next digit in number     02366110
         AIF   (&NDX LE K'&PATHID).PALOOPA  Check next digit            02367100
         AIF   (&ERROR EQ 1).NXTPAID  Check next chpid number           02368090
&PACHID(&SUB)  SETC '&PATH(&SUB)'     Insert chpid number into array    02369080
         AGO  .NXTPAID                Process next PATH chpid number    02370070
.PANULL  MNOTE 8,'018 PATH SUBLIST ENTRY &SUB IS MISSING.'              02371060
&ERROR   SETB 1                       Indicate error                    02372050
.*                                                                      02373040
.NXTPAID ANOP                         Process next sublist entry        02374030
&SUB     SETA &SUB+1                  Point to next path id entry       02375020
         AIF  (&SUB LE N'&PATH).PALOOP  More PATH id's ...              02376010
&SCHPC   SETA N'&PATH-&FCHPC          Count of static CHPIDs       @M5A 02377000
         AGO  .CKPROT                  Go check next keyword            02377990
.NOPATH  MNOTE 8,'002 PATH KEYWORD NOT SPECIFIED.'                      02378980
&ERROR   SETB 1                        Indicate error                   02379970
.********************************************************************** 02380960
.*                                                                    * 02381950
.*       Validate PROTOCL              PROTOCL=D|S|S4                 * 02382940
.*                                       D  = 1                       * 02383930
.*                                       S  = 2                       * 02384920
.*                                       S4 = 3                       * 02385910
.*                                                                    * 02386900
.********************************************************************** 02387890
.CKPROT  ANOP                                                           02388880
&PROTCL  SETA 0                                                         02389870
         AIF ('&PROTOCL' EQ '').NOPROT                                  02390860
         AIF ('&PROTOCL' NE 'D').PROTS  Not D                           02391850
&PROTCL  SETA 1                        PROTOCL=D                        02392840
         AGO  .CKRED                   Go check next keyword            02393830
.PROTS   AIF ('&PROTOCL' NE 'S').PROTS4   Not S                         02394820
&PROTCL  SETA 2                        PROTOCL=S                        02395810
         AGO  .CKRED                   Go check next keyword            02396800
.PROTS4  AIF ('&PROTOCL' NE 'S4').PROTERR  Not S4                       02397790
&PROTCL  SETA 3                        PROTOCL=S4                       02398780
         AGO  .CKRED                   Go check next keyword            02399770
.PROTERR MNOTE 8,'003 PROTOCL=&PROTOCL IS INVALID.'                     02400760
&ERROR   SETB 1                        Indicate error                   02401750
.NOPROT  ANOP                                                           02402740
.********************************************************************** 02403730
.*                                                                    * 02404720
.*       Validate REDRIVE             --- NOT PARSED ---              * 02405710
.*                                                                    * 02406700
.********************************************************************** 02407690
.CKRED   ANOP                                                           02408680
         AIF   ('&REDRIVE' EQ '').CKSHR    REDRIVE not specified        02409670
         MNOTE *,'    005 REDRIVE KEYWORD IGNORED BY MVS/XA.'           02410660
.********************************************************************** 02411650
.*                                                                    * 02412640
.*       Validate SHARED               SHARED=Y|YB|N                  * 02413630
.*                                       N  = 2                       * 02414620
.*                                       Y  = 1                       * 02415610
.*                                       YB = 1                       * 02416600
.*                                                                    * 02417590
.********************************************************************** 02418580
.CKSHR   ANOP                                                           02419570
         AIF ('&SHARED' EQ '').CKUNIT  Exit if Null                     02420560
         AIF ('&SHARED' NE 'Y').SHRYB  Not Y                            02421550
&SHARD   SETA 1                        SHARED=Y                         02422540
         AGO  .CKUNIT                  Go check next keyword            02423530
.SHRYB   AIF ('&SHARED' NE 'YB').SHRN  Not YB                           02424520
&SHARD   SETA 1                        SHARED=YB                        02425510
         AGO  .CKUNIT                  Go check next keyword            02426500
.SHRN    AIF ('&SHARED' NE 'N').SHRERR  Not N                           02427490
&SHARD   SETA 2                        SHARED=N                         02428480
         AGO  .CKUNIT                  Go check next keyword            02429470
.SHRERR  MNOTE 8,'003 SHARED=&SHARED IS INVALID.'                       02430460
&ERROR   SETB 1                        Indicate error                   02431450
.********************************************************************** 02432440
.*                                                                    * 02433430
.*       Validate UNIT                 type <= 8 alphanumerics        * 02434420
.*                                                                    * 02435410
.********************************************************************** 02436400
.CKUNIT  ANOP                                                           02437390
&L       SETA  8                        Maximum UNIT length             02438380
         AIF   ('&UNIT' EQ '').NOUNIT   UNIT not specified              02439370
         AIF   (N'&UNIT GT 1).UNISUB    Invalid in sublist format       02440360
         AIF   (K'&UNIT LE &L).UNICHAR  Maximum number of characters    02441350
         MNOTE 8,'033 UNIT PARAMETER EXCEEDS &L CHARACTERS.'            02442340
&ERROR   SETB  1                      Indicates error                   02443330
.UNICHAR ANOP                                                           02444320
&NDX     SETA  1                      Point to 1st character            02445310
.*                                                                      02446300
.*       Loop to validate each character in the UNIT name               02447290
.UNILOOP ANOP                                                           02448280
         AIF   ('&UNIT'(&NDX,1) EQ '$').GOODUNI   ($)              @H4A 02449270
         AIF   ('&UNIT'(&NDX,1) EQ '@').GOODUNI   (@)              @H4A 02450260
         AIF   ('&UNIT'(&NDX,1) EQ '#').GOODUNI   (#)              @H4A 02451250
         AIF   ('&UNIT'(&NDX,1) EQ '-').CKMODEL   (-)                   02452240
         AIF   ('&UNIT'(&NDX,1) LT 'A').BADUNI                          02453230
         AIF   ('&UNIT'(&NDX,1) LE 'I').GOODUNI   (A-I)                 02454220
         AIF   ('&UNIT'(&NDX,1) LT 'J').BADUNI                          02455210
         AIF   ('&UNIT'(&NDX,1) LE 'R').GOODUNI   (J-R)                 02456200
         AIF   ('&UNIT'(&NDX,1) LT 'S').BADUNI                          02457190
         AIF   ('&UNIT'(&NDX,1) LE 'Z').GOODUNI   (S-Z)                 02458180
         AIF   ('&UNIT'(&NDX,1) LT '0').BADUNI                          02459170
         AIF   ('&UNIT'(&NDX,1) LE '9').GOODUNI   (0-9)                 02460160
.BADUNI  ANOP                         Invalid character                 02461150
&CWK     SETC  '&UNIT'(&NDX,1)        Isolate invalid character         02462140
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN UNIT PARAMETER.'    02463130
&ERROR   SETB  1                      Indicates error                   02464120
.GOODUNI ANOP                                                           02465110
&NDX     SETA  &NDX+1                 Points to next character of UNIT  02466100
         AIF   (&NDX LE K'&UNIT).UNILOOP    Check next character        02467090
&UNITN   SETC  '&UNIT'                Save specified UNIT               02468080
         AGO   .CKUNADD               Go check next keyword             02469070
.UNISUB  MNOTE 8,'014 UNIT NOT VALID IN SUBLIST FORMAT.'                02470060
&ERROR   SETB  1                      Indicates error                   02471050
         AGO   .CKUNADD               Go check next keyword             02472040
.NOUNIT  MNOTE 8,'002 UNIT KEYWORD NOT SPECIFIED.'                      02473030
&ERROR   SETB  1                      Indicates error                   02474020
         AGO   .CKUNADD               Go check next keyword        @M3A 02475010
.*                                                                      02476000
.*       Loop to validate each character in the control unit type       02476990
.CKMODEL ANOP                                                           02477980
&NDX     SETA  &NDX-1                 Last character in UNIT            02478970
&UNITN   SETC  '&UNIT'(1,&NDX)        Save specified unit name          02479960
&NDX     SETA  &NDX+1                 Point back to '-'                 02480950
&MDX     SETA  &NDX                   Save this position                02481940
         AIF   (&NDX EQ K'&UNIT).BADMOD                                 02482930
&NDX     SETA  &NDX+1                 Point to control unit type        02483920
&MDX     SETA  &NDX                   Save this position                02484910
.MODLOOP ANOP                                                           02485900
         AIF   ('&UNIT'(&NDX,1) EQ '$').GOODMOD   ($)              @H4A 02486890
         AIF   ('&UNIT'(&NDX,1) EQ '@').GOODMOD   (@)              @H4A 02487880
         AIF   ('&UNIT'(&NDX,1) EQ '#').GOODMOD   (#)              @H4A 02488870
         AIF   ('&UNIT'(&NDX,1) LT 'A').BADMOD                          02489860
         AIF   ('&UNIT'(&NDX,1) LE 'I').GOODMOD   (A-I)                 02490850
         AIF   ('&UNIT'(&NDX,1) LT 'J').BADMOD                          02491840
         AIF   ('&UNIT'(&NDX,1) LE 'R').GOODMOD   (J-R)                 02492830
         AIF   ('&UNIT'(&NDX,1) LT 'S').BADMOD                          02493820
         AIF   ('&UNIT'(&NDX,1) LE 'Z').GOODMOD   (S-Z)                 02494810
         AIF   ('&UNIT'(&NDX,1) LT '0').BADMOD                          02495800
         AIF   ('&UNIT'(&NDX,1) LE '9').GOODMOD   (0-9)                 02496790
.BADMOD  ANOP                         Invalid character                 02497780
&CWK     SETC  '&UNIT'(&NDX,1)        Isolate invalid character         02498770
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN UNIT PARAMETER.'    02499760
&ERROR   SETB  1                      Indicates error                   02500750
.GOODMOD ANOP                                                           02501740
&NDX     SETA  &NDX+1                 Points to next character of UNIT  02502730
         AIF   (&NDX LE K'&UNIT).MODLOOP    Check next character        02503720
&UNITM   SETC  '&UNIT'(&MDX,(&NDX-&MDX)) Save control unit type         02504710
.********************************************************************** 02505700
.*                                                                    * 02506690
.*       Validate UNITADD             (address,count) ...             * 02507680
.*                                                                    * 02508670
.********************************************************************** 02509660
.CKUNADD ANOP                                                           02510650
&MAXUNAD SETA  8                      Maximum number of unit addresses  02511640
         AIF   ('&UNITADD' EQ '').NOUNITA   UNITADD not specified       02512630
         AIF   (N'&UNITADD LE &MAXUNAD).UNASUB   Number of sublists     02513620
         MNOTE 8,'015 UNITADD PARAMETER EXCEEDS &MAXUNAD SUBLIST ENTRIE*02514610
               S.'                                                      02515600
&ERROR   SETB  1                      Indicates error                   02516590
.UNASUB  ANOP                         Process each sublist              02517580
&SUB     SETA  1                      First sublist                     02518570
.********************************************************************** 02519560
.*       Loop to validate each sublist entry                          * 02520550
.********************************************************************** 02521540
         AIF   ('&UNITADD'(1,1) EQ '(').PARENS  check if parens         02522530
&UNADD   SETC  '&UNITADD'             unit address without parens       02523520
&NDX     SETA  1                      start check with first item       02524510
&SINDX   SETA  1                      starting index                    02525500
&NUMUNA  SETA  1                      one operand specified             02526490
         AGO   .UNALOOP               check syntax                      02527480
.PARENS  ANOP                                                           02528470
&NUMUNA  SETA  N'&UNITADD             number of UNITADD values          02529460
         AIF   ('&UNITADD'(2,1) EQ '(').UNLOOP check if sublist form    02530450
&UNADD   SETC  '&UNITADD'             no sublist form                   02531440
&NUMUNA  SETA  1                      only one value                    02532430
         AGO   .PAREN1                                                  02533420
.UNLOOP  ANOP                                                           02534410
&UNADD   SETC  '&UNITADD(&SUB)'       Isolate sublist entry             02535400
.PAREN1  ANOP                                                           02536390
         AIF   ('&UNITADD(&SUB)' EQ '').UNANUL  Null sublist entry      02537380
         AIF   ('&UNADD'(1,1) NE '(').NOPAREN  First char not '('       02538370
         AIF   (K'&UNADD EQ 2).UNANUL No operands within parens '()'    02539360
&NDX     SETA  2                      Point past parenthesis            02540350
&SINDX   SETA  2                      starting index                    02541340
.*                                                                      02542330
.*       Loop to validate each character in the unit address field      02543320
.UNALOOP ANOP                         Unit address validity loop        02544310
&L       SETA  2                      Required address length           02545300
         AIF   ('&UNADD'(&NDX,1) EQ ',').SETUNAD    End of number       02546290
         AIF   ('&UNADD'(&NDX,1) EQ ')').SETUNAD    End of number       02547280
         AIF   ('&UNADD'(&NDX,1) LT 'A').BADUNA     Non-hex digit       02548270
         AIF   ('&UNADD'(&NDX,1) LE 'F').GOODUNA    Good digit (A-F)    02549260
         AIF   ('&UNADD'(&NDX,1) LT '0').BADUNA     Non-hex digit       02550250
         AIF   ('&UNADD'(&NDX,1) LE '9').GOODUNA    Good digit (0-9)    02551240
.BADUNA  ANOP                         Invalid HEX digit                 02552230
&CWK     SETC  '&UNADD'(&NDX,1)       Isolate invalid number            02553220
         MNOTE 8,'021 INVALID HEX DIGIT ''&CWK'' IN UNIT ADDRESS SUBLIS*02554210
               T ENTRY &SUB FOR UNITADD PARAMETER.'                     02555200
&ERROR   SETB  1                      Indicates error                   02556190
.GOODUNA ANOP                                                           02557180
&NDX     SETA  &NDX+1                 Point to next digit               02558170
         AIF   (&NDX LE K'&UNADD).UNALOOP  Check next digit             02559160
.*                                                                      02560150
.SETUNAD ANOP                                                           02561140
         AIF   (&NDX EQ &SINDX).NOUNADD Unit address not specified '(,' 02562130
         AIF   (&NDX NE &L+&SINDX).UNALEN Too many/few digits in addr   02563120
         AIF   (&ERROR EQ 1).UNASKIP  Skip insert if error encountered  02564110
&UNAE(&SUB) SETC '&UNADD'(&SINDX,&NDX-&SINDX) Insert unit address       02565100
.UNASKIP AIF   (&NDX GE K'&UNADD ).NOCNT1 Go insert default count       02566090
         AIF   ('&UNADD'(&NDX,1) EQ ',').CKCNT  Go do count             02567080
         AGO   .UNACOMA               Missing comma between sublists    02568070
.UNALEN  MNOTE 8,'022 UNITADD PARAMETER UNIT ADDRESS SUBLIST ENTRY &SUB*02569060
                MUST BE &L DIGITS.'                                     02570050
&ERROR   SETB  1                      Indicates error                   02571040
         AGO   .CKCNT                 Go check address count            02572030
.NOUNADD MNOTE 8,'017 UNIT ADDRESS REQUIRED IN SUBLIST ENTRY &SUB FOR U*02573020
               NITADD PARAMETER.'                                       02574010
&ERROR   SETB  1                      Indicates error                   02575000
.********************************************************************** 02575990
.*       Validate address count field                                 * 02576980
.********************************************************************** 02577970
.CKCNT   ANOP                         Check address count               02578960
&L       SETA  3                      Maximum count length              02579950
&MAXVAL  SETA  256                    Maximum UNITADD number value      02580940
&MAXVALC SETC  '&MAXVAL'              Maximum UNITADD number value      02581930
         AIF   ('&UNADD'(&NDX,1) NE ',').NEXTSLE  Bad address length    02582920
&COMMA   SETA  &NDX                   Save position of comma            02583910
&NDX     SETA  &NDX+1                 First digit of count              02584900
         AIF   (&NDX EQ K'&UNADD).NOCNT  No 'count' after comma         02585890
.*                                                                      02586880
.*       Loop to validate each number in the unit address count         02587870
.UNNLOOP ANOP                         Check address count               02588860
         AIF   ('&UNADD'(&NDX,1) EQ ',').OPCNT   Too many operands      02589850
         AIF   ('&UNADD'(&NDX,1) EQ ')').SETUNUM  End of digit          02590840
         AIF   ('&UNADD'(&NDX,1) LT '0').BADCNT   Not decimal           02591830
         AIF   ('&UNADD'(&NDX,1) LE '9').GOODCNT  Decimal               02592820
.BADCNT  ANOP                         Invalid DECIMAL digit             02593810
&CWK     SETC  '&UNADD'(&NDX,1)       Isolate invalid number            02594800
         MNOTE 8,'021 INVALID DECIMAL DIGIT ''&CWK'' IN ADDRESS COUNT S*02595790
               UBLIST ENTRY &SUB FOR UNITADD PARAMETER.'                02596780
&ERROR   SETB  1                      Indicates error                   02597770
.GOODCNT ANOP                                                           02598760
&NDX     SETA  &NDX+1                 Points to next digit in dev cnt   02599750
         AIF   (&NDX LE K'&UNADD).UNNLOOP  Check next digit             02600740
.*                                                                      02601730
.SETUNUM AIF   (&NDX NE K'&UNADD).UNACOMA  Extra chars after ')'        02602720
         AIF   (&NDX GT &COMMA+&L+1).UNACLEN  Count exceeds max length  02603710
         AIF   (&NDX LT &COMMA+&L+1).INLIM    Count within limit        02604700
         AIF   ('&UNADD'(&COMMA+1,&L) LE '&MAXVALC').INLIM  in lim      02605690
         MNOTE 8,'042 UNITADD PARAMETER ADDRESS COUNT SUBLIST ENTRY &SU*02606680
               B MUST BE A NUMBER FROM 1 TO &MAXVAL.'                   02607670
&ERROR   SETB  1                      Indicates error                   02608660
         AGO   .NEXTSLE               Go process next sublist entry     02609650
.INLIM   ANOP                                                           02610640
         AIF   (&ERROR EQ 1).NEXTSLE  Go process next sublist entry     02611630
         AIF   (&NDX EQ &COMMA+1).NOCNT   Null entry, default           02612620
&UNACNT(&SUB) SETC '&UNADD'(&COMMA+1,&NDX-&COMMA-1) Device count        02613610
         AGO   .NEXTSLE               Go process next sublist entry     02614600
.NOCNT   AIF   (&NDX NE K'&UNADD).UNACOMA  Missing comma                02615590
.NOCNT1  AIF   (&ERROR EQ 1).NEXTSLE  Go process next sublist entry     02616580
&UNACNT(&SUB) SETC '1'                Use default device count          02617570
         AGO   .NEXTSLE               Process next entry in sublist     02618560
.UNACLEN MNOTE 8,'023 UNITADD PARAMETER ADDRESS COUNT SUBLIST ENTRY &SU*02619550
               B EXCEEDS &L DIGITS.'                                    02620540
&ERROR   SETB  1                      Indicates error                   02621530
         AGO   .NEXTSLE               Go process next sublist entry     02622520
.OPCNT   MNOTE 8,'016 UNITADD SUBLIST ENTRY &SUB EXCEEDS 2 OPERANDS.'   02623510
&ERROR   SETB  1                      Indicates error                   02624500
         AGO   .NEXTSLE               Process next entry in sublist     02625490
.********************************************************************** 02626480
.*       Issue MNOTE and set up to process next sublist entry         * 02627470
.********************************************************************** 02628460
.UNACOMA MNOTE 8,'019 UNITADD SUBLIST ENTRY &SUB IS MISSING A COMMA.'   02629450
&ERROR   SETB  1                      Indicates error                   02630440
         AGO   .NEXTSLE               Process next entry in sublist     02631430
.NOPAREN MNOTE 8,'013 UNITADD SUBLIST ENTRY &SUB MUST BE ENCLOSED IN PA*02632420
               RENTHESES.'                                              02633410
&ERROR   SETB  1                      Indicates error                   02634400
         AGO   .NEXTSLE               Process next entry in sublist     02635390
.UNANUL  MNOTE 8,'018 UNITADD SUBLIST ENTRY &SUB IS MISSING.'           02636380
&ERROR   SETB  1                      Indicates error                   02637370
.*                                                                      02638360
.NEXTSLE ANOP                         Process next sublist entry        02639350
&SUB     SETA  &SUB+1                 Points to next sublist entry      02640340
         AIF   (&SUB LE &NUMUNA).UNLOOP  Another entry to process...    02641330
         AGO   .NOUNITA               Go check next keyword             02642320
.NOUNITA ANOP                                                      @LTC 02643310
.********************************************************************** 02644300
.*                                                                    * 02645290
.*       Validate LINK                1 to &MAXLINK chpid's           * 02646280
.*                                                                    * 02647270
.********************************************************************** 02648260
.CKLINK  ANOP                                                           02649250
&MAXLINK SETA  8                       Maximum number of PATH id's      02650240
&L       SETA  2                       Required PATH length             02651230
         AIF ('&LINK' EQ '').ECKLNK    LINK not specified          @N3A 02652220
         AIF (N'&LINK EQ N'&PATH).CKMAX  Same sublist size as PATH      02653210
         MNOTE 8,'040 LINK SUBLIST ENTRIES NOT SAME NUMBER AS PATH SUBL*02654200
               IST ENTRIES.'                                            02655190
&ERROR   SETB  1                       Indicate error                   02656180
.CKMAX   ANOP                                                           02657170
         AIF (N'&LINK LE &MAXLINK).LISUBLE  Number of sublists          02658160
         MNOTE 8,'015 LINK PARAMETER EXCEEDS &MAXLINK SUBLIST ENTRIES.' 02659150
&ERROR   SETB  1                       Indicate error                   02660140
.LISUBLE ANOP                                                           02661130
&SUB     SETA  1                       Point to first sublist           02662120
.********************************************************************** 02663110
.*       Loop to validate each sublist entry                          * 02664100
.********************************************************************** 02665090
&AWK1    SETA  128                                                      02666080
.LILOOP  ANOP                                                           02667070
&ASTF    SETB  0                                                        02668060
&LINKID  SETC  '&LINK(&SUB)'          Isoloate sublist entry            02669050
         AIF ('&LINK(&SUB)' EQ '').LINULL   Null sublist entry          02670040
         AIF (K'&LINKID EQ &L).LICHAR  Must be exact length             02671030
         MNOTE 8,'022 LINK PARAMETER SUBLIST ENTRY &SUB MUST BE &L DIGI*02672020
               TS.'                                                     02673010
&ERROR   SETB  1                      Indicate error                    02674000
.LICHAR  ANOP                                                           02674990
&AWK     SETA  K'&LINKID              Actual number of digits in number 02675980
&NDX     SETA  1                      Point to 1st digit of number      02676970
.*                                                                      02677960
.*       Loop to validate each character in the chpid number            02678950
.LILOOPA ANOP                                                           02679940
         AIF   ('&LINKID'(&NDX,1) LT 'A').LISTRSK  Special              02680930
         AIF   ('&LINKID'(&NDX,1) LE 'F').GOODLI   Hex digit (A-F)      02681920
         AIF   ('&LINKID'(&NDX,1) LT '0').BADLI    Non-hex digit        02682910
         AIF   ('&LINKID'(&NDX,1) LE '9').GOODLI   Hex digit (0-9)      02683900
.LISTRSK AIF   ('&LINKID'(1,&AWK) NE '**').BADLI                        02684890
&ASTF    SETB  1                      Asteriks is encountered           02685880
&NDX     SETA  &NDX+1                 Point to 2nd asteriks             02686870
         AGO   .GOODLI                                                  02687860
.BADLI   ANOP                         Invalid HEX digit                 02688850
&CWK     SETC  '&LINKID'(&NDX,1)      Isolate invalid number            02689840
         MNOTE 8,'021 INVALID HEX DIGIT ''&CWK'' IN SUBLIST ENTRY &SUB *02690830
               FOR LINK PARAMETER.'                                     02691820
&ERROR   SETB  1                      Indicates error                   02692810
.GOODLI  ANOP                                                           02693800
&NDX     SETA  &NDX+1                 Point to next digit in number     02694790
         AIF   (&NDX LE K'&LINKID).LILOOPA  Check next digit            02695780
.*                                                                8@HDD 02696770
         AIF   (&ERROR EQ 1).NXTLIID  Check next chpid number           02697760
&LIADDR(&SUB)  SETC '&LINK(&SUB)'     Insert chpid number into array    02698750
         AIF (&ASTF EQ 1).NXTLIID     Exit if error                     02699740
&LBIT    SETA  &LBIT+&AWK1            Get bit mask for link             02700730
         AGO  .NXTLIID                Process next LINK chpid number    02701720
.LINULL  MNOTE 8,'018 LINK SUBLIST ENTRY &SUB IS MISSING.'              02702710
&ERROR   SETB 1                       Indicate error                    02703700
.*                                                                      02704690
.NXTLIID ANOP                         Process next sublist entry        02705680
&SUB     SETA &SUB+1                  Point to next link id entry       02706670
&AWK1    SETA &AWK1/2                 Get next bit in link bit mask     02707660
         AIF  (&SUB LE N'&LINK).LILOOP  More LINK id's ...              02708650
.ECKLNK  ANOP ,                                                    @N3A 02709640
.*                                                                      02710630
.********************************************************************** 02711620
.*                                                                    * 02712610
.*       Validate SWPORT     1 to N'&PATH pairs of (switch id,port id)* 02713600
.*                           Only checks for 2 digit switch/port id.  * 02714590
.*                                                                    * 02715580
.*                           The position of (switch id/port id)  @M4A* 02716570
.*                           in SWPORT list corresponds to the    @M4A* 02717560
.*                           channel path ids in the PATH keyword @M4A* 02718550
.*                                                                    * 02719540
.********************************************************************** 02720530
.CKSWPO  ANOP                                                           02721520
&MAXSWPO SETA  32                      Max number of SWPORT entr.  @B1C 02722510
&L1      SETA  2                       Number of sublist length    @M4A 02723500
&L       SETA  2                       Req. Switch/port id length  @M4A 02724490
         AIF  ('&SWPORT' EQ '').XSWPO    SWPORT not specified      @M4A 02725480
         AIF  ('&SWPORT'(1,2) EQ '((').SWPO100 Double parentheses  @M4A 02726470
&SINGLE  SETB 1                        Indicate single entry       @M4A 02727460
&NSWPO   SETA 1                        Only 1 subentry             @M4A 02728450
         AGO   .SWPO105                                            @M4A 02729440
.SWPO100 ANOP  ,                                                   @M4A 02730430
         AIF  (N'&SWPORT GT &MAXSWPO).SWPOE01 Higher number of         *02731420
                                       operands than in PATH list  @M4A 02732410
&NSWPO   SETA  N'&SWPORT               Set number of subentries    @M4A 02733400
&SINGLE  SETB  0                       Indicate list               @M4A 02734390
.SWPO105 ANOP  ,                                                   @M4A 02735380
&SUB     SETA  1                                                   @M4A 02736370
.SWPO110 ANOP  ,                                                   @M4A 02737360
         AIF   (&SINGLE).SWPO115                                   @M4A 02738350
         AIF   ('&SWPORT(&SUB)' EQ '').SWPO150 Entry omitted       @M4A 02739340
         AIF   ('&SWPORT(&SUB)' EQ '**').SWPO150 Entry omitted     @M4A 02740330
         AIF   (N'&SWPORT(&SUB) NE &L1).SWPOE03 Sublist not 2 entr @M4A 02741320
&ESWID   SETC  '&SWPORT(&SUB,1)'        Save switch id             @M4A 02742310
         AGO   .SWPO118                                            @M4A 02743300
.SWPO115 ANOP  ,                                                   @M4A 02744290
         AIF   ('&SWPORT' EQ '**').SWPO150       Entry omitted     @M4A 02745280
         AIF   (N'&SWPORT NE &L1).SWPOE03 Sublist not 2 entries    @M4A 02746270
&ESWID   SETC  '&SWPORT(1)'             Save switch id             @M4A 02747260
.SWPO118 ANOP  ,                                                   @M4A 02748250
         AIF   ('&ESWID'   EQ '').SWPOE02        No entry switch   @M4A 02749240
         AIF   (K'&ESWID   NE &L).SWPOE05        Switch id > 2 chr @M4A 02750230
         HEXCHECK STRING=&ESWID                                    @M4A 02751220
         AIF   (NOT &$ERR).SWPO120     Continue when no error      @M4A 02752210
&ERROR   SETB  1                       Otherwise indicate error    @M4A 02753200
         AGO   .SWPOE04                and continue                @M4A 02754190
.*                                                                 @M4A 02755180
.SWPO120 ANOP  ,                                                   @M4A 02756170
         AIF   (&SINGLE).SWPO125                                   @M4A 02757160
&ESWPORT SETC  '&SWPORT(&SUB,2)'       Save port id                @M4A 02758150
         AGO   .SWPO130                                            @M4A 02759140
.SWPO125 ANOP  ,                                                   @M4A 02760130
&ESWPORT SETC  '&SWPORT(2)'            Save port id                @M4A 02761120
.SWPO130 ANOP  ,                                                   @M4A 02762110
         AIF   ('&ESWPORT' EQ '').SWPOE02        No port id        @M4A 02763100
         AIF   (K'&ESWPORT NE &L).SWPOE05        Port id > 2 char  @M4A 02764090
         HEXCHECK STRING=&ESWPORT                                  @M4A 02765080
         AIF   (&$ERR).SWPOE04         Report error if encountered @M4A 02766070
.*                                                                 @M4A 02767060
.SWPO150 ANOP  ,                                                   @M4A 02768050
&ESW(&SUB) SETC '&ESWID'               Save entry switch id        @M4A 02769040
&EPORT(&SUB) SETC '&ESWPORT'           Save entry port id          @M4A 02770030
&SUB     SETA  &SUB+1                  Point to next sublist entry @M4A 02771020
         AIF   (&SUB LE &NSWPO).SWPO110 More entry ports           @M4A 02772010
         AGO   .XSWPO                                              @M4A 02773000
.*                                                                 @M4A 02773990
.SWPOE01 ANOP  ,                                                   @M4A 02774980
         MNOTE 8,'045 SWPORT PARAMETER EXCEEDS &MAXSWPO ENTRIES.'  @B1C 02775970
&ERROR   SETB  1                       Indicates error             @M4A 02776960
         AGO   .XSWPO                  and continue                @M4A 02777950
.*                                                                 @M4A 02778940
.SWPOE02 ANOP  ,                                                   @M4A 02779930
         MNOTE 8,'017 SWITCH OR PORT ID REQUIRED in SUBLIST ENTRY &SUB *02780920
               OF SWPORT PARAMETER.'                               @M4A 02781910
&ERROR   SETB  1                       Indicates error             @M4A 02782900
         AGO   .XSWPO                  and continue                @M4A 02783890
.*                                                                 @M4A 02784880
.SWPOE03 ANOP  ,                                                   @M4A 02785870
         MNOTE 8,'022 SWPORT PARAMETER SUBLIST ENTRY &SUB MUST CONTAIN *02786860
               &L ENTRIES.'                                        @M4A 02787850
&ERROR   SETB  1                       Indicates error             @M4A 02788840
         AGO   .XSWPO                  and continue                @M4A 02789830
.*                                                                 @M4A 02790820
.SWPOE04 ANOP  ,                                                   @M4A 02791810
         MNOTE 8,'047 INVALID HEX DIGIT ''&CWK'' IN SUBLIST ENTRY &SUB *02792800
               OF SWPORT PARAMETER.'                               @M4A 02793790
&ERROR   SETB  1                       Indicates error             @M4A 02794780
         AGO   .XSWPO                  and continue                @M4A 02795770
.*                                                                 @M4A 02796760
.SWPOE05 ANOP  ,                                                   @M4A 02797750
         MNOTE 8,'022 SWITCH ID OR PORT ID MUST BE &L1 DIGITS.'    @M4A 02798740
&ERROR   SETB  1                       Indicates error             @M4A 02799730
         AGO   .XSWPO                  and continue                @M4A 02800720
.*                                                                 @M4A 02801710
.XSWPO   ANOP  ,                                                   @M4A 02802700
.*                                                                      02803690
.********************************************************************** 02804680
.*                                                                    * 02805670
.*       Validate DESC                1 to &L EBCDIC characters       * 02806660
.*                                                                    * 02807650
.********************************************************************** 02808640
&L       SETA  32                 Maximum description length       @N3A 02809630
         AIF   ('&DESC' EQ '').EDESC    DESC is null               @N3A 02810620
         AIF   ('&DESC'(1,1) EQ '''').DELEN  Must be in quotes     @N3A 02811610
.*                                   (Asmblr checks for end quote) @N3A 02812600
         MNOTE 8,'008 DESC VALUE MUST BE ENCLOSED IN QUOTES.'      @N3A 02813590
&ERROR   SETB  1                      Indicate error               @N3A 02814580
         AGO   .EDESC                                              @N3A 02815570
.DELEN   ANOP                                                      @N3A 02816560
&DESCR   SETC  '&DESC'                Set description              @N3A 02817550
&LEN     SETA  K'&DESC-2              Length of description        @N3A 02818540
         AIF   (&LEN  LE 0).DENULL    Check for zero length        @N3A 02819530
&DSC     SETC  '&DESC'(2,&LEN)        Sets description string      @L2A 02820520
         STRLEN STRING=&DSC           Determine real length        @L2A 02821510
&LEN     SETA  &$STRLEN               Sets real length             @L2A 02822500
         AIF   (&LEN  LE &L).EDESC    Less than maximum            @N3A 02823490
         MNOTE 8,'033 DESC PARAMETER EXCEEDS &L CHARACTERS.'       @N3A 02824480
&ERROR   SETB  1                      Indicate error               @N3A 02825470
         AGO   .EDESC                                              @N3A 02826460
.DENULL  ANOP                                                      @N3A 02827450
&DESCR   SETC  ''' '''                Set to blank                 @N3A 02828440
.EDESC   ANOP  ,                                                   @N3A 02829430
.********************************************************************** 02830420
.*                                                                    * 02831410
.*       Validate SERIAL              1 to &L EBCDIC characters       * 02832400
.*                                                                    * 02833390
.********************************************************************** 02834380
&L       SETA  10                     Maximum length               @N3A 02835370
         AIF   ('&SERIAL' EQ '').ESER0    SERIAL is null           @N3A 02836360
&SERR    SETC  '&SERIAL'                Set serial number          @M5A 02837350
&LEN     SETA  K'&SERIAL              Length of description        @L2A 02838340
         AIF   ('&SERIAL'(1,1) NE '''').SERLN  Not in quotes       @M5A 02839330
&LEN     SETA  K'&SERIAL-2            Length of description        @N3A 02840320
&SERR    SETC  '&SERIAL'(2,&LEN)        Set serial number          @M5A 02841310
         STRLEN STRING=&SERR          Determines real length       @L2A 02842300
&LEN     SETA  &$STRLEN               Sets real length             @L2A 02843290
.SERLN   ANOP  ,                                                   @M5A 02844280
         AIF   (&LEN      LE &L).ESER0    Less than maximum        @L2C 02845270
         MNOTE 8,'033 SERIAL PARAMETER EXCEEDS &L CHARACTERS.'     @N3A 02846260
&ERROR   SETB  1                      Indicate error               @N3A 02847250
.ESER0   ANOP  ,                                                   @N3A 02848240
.********************************************************************** 02849230
.*                                                                    * 02850220
.*       Generate internal text record                                * 02851210
.*                                                                    * 02852200
.********************************************************************** 02853190
.GENTEXT ANOP                                                           02854180
         AIF (&ERROR EQ 1).EXIT       Exit if error                     02855170
&CNO     SETC '&SYSITRN'              EBCDIC version of stmnt number    02856160
         DC    CL8'&UNITN'            Unit name                         02857150
         DC    XL2'&CUNUMBR'          Control unit number               02858140
         DC    XL2'0000'              Reserved                          02859130
&AWK     SETA  &SCHPC                 Number of entries in PATH sublist 02860120
         DC    AL1(&AWK)              Number of entries in PATH list    02861110
&AWK     SETA  &NUMUNA                Number of entries in UNITADD list 02862100
         DC    AL1(&AWK)              Number of entries in UNITADD list 02863090
         DC    AL1(&PROTCL)           Interface protocol for PATH       02864080
         DC    AL1(&SHARD)            level of concurrent I/O requests  02865070
         AIF ('&UNITADD' EQ '').UNANO Processes UNITADD ?          @LTA 02866060
         DC    A(@U&CNO)              Pointer to UNITADD list           02867050
         AGO   .GENLNK1               Proceed to LINK generation   @LTA 02868040
.UNANO   ANOP                         No UNITADD information       @LTA 02869030
         DC    A(0)                   No UNITADD list              @LTA 02870020
.GENLNK1 ANOP                         Generate LINK information    @LTA 02871010
&AWK     SETA  N'&LINK                Number of entries in LINK list    02872000
         AIF   (&AWK EQ 0).LINKNO     No LINK List                      02872990
         DC    AL1(&AWK)              Number of entries in LINK list    02873980
         AGO   .GENSWPO                                            @M4C 02874970
.LINKNO  ANOP                                                           02875960
         DC    AL1(0)                 LINK (not specified)              02876950
.GENSWPO ANOP                                                      @M4C 02877940
         AIF   (&NSWPO EQ 0).SWPONO   No SWPORT                    @M4A 02878930
         DC    AL1(&NSWPO)            Number of switch/ports       @M4A 02879920
         AGO   .GENFCHC                                            @M5A 02880910
.SWPONO  ANOP  ,                                                   @M4A 02881900
         DC    XL1'00'                No switch/ports specified    @N3C 02882890
.GENFCHC ANOP                                                      @M5A 02883880
&AWK     SETA  &FCHPC                 Number of floating CHPIDs    @M5A 02884870
         DC    AL1(&AWK)              Number of floating CHPIDs    @M5A 02885860
.GENPATH ANOP  ,                                                   @M4A 02886850
         DC    AL1(&FLAG)             Flag byte                         02887840
         DC    AL1(&LBIT)             Bit mask for link address         02888830
         DC    XL3'000000'            Reserved                          02889820
&SUB     SETA  1                      Point to first PATH id            02890810
.PATLOOP ANOP                                                           02891800
         DC    XL1'&PACHID(&SUB)'     Channel path id                   02892790
&SUB     SETA &SUB+1                  Point to next sublist entry       02893780
         AIF  (&SUB LE &SCHPC).PATLOOP  Go insert next PATH id     @M5C 02894770
.PAZERO  AIF  (&SUB GT &MAXPATH).GENLINK Go generate LINK list          02895760
         DC    XL1'00'                Reserved for channel path id      02896750
&SUB     SETA &SUB+1                  Point to next null entry          02897740
         AGO  .PAZERO                                                   02898730
.GENLINK ANOP                                                           02899720
         SPACE 2                                                        02900710
&SUB     SETA  1                      Point to first LINK address       02901700
         AIF ('&LINK' EQ '').LIZERO   LINK not specified                02902690
.LINKLO  ANOP                                                           02903680
         AIF   ('&LIADDR(&SUB)'(1,1) EQ '*').ASTLINK                    02904670
         DC    XL1'&LIADDR(&SUB)'       Link address                    02905660
         AGO   .NXTLINK                                                 02906650
.ASTLINK ANOP                                                           02907640
         DC    XL1'00'                Link specified as asterics        02908630
.NXTLINK ANOP                                                           02909620
&SUB     SETA &SUB+1                  Point to next sublist entry       02910610
         AIF  (&SUB LE N'&LINK).LINKLO  Go insert next LINK address     02911600
.LIZERO  AIF  (&SUB GT &MAXLINK).GENMOD Go generate MODEL entry         02912590
         DC    XL1'00'                Reserved for link address         02913580
&SUB     SETA &SUB+1                  Point to next null entry          02914570
         AGO  .LIZERO                                                   02915560
.GENMOD  ANOP                                                           02916550
         AIF   ('&UNITM' EQ '').NOMOD No controlunit type specified     02917540
         DC    CL4'&UNITM'            Control unit type                 02918530
         AGO   .GENCUA                                                  02919520
.NOMOD   ANOP                                                           02920510
         DC    XL4'00000000'          No control unit type              02921500
.GENCUA  ANOP                                                           02922490
         AIF   ('&CUADD' EQ '').NOCUA No controlunit address specified  02923480
         DC    XL1'&CUADD'            Control unit address              02924470
         AGO   .GENUNA                                                  02925460
.NOCUA   ANOP                                                           02926450
         DC    XL1'FF'                No Control unit address           02927440
.GENUNA  ANOP                                                           02928430
         DC    XL1'00'                Reserved                     @N3A 02929420
         AIF   ('&SERIAL' EQ '').NOSER No serial number specified  @N3A 02930410
         DC    CL10'&SERR'            Serial number                @N3A 02931400
         AGO   .ESERN                                              @N3A 02932390
.NOSER   ANOP  ,                      No serial number specified   @N3A 02933380
         DC    CL10'  '               Serial number                @N3A 02934370
.ESERN   ANOP  ,                                                   @N3A 02935360
         AIF   ('&SWPORT' EQ '').NOSWPRT Switch/port specified?    @M4A 02936350
&SUB     SETA  1                      Point to first SWPORT        @M4A 02937340
.SWPLOOP ANOP                                                      @M4A 02938330
         DC    XL1'&ESW(&SUB)'        Switch id                    @M4A 02939320
         DC    XL1'&EPORT(&SUB)'      Port id                      @M4A 02940310
&SUB     SETA &SUB+1                  Point to next sublist entry  @M4A 02941300
         AIF  (&SUB LE &NSWPO).SWPLOOP  Go insert next SWPORT      @M4A 02942290
.SWZERO  AIF  (&SUB GT &MAXSWPO).ESWPRT  Go to end of SWPORT gen   @B1C 02943280
         DC    XL1'00'                Reserved for switch id       @M4A 02944270
         DC    XL1'00'                Reserved for port id         @M4A 02945260
&SUB     SETA &SUB+1                  Point to next null entry     @M4A 02946250
         AGO  .SWZERO                                              @M4A 02947240
.NOSWPRT ANOP  ,                                                   @M4A 02948230
         DC    XL64'00'               Switch/port connections      @B1C 02949220
.ESWPRT  ANOP  ,                                                   @M4A 02950210
         AIF   ('&DESC' EQ '').NODESC Description specified        @N3A 02951200
         DC    CL32&DESCR             Description                  @N3A 02952190
         AGO   .EDESCP                branch to continue           @N3A 02953180
.NODESC  ANOP  ,                      Description not specified    @N3A 02954170
         DC    CL32'  '               Description                  @N3A 02955160
.EDESCP  ANOP  ,                                                   @N3A 02956150
         SPACE 2                                                        02957140
&SUB     SETA  1                      Point to UNITADD array entry 1    02958130
         AIF   (&SUB GT &NUMUNA).EXIT Processes UNITADD ?          @LTA 02959120
&CWK     SETC  '@U&CNO'            Label for 1st entry in UNITADD list  02960110
.GENLOOP ANOP                                                           02961100
         SPACE 1                                                        02962090
         DS    0H'0'                  Force boundary                    02963080
&CWK     DC    XL1'&UNAE(&SUB)'       Unit address                      02964070
         DC    XL1'00'                Reserved                          02965060
         DC    H'&UNACNT(&SUB)'       Count of consecutive addresses    02966050
&CWK     SETC  ''                     Blank out label                   02967040
&SUB     SETA  &SUB+1                 Points to next entry in array     02968030
         AIF   (&SUB LE &NUMUNA).GENLOOP Processes next array entry     02969020
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to      02970010
         MNOTE ' '                     occur if NOGEN specified         02971000
         MEND                                                           02971990
*/*==================================================================*/ 02972980
*/*==================================================================*/ 02973970
         TITLE 'HCD MACRO LISTING - SWITCH - ESCON DIRECTOR'            02974960
         MACRO  --  SWITCH INFORMATION                                  02975950
&SYMBOL  SWITCH   &UNIT=,&MODEL=,&PORT=,&SWID=,&SWPORT=,&DESC=,        *02976940
               &SERIAL=                                                 02977930
.*                                                                 @L2C 02978920
         AGO   .SKIP                                               @M4A 02979910
*/********************************************************************/ 02980900
*/*                                                                  */ 02981890
*/*01*  MACRO NAME = SWITCH                                          */ 02982880
*/*                                                                  */ 02983870
*/*01*  DESCRIPTIVE NAME = Switch characteristics.                   */ 02984860
*/*                                                                  */ 02985850
*/*01*  MACRO CALL =                                                 */ 02986840
*/*       LABEL SWITCH    DESC='description'                         */ 02987830
*/*                       MODEL=switch model                         */ 02988820
*/*                       PORT=((portlow,porthigh),...)              */ 02989810
*/*                       SERIAL=serial number                       */ 02990800
*/*                       SWID=switch id                             */ 02991790
*/*                       SWPORT=((port,swid,port),...)              */ 02992780
*/*                       UNIT=switch unit                           */ 02993770
*/*                                                                  */ 02994760
*/*01*  FUNCTION =  Describes the characteristics of the switch,     */ 02995750
*/*                 the installed port range, and the connected      */ 02996740
*/*                 switches.                                        */ 02997730
*/*                                                                  */ 02998720
*/*01*  NOTES =  A switch can be attached to a maximum of eight      */ 02999710
*/*              other switches.                                     */ 03000700
*/*                                                                  */ 03001690
*/*02*    DEPENDENCIES = None.                                       */ 03002680
*/*                                                                  */ 03003670
*/*02*    RESTRICTIONS = For HCD use only.                           */ 03004660
*/*                                                                  */ 03005650
*/*01*  INPUT =   DESC=    String of 0 to 32 EBCDIC characters.      */ 03006640
*/*               MODEL=   4 EBCDIC characters switch model name.    */ 03007630
*/*               PORT=    list of up to 32 port ranges (specified by*/ 03008620
*/*                        a sublist of 2 hex char low port id and   */ 03009610
*/*                        2 hex char high port id each)             */ 03010600
*/*               SERIAL=  10 characters serial number               */ 03011590
*/*             # SWID=    2 hex character switch id                 */ 03012580
*/*               SWPORT=  List of 32 connected switch ports         */ 03013570
*/*                        specified by a sublist of (2 hex char     */ 03014560
*/*                        exit port, 2 hex char target switch, 2    */ 03015550
*/*                        hex char target port) each.               */ 03016540
*/*             # UNIT=    8 EBCDIC characters switch unit name.     */ 03017530
*/*                                                                  */ 03018520
*/*             # - Required keyword                                 */ 03019510
*/*                                                                  */ 03020500
*/*01*  OUTPUT = Internal text                                       */ 03021490
*/*                                                                  */ 03022480
*/********************************************************************/ 03023470
*/*                                                                     03024460
.*                                                                      03025450
.SKIP    ANOP                                                           03026440
         GBLA  &SYSITRN           HCD statement number             @M4A 03027430
         GBLA  &$STRLEN           String length                    @L2A 03028420
         GBLB  &$ERR              Global error flag                @M4A 03029410
         GBLC  &CWK               Character work variable          @M4A 03030400
         LCLA  &AWK               Arithmetic work variable         @M4A 03031390
         LCLA  &AWK1              Arithmetic work variable 1       @M4A 03032380
         LCLB  &ASTF              Asteriks flag                    @M4A 03033370
         LCLA  &COMMA             Index to comma in sublist entry  @M4A 03034360
         LCLA  &FLAG,&LBIT        Flag byte variables              @M4A 03035350
         LCLA  &L                 Maximum or required operand lgth @M4A 03036340
         LCLA  &LEN               Actual operand length            @M4A 03037330
         LCLA  &NDX               Substring index                  @M4A 03038320
         LCLA  &SUB               Sublist element number           @M4A 03039310
         LCLA  &NSWPO             Number of SWPORT entries         @M4A 03040300
         LCLA  &NPORT             Number of PORT entries           @M4A 03041290
         LCLA  &VPORID            Numeric value of port id         @M4A 03042280
         LCLA  &VTPORID           Numeric value of port id         @M4A 03043270
         LCLB  &ERROR             Error flag                       @M4A 03044260
         LCLC  &CNO               EBCDIC version of SYSITRN        @M4A 03045250
         LCLC  &DESCR             Description work area            @M4A 03046240
         LCLC  &DSC               Description work area            @L2A 03047230
         LCLB  &SINGLE            Only single list element         @M4A 03048220
         LCLB  &POCC(256)         Occupied keyword                 @L2A 03049210
         LCLC  &PORID             Character sublist entry          @M4A 03050200
         LCLC  &TPORID            Character sublist entry          @M4A 03051190
         LCLC  &XPORID            Hex char  sublist entry          @M4A 03052180
         LCLC  &XTPORID           Hex char  sublist entry          @M4A 03053170
         LCLC  &ESWPORT           Character sublist entry          @M4A 03054160
         LCLC  &ESWPOR1           Character sublist entry          @M4A 03055150
         LCLC  &ESWID             Character sublist entry          @M4A 03056140
         LCLC  &ESW(32)           Entry switch id set from SWPORT  @B1C 03057130
         LCLC  &EPORT(32)         Entry switch port id from SWPORT @B1C 03058120
         LCLC  &EPOR1(32)         Entry switch port id from SWPORT @B1C 03059110
         LCLC  &SPO(32)           Low port id from PORT range      @B1C 03060100
         LCLC  &TPO(32)           High port id from PORT range     @B1C 03061090
         LCLC  &PORTNR            Port name work area                   03062080
         LCLC  &SERR              Serial number work field         @M5A 03063070
         ACTR  10000              Set for infinite loop control         03064060
&SYMBOL  TXTHDR SWITCH                                                  03065050
.*                                                                      03066040
.********************************************************************** 03067030
.*                                                                    * 03068020
.*       Check if unrecognized parameters are specified               * 03069010
.*                                                                    * 03070000
.********************************************************************** 03070990
         AIF   (N'&SYSLIST EQ 0).XPOS10    No positional parameter @P3A 03071980
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @P3A 03072970
&ERROR   SETB  1                  Indicate error                   @P3A 03073960
         AGO   .XPOS10            and continue                     @P3A 03074950
.*                                                                      03075940
.XPOS10  ANOP  ,                                                   @P3A 03076930
.********************************************************************** 03077920
.*                                                                    * 03078910
.*       Validate SWID                 2 Hex digits                   * 03079900
.*                                                                    * 03080890
.********************************************************************** 03081880
.CKSWID  ANOP                                                           03082870
&L       SETA  2                             Required SWID  length      03083860
         AIF   ('&SWID' EQ '').NOSWID        SWID not specified         03084850
         AIF   (N'&SWID GT 1).SUBSWI         Invalid in sublist format  03085840
         AIF   (K'&SWID EQ &L).SWICHAR       Number of characters       03086830
         MNOTE 8,'032 SWID PARAMETER MUST BE &L CHARACTER.'             03087820
&ERROR   SETB  1                      Indicates error                   03088810
         AGO   .CKXSWID                                                 03089800
.SWICHAR ANOP                                                           03090790
&NDX     SETA  1                                                        03091780
.*       Validate the SWID                                              03092770
.SWILOOP ANOP  ,                                                        03093760
         AIF   ('&SWID'(&NDX,1) LT 'A').BADSWI                          03094750
         AIF   ('&SWID'(&NDX,1) LE 'F').CKITSWI (A-F)                   03095740
         AIF   ('&SWID'(&NDX,1) LT '0').BADSWI                          03096730
         AIF   ('&SWID'(&NDX,1) LE '9').CKITSWI (0-9)                   03097720
.BADSWI  ANOP                         Invalid char in generic name      03098710
&CWK     SETC  '&SWID'(&NDX,1)                                          03099700
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN SWID PARAMETER.'    03100690
&ERROR   SETB  1                      Indicates error                   03101680
         AGO   .CKXSWID               Go check next keyword             03102670
.CKITSWI ANOP  ,                                                        03103660
&NDX     SETA  &NDX+1                                                   03104650
         AIF   (&NDX LE &L).SWILOOP                                     03105640
         AGO   .CKXSWID                                                 03106630
.SUBSWI  MNOTE 8,'014 SWID PARAMETER MUST NOT BE A SUBLIST.'            03107620
&ERROR   SETB  1                      Indicates error                   03108610
         AGO   .CKXSWID               Go check next keyword             03109600
.NOSWID  MNOTE 8,'002 SWID KEYWORD NOT SPECIFIED.'                      03110590
&ERROR   SETB  1                      Indicates error                   03111580
.CKXSWID ANOP                                                           03112570
.********************************************************************** 03113560
.*                                                                    * 03114550
.*       Validate UNIT                 type <= 8 alphanumerics        * 03115540
.*                                                                    * 03116530
.********************************************************************** 03117520
.CKUNIT  ANOP                                                           03118510
&L       SETA  8                        Maximum UNIT length             03119500
         AIF   ('&UNIT' EQ '').NOUNIT   UNIT not specified              03120490
         AIF   (N'&UNIT GT 1).UNISUB    Invalid in sublist format       03121480
         AIF   (K'&UNIT LE &L).UNICHAR  Maximum number of characters    03122470
         MNOTE 8,'033 UNIT PARAMETER EXCEEDS &L CHARACTERS.'            03123460
&ERROR   SETB  1                      Indicates error                   03124450
.UNICHAR ANOP                                                           03125440
&NDX     SETA  1                      Point to 1st character            03126430
.*                                                                      03127420
.*       Loop to validate each character in the UNIT name               03128410
.UNILOOP ANOP                                                           03129400
         AIF   ('&UNIT'(&NDX,1) EQ '@').GOODUNI   (@)              @H4A 03130390
         AIF   ('&UNIT'(&NDX,1) EQ '#').GOODUNI   (#)              @H4A 03131380
         AIF   ('&UNIT'(&NDX,1) EQ '$').GOODUNI   ($)              @H4A 03132370
         AIF   ('&UNIT'(&NDX,1) LT 'A').BADUNI                          03133360
         AIF   ('&UNIT'(&NDX,1) LE 'I').GOODUNI   (A-I)                 03134350
         AIF   ('&UNIT'(&NDX,1) LT 'J').BADUNI                          03135340
         AIF   ('&UNIT'(&NDX,1) LE 'R').GOODUNI   (J-R)                 03136330
         AIF   ('&UNIT'(&NDX,1) LT 'S').BADUNI                          03137320
         AIF   ('&UNIT'(&NDX,1) LE 'Z').GOODUNI   (S-Z)                 03138310
         AIF   ('&UNIT'(&NDX,1) LT '0').BADUNI                          03139300
         AIF   ('&UNIT'(&NDX,1) LE '9').GOODUNI   (0-9)                 03140290
.BADUNI  ANOP                         Invalid character                 03141280
&CWK     SETC  '&UNIT'(&NDX,1)        Isolate invalid character         03142270
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN UNIT PARAMETER.'    03143260
&ERROR   SETB  1                      Indicates error                   03144250
.GOODUNI ANOP                                                           03145240
&NDX     SETA  &NDX+1                 Points to next character of UNIT  03146230
         AIF   (&NDX LE K'&UNIT).UNILOOP    Check next character        03147220
         AGO   .CKXUNI                Go check next keyword             03148210
.UNISUB  MNOTE 8,'014 UNIT NOT VALID IN SUBLIST FORMAT.'                03149200
&ERROR   SETB  1                      Indicates error                   03150190
         AGO   .CKXUNI                Go check next keyword             03151180
.NOUNIT  MNOTE 8,'002 UNIT KEYWORD NOT SPECIFIED.'                      03152170
&ERROR   SETB  1                      Indicates error                   03153160
         AGO   .CKXUNI                Go check next keyword        @M3A 03154150
.CKXUNI  ANOP  ,                                                        03155140
.*                                                                      03156130
.********************************************************************** 03157120
.*                                                                    * 03158110
.*       Validate MODEL                type <= 4 alphanumerics        * 03159100
.*                                                                    * 03160090
.********************************************************************** 03161080
.CKMODL  ANOP                                                           03162070
&L       SETA  4                        Maximum UNIT length             03163060
         AIF   ('&MODEL' EQ '').CKXMOD  MODEL not specified             03164050
         AIF   (N'&MODEL GT 1).MODSUB   Invalid in sublist format       03165040
         AIF   (K'&MODEL LE &L).MODCHAR Maximum number of characters    03166030
         MNOTE 8,'033 MODEL PARAMETER EXCEEDS &L CHARACTERS.'           03167020
&ERROR   SETB  1                      Indicates error                   03168010
.MODCHAR ANOP                                                           03169000
&NDX     SETA  1                      Point to 1st character            03169990
.*                                                                      03170980
.*       Loop to validate each character in the switch model            03171970
.CKMODEL ANOP                                                           03172960
.MODLOOP ANOP                                                           03173950
         AIF   ('&MODEL'(&NDX,1) EQ '@').GOODMOD  (@)              @H4A 03174940
         AIF   ('&MODEL'(&NDX,1) EQ '#').GOODMOD  (#)              @H4A 03175930
         AIF   ('&MODEL'(&NDX,1) EQ '$').GOODMOD  ($)              @H4A 03176920
         AIF   ('&MODEL'(&NDX,1) LT 'A').BADMOD                         03177910
         AIF   ('&MODEL'(&NDX,1) LE 'I').GOODMOD  (A-I)                 03178900
         AIF   ('&MODEL'(&NDX,1) LT 'J').BADMOD                         03179890
         AIF   ('&MODEL'(&NDX,1) LE 'R').GOODMOD  (J-R)                 03180880
         AIF   ('&MODEL'(&NDX,1) LT 'S').BADMOD                         03181870
         AIF   ('&MODEL'(&NDX,1) LE 'Z').GOODMOD  (S-Z)                 03182860
         AIF   ('&MODEL'(&NDX,1) LT '0').BADMOD                         03183850
         AIF   ('&MODEL'(&NDX,1) LE '9').GOODMOD  (0-9)                 03184840
.BADMOD  ANOP                         Invalid character                 03185830
&CWK     SETC  '&MODEL'(&NDX,1)       Isolate invalid character         03186820
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN MODEL PARAMETER.'   03187810
&ERROR   SETB  1                      Indicates error                   03188800
.GOODMOD ANOP                                                           03189790
&NDX     SETA  &NDX+1                 Points to next character of MODEL 03190780
         AIF   (&NDX LE K'&MODEL).MODLOOP    Check next character       03191770
         AGO   .CKXMOD                                                  03192760
.MODSUB  MNOTE 8,'014 MODEL NOT VALID IN SUBLIST FORMAT.'               03193750
&ERROR   SETB  1                      Indicates error                   03194740
         AGO   .CKXMOD                Go check next keyword             03195730
.CKXMOD  ANOP  ,                                                        03196720
.*                                                                      03197710
.********************************************************************** 03198700
.*                                                                    * 03199690
.*       Validate PORT       1 to 32 sublist entries (lowport,hiport) * 03200680
.*                           Only checks for 2 digit port ids.        * 03201670
.*                                                                    * 03202660
.********************************************************************** 03203650
.CKPORT  ANOP                                                           03204640
&MAXSUB  SETA  32                      Max number of PORT entries  @HAC 03205630
&L1      SETA  2                       Number of sublist length    @M4A 03206620
&L       SETA  2                       Required port id length     @M4A 03207610
         AIF  ('&PORT' EQ '').XPORT    PORT not specified          @M4A 03208600
         AIF  ('&PORT'(1,2) EQ '((').PORT100   Double parentheses  @M4A 03209590
&SINGLE  SETB 1                        Indicate single entry       @M4A 03210580
&NPORT   SETA 1                        Only 1 subentry             @M4A 03211570
         AGO   .PORT105                                            @M4A 03212560
.PORT100 ANOP  ,                                                   @M4A 03213550
         AIF  (N'&PORT GT &MAXSUB).PORTE01 Higher number of            *03214540
                                       operands than allowed       @M4A 03215530
&NPORT   SETA  N'&PORT                 Set number of subentries    @M4A 03216520
&SINGLE  SETB  0                       Indicate list               @M4A 03217510
.PORT105 ANOP  ,                                                   @M4A 03218500
&SUB     SETA  1                                                   @M4A 03219490
.PORT110 ANOP  ,                                                   @M4A 03220480
         AIF   (&SINGLE).PORT115                                   @M4A 03221470
         AIF   ('&PORT(&SUB)' EQ '').PORTE02 Entry omitted         @M4A 03222460
         AIF   (N'&PORT(&SUB) NE &L1).PORTE03 Sublist not 2 entr.  @M4A 03223450
&PORID   SETC  '&PORT(&SUB,1)'          Save port id               @M4A 03224440
         AGO   .PORT118                                            @M4A 03225430
.PORT115 ANOP  ,                                                   @M4A 03226420
         AIF   (N'&PORT NE &L1).PORTE03 Sublist not 2 entries      @M4A 03227410
&PORID   SETC  '&PORT(1)'               Save port id               @M4A 03228400
.PORT118 ANOP  ,                                                   @M4A 03229390
         AIF   ('&PORID'   EQ '').PORTE02        No low port id    @M4A 03230380
         AIF   (K'&PORID   NE &L).PORTE05 Port id ^= 2 chars       @M4A 03231370
         HEXCHECK STRING=&PORID                                    @M4A 03232360
         AIF   (NOT &$ERR).PORT120     Continue when no error      @M4A 03233350
&ERROR   SETB  1                       Otherwise indicate error    @M4A 03234340
         AGO   .PORTE04                and continue                @M4A 03235330
.*                                                                 @M4A 03236320
.PORT120 ANOP  ,                                                   @M4A 03237310
         AIF   (&SINGLE).PORT125                                   @M4A 03238300
&TPORID  SETC  '&PORT(&SUB,2)'         Save port id                @M4A 03239290
         AGO   .PORT130                                            @M4A 03240280
.PORT125 ANOP  ,                                                   @M4A 03241270
&TPORID  SETC  '&PORT(2)'              Save port id                @M4A 03242260
.PORT130 ANOP  ,                                                   @M4A 03243250
         AIF   ('&TPORID' EQ '').PORTE02         No port id        @M4A 03244240
         AIF   (K'&TPORID NE &L).PORTE05  Port id ^= 2 chars       @M4A 03245230
         HEXCHECK STRING=&TPORID                                   @M4A 03246220
         AIF   (&$ERR).PORTE04         Report error if encountered @M4A 03247210
.*                                                                 @M4A 03248200
.PORT150 ANOP  ,                                                   @M4A 03249190
&XPORID  SETC  'X''&PORID'''           Show as hex value           @M4A 03250180
&XTPORID SETC  'X''&TPORID'''          Show as hex value           @M4A 03251170
&VPORID  SETA  &XPORID                 Convert to numeric          @M4A 03252160
&VTPORID SETA  &XTPORID                Convert to numeric          @M4A 03253150
         AIF   (&VPORID GT &VTPORID).PORTE06 Compare               @M4A 03254140
&SPO(&SUB) SETC '&PORID'               Save low port id            @M4A 03255130
&TPO(&SUB) SETC '&TPORID'              Save high port id           @M4A 03256120
&SUB     SETA  &SUB+1                  Point to next sublist entry @M4A 03257110
         AIF   (&SUB LE &NPORT).PORT110 More port ranges           @M4A 03258100
         AGO   .XPORT                                              @M4A 03259090
.*                                                                 @M4A 03260080
.PORTE01 ANOP  ,                                                   @M4A 03261070
         MNOTE 8,'045 PORT PARAMETER EXCEEDS &MAXSUB ENTRIES.'     @M4A 03262060
&ERROR   SETB  1                       Indicates error             @M4A 03263050
         AGO   .XPORT                  and continue                @M4A 03264040
.*                                                                 @M4A 03265030
.PORTE02 ANOP  ,                                                   @M4A 03266020
         MNOTE 8,'017 PORT ID REQUIRED in SUBLIST ENTRY &SUB OF PORT PA*03267010
               RAMETER.'                                           @M4A 03268000
&ERROR   SETB  1                       Indicates error             @M4A 03268990
         AGO   .XPORT                  and continue                @M4A 03269980
.*                                                                 @M4A 03270970
.PORTE03 ANOP  ,                                                   @M4A 03271960
         MNOTE 8,'022 PORT PARAMETER SUBLIST ENTRY &SUB MUST CONTAIN &L*03272950
                ENTRIES.'                                          @M4A 03273940
&ERROR   SETB  1                       Indicates error             @M4A 03274930
         AGO   .XPORT                  and continue                @M4A 03275920
.*                                                                 @M4A 03276910
.PORTE04 ANOP  ,                                                   @M4A 03277900
         MNOTE 8,'047 INVALID HEX DIGIT ''&CWK'' IN SUBLIST ENTRY &SUB *03278890
               OF PORT PARAMETER.'                                 @M4A 03279880
&ERROR   SETB  1                       Indicates error             @M4A 03280870
         AGO   .XPORT                  and continue                @M4A 03281860
.*                                                                 @M4A 03282850
.PORTE05 ANOP  ,                                                   @M4A 03283840
         MNOTE 8,'022 PORT ID MUST BE &L1 DIGITS.'                 @M4A 03284830
&ERROR   SETB  1                       Indicates error             @M4A 03285820
         AGO   .XPORT                  and continue                @M4A 03286810
.*                                                                 @M4A 03287800
.PORTE06 ANOP  ,                                                   @M4A 03288790
         MNOTE 8,'045 LOW PORT ID MUST NOT EXCEED HIGH PORT ID.'   @M4A 03289780
&ERROR   SETB  1                       Indicates error             @M4A 03290770
         AGO   .XPORT                  and continue                @M4A 03291760
.*                                                                 @M4A 03292750
.XPORT   ANOP  ,                                                   @M4A 03293740
.*                                                                      03294730
.*                                                                      03295720
.********************************************************************** 03296710
.*                                                                    * 03297700
.*       Validate SWPORT     1 to 32 pairs of (port id,swid, port id) * 03298690
.*                           Only checks for 2 digit switch/port id.  * 03299680
.*                                                                    * 03300670
.********************************************************************** 03301660
.CKSWPO  ANOP                                                           03302650
&MAXSUB  SETA  32                      Max number of SWPORT entr.  @HAA 03303640
&L1      SETA  3                       Number of sublist length    @M4A 03304630
&L       SETA  2                       Req. Switch/port id length  @M4A 03305620
         AIF  ('&SWPORT' EQ '').XSWPO    SWPORT not specified      @M4A 03306610
         AIF  ('&SWPORT'(1,2) EQ '((').SWPO100 Double parentheses  @M4A 03307600
&SINGLE  SETB 1                        Indicate single entry       @M4A 03308590
&NSWPO   SETA 1                        Only 1 subentry             @M4A 03309580
         AGO   .SWPO105                                            @M4A 03310570
.SWPO100 ANOP  ,                                                   @M4A 03311560
         AIF  (N'&SWPORT GT &MAXSUB).SWPOE01 Higher number of          *03312550
                                       operands than allowed       @M4A 03313540
&NSWPO   SETA  N'&SWPORT               Set number of subentries    @M4A 03314530
&SINGLE  SETB  0                       Indicate list               @M4A 03315520
.SWPO105 ANOP  ,                                                   @M4A 03316510
&SUB     SETA  1                                                   @M4A 03317500
.SWPO110 ANOP  ,                                                   @M4A 03318490
         AIF   (&SINGLE).SWPO115                                   @M4A 03319480
         AIF   ('&SWPORT(&SUB)' EQ '').SWPOE02 Entry omitted       @M4A 03320470
         AIF   (N'&SWPORT(&SUB) NE &L1).SWPOE03 Sublist not 3 entr @M4A 03321460
&ESWPOR1 SETC  '&SWPORT(&SUB,1)'        Save port id               @M4A 03322450
         AGO   .SWPO118                                            @M4A 03323440
.SWPO115 ANOP  ,                                                   @M4A 03324430
         AIF   (N'&SWPORT NE &L1).SWPOE03 Sublist not 3 entries    @M4A 03325420
&ESWPOR1 SETC  '&SWPORT(1)'             Save port id               @M4A 03326410
.SWPO118 ANOP  ,                                                   @M4A 03327400
         AIF   ('&ESWPOR1' EQ '').SWPOE02        No source port    @M4A 03328390
         AIF   (K'&ESWPOR1 NE &L).SWPOE05        Port id ^= 2 char @M4A 03329380
         HEXCHECK STRING=&ESWPOR1                                  @M4A 03330370
         AIF   (NOT &$ERR).SWPO120     Continue when no error      @M4A 03331360
&ERROR   SETB  1                       Otherwise indicate error    @M4A 03332350
         AGO   .SWPOE04                and continue                @M4A 03333340
.*                                                                 @M4A 03334330
.SWPO120 ANOP  ,                                                   @M4A 03335320
         AIF   (&SINGLE).SWPO125                                   @M4A 03336310
&ESWID   SETC  '&SWPORT(&SUB,2)'       Save switch id              @M4A 03337300
         AGO   .SWPO130                                            @M4A 03338290
.SWPO125 ANOP  ,                                                   @M4A 03339280
&ESWID   SETC  '&SWPORT(2)'            Save switch id              @M4A 03340270
.SWPO130 ANOP  ,                                                   @M4A 03341260
         AIF   ('&ESWID' EQ '').SWPOE02          No switch id      @M4A 03342250
         AIF   (K'&ESWID NE &L).SWPOE05        Switch id ^= 2 chr  @M4A 03343240
         HEXCHECK STRING=&ESWID                                    @M4A 03344230
         AIF   (&$ERR).SWPOE04         Report error if encountered @M4A 03345220
.*                                                                 @M4A 03346210
.SWPO140 ANOP  ,                                                   @M4A 03347200
         AIF   (&SINGLE).SWPO145                                   @M4A 03348190
&ESWPORT SETC  '&SWPORT(&SUB,3)'       Save port id                @M4A 03349180
         AGO   .SWPO148                                            @M4A 03350170
.SWPO145 ANOP  ,                                                   @M4A 03351160
&ESWPORT SETC  '&SWPORT(3)'            Save port id                @M4A 03352150
.SWPO148 ANOP  ,                                                   @M4A 03353140
         AIF   ('&ESWPORT' EQ '').SWPOE02        No port id        @M4A 03354130
         AIF   (K'&ESWPORT NE &L).SWPOE05        Port id > 2 char  @M4A 03355120
         HEXCHECK STRING=&ESWPORT                                  @M4A 03356110
         AIF   (&$ERR).SWPOE04         Report error if encountered @M4A 03357100
.*                                                                 @M4A 03358090
.SWPO150 ANOP  ,                                                   @M4A 03359080
&ESW(&SUB) SETC '&ESWID'               Save entry switch id        @M4A 03360070
&EPORT(&SUB) SETC '&ESWPORT'           Save entry port id          @M4A 03361060
&EPOR1(&SUB) SETC '&ESWPOR1'           Save entry port id          @M4A 03362050
&SUB     SETA  &SUB+1                  Point to next sublist entry @M4A 03363040
         AIF   (&SUB LE &NSWPO).SWPO110 More entry ports           @M4A 03364030
         AGO   .XSWPO                                              @M4A 03365020
.*                                                                 @M4A 03366010
.SWPOE01 ANOP  ,                                                   @M4A 03367000
         MNOTE 8,'045 SWPORT PARAMETER EXCEEDS &MAXSUB ENTRIES.'   @M4A 03367990
&ERROR   SETB  1                       Indicates error             @M4A 03368980
         AGO   .XSWPO                  and continue                @M4A 03369970
.*                                                                 @M4A 03370960
.SWPOE02 ANOP  ,                                                   @M4A 03371950
         MNOTE 8,'017 SWITCH OR PORT ID REQUIRED in SUBLIST ENTRY &SUB *03372940
               OF SWPORT PARAMETER.'                               @M4A 03373930
&ERROR   SETB  1                       Indicates error             @M4A 03374920
         AGO   .XSWPO                  and continue                @M4A 03375910
.*                                                                 @M4A 03376900
.SWPOE03 ANOP  ,                                                   @M4A 03377890
         MNOTE 8,'022 SWPORT PARAMETER SUBLIST ENTRY &SUB MUST CONTAIN *03378880
               &L ENTRIES.'                                        @M4A 03379870
&ERROR   SETB  1                       Indicates error             @M4A 03380860
         AGO   .XSWPO                  and continue                @M4A 03381850
.*                                                                 @M4A 03382840
.SWPOE04 ANOP  ,                                                   @M4A 03383830
         MNOTE 8,'047 INVALID HEX DIGIT ''&CWK'' IN SUBLIST ENTRY &SUB *03384820
               OF SWPORT PARAMETER.'                               @M4A 03385810
&ERROR   SETB  1                       Indicates error             @M4A 03386800
         AGO   .XSWPO                  and continue                @M4A 03387790
.*                                                                 @M4A 03388780
.SWPOE05 ANOP  ,                                                   @M4A 03389770
         MNOTE 8,'022 SWITCH ID OR PORT ID MUST BE &L DIGITS.'     @M4A 03390760
&ERROR   SETB  1                       Indicates error             @M4A 03391750
         AGO   .XSWPO                  and continue                @M4A 03392740
.*                                                                 @M4A 03393730
.XSWPO   ANOP  ,                                                   @M4A 03394720
.*                                                                      03395710
.********************************************************************** 03396700
.*                                                                    * 03397690
.*       Validate SERIAL              1 to &L EBCDIC characters       * 03398680
.*                                                                    * 03399670
.********************************************************************** 03400660
&L       SETA  10                     Maximum length               @M4A 03401650
         AIF   ('&SERIAL' EQ '').ESER0    SERIAL is null           @M4A 03402640
&SERR    SETC  '&SERIAL'                Set serial number          @M5A 03403630
&LEN     SETA  K'&SERIAL              Length of serial number      @N3A 03404620
         AIF   ('&SERIAL'(1,1) NE '''').SERLN  Not in quotes       @M5A 03405610
&LEN     SETA  K'&SERIAL-2            Length of serial number      @N3A 03406600
&SERR    SETC  '&SERIAL'(2,&LEN)        Set serial number          @M5A 03407590
         STRLEN STRING=&SERR          Determines real length       @L2A 03408580
&LEN     SETA  &$STRLEN               Sets real length             @L2A 03409570
.SERLN   ANOP  ,                                                   @M5A 03410560
         AIF   (&LEN      LE &L).ESER0    Less than maximum        @L2C 03411550
         MNOTE 8,'033 SERIAL PARAMETER EXCEEDS &L CHARACTERS.'     @M4A 03412540
&ERROR   SETB  1                      Indicate error               @M4A 03413530
.ESER0   ANOP  ,                                                   @M4A 03414520
.********************************************************************** 03415510
.*                                                                    * 03416500
.*       Validate DESC                1 to &L EBCDIC characters       * 03417490
.*                                                                    * 03418480
.********************************************************************** 03419470
&L       SETA  32                 Maximum description length       @M4A 03420460
         AIF   ('&DESC' EQ '').EDESC    DESC is null               @M4A 03421450
         AIF   ('&DESC'(1,1) EQ '''').DELEN  Must be in quotes     @M4A 03422440
.*                                   (Asmblr checks for end quote) @M4A 03423430
         MNOTE 8,'008 DESC VALUE MUST BE ENCLOSED IN QUOTES.'      @M4A 03424420
&ERROR   SETB  1                      Indicate error               @M4A 03425410
         AGO   .EDESC                                              @M4A 03426400
.DELEN   ANOP                                                      @M4A 03427390
&DESCR   SETC  '&DESC'                Set description              @M4A 03428380
&LEN     SETA  K'&DESC-2              Length of description        @M4A 03429370
         AIF   (&LEN  LE 0).DENULL    Check for zero length        @M4A 03430360
&DSC     SETC  '&DESC'(2,&LEN)        Sets description string      @L2A 03431350
         STRLEN STRING=&DSC           Determines real length       @L2A 03432340
&LEN     SETA  &$STRLEN               Sets real length             @L2A 03433330
         AIF   (&LEN  LE &L).EDESC    Less than maximum            @M4A 03434320
         MNOTE 8,'033 DESC PARAMETER EXCEEDS &L CHARACTERS.'       @M4A 03435310
&ERROR   SETB  1                      Indicate error               @M4A 03436300
         AGO   .EDESC                                              @M4A 03437290
.DENULL  ANOP                                                      @M4A 03438280
&DESCR   SETC  ''' '''                Set to blank                 @M4A 03439270
.EDESC   ANOP  ,                                                   @M4A 03440260
.********************************************************************** 03441250
.*                                                                    * 03442240
.*       Generate internal text record                                * 03443230
.*                                                                    * 03444220
.********************************************************************** 03445210
.GENTEXT ANOP                                                           03446200
         AIF (&ERROR EQ 1).EXIT       Exit if error                     03447190
&CNO     SETC '&SYSITRN'              EBCDIC version of stmnt number    03448180
         DC    CL8'&UNIT'             Unit name                         03449170
         AIF  ('&MODEL' EQ '').MODNO  No model                          03450160
         DC    CL4'&MODEL'            Model name                        03451150
         AGO   .GENSWID                                                 03452140
.MODNO   ANOP  ,                                                        03453130
         DC    XL4'00'                No model specified                03454120
.GENSWID ANOP  ,                                                        03455110
         DC    XL1'00'                Reserved switch id byte           03456100
         DC    XL1'&SWID'             Switch id                         03457090
         DC    XL2'00'                Reserved                          03458080
         AIF   (&NPORT EQ 0).PORTNO   No port list                      03459070
         DC    A(@P&CNO)              Address of port list              03460060
         DC    AL1(&NPORT)            Count of port entries             03461050
         AGO   .GENSWCN               Branch to continue                03462040
.PORTNO  ANOP  ,                                                        03463030
         DC    A(0)                   No port list                      03464020
         DC    AL1(0)                 Zero count                        03465010
.GENSWCN ANOP  ,                                                        03466000
         DC    XL2'00'                Reserved                          03466990
         AIF   (&NSWPO EQ 0).SWPONO   No connected switch list          03467980
         DC    AL1(&NSWPO)            Count of connected switch ports   03468970
         DC    A(@C&CNO)              Address of connected switch list  03469960
         AGO   .GENDESC               Branch to continue                03470950
.SWPONO  ANOP  ,                                                        03471940
         DC    AL1(0)                 Zero count                        03472930
         DC    A(0)                   No list of connected switches     03473920
.GENDESC ANOP  ,                                                        03474910
         DC    XL8'00'                Reserved                          03475900
         AIF   ('&DESC' EQ '').NODESC Description specified        @M4A 03476890
         DC    CL32&DESCR             Description                  @M4A 03477880
         AGO   .EDESCP                branch to continue           @M4A 03478870
.NODESC  ANOP  ,                      Description not specified    @M4A 03479860
         DC    CL32'  '               Description                  @M4A 03480850
.EDESCP  ANOP  ,                                                   @M4A 03481840
         AIF   ('&SERIAL' EQ '').NOSER  Serial number specified?   @M4A 03482830
         DC    CL10'&SERR'            Serial number                @M4A 03483820
         AGO   .ESER                  branch to continue           @M4A 03484810
.NOSER   ANOP  ,                      Description not specified    @M4A 03485800
         DC    CL10'  '               Description                  @M4A 03486790
.ESER    ANOP  ,                                                   @M4A 03487780
         SPACE 2                                                        03488770
         DC    XL18'00'               Reserved                     @M4A 03489760
.*--------------------------------------------------------------------- 03490750
.GENPOR  ANOP  ,                                                   @L2A 03491740
&SUB     SETA  1                      Point to PORT array entry 1       03492730
         AIF   (&SUB GT &NPORT).GENSWC Process SWPORT              @LTA 03493720
&CWK     SETC  '@P&CNO'            Label for 1st entry in PORT list     03494710
.GENPOLP ANOP                                                           03495700
         SPACE 1                                                        03496690
         DS    0H'0'                  Force boundary                    03497680
&CWK     DC    XL1'00'                Reserved                          03498670
         DC    XL1'&SPO(&SUB)'        Low port id                       03499660
         DC    XL1'00'                Reserved                          03500650
         DC    XL1'&TPO(&SUB)'        High port id                      03501640
&CWK     SETC  ''                     Blank out label                   03502630
&SUB     SETA  &SUB+1                 Points to next entry in array     03503620
         AIF   (&SUB LE &NPORT).GENPOLP Processes next array entry      03504610
.GENSWC  ANOP  ,                                                   @M4A 03505600
&SUB     SETA  1                      Point to PORT array entry 1       03506590
         AIF   (&SUB GT &NSWPO).ECSWP Generation complete          @LTA 03507580
&CWK     SETC  '@C&CNO'            Label for 1st entry in SWPORT list   03508570
.GENCSWP ANOP                                                           03509560
         SPACE 1                                                        03510550
         DS    0H'0'                  Force boundary                    03511540
&CWK     DC    XL1'&EPOR1(&SUB)'      Exit port                         03512530
         DC    XL1'00'                Reserved                          03513520
         DC    XL1'&ESW(&SUB)'        Target switch                     03514510
         DC    XL1'&EPORT(&SUB)'      Target port                       03515500
&CWK     SETC  ''                     Blank out label                   03516490
&SUB     SETA  &SUB+1                 Points to next entry in array     03517480
         AIF   (&SUB LE &NSWPO).GENCSWP Processes next array entry      03518470
.ECSWP   ANOP                                                      @L2A 03519460
.*                                                                      03520450
.*                                                                 @M4A 03521440
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to      03522430
         MNOTE ' '                     occur if NOGEN specified         03523420
         MEND                                                           03524410
*/*==================================================================*/ 03525400
*/*==================================================================*/ 03526390
         TITLE 'HCD MACRO LISTING - PORT - ESCON DIRECTOR PORT'         03527380
         MACRO  --  PORT INFORMATION                                    03528370
&SYMBOL  PORT     &ID=,&NAME=,&OCC                                      03529360
.*                                                                 @L2C 03530350
         AGO   .SKIP                                               @M4A 03531340
*/********************************************************************/ 03532330
*/*                                                                  */ 03533320
*/*01*  MACRO NAME = PORT                                            */ 03534310
*/*                                                                  */ 03535300
*/*01*  DESCRIPTIVE NAME = Switch port characteristics               */ 03536290
*/*                                                                  */ 03537280
*/*01*  MACRO CALL =                                                 */ 03538270
*/*       LABEL PORT      ID=port id                                 */ 03539260
*/*                       NAME='port name'                           */ 03540250
*/*                       OCC                                        */ 03541240
*/*                                                                  */ 03542230
*/*01*  FUNCTION =  Describes the characteristics of the switch port.*/ 03543220
*/*                                                                  */ 03544210
*/*01*  NOTES =  None.                                               */ 03545200
*/*                                                                  */ 03546190
*/*02*    DEPENDENCIES = None.                                       */ 03547180
*/*                                                                  */ 03548170
*/*02*    RESTRICTIONS = For HCD use only.                           */ 03549160
*/*                                                                  */ 03550150
*/*01*  INPUT = # ID=      2 hex char port id.                       */ 03551140
*/*               PORTNM=  24 char port name (enclosed in quotes).   */ 03552130
*/*               OCC      Indication that switch port is            */ 03553120
*/*                        occupied.                                 */ 03554110
*/*                                                                  */ 03555100
*/*             # - Required keyword                                 */ 03556090
*/*                                                                  */ 03557080
*/*01*  OUTPUT = Internal text                                       */ 03558070
*/*                                                                  */ 03559060
*/********************************************************************/ 03560050
*/*                                                                     03561040
.*                                                                      03562030
.SKIP    ANOP                                                           03563020
         GBLA  &SYSITRN           HCD statement number             @M4A 03564010
         GBLA  &$STRLEN           String length                    @L2A 03565000
         GBLB  &$ERR              Global error flag                @M4A 03565990
         GBLC  &CWK               Character work variable          @M4A 03566980
         LCLA  &AWK               Arithmetic work variable         @M4A 03567970
         LCLA  &L                 Maximum or required operand lgth @M4A 03568960
         LCLA  &LEN               Actual operand length            @M4A 03569950
         LCLA  &NDX               Substring index                  @M4A 03570940
         LCLB  &ERROR             Error flag                       @M4A 03571930
         LCLB  &POCC              Port is occupied                 @M4A 03572920
         LCLC  &CNO               EBCDIC version of SYSITRN        @M4A 03573910
         LCLC  &DESCR             Description work area            @M4A 03574900
         LCLC  &DSC               Description work area            @L2A 03575890
         LCLC  &TPORID            Character sublist entry          @M4A 03576880
         ACTR  10000              Set for infinite loop control         03577870
&SYMBOL  TXTHDR PORT                                                    03578860
.*                                                                      03579850
.********************************************************************** 03580840
.*                                                                    * 03581830
.*       Check if unrecognized parameters are specified               * 03582820
.*                                                                    * 03583810
.********************************************************************** 03584800
         AIF   (N'&SYSLIST EQ 0).XPOS10    No positional parameter @P3A 03585790
         AIF   (N'&SYSLIST NE 1).XPOS05    No positional parameter @P3A 03586780
&POCC    SETB  1                                                        03587770
         AIF   ('&SYSLIST(1)' EQ 'OCC').XPOS10 Allowed parameter   @P3A 03588760
.XPOS05  ANOP  ,                                                        03589750
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @P3A 03590740
&ERROR   SETB  1                  Indicate error                   @P3A 03591730
         AGO   .XPOS10            and continue                     @P3A 03592720
.*                                                                      03593710
.XPOS10  ANOP  ,                                                   @P3A 03594700
.********************************************************************** 03595690
.*                                                                    * 03596680
.*       Validate ID                   2 Hex digits                   * 03597670
.*                                                                    * 03598660
.********************************************************************** 03599650
.CKID    ANOP                                                           03600640
&L       SETA  2                             Required SWID  length      03601630
&TPORID  SETC  '&ID'                   Save port id                @M4A 03602620
         AIF   ('&TPORID' EQ '').PORTE02         No port id        @M4A 03603610
         AIF   (K'&TPORID NE &L).PORTE05  Port id ^= 2 chars       @M4A 03604600
         HEXCHECK STRING=&TPORID                                   @M4A 03605590
         AIF   (&$ERR).PORTE04         Report error if encountered @M4A 03606580
.********************************************************************** 03607570
.*                                                                    * 03608560
.*       Validate NAME                1 to &L EBCDIC characters       * 03609550
.*                                                                    * 03610540
.********************************************************************** 03611530
&L       SETA  24                 Maximum port name   length       @M4A 03612520
         AIF   ('&NAME' EQ '').DENULL   NAME is null               @M4A 03613510
         AIF   ('&NAME'(1,1) EQ '''').DELEN  Must be in quotes     @M4A 03614500
.*                                   (Asmblr checks for end quote) @M4A 03615490
         MNOTE 8,'008 NAME VALUE MUST BE ENCLOSED IN QUOTES.'      @M4A 03616480
&ERROR   SETB  1                      Indicate error               @M4A 03617470
         AGO   .ENAME                                              @M4A 03618460
.DELEN   ANOP                                                      @M4A 03619450
&DESCR   SETC  '&NAME'                Set description              @M4A 03620440
&LEN     SETA  K'&NAME-2              Length of description        @M4A 03621430
         AIF   (&LEN  LE 0).DENULL    Check for zero length        @M4A 03622420
&DSC     SETC  '&NAME'(2,&LEN)        Sets name string             @L2A 03623410
         STRLEN STRING=&DSC           Determines real length       @L2A 03624400
&LEN     SETA  &$STRLEN               Sets real length             @L2A 03625390
         AIF   (&LEN  LE &L).ENAME    Less than maximum            @M4A 03626380
         MNOTE 8,'033 NAME PARAMETER EXCEEDS &L CHARACTERS.'       @M4A 03627370
&ERROR   SETB  1                      Indicate error               @M4A 03628360
         AGO   .ENAME                                              @M4A 03629350
.DENULL  ANOP                                                      @M4A 03630340
&DESCR   SETC  ''' '''                Set to blank                 @M4A 03631330
.ENAME   ANOP  ,                                                   @M4A 03632320
.********************************************************************** 03633310
.*                                                                    * 03634300
.*       Generate internal text record                                * 03635290
.*                                                                    * 03636280
.********************************************************************** 03637270
.GENTEXT ANOP                                                           03638260
         AIF (&ERROR EQ 1).EXIT       Exit if error                     03639250
&CNO     SETC '&SYSITRN'              EBCDIC version of stmnt number    03640240
         DC    XL1'00'                Reserved                          03641230
         DC    XL1'&TPORID'           Port Id                           03642220
         AIF  (&POCC).POCC            Port is occupied                  03643210
         DC    XL1'00'                Port is not occupied              03644200
         AGO   .EPOCC                                                   03645190
.POCC    ANOP  ,                                                        03646180
         DC    XL1'80'                Port is occupied                  03647170
.EPOCC   ANOP  ,                                                        03648160
         DC    XL1'00'                Reserved                          03649150
         DC    CL24&DESCR             Port name                         03650140
         DC    XL4'00'                Reserved                          03651130
.EPORT   ANOP  ,                                                   @L2A 03652120
.*                                                                 @M4A 03653110
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to      03654100
         MNOTE ' '                     occur if NOGEN specified         03655090
         MEND                                                           03656080
*/*==================================================================*/ 03657070
*/*==================================================================*/ 03658060
         TITLE 'HCD MACRO LISTING - SWCONF - SWITCH CONFIGURATION'      03659050
         MACRO  --  SWITCH CONFIGURATION INFORMATION                    03660040
&SYMBOL  SWCONF   &ID=,&SWID=,&DESC=,&DEFCONN=                          03661030
.*                                                                 @L2A 03662020
         AGO   .SKIP                                               @L2A 03663010
*/********************************************************************/ 03664000
*/*                                                                  */ 03664990
*/*01*  MACRO NAME = SWCONF                                          */ 03665980
*/*                                                                  */ 03666970
*/*01*  DESCRIPTIVE NAME = Switch configuration characteristics      */ 03667960
*/*                                                                  */ 03668950
*/*01*  MACRO CALL =                                                 */ 03669940
*/*       LABEL SWITCH    DEFCONN=A (allowed) or                     */ 03670930
*/*                               P (prohibited)                     */ 03671920
*/*                       DESC='description'                         */ 03672910
*/*                       ID=switch configuration id                 */ 03673900
*/*                       PORTCF=((port,A,(id1,id2,...),         @L2A*/ 03674890
*/*                                     P,(id1,id2,...),             */ 03675880
*/*                                     D,(id),                      */ 03676870
*/*                                     BLOCKED),                    */ 03677860
*/*                                (...),...)                        */ 03678850
*/*                       SWID=switch id                             */ 03679840
*/*                                                                  */ 03680830
*/*01*  FUNCTION =  Describes the characteristics of the switch      */ 03681820
*/*                 configuration: the default connection type,      */ 03682810
*/*                 the list of allowed, prohibited and dedicated    */ 03683800
*/*                 ports for each port, an indication whether the   */ 03684790
*/*                 port is blocked, the switch id, the switch       */ 03685780
*/*                 configuration id and its description.            */ 03686770
*/*                                                                  */ 03687760
*/*01*  NOTES =  A switch of up to 256 ports is supported.           */ 03688750
*/*                                                                  */ 03689740
*/*02*    DEPENDENCIES = None.                                       */ 03690730
*/*                                                                  */ 03691720
*/*02*    RESTRICTIONS = For HCD use only.                           */ 03692710
*/*                                                                  */ 03693700
*/*01*  INPUT = # DEFCONN= A (allowed) or P (prohibited).            */ 03694690
*/*               DESC=    Up to 32 EBCDIC characters.               */ 03695680
*/*             # ID=      1 to 8 alphanumeric switch configuration  */ 03696670
*/*                        name.                                     */ 03697660
*/*               PORTCF=  list of port id entries, where each       */ 03698650
*/*                        port id entry contains the following      */ 03699640
*/*                        optional information:                     */ 03700630
*/*                        2 hex char port id each,                  */ 03701620
*/*                        follwed optionally by the following data: */ 03702610
*/*                        A,list of 2 hex char port ids (describing */ 03703600
*/*                        the allowed port connections),            */ 03704590
*/*                        P,list of 2 hex char port ids (describing */ 03705580
*/*                        the prohibited port connections),         */ 03706570
*/*                        D,list of 2 hex char port id (describing  */ 03707560
*/*                        a dedicated port connection),             */ 03708550
*/*                        BLOCKED, if the port id is blocked.       */ 03709540
*/*             # SWID=    2 hex character switch id                 */ 03710530
*/*                                                                  */ 03711520
*/*             # - Required keyword                                 */ 03712510
*/*                                                                  */ 03713500
*/*01*  OUTPUT = Internal text                                       */ 03714490
*/*                                                                  */ 03715480
*/********************************************************************/ 03716470
*/*                                                                     03717460
.*                                                                      03718450
.SKIP    ANOP                                                           03719440
         GBLA  &SYSITRN           HCD statement number             @M4A 03720430
         GBLA  &$STRLEN           String length                    @L2A 03721420
         GBLB  &$ERR              Global error flag                @M4A 03722410
         GBLC  &CWK               Character work variable          @M4A 03723400
         LCLA  &AWK               Arithmetic work variable         @M4A 03724390
         LCLA  &AWK1              Arithmetic work variable 1       @M4A 03725380
         LCLA  &ALLOW             Flag for allowed connections     @M4A 03726370
         LCLA  &BITVAL(8)         Constants to get port mask       @M4A 03727360
         LCLA  &BLK               Flag for blocked connections     @M4A 03728350
         LCLA  &COMMA             Index to comma in sublist entry  @M4A 03729340
         LCLA  &DED               Flag for dedicated connections   @M4A 03730330
         LCLA  &FLAG,&LBIT        Flag byte variables              @M4A 03731320
         LCLA  &L                 Maximum or required operand lgth @M4A 03732310
         LCLA  &L1                Maximum or required operand lgth @M4A 03733300
         LCLA  &LEN               Actual operand length            @M4A 03734290
         LCLA  &NDX               Substring index                  @M4A 03735280
         LCLA  &MAXSUB            Sublist element number           @M4A 03736270
         LCLA  &NELM              Number of elements in sublist    @M4A 03737260
         LCLA  &NPORT             Number of PORT entries           @M4A 03738250
         LCLA  &PFLAGS(256)       Port number flags                @M4A 03739240
         LCLA  &PROHIB            Flag for prohibited connections  @M4A 03740230
         LCLA  &SUB               Sublist element number           @M4A 03741220
         LCLA  &SUB1              Sublist element number           @M4A 03742210
         LCLA  &SUB2              Sublist element number           @M4A 03743200
         LCLA  &X1                Port id                          @L2A 03744190
         LCLA  &X2                Addressing byte in bitstring     @L2A 03745180
         LCLA  &X3                Addressing bit in bitstring      @L2A 03746170
         LCLB  &ASTF              Asteriks flag                    @M4A 03747160
         LCLB  &ERROR             Error flag                       @M4A 03748150
         LCLB  &SINGLE            Only single list element         @M4A 03749140
         LCLC  &CNO               EBCDIC version of SYSITRN        @M4A 03750130
         LCLC  &DESCR             Description work area            @M4A 03751120
         LCLC  &DSC               Description work area            @L2A 03752110
         LCLC  &PORID(256)        Character sublist entry          @M4A 03753100
         LCLC  &TPORID            Character sublist entry          @M4A 03754090
         ACTR  10000              Set for infinite loop control         03755080
&SYMBOL  TXTHDR SWCONF                                                  03756070
.*                                                                      03757060
.********************************************************************** 03758050
.*                                                                    * 03759040
.*       Check if unrecognized parameters are specified               * 03760030
.*                                                                    * 03761020
.********************************************************************** 03762010
         AIF   (N'&SYSLIST EQ 0).XPOS10    No positional parameter @P3A 03763000
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @P3A 03763990
&ERROR   SETB  1                  Indicate error                   @P3A 03764980
         AGO   .XPOS10            and continue                     @P3A 03765970
.*                                                                      03766960
.XPOS10  ANOP  ,                                                   @P3A 03767950
.********************************************************************** 03768940
.*                                                                    * 03769930
.*       Validate SWID                 2 Hex digits                   * 03770920
.*                                                                    * 03771910
.********************************************************************** 03772900
.CKSWID  ANOP                                                           03773890
&L       SETA  2                             Required SWID  length      03774880
         AIF   ('&SWID' EQ '').NOSWID        SWID not specified         03775870
         AIF   (N'&SWID GT 1).SUBSWI         Invalid in sublist format  03776860
         AIF   (K'&SWID EQ &L).SWICHAR       Number of characters       03777850
         MNOTE 8,'032 SWID PARAMETER MUST BE &L CHARACTER.'             03778840
&ERROR   SETB  1                      Indicates error                   03779830
         AGO   .CKXSWID                                                 03780820
.SWICHAR ANOP                                                           03781810
&NDX     SETA  1                                                        03782800
.*       Validate the SWID                                              03783790
.SWILOOP ANOP  ,                                                        03784780
         AIF   ('&SWID'(&NDX,1) LT 'A').BADSWI                          03785770
         AIF   ('&SWID'(&NDX,1) LE 'F').CKITSWI (A-F)                   03786760
         AIF   ('&SWID'(&NDX,1) LT '0').BADSWI                          03787750
         AIF   ('&SWID'(&NDX,1) LE '9').CKITSWI (0-9)                   03788740
.BADSWI  ANOP                         Invalid char in generic name      03789730
&CWK     SETC  '&SWID'(&NDX,1)                                          03790720
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN SWID PARAMETER.'    03791710
&ERROR   SETB  1                      Indicates error                   03792700
         AGO   .CKXSWID               Go check next keyword             03793690
.CKITSWI ANOP  ,                                                        03794680
&NDX     SETA  &NDX+1                                                   03795670
         AIF   (&NDX LE &L).SWILOOP                                     03796660
         AGO   .CKXSWID                                                 03797650
.SUBSWI  MNOTE 8,'014 SWID PARAMETER MUST NOT BE A SUBLIST.'            03798640
&ERROR   SETB  1                      Indicates error                   03799630
         AGO   .CKXSWID               Go check next keyword             03800620
.NOSWID  MNOTE 8,'002 SWID KEYWORD NOT SPECIFIED.'                      03801610
&ERROR   SETB  1                      Indicates error                   03802600
.CKXSWID ANOP                                                           03803590
.********************************************************************** 03804580
.*                                                                    * 03805570
.*       Validate ID                   type <= 8 alphanumerics        * 03806560
.*                                                                    * 03807550
.********************************************************************** 03808540
.CKID    ANOP                                                           03809530
&L       SETA  8                        Maximum ID length               03810520
         AIF   ('&ID'   EQ '').NOID     ID not specified                03811510
         AIF   (N'&ID GT 1).IDSUB       Invalid in sublist format       03812500
         AIF   (K'&ID LE &L).IDCHAR     Maximum number of characters    03813490
         MNOTE 8,'033 ID PARAMETER EXCEEDS &L CHARACTERS.'              03814480
&ERROR   SETB  1                      Indicates error                   03815470
         AGO   .CKXID                                                   03816460
.IDCHAR  ANOP                                                           03817450
&NDX     SETA  1                      Point to 1st character            03818440
.*                                                                      03819430
.*       Loop to validate each character in the ID name                 03820420
.IDLOOP  ANOP                                                           03821410
         AIF   ('&ID'(&NDX,1) EQ '@').GOODID      (@)              @H4A 03822400
         AIF   ('&ID'(&NDX,1) EQ '#').GOODID      (#)              @H4A 03823390
         AIF   ('&ID'(&NDX,1) EQ '$').GOODID      ($)              @H4A 03824380
         AIF   ('&ID'(&NDX,1) LT 'A').BADID                             03825370
         AIF   ('&ID'(&NDX,1) LE 'I').GOODID      (A-I)                 03826360
         AIF   ('&ID'(&NDX,1) LT 'J').BADID                             03827350
         AIF   ('&ID'(&NDX,1) LE 'R').GOODID      (J-R)                 03828340
         AIF   ('&ID'(&NDX,1) LT 'S').BADID                             03829330
         AIF   ('&ID'(&NDX,1) LE 'Z').GOODID      (S-Z)                 03830320
         AIF   ('&ID'(&NDX,1) LT '0').BADID                             03831310
         AIF   ('&ID'(&NDX,1) LE '9').GOODID      (0-9)                 03832300
.BADID   ANOP                         Invalid character                 03833290
&CWK     SETC  '&ID'(&NDX,1)          Isolate invalid character         03834280
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN ID PARAMETER.'      03835270
&ERROR   SETB  1                      Indicates error                   03836260
.GOODID  ANOP                                                           03837250
&NDX     SETA  &NDX+1                 Points to next character of ID    03838240
         AIF   (&NDX LE K'&ID).IDLOOP       Check next character        03839230
         AGO   .CKXID                 Go check next keyword             03840220
.IDSUB   MNOTE 8,'014 ID NOT VALID IN SUBLIST FORMAT.'                  03841210
&ERROR   SETB  1                      Indicates error                   03842200
         AGO   .CKXID                 Go check next keyword             03843190
.NOID    MNOTE 8,'002 ID KEYWORD NOT SPECIFIED.'                        03844180
&ERROR   SETB  1                      Indicates error                   03845170
         AGO   .CKXID                 Go check next keyword        @M3A 03846160
.CKXID   ANOP  ,                                                        03847150
.*                                                                      03848140
.********************************************************************** 03849130
.*                                                                    * 03850120
.*       Validate DEFCONN                   A or P                    * 03851110
.*                                                                    * 03852100
.********************************************************************** 03853090
.CKDEFC  ANOP                                                           03854080
&L       SETA  1                        Maximum UNIT length             03855070
         AIF   ('&DEFCONN' EQ '').NODEFC  DEFCONN not specified         03856060
         AIF   ('&DEFCONN' EQ 'A').CKXDEFC Valid value                  03857050
         AIF   ('&DEFCONN' EQ 'P').CKXDEFC Valid value                  03858040
         MNOTE 8,'043 DEFCONN VALUE MUST BE A OR P.'                    03859030
&ERROR   SETB  1                      Indicates error                   03860020
         AGO   .CKXDEFC               Go check next keyword             03861010
.NODEFC  MNOTE 8,'014 DEFCONN KEYWORD NOT SPECIFIED.'                   03862000
&ERROR   SETB  1                      Indicates error                   03862990
         AGO   .CKXDEFC               Go check next keyword             03863980
.CKXDEFC ANOP  ,                                                        03864970
.*                                                                      03865960
.********************************************************************** 03866950
.*                                                                    * 03867940
.*       Validate DESC                1 to &L EBCDIC characters       * 03868930
.*                                                                    * 03869920
.********************************************************************** 03870910
&L       SETA  32                 Maximum description length       @M4A 03871900
         AIF   ('&DESC' EQ '').EDESC    DESC is null               @M4A 03872890
         AIF   ('&DESC'(1,1) EQ '''').DELEN  Must be in quotes     @M4A 03873880
.*                                   (Asmblr checks for end quote) @M4A 03874870
         MNOTE 8,'008 DESC VALUE MUST BE ENCLOSED IN QUOTES.'      @M4A 03875860
&ERROR   SETB  1                      Indicate error               @M4A 03876850
         AGO   .EDESC                                              @M4A 03877840
.DELEN   ANOP                                                      @M4A 03878830
&DESCR   SETC  '&DESC'                Set description              @M4A 03879820
&LEN     SETA  K'&DESC-2              Length of description        @M4A 03880810
         AIF   (&LEN  LE 0).DENULL    Check for zero length        @M4A 03881800
&DSC     SETC  '&DESC'(2,&LEN)        Sets description string      @L2A 03882790
         STRLEN STRING=&DSC           Determines length of string  @L2A 03883780
&LEN     SETA  &$STRLEN               Sets real length             @L2A 03884770
         AIF   (&LEN  LE &L).EDESC    Less than maximum            @M4A 03885760
         MNOTE 8,'033 DESC PARAMETER EXCEEDS &L CHARACTERS.'       @M4A 03886750
&ERROR   SETB  1                      Indicate error               @M4A 03887740
         AGO   .EDESC                                              @M4A 03888730
.DENULL  ANOP                                                      @M4A 03889720
&DESCR   SETC  ''' '''                Set to blank                 @M4A 03890710
.EDESC   ANOP  ,                                                   @M4A 03891700
.********************************************************************** 03892690
.*                                                                    * 03893680
.*       Generate internal text record                                * 03894670
.*                                                                    * 03895660
.********************************************************************** 03896650
.GENTEXT ANOP                                                           03897640
         AIF (&ERROR EQ 1).EXIT       Exit if error                     03898630
&CNO     SETC '&SYSITRN'              EBCDIC version of stmnt number    03899620
         DC    CL8'&ID'               Switch configuration name         03900610
.GENSWID ANOP  ,                                                        03901600
         DC    XL1'00'                Reserved switch id byte           03902590
         DC    XL1'&SWID'             Switch id                         03903580
         DC    XL2'00'                Reserved                          03904570
.GENDESC ANOP  ,                                                        03905560
         AIF   ('&DESC' EQ '').NODESC Description specified        @M4A 03906550
         DC    CL32&DESCR             Description                  @M4A 03907540
         AGO   .EDESCP                branch to continue           @M4A 03908530
.NODESC  ANOP  ,                      Description not specified    @M4A 03909520
         DC    CL32'  '               Description                  @M4A 03910510
.EDESCP  ANOP  ,                                                   @M4A 03911500
         DC    CL1'&DEFCONN'          Default connection type      @L2A 03912490
         DC    XL11'00'               Reserved                     @M4A 03913480
&CWK     SETC  ''                     Blank out label                   03914470
&SUB     SETA  &SUB+1                 Points to next entry in array     03915460
         AIF   (&SUB LE &NPORT).GENPOLP Processes next array entry      03916450
.EPORTN  ANOP  ,                                                   @L2A 03917440
.*                                                                 @M4A 03918430
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to      03919420
         MNOTE ' '                     occur if NOGEN specified         03920410
         MEND                                                           03921400
*/*==================================================================*/ 03922390
*/*==================================================================*/ 03923380
         TITLE 'HCD MACRO LISTING - POCONF - PORT CONFIGURATION'        03924370
         MACRO  --  PORT CONFIGURATION INFORMATION                      03925360
&SYMBOL  POCONF   &ID=,&PORTCF=                                         03926350
.*                                                                 @L2A 03927340
         AGO   .SKIP                                               @L2A 03928330
*/********************************************************************/ 03929320
*/*                                                                  */ 03930310
*/*01*  MACRO NAME = POCONF                                          */ 03931300
*/*                                                                  */ 03932290
*/*01*  DESCRIPTIVE NAME = Switch configuration characteristics      */ 03933280
*/*                                                                  */ 03934270
*/*01*  MACRO CALL =                                                 */ 03935260
*/*       LABEL POCONF    ID=port id                                 */ 03936250
*/*                       PORTCF=((A,(id1,id2,...),              @L2A*/ 03937240
*/*                                P,(id1,id2,...),                  */ 03938230
*/*                                D,(id),                           */ 03939220
*/*                                BLOCKED),                         */ 03940210
*/*                                (...),...)                        */ 03941200
*/*                                                                  */ 03942190
*/*01*  FUNCTION =  Describes the characteristics of the port        */ 03943180
*/*                 configuration:                                   */ 03944170
*/*                 the list of allowed, prohibited and dedicated    */ 03945160
*/*                 ports for each port, an indication whether the   */ 03946150
*/*                 port is blocked.                                 */ 03947140
*/*                                                                  */ 03948130
*/*01*  NOTES =  A switch of up to 256 ports is supported.           */ 03949120
*/*                                                                  */ 03950110
*/*02*    DEPENDENCIES = None.                                       */ 03951100
*/*                                                                  */ 03952090
*/*02*    RESTRICTIONS = For HCD use only.                           */ 03953080
*/*                                                                  */ 03954070
*/*01*  INPUT = # ID=      2 hex characters port id                  */ 03955060
*/*             # PORTCF=  list of port id entries, where each       */ 03956050
*/*                        port id entry contains the following      */ 03957040
*/*                        optional information:                     */ 03958030
*/*                        A,list of 2 hex char port ids (describing */ 03959020
*/*                        the allowed port connections),            */ 03960010
*/*                        P,list of 2 hex char port ids (describing */ 03961000
*/*                        the prohibited port connections),         */ 03961990
*/*                        D,list of 2 hex char port id (describing  */ 03962980
*/*                        a dedicated port connection),             */ 03963970
*/*                        BLOCKED, if the port id is blocked.       */ 03964960
*/*                                                                  */ 03965950
*/*             # - Required keyword                                 */ 03966940
*/*                                                                  */ 03967930
*/*01*  OUTPUT = Internal text                                       */ 03968920
*/*                                                                  */ 03969910
*/********************************************************************/ 03970900
*/*                                                                     03971890
.*                                                                      03972880
.SKIP    ANOP                                                           03973870
         GBLA  &SYSITRN           HCD statement number             @M4A 03974860
         GBLB  &$ERR              Global error flag                @M4A 03975850
         GBLC  &CWK               Character work variable          @M4A 03976840
         LCLA  &AWK               Arithmetic work variable         @M4A 03977830
         LCLA  &AWK1              Arithmetic work variable 1       @M4A 03978820
         LCLA  &ALLOW             Flag for allowed connections     @M4A 03979810
         LCLA  &BITVAL(8)         Constants to get port mask       @M4A 03980800
         LCLA  &BLK               Flag for blocked connections     @M4A 03981790
         LCLA  &COMMA             Index to comma in sublist entry  @M4A 03982780
         LCLA  &DED               Flag for dedicated connections   @M4A 03983770
         LCLA  &FLAG,&LBIT        Flag byte variables              @M4A 03984760
         LCLA  &L                 Maximum or required operand lgth @M4A 03985750
         LCLA  &L1                Maximum or required operand lgth @M4A 03986740
         LCLA  &LEN               Actual operand length            @M4A 03987730
         LCLA  &NDX               Substring index                  @M4A 03988720
         LCLA  &MAXSUB            Sublist element number           @M4A 03989710
         LCLA  &NELM              Number of elements in sublist    @M4A 03990700
         LCLA  &NPORT             Number of PORT entries           @M4A 03991690
         LCLA  &NALLOW            Number of allowed port connects  @M4A 03992680
         LCLA  &NPROHI            Number of prohibited port conn.  @M4A 03993670
         LCLA  &PFLAGS            Port number flags                @M4A 03994660
         LCLA  &PROHIB            Flag for prohibited connections  @M4A 03995650
         LCLA  &SUB               Sublist element number           @M4A 03996640
         LCLA  &SUB1              Sublist element number           @M4A 03997630
         LCLA  &SUB2              Sublist element number           @M4A 03998620
         LCLA  &X1                Port id                          @L2A 03999610
         LCLA  &X2                Addressing byte in bitstring     @L2A 04000600
         LCLA  &X3                Addressing bit in bitstring      @L2A 04001590
         LCLB  &ASTF              Asteriks flag                    @M4A 04002580
         LCLB  &ERROR             Error flag                       @M4A 04003570
         LCLB  &SINGLE            Only single list element         @M4A 04004560
         LCLC  &PALLOW(256)       Allowed port matrix              @M4A 04005550
         LCLC  &PPROHI(256)       Prohibited port matrix           @M4A 04006540
         LCLC  &PDEDIC            Dedicated port matrix            @M4A 04007530
         LCLC  &CNO               EBCDIC version of SYSITRN        @M4A 04008520
         LCLC  &PORID             Character sublist entry          @M4A 04009510
         LCLC  &TPORID            Character sublist entry          @M4A 04010500
         ACTR  10000              Set for infinite loop control         04011490
&ALLOW   SETA  128                Allowed connections specified    @L2A 04012480
&PROHIB  SETA  64                 Prohibited connections specified @L2A 04013470
&DED     SETA  32                 Dedicated connection specified   @L2A 04014460
&BLK     SETA  16                 Blocked port specified           @L2A 04015450
&BITVAL(1) SETA 128                                                     04016440
&BITVAL(2) SETA  64                                                     04017430
&BITVAL(3) SETA  32                                                     04018420
&BITVAL(4) SETA  16                                                     04019410
&BITVAL(5) SETA   8                                                     04020400
&BITVAL(6) SETA   4                                                     04021390
&BITVAL(7) SETA   2                                                     04022380
&BITVAL(8) SETA   1                                                     04023370
&PDEDIC    SETC   '00'                                                  04024360
&SYMBOL  TXTHDR POCONF                                                  04025350
.*                                                                      04026340
.********************************************************************** 04027330
.*                                                                    * 04028320
.*       Check if unrecognized parameters are specified               * 04029310
.*                                                                    * 04030300
.********************************************************************** 04031290
         AIF   (N'&SYSLIST EQ 0).XPOS10    No positional parameter @P3A 04032280
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @P3A 04033270
&ERROR   SETB  1                  Indicate error                   @P3A 04034260
         AGO   .XPOS10            and continue                     @P3A 04035250
.*                                                                      04036240
.XPOS10  ANOP  ,                                                   @P3A 04037230
.********************************************************************** 04038220
.*                                                                    * 04039210
.*       Validate ID                   2 Hex digits                   * 04040200
.*                                                                    * 04041190
.********************************************************************** 04042180
.CKID    ANOP                                                           04043170
&L       SETA  2                             Required ID    length      04044160
         AIF   ('&ID' EQ '').NOID            ID not specified           04045150
         AIF   (N'&ID GT 1).SUBSWI           Invalid in sublist format  04046140
         AIF   (K'&ID EQ &L).SWICHAR         Number of characters       04047130
         MNOTE 8,'032 ID PARAMETER MUST BE &L CHARACTER.'               04048120
&ERROR   SETB  1                      Indicates error                   04049110
         AGO   .CKXID                                                   04050100
.SWICHAR ANOP                                                           04051090
&NDX     SETA  1                                                        04052080
.*       Validate the ID                                                04053070
.SWILOOP ANOP  ,                                                        04054060
         AIF   ('&ID'(&NDX,1) LT 'A').BADSWI                            04055050
         AIF   ('&ID'(&NDX,1) LE 'F').CKITSWI (A-F)                     04056040
         AIF   ('&ID'(&NDX,1) LT '0').BADSWI                            04057030
         AIF   ('&ID'(&NDX,1) LE '9').CKITSWI (0-9)                     04058020
.BADSWI  ANOP                         Invalid char in generic name      04059010
&CWK     SETC  '&ID'(&NDX,1)                                            04060000
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN ID PARAMETER.'      04060990
&ERROR   SETB  1                      Indicates error                   04061980
         AGO   .CKXID                 Go check next keyword             04062970
.CKITSWI ANOP  ,                                                        04063960
&NDX     SETA  &NDX+1                                                   04064950
         AIF   (&NDX LE &L).SWILOOP                                     04065940
         AGO   .CKXID                                                   04066930
.SUBSWI  MNOTE 8,'014 ID PARAMETER MUST NOT BE A SUBLIST.'              04067920
&ERROR   SETB  1                      Indicates error                   04068910
         AGO   .CKXID                 Go check next keyword             04069900
.NOID    MNOTE 8,'002 ID KEYWORD NOT SPECIFIED.'                        04070890
&ERROR   SETB  1                      Indicates error                   04071880
.CKXID ANOP                                                             04072870
.*                                                                      04073860
.********************************************************************** 04074850
.*                                                                    * 04075840
.*       Validate PORTCF     Up to 256 sublist entries                * 04076830
.*                           (A,(id1,...),P,(id1,...),D,(id),BLOCKED) * 04077820
.*                                                                    * 04078810
.********************************************************************** 04079800
.CKPORT  ANOP                                                           04080790
&MAXSUB  SETA  256                     Max number of PORT entries  @M4A 04081780
&L1      SETA  7                       Required PORT id length     @M4A 04082770
&L       SETA  2                       Required PORT id length     @M4A 04083760
         AIF   ('&PORTCF' EQ '').PORTE02 Entry omitted             @M4A 04084750
         AIF  (N'&PORTCF GT &L1).PORTE03 Higher number of              *04085740
                                       operands than allowed       @M4A 04086730
&NELM    SETA  N'&PORTCF               Number of sublist elements  @L2A 04087720
.PORT118 ANOP  ,                                                   @M4A 04088710
.*                                                                 @M4A 04089700
&SUB1    SETA  1                                                   @L2A 04090690
.PORT119 ANOP  ,                                                   @L2A 04091680
         AIF   (&SUB1 GT &NELM).PORT190                            @L2A 04092670
.PORT120 ANOP  ,                                                   @M4A 04093660
&TPORID  SETC  '&PORTCF(&SUB1)'        Save port id                @M4A 04094650
.PORT130 ANOP  ,                                                   @M4A 04095640
         AIF   ('&TPORID' EQ '').PORTE06         No port id        @M4A 04096630
         AIF   ('&TPORID' EQ 'BLOCKED').PORT140                         04097620
         AIF   ('&TPORID' EQ 'A').PORT150                               04098610
         AIF   ('&TPORID' EQ 'P').PORT160                               04099600
         AIF   ('&TPORID' EQ 'D').PORT170                               04100590
         AGO   .PORTE06                No valide port status       @L2A 04101580
.PORT140 ANOP  ,                       Process BLOCKED status      @L2A 04102570
&PFLAGS  SETA &PFLAGS+&BLK                                              04103560
         AGO   .PORT180                                                 04104550
.PORT150 ANOP  ,                       Process Allowed ports       @L2A 04105540
&SUB1    SETA  &SUB1+1                 Increment to next element   @L2A 04106530
&PFLAGS  SETA &PFLAGS+&ALLOW                                            04107520
&NALLOW  SETA  N'&PORTCF(&SUB1)                                         04108510
.PORT154 ANOP  ,                                                        04109500
         AIF   (&NALLOW EQ 0).PORTE07                                   04110490
         AIF   (&NALLOW GT &MAXSUB).PORTE07                             04111480
&SUB2    SETA  1                                                        04112470
.PORT156 ANOP  ,                                                        04113460
         AIF   (&SUB2 GT &NALLOW).PORT180                               04114450
&TPORID  SETC '&PORTCF(&SUB1,&SUB2)'                                    04115440
.PORT158 ANOP  ,                                                        04116430
         AIF   (K'&TPORID NE &L).PORTE05  Port id ^= 2 chars       @M4A 04117420
         HEXCHECK STRING=&TPORID                                   @M4A 04118410
         AIF   (&$ERR).PORTE04         Report error if encountered @M4A 04119400
&PALLOW(&SUB2)  SETC '&TPORID'                                     @L2A 04120390
&SUB2    SETA  &SUB2+1                                                  04121380
         AGO   .PORT156                                                 04122370
.*                                                                 @M4A 04123360
.PORT160 ANOP  ,                       Process Prohibited ports    @L2A 04124350
&SUB1    SETA  &SUB1+1                 Increment to next element   @L2A 04125340
&PFLAGS  SETA &PFLAGS+&PROHIB                                           04126330
&NPROHI  SETA  N'&PORTCF(&SUB1)                                         04127320
.PORT164 ANOP  ,                                                        04128310
         AIF   (&NPROHI EQ 0).PORTE07                                   04129300
         AIF   (&NPROHI GT &MAXSUB).PORTE07                             04130290
&SUB2    SETA  1                                                        04131280
.PORT166 ANOP  ,                                                        04132270
         AIF   (&SUB2 GT &NPROHI).PORT180                               04133260
&TPORID  SETC  '&PORTCF(&SUB1,&SUB2)'                                   04134250
.PORT168 ANOP  ,                                                        04135240
         AIF   (K'&TPORID NE &L).PORTE05  Port id ^= 2 chars       @M4A 04136230
         HEXCHECK STRING=&TPORID                                   @M4A 04137220
         AIF   (&$ERR).PORTE04         Report error if encountered @M4A 04138210
&PPROHI(&SUB2)  SETC '&TPORID'                                     @L2A 04139200
&SUB2    SETA  &SUB2+1                                                  04140190
         AGO   .PORT166                                                 04141180
.*                                                                 @M4A 04142170
.PORT170 ANOP  ,                       Process Dedicated  ports    @L2A 04143160
&SUB1    SETA  &SUB1+1                 Increment to next element   @L2A 04144150
&PFLAGS  SETA &PFLAGS+&DED                                              04145140
&NDEDIC  SETA  N'&PORTCF(&SUB1)                                         04146130
.PORT174 ANOP  ,                                                        04147120
&SUB2    SETA  1                                                        04148110
         AIF   (&NDEDIC NE 1).PORTE08                                   04149100
&TPORID  SETC  '&PORTCF(&SUB1,&SUB2)'                                   04150090
.PORT178 ANOP  ,                                                        04151080
         AIF   (K'&TPORID NE &L).PORTE05  Port id ^= 2 chars       @M4A 04152070
         HEXCHECK STRING=&TPORID                                   @M4A 04153060
         AIF   (&$ERR).PORTE04         Report error if encountered @M4A 04154050
&PDEDIC  SETC  '&TPORID'          Show as hex value                @L2A 04155040
.*                                                                 @M4A 04156030
.PORT180 ANOP  ,                                                        04157020
&SUB1    SETA  &SUB1+1                 Point to next sublist entry @M4A 04158010
         AGO   .PORT119                Process next sublist elem   @L2A 04159000
.PORT190 ANOP  ,                                                        04159990
         AGO   .XPORT                  End of processing           @L2A 04160980
.*                                                                 @M4A 04161970
.PORTE01 ANOP  ,                                                   @M4A 04162960
         MNOTE 8,'045 PORTCF PARAMETER EXCEEDS &MAXSUB ENTRIES.'   @M4A 04163950
&ERROR   SETB  1                       Indicates error             @M4A 04164940
         AGO   .XPORT                  and continue                @M4A 04165930
.*                                                                 @M4A 04166920
.PORTE02 ANOP  ,                                                   @M4A 04167910
         MNOTE 8,'017 PORT ID REQUIRED in SUBLIST ENTRY &SUB OF PORTCF *04168900
               PARAMETER.'                                         @M4A 04169890
&ERROR   SETB  1                       Indicates error             @M4A 04170880
         AGO   .XPORT                  and continue                @M4A 04171870
.*                                                                 @M4A 04172860
.PORTE03 ANOP  ,                                                   @M4A 04173850
         MNOTE 8,'022 PORTCF PARAMETER SUBLIST ENTRY &SUB MUST NOT EXCE*04174840
                ED &L1 PARAMETERS.'                                @M4A 04175830
&ERROR   SETB  1                       Indicates error             @M4A 04176820
         AGO   .XPORT                  and continue                @M4A 04177810
.*                                                                 @M4A 04178800
.PORTE04 ANOP  ,                                                   @M4A 04179790
         MNOTE 8,'047 INVALID HEX DIGIT ''&CWK'' IN SUBLIST ENTRY &SUB *04180780
               OF PORT PARAMETER.'                                 @M4A 04181770
&ERROR   SETB  1                       Indicates error             @M4A 04182760
         AGO   .XPORT                  and continue                @M4A 04183750
.*                                                                 @M4A 04184740
.PORTE05 ANOP  ,                                                   @M4A 04185730
         MNOTE 8,'022 PORT ID MUST BE &L DIGITS: &SUB1 &SUB2.'     @M4A 04186720
         MNOTE 8,'022 PORT ID: &TPORID.'                           @M4A 04187710
&ERROR   SETB  1                       Indicates error             @M4A 04188700
         AGO   .XPORT                  and continue                @M4A 04189690
.*                                                                 @M4A 04190680
.PORTE06 ANOP  ,                                                   @M4A 04191670
         MNOTE 8,'045 PORTCF ELEMENT &SUB1 MUST BE A, D, P OR BLOCKED.' 04192660
.*                                                                 @M4A 04193650
&ERROR   SETB  1                       Indicates error             @M4A 04194640
         AGO   .XPORT                  and continue                @M4A 04195630
.*                                                                 @M4A 04196620
.PORTE07 ANOP  ,                                                   @M4A 04197610
         MNOTE 8,'045 PORTCF ELEMENT &SUB1 OF SUBLIST &SUB MUST BE A LI*04198600
               ST OF UP TO &MAXSUB PORT IDENTIFIERS.'              @L2A 04199590
&ERROR   SETB  1                       Indicates error             @M4A 04200580
         AGO   .XPORT                  and continue                @M4A 04201570
.*                                                                 @M4A 04202560
.PORTE08 ANOP  ,                                                   @M4A 04203550
         MNOTE 8,'045 PORTCF ELEMENT &SUB1 OF SUBLIST &SUB MUST BE A LI*04204540
               ST OF 1 PORT IDENTIFIER.'                           @L2A 04205530
&ERROR   SETB  1                       Indicates error             @M4A 04206520
         AGO   .XPORT                  and continue                @M4A 04207510
.*                                                                 @M4A 04208500
.XPORT   ANOP  ,                                                   @M4A 04209490
.*                                                                      04210480
.********************************************************************** 04211470
.*                                                                    * 04212460
.*       Generate internal text record                                * 04213450
.*                                                                    * 04214440
.********************************************************************** 04215430
.GENTEXT ANOP                                                           04216420
         AIF (&ERROR EQ 1).EXIT       Exit if error                     04217410
&CNO     SETC '&SYSITRN'              EBCDIC version of stmnt number    04218400
         DC    XL1'00'                Reserved port id byte             04219390
         DC    XL1'&ID'               Port id                           04220380
         DC    XL1'00'                Reserved                          04221370
         DC    XL1'&PDEDIC'           Dedicated target port             04222360
         DC    AL1(&PFLAGS)           Port status flags                 04223350
         DC    XL7'00'                Reserved                          04224340
         AIF (&NALLOW GT 0).GENPAL1                                     04225330
         DC    XL8'00'                                                  04226320
         AGO   .EPALL                                                   04227310
.GENPAL1 ANOP  ,                                                        04228300
         DC    XL2'00'                Reserved                          04229290
         DC    AL2(&NALLOW)           Number of allowed ports           04230280
         DC    A(@PALL&CNO)                                             04231270
.EPALL   ANOP  ,                                                        04232260
         AIF (&NPROHI GT 0).GENPPRO                                     04233250
         DC    XL8'00'                No prohibited connections         04234240
         AGO   .EPPRO                                                   04235230
.GENPPRO ANOP  ,                                                        04236220
         DC    XL2'00'                Reserved                          04237210
         DC    AL2(&NPROHI)           Number of prohibited ports        04238200
         DC    A(@PPRO&CNO)                                             04239190
.EPPRO   ANOP  ,                                                        04240180
&CWK     SETC  '@PALL&CNO'                                              04241170
&SUB     SETA  1                                                        04242160
.GENPAL2 ANOP  ,                                                        04243150
         AIF   (&SUB GT &NALLOW).EPALST                                 04244140
&CWK     DC    X'00'                  Reserved                          04245130
         DC    X'&PALLOW(&SUB)'                                         04246120
&CWK     SETC  ' '                                                      04247110
&SUB     SETA  &SUB+1                                                   04248100
         AGO   .GENPAL2                                                 04249090
.EPALST  ANOP  ,                                                        04250080
&CWK     SETC  '@PPRO&CNO'                                              04251070
&SUB     SETA  1                                                        04252060
.GENPPR2 ANOP  ,                                                        04253050
         AIF   (&SUB GT &NPROHI).EPPRST                                 04254040
&CWK     DC    X'00'                  Reserved                          04255030
         DC    X'&PPROHI(&SUB)'                                         04256020
&CWK     SETC  ' '                                                      04257010
&SUB     SETA  &SUB+1                                                   04258000
         AGO   .GENPPR2                                                 04258990
.EPPRST  ANOP  ,                                                        04259980
.*                                                                 @M4A 04260970
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to      04261960
         MNOTE ' '                     occur if NOGEN specified         04262950
         MEND                                                           04263940
*/*==================================================================*/ 04264930
*/*==================================================================*/ 04265920
         TITLE 'HCD MACRO LISTING - EDT - ELIGIBLE DEVICE TABLE'        04266910
         MACRO  --  PARSE EDT MACRO                                     04267900
&SYMBOL  EDT  &DEVPREF=,&ID=,&DESC=                                @N3C 04268890
         AGO   .SKIP                                                    04269880
*/********************************************************************/ 04270870
*/*                                                                  */ 04271860
*/*01*  MACRO NAME = EDT                                             */ 04272850
*/*                                                                  */ 04273840
*/*01*  DESCRIPTIVE NAME = Eligible Device Table                     */ 04274830
*/*                                                                  */ 04275820
*/*01*  MACRO CALL =                                                 */ 04276810
*/*       LABEL EDT  DEVPREF=(generic name<,generic name>...)        */ 04277800
*/*                  ID=identifier                                   */ 04278790
*/*                  DESC='description'                          @N3A*/ 04279780
*/*                                                                  */ 04280770
*/*01*  FUNCTION = Initiates a set of UNITNAME records for an        */ 04281760
*/*                associated EDT. Describes the identifier for      */ 04282750
*/*                this EDT and the device preference list.          */ 04283740
*/*                                                                  */ 04284730
*/*01*  NOTES = The EDT macro is not required if only one EDT is     */ 04285720
*/*             to be built and no device preference is desired.     */ 04286710
*/*                                                                  */ 04287700
*/*02*    DEPENDENCIES = None.                                       */ 04288690
*/*                                                                  */ 04289680
*/*01*  INPUT  = DEVPREF= List of generic names for device           */ 04290670
*/*                       preference table.                          */ 04291660
*/*              ID= 2 byte alphanumeric identifier.                 */ 04292650
*/*              DESC= String of 0 to 32 EBCDIC characters enclosed  */ 04293640
*/*                    in quotes.                                @N3A*/ 04294630
*/*                                                                  */ 04295620
*/*01*  OUTPUT = Internal text                                       */ 04296610
*/*                                                                  */ 04297600
*/********************************************************************/ 04298590
*/*                                                                     04299580
.*                                                                      04300570
.SKIP    ANOP                                                           04301560
         GBLA  &SYSITRN           HCD statement number                  04302550
         GBLA  &$STRLEN           String length                    @L2A 04303540
         LCLA  &AWK               Arithmetic work variable              04304530
         LCLA  &L                 Maximum or required operand length    04305520
         LCLA  &LEN               Actual operand length            @N3A 04306510
         LCLA  &NDX               Substring index                       04307500
         LCLA  &SUB               Sublist element number                04308490
         LCLB  &ERROR             Error flag                            04309480
         LCLC  &CNO               EBCDIC version of SYSITRN             04310470
         LCLC  &CWK               Character work variable               04311460
         LCLC  &DESCR             Description work area                 04312450
         LCLC  &DSC               Description work area            @L2A 04313440
         ACTR  10000              Set for infinite loop control         04314430
&SYMBOL  TXTHDR EDT               Build header for EDT record           04315420
.*                                                                      04316410
.********************************************************************** 04317400
.*                                                                    * 04318390
.*       Check if unrecognized parameters are specified               * 04319380
.*                                                                    * 04320370
.********************************************************************** 04321360
         AIF   (N'&SYSLIST EQ 0).XPOS20    No positional parameter @P3A 04322350
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @P3A 04323340
&ERROR   SETB  1                  Indicate error                   @P3A 04324330
         AGO   .XPOS20            and continue                     @P3A 04325320
.*                                                                      04326310
.XPOS20  ANOP  ,                                                   @P3A 04327300
.********************************************************************** 04328290
.*                                                                    * 04329280
.*       Validate DEVPREF             1 - 8 character generic name    * 04330270
.*                                                                    * 04331260
.********************************************************************** 04332250
&L       SETA  8                      Maximum length of name            04333240
         AIF   ('&DEVPREF' EQ '').CKID   DEVPREF not specified          04334230
&SUB     SETA  1                      Points to 1st generic name        04335220
.********************************************************************** 04336210
.*       Loop to validate each DEVPREF sublist entry                  * 04337200
.********************************************************************** 04338190
.DPLOOP  ANOP                                                           04339180
         AIF   ('&DEVPREF(&SUB)' EQ '').DPNULL  Null sublist entry      04340170
         AIF   (K'&DEVPREF(&SUB) LE &L ).GDLEN  Length of generic name  04341160
         MNOTE 8,'033 DEVPREF PARAMETER SUBLIST ENTRY &SUB EXCEEDS &L C*04342150
               HARACTERS.'                                              04343140
&ERROR   SETB  1                      Indicates error                   04344130
.GDLEN   ANOP                                                           04345120
&NDX     SETA  1                      Points to 1st char in generic     04346110
.*                                                                      04347100
.*       Loop to validate each character in the generic name            04348090
.NMLOOP  ANOP                                                           04349080
         AIF   ('&DEVPREF(&SUB)'(&NDX,1) LT 'A').NMLOOPD                04350070
         AIF   ('&DEVPREF(&SUB)'(&NDX,1) LE 'I').GOODNM (A-I)           04351060
         AIF   ('&DEVPREF(&SUB)'(&NDX,1) LT 'J').BADNM                  04352050
         AIF   ('&DEVPREF(&SUB)'(&NDX,1) LE 'R').GOODNM (J-R)           04353040
         AIF   ('&DEVPREF(&SUB)'(&NDX,1) LT 'S').BADNM                  04354030
         AIF   ('&DEVPREF(&SUB)'(&NDX,1) LE 'Z').GOODNM (S-Z)           04355020
         AIF   ('&DEVPREF(&SUB)'(&NDX,1) LT '0').BADNM                  04356010
         AIF   ('&DEVPREF(&SUB)'(&NDX,1) LE '9').GOODNM (0-9)           04357000
.NMLOOPD ANOP                                                           04357990
         AIF   ('&DEVPREF(&SUB)'(&NDX,1) EQ '-').GOODNM (-)             04358980
.BADNM   ANOP                         Invalid char in generic name      04359970
&CWK     SETC  '&DEVPREF(&SUB)'(&NDX,1)  Isolate invalid character      04360960
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN SUBLIST ENTRY &SUB *04361950
               FOR DEVPREF PARAMETER.'                                  04362940
&ERROR   SETB  1                      Indicates error                   04363930
.GOODNM  ANOP                                                           04364920
&NDX     SETA  &NDX+1                                                   04365910
         AIF   (&NDX LE K'&DEVPREF(&SUB)).NMLOOP                        04366900
         AGO   .NEXTSLE               Process next entry in sublist     04367890
.*                                                                      04368880
.DPNULL  MNOTE 8,'018 DEVPREF SUBLIST ENTRY &SUB IS MISSING.'           04369870
&ERROR   SETB  1                      Indicates error                   04370860
.NEXTSLE ANOP                         Process next sublist entry        04371850
&SUB     SETA  &SUB+1                 Points to next sublist entry      04372840
         AIF   (&SUB LE N'&DEVPREF).DPLOOP  Another generic to process  04373830
.********************************************************************** 04374820
.*                                                                    * 04375810
.*       Validate ID                  2 alphanumeric identifier       * 04376800
.*                                                                    * 04377790
.********************************************************************** 04378780
.CKID    ANOP                                                           04379770
&L       SETA  2                      Required ID length                04380760
         AIF   ('&ID' EQ '').ECKID         ID not specified        @N3C 04381750
         AIF   (N'&ID GT 1).SUBID          Invalid in sublist format    04382740
         AIF   (K'&ID EQ &L ).IDCHAR       Number of characters         04383730
         MNOTE 8,'032 ID PARAMETER MUST BE &L CHARACTERS.'              04384720
&ERROR   SETB  1                      Indicates error                   04385710
.IDCHAR  ANOP                                                           04386700
.*       Loop to validate each character in the ID                      04387690
&NDX     SETA  1                      Point to 1st character            04388680
.IDLOOP  ANOP                                                           04389670
         AIF   ('&ID'(&NDX,1) LT 'A').BADID                             04390660
         AIF   ('&ID'(&NDX,1) LE 'I').GOODID (A-I)                      04391650
         AIF   ('&ID'(&NDX,1) LT 'J').BADID                             04392640
         AIF   ('&ID'(&NDX,1) LE 'R').GOODID (J-R)                      04393630
         AIF   ('&ID'(&NDX,1) LT 'S').BADID                             04394620
         AIF   ('&ID'(&NDX,1) LE 'Z').GOODID (S-Z)                      04395610
         AIF   ('&ID'(&NDX,1) LT '0').BADID                             04396600
         AIF   ('&ID'(&NDX,1) LE '9').GOODID (0-9)                      04397590
.BADID   ANOP                         Invalid character                 04398580
&CWK     SETC  '&ID'(&NDX,1)          Isolate invalid character         04399570
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN ID PARAMETER.'      04400560
&ERROR   SETB  1                      Indicates error                   04401550
.GOODID  ANOP                                                           04402540
&NDX     SETA  &NDX+1                 Points to next character          04403530
         AIF   (&NDX LE K'&ID).IDLOOP       Check next character        04404520
         AGO   .ECKID                 No more characters           @N3C 04405510
.SUBID   MNOTE 8,'014 ID PARAMETER MAY NOT BE A SUBLIST.'               04406500
&ERROR   SETB  1                      Indicates error                   04407490
.ECKID   ANOP  ,                                                   @N3A 04408480
.********************************************************************** 04409470
.*                                                                    * 04410460
.*       Validate DESC                1 to &L EBCDIC characters       * 04411450
.*                                                                    * 04412440
.********************************************************************** 04413430
&L       SETA  32                 Maximum description length       @N3A 04414420
         AIF   ('&DESC' EQ '').DENULL   DESC is null               @N3A 04415410
         AIF   ('&DESC'(1,1) EQ '''').DELEN  Must be in quotes     @N3A 04416400
.*                                   (Asmblr checks for end quote) @N3A 04417390
         MNOTE 8,'008 DESC VALUE MUST BE ENCLOSED IN QUOTES.'      @N3A 04418380
&ERROR   SETB  1                      Indicate error               @N3A 04419370
         AGO   .EDESC                 Go to end of DESC            @N3A 04420360
.DELEN   ANOP                                                      @N3A 04421350
&DESCR   SETC  '&DESC'                Set description              @N3A 04422340
&LEN     SETA  K'&DESC-2              Length of description        @N3A 04423330
         AIF   (&LEN  LE 0).DENULL    Check for zero length        @N3A 04424320
&DSC     SETC  '&DESC'(2,&LEN)        Sets description string      @L2A 04425310
         STRLEN STRING=&DSC           Determines length of string  @L2A 04426300
&LEN     SETA  &$STRLEN               Sets real string length      @L2A 04427290
         AIF   (&LEN  LE &L).EDESC    Less than maximum            @N3A 04428280
         MNOTE 8,'033 DESC PARAMETER EXCEEDS &L CHARACTERS.'       @N3A 04429270
&ERROR   SETB  1                      Indicate error               @N3A 04430260
         AGO   .EDESC                 Go to end of DESC            @N3A 04431250
.DENULL  ANOP                                                      @N3A 04432240
&DESCR   SETC  ''' '''                Set to blank                 @N3A 04433230
.EDESC   ANOP  ,                                                   @N3A 04434220
.********************************************************************** 04435210
.*                                                                    * 04436200
.*       Generate internal text record                                * 04437190
.*                                                                    * 04438180
.********************************************************************** 04439170
.GENTEXT ANOP                                                           04440160
         AIF   (&ERROR EQ 1).EXIT     Exit if an error has been found   04441150
&CNO     SETC  '&SYSITRN'             EBCDIC version of statement nbr   04442140
         AIF   ('&ID' EQ '').NOID     ID not specified                  04443130
         DC    CL2'&ID'               Alphanumeric EDT identifier       04444120
         AGO   .GENDEVP               Go generate DEVPREF               04445110
.NOID    ANOP                                                           04446100
         DC    CL2'  '                EDT identifier (not specified)    04447090
.GENDEVP ANOP                                                           04448080
&AWK     SETA  N'&DEVPREF             Number of entries in DEVPREF list 04449070
         DC    H'&AWK'                Number of generic names in list   04450060
         AIF   ('&DEVPREF' NE '').LIST  Generic list exists             04451050
         DC    A(0)                   No generic name list              04452040
         AGO   .DESCP                 Exit                         @N3C 04453030
.LIST    ANOP                                                           04454020
         DC    A(@G&CNO)              Pointer to generic name list      04455010
.DESCP   ANOP                                                      @N3A 04456000
         AIF   ('&DESC' EQ '').NODESC Description specified        @N3A 04456990
         DC    CL32&DESCR             Description                  @N3A 04457980
         AGO   .EDESCP                branch to continue           @N3A 04458970
.NODESC  ANOP  ,                      Description not specified    @N3A 04459960
         DC    XL32'00'               Description                  @N3A 04460950
.EDESCP  ANOP  ,                                                   @N3A 04461940
         AIF   ('&DEVPREF' EQ '').EXIT  No generic list - exit     @N3A 04462930
&SUB     SETA  1                      Point to DEVPREF entry 1          04463920
&CWK     SETC  '@G&CNO'               Label for 1st DEVPREF entry       04464910
.GENLOOP ANOP                                                           04465900
&CWK     DC    CL8'&DEVPREF(&SUB)'    Generic name                      04466890
&CWK     SETC  ''                     Blank out label                   04467880
&SUB     SETA  &SUB+1                 Points to next entry in array     04468870
         AIF   (&SUB LE N'&DEVPREF).GENLOOP Processes next generic name 04469860
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to      04470850
         MNOTE ' '                     occur if NOGEN specified         04471840
         MEND                                                           04472830
*/*==================================================================*/ 04473820
*/*==================================================================*/ 04474810
         TITLE 'HCD MACRO LISTING - ID - MESSAGE IDENTIFICATION'        04475800
         MACRO  --  GENERATE MESSAGE FOR HEADING                        04476790
&SYMBOL  ID    &MSG1=,&MSG2=,&SYSTEM=,&SCR=,&REMOTE=,&TOK=,            *04477780
               &SNAADDR=,&SERIAL=,&DESC=,&NAME=,&UNIT=,&MODEL=,        *04478770
               &MODE=,&LEVEL=                                      @L2A 04479760
         AGO   .SKIP                                                    04480750
*/********************************************************************/ 04481740
*/*                                                                  */ 04482730
*/*01*  MACRO NAME = ID                                              */ 04483720
*/*                                                                  */ 04484710
*/*01*  DESCRIPTIVE NAME = Message identification macro.             */ 04485700
*/*                                                                  */ 04486690
*/*01*  MACRO CALL =                                                 */ 04487680
*/*       LABEL ID    DESC='description'                         @M4A*/ 04488670
*/*                   LEVEL=support level                        @L2A*/ 04489660
*/*                   MODE=configuration mode                    @L2A*/ 04490650
*/*                   MODEL=processor model                      @L2A*/ 04491640
*/*                   MSG1='message1'                                */ 04492630
*/*                   MSG2='message2'                                */ 04493620
*/*                   NAME=processor name                        @L2A*/ 04494610
*/*                   REMOTE='....'           not processed      @LTA*/ 04495600
*/*                   SCR='.......'                              @L1A*/ 04496590
*/*                   SERIAL=serial_number                       @M4A*/ 04497580
*/*                   SNAADDR=(network_name,system_name)         @M4A*/ 04498570
*/*                   SYSTEM='....'           not processed          */ 04499560
*/*                   TOK='.......'           not processed      @H6A*/ 04500550
*/*                   UNIT=processor unit                        @L2A*/ 04501540
*/*                                                                  */ 04502530
*/*01*  FUNCTION =  Provides the identification information to be    */ 04503520
*/*                 printed in the heading of configuration          */ 04504510
*/*                 reports.                                         */ 04505500
*/*                                                                  */ 04506490
*/*01*  NOTES =  The ID macro may only be issued once.               */ 04507480
*/*              For IOCP, the ID statement must be first.           */ 04508470
*/*                                                                  */ 04509460
*/*02*    DEPENDENCIES = None.                                       */ 04510450
*/*                                                                  */ 04511440
*/*01*  INPUT =  MSG1= 1 to 64 EBCDIC characters to be used          */ 04512430
*/*                    as identification information.                */ 04513420
*/*              MSG2= 1 to 64 EBCDIC characters to be used          */ 04514410
*/*                    as identification information.                */ 04515400
*/*              DESC= 1 to 32 EBCDIC characters to be used          */ 04516390
*/*                    as processor description.                     */ 04517380
*/*              SERIAL= 1 to 10 characters serial number            */ 04518370
*/*              SNAADDR= 2 sublist entries consisting of            */ 04519360
*/*                    (SNA network name, SNA system name)           */ 04520350
*/*                                                                  */ 04521340
*/*01*  OUTPUT =  Information for the heading of HCD                 */ 04522330
*/*               configuration reports.                             */ 04523320
*/*                                                                  */ 04524310
*/********************************************************************/ 04525300
*/*                                                                     04526290
.*                                                                      04527280
.SKIP    ANOP                                                           04528270
         GBLA  &SYSITRN           HCD statement number                  04529260
         GBLA  &$STRLEN           String length                    @L2A 04530250
         GBLB  &INTERR            Error indication set by macro    @M4A 04531240
         GBLC  &CWK               Character to be checked          @M4A 04532230
         LCLA  &LEN               Length value                          04533220
         LCLA  &L                 Maximum or required operand length    04534210
         LCLA  &L1                Number of sublist entries        @M4A 04535200
         LCLA  &CONFM             Configuration mode               @L2A 04536190
         LCLB  &ERROR             Error flag                            04537180
         LCLC  &MESG1             MSG1                                  04538170
         LCLC  &MESG2             MSG2                                  04539160
         LCLC  &DESCR             DESC                             @M4A 04540150
         LCLC  &DSC               DESC                             @L2A 04541140
         LCLC  &NETWN             Network name                     @M4A 04542130
         LCLC  &SYSTN             System name                      @M4A 04543120
         LCLC  &SERR              Serial number                    @M5A 04544110
         LCLC  &SSCR              SCR value                        @L2A 04545100
         ACTR  10000              Set for infinite loop control         04546090
&SYMBOL  TXTHDR ID                                                      04547080
.*                                                                      04548070
.********************************************************************** 04549060
.*                                                                    * 04550050
.*       Check if unrecognized parameters are specified               * 04551040
.*                                                                    * 04552030
.********************************************************************** 04553020
         AIF   (N'&SYSLIST EQ 0).XPOS30    No positional parameter @P3A 04554010
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @P3A 04555000
&ERROR   SETB  1                  Indicate error                   @P3A 04555990
         AGO   .XPOS30            and continue                     @P3A 04556980
.*                                                                      04557970
.XPOS30  ANOP  ,                                                   @P3A 04558960
&L       SETA  64                 Maximum message length                04559950
.********************************************************************** 04560940
.*                                                                    * 04561930
.*       Validate MSG1                1 to &L EBCDIC characters       * 04562920
.*                                                                    * 04563910
.********************************************************************** 04564900
         AIF   ('&MSG1' EQ '').M1NULL   MSG1 is null                    04565890
         AIF   ('&MSG1'(1,1) EQ '''').M1LEN  Msg must be in quotes      04566880
.*                                    (Asmblr checks for end quote)     04567870
         MNOTE 8,'008 MSG1 VALUE MUST BE ENCLOSED IN QUOTES.'           04568860
&ERROR   SETB  1                      Indicate error                    04569850
.M1LEN   ANOP                                                           04570840
&MESG1   SETC  '&MSG1'                Set message 1                     04571830
&LEN     SETA  K'&MSG1-2              Length of message-quotes          04572820
         AIF   (&LEN  LE 0).M1NULL    Check for zero length             04573810
         AIF   (&LEN  LE &L).CKMSG2   Less than maximum                 04574800
         MNOTE 8,'033 MSG1 PARAMETER EXCEEDS &L CHARACTERS.'            04575790
&ERROR   SETB  1                      Indicate error                    04576780
.M1NULL  ANOP                                                           04577770
&MESG1   SETC  '''  '''               Set to blanks                     04578760
.********************************************************************** 04579750
.*                                                                    * 04580740
.*       Validate MSG2                1 to &L EBCDIC characters       * 04581730
.*                                                                    * 04582720
.********************************************************************** 04583710
.CKMSG2  ANOP                                                           04584700
         AIF   ('&MSG2' EQ '').M2NULL     MSG2 is null                  04585690
         AIF   ('&MSG2'(1,1) EQ '''').M2LEN  Msg must be in quotes      04586680
         MNOTE 8,'008 MSG2 VALUE MUST BE ENCLOSED IN QUOTES.'           04587670
&ERROR   SETB  1                      Indicate error                    04588660
.M2LEN   ANOP                                                           04589650
&MESG2   SETC  '&MSG2'                Set message 2                     04590640
&LEN     SETA  K'&MSG2-2              Length of message-quotes          04591630
         AIF   (&LEN  EQ 0).M2NULL    Check for zero length             04592620
         AIF   (&LEN  LE &L).CKMSG2X  Less than maximum            @M4C 04593610
         MNOTE 8,'033 MSG2 PARAMETER EXCEEDS &L CHARACTERS.'            04594600
&ERROR   SETB  1                      Indicate error                    04595590
.M2NULL  ANOP                                                           04596580
&MESG2   SETC  '''  '''               Set to blanks                     04597570
.CKMSG2X ANOP ,                                                    @M4C 04598560
.********************************************************************** 04599550
.*                                                                    * 04600540
.*       Validate SNAADDR             List of (network,system)        * 04601530
.*                                                                    * 04602520
.********************************************************************** 04603510
&L       SETA  8                  Maximum name length              @M4A 04604500
&L1      SETA  2                  Number of sublist entries        @M4A 04605490
         AIF   ('&SNAADDR' EQ '').ESNAAD SNAADDR not specified     @M4A 04606480
         AIF   (N'&SNAADDR NE &L1).SNAERR1 not 2 sublist entries   @M4A 04607470
&SUB     SETA  1                  Sets sublist entry index         @M4A 04608460
&NETWN   SETC  '&SNAADDR(&SUB)'       Sets network name            @M4A 04609450
         AIF   ('&NETWN' EQ '').SNAERR2 network name omitted       @M4A 04610440
         AIF   (K'&NETWN GT &L).SNAERR3 network name too long      @M4A 04611430
         NAMETEST STRING=&NETWN          check network name to be  @M4A 04612420
.*                                          alphanumeric           @M4A 04613410
         AIF   (&INTERR).SNAERR4         invalid character found   @M4A 04614400
&SUB     SETA  2                  Sets sublist entry index         @M4A 04615390
&SYSTN   SETC  '&SNAADDR(&SUB)'       Sets network name            @M4A 04616380
         AIF   ('&SYSTN' EQ '').SNAERR2 network name omitted       @M4A 04617370
         AIF   (K'&SYSTN GT &L).SNAERR3 network name too long      @M4A 04618360
         NAMETEST STRING=&SYSTN          check system name to be   @M4A 04619350
.*                                          alphanumeric           @M4A 04620340
         AIF   (&INTERR).SNAERR4         invalid character found   @M4A 04621330
         AGO   .ESNAAD                Go to end of SNAADDR         @M4A 04622320
.*                                                                 @M4A 04623310
.SNAERR1 ANOP  ,                                                   @M4A 04624300
         MNOTE 8,'022 SNAADDR PARAMETER MUST CONTAIN &L1 ENTRIES.' @M4A 04625290
&ERROR   SETB  1                       Indicates error             @M4A 04626280
         AGO   .ESNAAD                 and continue                @M4A 04627270
.*                                                                 @M4A 04628260
.SNAERR2 ANOP  ,                                                   @M4A 04629250
         MNOTE 8,'022 SUBLIST ENTRY &SUB of SNAADDR PARAMETER OMITTED.' 04630240
.*                                                                 @M4A 04631230
&ERROR   SETB  1                       Indicates error             @M4A 04632220
         AGO   .ESNAAD                 and continue                @M4A 04633210
.*                                                                 @M4A 04634200
.SNAERR3 ANOP  ,                                                   @M4A 04635190
         MNOTE 8,'033 SUBLIST ENTRY &SUB of SNAADDR PARAMETER EXCEEDS &*04636180
               L CHARACTERS.'                                      @M4A 04637170
.*                                                                 @M4A 04638160
&ERROR   SETB  1                       Indicates error             @M4A 04639150
         AGO   .ESNAAD                 and continue                @M4A 04640140
.*                                                                 @M4A 04641130
.SNAERR4 ANOP  ,                                                   @M4A 04642120
         MNOTE 8,'047 INVALID CHARACTER ''&CWK'' IN SUBLIST ENTRY &SUB *04643110
               OF SNAADDR PARAMETER.'                              @M4A 04644100
.ESNAAD  ANOP  ,                                                   @M4A 04645090
.*                                                                      04646080
.********************************************************************** 04647070
.*                                                                    * 04648060
.*       Validate NAME                1 to 8 alphanumeric name        * 04649050
.*                                                                    * 04650040
.********************************************************************** 04651030
&L       SETA  8                  Maximum name length              @L2A 04652020
         AIF   ('&NAME' EQ '').ENAME  NAME not specified           @L2A 04653010
         AIF   (K'&NAME  GT &L).NAMEER3 network name too long      @L2A 04654000
         NAMETEST STRING=&NAME           check processor name to   @L2A 04654990
.*                                       be alphanumeric           @L2A 04655980
         AIF   (&INTERR).NAMEER4         invalid character found   @L2A 04656970
         AGO   .ENAME                 Go to end of NAME            @L2A 04657960
.*                                                                 @L2A 04658950
.NAMEER3 ANOP  ,                                                   @L2A 04659940
         MNOTE 8,'033 NAME PARAMETER EXCEEDS &L CHARACTERS.'       @L2A 04660930
.*                                                                 @L2A 04661920
&ERROR   SETB  1                       Indicates error             @L2A 04662910
         AGO   .ENAME                  and continue                @L2A 04663900
.*                                                                 @L2A 04664890
.NAMEER4 ANOP  ,                                                   @L2A 04665880
         MNOTE 8,'047 INVALID CHARACTER ''&CWK'' IN NAME PARAMETER.'    04666870
.*                                                                 @L2A 04667860
.ENAME   ANOP  ,                                                   @L2A 04668850
.*                                                                      04669840
.********************************************************************** 04670830
.*                                                                    * 04671820
.*       Validate UNIT                1 to 8 characters               * 04672810
.*                                                                    * 04673800
.********************************************************************** 04674790
&L       SETA  8                  Maximum name length              @L2A 04675780
         AIF   ('&UNIT' EQ '').EUNIT  UNIT not specified           @L2A 04676770
         AIF   (K'&UNIT  GT &L).UNITER3 unit name too long         @L2A 04677760
         ALPHANUM STRING=&UNIT           check processor unit to   @L2A 04678750
.*                                       be alphanumeric           @L2A 04679740
         AIF   (&INTERR).UNITER4         invalid character found   @L2A 04680730
         AGO   .EUNIT                 Go to end of UNIT            @L2A 04681720
.*                                                                 @L2A 04682710
.UNITER3 ANOP  ,                                                   @L2A 04683700
         MNOTE 8,'033 UNIT PARAMETER EXCEEDS &L CHARACTERS.'       @L2A 04684690
.*                                                                 @L2A 04685680
&ERROR   SETB  1                       Indicates error             @L2A 04686670
         AGO   .EUNIT                  and continue                @L2A 04687660
.*                                                                 @L2A 04688650
.UNITER4 ANOP  ,                                                   @L2A 04689640
         MNOTE 8,'047 INVALID CHARACTER ''&CWK'' IN UNIT PARAMETER.'    04690630
.*                                                                 @L2A 04691620
.EUNIT   ANOP  ,                                                   @L2A 04692610
.*                                                                      04693600
.********************************************************************** 04694590
.*                                                                    * 04695580
.*       Validate MODEL               1 to 8 characters               * 04696570
.*                                                                    * 04697560
.********************************************************************** 04698550
&L       SETA  8                  Maximum name length              @L2A 04699540
         AIF   ('&MODEL' EQ '').EMODL  MODEL not specified         @L2A 04700530
         AIF   (K'&MODEL GT &L).MODLER3 model name is too long     @L2A 04701520
         ALPHANUM STRING=&MODEL          check processor model to  @L2A 04702510
.*                                       be alphanumeric           @L2A 04703500
         AIF   (&INTERR).MODLER4         invalid character found   @L2A 04704490
         AGO   .EMODL                 Go to end of MODEL           @L2A 04705480
.*                                                                 @L2A 04706470
.MODLER3 ANOP  ,                                                   @L2A 04707460
         MNOTE 8,'033 MODEL PARAMETER EXCEEDS &L CHARACTERS.'      @L2A 04708450
.*                                                                 @L2A 04709440
&ERROR   SETB  1                       Indicates error             @L2A 04710430
         AGO   .EMODL                  and continue                @L2A 04711420
.*                                                                 @L2A 04712410
.MODLER4 ANOP  ,                                                   @L2A 04713400
         MNOTE 8,'047 INVALID CHARACTER ''&CWK'' IN MODEL PARAMETER.'   04714390
.*                                                                 @L2A 04715380
.EMODL   ANOP  ,                                                   @L2A 04716370
.*                                                                      04717360
.********************************************************************** 04718350
.*                                                                    * 04719340
.*       Validate LEVEL               1 to 8 characters               * 04720330
.*                                                                    * 04721320
.********************************************************************** 04722310
&L       SETA  8                  Maximum name length              @L2A 04723300
         AIF   ('&LEVEL' EQ '').ELEVL  LEVEL not specified         @L2A 04724290
         AIF   (K'&LEVEL GT &L).LEVLER3 level name is too long     @L2A 04725280
         ALPHANUM STRING=&LEVEL          check support level to    @L2A 04726270
.*                                       be alphanumeric           @L2A 04727260
         AIF   (&INTERR).LEVLER4         invalid character found   @L2A 04728250
         AGO   .ELEVL                 Go to end of LEVEL           @L2A 04729240
.*                                                                 @L2A 04730230
.LEVLER3 ANOP  ,                                                   @L2A 04731220
         MNOTE 8,'033 LEVEL PARAMETER EXCEEDS &L CHARACTERS.'      @L2A 04732210
.*                                                                 @L2A 04733200
&ERROR   SETB  1                       Indicates error             @L2A 04734190
         AGO   .ELEVL                  and continue                @L2A 04735180
.*                                                                 @L2A 04736170
.LEVLER4 ANOP  ,                                                   @L2A 04737160
         MNOTE 8,'047 INVALID CHARACTER ''&CWK'' IN LEVEL PARAMETER.'   04738150
.*                                                                 @L2A 04739140
.ELEVL   ANOP  ,                                                   @L2A 04740130
.*                                                                      04741120
.********************************************************************** 04742110
.*                                                                    * 04743100
.*       Validate MODE                BASIC or LPAR                   * 04744090
.*                                                                    * 04745080
.********************************************************************** 04746070
         AIF   ('&MODE'  EQ '').EMODE  MODE not specified          @L2A 04747060
         AIF   ('&MODE'  EQ 'LPAR').MODLPAR Process LPAR mode      @L2A 04748050
         AIF   ('&MODE'  EQ 'BASIC').MODBAS Process BASIC mode     @L2A 04749040
         AGO   .MODEER1                Invalid mode                @L2A 04750030
.MODLPAR ANOP  ,                                                   @L2A 04751020
&CONFM   SETA  2                       Set LPAR mode               @L2A 04752010
         AGO   .EMODE                  End parsing                 @L2A 04753000
.MODBAS  ANOP  ,                                                   @L2A 04753990
&CONFM   SETA  1                       Set BASIC mode              @L2A 04754980
         AGO   .EMODE                  End parsing                 @L2A 04755970
.*                                                                 @L2A 04756960
.MODEER1 ANOP  ,                                                   @L2A 04757950
         MNOTE 8,'033 MODE PARAMETER IS NOT LPAR OR BASIC.'        @L2A 04758940
.*                                                                 @L2A 04759930
.EMODE   ANOP  ,                                                   @L2A 04760920
.*                                                                      04761910
.********************************************************************** 04762900
.*                                                                    * 04763890
.*       Validate DESC                1 to &L EBCDIC characters       * 04764880
.*                                                                    * 04765870
.********************************************************************** 04766860
&L       SETA  32                 Maximum description length       @M4A 04767850
         AIF   ('&DESC' EQ '').DENULL   DESC is null               @M4A 04768840
         AIF   ('&DESC'(1,1) EQ '''').DELEN  Must be in quotes     @M4A 04769830
.*                                   (Asmblr checks for end quote) @M4A 04770820
         MNOTE 8,'008 DESC VALUE MUST BE ENCLOSED IN QUOTES.'      @M4A 04771810
&ERROR   SETB  1                      Indicate error               @M4A 04772800
         AGO   .EDESC                 Go to end of DESC            @M4A 04773790
.DELEN   ANOP                                                      @M4A 04774780
&DESCR   SETC  '&DESC'                Set description              @M4A 04775770
&LEN     SETA  K'&DESC-2              Length of description        @M4A 04776760
         AIF   (&LEN  LE 0).DENULL    Check for zero length        @M4A 04777750
&DSC     SETC  '&DESC'(2,&LEN)        Sets description string      @L2A 04778740
         STRLEN STRING=&DSC           Determines length of string  @L2A 04779730
&LEN     SETA  &$STRLEN               Sets real length             @L2A 04780720
         AIF   (&LEN  LE &L).EDESC    Less than maximum            @M4A 04781710
         MNOTE 8,'033 DESC PARAMETER EXCEEDS &L CHARACTERS.'       @M4A 04782700
&ERROR   SETB  1                      Indicate error               @M4A 04783690
         AGO   .EDESC                 Go to end of DESC            @M4A 04784680
.DENULL  ANOP                                                      @M4A 04785670
&DESCR   SETC  ''' '''                Set to blank                 @M4A 04786660
.EDESC   ANOP  ,                                                   @M4A 04787650
.********************************************************************** 04788640
.*                                                                    * 04789630
.*       Validate SERIAL              1 to &L EBCDIC characters       * 04790620
.*                                                                    * 04791610
.********************************************************************** 04792600
&L       SETA  10                     Maximum length               @M4A 04793590
         AIF   ('&SERIAL' EQ '').ESERN    SERIAL is null           @M4A 04794580
&SERR    SETC  '&SERIAL'                Set serial number          @M5A 04795570
&LEN     SETA  K'&SERIAL              Length of description        @N3A 04796560
         AIF   ('&SERIAL'(1,1) NE '''').SERLN  Not in quotes       @M5A 04797550
&LEN     SETA  K'&SERIAL-2            Length of description        @N3A 04798540
&SERR    SETC  '&SERIAL'(2,&LEN)        Set serial number          @M5A 04799530
         STRLEN STRING=&SERR            Determines length          @L2A 04800520
&LEN     SETA  &$STRLEN                 Sets real length           @L2A 04801510
.SERLN   ANOP  ,                                                   @M5A 04802500
         AIF   (&LEN      LE &L).ESERN    Less than maximum        @L2C 04803490
         MNOTE 8,'033 SERIAL PARAMETER EXCEEDS &L CHARACTERS.'     @M4A 04804480
&ERROR   SETB  1                      Indicate error               @M4A 04805470
.ESERN   ANOP  ,                                                   @M4A 04806460
.*                                                                      04807450
.********************************************************************** 04808440
.*                                                                    * 04809430
.*       Validate SCR                 1 to &L EBCDIC chars            * 04810420
.*                                                                    * 04811410
.********************************************************************** 04812400
&L       SETA  64                     Maximum length               @L2A 04813390
         AIF   ('&SCR' EQ '').ESCRN       SCR is null              @L2A 04814380
&LEN     SETA  K'&SCR                 Length of description        @L2A 04815370
&SSCR    SETC  '&SCR'                   Set SCR number             @L2A 04816360
         AIF   ('&SCR'(1,1) NE '''').SCRLN     Not in quotes       @L2A 04817350
&LEN     SETA  K'&SCR-2               Length of description        @L2A 04818340
&SSCR    SETC  '&SCR'(2,&LEN)           Set SCR number             @L2A 04819330
         STRLEN STRING=&SSCR            Determines length          @L2A 04820320
&LEN     SETA  &$STRLEN                 Sets real length           @L2A 04821310
.SCRLN   ANOP  ,                                                   @L2A 04822300
         AIF   (&LEN      EQ &L).ESCRN    Less than maximum        @L2A 04823290
         MNOTE 8,'033 SCR PARAMETER DOES NOT HAVE &L CHARACTERS.'  @L2A 04824280
&ERROR   SETB  1                      Indicate error               @L2A 04825270
.ESCRN   ANOP  ,                                                   @L2A 04826260
.*                                                                      04827250
.********************************************************************** 04828240
.*                                                                    * 04829230
.*       Generate internal text record                                * 04830220
.*                                                                    * 04831210
.********************************************************************** 04832200
.GENTEXT ANOP                                                           04833190
         AIF (&ERROR EQ 1 ).EXIT      Exit if an error encountered      04834180
         AIF ('&SCR' EQ '').NOSCR     No token available           @L2A 04835170
         AIF   ('&SCR'(1,1) NE '''').NOSCR     Not in quotes       @L2A 04836160
         DC    CL64'&SSCR'            SCR                          @L2A 04837150
         AGO   .NDMSG1                                             @L2A 04838140
.NOSCR   ANOP  ,                                                   @L2A 04839130
         DC    CL64&MESG1             MSG1                         @M4C 04840120
.NDMSG1  ANOP  ,                                                   @L2A 04841110
         DC    CL64&MESG2             MSG2                         @M4C 04842100
         AIF   ('&NETWN' EQ '').NONETW  No network name  available @M4A 04843090
         DC    CL8'&NETWN'            Network name                 @M4A 04844080
         AGO   .NDNETW                                             @M4A 04845070
.NONETW  ANOP  ,                                                   @M4A 04846060
         DC    CL8' '                 No SNA network name          @M4A 04847050
.NDNETW  ANOP  ,                                                   @M4A 04848040
         AIF   ('&SYSTN' EQ '').NOSYSTN No system name available   @M4A 04849030
         DC    CL8'&SYSTN'            System name                  @M4A 04850020
         AGO   .NDSYSTN                                            @M4A 04851010
.NOSYSTN ANOP  ,                                                   @M4A 04852000
         DC    CL8' '                 No SNA system name           @M4A 04852990
.NDSYSTN ANOP  ,                                                   @M4A 04853980
         AIF   ('&SERIAL' EQ '').NOSERN No serial number available @M4A 04854970
         DC    CL10'&SERR'            Serial number                @M5A 04855960
         AGO   .NDSERN                                             @M4A 04856950
.NOSERN  ANOP  ,                                                   @M4A 04857940
         DC    CL10' '                No serial number             @M4A 04858930
.NDSERN  ANOP  ,                                                   @M4A 04859920
         DC    XL2'00'                Reserved                     @M4A 04860910
         DC    CL32&DESCR             Description                  @M4A 04861900
         AIF   ('&NAME' EQ '').NONAME  No processor name available @L2A 04862890
         DC    CL8'&NAME'             Processor name               @L2A 04863880
         AGO   .NDNAME                                             @L2A 04864870
.NONAME  ANOP  ,                                                   @L2A 04865860
         DC    CL8' '                 No processor name            @L2A 04866850
.NDNAME  ANOP  ,                                                   @L2A 04867840
         AIF   ('&UNIT' EQ '').NOUNIT  No processor unit available @L2A 04868830
         DC    CL8'&UNIT'             Processor unit               @L2A 04869820
         AGO   .NDUNIT                                             @L2A 04870810
.NOUNIT  ANOP  ,                                                   @L2A 04871800
         DC    CL8' '                 No processor unit            @L2A 04872790
.NDUNIT  ANOP  ,                                                   @L2A 04873780
         AIF   ('&MODEL' EQ '').NOMODL No processor modl available @L2A 04874770
         DC    CL8'&MODEL'            Processor model              @L2A 04875760
         AGO   .NDMODL                                             @L2A 04876750
.NOMODL  ANOP  ,                                                   @L2A 04877740
         DC    CL8' '                 No processor model           @L2A 04878730
.NDMODL  ANOP  ,                                                   @L2A 04879720
         AIF   ('&LEVEL' EQ '').NOLEVL No support level  available @L2A 04880710
         DC    CL8'&LEVEL'            Support level                @L2A 04881700
         AGO   .NDLEVL                                             @L2A 04882690
.NOLEVL  ANOP  ,                                                   @L2A 04883680
         DC    CL8' '                 No support level             @L2A 04884670
.NDLEVL  ANOP  ,                                                   @L2A 04885660
         DC    AL1(&CONFM)            Configuration mode           @L2A 04886650
         AIF ('&SCR' EQ '').NOSCR1    No token available           @L2A 04887640
         DC    XL1'FF'                Indicate SCR value           @L2A 04888630
         AGO   .NOSCR2                                             @L2A 04889620
.NOSCR1  ANOP  ,                                                   @L2A 04890610
         DC    XL1'00'                Reserved                     @L2A 04891600
.NOSCR2  ANOP  ,                                                   @L2A 04892590
         DC    XL6'00'                Reserved                     @L2A 04893580
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to      04894570
         MNOTE ' '                     occur if NOGEN specified         04895560
         MEND                                                           04896550
*/*==================================================================*/ 04897540
*/*==================================================================*/ 04898530
         TITLE 'HCD MACRO LISTING - IOCONFIG - CONFIGURATION ID'        04899520
         MACRO  --  GENERATE IO CONFIGURATION IDENTIFIER                04900510
&SYMBOL  IOCONFIG &ID=,&DESC=,&NAME=,&TYPE=                        &L2C 04901500
         AGO   .SKIP                                                    04902490
*/********************************************************************/ 04903480
*/*                                                                  */ 04904470
*/*01*  MACRO NAME = IOCONFIG                                        */ 04905460
*/*                                                                  */ 04906450
*/*01*  DESCRIPTIVE NAME = Configuration identification macro.       */ 04907440
*/*                                                                  */ 04908430
*/*01*  MACRO CALL =                                                 */ 04909420
*/*       LABEL IOCONFIG   ID=identifier                             */ 04910410
*/*                        NAME=OS config name                       */ 04911400
*/*                        TYPE=OS config type                       */ 04912390
*/*                                                                  */ 04913380
*/*01*  FUNCTION =  Provides the I/O configuration identifier.       */ 04914370
*/*                                                                  */ 04915360
*/*01*  NOTES =  The IOCONFIG macro may only be issued once.         */ 04916350
*/*                                                                  */ 04917340
*/*02*    DEPENDENCIES = None.                                       */ 04918330
*/*                                                                  */ 04919320
*/*01*  INPUT = # ID= Two character configuration identifier.        */ 04920310
*/*               DESC= 1 to 32 EBCDIC characters description        */ 04921300
*/*               NAME= 1 to 8 OS coniguration name              @L2A*/ 04922290
*/*               TYPE= MVS | VM                                 @L2A*/ 04923280
*/*                                                                  */ 04924270
*/*             # - Required keyword                                 */ 04925260
*/*                                                                  */ 04926250
*/*01*  OUTPUT =  Information for the heading of HCD                 */ 04927240
*/*               configuration reports.                             */ 04928230
*/*                                                                  */ 04929220
*/********************************************************************/ 04930210
*/*                                                                     04931200
.*                                                                      04932190
.SKIP    ANOP                                                           04933180
         GBLA  &SYSITRN           HCD statement number                  04934170
         GBLA  &$STRLEN           String length                    @L2A 04935160
         GBLB  &INTERR            Internal error flag              @L2A 04936150
         LCLA  &L                 Maximum or required operand length    04937140
         LCLA  &NDX               Substring index                       04938130
         LCLA  &OSTYPE            OS configuration type                 04939120
         LCLB  &ERROR             Error flag                            04940110
         LCLC  &DESCR             Description                      @M4A 04941100
         LCLC  &DSC               Description                      @L2A 04942090
         LCLC  &CWK               Character work variable               04943080
         ACTR  10000              Set for infinite loop control         04944070
&SYMBOL  TXTHDR IOCONFIG                                                04945060
.*                                                                      04946050
.********************************************************************** 04947040
.*                                                                    * 04948030
.*       Check if unrecognized parameters are specified               * 04949020
.*                                                                    * 04950010
.********************************************************************** 04951000
         AIF   (N'&SYSLIST EQ 0).XPOS40    No positional parameter @P3A 04951990
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @P3A 04952980
&ERROR   SETB  1                  Indicate error                   @P3A 04953970
         AGO   .XPOS40            and continue                     @P3A 04954960
.*                                                                      04955950
.XPOS40  ANOP  ,                                                   @P3A 04956940
.********************************************************************** 04957930
.*                                                                    * 04958920
.*       Validate DESC                1 to &L EBCDIC characters       * 04959910
.*                                                                    * 04960900
.********************************************************************** 04961890
&L       SETA  32                 Maximum description length       @M4A 04962880
         AIF   ('&DESC' EQ '').DENULL   DESC is null               @M4A 04963870
         AIF   ('&DESC'(1,1) EQ '''').DELEN  Must be in quotes     @M4A 04964860
.*                                   (Asmblr checks for end quote) @M4A 04965850
         MNOTE 8,'008 DESC VALUE MUST BE ENCLOSED IN QUOTES.'      @M4A 04966840
&ERROR   SETB  1                      Indicate error               @M4A 04967830
         AGO   .EDESC                 Go to end of DESC            @M4A 04968820
.DELEN   ANOP                                                      @M4A 04969810
&DESCR   SETC  '&DESC'                Set description              @M4A 04970800
&LEN     SETA  K'&DESC-2              Length of description        @M4A 04971790
         AIF   (&LEN  LE 0).DENULL    Check for zero length        @M4A 04972780
&DSC     SETC  '&DESC'(2,&LEN)        Sets string                  @L2A 04973770
         STRLEN STRING=&DSC           Determines length            @L2A 04974760
&LEN     SETA  &$STRLEN               Sets real length             @L2A 04975750
         AIF   (&LEN  LE &L).EDESC    Less than maximum            @M4A 04976740
         MNOTE 8,'033 DESC PARAMETER EXCEEDS &L CHARACTERS.'       @M4A 04977730
&ERROR   SETB  1                      Indicate error               @M4A 04978720
         AGO   .EDESC                 Go to end of DESC            @M4A 04979710
.DENULL  ANOP                                                      @M4A 04980700
&DESCR   SETC  ''' '''                Set to blank                 @M4A 04981690
.EDESC   ANOP  ,                                                   @M4A 04982680
         AIF   ((('&NAME' EQ '') AND ('&TYPE' EQ '')) OR               *04983670
               (('&NAME' NE '') AND ('&TYPE' NE ''))).CHKNAM       @L2A 04984660
         MNOTE 8,'051 NAME AND TYPE PARAMETERS MUST BE BOTH SPECIFIED O*04985650
               R BOTH OMITTED.'                                    @L2A 04986640
&ERROR   SETB  1                      Indicates error              @L2A 04987630
.CHKNAM  ANOP  ,                                                   @L2A 04988620
.********************************************************************** 04989610
.*                                                                    * 04990600
.*       Validate NAME                1 to 8 character name           * 04991590
.*                                                                    * 04992580
.********************************************************************** 04993570
&L       SETA  8                  Maximum name length              @L2A 04994560
         AIF   ('&NAME' EQ '').ENAME   NAME  not specified         @L2A 04995550
         AIF   (K'&NAME  GT &L).NAMEER3 OS config name is too long @L2A 04996540
         NAMETEST STRING=&NAME           check OS config name to   @L2A 04997530
.*                                       be alphanumeric name      @L2A 04998520
         AIF   (&INTERR).NAMEER4         invalid character found   @L2A 04999510
         AGO   .ENAME                 Go to end of LEVEL           @L2A 05000500
.*                                                                 @L2A 05001490
.NAMEER3 ANOP  ,                                                   @L2A 05002480
         MNOTE 8,'033 NAME PARAMETER EXCEEDS &L CHARACTERS.'       @L2A 05003470
.*                                                                 @L2A 05004460
&ERROR   SETB  1                       Indicates error             @L2A 05005450
         AGO   .ENAME                  and continue                @L2A 05006440
.*                                                                 @L2A 05007430
.NAMEER4 ANOP  ,                                                   @L2A 05008420
         MNOTE 8,'047 INVALID CHARACTER ''&CWK'' IN NAME PARAMETER.'    05009410
.*                                                                 @L2A 05010400
.ENAME   ANOP  ,                                                   @L2A 05011390
.*                                                                      05012380
.********************************************************************** 05013370
.*                                                                    * 05014360
.*       Validate TYPE                MVS or VM                       * 05015350
.*                                                                    * 05016340
.********************************************************************** 05017330
         AIF   ('&TYPE'  EQ '').ETYPE  TYPE not specified          @L2A 05018320
         AIF   ('&TYPE'  EQ 'MVS').TYPEMVS  Process MVS type       @L2A 05019310
         AIF   ('&TYPE'  EQ 'VM').TYPEVM    Process VM type        @L2A 05020300
         AGO   .TYPEER1                Invalid type                @L2A 05021290
.TYPEMVS ANOP  ,                                                   @L2A 05022280
&OSTYPE  SETA  1                       Set MVS type                @L2A 05023270
         AGO   .ETYPE                  End parsing                 @L2A 05024260
.TYPEVM  ANOP  ,                                                   @L2A 05025250
&OSTYPE  SETA  2                       Set VM type                 @L2A 05026240
         AGO   .ETYPE                  End parsing                 @L2A 05027230
.*                                                                 @L2A 05028220
.TYPEER1 ANOP  ,                                                   @L2A 05029210
         MNOTE 8,'033 TYPE PARAMETER IS NOT MVS OR VM.'            @L2A 05030200
.*                                                                 @L2A 05031190
.ETYPE   ANOP  ,                                                   @L2A 05032180
.*                                                                      05033170
.********************************************************************** 05034160
.*                                                                    * 05035150
.*       Validate ID                  2 alphanumeric identifier       * 05036140
.*                                                                    * 05037130
.********************************************************************** 05038120
&L       SETA  2                             Required ID length         05039110
         AIF   ('&ID' EQ '').NOID            ID not specified           05040100
         AIF   (N'&ID GT 1).SUBID            Invalid in sublist format  05041090
         AIF   (K'&ID EQ &L).IDCHAR          Number of characters       05042080
         MNOTE 8,'032 ID PARAMETER MUST BE &L CHARACTERS.'              05043070
&ERROR   SETB  1                      Indicates error                   05044060
.IDCHAR  ANOP                                                           05045050
.*       Loop to validate each character in the ID identifier           05046040
&NDX     SETA  1                      Point to 1st character            05047030
.IDLOOP  ANOP                                                           05048020
         AIF   ('&ID'(&NDX,1) LT 'A').BADID                             05049010
         AIF   ('&ID'(&NDX,1) LE 'I').GOODID  (A-I)                     05050000
         AIF   ('&ID'(&NDX,1) LT 'J').BADID                             05050990
         AIF   ('&ID'(&NDX,1) LE 'R').GOODID  (J-R)                     05051980
         AIF   ('&ID'(&NDX,1) LT 'S').BADID                             05052970
         AIF   ('&ID'(&NDX,1) LE 'Z').GOODID  (S-Z)                     05053960
         AIF   ('&ID'(&NDX,1) LT '0').BADID                             05054950
         AIF   ('&ID'(&NDX,1) LE '9').GOODID  (0-9)                     05055940
.BADID   ANOP                         Invalid char in generic name      05056930
&CWK     SETC  '&ID'(&NDX,1)          Isolate invalid character         05057920
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN ID PARAMETER.'      05058910
&ERROR   SETB  1                      Indicates error                   05059900
.GOODID  ANOP                                                           05060890
&NDX     SETA  &NDX+1                 Points to next character          05061880
         AIF   (&NDX LE K'&ID).IDLOOP   Check next character            05062870
         AGO   .GENTEXT               Go generate text                  05063860
.SUBID   MNOTE 8,'014 ID PARAMETER MAY NOT BE A SUBLIST.'               05064850
&ERROR   SETB  1                      Indicates error                   05065840
         AGO   .GENTEXT               Go generate text                  05066830
.NOID    MNOTE 8,'002 ID KEYWORD NOT SPECIFIED.'                        05067820
&ERROR   SETB  1                      Indicates error                   05068810
.********************************************************************** 05069800
.*                                                                    * 05070790
.*       Generate internal text record                                * 05071780
.*                                                                    * 05072770
.********************************************************************** 05073760
.GENTEXT ANOP                                                           05074750
         AIF (&ERROR EQ 1 ).EXIT      Exit if error                     05075740
         DC    CL2'&ID'               Configuration identifier          05076730
         DC    XL2'0000'              Reserved                          05077720
         DC    CL32&DESCR             Description                  @M4A 05078710
         AIF   ('&NAME' EQ '').NONAME  No OS config name available @L2A 05079700
         DC    CL8'&NAME'             OS config name               @L2A 05080690
         AGO   .NDNAME                                             @L2A 05081680
.NONAME  ANOP  ,                                                   @L2A 05082670
         DC    CL8' '                 No OS config name            @L2A 05083660
.NDNAME  ANOP  ,                                                   @L2A 05084650
         DC    AL1(&OSTYPE)           OS config type               @L2A 05085640
         DC    XL7'00'                Reserved                     @L2A 05086630
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to      05087620
         MNOTE ' '                     occur if NOGEN specified         05088610
         MEND                                                           05089600
*/*==================================================================*/ 05090590
*/*==================================================================*/ 05091580
         TITLE 'HCD MACRO LISTING - IODEVICE - IO DEVICE DEFINITION'    05092570
         MACRO  --  PARSE IODEVICE STATEMENT                            05093560
&SYMBOL  IODEVICE &ADAPTER=,&ADDRESS=,&AP=,&CUNUMBR=,&DEVNUMBR=,       *05094550
               &DEVTYPE=,&ERRTAB=,&EXPBFR=,&FEATURE=,&MODEL=,          *05095540
               &NUMSECT=,&OBRCNT=,&OFFLINE=,&OPTCHAN=,                 *05096530
               &PATH=,&PCU=,&SETADDR=,&STADET=,                        *05097520
               &TCU=,&TIMEOUT=,&UNIT=,&UNITADD=,&DYNAMIC=,         @LBC*05098510
               &PARTITION=,&PART=,&NOTPART=,&DESC=,&SERIAL=,       @N6C*05099500
               &LOCANY=,&USERPRM=,&VOLSER=,&OWNER=                 @L2C 05100490
.*                                                                      05101480
         AGO   .SKIP                                                    05102470
*/********************************************************************/ 05103460
*/*                                                                  */ 05104450
*/*01*  MACRO NAME = IODEVICE                                        */ 05105440
*/*                                                                  */ 05106430
*/*01*  DESCRIPTIVE NAME = I/O Device characteristics.               */ 05107420
*/*                                                                  */ 05108410
*/*01*  MACRO CALL =                                                 */ 05109400
*/*       LABEL IODEVICE  ADAPTER= adapter                           */ 05110390
*/*                       ADDRESS= (number<,count>)                  */ 05111380
*/*                       AP=      NOT PARSED                        */ 05112370
*/*                       CUNUMBR= number | (number<,number>...)     */ 05113360
*/*                       DESC=    'description'                 @N3A*/ 05114350
*/*                       DEVNUMBR= number                           */ 05115340
*/*                       DEVTYPE= NOT PARSED                        */ 05116330
*/*                       DYNAMIC= NO | YES   (NO = DEFAULT)         */ 05117320
*/*                       ERRTAB=  NOT PARSED                        */ 05118310
*/*                       EXPBFR=  NOT PARSED                        */ 05119300
*/*                       FEATURE= name | (name<,name>...)           */ 05120290
*/*                       LOCANY=  NO | YES                      @N6A*/ 05121280
*/*                       MODEL=   model number                      */ 05122270
*/*                       NUMSECT= number of 256 byte buffer sections*/ 05123260
*/*                       OBRCNT=  NOT PARSED                        */ 05124250
*/*                       OFFLINE= NO | YES   (NO = default)         */ 05125240
*/*                       OPTCHAN= NOT PARSED                        */ 05126230
*/*                       OWNER=   Device owner                  @L2A*/ 05127220
*/*                       PATH=    chpid                             */ 05128210
*/*                       PCU=     physical control unit             */ 05129200
*/*                       SERIAL=  serial number                 @N3A*/ 05130190
*/*                       SETADDR= set address command indicator     */ 05131180
*/*                       STADET=  Y | N                             */ 05132170
*/*                       TCU=     transmission control unit         */ 05133160
*/*                       TIMEOUT= Y | N                             */ 05134150
*/*                       UNIT=    device type                       */ 05135140
*/*                       UNITADD= number                            */ 05136130
*/*                       USERPRM= list of (parm id,parm val)    @M4A*/ 05137120
*/*                       PARTITION= partition | (partition,...)  or */ 05138110
*/*                       PART= partition | (partition,partition,..) */ 05139100
*/*                       NOTPART= partition | (partition,...)   @LTA*/ 05140090
*/*                       VOLSER=  volume serial number          @C3A*/ 05141080
*/*                                                                  */ 05142070
*/*01*  FUNCTION = Describes:                                        */ 05143060
*/*              - The I/O device address/number                     */ 05144050
*/*              - The device characteristics                        */ 05145040
*/*              - The control units to which the device is assigned */ 05146030
*/*              - The partitions that have access to the device     */ 05147020
*/*                                                                  */ 05148010
*/*01*  NOTES =  A device may be attached to a maximum of eight      */ 05149000
*/*              control units.                                      */ 05149990
*/*              A maximum of 64 partitions can be specified having  */ 05150980
*/*              access to the device.                               */ 05151970
*/*                                                                  */ 05152960
*/*              The IOCP-only keywords are flagged independently    */ 05153950
*/*              of those recognized by the UIMs.                    */ 05154940
*/*                                                                  */ 05155930
*/*02*    DEPENDENCIES = None.                                       */ 05156920
*/*                                                                  */ 05157910
*/*01*  INPUT =   ADAPTER= 1 to 5 characters                         */ 05158900
*/*             # ADDRESS= device number and optional count          */ 05159890
*/*                        (replication factor) of multiple device   */ 05160880
*/*                        numbers.                                  */ 05161870
*/*               AP=      NOT PARSED                                */ 05162860
*/*             @ CUNUMBR= 1-4 Hex digit control unit number, or *** */ 05163850
*/*               DESC=    string of 0 to 32 EBCDIC characters   @N3A*/ 05164840
*/*             @ DEVNUMBR= 4 Hex digit device number                */ 05165830
*/*               DEVTYPE= NOT PARSED                                */ 05166820
*/*               DYNAMIC= NO | YES   (NO = DEFAULT)                 */ 05167810
*/*               ERRTAB=  NOT PARSED                                */ 05168800
*/*               EXPBFR=  NOT PARSED                                */ 05169790
*/*               FEATURE= feature name list (1 - 10 characters)     */ 05170780
*/*               LOCANY=  NO | YES                              @N6A*/ 05171770
*/*               MODEL=   1 to 4 Characters                         */ 05172760
*/*               NUMSECT= buffer sections. Decimal digit (0 - 4095) */ 05173750
*/*               OBRCNT=  NOT PARSED                                */ 05174740
*/*               OFFLINE= NO | YES   (NO = default)                 */ 05175730
*/*               OPTCHAN= NOT PARSED                                */ 05176720
*/*               OWNER=   Device owner (1 to 8 alphanum chars)  @L2A*/ 05177710
*/*             @ PATH=    preferred channel path id                 */ 05178700
*/*               PCU=     pcu id. Decimal digit (1 - 4095)          */ 05179690
*/*               SERIAL=  1 to 10 characters                    @N3A*/ 05180680
*/*               SETADDR= 0 to 3                                    */ 05181670
*/*             @ STADET=  Y | N                                     */ 05182660
*/*               USERPRM= list of user parameters (id,value)    @M4A*/ 05183650
*/*               TCU=     4 digit identifier                        */ 05184640
*/*             @ TIMEOUT= Y | N                                     */ 05185630
*/*             # UNIT=    8 character unit type(name).              */ 05186620
*/*             @ UNITADD= 2 Hex digit unit address                  */ 05187610
*/*             @ PARTITION= 1 to 8 characters                   @LBA*/ 05188600
*/*             @ NOTPART= 1 to 8 characters                     @LTA*/ 05189590
*/*               VOLSER=  1 to 6 characters                     @C3A*/ 05190580
*/*                                                                  */ 05191570
*/*             # - Required keyword                                 */ 05192560
*/*             @ - For IOCP only                                    */ 05193550
*/*                                                                  */ 05194540
*/*01*  OUTPUT = Internal text                                       */ 05195530
*/*                                                                  */ 05196520
*/********************************************************************/ 05197510
*/*                                                                     05198500
.*                                                                      05199490
.SKIP    ANOP                                                           05200480
         GBLA  &SYSITRN               HCD statement number              05201470
         GBLA  &$STRLEN               String length                     05202460
         GBLB  &$ERR                  Global error flag            @LBA 05203450
         GBLB  &INTERR                Internal error flag          @L2A 05204440
         LCLA  &AWK                   Arithmetic work variable          05205430
         LCLA  &CUASTRK               Count of CUNUMBR=***              05206420
         LCLA  &PFLAG                 PARAMETER FLAGS                   05207410
         LCLA  &FLAG1                 Flag byte 1 variable              05208400
         LCLA  &ADAF,&ADDF,&FEAF      Operand flags                     05209390
         LCLA  &MODF,&NUMF,&OFFF      Operand flags                     05210380
         LCLA  &FLAG2                 Flag byte 2 variable              05211370
         LCLA  &PCUF,&SETF,&TCUF,&UNIF  Operand flags                   05212360
         LCLA  &IOCPF1                Flag for IOCP-only keywords       05213350
         LCLA  &IOCPF2                Flag2 for IOCP-only keywords @LTA 05214340
         LCLA  &CUNF,&PATF,&STAF,&TIMF  Operand flags                   05215330
         LCLA  &UNAF,&DEVF              Operand flags                   05216320
         LCLA  &L                     Maximum or req'd operand length   05217310
         LCLA  &MAXSUB                Maximum number of sublist entries 05218300
         LCLA  &MAXVAL                Maximum value of operand          05219290
         LCLA  &NDX                   Substring index                   05220280
         LCLA  &NUSRP                 Number of user parameters    @M4A 05221270
         LCLA  &SUB                   Sublist element number            05222260
         LCLA  &PACT                  Number of entries in partition   *05223250
                                      list                         @LBA 05224240
         LCLA  &UPRMVLN(32)           Parameter value length       @M4A 05225230
         LCLA  &UPRMVCT(32)           Parameter value count        @M4A 05226220
         LCLA  &XLEN                  Length of parm extension area@M4A 05227210
         LCLB  &ERROR                 Error flag                        05228200
         LCLB  &UNIADF                UNITADD occurance flag            05229190
         LCLC  &CNO                   EBCDIC version of SYSITRN         05230180
         LCLC  &CWK                   Character work variable           05231170
         LCLC  &DESCR                 Description work area        @N3A 05232160
         LCLC  &DSC                   Description work area        @M5A 05233150
         LCLC  &SERR                  Serial number work area      @M5A 05234140
         LCLC  &VOLS                  Volser number work area      @L2A 05235130
         LCLC  &PA(64)                Partition list               @LBA 05236120
         LCLC  &UPRMID(32)            Parameter id                 @M4A 05237110
         LCLC  &UPRMVAL(256)          Parameter values             @M4A 05238100
         ACTR  10000                  Set for infinite loop control     05239090
.*                                    NOTE: The operand flags need to   05240080
.*                                     be kept contiguous for scanning  05241070
.*                                    PARAMETER FLAG BYTE SETTINGS      05242060
&OFFY    SETA  128                     OFFLINE=YES SPECIFIED            05243050
&DYNAY   SETA   64                     DYNAMIC=YES SPECIFIED            05244040
&LOCAY   SETA   32                     LOCANY=YES SPECIFIED        @N6A 05245030
.*                                    Flag byte 1 settings              05246020
&ADAF    SETA  128                     ADAPTER specified - FLAG1        05247010
&ADDF    SETA   64                     ADDRESS specified - FLAG1        05248000
&FEAF    SETA   16                     FEATUREs specified - FLAG1       05248990
&MODF    SETA    4                     MODEL specified - FLAG1          05249980
&NUMF    SETA    2                     NUMSECT specified - FLAG1        05250970
&OFFF    SETA    1                     OFFLINE SPECIFIED - FLAG1        05251960
.*                                    Flag byte 2 settings              05252950
&PCUF    SETA  128                     PCU specified - FLAG2            05253940
&SETF    SETA   64                     SETADDR specified - FLAG2        05254930
&TCUF    SETA   32                     TCU specified - FLAG2            05255920
&UNIF    SETA   16                     UNIT specified - FLAG2           05256910
&DYNA    SETA    8                     DYNAMIC SPECIFIED - FLAG2        05257900
&OWNR    SETA    4                     OWNER   SPECIFIED - FLAG2   @L2A 05258890
&LOCA    SETA    2                     LOCANY SPECIFIED - FLAG2    @N6A 05259880
.*                                    IOCP Flag byte settings           05260870
&CUNF    SETA  128                     CUNUMBR specified - IOCPF1       05261860
&PATF    SETA   64                     PATH specified - IOCPF1          05262850
&STAF    SETA   32                     STADET=N specified - IOCPF1      05263840
&TIMF    SETA   16                     TIMEOUT=N specified - IOCPF1     05264830
&UNAF    SETA    8                     UNITADD specified - IOCPF1       05265820
&DEVF    SETA    4                     DEVNUMBR specified - IOCPF1      05266810
&STYF    SETA    2                     STADET=Y specified - IOCPF1      05267800
&TMYF    SETA    1                     TIMEOUT=Y specified - IOCPF1     05268790
.*                                    IOCP Flag byte 2 settings    @LTA 05269780
&PARF    SETA  128                     PARTITION specified- IOCPF2 @LTA 05270770
&NPAF    SETA   64                     NOTPART specified - IOCPF2  @LTA 05271760
&SYMBOL  TXTHDR IODEVICE              Build header for IODEVICE record  05272750
.*                                                                      05273740
.********************************************************************** 05274730
.*                                                                    * 05275720
.*       Check if unrecognized parameters are specified               * 05276710
.*                                                                    * 05277700
.********************************************************************** 05278690
         AIF   (N'&SYSLIST EQ 0).XPOS50    No positional parameter @P3A 05279680
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @P3A 05280670
&ERROR   SETB  1                  Indicate error                   @P3A 05281660
         AGO   .XPOS50            and continue                     @P3A 05282650
.*                                                                      05283640
.XPOS50  ANOP  ,                                                   @P3A 05284630
.********************************************************************** 05285620
.*                                                                    * 05286610
.*       Validate ADAPTER             1 - 5 characters                * 05287600
.*                                                                    * 05288590
.********************************************************************** 05289580
&L       SETA  5                      Maximum ADAPTER length            05290570
         AIF   ('&ADAPTER' EQ '').CKADDR ADAPTER not specified          05291560
&FLAG1   SETA  &FLAG1+&ADAF           Indicate ADAPTER specified        05292550
         AIF   (N'&ADAPTER GT 1).ADASUB    ADAPTER is in sublist format 05293540
         AIF   (K'&ADAPTER LE &L).ADALEN   Number of characters         05294530
         MNOTE 8,'033 ADAPTER PARAMETER EXCEEDS &L CHARACTERS.'         05295520
&ERROR   SETB  1                      Indicates error                   05296510
.ADALEN  ANOP                                                           05297500
&NDX     SETA  1                      Points to 1st chara of ADAPTER    05298490
.*                                                                      05299480
.*       Loop to validate each character in ADAPTER                     05300470
.ADALOOP ANOP                                                           05301460
         AIF   ('&ADAPTER'(&NDX,1) LT 'A').ADLOOPD  Special character   05302450
         AIF   ('&ADAPTER'(&NDX,1) LE 'I').GOODADA  Valid char (A-I)    05303440
         AIF   ('&ADAPTER'(&NDX,1) LT 'J').BADADA                       05304430
         AIF   ('&ADAPTER'(&NDX,1) LE 'R').GOODADA  Valid char (J-R)    05305420
         AIF   ('&ADAPTER'(&NDX,1) LT 'S').BADADA                       05306410
         AIF   ('&ADAPTER'(&NDX,1) LE 'Z').GOODADA  Valid char (S-Z)    05307400
         AIF   ('&ADAPTER'(&NDX,1) LT '0').BADADA                       05308390
         AIF   ('&ADAPTER'(&NDX,1) LE '9').GOODADA  Valid digit (0-9)   05309380
.ADLOOPD ANOP                                                           05310370
         AIF   ('&ADAPTER'(&NDX,1) EQ '-').GOODADA  Good character (-)  05311360
.BADADA  ANOP                         Invalid character                 05312350
&CWK     SETC  '&ADAPTER'(&NDX,1)     Isolate invalid character         05313340
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN ADAPTER PARAMETER.' 05314330
&ERROR   SETB  1                      Indicates error                   05315320
.GOODADA ANOP                                                           05316310
&NDX     SETA  &NDX+1                 Point to next digit               05317300
         AIF   (&NDX LE K'&ADAPTER).ADALOOP Check next digit            05318290
         AGO   .CKADDR                Check ADDRESS keyword             05319280
.ADASUB  MNOTE 8,'014 ADAPTER PARAMETER MAY NOT BE A SUBLIST.'          05320270
&ERROR   SETB  1                      Indicates error                   05321260
.********************************************************************** 05322250
.*                                                                    * 05323240
.*       Validate ADDRESS             (number,count)                  * 05324230
.*                                                                    * 05325220
.********************************************************************** 05326210
.CKADDR  ANOP                                                           05327200
&L       SETA  4                         Max. device number length      05328190
         AIF   ('&ADDRESS' EQ '').NOADDR ADDRESS not specified          05329180
&FLAG1   SETA  &FLAG1+&ADDF               Indicate ADDRESS specified    05330170
         AIF   (N'&ADDRESS GT 2).ADOPER   Too many operands for ADDRESS 05331160
         AIF   ('&ADDRESS(1)' EQ '').NODEVNO  No device number          05332150
         AIF   (K'&ADDRESS(1) EQ &L ).DNLEN    Number of digits         05333140
         AIF   (K'&ADDRESS(1) EQ &L-1 ).DNLEN  Number of digits         05334130
&AWK     SETA  &L-1                                                     05335120
         MNOTE 8,'022 ADDRESS PARAMETER DEVICE NUMBER SUBLIST ENTRY MUS*05336110
               T BE &AWK OR &L DIGITS.'                                 05337100
&ERROR   SETB  1                      Indicates error                   05338090
.DNLEN   ANOP                                                           05339080
&NDX     SETA  1                      Points to 1st digit of device no  05340070
.*                                                                      05341060
.*       Loop to validate each digit in the device number (address)     05342050
.DNLOOP  ANOP                                                           05343040
         AIF   ('&ADDRESS(1)'(&NDX,1) LT 'A').BADDN   Non-hex digit     05344030
         AIF   ('&ADDRESS(1)'(&NDX,1) LE 'F').GOODDN  Good digit (A-F)  05345020
         AIF   ('&ADDRESS(1)'(&NDX,1) LT '0').BADDN   Non-hex digit     05346010
         AIF   ('&ADDRESS(1)'(&NDX,1) LE '9').GOODDN  Good digit (0-9)  05347000
.BADDN   ANOP                         Invalid HEX digit                 05347990
&CWK     SETC  '&ADDRESS(1)'(&NDX,1)  Isolate invalid digit             05348980
         MNOTE 8,'021 INVALID HEX DIGIT ''&CWK'' IN DEVICE NUMBER SUBLI*05349970
               ST ENTRY FOR ADDRESS PARAMETER.'                         05350960
&ERROR   SETB  1                      Indicates error                   05351950
.GOODDN  ANOP                                                           05352940
&NDX     SETA  &NDX+1                 Points to next digit in device no 05353930
         AIF   (&NDX LE K'&ADDRESS(1)).DNLOOP  Check next digit         05354920
         AGO   .CKACNT                Go check replication factor       05355910
.NODEVNO MNOTE 8,'017 DEVICE NUMBER REQUIRED IN SUBLIST ENTRY FOR ADDRE*05356900
               SS PARAMETER.'                                           05357890
&ERROR   SETB  1                      Indicates error                   05358880
.********************************************************************** 05359870
.*                                    Validate replication factor     * 05360860
.********************************************************************** 05361850
.CKACNT  ANOP                                                           05362840
&L       SETA  4                      Maximum replication factor length 05363830
.*                                                                      05364820
&MAXVAL  SETA  4095                   Maximum replication factor        05365810
         AIF   ('&ADDRESS(2)' EQ '').CKAP     Count not specified       05366800
         AIF   (K'&ADDRESS(2) LE &L ).DCLEN    Number of digits         05367790
         MNOTE 8,'023 ADDRESS PARAMETER REPLICATION FACTOR SUBLIST ENTR*05368780
               Y EXCEEDS &L DIGITS.'                                    05369770
&ERROR   SETB  1                      Indicates error                   05370760
.DCLEN   ANOP                                                           05371750
&NDX     SETA  1                      Points to 1st digit of device cnt 05372740
         AIF   ('&ADDRESS(2)' LT '1').NOTZERO Invalid if less than 1    05373730
.*                                                                      05374720
.*       Loop to validate each digit in the replication factor          05375710
.DCLOOP  ANOP                                                           05376700
         AIF   ('&ADDRESS(2)'(&NDX,1) LT '0').BADDC   Not decimal       05377690
         AIF   ('&ADDRESS(2)'(&NDX,1) LE '9').GOODDC  Good digit (0-9)  05378680
.BADDC   ANOP                         Invalid DECIMAL digit             05379670
&CWK     SETC  '&ADDRESS(2)'(&NDX,1)  Isolate invalid digit             05380660
         MNOTE 8,'021 INVALID DECIMAL DIGIT ''&CWK'' IN REPLICATION FAC*05381650
               TOR SUBLIST ENTRY FOR ADDRESS PARAMETER.'                05382640
&ERROR   SETB  1                      Indicates error                   05383630
&AWK     SETA  1                      Indicate invalid digit            05384620
.GOODDC  ANOP                                                           05385610
&NDX     SETA  &NDX+1                 Points to next digit in dev cnt   05386600
         AIF   (&NDX LE K'&ADDRESS(2)).DCLOOP  Check next digit         05387590
         AIF   (&AWK EQ 1).CKAP       AP not specified                  05388580
         AIF   (&ADDRESS(2) GE 1 AND &ADDRESS(2) LE &MAXVAL).CKAP       05389570
.*                                                                      05390560
         MNOTE 8,'042 ADDRESS PARAMETER REPLICATION FACTOR VALUE MUST B*05391550
               E A NUMBER FROM 1 TO &MAXVAL.'                           05392540
&ERROR   SETB  1                      Indicates error                   05393530
         AGO   .CKAP                  Check next keyword                05394520
.NOTZERO MNOTE 8,'041 ADDRESS PARAMETER REPLICATION FACTOR VALUE MUST B*05395510
               E GREATER THAN 0.'                                       05396500
&ERROR   SETB  1                      Indicates error                   05397490
         AGO   .CKAP                  Check next keyword                05398480
.*                                                                      05399470
.ADOPER  MNOTE 8,'015 ADDRESS PARAMETER EXCEEDS 2 SUBLIST ENTRIES.'     05400460
&ERROR   SETB  1                      Indicates error                   05401450
         AGO   .CKAP                  Check next keyword                05402440
.NOADDR  MNOTE 8,'002 ADDRESS KEYWORD NOT SPECIFIED.'                   05403430
&ERROR   SETB  1                      Indicates error                   05404420
.********************************************************************** 05405410
.*                                                                    * 05406400
.*       Validate AP                  NO | YES  --- NOT PARSED ---    * 05407390
.*                                                                    * 05408380
.********************************************************************** 05409370
.CKAP    ANOP                                                           05410360
         AIF   ('&AP' EQ '').CKCUNUM       AP not specified             05411350
         MNOTE *,'  *,005 AP KEYWORD IGNORED.'                          05412340
.********************************************************************** 05413330
.*                                                                    * 05414320
.*       Validate CUNUMBR             1 to 8 control unit numbers,    * 05415310
.*                                      1 - 4 Hex digits each or **** * 05416300
.*         Ignores CUNUMBR=****                                       * 05417290
.*                                                                    * 05418280
.********************************************************************** 05419270
.CKCUNUM ANOP                                                           05420260
&MAXSUB  SETA  8                      Maximum number of CUNUMBR's       05421250
&L       SETA  4                      Maximum CUNUMBR length            05422240
         AIF   ('&CUNUMBR' EQ '').CKTYPE    CUNUMBR not specified       05423230
&IOCPF1  SETA &IOCPF1+&CUNF           Indicate CUNUMBR specified        05424220
         AIF  (N'&CUNUMBR LE &MAXSUB).CUSUBLE   Number of sublists      05425210
         MNOTE 8,'015 CUNUMBR PARAMETER EXCEEDS &MAXSUB SUBLIST ENTRIES*05426200
               .'                                                       05427190
&ERROR   SETB 1                       Indicate error                    05428180
.CUSUBLE ANOP                                                           05429170
&SUB     SETA 1                                                         05430160
.********************************************************************** 05431150
.*       Loop to validate each sublist entry                          * 05432140
.********************************************************************** 05433130
.CULOOP  ANOP                                                           05434120
         AIF   ('&CUNUMBR(&SUB)' EQ '').CUNULL Null sublist entry       05435110
         AIF   (K'&CUNUMBR(&SUB) LE &L).CUNLEN  Number of digits        05436100
         MNOTE 8,'023 CUNUMBR PARAMETER SUBLIST ENTRY &SUB EXCEEDS &L D*05437090
               IGITS.'                                                  05438080
&ERROR   SETB 1                       Indicate error                    05439070
.CUNLEN  ANOP                                                           05440060
&AWK     SETA  K'&CUNUMBR(&SUB)       Actual number of digits in number 05441050
&NDX     SETA  1                      Points to 1st digit of cu number  05442040
.*                                                                      05443030
.*       Loop to validate each character in the control unit number     05444020
.CULOOPB ANOP                                                           05445010
         AIF   ('&CUNUMBR(&SUB)'(&NDX,1) LT 'A').CUSTRSK Special        05446000
         AIF   ('&CUNUMBR(&SUB)'(&NDX,1) LE 'F').GOODCU  Good  (A-F)    05446990
         AIF   ('&CUNUMBR(&SUB)'(&NDX,1) LT '0').BADCU   Bad char       05447980
         AIF   ('&CUNUMBR(&SUB)'(&NDX,1) LE '9').GOODCU  Good  (0-9)    05448970
.CUSTRSK AIF   ('&CUNUMBR(&SUB)'(1,&AWK) NE '****'(1,&AWK)).BADCU       05449960
&CUASTRK SETA  &CUASTRK+1             Increment count of asterisk sets  05450950
&NDX     SETA  &NDX+&AWK-1            Points to last asterisk           05451940
         AGO  .GOODCU                 Continue                          05452930
.BADCU   ANOP                           Invalid HEX digit               05453920
&CWK     SETC  '&CUNUMBR(&SUB)'(&NDX,1)  Isolate invalid digit          05454910
         MNOTE 8,'021 INVALID HEX DIGIT ''&CWK'' IN SUBLIST ENTRY &SUB *05455900
               FOR CUNUMBR PARAMETER.'                                  05456890
&ERROR   SETB  1                      Indicates error                   05457880
.GOODCU  ANOP                                                           05458870
&NDX     SETA  &NDX+1                 Point to next digit               05459860
         AIF   (&NDX LE K'&CUNUMBR(&SUB)).CULOOPB  Check next digit     05460850
         AGO  .NXTCUNM                Process next CUNUMBR number       05461840
.CUNULL  MNOTE 8,'018 CUNUMBR SUBLIST ENTRY &SUB IS MISSING.'           05462830
&ERROR   SETB 1                       Indicate error                    05463820
.*                                                                      05464810
.NXTCUNM ANOP                         Next control unit number          05465800
&SUB     SETA &SUB+1                  Point to next sublist entry       05466790
         AIF  (&SUB LE N'&CUNUMBR).CULOOP  More CUNUMBR id's ...        05467780
.********************************************************************** 05468770
.*                                                                    * 05469760
.*       Validate DEVTYPE             8 Hex digits --- NOT PARSED --- * 05470750
.*                                                                    * 05471740
.********************************************************************** 05472730
.CKTYPE  ANOP                                                           05473720
         AIF   ('&DEVTYPE' EQ '').CKDYN    DEVTYPE NOT SPECIFIED        05474710
         MNOTE 0,'004 DEVTYPE KEYWORD IGNORED. IT IS NOT SUPPORTED BY T*05475700
               HE HCD.'                                                 05476690
.********************************************************************** 05477680
.*                                                                    * 05478670
.*       VALIDATE DYNAMIC             NO | YES                        * 05479660
.*                                                                    * 05480650
.********************************************************************** 05481640
.CKDYN   ANOP                                                           05482630
         AIF   ('&DYNAMIC' EQ '').CKERR    DYNAMIC NOT SPECIFIED        05483620
&FLAG2   SETA  &FLAG2+&DYNA           INDICATE DYNAMIC SPECIFIED        05484610
.CKDYN1  ANOP                                                           05485600
         AIF   ('&DYNAMIC' EQ 'NO').CKERR   DEFAULT (NO) SPECIFIED      05486590
         AIF   ('&DYNAMIC' EQ 'N').CKERR    DEFAULT (NO) SPECIFIED      05487580
         AIF   ('&DYNAMIC' EQ 'YES').CKDYN2 VALID DYNAMIC OPERAND       05488570
         AIF   ('&DYNAMIC' EQ 'Y').CKDYN2   VALID DYNAMIC OPERAND       05489560
         MNOTE 8,'043 DYNAMIC VALUE MUST BE YES, Y, NO OR N.'           05490550
&ERROR   SETB  1                      INDICATES ERROR                   05491540
         AGO   .CKERR                 CHECK NEXT KEYWORD                05492530
.CKDYN2  ANOP                                                           05493520
&PFLAG   SETA  &PFLAG+&DYNAY          INDICATE DYNAMIC=YES SPECIFIED    05494510
.********************************************************************** 05495500
.*                                                                    * 05496490
.*       Validate ERRTAB              Decimal number from 0 to 254    * 05497480
.*                                     --- NOT PARSED ---             * 05498470
.*                                                                    * 05499460
.********************************************************************** 05500450
.CKERR   ANOP                                                           05501440
         AIF   ('&ERRTAB' EQ '').CKEXP  ERRTAB not specified            05502430
         MNOTE 0,'004 ERRTAB KEYWORD IGNORED. IT IS NOT SUPPORTED BY TH*05503420
               E HCD.'                                                  05504410
.********************************************************************** 05505400
.*                                                                    * 05506390
.*       Validate EXPBFR              Decimal number from 1 to 8192   * 05507380
.*                                     --- NOT PARSED ---             * 05508370
.*                                                                    * 05509360
.********************************************************************** 05510350
.CKEXP   ANOP                                                           05511340
         AIF   ('&EXPBFR' EQ '').ECKEXP EXPBFR not specified      @N6C  05512330
         MNOTE 0,'004 EXPBFR KEYWORD IGNORED. IT IS NOT SUPPORTED BY TH*05513320
               E HCD.'                                                  05514310
.ECKEXP  ANOP  ,                                                   @N6A 05515300
.********************************************************************** 05516290
.*                                                                    * 05517280
.*       VALIDATE LOCANY              NO | YES                    @N6A* 05518270
.*                                                                    * 05519260
.********************************************************************** 05520250
.CKLOC   ANOP                                                      @N6A 05521240
         AIF   ('&LOCANY' EQ '').ECKLOC    LOCANY NOT SPECIFIED    @N6A 05522230
&FLAG2   SETA  &FLAG2+&LOCA           INDICATE LOCANY SPECIFIED    @N6A 05523220
.CKLOC1  ANOP                                                      @N6A 05524210
         AIF   ('&LOCANY' EQ 'NO').ECKLOC   DEFAULT (NO) SPECIFIED @N6A 05525200
         AIF   ('&LOCANY' EQ 'N').ECKLOC    DEFAULT (NO) SPECIFIED @N6A 05526190
         AIF   ('&LOCANY' EQ 'YES').CKLOC2  VALID LOCANY OPERAND   @N6A 05527180
         AIF   ('&LOCANY' EQ 'Y').CKLOC2    VALID LOCANY OPERAND   @N6A 05528170
         MNOTE 8,'043 LOCANY VALUE MUST BE YES, Y, NO OR N.'       @N6A 05529160
&ERROR   SETB  1                      INDICATES ERROR              @N6A 05530150
         AGO   .ECKLOC                CHECK NEXT KEYWORD           @N6A 05531140
.CKLOC2  ANOP                                                      @N6A 05532130
&PFLAG   SETA  &PFLAG+&LOCAY         INDICATE LOCANY=YES SPECIFIED @N6A 05533120
.ECKLOC  ANOP                                                      @N6A 05534110
.********************************************************************** 05535100
.*                                                                    * 05536090
.*       Validate FEATURE             1 - 10 characters               * 05537080
.*                                                                    * 05538070
.********************************************************************** 05539060
.CKFEAT  ANOP                                                           05540050
&L       SETA  10                     Maximum FEATURE length            05541040
         AIF   ('&FEATURE' EQ '').CKMOD  FEATURE not specified          05542030
&FLAG1   SETA  &FLAG1+&FEAF           Indicate FEATURE specified        05543020
&SUB     SETA  1                                                        05544010
.*                                                                      05545000
.*       Loop to check each element in the FEATURE sublist              05545990
.FELOOP  ANOP                                                           05546980
         AIF   ('&FEATURE(&SUB)' EQ '').FENULL  Null sublist entry      05547970
         AIF (K'&FEATURE(&SUB) LE &L).NEXTFEA    Number of characters   05548960
         MNOTE 8,'033 FEATURE PARAMETER SUBLIST ENTRY &SUB EXCEEDS &L C*05549950
               HARACTERS.'                                              05550940
&ERROR   SETB  1                      Indicates error                   05551930
         AGO   .NEXTFEA               Process next entry in sublist     05552920
.FENULL  MNOTE 8,'018 FEATURE SUBLIST ENTRY &SUB IS MISSING.'           05553910
&ERROR   SETB  1                      Indicates error                   05554900
.NEXTFEA ANOP                         Process next FEATURE              05555890
&SUB     SETA  &SUB+1                 Points to next sublist entry      05556880
         AIF   (&SUB LE N'&FEATURE).FELOOP  Another FEATURE left        05557870
.********************************************************************** 05558860
.*                                                                    * 05559850
.*       Validate MODEL               1 - 4 characters                * 05560840
.*                                                                    * 05561830
.********************************************************************** 05562820
.CKMOD   ANOP                                                           05563810
&L       SETA  4                      Maximum MODEL length              05564800
         AIF   ('&MODEL' EQ '').CKNUM  MODEL not specified              05565790
&FLAG1   SETA  &FLAG1+&MODF             Indicate MODEL specified        05566780
         AIF   (N'&MODEL GT 1).SUBMOD   MODEL is in sublist format      05567770
         AIF   (K'&MODEL LE &L).MODCHAR MAXIMUM NUMBER OF CHARACTERS    05568760
         MNOTE 8,'033 MODEL PARAMETER EXCEEDS &L CHARACTERS.'           05569750
&ERROR   SETB  1                        Indicates error                 05570740
         AGO   .CKNUM                   Check NUMSECT keyword           05571730
.SUBMOD  MNOTE 8,'014 MODEL PARAMETER MAY NOT BE A SUBLIST.'            05572720
&ERROR   SETB  1                        Indicates error                 05573710
         AGO   .CKNUM                   Check NUMSECT keyword           05574700
.MODCHAR ANOP                                                           05575690
&NDX     SETA  1                      Point to 1st character            05576680
.*                                                                      05577670
.*       LOOP TO VALIDATE EACH CHARACTER IN THE MODEL                   05578660
.MODLOOP ANOP                                                           05579650
         AIF   ('&MODEL'(&NDX,1) EQ '@').GOODMOD  (@)              @H4A 05580640
         AIF   ('&MODEL'(&NDX,1) EQ '#').GOODMOD  (#)              @H4A 05581630
         AIF   ('&MODEL'(&NDX,1) EQ '$').GOODMOD  ($)              @H4A 05582620
         AIF   ('&MODEL'(&NDX,1) LT 'A').BADMOD                         05583610
         AIF   ('&MODEL'(&NDX,1) LE 'I').GOODMOD  (A-I)                 05584600
         AIF   ('&MODEL'(&NDX,1) LT 'J').BADMOD                         05585590
         AIF   ('&MODEL'(&NDX,1) LE 'R').GOODMOD  (J-R)                 05586580
         AIF   ('&MODEL'(&NDX,1) LT 'S').BADMOD                         05587570
         AIF   ('&MODEL'(&NDX,1) LE 'Z').GOODMOD  (S-Z)                 05588560
         AIF   ('&MODEL'(&NDX,1) LT '0').BADMOD                         05589550
         AIF   ('&MODEL'(&NDX,1) LE '9').GOODMOD   (0-9)                05590540
.BADMOD  ANOP                         INVALID CHARACTER                 05591530
&CWK     SETC  '&MODEL'(&NDX,1)        Isolate invalid character        05592520
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN MODEL PARAMETER.'   05593510
&ERROR   SETB  1                      Indicates error                   05594500
.GOODMOD ANOP                                                           05595490
&NDX     SETA  &NDX+1                 POINTS TO NEXT CHARACTER OF MODEL 05596480
         AIF   (&NDX LE K'&MODEL).MODLOOP    CHECK NEXT CHARACTER       05597470
.********************************************************************** 05598460
.*                                                                    * 05599450
.*       Validate NUMSECT             1 - 4 Decimal digits            * 05600440
.*                                    Range: 0 - 4095                 * 05601430
.*                                                                    * 05602420
.********************************************************************** 05603410
.CKNUM   ANOP                                                           05604400
&L       SETA  4                      Maximum NUMSECT length            05605390
&MAXVAL  SETA  4095                   Maximum NUMSECT value             05606380
         AIF   ('&NUMSECT' EQ '').CKOBR  NUMSECT not specified          05607370
&FLAG1   SETA  &FLAG1+&NUMF           Indicate NUMSECT specified        05608360
         AIF   (N'&NUMSECT GT 1).SUBNUM   NUMSECT is in sublist format  05609350
         AIF   (K'&NUMSECT LE &L).NUMLEN  Number of digits              05610340
         MNOTE 8,'023 NUMSECT PARAMETER EXCEEDS &L DIGITS.'             05611330
&ERROR   SETB  1                      Indicates error                   05612320
.NUMLEN  ANOP                                                           05613310
&NDX     SETA  1                      Points to 1st digit of NUMSECT    05614300
.*                                                                      05615290
.*       Loop to validate each character in NUMSECT                     05616280
.NUMLOOP ANOP                                                           05617270
         AIF   ('&NUMSECT'(&NDX,1) LT '0').BADNUM   Not decimal         05618260
         AIF   ('&NUMSECT'(&NDX,1) LE '9').GOODNUM  Valid digit (0-9)   05619250
.BADNUM  ANOP                         Invalid DECIMAL digit             05620240
&CWK     SETC  '&NUMSECT'(&NDX,1)     Isolate invalid digit             05621230
         MNOTE 8,'021 INVALID DECIMAL DIGIT ''&CWK'' IN NUMSECT PARAMET*05622220
               ER.'                                                     05623210
&ERROR   SETB  1                      Indicates error                   05624200
.GOODNUM ANOP                                                           05625190
&NDX     SETA  &NDX+1                 Point to next digit               05626180
         AIF   (&NDX LE K'&NUMSECT).NUMLOOP  Check next digit           05627170
.*                                                                      05628160
         AIF   (&NUMSECT GE 0 AND &NUMSECT LE &MAXVAL).CKOBR Valid @P2C 05629150
         MNOTE 8,'042 NUMSECT VALUE MUST BE A NUMBER FROM 0 TO &MAXVAL.*05630140
               '                                                   @P2C 05631130
&ERROR   SETB  1                      Indicates error                   05632120
         AGO   .CKOBR                 Check next keyword                05633110
.SUBNUM  MNOTE 8,'014 NUMSECT PARAMETER MAY NOT BE A SUBLIST.'          05634100
&ERROR   SETB  1                      Indicates error                   05635090
.********************************************************************** 05636080
.*                                                                    * 05637070
.*       Validate OBRCNT              --- NOT PARSED ---              * 05638060
.*                                                                    * 05639050
.********************************************************************** 05640040
.CKOBR   ANOP                                                           05641030
         AIF   ('&OBRCNT' EQ '').CKOFF     OBRCNT not specified         05642020
         MNOTE *,'  *,005 OBRCNT KEYWORD IGNORED.'                      05643010
.********************************************************************** 05644000
.*                                                                    * 05644990
.*       Validate OFFLINE             NO | YES                        * 05645980
.*                                                                    * 05646970
.********************************************************************** 05647960
.CKOFF   ANOP                                                           05648950
         AIF   ('&OFFLINE' EQ '').CKOPT    OFFLINE NOT SPECIFIED        05649940
&FLAG1   SETA  &FLAG1+&OFFF           Indicate OFFLINE specified        05650930
.CKOFF1  ANOP                                                           05651920
         AIF   ('&OFFLINE' EQ 'NO').CKOPT   Default (NO) specified      05652910
         AIF   ('&OFFLINE' EQ 'N').CKOPT    Default (NO) specified      05653900
         AIF   ('&OFFLINE' EQ 'YES').CKOFF2 OFFLINE=YES specified       05654890
         AIF   ('&OFFLINE' EQ 'Y').CKOFF2   OFFLINE=Y   specified       05655880
         MNOTE 8,'043 OFFLINE VALUE MUST BE YES, Y, NO or N'            05656870
&ERROR   SETB  1                      Indicates error                   05657860
         AGO   .CKOPT                 Check next keyword                05658850
.CKOFF2  ANOP                                                           05659840
&PFLAG   SETA  &PFLAG+&OFFY           INDICATE OFFLINE=YES SPECIFIED    05660830
.********************************************************************** 05661820
.*                                                                    * 05662810
.*       Validate OPTCHAN             --- NOT PARSED ---  (370 only)  * 05663800
.*                                                                    * 05664790
.********************************************************************** 05665780
.CKOPT   ANOP                                                           05666770
         AIF   ('&OPTCHAN' EQ '').CKPATH   OPTCHAN not specified        05667760
         MNOTE *,'  *,005 OPTCHAN KEYWORD IGNORED.'                     05668750
.********************************************************************** 05669740
.*                                                                    * 05670730
.*       Validate PATH                2 digit chpid number            * 05671720
.*                                                                    * 05672710
.********************************************************************** 05673700
.CKPATH  ANOP                                                           05674690
&L       SETA  2                      Required PATH length              05675680
         AIF   ('&PATH' EQ '').CKPCU   PATH not specified               05676670
&IOCPF1  SETA  &IOCPF1+&PATF          Indicate PATH specified           05677660
         AIF (N'&PATH GT 1).PASUBLE   Operand is in sublist format      05678650
         AIF (K'&PATH EQ &L).PAIDLEN  Length of chpid  (no parens)      05679640
         MNOTE 8,'022 PATH PARAMETER MUST BE &L DIGITS.'                05680630
&ERROR   SETB 1                       Indicate error                    05681620
.PAIDLEN ANOP                                                           05682610
&NDX     SETA 1                       Point to first digit              05683600
.*                                                                      05684590
.*       Loop to validate each number in the chpid id                   05685580
.PALOOP  ANOP                                                           05686570
         AIF ('&PATH'(&NDX,1) LT 'A').BADPA   Invalid digit             05687560
         AIF ('&PATH'(&NDX,1) LE 'F').GOODPA  Hex digit (A-F)           05688550
         AIF ('&PATH'(&NDX,1) LT '0').BADPA   Invalid digit             05689540
         AIF ('&PATH'(&NDX,1) LE '9').GOODPA  Hex digit (0-9)           05690530
.BADPA   ANOP                         Invalid character in path id      05691520
&CWK     SETC '&PATH'(&NDX,1)         Isolate invalid character         05692510
         MNOTE 8,'021 INVALID HEX DIGIT ''&CWK'' IN PATH PARAMETER.'    05693500
&ERROR   SETB 1                       Indicate error                    05694490
.GOODPA  ANOP                                                           05695480
&NDX     SETA  &NDX+1                 Point to next digit               05696470
         AIF (&NDX LE K'&PATH).PALOOP Check next digit                  05697460
         AGO  .CKPCU                  Check PCU keyword                 05698450
.PASUBLE MNOTE 8,'014 PATH PARAMETER MAY NOT BE A SUBLIST.'             05699440
&ERROR   SETB 1                       Indicate error                    05700430
.********************************************************************** 05701420
.*                                                                    * 05702410
.*       Validate PCU                 Decimal number from 1 to 4095   * 05703400
.*                                                                    * 05704390
.********************************************************************** 05705380
.CKPCU   ANOP                                                           05706370
&L       SETA  4                      Maximum PCU length                05707360
&MAXVAL  SETA  4095                   Maximum PCU value                 05708350
         AIF   ('&PCU' EQ '').CKSETA  PCU not specified                 05709340
&FLAG2   SETA  &FLAG2+&PCUF           Indicate PCU specified            05710330
         AIF   (N'&PCU GT 1).SUBPCU   PCU is in sublist format          05711320
         AIF   (K'&PCU LE &L).PCULEN  Number of digits                  05712310
         MNOTE 8,'023 PCU PARAMETER EXCEEDS &L DIGITS.'                 05713300
&ERROR   SETB  1                      Indicates error                   05714290
.PCULEN  ANOP                                                           05715280
&NDX     SETA  1                      Point to 1st digit                05716270
.*                                                                      05717260
.*       Loop to validate each digit in the physical control unit ID    05718250
.PCULOOP ANOP                                                           05719240
         AIF   ('&PCU'(&NDX,1) LT '0').BADPCU   Not decimal             05720230
         AIF   ('&PCU'(&NDX,1) LE '9').GOODPCU  Valid digit (0-9)       05721220
.BADPCU  ANOP                         Invalid DECIMAL digit             05722210
&CWK     SETC  '&PCU'(&NDX,1)         Isolate invalid digit             05723200
         MNOTE 8,'021 INVALID DECIMAL DIGIT ''&CWK'' IN PCU PARAMETER.' 05724190
&ERROR   SETB  1                      Indicates error                   05725180
.GOODPCU ANOP                                                           05726170
&NDX     SETA  &NDX+1                 Points to next digit in ID        05727160
         AIF   (&NDX LE K'&PCU).PCULOOP  Check next digit               05728150
         AIF   (&PCU GE 1 AND &PCU LE &MAXVAL).CKSETA Valid number      05729140
         MNOTE 8,'042 PCU VALUE MUST BE A NUMBER FROM 1 TO &MAXVAL.'    05730130
&ERROR   SETB  1                      Indicates error                   05731120
         AGO   .CKSETA                Check next keyword                05732110
.SUBPCU  MNOTE 8,'014 PCU PARAMETER MAY NOT BE A SUBLIST.'              05733100
&ERROR   SETB  1                      Indicates error                   05734090
.********************************************************************** 05735080
.*                                                                    * 05736070
.*       Validate SETADDR             Value from 0 to 3               * 05737060
.*                                                                    * 05738050
.********************************************************************** 05739040
.CKSETA  ANOP                                                           05740030
&MAXVAL  SETA  3                      Maximum SETADDR value             05741020
         AIF   ('&SETADDR' EQ '').CKSTAD   SETADDR not specified        05742010
&FLAG2   SETA  &FLAG2+&SETF           Indicate SETADDR specified        05743000
         AIF   ('&SETADDR' LT '0').BADSET   Invalid value               05743990
         AIF   (&SETADDR LE &MAXVAL).CKSTAD Valid value for SETADDR     05744980
.BADSET  MNOTE 8,'042 SETADDR VALUE MUST BE A NUMBER FROM 0 TO &MAXVAL.*05745970
               '                                                        05746960
&ERROR   SETB  1                      Indicates error                   05747950
.********************************************************************** 05748940
.*                                                                    * 05749930
.*       Validate STADET              Y | N                           * 05750920
.*                                                                    * 05751910
.********************************************************************** 05752900
.CKSTAD  ANOP                                                           05753890
         AIF   ('&STADET' EQ '').CKTCU       STADET not specified       05754880
         AIF   ('&STADET' EQ 'Y').SETSTY     STADET=Y    specified      05755870
         AIF   ('&STADET' NE 'YES').CKSTNO   check for STADET=N         05756860
         MNOTE 0,'044 STADET VALUE SHOULD BE Y OR N.'                   05757850
.SETSTY  ANOP                                                           05758840
&IOCPF1  SETA  &IOCPF1+&STYF          Indicate STADET=Y specified       05759830
         AGO   .CKTCU                 Check next keyword                05760820
.CKSTNO  ANOP                                                           05761810
         AIF   ('&STADET' EQ 'N').SETSTN   Valid STADET operand (N)     05762800
         AIF   ('&STADET' NE 'NO').STADERR Invalid STADET operand       05763790
         MNOTE 0,'044 STADET VALUE SHOULD BE Y OR N.'                   05764780
.SETSTN  ANOP                                                           05765770
&IOCPF1  SETA  &IOCPF1+&STAF          Indicate STADET=N specified       05766760
         AGO   .CKTCU                 Check next keyword                05767750
.STADERR ANOP                                                           05768740
         MNOTE 8,'044 STADET VALUE MUST BE Y OR N.'                     05769730
&ERROR   SETB  1                      Indicates error                   05770720
         AGO   .CKTCU                 Check next keyword                05771710
.********************************************************************** 05772700
.*                                                                    * 05773690
.*       Validate TCU                 4 digit identifier              * 05774680
.*                                                                    * 05775670
.********************************************************************** 05776660
.CKTCU   ANOP                                                           05777650
&L       SETA  4                      Required TCU length               05778640
         AIF   ('&TCU' EQ '').ECKTCU   TCU not specified           @L2C 05779630
&FLAG2   SETA  &FLAG2+&TCUF           Indicate TCU specified            05780620
         AIF   (N'&TCU GT 1).TCUSUB   TCU is in sublist format          05781610
         AIF   (K'&TCU LE &L).ECKTCU  Number of digits             @L2C 05782600
         MNOTE 8,'033 TCU PARAMETER EXCEEDS &L CHARACTERS.'             05783590
&ERROR   SETB  1                      Indicates error                   05784580
         AGO   .ECKTCU                Check next keyword           @L2C 05785570
.TCUSUB  MNOTE 8,'014 TCU PARAMETER MAY NOT BE A SUBLIST.'              05786560
&ERROR   SETB  1                      Indicates error                   05787550
.ECKTCU  ANOP  ,                                                   @L2A 05788540
.*                                                                      05789530
.********************************************************************** 05790520
.*                                                                    * 05791510
.*       Validate OWNER               1 to 8 characters           @L2A* 05792500
.*                                                                    * 05793490
.********************************************************************** 05794480
&L       SETA  8                  Maximum name length              @L2A 05795470
         AIF   ('&OWNER' EQ '').EOWNR  OWNER not specified         @L2A 05796460
         AIF   (K'&OWNER GT &L).OWNRER3 owner name is too long     @L2A 05797450
&FLAG2   SETA  &FLAG2+&OWNR           INDICATE OWNER   SPECIFIED   @L2A 05798440
         ALPHANUM STRING=&OWNER          check device owner to     @L2A 05799430
.*                                       be alphanumeric           @L2A 05800420
         AIF   (&INTERR).OWNRER4         invalid character found   @L2A 05801410
         AGO   .EOWNR                 Go to end of OWNER           @L2A 05802400
.*                                                                 @L2A 05803390
.OWNRER3 ANOP  ,                                                   @L2A 05804380
         MNOTE 8,'033 OWNER PARAMETER EXCEEDS &L CHARACTERS.'      @L2A 05805370
.*                                                                 @L2A 05806360
&ERROR   SETB  1                       Indicates error             @L2A 05807350
         AGO   .EOWNR                  and continue                @L2A 05808340
.*                                                                 @L2A 05809330
.OWNRER4 ANOP  ,                                                   @L2A 05810320
         MNOTE 8,'047 INVALID CHARACTER ''&CWK'' IN OWNER PARAMETER.'   05811310
.*                                                                 @L2A 05812300
.EOWNR   ANOP  ,                                                   @L2A 05813290
.********************************************************************** 05814280
.*                                                                    * 05815270
.*       Validate TIMEOUT             Y | N                           * 05816260
.*                                                                    * 05817250
.********************************************************************** 05818240
.CKTIME  ANOP                                                           05819230
         AIF   ('&TIMEOUT' EQ '').CKUNIT     TIMEOUT not specified      05820220
         AIF   ('&TIMEOUT' EQ 'Y').SETTMY    TIMEOUT=Y   specified      05821210
         AIF   ('&TIMEOUT' NE 'YES').CKTMNO  check for TIMEOUT=N        05822200
         MNOTE 0,'044 TIMEOUT VALUE SHOULD BE Y OR N.'                  05823190
.SETTMY  ANOP                                                           05824180
&IOCPF1  SETA  &IOCPF1+&TMYF          Indicate TIMEOUT=Y specified      05825170
         AGO   .CKUNIT                Check next keyword                05826160
.CKTMNO  ANOP                                                           05827150
         AIF   ('&TIMEOUT' EQ 'N').SETTMN  Valid TIMEOUT operand (N)    05828140
         AIF   ('&TIMEOUT' NE 'NO').TIMEERR Invalid TIMEOUT operand     05829130
         MNOTE 0,'044 TIMEOUT VALUE SHOULD BE Y OR N.'                  05830120
.SETTMN  ANOP                                                           05831110
&IOCPF1  SETA  &IOCPF1+&TIMF          Indicate TIMEOUT=N specified      05832100
         AGO   .CKUNIT                Check next keyword                05833090
.TIMEERR ANOP                                                           05834080
         MNOTE 8,'044 TIMEOUT VALUE MUST BE Y OR N.'                    05835070
&ERROR   SETB  1                      Indicates error                   05836060
         AGO   .CKUNIT                Check next keyword                05837050
.********************************************************************** 05838040
.*                                                                    * 05839030
.*       Validate UNIT                1 - 8 characters                * 05840020
.*                                                                    * 05841010
.********************************************************************** 05842000
.CKUNIT  ANOP                                                           05842990
&L       SETA  8                      Maximum UNIT length               05843980
         AIF   ('&UNIT' EQ '').NOUNIT  UNIT not specified               05844970
&FLAG2   SETA  &FLAG2+&UNIF             Indicate UNIT specified         05845960
         AIF   (N'&UNIT GT 1).SUBUNIT   UNIT is in sublist format       05846950
         AIF   (K'&UNIT LE &L).UNICHAR  MAXIMUM NUMBER OF CHARACTERS    05847940
         MNOTE 8,'033 UNIT PARAMETER EXCEEDS &L CHARACTERS.'            05848930
&ERROR   SETB  1                      Indicates error                   05849920
         AGO   .CKUNAD                Check next keyword                05850910
.SUBUNIT MNOTE 8,'014 UNIT PARAMETER MAY NOT BE A SUBLIST.'             05851900
&ERROR   SETB  1                      Indicates error                   05852890
         AGO   .CKUNAD                Check next keyword                05853880
.NOUNIT  MNOTE 8,'002 UNIT KEYWORD NOT SPECIFIED.'                      05854870
&ERROR   SETB  1                      Indicates error                   05855860
         AGO   .CKUNAD                Check next keyword                05856850
.UNICHAR ANOP                                                           05857840
&NDX     SETA  1                      Point to 1st character            05858830
.*                                                                      05859820
.*       Loop to validate each character in the UNIT name               05860810
.UNILOOP ANOP                                                           05861800
         AIF   ('&UNIT'(&NDX,1) EQ '@').GOODUNI   (@)              @H4A 05862790
         AIF   ('&UNIT'(&NDX,1) EQ '#').GOODUNI   (#)              @H4A 05863780
         AIF   ('&UNIT'(&NDX,1) EQ '$').GOODUNI   ($)              @H4A 05864770
         AIF   ('&UNIT'(&NDX,1) LT 'A').BADUNI                          05865760
         AIF   ('&UNIT'(&NDX,1) LE 'I').GOODUNI   (A-I)                 05866750
         AIF   ('&UNIT'(&NDX,1) LT 'J').BADUNI                          05867740
         AIF   ('&UNIT'(&NDX,1) LE 'R').GOODUNI   (J-R)                 05868730
         AIF   ('&UNIT'(&NDX,1) LT 'S').BADUNI                          05869720
         AIF   ('&UNIT'(&NDX,1) LE 'Z').GOODUNI   (S-Z)                 05870710
         AIF   ('&UNIT'(&NDX,1) LT '0').BADUNI                          05871700
         AIF   ('&UNIT'(&NDX,1) LE '9').GOODUNI   (0-9)                 05872690
.BADUNI  ANOP                         Invalid character                 05873680
&CWK     SETC  '&UNIT'(&NDX,1)        Isolate invalid character         05874670
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN UNIT PARAMETER.'    05875660
&ERROR   SETB  1                      Indicates error                   05876650
.GOODUNI ANOP                                                           05877640
&NDX     SETA  &NDX+1                 Points to next character of UNIT  05878630
         AIF   (&NDX LE K'&UNIT).UNILOOP    Check next character        05879620
.********************************************************************** 05880610
.*                                                                    * 05881600
.*       Validate UNITADD             2 digit unit address number     * 05882590
.*                                                                    * 05883580
.********************************************************************** 05884570
.CKUNAD  ANOP                                                           05885560
&L       SETA  2                      Required UNITADD length           05886550
         AIF   ('&UNITADD' EQ '').CKDEV   UNITADD not specified         05887540
&UNIADF  SETB  1                      Indicate occurance of UNITADD     05888530
&IOCPF1  SETA  &IOCPF1+&UNAF          Indicate UNITADD specified        05889520
         AIF (N'&UNITADD GT 1).UNSUBLE    Operand is in sublist format  05890510
.*                                                                      05891500
         AIF (K'&UNITADD EQ &L).UNIDLEN   Length of chpid (no parens)   05892490
.*                                                                      05893480
         MNOTE 8,'022 UNITADD PARAMETER MUST BE &L DIGITS.'             05894470
&ERROR   SETB 1                       Indicate error                    05895460
.UNIDLEN ANOP                                                           05896450
&NDX     SETA 1                       Point to first digit              05897440
.*                                                                      05898430
.*       Loop to validate each number in the chpid id                   05899420
.UNLOOP  ANOP                                                           05900410
         AIF ('&UNITADD'(&NDX,1) LT 'A').BADUN   Invalid digit          05901400
         AIF ('&UNITADD'(&NDX,1) LE 'F').GOODUN  Hex digit (A-F)        05902390
         AIF ('&UNITADD'(&NDX,1) LT '0').BADUN   Invalid digit          05903380
         AIF ('&UNITADD'(&NDX,1) LE '9').GOODUN  Hex digit (0-9)        05904370
.BADUN   ANOP                         Invalid character in UNITADD id   05905360
.*                                                                      05906350
&CWK     SETC '&UNITADD'(&NDX,1)      Isolate invalid character         05907340
         MNOTE 8,'021 INVALID HEX DIGIT ''&CWK'' IN UNITADD PARAMETER.' 05908330
.*                                                                      05909320
&ERROR   SETB 1                       Indicate error                    05910310
.GOODUN  ANOP                                                           05911300
&NDX     SETA  &NDX+1                 Point to next digit               05912290
         AIF (&NDX LE K'&UNITADD).UNLOOP Check next digit               05913280
         AGO  .CKDEV                  Check DEV keyword                 05914270
.UNSUBLE MNOTE 8,'014 UNITADD PARAMETER MAY NOT BE A SUBLIST.'          05915260
&ERROR   SETB 1                       Indicate error                    05916250
.********************************************************************** 05917240
.*                                                                    * 05918230
.*       Validate DEVNUMBR            4 digit device number           * 05919220
.*                                                                    * 05920210
.********************************************************************** 05921200
.CKDEV   ANOP                                                           05922190
&L       SETA  4                      Required DEVNUMBR length          05923180
         AIF   ('&DEVNUMBR' EQ '').XCKDEV  DEVNUMBR  not specified @LBC 05924170
         AIF   (&UNIADF EQ 1).BOTHBAD                                   05925160
         AGO   .DVONLY                                                  05926150
.BOTHBAD MNOTE 8,'039 ONLY DEVNUMBR OR UNITADD PARAMETER CAN BE SPECIFI*05927140
               ED'                                                      05928130
&ERROR   SETB 1                       Indicate error                    05929120
.DVONLY  ANOP                                                           05930110
&IOCPF1  SETA  &IOCPF1+&DEVF          Indicate DEVNUMBR specified       05931100
         AIF (N'&DEVNUMBR GT 1).DVSUBLE   Operand is in sublist format  05932090
.*                                                                      05933080
         AIF (K'&DEVNUMBR EQ &L).DVIDLEN  Length of chpid (no parens)   05934070
.*                                                                      05935060
         MNOTE 8,'022 DEVNUMBR PARAMETER MUST BE &L DIGITS.'            05936050
&ERROR   SETB 1                       Indicate error                    05937040
.DVIDLEN ANOP                                                           05938030
&NDX     SETA 1                       Point to first digit              05939020
.*                                                                      05940010
.*       Loop to validate each number in the chpid id                   05941000
.DVLOOP  ANOP                                                           05941990
         AIF ('&DEVNUMBR'(&NDX,1) LT 'A').BADDV  Invalid digit          05942980
         AIF ('&DEVNUMBR'(&NDX,1) LE 'F').GOODDV Hex digit (A-F)        05943970
         AIF ('&DEVNUMBR'(&NDX,1) LT '0').BADDV  Invalid digit          05944960
         AIF ('&DEVNUMBR'(&NDX,1) LE '9').GOODDV Hex digit (0-9)        05945950
.BADDV   ANOP                         Invalid character in DEVNUMBR id  05946940
.*                                                                      05947930
&CWK     SETC '&DEVNUMBR'(&NDX,1)     Isolate invalid character         05948920
         MNOTE 8,'021 INVALID HEX DIGIT ''&CWK'' IN DEVNUMBR PARAMETER.*05949910
               '                                                        05950900
.*                                                                      05951890
&ERROR   SETB 1                       Indicate error                    05952880
.GOODDV  ANOP                                                           05953870
&NDX     SETA  &NDX+1                 Point to next digit               05954860
         AIF (&NDX LE K'&DEVNUMBR).DVLOOP Check next digit              05955850
         AGO  .XCKDEV                 and continue                 @LBA 05956840
.DVSUBLE MNOTE 8,'014 DEVNUMBR PARAMETER MAY NOT BE A SUBLIST.'         05957830
&ERROR   SETB 1                       Indicate error                    05958820
.XCKDEV  ANOP                                                      @LBA 05959810
.*                                                                      05960800
.********************************************************************** 05961790
.*                                                                    * 05962780
.*       Validate PARTITION           (name,name,name,....)           * 05963770
.*                                                                    * 05964760
.********************************************************************** 05965750
&MAXSUB  SETA  64                     Maximum number of partitions @LBA 05966740
&PACT    SETA  0                      Initialize number of entries in  *05967730
                                      partition table              @LBA 05968720
         AIF   ('&PARTITION' EQ '').XPART1 PARTITION not specified @LBA 05969710
&IOCPF2  SETA &IOCPF2+&PARF           Indicate PARTITION specified @LTA 05970700
.*                                                                      05971690
.********************************************************************** 05972680
.*       Loop to validate each sublist entry                          * 05973670
.********************************************************************** 05974660
&SUB     SETA 1                       Address first sublist entry  @LBA 05975650
.PART010 ANOP ,                                                    @LBA 05976640
         AIF   ('&PARTITION(&SUB)' EQ '').PARTNXT  No partition spec'd *05977630
                                                                   @LBA 05978620
         PARTTEST NAME=&PARTITION(&SUB),SUB=&SUB                   @LBA 05979610
         AIF   (NOT &$ERR).PART020    Continue of no error detected@LBA 05980600
&ERROR   SETB  1                      Otherwise indicate error     @LBA 05981590
         AGO   .PARTNXT               and continue                 @LBA 05982580
.*                                                                      05983570
.PART020 ANOP ,                                                    @LBA 05984560
         AIF  (&PACT EQ &MAXSUB).PARTE01  Number of sublists > max @LBA 05985550
&PACT    SETA  &PACT+1                Increment  number of entries in  *05986540
                                      partition table              @LBA 05987530
&PA(&PACT) SETC '&PARTITION(&SUB)'    Save partition name          @LBA 05988520
.*                                                                      05989510
.PARTNXT ANOP                         Process next partition       @LBA 05990500
&SUB     SETA &SUB+1                  Point to next sublist entry  @LBA 05991490
         AIF  (&SUB LE N'&PARTITION).PART010  More partition's ... @LBA 05992480
         AGO  .XPART1                 and continue                 @LBA 05993470
.*                                                                      05994460
.*                                                                      05995450
.PARTE01 ANOP  ,                                                   @LBA 05996440
         MNOTE 8,'054 PARTITION PARAMETER EXCEEDS &MAXSUB SUBLIST ENTRI*05997430
               ES.'                                                @LBA 05998420
&ERROR   SETB  1                      Indicates error              @LBA 05999410
         AGO   .XPART1                and continue                 @LBA 06000400
.*                                                                      06001390
.XPART1  ANOP  ,                                                   @LBA 06002380
.*                                                                      06003370
.*                                                                      06004360
.********************************************************************** 06005350
.*                                                                    * 06006340
.*       Validate PART parameter      (name,name,name,....)           * 06007330
.*                                                                    * 06008320
.********************************************************************** 06009310
&MAXSUB  SETA  64                     Maximum number of partitions @LBA 06010300
         AIF   ('&PART' EQ '').XPART2 PART parameter not spec'ed   @LBA 06011290
&IOCPF2  SETA &IOCPF2+&PARF           Indicate PARTITION specified @LTA 06012280
.*                                                                      06013270
.********************************************************************** 06014260
.*       Loop to validate each sublist entry                          * 06015250
.********************************************************************** 06016240
&PACT    SETA  0                      Initialize number of entries in  *06017230
                                      partition table                   06018220
&SUB     SETA 1                       Address first sublist entry  @LBA 06019210
.PART110 ANOP ,                                                    @LBA 06020200
         AIF   ('&PART(&SUB)' EQ '').PART150  No partition specified   *06021190
                                                                   @LBA 06022180
         PARTTEST NAME=&PART(&SUB),SUB=&SUB  Validate part name    @LBA 06023170
         AIF   (NOT &$ERR).PART120    Continue of no error detected@LBA 06024160
&ERROR   SETB  1                      Otherwise indicate error     @LBA 06025150
         AGO   .PART150               and continue                 @LBA 06026140
.*                                                                      06027130
.PART120 ANOP ,                                                    @LBA 06028120
         AIF  (&PACT EQ &MAXSUB).PARTE10  Number of sublists > max @LBA 06029110
&PACT    SETA  &PACT+1                Increment  number of entries in  *06030100
                                      partition table              @LBA 06031090
&PA(&PACT) SETC '&PART(&SUB)'         Save partition name          @LBA 06032080
.*                                                                      06033070
.PART150 ANOP                         Process next partition       @LBA 06034060
&SUB     SETA &SUB+1                  Point to next sublist entry  @LBA 06035050
         AIF  (&SUB LE N'&PART).PART110  More partition's ...      @LBA 06036040
         AGO  .XPART2                 and continue                 @LBA 06037030
.*                                                                      06038020
.PARTE10 ANOP  ,                                                   @LBA 06039010
         MNOTE 8,'054 PART PARAMETER EXCEEDS &MAXSUB SUBLIST ENTRIES.' *06040000
                                                                   @LBA 06040990
&ERROR   SETB  1                      Indicates error              @LBA 06041980
         AGO   .XPART2                and continue                 @LBA 06042970
.*                                                                      06043960
.XPART2  ANOP  ,                                                   @LBA 06044950
.*                                                                      06045940
.*                                                                      06046930
.********************************************************************** 06047920
.*                                                                    * 06048910
.*       Validate NOTPART parameter   (name,name,name,....)           * 06049900
.*                                                                    * 06050890
.********************************************************************** 06051880
&MAXSUB  SETA  64                     Maximum number of partitions @LTA 06052870
         AIF   ('&NOTPART' EQ '').XPART3 NOTPART not specified     @LTA 06053860
         AIF   ((('&PART' NE '') OR ('&PARTITION' NE '')) AND          *06054850
               ('&NOTPART' NE '')).NPRTE02  invalid combination    @LTA 06055840
&IOCPF2  SETA &IOCPF2+&NPAF           Indicate NOTPART specified   @LTA 06056830
.*                                                                      06057820
.********************************************************************** 06058810
.*       Loop to validate each sublist entry                          * 06059800
.********************************************************************** 06060790
&PACT    SETA  0                      Initialize number of entries in  *06061780
                                      partition table              @LTA 06062770
&SUB     SETA 1                       Address first sublist entry  @LTA 06063760
.NPRT110 ANOP ,                                                    @LTA 06064750
         AIF   ('&NOTPART(&SUB)' EQ '').NPRT150 No partition specified *06065740
                                                                   @LTA 06066730
         PARTTEST NAME=&NOTPART(&SUB),SUB=&SUB Validate part name  @LTA 06067720
         AIF   (NOT &$ERR).NPRT120    Continue of no error detected@LTA 06068710
&ERROR   SETB  1                      Otherwise indicate error     @LTA 06069700
         AGO   .NPRT150               and continue                 @LTA 06070690
.*                                                                      06071680
.NPRT120 ANOP ,                                                    @LTA 06072670
         AIF  (&PACT EQ &MAXSUB).NPRTE10  Number of sublists > max @LTA 06073660
&PACT    SETA  &PACT+1                Increment  number of entries in  *06074650
                                      partition table              @LTA 06075640
&PA(&PACT) SETC '&NOTPART(&SUB)'      Save partition name          @LTA 06076630
.*                                                                      06077620
.NPRT150 ANOP                         Process next partition       @LTA 06078610
&SUB     SETA &SUB+1                  Point to next sublist entry  @LTA 06079600
         AIF  (&SUB LE N'&NOTPART).NPRT110  More partition's ...   @LTA 06080590
         AGO  .XPART3                 and continue                 @LTA 06081580
.*                                                                      06082570
.NPRTE10 ANOP  ,                                                   @LTA 06083560
         MNOTE 8,'054 NOTPART PARAMETER EXCEEDS &MAXSUB SUBLIST ENTRIES*06084550
               .'                                                  @LTA 06085540
.*                                                                 @LTA 06086530
&ERROR   SETB  1                      Indicates error              @LTA 06087520
         AGO   .XPART3                and continue                 @LTA 06088510
.*                                                                      06089500
.NPRTE02 ANOP  ,                                                   @LTA 06090490
         MNOTE 8,'051 NOTPART PARAMETER AND PARTITION PARAMETER ARE MUT*06091480
               UALLY EXCLUSIVE.'                                   @LTA 06092470
.*                                                                 @LTA 06093460
&ERROR   SETB  1                      Indicates error              @LTA 06094450
         AGO   .XPART3                and continue                 @LTA 06095440
.*                                                                      06096430
.XPART3  ANOP  ,                                                   @LTA 06097420
.*                                                                      06098410
.********************************************************************** 06099400
.*                                                                    * 06100390
.*       Validate DESC                0 to &L EBCDIC characters       * 06101380
.*                                                                    * 06102370
.********************************************************************** 06103360
&L       SETA  32                 Maximum description length       @N3A 06104350
         AIF   ('&DESC' EQ '').DENULL   DESC is null               @N3A 06105340
         AIF   ('&DESC'(1,1) EQ '''').DELEN  Must be in quotes     @N3A 06106330
.*                                   (Asmblr checks for end quote) @N3A 06107320
         MNOTE 8,'008 DESC VALUE MUST BE ENCLOSED IN QUOTES.'      @N3A 06108310
&ERROR   SETB  1                      Indicate error               @N3A 06109300
         AGO   .EDESC                 Go to end of parameter       @N3A 06110290
.DELEN   ANOP                                                      @N3A 06111280
&DESCR   SETC  '&DESC'                Set description              @N3A 06112270
&LEN     SETA  K'&DESC-2              Length of description        @N3A 06113260
         AIF   (&LEN  LE 0).DENULL    Check for zero length        @N3A 06114250
&DSC     SETC  '&DESC'(2,&LEN)                                     @L2A 06115240
         STRLEN STRING=&DSC           Determine length of string   @L2A 06116230
&LEN     SETA  &$STRLEN               Get string length back       @L2A 06117220
         AIF   (&LEN  LE &L).EDESC    Less than maximum            @N3A 06118210
         MNOTE 8,'033 DESC PARAMETER EXCEEDS &L CHARACTERS.'       @N3A 06119200
&ERROR   SETB  1                      Indicate error               @N3A 06120190
         AGO   .EDESC                 Go to end of parameter       @N3A 06121180
.DENULL  ANOP                                                      @N3A 06122170
&DESCR   SETC  ''' '''                Set to blank                 @N3A 06123160
.EDESC   ANOP  ,                                                   @N3A 06124150
.********************************************************************** 06125140
.*                                                                    * 06126130
.*       Validate SERIAL              1 to &L EBCDIC characters       * 06127120
.*                                                                    * 06128110
.********************************************************************** 06129100
&L       SETA  10                     Maximum length               @N3A 06130090
         AIF   ('&SERIAL' EQ '').ESERN    SERIAL is null           @N3A 06131080
&SERR    SETC  '&SERIAL'                Set serial number          @M5A 06132070
&LEN     SETA  K'&SERIAL              Length of description        @L2A 06133060
         AIF   ('&SERIAL'(1,1) NE '''').SERLN  Not in quotes       @M5A 06134050
&LEN     SETA  K'&SERIAL-2            Length of description        @N3A 06135040
&SERR    SETC  '&SERIAL'(2,&LEN)        Set serial number          @M5A 06136030
         STRLEN STRING=&SERR            Determine length           @M5A 06137020
&LEN     SETA  &$STRLEN               Set length of string         @M5A 06138010
.SERLN   ANOP  ,                                                   @M5A 06139000
         AIF   (&LEN      LE &L).ESERN    Less than maximum        @M5A 06139990
         MNOTE 8,'033 SERIAL PARAMETER EXCEEDS &L CHARACTERS.'     @N3A 06140980
&ERROR   SETB  1                      Indicate error               @N3A 06141970
.ESERN   ANOP  ,                                                   @N3A 06142960
.*                                                                      06143950
.********************************************************************** 06144940
.*                                                                    * 06145930
.*       Validate VOLSER              1 to &L EBCDIC characters       * 06146920
.*                                                                    * 06147910
.********************************************************************** 06148900
&L       SETA  6                      Maximum length               @C3A 06149890
         AIF   ('&VOLSER' EQ '').EVOLN    VOLSER is null           @C3A 06150880
&VOLS    SETC  '&VOLSER'                Set volume serial number   @C3A 06151870
&LEN     SETA  K'&VOLSER              Length of volser             @L2A 06152860
         AIF   ('&VOLSER'(1,1) NE '''').VOLLN  Not in quotes       @L2A 06153850
&LEN     SETA  K'&VOLSER-2            Length of volser             @L2A 06154840
&VOLS    SETC  '&VOLSER'(2,&LEN)        Set volser number          @L2A 06155830
         STRLEN STRING=&VOLS            Determine length           @L2A 06156820
&LEN     SETA  &$STRLEN               Set length of string         @L2A 06157810
.VOLLN   ANOP  ,                                                   @L2A 06158800
         AIF   (&LEN      LE &L).EVOLN    Less than maximum        @C3A 06159790
         MNOTE 8,'033 VOLSER PARAMETER EXCEEDS &L CHARACTERS.'     @C3A 06160780
&ERROR   SETB  1                      Indicate error               @C3A 06161770
.EVOLN   ANOP  ,                                                   @C3A 06162760
.*                                                                      06163750
.********************************************************************** 06164740
.*                                                                    * 06165730
.*       Validate USERPRM    list of sublists                         * 06166720
.*                           ((parmid,(value1,...),...)               * 06167710
.*                           describing parameter id, (list of)   @M4A* 06168700
.*                           parameter value(s)                   @M4A* 06169690
.*                           for user-defined parameters          @M4A* 06170680
.*                                                                    * 06171670
.********************************************************************** 06172660
.CKUSRP  ANOP                                                           06173650
&MAXSUB  SETA  32                      Max number of sublist entr. @M4A 06174640
&L       SETA  10                      Maximum length of parm id   @M4A 06175630
&L1      SETA  2                       Maximum length of sublist   @M4A 06176620
         AIF  ('&USERPRM' EQ '').XUSRP   USERPRM not specified     @M4A 06177610
         AIF  ('&USERPRM'(1,2) EQ '((').USRP100 Double parentheses @M4A 06178600
&SINGLE  SETB 1                        Indicate single entry       @M4A 06179590
&NUSRP   SETA 1                        Only 1 subentry             @M4A 06180580
         AGO   .USRP105                                            @M4A 06181570
.USRP100 ANOP  ,                                                   @M4A 06182560
         AIF  (N'&USERPRM GT &MAXSUB).USRPE01 Higher number of         *06183550
                                       operands than in USERPRM    @M4A 06184540
&NUSRP   SETA  N'&USERPRM              Set number of subentries    @M4A 06185530
&SINGLE  SETB  0                       Indicate list               @M4A 06186520
.USRP105 ANOP  ,                                                   @M4A 06187510
&SUB     SETA  1                                                   @M4A 06188500
.USRP110 ANOP  ,                                                   @M4A 06189490
         AIF   (&SINGLE).USRP115                                   @M4A 06190480
         AIF   ('&USERPRM(&SUB)' EQ '').USRPE06 Entry omitted      @M4A 06191470
         AIF   (N'&USERPRM(&SUB) NE &L1).USRPE03 Sublist not 2 ent @M4A 06192460
&UPRMID(&SUB)  SETC  '&USERPRM(&SUB,1)'       Save parameter id    @M4A 06193450
         AGO   .USRP118                                            @M4A 06194440
.USRP115 ANOP  ,                                                   @M4A 06195430
         AIF   (N'&USERPRM NE &L1).USRPE03 Sublist not 2 entries   @M4A 06196420
&UPRMID(&SUB)  SETC  '&USERPRM(1)'            Save parameter id    @M4A 06197410
.USRP118 ANOP  ,                                                   @M4A 06198400
         AIF   ('&UPRMID(&SUB)' EQ '').USRPE02  No parameter id    @M4A 06199390
         AIF   (K'&UPRMID(&SUB) GT &L).USRPE05  Parm id > 10 chars @M4A 06200380
.*                                                                 @M4A 06201370
.USRP120 ANOP  ,                                                   @M4A 06202360
&NDX     SETA  1                                                   @M4A 06203350
         AIF   (&SINGLE).USRP125                                   @M4A 06204340
.USRP122 ANOP  ,                                                   @M4A 06205330
&AWK     SETA  (&SUB-1)*8+&NDX                   Position of value @M4A 06206320
&UPRMVAL(&AWK) SETC  '&USERPRM(&SUB,2,&NDX)' Save parm value       @M4A 06207310
         AIF   ('&UPRMVAL(&AWK)' EQ '').USRPE02                    @M4A 06208300
         AIF   (&UPRMVLN(&SUB) GE K'&UPRMVAL(&AWK)).USRP123        @M4A 06209290
&UPRMVLN(&SUB) SETA K'&UPRMVAL(&AWK)        Set value length       @M4A 06210280
.USRP123 ANOP  ,                                                   @M4A 06211270
&NDX     SETA  &NDX+1                                              @M4A 06212260
         AIF   (&NDX LE N'&USERPRM(&SUB,2)).USRP122                @M4A 06213250
         AGO   .USRP150                                            @M4A 06214240
.USRP125 ANOP  ,                                                   @M4A 06215230
&AWK     SETA  (&SUB-1)*8+&NDX                    Position of value@M4A 06216220
&UPRMVAL(&AWK) SETC  '&USERPRM(2,&NDX)' Save parm value            @M4A 06217210
         AIF   ('&UPRMVAL(&AWK)' EQ '').USRPE02                    @M4A 06218200
         AIF   (&UPRMVLN(&SUB) GE K'&UPRMVAL(&AWK)).USRP130        @M4A 06219190
&UPRMVLN(&SUB) SETA K'&UPRMVAL(&AWK)     Set value length          @M4A 06220180
.USRP130 ANOP  ,                                                   @M4A 06221170
&NDX     SETA  &NDX+1                                              @M4A 06222160
         AIF   (&NDX LE N'&USERPRM(2)).USRP125                     @M4A 06223150
.*                                                                 @M4A 06224140
.USRP150 ANOP  ,                                                   @M4A 06225130
&UPRMVCT(&SUB) SETA &NDX-1                  Set value count        @M4A 06226120
&SUB     SETA  &SUB+1                  Point to next sublist entry @M4A 06227110
         AIF   (&SUB LE &NUSRP).USRP110 More user parameters       @M4A 06228100
         AGO   .XUSRP                                              @M4A 06229090
.*                                                                 @M4A 06230080
.USRPE01 ANOP  ,                                                   @M4A 06231070
         MNOTE 8,'045 USERPRM PARAMETER EXCEEDS &MAXSUB ENTRIES.'  @M4A 06232060
&ERROR   SETB  1                       Indicates error             @M4A 06233050
         AGO   .XUSRP                  and continue                @M4A 06234040
.*                                                                 @M4A 06235030
.USRPE02 ANOP  ,                                                   @M4A 06236020
         MNOTE 8,'017 PARAMETER ID OR VALUE REQUIRED IN SUBLIST ENTRY &*06237010
               SUB OF USERPRM PARAMTER.'                           @M4A 06238000
&ERROR   SETB  1                       Indicates error             @M4A 06238990
         AGO   .XUSRP                  and continue                @M4A 06239980
.*                                                                 @M4A 06240970
.USRPE03 ANOP  ,                                                   @M4A 06241960
         MNOTE 8,'022 USERPRM PARAMETER SUBLIST ENTRY &SUB MUST CONTAIN*06242950
                &L1 ENTRIES.'                                      @M4A 06243940
&ERROR   SETB  1                       Indicates error             @M4A 06244930
         AGO   .XUSRP                  and continue                @M4A 06245920
.*                                                                 @M4A 06246910
.USRPE04 ANOP  ,                                                   @M4A 06247900
         MNOTE 8,'047 INVALID HEX DIGIT ''&CWK'' IN SUBLIST ENTRY &SUB *06248890
               OF SWPORT PARAMETER.'                               @M4A 06249880
&ERROR   SETB  1                       Indicates error             @M4A 06250870
         AGO   .XUSRP                  and continue                @M4A 06251860
.*                                                                 @M4A 06252850
.USRPE05 ANOP  ,                                                   @M4A 06253840
         MNOTE 8,'022 PARAMETER ID MUST NOT EXCEED &L CHARACTERS.'     *06254830
                                                                   @M4A 06255820
&ERROR   SETB  1                       Indicates error             @M4A 06256810
         AGO   .XUSRP                  and continue                @M4A 06257800
.*                                                                 @M4A 06258790
.XUSRP   ANOP  ,                                                   @M4A 06259780
.*                                                                      06260770
.********************************************************************** 06261760
.*                                                                    * 06262750
.*       Generate internal text record                                * 06263740
.*                                                                    * 06264730
.********************************************************************** 06265720
.GENTEXT ANOP                                                           06266710
         AIF   (&ERROR EQ 1).EXIT     Exit if an error has been found   06267700
&CNO     SETC  '&SYSITRN'             EBCDIC version of statement nbr   06268690
         DC    CL8'&UNIT'             Unit name specified (device type) 06269680
         DC    H'0'                   UIM index for generic device      06270670
         AIF   (&UNIADF EQ 1).YUNIAD  UNITADD specified                 06271660
         DC    XL1'00'                UNITADD not specified, set to 0   06272650
.*                                                                      06273640
         AGO   .NUNIAD                                                  06274630
.YUNIAD  ANOP                                                           06275620
         DC    XL1'&UNITADD'          UNITADD specified                 06276610
.NUNIAD  ANOP                                                           06277600
         DC    AL1(0)                 Reserved                          06278590
         AIF   ('&DEVNUMBR' EQ '').NOIODVN DEVNUMBR not specified       06279580
         DC    XL2'&DEVNUMBR'         DEVNUMBR                          06280570
         AGO   .EDEVNUM               Done with DEVNUMBR keyword        06281560
.NOIODVN ANOP                                                           06282550
         DC    XL2'00'                DEVNUMBR  (not specified)         06283540
.EDEVNUM ANOP                                                           06284530
         DC    XL2'&ADDRESS(1)'       2 Hex Digit Device Address        06285520
         AIF   (N'&ADDRESS EQ 2).GENACNT  Replication factor specified  06286510
         DC    H'0'                   Number of multiple devices        06287500
         DC    XL1'80'                UIM Internal flag byte            06288490
.*                                   Ifb = multiple devices defaulted   06289480
         AGO   .EGADDR                Done with ADDRESS keyword         06290470
.GENACNT DC    H'&ADDRESS(2)'         Number of multiple devices        06291460
         DC    XL1'00'                UIM Internal flag byte            06292450
.*                                   Ifb = multiple devices specified   06293440
.EGADDR  ANOP                                                           06294430
         DC    XL1'00'                Reserved                          06295420
&AWK     SETA  N'&CUNUMBR-&CUASTRK    Number of entries in CUNUMBR list 06296410
         AIF   (&AWK EQ 0).NOCUNUM    No CUNUMBR list                   06297400
         DC    A(@C&CNO)              Pointer to CUNUMBR list           06298390
         AGO   .GENCCNT               Done with CUNUMBR pointer         06299380
.NOCUNUM DC    A(0)                   No CUNUMBR list                   06300370
.GENCCNT DC    H'&AWK'                Number of entries in CUNUMBR list 06301360
         ANOP                                                           06302350
&AWK     SETA  N'&FEATURE             Number of entries in FEATURE list 06303340
         DC    H'&AWK'                Number of entries in FEATURE list 06304330
         AIF   (N'&FEATURE EQ 0).NOFEATP  No FEATURE list               06305320
         DC    A(@F&CNO)              Pointer to FEATURE list           06306310
         AGO   .EGFEAT                Done with FEATURE count           06307300
.NOFEATP DC    A(0)                   No FEATURE list                   06308290
.EGFEAT  ANOP                                                           06309280
         DC    AL1(&FLAG1)            Keyword flag byte 1               06310270
         DC    AL1(&FLAG2)            Keyword flag byte 2               06311260
         DC    AL1(0)                 Reserved for flags                06312250
         DC    AL1(0)                 Reserved for flags                06313240
         DC    AL4(0)                 Reserved for flags                06314230
         DC    AL1(&IOCPF1)           IOCP-only keyword flag byte       06315220
         DC    AL1(&IOCPF2)           IOCP-only keyword flag byte2 @LTA 06316210
         DC    AL2(0)                 Reserved for flags           @LTC 06317200
         AIF   ('&MODEL' EQ '').NOMOD  MODEL not specified              06318190
         DC    CL4'&MODEL'            Model                             06319180
         AGO   .EGMODEL               Done with MODEL keyword           06320170
.NOMOD   DC    CL4' '                 Model (not specified)             06321160
.EGMODEL ANOP                                                           06322150
.NOEXP   ANOP                                                           06323140
         DC    AL1(&PFLAG)            Parameter flags                   06324130
         DC    AL1(0)                 Reserved                          06325120
         AIF   ('&NUMSECT' EQ '').NONUM  NUMSECT not specified          06326110
         DC    H'&NUMSECT'            NUMSECT                           06327100
         AGO   .EGNUM                 Done with NUMSECT keyword         06328090
.NONUM   DC    H'0'                   NUMSECT (not specified)           06329080
.EGNUM   ANOP                                                           06330070
         AIF   ('&TCU' EQ '').NOTCU  TCU not specified                  06331060
         DC    CL4'&TCU'              TCU                               06332050
         AGO   .EGTCU                 Done with TCU keyword             06333040
.NOTCU   DC    CL4' '                 TCU (not specified)               06334030
.EGTCU   ANOP                                                           06335020
         DC    AL2(0)                 Reserved                          06336010
         AIF   ('&PATH' EQ '').NOPATH  PATH not specified               06337000
         DC    XL1'&PATH'             Channel PATH id                   06337990
         AGO   .EGPATH                Done with PATH keyword            06338980
.NOPATH  DC    XL1'00'                PATH (not specified)              06339970
.EGPATH  ANOP                                                           06340960
         AIF   ('&SETADDR' EQ '').NOSET  SETADDR not specified          06341950
         DC    AL1(&SETADDR)          SETADDR                           06342940
         AGO   .EGSET                 Done with SETADDR keyword         06343930
.NOSET   DC    AL1(0)                 SETADDR (not specified)           06344920
.EGSET   ANOP                                                           06345910
         AIF   ('&ADAPTER' EQ '').NOADAPT  ADAPTER not specified        06346900
         DC    CL5'&ADAPTER'          Adapter                           06347890
         AGO   .EGADAPT               Done with ADAPTER keyword         06348880
.NOADAPT DC    CL5' '                 Adapter (not specified)           06349870
.EGADAPT ANOP                                                           06350860
         DC    AL1(0)                 Reserved                          06351850
         AIF   ('&PCU' EQ '').NOPCU  PCU not specified                  06352840
         DC    AL2(&PCU)              PCU number                        06353830
         AGO   .EGPCU                 Done with PCU keyword             06354820
.NOPCU   DC    AL2(0)                 PCU number (not specified)        06355810
.EGPCU   ANOP                                                           06356800
         DC    XL6'00'                Reserved - do not use        @LEC 06357790
         AIF   (&NUSRP EQ 0).NOUSRP   No user parameters           @M4A 06358780
&CWK     SETC  '@XL&CNO'              Label of extension area len  @M4A 06359770
&CWK     DC    AL2(0)                 Length of extension area     @M4A 06360760
         DC    A(@X&CNO)              Pointer to extension area    @M4A 06361750
         AGO   .GENFEAS               branch to generate features  @M4A 06362740
.NOUSRP  ANOP  ,                                                   @M4A 06363730
         DC    AL2(0)                 Reserved - do not use             06364720
         DC    AL4(0)                 Reserved - do not use             06365710
.GENFEAS ANOP  ,                                                   @M4A 06366700
         DC    XL8'00'                Feature bit string                06367690
         AIF   ('&OWNER' EQ '').NOOWNER No owner specified         @L2A 06368680
         DC    CL8'&OWNER'            Owner identification              06369670
         AGO   .EGNOWNR               Branch to owner generated    @L2A 06370660
.NOOWNER ANOP  ,                                                   @L2A 06371650
         DC    CL8' '                 No owner idenfication        @L2A 06372640
.EGNOWNR ANOP  ,                                                   @L2A 06373630
.*                                                                      06374620
         AIF   (&PACT EQ 0).NOPARTS   Partition list empty              06375610
         DC    A(@P&CNO)              Pointer to partition list    @LBA 06376600
         AGO   .GENPACT               branch to continue           @LBA 06377590
.NOPARTS DC    A(0)                   No partition list exists     @LBA 06378580
.GENPACT DC    H'&PACT'               Number of entries in partition   *06379570
                                      list                         @LBA 06380560
         AIF   ('&DESC' NE '' OR  '&SERIAL' NE '').NODSCP no list  @N3A 06381550
         DC    AL2(0)                 Number of entries in device      *06382540
                                      description list             @N3C 06383530
         DC    A(0)                   No device description list       *06384520
                                      exists                       @N3A 06385510
         AGO   .EDSCP                                              @N3A 06386500
.NODSCP  ANOP  ,                      No description list          @N3A 06387490
         DC    AL2(1)                 Number of entries in device      *06388480
                                      description list             @N3C 06389470
         DC    A(@D&CNO)              Address of description list  @N3A 06390460
.EDSCP   ANOP  ,                      No description list          @N3A 06391450
         DC    XL8'00'                Reserved                     @C3A 06392440
         AIF   ('&VOLS' EQ '').NOVOLS    No VOLSER specified       @L2C 06393430
         DC    CL6'&VOLS'             Volume serial number         @L2C 06394420
         AGO   .EVOLS                                              @C3A 06395410
.NOVOLS  DC    CL6' '                 No volume serial number      @C3A 06396400
.EVOLS   ANOP  ,                                                   @C3A 06397390
         DC    XL14'00'               Reserved                     @C3C 06398380
.*                                                                      06399370
.*                                                                      06400360
&AWK     SETA  N'&CUNUMBR-&CUASTRK    Number of entries in CUNUMBR list 06401350
         AIF   (&AWK EQ 0).EGCU       No CUNUMBR list                   06402340
         SPACE 1                                                        06403330
&SUB     SETA  1                      Point to first CUNUMBR            06404320
&CWK     SETC  '@C&CNO'               Label for first control unit      06405310
.CUGEN   ANOP                                                           06406300
         AIF   ('&CUNUMBR(&SUB)'(1,1) EQ '*').EGCUL  Do not generate    06407290
&CWK     DC    XL2'&CUNUMBR(&SUB)'    Control unit number               06408280
&CWK     SETC  ''                     Blank out the label               06409270
.EGCUL   ANOP                                                           06410260
&SUB     SETA &SUB+1                  Point to next sublist entry       06411250
         AIF  (&SUB LE N'&CUNUMBR).CUGEN   Go insert next cu id         06412240
.EGCU    ANOP                                                           06413230
.*                                                                      06414220
         AIF   (N'&FEATURE EQ 0).EGFEATX FEATURE list not specified@LBC 06415210
         SPACE 1                                                        06416200
&SUB     SETA  1                      Point to first FEATURE            06417190
&CWK     SETC  '@F&CNO'               Label for 1st FEATURE in list     06418180
.FEATGEN ANOP                                                           06419170
&CWK     DC    CL10'&FEATURE(&SUB)'   Feature                           06420160
&CWK     SETC  ''                     Blank out label                   06421150
&SUB     SETA  &SUB+1                 Points to next entry in array     06422140
         AIF   (&SUB LE N'&FEATURE).FEATGEN  Processes next FEATURE     06423130
.EGFEATX ANOP                                                      @LBA 06424120
.*                                                                      06425110
         AIF   (&PACT EQ 0).EGPART   Partition list empty          @LBA 06426100
         SPACE 1                                                   @LBA 06427090
*---------------- Device Partition Candidate List ---------------- @LBA 06428080
&SUB     SETA  1                      Point to first partition     @LBA 06429070
&CWK     SETC  '@P&CNO'               Label for first partition    @LBA 06430060
.PARTGEN ANOP  ,                                                   @LBA 06431050
&CWK     DC    CL8'&PA(&SUB)'         Partition                    @LBA 06432040
&CWK     SETC  ''                     Blank out label              @LBA 06433030
&SUB     SETA  &SUB+1                 Point to next entry in array      06434020
         AIF   (&SUB LE &PACT).PARTGEN  Process next partition in list *06435010
                                                                   @LBA 06436000
.EGPART  ANOP  ,                                                   @LBA 06436990
.*                                                                      06437980
         AIF   ('&DESC' EQ '' AND '&SERIAL' EQ '').EDESCP empty    @N3A 06438970
         SPACE 1                                                   @N3A 06439960
*---------------- Device Description List  ----------------------- @N3A 06440950
&CWK     SETC  '@D&CNO'               Label for first description  @N3A 06441940
.DESCGEN ANOP  ,                                                   @N3A 06442930
         AIF   ('&SERIAL' EQ '').NOSRN No serial number specified  @N3A 06443920
&CWK     DC    CL10'&SERR'            Serial number                @N3A 06444910
         AGO   .ESRNP                                              @N3A 06445900
.NOSRN   ANOP  ,                      No serial number specified   @N3A 06446890
&CWK     DC    CL10' '                Serial number                @N3A 06447880
.ESRNP   ANOP  ,                                                   @N3A 06448870
         DC    XL2'00'                Reserved                     @N3A 06449860
         AIF   ('&DESC' EQ '').NODESCP No description              @N3A 06450850
         DC    CL32&DESCR             Description                  @N3A 06451840
         AGO   .EDESCP                                             @N3A 06452830
.NODESCP ANOP  ,                      No description   specified   @N3A 06453820
         DC    CL32' '                Description                  @N3A 06454810
.EDESCP  ANOP  ,                                                   @N3A 06455800
.*                                                                 @M4A 06456790
.XPRMGEN ANOP                                                      @M4A 06457780
         AIF   (&NUSRP EQ 0).XPRMEND                               @M4A 06458770
&XLEN    SETA  0                      Initialize length of area    @M4A 06459760
&CWK     SETC  '@X&CNO'               Label for 1st user parameter      06460750
.*                                        list                     @M4A 06461740
&CWK     DS    0F                     Start of user parameter list @M4A 06462730
&SUB     SETA  1                      Address parameter            @M4A 06463720
.XPRMID  ANOP  ,                                                   @M4A 06464710
         DC    CL10'&UPRMID(&SUB)'     Parameter id                @M4A 06465700
         DC    AL1(&UPRMVLN(&SUB))     Length of values            @M4A 06466690
         DC    AL1(&UPRMVCT(&SUB))     number of values            @M4A 06467680
&XLEN    SETA  &XLEN+12               Increment length of area     @M4A 06468670
&NDX     SETA  1                      Point to 1st parameter value @M4A 06469660
.XPRMVAL ANOP  ,                                                   @M4A 06470650
&AWK     SETA  (&SUB-1)*8+&NDX                   Position of value @M4A 06471640
         DC    CL&UPRMVLN(&SUB)'&UPRMVAL(&AWK)' Parameter value    @M4A 06472630
&XLEN    SETA  &XLEN+&UPRMVLN(&SUB)   Increment length of area     @M4A 06473620
&NDX     SETA  &NDX+1                 Point to next parm value     @M4A 06474610
         AIF   (&NDX LE &UPRMVCT(&SUB)).XPRMVAL                    @M4A 06475600
&SUB     SETA  &SUB+1                 Point to next parameter      @M4A 06476590
         AIF   (&SUB LE &NUSRP).XPRMID More user parameters        @M4A 06477580
&CWK     SETC  '@XL&CNO'              Label of extension area len  @M4A 06478570
         ORG   &CWK                   Point to area length field   @M4A 06479560
         DC    AL2(&XLEN)             Inserts extension area length@M4A 06480550
         ORG   ,                                                   @M4A 06481540
.XPRMEND ANOP  ,                                                   @M4A 06482530
&CWK     SETC  ''                     Blank out label              @N3A 06483520
.*                                                                      06484510
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to      06485500
         MNOTE ' '                     occur if NOGEN specified         06486490
         MEND                                                           06487480
*/*==================================================================*/ 06488470
*/*==================================================================*/ 06489460
         TITLE 'HCD MACRO LISTING - HCDEND - LAST TEXT HEADER'          06490450
         MACRO  --  GENERATE LAST TEXT HEADER                           06491440
&SYMBOL  HCDEND                                                         06492430
         AGO   .SKIP                                                    06493420
*/********************************************************************/ 06494410
*/*                                                                  */ 06495400
*/*01*  MACRO NAME = HCDEND                                          */ 06496390
*/*                                                                  */ 06497380
*/*01*  DESCRIPTIVE NAME = Generate last Text Header                 */ 06498370
*/*                                                                  */ 06499360
*/*01*  MACRO CALL =                                                 */ 06500350
*/*       LABEL HCDEND                                               */ 06501340
*/*                                                                  */ 06502330
*/*01*  FUNCTION =  The HCDEND macro is used to provide the          */ 06503320
*/*                 final text header information for the end of     */ 06504310
*/*                 the text chain.                                  */ 06505300
*/*                                                                  */ 06506290
*/*01*  NOTES =                                                      */ 06507280
*/*                                                                  */ 06508270
*/*02*    DEPENDENCIES = None.                                       */ 06509260
*/*                                                                  */ 06510250
*/*01*  INPUT  =  None.                                              */ 06511240
*/*                                                                  */ 06512230
*/*01*  OUTPUT =  Common header information.                         */ 06513220
*/*                                                                  */ 06514210
*/********************************************************************/ 06515200
*/*                                                                     06516190
.*                                                                      06517180
.SKIP    ANOP                                                           06518170
         GBLA  &SYSITRN           HCD statement number                  06519160
&SYMBOL  TXTHDR HCDEND                                                  06520150
         MEND                                                           06521140
*/*==================================================================*/ 06522130
*/*==================================================================*/ 06523120
         TITLE 'HCD MACRO LISTING - HCDSEP - SEPERATOR TEXT RECORD'     06524110
         MACRO  --  GENERATE SEPERATOR TEXT HEADER                      06525100
&SYMBOL  HCDSEP                                                         06526090
         AGO   .SKIP                                                    06527080
*/********************************************************************/ 06528070
*/*                                                                  */ 06529060
*/*01*  MACRO NAME = HCDSEP                                          */ 06530050
*/*                                                                  */ 06531040
*/*01*  DESCRIPTIVE NAME = Generate Separator Text Header            */ 06532030
*/*                                                                  */ 06533020
*/*01*  MACRO CALL =                                                 */ 06534010
*/*       LABEL HCDSEP                                               */ 06535000
*/*                                                                  */ 06535990
*/*01*  FUNCTION =  The HCDSEP macro is used to provide the          */ 06536980
*/*                 separator text header information for the        */ 06537970
*/*                 separation of IOCP and MVSCP/HCPRIO text chains. */ 06538960
*/*                                                                  */ 06539950
*/*01*  NOTES =                                                      */ 06540940
*/*                                                                  */ 06541930
*/*02*    DEPENDENCIES = None.                                       */ 06542920
*/*                                                                  */ 06543910
*/*01*  INPUT  =  None.                                              */ 06544900
*/*                                                                  */ 06545890
*/*01*  OUTPUT =  Common header information.                         */ 06546880
*/*                                                                  */ 06547870
*/********************************************************************/ 06548860
*/*                                                                     06549850
.*                                                                      06550840
.SKIP    ANOP                                                           06551830
         GBLA  &SYSITRN           HCD statement number                  06552820
&SYMBOL  TXTHDR HCDSEP                                                  06553810
         MEND                                                           06554800
*/*==================================================================*/ 06555790
*/*==================================================================*/ 06556780
         TITLE 'HCD MACRO LISTING - NIPCON - NIP CONSOLE DEFINITION'    06557770
         MACRO  --  PARSE NIPCON STATEMENT                              06558760
&SYMBOL  NIPCON &DEVNUM=                                                06559750
         AGO   .SKIP                                                    06560740
*/********************************************************************/ 06561730
*/*                                                                  */ 06562720
*/*01*  MACRO NAME = NIPCON                                          */ 06563710
*/*                                                                  */ 06564700
*/*01*  DESCRIPTIVE NAME = NIP Console characteristics.              */ 06565690
*/*                                                                  */ 06566680
*/*01*  MACRO CALL =                                                 */ 06567670
*/*       LABEL NIPCON   DEVNUM= number | (number<,number>...)       */ 06568660
*/*                                                                  */ 06569650
*/*01*  FUNCTION = Define a device as a NIP console.                 */ 06570640
*/*                                                                  */ 06571630
*/*02*    DEPENDENCIES = None.                                       */ 06572620
*/*                                                                  */ 06573610
*/*01*  INPUT = # DEVNUM= 3 or 4 Hex digit NIP console device number */ 06574600
*/*                                                                  */ 06575590
*/*             # - Required keyword                                 */ 06576580
*/*                                                                  */ 06577570
*/*01*  OUTPUT = Internal text                                       */ 06578560
*/*                                                                  */ 06579550
*/********************************************************************/ 06580540
*/*                                                                     06581530
.*                                                                      06582520
.SKIP    ANOP                                                           06583510
         GBLA  &SYSITRN               HCD statement number              06584500
         LCLA  &AWK                   Arithmetic work variable          06585490
         LCLA  &L                     Maximum or req'd operand length   06586480
         LCLA  &MAXSUB                Maximum number of sublist entries 06587470
         LCLA  &NDX                   Substring index                   06588460
         LCLA  &SUB                   Sublist element number            06589450
         LCLB  &ERROR                 Error flag                        06590440
         LCLC  &CNO                   EBCDIC version of &SYSITRN        06591430
         LCLC  &CWK                   Character work variable           06592420
         ACTR  10000                  Set for infinite loop control     06593410
.*                                                                      06594400
&SYMBOL  TXTHDR NIPCON                Build header for NIPCON record    06595390
.*                                                                      06596380
.********************************************************************** 06597370
.*                                                                    * 06598360
.*       Check if unrecognized parameters are specified               * 06599350
.*                                                                    * 06600340
.********************************************************************** 06601330
         AIF   (N'&SYSLIST EQ 0).XPOS60    No positional parameter @P3A 06602320
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @P3A 06603310
&ERROR   SETB  1                  Indicate error                   @P3A 06604300
         AGO   .XPOS60            and continue                     @P3A 06605290
.*                                                                      06606280
.XPOS60  ANOP  ,                                                   @P3A 06607270
.********************************************************************** 06608260
.*                                                                    * 06609250
.*       Validate DEVNUM              list of device numbers          * 06610240
.*                                      3 or 4 Hex digits each        * 06611230
.*                                                                    * 06612220
.********************************************************************** 06613210
.CKDEVNM ANOP                                                           06614200
&MAXSUB  SETA  63                     Maximum number of DEVNUM's        06615190
&L       SETA  4                      Required DEVNUM length            06616180
         AIF   ('&DEVNUM' EQ '').NODEVNM    DEVNUM not specified        06617170
         AIF   (N'&DEVNUM LE &MAXSUB).DVSUBLE Number of sublists        06618160
        MNOTE 8,'015 DEVNUM PARAMETER EXCEEDS &MAXSUB SUBLIST ENTRIES.' 06619150
&ERROR   SETB  1                       Indicate error                   06620140
.DVSUBLE ANOP                                                           06621130
&SUB     SETA 1                                                         06622120
.********************************************************************** 06623110
.*       Loop to validate each sublist entry                          * 06624100
.********************************************************************** 06625090
.DVLOOP  ANOP                                                           06626080
         AIF   ('&DEVNUM(&SUB)' EQ '').DVNULL Null sublist entry        06627070
         AIF (K'&DEVNUM(&SUB) EQ &L).DVNLEN     Number of digits        06628060
         AIF (K'&DEVNUM(&SUB) EQ &L-1).DVNLEN   Number of digits-1      06629050
&AWK     SETA  &L-1                                                     06630040
         MNOTE 8,'022 DEVNUM PARAMETER SUBLIST ENTRY &SUB MUST BE &AWK *06631030
               OR &L DIGITS.'                                           06632020
&ERROR   SETB 1                       Indicate error                    06633010
.DVNLEN  ANOP                                                           06634000
&NDX     SETA  1                      Points to 1st digit of number     06634990
.*                                                                      06635980
.*       Loop to validate each character in the device number           06636970
.DVLOOPB ANOP                                                           06637960
         AIF   ('&DEVNUM(&SUB)'(&NDX,1) LT 'A').BADDV    Bad char       06638950
         AIF   ('&DEVNUM(&SUB)'(&NDX,1) LE 'F').GOODDV   Good  (A-F)    06639940
         AIF   ('&DEVNUM(&SUB)'(&NDX,1) LT '0').BADDV    Bad char       06640930
         AIF   ('&DEVNUM(&SUB)'(&NDX,1) LE '9').GOODDV   Good  (0-9)    06641920
.BADDV   ANOP                           Invalid HEX digit               06642910
&CWK     SETC  '&DEVNUM(&SUB)'(&NDX,1)   Isolate invalid digit          06643900
         MNOTE 8,'021 INVALID HEX DIGIT ''&CWK'' IN SUBLIST ENTRY &SUB *06644890
               FOR DEVNUM PARAMETER'                                    06645880
&ERROR   SETB  1                      Indicates error                   06646870
.GOODDV  ANOP                                                           06647860
&NDX     SETA  &NDX+1                 Point to next digit               06648850
         AIF   (&NDX LE K'&DEVNUM(&SUB)).DVLOOPB   Check next digit     06649840
         AGO  .NXTDVNM                Process next DEVNUM number        06650830
.DVNULL  MNOTE 8,'018 DEVNUM SUBLIST ENTRY &SUB IS MISSING.'            06651820
&ERROR   SETB 1                       Indicate error                    06652810
.*                                                                      06653800
.NXTDVNM ANOP                         Next device number                06654790
&SUB     SETA  &SUB+1                 Point to next sublist entry       06655780
         AIF   (&SUB LE N'&DEVNUM).DVLOOP  More DEVNUM id's ...         06656770
         AGO   .GENTEXT               Generate internal text record     06657760
.NODEVNM MNOTE 8,'002 DEVNUM KEYWORD NOT SPECIFIED.'                    06658750
&ERROR   SETB  1                      Indicate error                    06659740
.********************************************************************** 06660730
.*                                                                    * 06661720
.*       Generate internal text record                                * 06662710
.*                                                                    * 06663700
.********************************************************************** 06664690
.GENTEXT ANOP                                                           06665680
         AIF   (&ERROR EQ 1).EXIT     Exit if an error has been found   06666670
&CNO     SETC  '&SYSITRN'             EBCDIC version of stmt number     06667660
         DC    A(@D&CNO)              Pointer to DEVNUM list            06668650
&AWK     SETA  N'&DEVNUM              Number of entries in DEVNUM list  06669640
         DC    H'&AWK'                Number of entries in DEVNUM list  06670630
         DC    AL2(0)                 Reserved                          06671620
.*                                                                      06672610
         SPACE 1                                                        06673600
&SUB     SETA  1                      Point to first DEVNUM             06674590
&CWK     SETC  '@D&CNO'               Label for first DEVNUM            06675580
.DEVGEN  ANOP                                                           06676570
&CWK     DC    XL2'&DEVNUM(&SUB)'     NIPCON device number              06677560
&CWK     SETC  ''                     Blank out the label               06678550
&SUB     SETA &SUB+1                  Point to next sublist entry       06679540
         AIF  (&SUB LE N'&DEVNUM).DEVGEN   Go insert next DEVNUM        06680530
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to      06681520
         MNOTE ' '                     occur if NOGEN specified         06682510
         MEND                                                           06683500
*/*==================================================================*/ 06684490
*/*==================================================================*/ 06685480
         TITLE 'HCD MACRO LISTING - TXTHDR - INTERNAL TEXT HEADER'      06686470
         MACRO  --  GENERATE TEXT HEADER INFORMATION                    06687460
&SYMBOL  TXTHDR &MACNAME                                                06688450
         AGO   .SKIP                                                    06689440
*/********************************************************************/ 06690430
*/*                                                                  */ 06691420
*/*01*  MACRO NAME = TXTHDR                                          */ 06692410
*/*                                                                  */ 06693400
*/*01*  DESCRIPTIVE NAME = Generate header information.              */ 06694390
*/*                                                                  */ 06695380
*/*01*  MACRO CALL =                                                 */ 06696370
*/*       LABEL TXTHDR  MACNAME                                      */ 06697360
*/*                                                                  */ 06698350
*/*01*  FUNCTION =  The TXTHDR macro is used to provide common       */ 06699340
*/*                 header information for each of the internal      */ 06700330
*/*                 text records.                                    */ 06701320
*/*                                                                  */ 06702310
*/*01*  NOTES =  The maximum HCD statement number is 999999.         */ 06703300
*/*                                                                  */ 06704290
*/*02*    DEPENDENCIES = None.                                       */ 06705280
*/*                                                                  */ 06706270
*/*01*  INPUT = # MACNAME : 1-8 alphanumeric characters to be used   */ 06707260
*/*                     as identification for the internal text      */ 06708250
*/*                     record type.                                 */ 06709240
*/*             # - Required parameter                               */ 06710230
*/*                                                                  */ 06711220
*/*01*  OUTPUT =  Common header information.                         */ 06712210
*/*                                                                  */ 06713200
*/********************************************************************/ 06714190
*/*                                                                     06715180
.*                                                                      06716170
.SKIP    ANOP                                                           06717160
         GBLA  &SYSITRN               HCD statement number              06718150
         GBLA  &SYS1SEP               HCD statement number              06719140
         GBLB  &SEPFLAG               HCDSEP indicator flag             06720130
         LCLA  &STMTNO                Statement number                  06721120
         LCLA  &FILENO                File number                       06722110
         LCLC  &STMTYPE               HCD statement type                06723100
         LCLA  &AWK                   Arithmetic work variable          06724090
         LCLA  &NXTITRN               HCD statement no for next rec     06725080
         LCLC  &CNO                   EBCDIC version of SYSITRN         06726070
         LCLC  &CWK                   Character work variable           06727060
         AIF   ('&MACNAME' EQ '').NONAME                                06728050
.*                                                                      06729040
&SYSITRN SETA  &SYSITRN+1             Statement number of this record   06730030
&STMTNO  SETA  &SYSITRN-&SYS1SEP   stmt. no. relative to separator      06731020
         AIF   (&SYS1SEP LE 1).IOCP                                     06732010
&FILENO  SETA  2                                                        06733000
&STMTYPE SETC  'MVSCP OR HCPRIO'                                   @LEC 06733990
         AGO   .NOTE                                                    06734980
.IOCP    ANOP                                                           06735970
&FILENO  SETA  1                                                        06736960
         AIF   ('&MACNAME' EQ 'HCDSEP').MVSCP                           06737950
         AIF   (&SEPFLAG EQ 1).MVSCP                                    06738940
&STMTYPE SETC  'IOCP/MVSCP'                                             06739930
         AGO   .NOTE                                                    06740920
.MVSCP   ANOP                                                           06741910
&STMTYPE SETC  'MVSCP OR HCPRIO'                                   @LEC 06742900
.NOTE    ANOP                                                           06743890
         MNOTE *,' &STMTNO IS THE PREVIOUS &STMTYPE STATEMENT NUMBER'   06744880
.*                                                                      06745870
         MNOTE ' '                                                      06746860
&CNO     SETC  '&SYSITRN'             EBCDIC version of statement nbr   06747850
@T&CNO   DS    0F                     Internal text record              06748840
         AIF   ('&SYMBOL' EQ '').NOSYM  NO SYMBOL SPECIFIED             06749830
&SYMBOL  EQU   *                                                        06750820
.NOSYM   ANOP                                                           06751810
         DC    CL8'&MACNAME'          Internal text record type         06752800
&AWK     SETA  6-K'&STMTNO         Number of leading blanks needed      06753790
&CWK     SETC  '      '(1,&AWK)        for HCD statement number         06754780
         DC    CL6'&CWK.&STMTNO'      HCD statement number              06755770
         DC    CL1' '                 Reserved                          06756760
         DC    CL1'&FILENO'           File number                       06757750
         AIF   ('&MACNAME' EQ 'HCDEND').GEN                             06758740
&NXTITRN SETA  &SYSITRN+1             Statement number for next record  06759730
         DC    A(@T&NXTITRN)          Ptr to next internal text record  06760720
         DC    F'0'                   Reserved                          06761710
         DC    F'3'                   For function use             @B1C 06762700
         SPACE 1                                                        06763690
         AIF   ('&MACNAME' NE 'HCDSEP').EXIT                            06764680
&SYS1SEP SETA  &SYSITRN               stmt number for separator         06765670
&SEPFLAG SETB  1                      indicator for separator           06766660
         AGO   .EXIT                                                    06767650
.GEN     ANOP                                                           06768640
         DC    A(0)                   Last internal text record         06769630
         DC    F'0'                   Reserved                          06770620
         DC    F'3'                   For component use            @B1C 06771610
         AGO   .EXIT                                                    06772600
.NONAME  MNOTE 16,'001 MACNAME OPERAND IS MISSING FROM TXTHDR MACRO STA*06773590
               TEMENT.'                                                 06774580
.EXIT    ANOP                                                           06775570
         MEND                                                           06776560
*/*==================================================================*/ 06777550
*/*==================================================================*/ 06778540
         TITLE 'HCD MACRO LISTING - UNITNAME - UNITNAME DEFINITION'     06779530
         MACRO  --  PARSE UNITNAME MACRO                                06780520
&SYMBOL  UNITNAME &NAME=,&UNIT=,&VIO=,&TOKEN=,&DEVPREF=            @L2C 06781510
         AGO   .SKIP                                                    06782500
*/********************************************************************/ 06783490
*/*                                                                  */ 06784480
*/*01*  MACRO NAME = UNITNAME                                        */ 06785470
*/*                                                                  */ 06786460
*/*02*  DESCRIPTIVE NAME = Generate UNITNAME characteristics         */ 06787450
*/*                                                                  */ 06788440
*/*01*  MACRO CALL =                                                 */ 06789430
*/*       LABEL UNITNAME NAME=name                                   */ 06790420
*/*                      DEVPREF=device preference value         @L2A*/ 06791410
*/*                      UNIT=device number | (devnum,devnum...) |   */ 06792400
*/*                           ((devnum),(devnum)...) |               */ 06793390
*/*                           ((devnum,devcount)...)                 */ 06794380
*/*                      VIO=NO | YES                            @N3C*/ 06795370
*/*                      TOKEN=nnnn                              @P6A*/ 06796360
*/*                                                                  */ 06797350
*/*01*  FUNCTION = Describes esoteric names and VIO eligibility.     */ 06798340
*/*                                                                  */ 06799330
*/*01*  NOTES =  A list of device numbers may be specified on a      */ 06800320
*/*              single UNITNAME macro instruction.  Multiple        */ 06801310
*/*              UNITNAME macros may be issued with the same NAME.   */ 06802300
*/*                                                                  */ 06803290
*/*02*    DEPENDENCIES = None.                                       */ 06804280
*/*                                                                  */ 06805270
*/*02*    RESTRICTIONS = Only 255 characters may be specified for    */ 06806260
*/*                      a keyword value.                            */ 06807250
*/*                                                                  */ 06808240
*/*01*  INPUT = # NAME= 1 to 8 character esoteric name.              */ 06809230
*/*               DEVPREF= A decimal number in the range from    @L2A*/ 06810220
*/*                     1 to 99999                               @L2A*/ 06811210
*/*               UNIT= list of device numbers (3 or 4 hex digits)   */ 06812200
*/*                     and replication factors (3 decimal digits).  */ 06813190
*/*                     The devcount (replication factor) indicates  */ 06814180
*/*                     successive device numbers.                   */ 06815170
*/*               VIO=  NO | YES                                 @N3C*/ 06816160
*/*               TOKEN= is the token to be assigned to the      @P6A*/ 06817150
*/*                      esoteric. Must be a decimal number in   @P6A*/ 06818140
*/*                      the range from 1 -  8.999.              @P6A*/ 06819130
*/*             # - Required keyword                                 */ 06820120
*/*                                                                  */ 06821110
*/*01*  OUTPUT = List of device numbers and replication factors.     */ 06822100
*/*                                                                  */ 06823090
*/********************************************************************* 06824080
*/*                                                                     06825070
.*                                                                      06826060
.SKIP    ANOP                                                           06827050
         GBLA  &SYSITRN           HCD statement number                  06828040
         GBLB  &$ERR              Global error flag                @P6A 06829030
         GBLC  &CWK               Character work variable          @P6A 06830020
.*                                                                      06831010
         LCLA  &AWK               Arithmetic work variable              06832000
         LCLA  &COMMA             Index to comma in sublist entry       06832990
         LCLA  &FLAG              Flag byte variable                    06833980
         LCLA  &VIOF              Operand flag                          06834970
         LCLA  &VNIOF             Operand flag                     @N3A 06835960
         LCLA  &L                 Maximum or required operand length    06836950
         LCLA  &MAXDEV            Maximum number of device id's         06837940
         LCLA  &MAXVAL            Maximum value of operand         @P6A 06838930
         LCLA  &ITOK              internal token value variable    @P6A 06839920
         LCLA  &NDX               Substring index                       06840910
         LCLA  &SUB               Sublist element number                06841900
         LCLB  &ERROR             Error flag                            06842890
         LCLB  &PAREN             Parentheses flag                      06843880
         LCLC  &CNO               EBCDIC version of SYSITRN             06844870
         LCLC  &DEVNO(63)         Device numbers from UNIT sublist      06845860
         LCLC  &DEVCNT(63)        Replication factor                    06846850
         LCLC  &UNITD             Unit sublist entry (to parse)         06847840
         LCLC  &TOKVAL            Token value                      @P6A 06848830
         ACTR  10000              Set for infinite loop control         06849820
.*                                                                      06850810
&VIOF    SETA  128                VIO=YES specified                     06851800
&VNIOF   SETA  64                 VIO=NO  specified                @N3A 06852790
&SYMBOL  TXTHDR UNITNAME          Build header for UNITNAME record      06853780
.*                                                                      06854770
.********************************************************************** 06855760
.*                                                                    * 06856750
.*       Check if unrecognized parameters are specified               * 06857740
.*                                                                    * 06858730
.********************************************************************** 06859720
         AIF   (N'&SYSLIST EQ 0).XPOS70    No positional parameter @P3A 06860710
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @P3A 06861700
&ERROR   SETB  1                  Indicate error                   @P3A 06862690
         AGO   .XPOS70            and continue                     @P3A 06863680
.*                                                                      06864670
.XPOS70  ANOP  ,                                                   @P3A 06865660
.********************************************************************** 06866650
.*                                                                    * 06867640
.*       Validate NAME                <= 8 characters                 * 06868630
.*                                                                    * 06869620
.********************************************************************** 06870610
&L       SETA  8                      Maximum NAME length               06871600
         AIF   ('&NAME' EQ '').NONAME  NAME not specified               06872590
         AIF   (N'&NAME GT 1).SUBNAME   NAME is in sublist format       06873580
         AIF   (K'&NAME LE &L).NMLEN    Length of NAME                  06874570
         MNOTE 8,'033 NAME PARAMETER EXCEEDS &L CHARACTERS.'            06875560
&ERROR   SETB  1                      Indicates error                   06876550
.NMLEN   ANOP                                                           06877540
&NDX     SETA  1                      Point to first character in NAME  06878530
         AIF   ('&NAME'(&NDX,1) EQ '/').BADNM    Bad char (/)     @01A  06879520
.*                                                                      06880510
.*       Loop to validate each character in NAME operand                06881500
.NMLOOP  ANOP                                                           06882490
         AIF   ('&NAME'(&NDX,1) LT 'A').NMLOOPD  Special character      06883480
         AIF   ('&NAME'(&NDX,1) LE 'I').GOODNM   Good character (A-I)   06884470
         AIF   ('&NAME'(&NDX,1) LT 'J').BADNM                           06885460
         AIF   ('&NAME'(&NDX,1) LE 'R').GOODNM   Good character (J-R)   06886450
         AIF   ('&NAME'(&NDX,1) LT 'S').BADNM                           06887440
         AIF   ('&NAME'(&NDX,1) LE 'Z').GOODNM   Good character (S-Z)   06888430
         AIF   ('&NAME'(&NDX,1) LT '0').BADNM                           06889420
         AIF   ('&NAME'(&NDX,1) LE '9').GOODNM   Good character (0-9)   06890410
.NMLOOPD ANOP                                                           06891400
         AIF   ('&NAME'(&NDX,1) EQ '$').GOODNM   Good character ($)     06892390
         AIF   ('&NAME'(&NDX,1) EQ '#').GOODNM   Good character (#)     06893380
         AIF   ('&NAME'(&NDX,1) EQ '@').GOODNM   Good character (@)     06894370
         AIF   ('&NAME'(&NDX,1) EQ '/').GOODNM   Good character (/)     06895360
         AIF   ('&NAME'(&NDX,1) EQ '-').GOODNM   Good character (-)     06896350
.BADNM   ANOP                                                           06897340
&CWK     SETC  '&NAME'(&NDX,1)        Isolate invalid character         06898330
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN NAME PARAMETER.'    06899320
&ERROR   SETB  1                      Indicates error                   06900310
.GOODNM  ANOP                                                           06901300
&NDX     SETA  &NDX+1                 Next character of name            06902290
         AIF   (&NDX LE K'&NAME).NMLOOP   Loop if more chars            06903280
         AGO   .CKUNIT                Check UNIT keyword                06904270
.*                                                                      06905260
.SUBNAME MNOTE 8,'014 NAME PARAMETER MAY NOT BE A SUBLIST.'             06906250
&ERROR   SETB  1                      Indicates error                   06907240
         AGO   .CKUNIT                Check UNIT keyword                06908230
.NONAME  MNOTE 8,'002 NAME KEYWORD NOT SPECIFIED.'                      06909220
&ERROR   SETB  1                      Indicates error                   06910210
.********************************************************************** 06911200
.*                                                                    * 06912190
.*       Validate UNIT                <= &MAXDEV devices              * 06913180
.*                                                                    * 06914170
.********************************************************************** 06915160
.CKUNIT  ANOP                                                           06916150
&MAXDEV  SETA  63                     Maximum number of device id's     06917140
         AIF   ('&UNIT' EQ '').CKVIO         UNIT not specified         06918130
         AIF   (N'&UNIT LE &MAXDEV).UNSUBL   Number of sublists         06919120
         MNOTE 8,'015 UNIT PARAMETER EXCEEDS &MAXDEV SUBLIST ENTRIES.'  06920110
&ERROR   SETB  1                      Indicate error                    06921100
.UNSUBL  ANOP                         Process each sublist              06922090
&SUB     SETA  1                      First sublist                     06923080
.********************************************************************** 06924070
.*       Loop to check each element in the UNIT sublist               * 06925060
.********************************************************************** 06926050
.UNLOOP  ANOP                                                           06927040
&L       SETA  4                      Max. device number length         06928030
&PAREN   SETB  0                      Indicate parentheses not used     06929020
&NDX     SETA  1                      Point to first digit of number    06930010
&UNITD   SETC  '&UNIT(&SUB)'          Isolate sublist entry             06931000
         AIF   ('&UNIT(&SUB)' EQ '').UNNULL   Null sublist entry        06931990
         AIF   ('&UNITD'(1,1) NE '(').UNNLOOP First char not '('        06932980
         AIF   (K'&UNITD EQ 2).UNNULL  No operands within parens '()'   06933970
&PAREN   SETB  1                      Indicate parentheses are used     06934960
&NDX     SETA  2                      Point past parenthesis            06935950
.*                                                                      06936940
.*       Loop to validate each character in the device number           06937930
.*                                                                      06938920
.UNNLOOP ANOP                         Device number validity loop       06939910
         AIF   ('&UNITD'(&NDX,1) EQ ',').SETUNIT    End of number       06940900
         AIF   ('&UNITD'(&NDX,1) EQ ')').SETUNIT    End of number       06941890
         AIF   ('&UNITD'(&NDX,1) LT 'A').BADUNDN    Non-hex digit       06942880
         AIF   ('&UNITD'(&NDX,1) LE 'F').GOODDN     Good digit (A-F)    06943870
         AIF   ('&UNITD'(&NDX,1) LT '0').BADUNDN    Non-hex digit       06944860
         AIF   ('&UNITD'(&NDX,1) LE '9').GOODDN     Good digit (0-9)    06945850
.BADUNDN ANOP                         Invalid HEX digit                 06946840
&CWK     SETC  '&UNITD'(&NDX,1)       Isolate invalid digit             06947830
         MNOTE 8,'021 INVALID HEX DIGIT ''&CWK'' IN DEVICE NUMBER SUBLI*06948820
               ST ENTRY &SUB FOR UNIT PARAMETER.'                       06949810
&ERROR   SETB  1                      Indicates error                   06950800
.GOODDN  ANOP                                                           06951790
&NDX     SETA  &NDX+1                 Point to next digit               06952780
         AIF   (&NDX LE K'&UNITD).UNNLOOP Check next digit              06953770
.SETUNIT ANOP                                                           06954760
         AIF   (&PAREN EQ 0).NOPAREN  Parentheses not used              06955750
         AIF   (&NDX EQ 2).NODEVNO    Device number not specified '(,'  06956740
         AIF   (&NDX GT &L+2).UNITLEN Too many digits in number         06957730
         AIF   (&NDX LT &L+1).UNITLEN Too few digits in number          06958720
         AIF   (&ERROR EQ 1).UNNSKIP  Skip insert if error encountered  06959710
&DEVNO(&SUB) SETC '&UNITD'(2,&NDX-2)  Insert device number into array   06960700
.UNNSKIP AIF   ('&UNITD'(&NDX,1) EQ ',').CKCNT  Go do devcount          06961690
         AIF   (&NDX EQ K'&UNITD ).NOCNT  Go insert default devcount    06962680
         AGO   .UNNCOMA               Missing comma between sublists    06963670
.*                                                                      06964660
.NOPAREN ANOP                         Parentheses not used              06965650
         AIF   (&NDX GT &L+1).UNITLEN Too many digits in number         06966640
         AIF   (&NDX LT &L).UNITLEN   Too few digits in number          06967630
         AIF   (&ERROR EQ 1).NEXTSLE  Skip insert if error encountered  06968620
&DEVNO(&SUB)  SETC '&UNIT(&SUB)'      Insert device number into array   06969610
&DEVCNT(&SUB) SETC '1'                Use default replication factor    06970600
         AGO   .NEXTSLE               Process next entry in sublist     06971590
.*                                                                      06972580
.UNITLEN ANOP                                                           06973570
&AWK     SETA  &L-1                                                     06974560
         MNOTE 8,'022 UNIT PARAMETER DEVICE NUMBER SUBLIST ENTRY &SUB M*06975550
               UST BE &AWK OR &L DIGITS.'                               06976540
&ERROR   SETB  1                      Indicates error                   06977530
         AGO   .CKCNT                 Go check replication factor       06978520
.NODEVNO MNOTE 8,'017 DEVICE NUMBER REQUIRED IN SUBLIST ENTRY &SUB FOR *06979510
               UNIT PARAMETER.'                                         06980500
&ERROR   SETB  1                      Indicates error                   06981490
.********************************************************************** 06982480
.*       Validate replication factor                                  * 06983470
.********************************************************************** 06984460
.CKCNT   ANOP                         Check replication factor          06985450
&L       SETA  3                      Maximum replication factor length 06986440
.*                                                                      06987430
         AIF   (&PAREN EQ 0).NEXTSLE  Default replication factor set    06988420
         AIF   ('&UNITD'(&NDX,1) NE ',').NEXTSLE  Bad length            06989410
&COMMA   SETA  &NDX                   Save position of comma            06990400
&NDX     SETA  &NDX+1                 First digit of number             06991390
         AIF   (&NDX EQ K'&UNITD).NOCNT  No 'count' after comma         06992380
.*                                                                      06993370
.*       Loop to validate each digit in the replication factor          06994360
.*                                                                      06995350
.UNCLOOP ANOP                         Check device replication factor   06996340
         AIF   ('&UNITD'(&NDX,1) EQ ',').OPCNT   Too many operands      06997330
         AIF   ('&UNITD'(&NDX,1) EQ ')').SETUNUM  End of digit          06998320
         AIF   ('&UNITD'(&NDX,1) LT '0').BADCNT   Not decimal           06999310
         AIF   ('&UNITD'(&NDX,1) LE '9').GOODCNT  Decimal               07000300
.BADCNT  ANOP                         Invalid DECIMAL digit             07001290
&CWK     SETC  '&UNITD'(&NDX,1)       Isolate invalid digit             07002280
         MNOTE 8,'021 INVALID DECIMAL DIGIT ''&CWK'' IN REPLICATION FAC*07003270
               TOR SUBLIST ENTRY &SUB FOR UNIT PARAMETER.'              07004260
&ERROR   SETB  1                      Indicates error                   07005250
.GOODCNT ANOP                                                           07006240
&NDX     SETA  &NDX+1                 Point to next digit in dev cnt    07007230
         AIF   (&NDX LE K'&UNITD).UNCLOOP  Check next digit             07008220
.*                                                                      07009210
.SETUNUM AIF   (&NDX NE K'&UNITD).UNNCOMA  Extra chars after ')'        07010200
         AIF   (&NDX GT &COMMA+&L+1).UNDCLEN  Count exceeds max length  07011190
         AIF   (&NDX EQ &COMMA+1).NOCNT   Null entry, default           07012180
         AIF   (&ERROR EQ 1).NEXTSLE  Go process next sublist entry     07013170
&DEVCNT(&SUB) SETC '&UNITD'(&COMMA+1,&NDX-&COMMA-1) Replication factor  07014160
         AIF   ('&DEVCNT(&SUB)' GE '1').NEXTSLE Invalid if less than 1  07015150
         MNOTE  8,'041 UNIT PARAMETER REPLICATION FACTOR SUBLIST ENTRY *07016140
               &SUB VALUE MUST BE GREATER THAN 0.'                      07017130
&ERROR   SETB  1                      Indicates error                   07018120
         AGO   .NEXTSLE               Go process next sublist entry     07019110
.NOCNT   AIF   (&NDX NE K'&UNITD).UNNCOMA  Missing comma                07020100
         AIF   (&ERROR EQ 1).NEXTSLE  Go process next sublist entry     07021090
&DEVCNT(&SUB) SETC '1'                Use default devcount              07022080
         AGO   .NEXTSLE               Process next entry in sublist     07023070
.UNDCLEN MNOTE  8,'023 UNIT PARAMETER REPLICATION FACTOR SUBLIST ENTRY *07024060
               &SUB EXCEEDS &L DIGITS.'                                 07025050
&ERROR   SETB  1                      Indicates error                   07026040
         AGO   .NEXTSLE               Go process next sublist entry     07027030
.OPCNT   MNOTE 8,'016 UNIT SUBLIST ENTRY &SUB EXCEEDS 2 OPERANDS.'      07028020
&ERROR   SETB  1                      Indicates error                   07029010
         AGO   .NEXTSLE               Process next entry in sublist     07030000
.********************************************************************** 07030990
.*       Issue MNOTE and set up to process next sublist entry         * 07031980
.********************************************************************** 07032970
.UNNCOMA MNOTE 8,'019 UNIT SUBLIST ENTRY &SUB IS MISSING A COMMA.'      07033960
&ERROR   SETB  1                      Indicates error                   07034950
         AGO   .NEXTSLE               Process next entry in sublist     07035940
.UNNULL  MNOTE 8,'018 UNIT SUBLIST ENTRY &SUB IS MISSING.'              07036930
&ERROR   SETB  1                      Indicates error                   07037920
.*                                                                      07038910
.NEXTSLE ANOP                         Process next sublist entry        07039900
&SUB     SETA  &SUB+1                 Points to next sublist entry      07040890
         AIF   (&SUB LE N'&UNIT).UNLOOP     Another entry to process... 07041880
.********************************************************************** 07042870
.*                                                                    * 07043860
.*       Validate VIO                 NO | YES                        * 07044850
.*                                                                    * 07045840
.********************************************************************** 07046830
.CKVIO   ANOP                                                           07047820
         AIF   ('&VIO' EQ '').XVIO        VIO not specified        @P6C 07048810
         AIF   ('&VIO' EQ 'NO').VIONO     NO specified             @N3C 07049800
         AIF   ('&VIO' EQ 'N').VIONO      NO specified             @N3C 07050790
&FLAG    SETA  &FLAG+&VIOF               Indicate VIO=YES specified     07051780
         AIF   ('&VIO' EQ 'YES').XVIO     Valid VIO operand (YES)  @P6C 07052770
         AIF   ('&VIO' EQ 'Y').VIOWRN     Valid VIO operand (YES)       07053760
         MNOTE 8,'043 VIO VALUE MUST BE YES OR NO.'                     07054750
&ERROR   SETB  1                      Indicates error                   07055740
         AGO   .XVIO                 Generate internal text record @P6C 07056730
.VIONO   ANOP                                                      @N3A 07057720
&FLAG    SETA  &FLAG+&VNIOF              Indicate VIO=NO specified @N3A 07058710
         AIF   ('&VIO' EQ 'N').VIOWRN    N specified               @N3A 07059700
         AGO   .XVIO                  Generate internal text       @P6C 07060690
.VIOWRN  MNOTE 0,'043 VIO VALUE SHOULD BE YES OR NO.'                   07061680
.*                                                                      07062670
.XVIO    ANOP                                                      @P6A 07063660
.********************************************************************** 07064650
.*                                                                    * 07065640
.*       Validate TOKEN               1 - 4 Decimal digits            * 07066630
.*                                    Range: 1 - 8999                 * 07067620
.*                                                                    * 07068610
.********************************************************************** 07069600
.CKTOKEN ANOP                                                      @P6A 07070590
&ITOK    SETA  0                      No Token specified           @P6A 07071580
&L       SETA  4                      Maximum TOKEN length         @P6A 07072570
&MAXVAL  SETA  8999                   Maximum TOKEN value          @P6A 07073560
         AIF   ('&TOKEN' EQ '').XTOKEN   TOKEN not specified       @P6A 07074550
         AIF   (N'&TOKEN GT 1).TOKE1    TOKEN is in sublist format @P6A 07075540
         AIF   (K'&TOKEN GT &L).TOKE3  Number of digits > maximum  @P6A 07076530
.*                                                                      07077520
&TOKVAL  SETC  '&TOKEN'               Isolate token value          @P6A 07078510
         DECIMAL  STRING=&TOKVAL      Verify if decimal            @P6A 07079500
         AIF   (&$ERR).TOKE4          Report error, if encountered @P6A 07080490
         AIF   (&TOKEN LE 0 OR &TOKEN GT &MAXVAL).TOKE2  wrong !   @P6A 07081480
.*                                                                      07082470
&ITOK    SETA  &TOKVAL                Save token value             @P6A 07083460
         AGO   .XTOKEN                Check next keyword           @P6A 07084450
.*                                                                      07085440
.TOKE1   ANOP  ,                                                   @P6A 07086430
         MNOTE 8,'014 TOKEN PARAMETER MAY NOT BE A SUBLIST.'       @P6A 07087420
&ERROR   SETB  1                      Indicates error              @P6A 07088410
         AGO   .XTOKEN                Check next keyword           @P6A 07089400
.*                                                                      07090390
.TOKE2   ANOP  ,                                                   @P6A 07091380
         MNOTE 8,'042 TOKEN VALUE MUST BE A NUMBER FROM 1 TO &MAXVAL.' *07092370
                                                                   @P6A 07093360
&ERROR   SETB  1                      Indicates error                   07094350
         AGO   .XTOKEN                Check next keyword           @P6A 07095340
.*                                                                      07096330
.TOKE3   ANOP  ,                                                   @P6A 07097320
         MNOTE 8,'023 TOKEN PARAMETER EXCEEDS &L DIGITS.'          @P6A 07098310
&ERROR   SETB  1                      Indicates error              @P6A 07099300
         AGO   .XTOKEN                Check next keyword           @P6A 07100290
.*                                                                      07101280
.TOKE4   ANOP                         Invalid DECIMAL digit        @P6A 07102270
         MNOTE 8,'021 INVALID DECIMAL DIGIT ''&CWK'' IN TOKEN PARAMETER*07103260
               .'                                                       07104250
&ERROR   SETB  1                      Indicates error              @P6A 07105240
         AGO   .XTOKEN                Check next keyword           @P6A 07106230
.*                                                                      07107220
.XTOKEN  ANOP  ,                                                   @P6A 07108210
.********************************************************************** 07109200
.*                                                                    * 07110190
.*       Validate DEVPREF             1 - 6 Decimal digits            * 07111180
.*                                    Range: 1 - 999999               * 07112170
.*                                                                    * 07113160
.********************************************************************** 07114150
.CKDEVP  ANOP                                                      @L2A 07115140
.*                                                                      07116130
&L       SETA  6                      Maximum DEVPREF length       @L2A 07117120
&MAXVAL  SETA  999999                 Maximum DEVPREF value        @L2A 07118110
         AIF   ('&DEVPREF' EQ '').XDEVP DEVPREF not specified      @L2A 07119100
         AIF   ('&TOKEN' NE '').DEVPE05  TOKEN is not allowed      @L2A 07120090
         AIF   (N'&DEVPREF GT 1).DEVPE01 DEVPREF in sublist format @L2A 07121080
         AIF   (K'&DEVPREF GT &L).DEVPE03 Number  digits > maximum @L2A 07122070
.*                                                                      07123060
&TOKVAL  SETC  '&DEVPREF'             Isolate preference value     @L2A 07124050
         DECIMAL  STRING=&TOKVAL      Verify if decimal            @L2A 07125040
         AIF   (&$ERR).DEVPE04        Report error, if encountered @L2A 07126030
         AIF   (&DEVPREF LE 0 OR &DEVPREF GT &MAXVAL).DEVPE02      @L2A 07127020
.*                                                                      07128010
&ITOK    SETA  &TOKVAL                Save preference value        @L2A 07129000
         AGO   .XDEVP                 Check next keyword           @L2A 07129990
.*                                                                      07130980
.DEVPE01 ANOP  ,                                                   @L2A 07131970
         MNOTE 8,'014 DEVPREF PARAMETER MAY NOT BE A SUBLIST.'     @L2A 07132960
&ERROR   SETB  1                      Indicates error              @L2A 07133950
         AGO   .XDEVP                 Check next keyword           @L2A 07134940
.*                                                                      07135930
.DEVPE02 ANOP  ,                                                   @L2A 07136920
         MNOTE 8,'042 DEVPREF MUST BE A NUMBER FROM 1 TO &MAXVAL.'     *07137910
                                                                   @L2A 07138900
&ERROR   SETB  1                      Indicates error                   07139890
         AGO   .XDEVP                 Check next keyword           @L2A 07140880
.*                                                                      07141870
.DEVPE03 ANOP  ,                                                   @L2A 07142860
         MNOTE 8,'023 DEVPREF PARAMETER EXCEEDS &L DIGITS.'        @L2A 07143850
&ERROR   SETB  1                      Indicates error              @L2A 07144840
         AGO   .XDEVP                 Check next keyword           @L2A 07145830
.*                                                                      07146820
.DEVPE04 ANOP                         Invalid DECIMAL digit        @L2A 07147810
         MNOTE 8,'021 INVALID DECIMAL DIGIT ''&CWK'' IN DEVPREF PARAMET*07148800
               ER.'                                                     07149790
&ERROR   SETB  1                      Indicates error              @L2A 07150780
         AGO   .XDEVP                 Check next keyword           @L2A 07151770
.*                                                                      07152760
.DEVPE05 ANOP  ,                                                   @L2A 07153750
         MNOTE 8,'051 TOKEN PARAMETER AND DEVPREF PARAMETER ARE MUTUALL*07154740
               Y EXCLUSIVE.'                                       @L2A 07155730
&ERROR   SETB  1                      Indicates error              @L2A 07156720
         AGO   .XDEVP                 and continue                 @L2A 07157710
.*                                                                      07158700
.XDEVP   ANOP  ,                                                   @L2A 07159690
.********************************************************************** 07160680
.*                                                                    * 07161670
.*       Generate internal text record                                * 07162660
.*                                                                    * 07163650
.********************************************************************** 07164640
.GENTEXT ANOP                                                           07165630
&L       SETA  4                      Max. device number length         07166620
         AIF   (&ERROR EQ 1).EXIT     Exit if an error has been found   07167610
         DC    CL8'&NAME'             Esoteric name                     07168600
         AIF   ('&UNIT' EQ '').NOUNITP  No UNIT list                    07169590
&CNO     SETC  '&SYSITRN'             EBCDIC version of statement nbr   07170580
         DC    A(@U&CNO)              Pointer to UNIT list              07171570
         AGO   .UNITCNT               Generate UNIT count               07172560
.NOUNITP ANOP                                                           07173550
         DC    A(0)                   No UNIT list                      07174540
.UNITCNT ANOP                                                           07175530
&AWK     SETA  N'&UNIT                Number of entries in UNIT list    07176520
         DC    H'&AWK'                Number of entries in UNIT list    07177510
         DC    AL1(&FLAG)             Flag byte                         07178500
         DC    XL2'0000'              Alignment                    @03A 07179490
         DC    AL3(&ITOK)             Esoteric token or preference @L2C 07180480
         AIF   (N'&UNIT EQ 0).EXIT                                      07181470
&SUB     SETA  1                      Point to UNIT array entry 1       07182460
&CWK     SETC  '@U&CNO'               Label for 1st entry in UNIT list  07183450
.GENLOOP ANOP                                                           07184440
         SPACE                                                          07185430
&CWK     DC    XL4'0000&DEVNO(&SUB)'  4 Digit Device number             07186420
         DC    H'&DEVCNT(&SUB)'       Replication factor                07187410
         DC    XL2'0000'              Reserved                          07188400
&CWK     SETC  ''                     Blank out label                   07189390
&SUB     SETA  &SUB+1                 Points to next entry in array     07190380
         AIF   (&SUB LE N'&UNIT).GENLOOP  Processes next entry in array 07191370
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to      07192360
         MNOTE ' '                     occur if NOGEN specified         07193350
         MEND                                                           07194340
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 07195330
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 07196320
         TITLE 'HCD MACRO LISTING - PARTITION PARAMETER CHECKER '  @LBA 07197310
         MACRO  --  Verify partition name                          @LBA 07198300
         PARTTEST &NAME=,&SUB=                                     @LBA 07199290
.*                                                                      07200280
         AGO   .SKIP                                               @LBA 07201270
*/********************************************************************/ 07202260
*/*                                                                  */ 07203250
*/*01*  MACRO NAME = PARTTEST                                        */ 07204240
*/*                                                                  */ 07205230
*/*01*  DESCRIPTIVE NAME = Verify if passed partition name is correct*/ 07206220
*/*                        Partition name must be alphameric         */ 07207210
*/*                                                                  */ 07208200
*/*01*  MACRO CALL =                                                 */ 07209190
*/*       label  PARTTEST NAME=string,SUB=nnnn                       */ 07210180
*/*                                                                  */ 07211170
*/*01*  FUNCTION = Checks if the passed partition name is correct    */ 07212160
*/*                                                                  */ 07213150
*/*01*  NOTES =  None.                                               */ 07214140
*/*                                                                  */ 07215130
*/*02*    DEPENDENCIES = None.                                       */ 07216120
*/*                                                                  */ 07217110
*/*01*  INPUT =   NAME= 1 to 8 characters (passed partition name)    */ 07218100
*/*               SUB= nnn          sublist element number           */ 07219090
*/*                                                                  */ 07220080
*/*01*  OUTPUT = Global &$ERR indicating whether partition name is   */ 07221070
*/*              valid.                                              */ 07222060
*/*                                                                  */ 07223050
*/********************************************************************/ 07224040
*/*                                                                     07225030
.*                                                                 @LBA 07226020
.SKIP    ANOP                                                      @LBA 07227010
         GBLB  &$ERR                  Global error flag            @LBA 07228000
         LCLA  &NDX                   Substring index              @LBA 07228990
         LCLA  &L                     Maximum partition name length@LBA 07229980
         LCLC  &CWK                   Character work variable      @LBA 07230970
.*                                                                      07231960
.********************************************************************** 07232950
.*                                                                    * 07233940
.*             Validate Partition name                                * 07234930
.*                                                                    * 07235920
.********************************************************************** 07236910
&$ERR    SETB  0                      No error                     @LBA 07237900
&NDX     SETA  1                      Points to 1st char of partition  *07238890
                                                                   @LBA 07239880
&L       SETA  8                      Maximum length of partition name *07240870
                                                                   @LBA 07241860
         AIF   (K'&NAME GT &L).PARTE01  report error, if partition name*07242850
                                        is too large               @LBA 07243840
.*                                                                      07244830
.*       Loop to validate each character of the PARTITION name          07245820
.*                                                                      07246810
.PART010 ANOP                                                      @LBA 07247800
         AIF   ('&NAME'(&NDX,1) LT 'A').PARTE02                    @LBA 07248790
         AIF   ('&NAME'(&NDX,1) LE 'I').PART020  (A-I)             @LBA 07249780
         AIF   ('&NAME'(&NDX,1) LT 'J').PARTE02                    @LBA 07250770
         AIF   ('&NAME'(&NDX,1) LE 'R').PART020  (J-R)             @LBA 07251760
         AIF   ('&NAME'(&NDX,1) LT 'S').PARTE02                    @LBA 07252750
         AIF   ('&NAME'(&NDX,1) LE 'Z').PART020  (S-Z)             @LBA 07253740
         AIF   (&NDX EQ 1).PARTE02                                 @LBA 07254730
         AIF   ('&NAME'(&NDX,1) LT '0').PARTE02                    @LBA 07255720
         AIF   ('&NAME'(&NDX,1) GT '9').PARTE02  (0-9)             @LBA 07256710
.*                                                                      07257700
.PART020 ANOP  ,                                                   @LBA 07258690
&NDX     SETA  &NDX+1                 Point to next character      @LBA 07259680
         AIF   (&NDX LE K'&NAME).PART010  Check next character     @LBA 07260670
         AGO  .XPART                  and exit                     @LBA 07261660
.*                                                                      07262650
.PARTE01 ANOP  ,                                                   @LBA 07263640
         MNOTE 8,'033 PARTITION PARAMETER SUBLIST ENTRY &SUB EXCEEDS &L*07264630
                CHARACTERS.'                                       @LBA 07265620
&$ERR    SETB  1                      Indicate error               @LBA 07266610
         AGO   .XPART                 and exit                     @LBA 07267600
.*                                                                      07268590
.PARTE02 ANOP  ,                                                   @LBA 07269580
&CWK     SETC  '&NAME'(&NDX,1)        Isolate invalid character    @LBA 07270570
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN SUBLIST ENTRY &SUB *07271560
                FOR PARTITION PARAMETER.'                          @LBA 07272550
&$ERR    SETB  1                      Indicate error               @LBA 07273540
         AGO   .XPART                 and exit                     @LBA 07274530
.*                                                                      07275520
.XPART   ANOP  ,                      End of validating partition  @LBA 07276510
         MEND                                                      @LBA 07277500
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 07278490
         TITLE 'HCD MACRO LISTING - DECIMAL TEST FOR PARAMETER '   @LBA 07279480
         MACRO  --  PARSE EACH CHARACTER OF A PARAMETER            @LBA 07280470
         DECIMAL &STRING=                                          @LBA 07281460
.*                                                                      07282450
         AGO   .SKIP                                               @LBA 07283440
*/********************************************************************/ 07284430
*/*                                                                  */ 07285420
*/*01*  MACRO NAME = DECIMAL                                         */ 07286410
*/*                                                                  */ 07287400
*/*01*  DESCRIPTIVE NAME = Test parameter if decimal                 */ 07288390
*/*                         valid values are 0 - 9 for each char     */ 07289380
*/*                                                                  */ 07290370
*/*01*  MACRO CALL =                                                 */ 07291360
*/*       label  DECIMAL  STRING=string                              */ 07292350
*/*                                                                  */ 07293340
*/*01*  FUNCTION = Checks if passed parameter is decimal             */ 07294330
*/*                                                                  */ 07295320
*/*01*  NOTES =  None.                                               */ 07296310
*/*                                                                  */ 07297300
*/*02*    DEPENDENCIES = None.                                       */ 07298290
*/*                                                                  */ 07299280
*/*01*  INPUT =   character string                                   */ 07300270
*/*                                                                  */ 07301260
*/*01*  OUTPUT = global variable &$ERR set true if error found,      */ 07302250
*/*              otherwise set false                                 */ 07303240
*/*                                                                  */ 07304230
*/********************************************************************/ 07305220
*/*                                                                     07306210
.SKIP    ANOP                                                           07307200
         GBLB  &$ERR                  Error flag                   @LBA 07308190
         GBLC  &CWK                   Character work variable      @LBA 07309180
         LCLA  &NDX                   Substring index              @LBA 07310170
.*                                                                      07311160
.********************************************************************** 07312150
.*                                                                    * 07313140
.*       Check the Input String                                       * 07314130
.*                                                                    * 07315120
.********************************************************************** 07316110
&$ERR    SETB  0                      Assume no error              @LBA 07317100
&NDX     SETA  1                      Points to 1st char of STRING @LBA 07318090
.********************************************************************** 07319080
.*       Loop to validate each character in Input string              * 07320070
.********************************************************************** 07321060
.LOOP    ANOP                                                      @LBA 07322050
         AIF   ('&STRING'(&NDX,1) LT '0').BADCHA                   @LBA 07323040
         AIF   ('&STRING'(&NDX,1) LE '9').GOODCHA  Valid digit (0-9)   *07324030
                                                                   @LBA 07325020
.*                                                                      07326010
.BADCHA  ANOP                         Invalid character            @LBA 07327000
&CWK     SETC  '&STRING'(&NDX,1)      Isolate invalid character    @LBA 07327990
&$ERR    SETB  1                      Indicate error               @LBA 07328980
         AGO   .ENDCK                 and exit                     @LBA 07329970
.*                                                                      07330960
.GOODCHA ANOP                                                      @LBA 07331950
&NDX     SETA  &NDX+1                 Point to next digit          @LBA 07332940
         AIF   (&NDX LE K'&STRING).LOOP    Check next digit        @LBA 07333930
.*                                                                      07334920
.ENDCK   ANOP                         End of checking parameter    @LBA 07335910
         MEND                                                      @LBA 07336900
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 07337890
         TITLE 'HCD MACRO LISTING - HEX TEST FOR PARAMETER '       @LBA 07338880
         MACRO  --  PARSE EACH CHARACTER OF A PARAMETER            @LBA 07339870
         HEXCHECK &STRING=                                         @LBA 07340860
.*                                                                      07341850
         AGO   .SKIP                                               @LBA 07342840
*/********************************************************************/ 07343830
*/*                                                                  */ 07344820
*/*01*  MACRO NAME = HEXCHECK                                        */ 07345810
*/*                                                                  */ 07346800
*/*01*  DESCRIPTIVE NAME = Test parameter for hexadecimal            */ 07347790
*/*                                                                  */ 07348780
*/*01*  MACRO CALL =                                                 */ 07349770
*/*       label  HEXCHECK STRING=string                              */ 07350760
*/*                                                                  */ 07351750
*/*01*  FUNCTION = Checks an Input string to be hexadecimal          */ 07352740
*/*                                                                  */ 07353730
*/*01*  NOTES =  None.                                               */ 07354720
*/*                                                                  */ 07355710
*/*02*    DEPENDENCIES = None.                                       */ 07356700
*/*                                                                  */ 07357690
*/*01*  INPUT =   STRING=                                            */ 07358680
*/*                                                                  */ 07359670
*/*01*  OUPUT  = global variable &$ERR set true if error found,      */ 07360660
*/*              otherwise set false                                 */ 07361650
*/*                                                                  */ 07362640
*/********************************************************************/ 07363630
*/*                                                                     07364620
.*                                                                      07365610
.SKIP    ANOP                                                           07366600
         GBLB  &$ERR                  Error flag                   @LBA 07367590
         GBLB  &INTERR                Internal error flag          @LEA 07368580
         GBLC  &CWK                   Character work variable      @LBA 07369570
         LCLA  &NDX                   Substring index              @LBA 07370560
.*                                                                      07371550
.********************************************************************** 07372540
.*                                                                    * 07373530
.*       Check the Input String                                       * 07374520
.*                                                                    * 07375510
.********************************************************************** 07376500
&$ERR    SETB  0                      No error                     @LBA 07377490
&INTERR  SETB  0                      Indicates no error           @LEA 07378480
&NDX     SETA  1                      Points to 1st char of STRING @LBA 07379470
.********************************************************************** 07380460
.*       Loop to validate each character in Input string              * 07381450
.********************************************************************** 07382440
.LOOP    ANOP                                                      @LBA 07383430
         AIF   ('&STRING'(&NDX,1) LT 'A').BADHEX    non-hex digit  @LBA 07384420
         AIF   ('&STRING'(&NDX,1) LE 'F').GOODHEX  hex digit  (A-F)@LBA 07385410
         AIF   ('&STRING'(&NDX,1) LT '0').BADHEX    non-hex digit  @LBA 07386400
         AIF   ('&STRING'(&NDX,1) LE '9').GOODHEX  hex digit  (0-9)@LBA 07387390
.*                                                                      07388380
.BADHEX  ANOP                         Invalid character            @LBA 07389370
&CWK     SETC  '&STRING'(&NDX,1)      Isolate invalid character    @LBA 07390360
&$ERR    SETB  1                      Indicate error               @LBA 07391350
&INTERR  SETB  1                      Indicates error              @LEA 07392340
         AGO   .ENDCK                 and exit                     @LBA 07393330
.*                                                                      07394320
.GOODHEX ANOP                                                      @LBA 07395310
&NDX     SETA  &NDX+1                 Point to next digit          @LBA 07396300
         AIF   (&NDX LE K'&STRING).LOOP    Check next digit        @LBA 07397290
.*                                                                      07398280
.ENDCK   ANOP                         End of check                 @LBA 07399270
         MEND                                                      @LBA 07400260
*/*==================================================================*/ 07401250
         TITLE 'HCD MACRO LISTING - ALPHANUMERIC TEST FOR PARAMETER '   07402240
         MACRO  --  PARSE EACH CHARACTER OF A PARAMETER                 07403230
         ALPHANUM &STRING=                                              07404220
.*                                                                      07405210
         AGO   .SKIP                                             @LEA   07406200
*/********************************************************************/ 07407190
*/*                                                              @LEA*/ 07408180
*/*01*  MACRO NAME = ALPHANUM                                    @LEA*/ 07409170
*/*                                                              @LEA*/ 07410160
*/*01*  DESCRIPTIVE NAME = Test parameter for alphanumeric       @LEA*/ 07411150
*/*                         valid values are A - Z   0 - 9       @LEA*/ 07412140
*/*                                                              @LEA*/ 07413130
*/*01*  MACRO CALL =                                             @LEA*/ 07414120
*/*       label  ALPHANUM INPUT= Character String                @LEA*/ 07415110
*/*                                                              @LEA*/ 07416100
*/*01*  FUNCTION = Checks an Input string to be alphanumeric     @LEA*/ 07417090
*/*                                                              @LEA*/ 07418080
*/*01*  NOTES =  None.                                           @LEA*/ 07419070
*/*                                                              @LEA*/ 07420060
*/*02*    DEPENDENCIES = None.                                   @LEA*/ 07421050
*/*                                                              @LEA*/ 07422040
*/*01*  INPUT =   character string                               @LEA*/ 07423030
*/*                                                              @LEA*/ 07424020
*/*01*  OUTPUT = OK                                              @LEA*/ 07425010
*/*                                                              @LEA*/ 07426000
*/********************************************************************/ 07426990
.*                                                               @LEA   07427980
.SKIP    ANOP                                                    @LEA   07428970
         GBLB  &INTERR                Internal error flag        @LEA   07429960
         GBLC  &CWK                   Character work variable    @LEA   07430950
         LCLA  &NDX                   Substring index            @LEA   07431940
.*                                                               @LEA   07432930
.*********************************************************************  07433920
.*                                                               @LEA*  07434910
.*       Check the Input String                                  @LEA*  07435900
.*                                                               @LEA*  07436890
.*********************************************************************  07437880
&INTERR  SETB  0                      No error                   @LEA   07438870
&NDX     SETA  1                      Points to 1st char of      @LEA   07439860
.*                                    STRING                     @LEA   07440850
.*********************************************************************  07441840
.*       Loop to validate each character in Input string         @LEA   07442830
.*********************************************************************  07443820
.LOOP    ANOP                                                    @LEA   07444810
         AIF   ('&STRING'(&NDX,1) LT 'A').BADCHA                 @LEA   07445800
         AIF   ('&STRING'(&NDX,1) LE 'I').GOODCHA  Valid char    @LEA   07446790
.*                                                 (A-I)         @LEA   07447780
         AIF   ('&STRING'(&NDX,1) LT 'J').BADCHA                 @LEA   07448770
         AIF   ('&STRING'(&NDX,1) LE 'R').GOODCHA  Valid char    @LEA   07449760
.*                                                 (J-R)         @LEA   07450750
         AIF   ('&STRING'(&NDX,1) LT 'S').BADCHA                 @LEA   07451740
         AIF   ('&STRING'(&NDX,1) LE 'Z').GOODCHA  Valid char    @LEA   07452730
.*                                                 (S-Z)         @LEA   07453720
         AIF   ('&STRING'(&NDX,1) LT '0').BADCHA                 @LEA   07454710
         AIF   ('&STRING'(&NDX,1) LE '9').GOODCHA  Valid char    @LEA   07455700
.*                                                 (0-9)         @LEA   07456690
.*                                                               @LEA   07457680
.BADCHA  ANOP                                 Invalid character  @LEA   07458670
&CWK     SETC  '&STRING'(&NDX,1)              Isolate invalid    @LEA   07459660
&INTERR  SETB  1                              Indicates error    @LEA   07460650
         AGO   .ENDCK                                                   07461640
.*                                            character          @LEA   07462630
.GOODCHA ANOP                                                    @LEA   07463620
&NDX     SETA  &NDX+1                         Point to next digit@LEA   07464610
         AIF   (&NDX LE K'&STRING).LOOP       Check next digit   @LEA   07465600
.ENDCK   ANOP                                 End of check       @LEA   07466590
         MEND                                                           07467580
*/*==================================================================*/ 07468570
         TITLE 'HCD MACRO LISTING - ALPHANUMERIC TEST FOR PARAMETER '   07469560
         MACRO  --  PARSE EACH CHARACTER OF A PARAMETER                 07470550
         ALPHANX  &STRING=                                              07471540
.*                                                                      07472530
         AGO   .SKIP                                             @M4A   07473520
*/********************************************************************/ 07474510
*/*                                                              @M4A*/ 07475500
*/*01*  MACRO NAME = ALPHANX                                     @M4A*/ 07476490
*/*                                                              @M4A*/ 07477480
*/*01*  DESCRIPTIVE NAME = Test parameter for alphanumeric       @M4A*/ 07478470
*/*                         valid values are A - Z   0 - 9       @M4A*/ 07479460
*/*                         and special values $,#,@             @M4A*/ 07480450
*/*                                                              @M4A*/ 07481440
*/*01*  MACRO CALL =                                             @M4A*/ 07482430
*/*       label  ALPHANX  STRING= character string               @M4A*/ 07483420
*/*                                                              @M4A*/ 07484410
*/*01*  FUNCTION = Checks an Input string to be alphanumeric     @M4A*/ 07485400
*/*                or special characters ($,#,@)                 @M4A*/ 07486390
*/*                                                              @M4A*/ 07487380
*/*01*  NOTES =  None.                                           @M4A*/ 07488370
*/*                                                              @M4A*/ 07489360
*/*02*    DEPENDENCIES = None.                                   @M4A*/ 07490350
*/*                                                              @M4A*/ 07491340
*/*01*  INPUT =   character string                               @M4A*/ 07492330
*/*                                                              @M4A*/ 07493320
*/*01*  OUTPUT = OK                                              @M4A*/ 07494310
*/*                                                              @M4A*/ 07495300
*/********************************************************************/ 07496290
.*                                                               @M4A   07497280
.SKIP    ANOP                                                    @M4A   07498270
         GBLB  &INTERR                Internal error flag        @M4A   07499260
         GBLC  &CWK                   Character work variable    @M4A   07500250
         LCLA  &NDX                   Substring index            @M4A   07501240
.*                                                               @M4A   07502230
.*********************************************************************  07503220
.*                                                               @M4A*  07504210
.*       Check the Input String                                  @M4A*  07505200
.*                                                               @M4A*  07506190
.*********************************************************************  07507180
&INTERR  SETB  0                      No error                   @M4A   07508170
&NDX     SETA  1                      Points to 1st char of      @M4A   07509160
.*                                    STRING                     @M4A   07510150
.*********************************************************************  07511140
.*       Loop to validate each character in Input string         @M4A   07512130
.*********************************************************************  07513120
.LOOP    ANOP                                                    @M4A   07514110
         AIF   ('&STRING'(&NDX,1) EQ '$').GOODCHA  Valid char    @M4A   07515100
         AIF   ('&STRING'(&NDX,1) EQ '#').GOODCHA  Valid char    @M4A   07516090
         AIF   ('&STRING'(&NDX,1) EQ '@').GOODCHA  Valid char    @M4A   07517080
.*                                                  ($,#,@)      @M4A   07518070
         AIF   ('&STRING'(&NDX,1) LT 'A').BADCHA                 @M4A   07519060
         AIF   ('&STRING'(&NDX,1) LE 'I').GOODCHA  Valid char    @M4A   07520050
.*                                                 (A-I)         @M4A   07521040
         AIF   ('&STRING'(&NDX,1) LT 'J').BADCHA                 @M4A   07522030
         AIF   ('&STRING'(&NDX,1) LE 'R').GOODCHA  Valid char    @M4A   07523020
.*                                                 (J-R)         @M4A   07524010
         AIF   ('&STRING'(&NDX,1) LT 'S').BADCHA                 @M4A   07525000
         AIF   ('&STRING'(&NDX,1) LE 'Z').GOODCHA  Valid char    @M4A   07525990
.*                                                 (S-Z)         @M4A   07526980
         AIF   ('&STRING'(&NDX,1) LT '0').BADCHA                 @M4A   07527970
         AIF   ('&STRING'(&NDX,1) LE '9').GOODCHA  Valid char    @M4A   07528960
.*                                                 (0-9)         @M4A   07529950
.*                                                               @M4A   07530940
.BADCHA  ANOP                                 Invalid character  @M4A   07531930
&CWK     SETC  '&STRING'(&NDX,1)              Isolate invalid    @M4A   07532920
&INTERR  SETB  1                              Indicates error    @M4A   07533910
         AGO   .ENDCK                                                   07534900
.*                                            character          @M4A   07535890
.GOODCHA ANOP                                                    @M4A   07536880
&NDX     SETA  &NDX+1                         Point to next digit@M4A   07537870
         AIF   (&NDX LE K'&STRING).LOOP       Check next digit   @M4A   07538860
.ENDCK   ANOP                                 End of check       @M4A   07539850
         MEND                                                           07540840
*/*==================================================================*/ 07541830
         TITLE 'HCD MACRO LISTING - NAME TEST FOR PARAMETER '           07542820
         MACRO  --  PARSE EACH CHARACTER OF A PARAMETER                 07543810
         NAMETEST  &STRING=                                             07544800
.*                                                                      07545790
         AGO   .SKIP                                             @M4A   07546780
*/********************************************************************/ 07547770
*/*                                                              @M4A*/ 07548760
*/*01*  MACRO NAME = NAMETEST                                    @M4A*/ 07549750
*/*                                                              @M4A*/ 07550740
*/*01*  DESCRIPTIVE NAME = Test parameter for alphanumeric       @M4A*/ 07551730
*/*                         valid values are A - Z   0 - 9       @M4A*/ 07552720
*/*                         and special values $,#,@             @M4A*/ 07553710
*/*                        First character must be A-Z or $,#,@  @M4A*/ 07554700
*/*                                                              @M4A*/ 07555690
*/*01*  MACRO CALL =                                             @M4A*/ 07556680
*/*       label  NAMETEST STRING= character string               @M4A*/ 07557670
*/*                                                              @M4A*/ 07558660
*/*01*  FUNCTION = Checks an Input string to be name             @M4A*/ 07559650
*/*                (alphanumeric or special ($,#,@) characters,  @M4A*/ 07560640
*/*                 first character being alphabetic or special) @M4A*/ 07561630
*/*                                                              @M4A*/ 07562620
*/*01*  NOTES =  None.                                           @M4A*/ 07563610
*/*                                                              @M4A*/ 07564600
*/*02*    DEPENDENCIES = None.                                   @M4A*/ 07565590
*/*                                                              @M4A*/ 07566580
*/*01*  INPUT =   character string                               @M4A*/ 07567570
*/*                                                              @M4A*/ 07568560
*/*01*  OUTPUT = OK                                              @M4A*/ 07569550
*/*                                                              @M4A*/ 07570540
*/********************************************************************/ 07571530
.*                                                               @M4A   07572520
.SKIP    ANOP                                                    @M4A   07573510
         GBLB  &INTERR                Internal error flag        @M4A   07574500
         GBLC  &CWK                   Character work variable    @M4A   07575490
         LCLA  &NDX                   Substring index            @M4A   07576480
.*                                                               @M4A   07577470
.*********************************************************************  07578460
.*                                                               @M4A*  07579450
.*       Check the Input String                                  @M4A*  07580440
.*                                                               @M4A*  07581430
.*********************************************************************  07582420
&INTERR  SETB  0                      No error                   @M4A   07583410
&NDX     SETA  1                      Points to 1st char of      @M4A   07584400
.*                                    STRING                     @M4A   07585390
.*********************************************************************  07586380
.*       Loop to validate each character in Input string         @M4A   07587370
.*********************************************************************  07588360
.LOOP    ANOP                                                    @M4A   07589350
         AIF   ('&STRING'(&NDX,1) EQ '$').GOODCHA  Valid char    @M4A   07590340
         AIF   ('&STRING'(&NDX,1) EQ '#').GOODCHA  Valid char    @M4A   07591330
         AIF   ('&STRING'(&NDX,1) EQ '@').GOODCHA  Valid char    @M4A   07592320
.*                                                  ($,#,@)      @M4A   07593310
         AIF   ('&STRING'(&NDX,1) LT 'A').BADCHA                 @M4A   07594300
         AIF   ('&STRING'(&NDX,1) LE 'I').GOODCHA  Valid char    @M4A   07595290
.*                                                 (A-I)         @M4A   07596280
         AIF   ('&STRING'(&NDX,1) LT 'J').BADCHA                 @M4A   07597270
         AIF   ('&STRING'(&NDX,1) LE 'R').GOODCHA  Valid char    @M4A   07598260
.*                                                 (J-R)         @M4A   07599250
         AIF   ('&STRING'(&NDX,1) LT 'S').BADCHA                 @M4A   07600240
         AIF   ('&STRING'(&NDX,1) LE 'Z').GOODCHA  Valid char    @M4A   07601230
.*                                                 (S-Z)         @M4A   07602220
         AIF   (&NDX EQ 1).BADCHA  First char not alphabetic     @M4A   07603210
         AIF   ('&STRING'(&NDX,1) LT '0').BADCHA                 @M4A   07604200
         AIF   ('&STRING'(&NDX,1) LE '9').GOODCHA  Valid char    @M4A   07605190
.*                                                 (0-9)         @M4A   07606180
.*                                                               @M4A   07607170
.BADCHA  ANOP                                 Invalid character  @M4A   07608160
&CWK     SETC  '&STRING'(&NDX,1)              Isolate invalid    @M4A   07609150
&INTERR  SETB  1                              Indicates error    @M4A   07610140
         AGO   .ENDCK                                                   07611130
.*                                            character          @M4A   07612120
.GOODCHA ANOP                                                    @M4A   07613110
&NDX     SETA  &NDX+1                         Point to next digit@M4A   07614100
         AIF   (&NDX LE K'&STRING).LOOP       Check next digit   @M4A   07615090
.ENDCK   ANOP                                 End of check       @M4A   07616080
         MEND                                                           07617070
*/*==================================================================*/ 07618060
         TITLE 'HCD MACRO LISTING - SPECIAL CHAR TEST FOR PARAMETER '   07619050
         MACRO  --  PARSE EACH CHARACTER OF A PARAMETER                 07620040
         SPECIAL &STRING=                                               07621030
.*                                                                      07622020
         AGO   .SKIP                                             @LEA   07623010
*/********************************************************************/ 07624000
*/*                                                              @LEA*/ 07624990
*/*01*  MACRO NAME = SPECIAL                                     @LEA*/ 07625980
*/*                                                              @LEA*/ 07626970
*/*01*  DESCRIPTIVE NAME = Test parameter for special character  @LEA*/ 07627960
*/*                         valid values are  " $ # @ "          @LEA*/ 07628950
*/*                                                              @LEA*/ 07629940
*/*01*  MACRO CALL =                                             @LEA*/ 07630930
*/*       label  SPECIAL  INPUT= Character String                @LEA*/ 07631920
*/*                                                              @LEA*/ 07632910
*/*01*  FUNCTION = Checks an Input string to be a special        @LEA*/ 07633900
*/*                character                                     @LEA*/ 07634890
*/*                                                              @LEA*/ 07635880
*/*01*  NOTES =  None.                                           @LEA*/ 07636870
*/*                                                              @LEA*/ 07637860
*/*02*    DEPENDENCIES = None.                                   @LEA*/ 07638850
*/*                                                              @LEA*/ 07639840
*/*01*  INPUT =   STRING=                                        @LEA*/ 07640830
*/*                                                              @LEA*/ 07641820
*/*01*  OUTPUT = OK  (via global variable)                       @LEA*/ 07642810
*/*                                                              @LEA*/ 07643800
*/********************************************************************/ 07644790
.*                                                               @LEA   07645780
.SKIP    ANOP                                                    @LEA   07646770
         GBLB  &INTERR                Internal error flag        @LEA   07647760
         GBLC  &CWK                   Character work variable    @LEA   07648750
         LCLA  &NDX                   Substring index            @LEA   07649740
.*                                                               @LEA   07650730
.*********************************************************************  07651720
.*                                                               @LEA*  07652710
.*       Check the Input String                                  @LEA*  07653700
.*                                                               @LEA*  07654690
.*********************************************************************  07655680
&INTERR  SETB  0                    No error                     @LEA   07656670
&NDX     SETA  1                    Points to 1st char of STRING @LEA   07657660
.*********************************************************************  07658650
.*       Loop to validate each character in Input string         @LEA   07659640
.*********************************************************************  07660630
.LOOP    ANOP                                                    @LEA   07661620
         AIF   ('&STRING'(&NDX,1) EQ '$').GOODSPE  Valid char $  @LEA   07662610
         AIF   ('&STRING'(&NDX,1) EQ '#').GOODSPE  Valid char #  @LEA   07663600
         AIF   ('&STRING'(&NDX,1) EQ '@').GOODSPE  Valid char @  @LEA   07664590
.*                                                               @LEA   07665580
.BADSPE  ANOP                               Invalid character    @LEA   07666570
&CWK     SETC  '&STRING'(&NDX,1)            Isolate invalid char @LEA   07667560
&INTERR  SETB  1                            Indicates error      @LEA   07668550
         AGO   .ENDSP                                            @LEA   07669540
.GOODSPE ANOP                                                    @LEA   07670530
&NDX     SETA  &NDX+1                       Point to next digit  @LEA   07671520
         AIF   (&NDX LE K'&STRING).LOOP     Check next digit     @LEA   07672510
.ENDSP   ANOP                               End of check         @LEA   07673500
         MEND                                                           07674490
*/*==================================================================*/ 07675480
         TITLE 'HCD MACRO LISTING - SPECIAL2 CHAR TEST FOR PARAMETER'   07676470
         MACRO  --  PARSE EACH CHARACTER OF A PARAMETER                 07677460
         SPECIAL2 &STRING=                                              07678450
.*                                                                      07679440
         AGO   .SKIP                                             @LEA   07680430
*/********************************************************************/ 07681420
*/*                                                              @LEA*/ 07682410
*/*01*  MACRO NAME = SPECIAL2                                    @LEA*/ 07683400
*/*                                                              @LEA*/ 07684390
*/*01*  DESCRIPTIVE NAME = Test parameter for special character  @LEA*/ 07685380
*/*                         valid values are  " - : + _ "        @LEA*/ 07686370
*/*                                                              @LEA*/ 07687360
*/*01*  MACRO CALL =                                             @LEA*/ 07688350
*/*       label  SPECIAL  INPUT= Character String                @LEA*/ 07689340
*/*                                                              @LEA*/ 07690330
*/*01*  FUNCTION = Checks an Input string to be a special        @LEA*/ 07691320
*/*                character                                     @LEA*/ 07692310
*/*                                                              @LEA*/ 07693300
*/*01*  NOTES =  None.                                           @LEA*/ 07694290
*/*                                                              @LEA*/ 07695280
*/*02*    DEPENDENCIES = None.                                   @LEA*/ 07696270
*/*                                                              @LEA*/ 07697260
*/*01*  INPUT =   STRING=                                        @LEA*/ 07698250
*/*                                                              @LEA*/ 07699240
*/*01*  OUTPUT = OK  (via global variable)                       @LEA*/ 07700230
*/*                                                              @LEA*/ 07701220
*/********************************************************************/ 07702210
.SKIP    ANOP                                                    @LEA   07703200
         GBLB  &INTERR                Internal error flag        @LEA   07704190
         GBLC  &CWK                   Character work variable    @LEA   07705180
         LCLA  &NDX                   Substring index            @LEA   07706170
.*                                                               @LEA   07707160
.*********************************************************************  07708150
.*                                                               @LEA*  07709140
.*       Check the Input String                                  @LEA*  07710130
.*                                                               @LEA*  07711120
.*********************************************************************  07712110
&INTERR  SETB  0                    No error                     @LEA   07713100
&NDX     SETA  1                    Points to 1st char of STRING @LEA   07714090
.*********************************************************************  07715080
.*       Loop to validate each character in Input string         @LEA   07716070
.*********************************************************************  07717060
.LOOP    ANOP                                                    @LEA   07718050
         AIF   ('&STRING'(&NDX,1) EQ '-').GOODSP2  Valid char -  @LEA   07719040
         AIF   ('&STRING'(&NDX,1) EQ ':').GOODSP2  Valid char :  @LEA   07720030
         AIF   ('&STRING'(&NDX,1) EQ '+').GOODSP2  Valid char +  @LEA   07721020
         AIF   ('&STRING'(&NDX,1) EQ '_').GOODSP2  Valid char _  @LEA   07722010
.BADSP2  ANOP                               Invalid character    @LEA   07723000
&CWK     SETC  '&STRING'(&NDX,1)            Isolate invalid char @LEA   07723990
&INTERR  SETB  1                            Indicates error      @LEA   07724980
         AGO   .ENDSP2                                           @LEA   07725970
.GOODSP2 ANOP                                                    @LEA   07726960
&NDX     SETA  &NDX+1                       Point to next digit  @LEA   07727950
         AIF   (&NDX LE K'&STRING).LOOP     Check next digit     @LEA   07728940
.ENDSP2  ANOP                               End of check         @LEA   07729930
         MEND                                                           07730920
*/*==================================================================*/ 07731910
         TITLE 'HCD MACRO LISTING - STRLEN DETERMINES LENGTH OF STRING' 07732900
         MACRO  --  PARSE EACH CHARACTER OF A STRING                    07733890
         STRLEN   &STRING=                                              07734880
.*                                                                      07735870
         AGO   .SKIP                                             @L2A   07736860
*/********************************************************************/ 07737850
*/*                                                              @L2A*/ 07738840
*/*01*  MACRO NAME = STRLEN                                      @L2A*/ 07739830
*/*                                                              @L2A*/ 07740820
*/*01*  DESCRIPTIVE NAME = Determines length of a parameter      @L2A*/ 07741810
*/*                         string                               @L2A*/ 07742800
*/*                                                              @L2A*/ 07743790
*/*01*  MACRO CALL =                                             @L2A*/ 07744780
*/*       label  STRLEN   INPUT= Character String                @L2A*/ 07745770
*/*                                                              @L2A*/ 07746760
*/*01*  FUNCTION = Determines length of input string             @L2A*/ 07747750
*/*                                                              @L2A*/ 07748740
*/*01*  NOTES =  None.                                           @L2A*/ 07749730
*/*                                                              @L2A*/ 07750720
*/*02*    DEPENDENCIES = None.                                   @L2A*/ 07751710
*/*                                                              @L2A*/ 07752700
*/*01*  INPUT =   STRING=                                        @L2A*/ 07753690
*/*                                                              @L2A*/ 07754680
*/*01*  OUTPUT = GBLLEN (via global variable)                    @L2A*/ 07755670
*/*                                                              @L2A*/ 07756660
*/********************************************************************/ 07757650
.SKIP    ANOP                                                    @L2A   07758640
         GBLA  &$STRLEN               Length of string           @L2A   07759630
         LCLA  &NDX                   Substring index            @L2A   07760620
.*                                                               @L2A   07761610
.*********************************************************************  07762600
.*                                                               @L2A*  07763590
.*       Check the Input String                                  @L2A*  07764580
.*                                                               @L2A*  07765570
.*********************************************************************  07766560
&NDX     SETA  1                    Points to 1st char of STRING @L2A   07767550
&$STRLEN SETA  0                            Initialize length    @L2A   07768540
.*********************************************************************  07769530
.*       Loop to validate each character in Input string         @L2A   07770520
.*********************************************************************  07771510
.LOOP    ANOP                                                    @L2A   07772500
         AIF   (&NDX EQ K'&STRING).GOODST0                              07773490
         AIF   (('&STRING'(&NDX,2) EQ '''''') OR                       *07774480
               ('&STRING'(&NDX,2) EQ '&&')).GOODST1              @L2A   07775470
.GOODST0 ANOP  ,                                                 @L2A   07776460
&NDX     SETA  &NDX+1                       Increments to next   @L2A   07777450
         AGO   .ENDSP1                                           @L2A   07778440
.GOODST1 ANOP                                                    @L2A   07779430
&NDX     SETA  &NDX+2                       Point to next digit  @L2A   07780420
.ENDSP1  ANOP  ,                                                 @L2A   07781410
&$STRLEN SETA  &$STRLEN+1                   Increment string len @L2A   07782400
         AIF   (&NDX LE K'&STRING).LOOP     Check next digit     @L2A   07783390
.ENDSP2  ANOP                               End of check         @L2A   07784380
         MEND                                                           07785370
*/*==================================================================*/ 07786360
*/*==================================================================*/ 07787350
         TITLE 'HCD MACRO LISTING - RDEVICE - REAL DEVICE DEFINITION'   07788340
         MACRO  --  PARSE RDEVICE STATEMENT                             07789330
&SYMBOL  RDEVICE &ADAPTER=,&AFP=,&BASEADD=,&CHARS=,&CLASS=,            *07790320
               &CPNAME=,&CUTYPE=,&DEVNO=,&DEVTYPE=,&DPMSIZE=,          *07791310
               &DEST=,&FCB=,&FEATURE=,&FLASH=,&FOLD=,&FORM=,           *07792300
               &IMAGE=,&INDEX=,&MODEL=,&SEP=,&SETADDR=,                *07793290
               &SHARED=,&ADDRESS=,&UIRATE=                              07794280
.*                                                                      07795270
         AGO   .SKIP                                             @LEA   07796260
*/********************************************************************/ 07797250
*/*01*  MACRO NAME = RDEVICE                                     @LEA*/ 07798240
*/*                                                              @LEA*/ 07799230
*/*01*  DESCRIPTIVE NAME = Real I/O Device characteristics.      @LEA*/ 07800220
*/*                                                              @LEA*/ 07801210
*/*01*  MACRO CALL =                                             @LEA*/ 07802200
*/*       label  RDEVICE  ADAPTER= adapter                       @LEA*/ 07803190
*/*                       ADDRESS= A SYNONYM FOR DEVNO           @LEA*/ 07804180
*/*                       AFP=     YES | NO                      @LEA*/ 07805170
*/*                       BASEADD= device number                 @LEA*/ 07806160
*/*                       CHARS=   name of default UCS buffer    @LEA*/ 07807150
*/*                                image                         @LEA*/ 07808140
*/*                       CLASS=   cl | (cl<,cl>...) | * | NONE  @LEA*/ 07809130
*/*                       CPNAME=  name of emulation program     @LEA*/ 07810120
*/*                       CUTYPE=  control unit type and model   @LEA*/ 07811110
*/*                       DEST=    destination value(s)          @LEA*/ 07812100
*/*                       DEVNO=   number | (number,nnn)         @LEA*/ 07813090
*/*                       DEVTYPE= device type                   @LEA*/ 07814080
*/*                       DPMSIZE= maximum queue size for 3800   @LEA*/ 07815070
*/*                       FCB=     name of default FCB image     @LEA*/ 07816060
*/*                       FEATURE= name | (name<,name>...)       @LEA*/ 07817050
*/*                       FLASH=   name of flash overlay         @LEA*/ 07818040
*/*                       FOLD=    YES | NO                      @LEA*/ 07819030
*/*                       FORM=    operform | * | STANDARD       @LEA*/ 07820020
*/*                       IMAGE=   name of image library         @LEA*/ 07821010
*/*                       INDEX=   printing start position       @LEA*/ 07822000
*/*                       MODEL=   model number                  @LEA*/ 07822990
*/*                       SEP=     YES | NO                      @LEA*/ 07823980
*/*                       SETADDR= set address command           @LEA*/ 07824970
*/*                       SHARED=  YES | NO                      @LEA*/ 07825960
*/*                       UIRATE=  decimal value|DEFAULT|INFINITY@LEA*/ 07826950
*/*                                                              @LEA*/ 07827940
*/*01*  FUNCTION = Describes:                                    @LEA*/ 07828930
*/*              - The real I/O device number                    @LEA*/ 07829920
*/*              - The device characteristics                    @LEA*/ 07830910
*/*                                                              @LEA*/ 07831900
*/*01*  NOTES =  None.                                           @LEA*/ 07832890
*/*                                                              @LEA*/ 07833880
*/*02*    DEPENDENCIES = None.                                   @LEA*/ 07834870
*/*                                                              @LEA*/ 07835860
*/*01*  INPUT =   ADAPTER= 1 to 5 alphanumeric Character         @LEA*/ 07836850
*/*               ADDRESS= a synonym for DEVNO                   @LEA*/ 07837840
*/*               AFP=     YES | NO                              @LEA*/ 07838830
*/*               BASEADD= 1 to 4 hex digit device number        @LEA*/ 07839820
*/*               CHARS=   1 to 4 characters                     @LEA*/ 07840810
*/*               CLASS=   1 to 8 values, each consisting of 1   @LEA*/ 07841800
*/*                               alphanumeric Character         @LEA*/ 07842790
*/*                        or                                    @LEA*/ 07843780
*/*                          string of 1..8 alphanumeric         @LEA*/ 07844770
*/*                          characters                          @LEA*/ 07845760
*/*                        or                                    @LEA*/ 07846750
*/*                          the Keyword '*'                     @LEA*/ 07847740
*/*                        or                                    @LEA*/ 07848730
*/*                          the Keyword 'NONE'                  @LEA*/ 07849720
*/*               CPNAME=  1 to 8 alphanumeric character name    @LEA*/ 07850710
*/*               CUTYPE=  valid types are 3880-11 | 3880-21     @LEA*/ 07851700
*/*               DEST=    1 to 4 values, each up to 8 alpha-    @LEA*/ 07852690
*/*                           numeric characters                 @LEA*/ 07853680
*/*                        It is only checked for correct number @LEA*/ 07854670
*/*                          of values (up to 4) and correct     @LEA*/ 07855660
*/*                          lenth of each operand (1...8)       @LEA*/ 07856650
*/*           #   DEVNO=   1 or 2 sublist entries:               @LEA*/ 07857640
*/*                          1 to 4 hex digit device number,     @LEA*/ 07858630
*/*                          followed by an optional 1 to 4      @LEA*/ 07859620
*/*                          decimal digit replication count     @LEA*/ 07860610
*/*           #   DEVTYPE= 1 to 8 alphanumeric characters        @LEA*/ 07861600
*/*               DPMSIZE= 1 decimal digit, range 1..9           @LEA*/ 07862590
*/*               FCB=     1 to 4 character name                 @LEA*/ 07863580
*/*               FEATURE= feature name list (1 - 10 characters) @LEA*/ 07864570
*/*               FLASH=   1 to 8 character name                 @LEA*/ 07865560
*/*               FOLD=    YES | NO                              @LEA*/ 07866550
*/*               FORM=    1 to 8 character | * | STANDARD       @LEA*/ 07867540
*/*               IMAGE=   1 to 8 character name                 @LEA*/ 07868530
*/*               INDEX=   1 - 31                                @LEA*/ 07869520
*/*               MODEL=   1 to 4 alphameric characters          @LEA*/ 07870510
*/*               SEP=     YES | NO                              @LEA*/ 07871500
*/*               SETADDR= 0 - 4                                 @LEA*/ 07872490
*/*               SHARED=  YES | NO                              @LEA*/ 07873480
*/*               UIRATE=  decimal value                         @LEA*/ 07874470
*/*                                                              @LEA*/ 07875460
*/*           #   - required Keyword                             @LEA*/ 07876450
*/*                                                              @LEA*/ 07877440
*/*01*  OUTPUT = Internal text                                   @LEA*/ 07878430
*/*                                                              @LEA*/ 07879420
*/********************************************************************/ 07880410
.*                                                                      07881400
.SKIP    ANOP                                                    @LEA   07882390
         GBLA  &SYSITRN               HCD statement number       @LEA   07883380
         GBLB  &ERROR                 Error flag                 @LEA   07884370
         GBLB  &INTERR                Internal error flag        @LEA   07885360
         GBLC  &CWK                   Character work variable    @LEA   07886350
         LCLB  &SUBLI                 CLASS in sublist indicator @LEA   07887340
         LCLA  &AWK                   Arithmetic work variable   @LEA   07888330
         LCLA  &L                     Max or req'd operand length@LEA   07889320
         LCLA  &MAXSUB                Max nbr of sublist entries @LEA   07890310
         LCLA  &MAXVAL                Maximum value of operand   @LEA   07891300
         LCLA  &NDX                   Substring index            @LEA   07892290
         LCLA  &IND                   Substring index            @LEA   07893280
         LCLA  &SUB                   Sublist element number     @LEA   07894270
         LCLA  &XPRMC                 Count of parameters        @LEA   07895260
         LCLA  &XLEN                  Length of parameter        @LEA   07896250
         LCLC  &PARM                  name of parameter for mnote@LEA   07897240
         LCLC  &CKTY                  set type of digit          @LEA   07898230
         LCLC  &CNO                   EBCDIC version of SYSITRN  @LEA   07899220
         GBLC  &ADDR                  Common name for &ADDRESS   @LEA   07900210
.*                                       and  &DEVNO             @LEA   07901200
         GBLC  &DVNO                  current DEVNO or ADDRESS   @LEA   07902190
         GBLC  &REPL                  saved replication factor   @LEA   07903180
         GBLC  &DEVTYP                changed DEVTYPE            @LEA   07904170
         GBLC  &NEWDEST               changed DEST               @LEA   07905160
         LCLC  &TEST                  variable for single char   @LEA   07906150
.*                                    check                      @LEA   07907140
         ACTR  10000                  Set for infinite loop      @LEA   07908130
.*                                    control                    @LEA   07909120
.*                                                                      07910110
.*********************************************************************  07911100
.*                                                               @LEA*  07912090
.*       START PROCESSING RDEVICE STATEMENTS                     @LEA*  07913080
.*                                                               @LEA*  07914070
.*********************************************************************  07915060
.*                                                               @LEA   07916050
&XPRMC   SETA    0                    initially no parameter     @LEA   07917040
.*                                       specified               @LEA   07918030
&SYMBOL  TXTHDR RDEVICE               Build header for RDEVICE          07919020
.*                                    record                     @LEA   07920010
.*                                                                      07921000
.********************************************************************** 07921990
.*                                                                    * 07922980
.*       Check if unrecognized parameters are specified               * 07923970
.*                                                                    * 07924960
.********************************************************************** 07925950
         AIF   (N'&SYSLIST EQ 0).XPOS80    No positional parameter @P3A 07926940
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @P3A 07927930
&ERROR   SETB  1                  Indicate error                   @P3A 07928920
         AGO   .XPOS80            and continue                     @P3A 07929910
.*                                                                      07930900
.XPOS80  ANOP  ,                                                   @P3A 07931890
.*********************************************************************  07932880
.*                                                               @LEA*  07933870
.*       Validate ADAPTER             1 - 5 characters           @LEA*  07934860
.*                                    A - Z and 0 - 9            @LEA*  07935850
.*                                                               @LEA*  07936840
.*********************************************************************  07937830
.CKADA   ANOP                                                    @LEA   07938820
&PARM    SETC  'ADAPTER'                 Set parameter for mnote @LEA   07939810
&L       SETA  5                         Maximum ADAPTER length  @LEA   07940800
         AIF   ('&ADAPTER' EQ '').ENDADA ADAPTER not specified   @LEA   07941790
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA   07942780
.*                                          parameters           @LEA   07943770
         AIF   (N'&ADAPTER GT 1).ADASUB  ADAPTER is in sublist   @LEA   07944760
.*                                          format               @LEA   07945750
         AIF   (K'&ADAPTER LE &L).ADALEN Number of characters    @LEA   07946740
         MNOTE 8,'033 &PARM PARAMETER EXCEEDS &L CHARACTERS.'    @LEA   07947730
&ERROR   SETB  1                         Indicates error         @LEA   07948720
         AGO   .ENDADA                                           @LEA   07949710
.ADALEN  ANOP                                                    @LEA   07950700
&XLEN    SETA  &XLEN+5                   Increment length of     @LEA   07951690
.*                                          parameters           @LEA   07952680
         ALPHANUM STRING=&ADAPTER        check ADAPTER to be     @LEA   07953670
.*                                          alphanumeric         @LEA   07954660
         AIF   (&INTERR).ADAERR          invalid character found @LEA   07955650
         AGO   .ENDADA                                           @LEA   07956640
.ADAERR  ANOP                                                    @LEA   07957630
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN &PARM PARAMETER'    07958620
&ERROR   SETB  1                         Indicates error         @LEA   07959610
         AGO   .ENDADA                                           @LEA   07960600
.*                                                               @LEA   07961590
.ADASUB  ANOP                                                    @LEA   07962580
         MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'     @LEA   07963570
&ERROR   SETB  1                         Indicates error         @LEA   07964560
.*                                                               @LEA   07965550
.ENDADA  ANOP                                                    @LEA   07966540
.*********************************************************************  07967530
.*                                                               @LEA*  07968520
.*       Validate DEST           checked is only                 @LEA*  07969510
.*                                - valid number of operands (4) @LEA*  07970500
.*                                - valid length of operand  (8) @LEA*  07971490
.*********************************************************************  07972480
.CKDEST  ANOP                                                    @LEA   07973470
&PARM    SETC  'DEST'                    Set parameter for mnote @LEA   07974460
         AIF   ('&DEST' EQ '').DEEND     DEST not specified      @LEA   07975450
&COUNT   SETA  N'&DEST                   Save number of operands @LEA   07976440
&SUB     SETA  1                         Point to 1st DEST       @LEA   07977430
.*                                          operand              @LEA   07978420
&MAXSUB  SETA  4                         Maximum number of       @LEA   07979410
.*                                          operands             @LEA   07980400
&L       SETA  8                         Length of DEST operand  @LEA   07981390
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA   07982380
.*                                          parameters           @LEA   07983370
         AIF   ('&DEST' EQ '*').VALID    Valid operand           @LEA   07984360
         AIF   ('&DEST' EQ 'OFF').VALID  Valid operand           @LEA   07985350
         AIF   (N'&DEST GE 1).DELOOP     Operand is in sublist   @LEA   07986340
.*                                          format               @LEA   07987330
.DELOOP  ANOP                                                    @LEA   07988320
         AIF   (N'&DEST GT &MAXSUB).DE1OP     Too many operands  @LEA   07989310
.********************************************************************   07990300
.*       Loop to validate each DEST operand                      @LEA   07991290
.********************************************************************   07992280
.DELOOPB ANOP                                                    @LEA   07993270
&NDX     SETA  1                                                 @LEA   07994260
         AIF   ('&DEST(&SUB)' EQ '').DENULL   Empty operand      @LEA   07995250
         AIF   (K'&DEST(&SUB) LE &L).NXTDE    Correct operand    @LEA   07996240
.*                                               length          @LEA   07997230
         MNOTE 8,'033 &PARM PARAMETER SUBLIST ENTRY ''&SUB'' EXCEEDS   C07998220
               &L CHARACTERS.'                                   @LEA   07999210
&ERROR   SETB  1                         Indicate error          @LEA   08000200
.NXTDE   ANOP                            Proceed to next operand @LEA   08001190
&SUB     SETA  &SUB+1                    Points to next sublist  @LEA   08002180
         AIF   (&SUB LE N'&DEST).DELOOPB                         @LEA   08003170
         AGO   .DEEND1                                           @LEA   08004160
.DENULL  ANOP                                                    @LEA   08005150
         MNOTE 8,'018 &PARM SUBLIST ENTRY ''&SUB'' MISSING.'     @LEA   08006140
&ERROR   SETB  1                         Indicate error          @LEA   08007130
         AGO   .DEEND                                            @LEA   08008120
.DE1OP   ANOP                                                    @LEA   08009110
         MNOTE 8,'015 &PARM PARAMETER EXCEEDS ''&MAXSUB'' SUBLIST ENTRI*08010100
               ES.'                                              @LEA   08011090
&ERROR   SETB  1                         Indicate error          @LEA   08012080
         AGO   .DEEND                                            @LEA   08013070
.VALID   ANOP                                                    @LEA   08014060
&XLEN    SETA  &XLEN+&L                  Length of parameter     @LEA   08015050
.*                                          entry                @LEA   08016040
         AGO   .DEEND                                            @LEA   08017030
.DEEND1  ANOP                                                    @LEA   08018020
&XLEN    SETA  &XLEN+(&COUNT*&L)         Increment parameter len @LEA   08019010
.DEEND   ANOP                                                    @LEA   08020000
.*********************************************************************  08020990
.*                                                               @LEA*  08021980
.*       Validate DEVNO        (number         , count)          @LEA*  08022970
.*            or ADDRESS        1..4 hex digit , 1..4 dec digit  @LEA*  08023960
.*                              required       , optional        @LEA*  08024950
.********************************************************************   08025940
.CKDEVN  ANOP                                                    @LEA   08026930
&PARM    SETC  'DEVNO/ADDRESS'       Set message parameter       @LEA   08027920
&MAXSUB  SETA  2                     Maximum number of operands  @LEA   08028910
         AIF   ('&DEVNO' EQ '' AND '&ADDRESS' EQ '').NOADDR      @LEA   08029900
         AIF   ('&DEVNO' NE '' AND '&ADDRESS' NE '').INVCOM      @LEA   08030890
         AIF   ('&DEVNO' EQ '').CKADDR  Keyword ADDRESS spec     @LEA   08031880
         AGO   .CKDEV1                  Keyword DEVNO specified  @LEA   08032870
.CKADDR  ANOP                                                    @LEA   08033860
         AIF   (N'&ADDRESS GT &MAXSUB).ADOPER Too many operands  @LEA   08034850
&ADDR    SETC  '&ADDRESS'                Save wohle operand      @LEA   08035840
&DVNO    SETC  '&ADDRESS(1)'             Save DEVICE NUMBER      @LEA   08036830
&REPL    SETC  '&ADDRESS(2)'             Replication factor      @LEA   08037820
         AGO   .CKDEV                    Check Address           @LEA   08038810
.*                                                                      08039800
.CKDEV1  ANOP                                                    @LEA   08040790
         AIF   (N'&DEVNO GT &MAXSUB).ADOPER   Too many operands  @LEA   08041780
&ADDR    SETC  '&DEVNO'                  Save whole operand      @LEA   08042770
&DVNO    SETC  '&DEVNO(1)'               Save DEVICE NUMBER      @LEA   08043760
&REPL    SETC  '&DEVNO(2)'               Save Replication factor @LEA   08044750
.*                                                                      08045740
.CKDEV   ANOP                                                           08046730
         AIF   ('&DVNO' EQ '' AND '&REPL' NE '').NODEVNO                08047720
&L       SETA  4                         Maximum length of device@LEA   08048710
.*                                          number               @LEA   08049700
         AIF   (K'&DVNO LE &L ).DNLEN     Number of digits       @LEA   08050690
         MNOTE 8,'022 &PARM PARAMETER DEVICE NUMBER SUBLIST ENTRY MAY B*08051680
               E UP TO &L DIGITS.'                               @LEA   08052670
&ERROR   SETB  1                              Indicates error    @LEA   08053660
.DNLEN   ANOP                                                    @LEA   08054650
&NDX     SETA  1                              Points to 1st      @LEA   08055640
.*                                            digit of device no @LEA   08056630
.*********************************************************************  08057620
.*       Loop to validate each digit in the device number (DEVNO)@LEA   08058610
.*********************************************************************  08059600
.DNLOOP  ANOP                                                    @LEA   08060590
&CKTY    SETC 'HEX'                     set type of digit        @LEA   08061580
         HEXCHECK STRING=&DVNO          check DEVNO to be hex    @LEA   08062570
         AIF   (&INTERR).DEVERR          DEVNO not hex           @LEA   08063560
         AGO   .CKACNT                   Go check replication    @LEA   08064550
.*                                         factor                @LEA   08065540
.DEVERR  ANOP                                                    @LEA   08066530
         MNOTE 8,'021 INVALID &CKTY DIGIT ''&CWK'' IN &PARM PARAMETER'  08067520
&ERROR   SETB  1                              Indicates error    @LEA   08068510
         AGO   .ENDDEV                                           @LEA   08069500
.*                                                               @LEA   08070490
.NODEVNO MNOTE 8,'017 DEVICE NUMBER REQUIRED IN SUBLIST ENTRY FOR &PARM*08071480
                 PARAMETER.'                                     @LEA   08072470
&ERROR   SETB  1                              Indicates error    @LEA   08073460
         AGO   .ENDDEV                                           @LEA   08074450
.*********************************************************************  08075440
.*                             Validate replication factor       @LEA*  08076430
.*********************************************************************  08077420
.CKACNT  ANOP                                                    @LEA   08078410
&L       SETA  4                      Maximum replication factor @LEA   08079400
.*                                           length              @LEA   08080390
&MAXVAL  SETA  4095                   Maximum replication factor @LEA   08081380
         AIF   ('&REPL' EQ '').ENDDEV        Count not specified @LEA   08082370
         AIF   (K'&REPL LE &L ).DCLEN        Number of digits    @LEA   08083360
         MNOTE 8,'023 &PARM PARAMETER REPLICATION FACTOR SUBLIST ENTRY *08084350
               EXCEEDS &L DIGITS.'                               @LEA   08085340
&ERROR   SETB  1                              Indicates error    @LEA   08086330
.DCLEN   ANOP                                                    @LEA   08087320
&NDX     SETA  1                         Points to 1st digit of  @LEA   08088310
.*                                         device count          @LEA   08089300
         AIF   ('&REPL' LT '1').NOTZERO    Invalid if less       @LEA   08090290
.*                                                than 1         @LEA   08091280
.*********************************************************************  08092270
.*       Loop to validate each digit in the replication factor   @LEA   08093260
.*********************************************************************  08094250
.DCLOOP  ANOP                                                    @LEA   08095240
&CKTY    SETC 'DECIMAL'                 set type of digit        @LEA   08096230
         AIF   ('&REPL'(&NDX,1) LT '0').BADDC   Not decimal      @LEA   08097220
         AIF   ('&REPL'(&NDX,1) LE '9').GOODDC  Good digit (0-9) @LEA   08098210
.*                                                               @LEA   08099200
.BADDC   ANOP                         Invalid DECIMAL digit      @LEA   08100190
&CWK     SETC  '&REPL'(&NDX,1)        Isolate invalid digit      @LEA   08101180
         MNOTE 8,'021 INVALID &CKTY DIGIT ''&CWK'' IN REPLICATION FACTO*08102170
               R SUBLIST ENTRY FOR &PARM PARAMETER.'             @LEA   08103160
&ERROR   SETB  1                         Indicates error         @LEA   08104150
&AWK     SETA  1                         Indicate invalid digit  @LEA   08105140
.GOODDC  ANOP                                                    @LEA   08106130
&NDX     SETA  &NDX+1                 Points to next digit in    @LEA   08107120
.*                                         device count          @LEA   08108110
         AIF   (&NDX LE K'&REPL).DCLOOP    Check next digit      @LEA   08109100
         AIF   (&AWK EQ 1).ENDDEV                                @LEA   08110090
         AIF   (&REPL GE 1 AND &REPL LE &MAXVAL).ENDDEV          @LEA   08111080
.*                                                               @LEA   08112070
         MNOTE 8,'042 &PARM PARAMETER REPLICATION FACTOR VALUE MUST BE *08113060
               A NUMBER FROM 1 TO &MAXVAL.'                      @LEA   08114050
&ERROR   SETB  1                      Indicates error            @LEA   08115040
         AGO   .ENDDEV                Check next keyword         @LEA   08116030
.NOTZERO MNOTE 8,'041 &PARM PARAMETER REPLICATION FACTOR VALUE MUST BE *08117020
               GREATER THAN 0.'                                  @LEA   08118010
&ERROR   SETB  1                      Indicates error            @LEA   08119000
         AGO   .ENDDEV                Check next keyword         @LEA   08119990
.ADOPER  MNOTE 8,'015 &PARM PARAMETER EXCEEDS ''&MAXSUB'' SUBLIST ENTRI*08120980
               ES.'                                              @LEA   08121970
.*                                                               @LEA   08122960
&ERROR   SETB  1                      Indicates error            @LEA   08123950
         AGO   .ENDDEV                Check next keyword         @LEA   08124940
.NOADDR  MNOTE 8,'002 &PARM KEYWORD NOT SPECIFIED.'              @LEA   08125930
&ERROR   SETB  1                      Indicates error            @LEA   08126920
         AGO   .ENDDEV                                           @LEA   08127910
.INVCOM  MNOTE 8,'001 INVALID COMBINATION OF OPERANDS.'          @LEA   08128900
&ERROR   SETB  1                              Indicates error    @LEA   08129890
         AGO   .ENDDEV                                           @LEA   08130880
.ENDDEV  ANOP                         Check next keyword         @LEA   08131870
.*********************************************************************  08132860
.*                                                               @LEA*  08133850
.*       Validate DEVTYPE             1 - 8 characters           @LEA*  08134840
.*                required            A - Z  0 - 9               @LEA*  08135830
.*********************************************************************  08136820
.CKDEVT  ANOP                                                    @LEA   08137810
&PARM    SETC  'DEVTYPE'                 Set parameter for mnote @LEA   08138800
&L       SETA  8                          Maximum DEVTYPE length @LEA   08139790
&DEVTYP  SETC  '&DEVTYPE'                 Save Devicetype        @LEA   08140780
         AIF   ('&DEVTYPE' EQ '').NODEVT  DEVTYPE not specified  @LEA   08141770
         AIF   (N'&DEVTYPE GT 1).SUBUNIT  DEVTYPE is in sublist  @LEA   08142760
.*                                           format              @LEA   08143750
         AIF   (K'&DEVTYPE LE &L).DEVCHAR maximum Number of      @LEA   08144740
.*                                           Characters          @LEA   08145730
         MNOTE 8,'033 &PARM PARAMETER EXCEEDS &L CHARACTERS.'    @LEA   08146720
&ERROR   SETB  1                         Indicates error         @LEA   08147710
         AGO   .ENDDEVT                  Check next keyword      @LEA   08148700
.SUBUNIT MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'     @LEA   08149690
&ERROR   SETB  1                         Indicates error         @LEA   08150680
         AGO   .ENDDEVT                  Check next keyword      @LEA   08151670
.NODEVT  MNOTE 8,'002 &PARM KEYWORD NOT SPECIFIED.'              @LEA   08152660
&ERROR   SETB  1                         Indicates error         @LEA   08153650
         AGO   .ENDDEVT                  Check next keyword      @LEA   08154640
.DEVCHAR ANOP                                                    @LEA   08155630
         AIF   ('&DEVTYPE' EQ 'FB-512').FBCH1 if FB-512          @LEA   08156620
         ALPHANUM STRING=&DEVTYPE        Check the characters    @LEA   08157610
         AIF   (&INTERR).INVCHAR         Invalid characters found@LEA   08158600
         AIF   ('&DEVTYPE' EQ '3330').DEVCH1  if Devicetype 3330 @LEA   08159590
         AIF   ('&DEVTYPE' EQ '3350').CUCH    if Devicetype 3350 @LEA   08160580
         AGO   .ENDDEVT                  Check next Keyword      @LEA   08161570
.DEVCH1  ANOP                                                           08162560
         AIF   ('&FEATURE' EQ 'VUA').DEVCH2   and FEATURE = VUA  @LEA   08163550
         AGO   .ENDDEVT                  Check next Keyword      @LEA   08164540
.DEVCH2  ANOP                                                           08165530
&DEVTYP  SETC  '3330V'                     change DEVICE TYPE    @LEA   08166520
         AGO   .ENDDEVT                  Check next Keyword      @LEA   08167510
.FBCH1   ANOP                                                           08168500
&DEVTYP  SETC  'FB512'                     change DEVICE TYPE    @LEA   08169490
         AGO   .ENDDEVT                  Check next Keyword      @LEA   08170480
.*                                                                      08171470
.CUCH    AIF   ('&CUTYPE' EQ '3880-11').CU0P   if CU = 3880-11   @LEA   08172460
         AIF   ('&CUTYPE' EQ '3880-21').CU1P   if CU = 3880-21   @LEA   08173450
         AGO   .ENDDEVT                                          @LEA   08174440
.CU0P    ANOP                                                    @LEA   08175430
&DEVTYP  SETC  '3350P'                   Change DEVTYP to 3350P  @LEA   08176420
         AGO   .ENDDEVT                  Check next Keyword      @LEA   08177410
.CU1P    ANOP                                                    @LEA   08178400
&DEVTYP  SETC  '3351P'                   Change DEVTYP to 3351P  @LEA   08179390
         AGO   .ENDDEVT                  Check next Keyword      @LEA   08180380
.*                                                                      08181370
.INVCHAR ANOP                                                    @LEA   08182360
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN &PARM PARAMETER.'   08183350
&ERROR   SETB  1                         Indicate error          @LEA   08184340
.ENDDEVT ANOP                                                    @LEA   08185330
.*********************************************************************  08186320
.*                                                               @LEA*  08187310
.*       Validate AFP                 NO | YES                   @LEA*  08188300
.*                                                               @LEA*  08189290
.*********************************************************************  08190280
.CKAFP   ANOP                                                    @LEA   08191270
&PARM    SETC  'AFP'                     Set parameter for mnote @LEA   08192260
         AIF   ('&AFP' EQ '').ENDAFP     AFP not specified       @LEA   08193250
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA   08194240
.*                                            parameters         @LEA   08195230
&XLEN    SETA  &XLEN+3                   Increment length of     @LEA   08196220
.*                                            parameters         @LEA   08197210
.CKAFP1  ANOP                                                    @LEA   08198200
         AIF   ('&AFP' EQ 'NO').ENDAFP   Default (NO) specified  @LEA   08199190
         AIF   ('&AFP' EQ 'N').ENDAFP    Default (NO) specified  @LEA   08200180
         AIF   ('&AFP' EQ 'YES').ENDAFP  AFP=YES specified       @LEA   08201170
         AIF   ('&AFP' EQ 'Y').ENDAFP    AFP=Y   specified       @LEA   08202160
         MNOTE 8,'043 &PARM VALUE MUST BE YES, Y, NO or N'       @LEA   08203150
&ERROR   SETB  1                         Indicates error         @LEA   08204140
         AGO   .ENDAFP                   Check next keyword      @LEA   08205130
.ENDAFP  ANOP                                                    @LEA   08206120
.*********************************************************************  08207110
.*                                                               @LEA*  08208100
.*       Validate FEATURE        1...n sublist entries  each     @LEA*  08209090
.*                               1...10 character (A - Z  0 - 9) @LEA*  08210080
.*********************************************************************  08211070
.CKFEAT  ANOP                                                    @LEA   08212060
&PARM    SETC  'FEATURE'                 Set parameter for mnote @LEA   08213050
&L       SETA  10                        Maximum FEATURE length  @LEA   08214040
         AIF   ('&FEATURE' EQ '').FEEND  FEATURE not specified   @LEA   08215030
&SUB     SETA  1                                                 @LEA   08216020
.*********************************************************************  08217010
.*       Loop to check each element in the FEATURE sublist       @LEA   08218000
.********************************************************************** 08218990
.FELOOP  ANOP                                                    @LEA   08219980
         AIF   ('&FEATURE(&SUB)' EQ '').FENULL     Null sublist  @LEA   08220970
.*                                                    entry      @LEA   08221960
         AIF   (K'&FEATURE(&SUB) LE &L).NEXTFEA    Number of     @LEA   08222950
.*                                                    characters @LEA   08223940
         MNOTE 8,'033 &PARM PARAMETER SUBLIST ENTRY ''&SUB'' EXCEEDS   C08224930
               &L CHARACTERS.'                                   @LEA   08225920
&ERROR   SETB  1                         Indicates error         @LEA   08226910
         AGO   .NEXTFEA                  Process next entry in   @LEA   08227900
.*                                           sublist             @LEA   08228890
.FENULL  MNOTE 8,'018 &PARM SUBLIST ENTRY ''&SUB'' IS MISSING.'  @LEA   08229880
&ERROR   SETB  1                         Indicates error         @LEA   08230870
.NEXTFEA ANOP                            Process next FEATURE    @LEA   08231860
&SUB     SETA  &SUB+1                    Points to next sublist  @LEA   08232850
.*                                                    entry      @LEA   08233840
         AIF   (&SUB LE N'&FEATURE).FELOOP  Another FEATURE left @LEA   08234830
.FEEND   ANOP                                                    @LEA   08235820
.*********************************************************************  08236810
.*                                                               @LEA*  08237800
.*       Validate MODEL               1 - 4 characters           @LEA*  08238790
.*                                    A - Z  0 - 9               @LEA*  08239780
.*********************************************************************  08240770
.CKMOD   ANOP                                                    @LEA   08241760
&PARM    SETC  'MODEL'                   Set parameter for mnote @LEA   08242750
&L       SETA  4                         Maximum MODEL length    @LEA   08243740
         AIF   ('&MODEL' EQ '').MODEND   Model not specified     @LEA   08244730
         AIF   (N'&MODEL GT 1).SUBMOD    Model is in sublist     @LEA   08245720
.*                                           format              @LEA   08246710
         AIF   (K'&MODEL LE &L).MODCHAR  maximum Number of       @LEA   08247700
.*                                           Characters          @LEA   08248690
         MNOTE 8,'033 &PARM PARAMETER EXCEEDS &L CHARACTERS.'    @LEA   08249680
&ERROR   SETB  1                         Indicates error         @LEA   08250670
         AGO   .MODEND                   Check next keyword      @LEA   08251660
.SUBMOD  MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'     @LEA   08252650
&ERROR   SETB  1                         Indicates error         @LEA   08253640
         AGO   .MODEND                   Check next keyword      @LEA   08254630
.MODCHAR ANOP                                                    @LEA   08255620
         ALPHANUM STRING=&MODEL          Check the characters    @LEA   08256610
         AIF   (&INTERR).CHERR           Invalid Character found @LEA   08257600
         AGO   .MODEND                 Proceed with next Keyword @LEA   08258590
.CHERR   MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN &PARM PARAMETER.'   08259580
&ERROR   SETB  1                         Indicates error         @LEA   08260570
.*                                                               @LEA   08261560
.MODEND  ANOP                            Check next keyword      @LEA   08262550
.*********************************************************************  08263540
.*                                                               @LEA*  08264530
.*       Validate INDEX               1 - 2 Decimal digits       @LEA*  08265520
.*                                    Range: 1 - 31              @LEA*  08266510
.*                                                               @LEA*  08267500
.*********************************************************************  08268490
.CKINDEX ANOP                                                    @LEA   08269480
&PARM    SETC  'INDEX'                   Set parameter for mnote @LEA   08270470
&L       SETA  2                         Maximum INDEX length    @LEA   08271460
&MAXVAL  SETA  31                        Maximum INDEX value     @LEA   08272450
         AIF   ('&INDEX' EQ '').ENDINX   INDEX not specified     @LEA   08273440
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA   08274430
.*                                             parameters        @LEA   08275420
&XLEN    SETA  &XLEN+&L                  Increment length of     @LEA   08276410
.*                                             parameters        @LEA   08277400
         AIF   (N'&INDEX GT 1).SUBNUM    INDEX is in sublist     @LEA   08278390
.*                                             format            @LEA   08279380
         AIF   (K'&INDEX LE &L).NUMCK    Number of digits        @LEA   08280370
         MNOTE 8,'023 &PARM PARAMETER EXCEEDS &L DIGITS.'        @LEA   08281360
&ERROR   SETB  1                         Indicates error         @LEA   08282350
.NUMCK   ANOP                                                    @LEA   08283340
&NDX     SETA  1                         Points to 1st digit of  @LEA   08284330
.*                                          INDEX parameter      @LEA   08285320
.*********************************************************************  08286310
.*       Loop to validate each character in INDEX                @LEA   08287300
.*********************************************************************  08288290
.NUMLOOP ANOP                                                    @LEA   08289280
&CKTY    SETC  'DECIMAL'                  Type of digit          @LEA   08290270
         AIF   ('&INDEX'(&NDX,1) LT '0').BADNUM     Not decimal  @LEA   08291260
         AIF   ('&INDEX'(&NDX,1) LE '9').GOODNUM    Valid digit  @LEA   08292250
.*                                                     (0-9)     @LEA   08293240
.BADNUM  ANOP                            Invalid DECIMAL digit   @LEA   08294230
&CWK     SETC  '&INDEX'(&NDX,1)          Isolate invalid digit   @LEA   08295220
         MNOTE 8,'021 INVALID &CKTY DIGIT ''&CWK'' IN &PARM PARAMETER.' 08296210
                                                                 @LEA   08297200
&ERROR   SETB  1                         Indicates error         @LEA   08298190
.GOODNUM ANOP                                                    @LEA   08299180
&NDX     SETA  &NDX+1                    Point to next digit     @LEA   08300170
         AIF   (&NDX LE K'&INDEX).NUMLOOP  Check next digit      @LEA   08301160
.*                                                               @LEA   08302150
         AIF   (&INDEX GE 1 AND &INDEX LE &MAXVAL).ENDINX        @LEA   08303140
.*                                                   Valid value @LEA   08304130
         MNOTE 8,'042 &PARM VALUE MUST BE A NUMBER FROM 1 TO &MAXVAL.'  08305120
.*                                                               @LEA   08306110
&ERROR   SETB  1                         Indicates error         @LEA   08307100
         AGO   .ENDINX                   Check next keyword      @LEA   08308090
.SUBNUM  MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'     @LEA   08309080
&ERROR   SETB  1                         Indicates error         @LEA   08310070
.ENDINX  ANOP                            Check next keyword      @LEA   08311060
.*********************************************************************  08312050
.*                                                               @LEA*  08313040
.*       Validate UIRATE              1 - 2 Decimal digits       @LEA*  08314030
.*                                    Range: 1 - 62500           @LEA*  08315020
.*                                      or                       @LEA*  08316010
.*                                    - INFINITY                 @LEA*  08317000
.*                                    - DEFAULT                  @LEA*  08317990
.*********************************************************************  08318980
.CKUIRAT ANOP                                                    @LEA   08319970
&PARM    SETC  'UIRATE'                  Set parameter for mnote @LEA   08320960
&L       SETA  5                         Maximum UIRATE length   @LEA   08321950
&MAXVAL  SETA  62500                     Maximum UIRATE value    @LEA   08322940
         AIF   ('&UIRATE' EQ '').ENDUIR  UIRATE not specified    @LEA   08323930
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA   08324920
.*                                             parameters        @LEA   08325910
&XLEN    SETA  &XLEN+K'&UIRATE           Increment length of     @LEA   08326900
.*                                             parameters        @LEA   08327890
         AIF   ('&UIRATE' EQ 'DEFAULT').ENDUIR DEFAULT specified @LEA   08328880
         AIF   ('&UIRATE' EQ 'INFINITY').ENDUIR INFINITY spec.   @LEA   08329870
         AIF   (N'&UIRATE GT 1).SUBNUMU  UIRATE is in sublist    @LEA   08330860
.*                                             format            @LEA   08331850
         AIF   (K'&UIRATE LE &L).NUMCKU  Number of digits        @LEA   08332840
         MNOTE 8,'023 &PARM PARAMETER EXCEEDS &L DIGITS.'        @LEA   08333830
&ERROR   SETB  1                         Indicates error         @LEA   08334820
.NUMCKU  ANOP                                                    @LEA   08335810
&NDX     SETA  1                         Points to 1st digit of  @LEA   08336800
.*                                          UIRATE parameter     @LEA   08337790
.*********************************************************************  08338780
.*       Loop to validate each character in UIRATE               @LEA   08339770
.*********************************************************************  08340760
.NUMLOPU ANOP                                                    @LEA   08341750
&CKTY    SETC  'DECIMAL'                  Type of digit          @LEA   08342740
         AIF   ('&UIRATE'(&NDX,1) LT '0').BADNUMU   Not decimal  @LEA   08343730
         AIF   ('&UIRATE'(&NDX,1) LE '9').GOODNUU   Valid digit  @LEA   08344720
.*                                                     (0-9)     @LEA   08345710
.BADNUMU ANOP                            Invalid DECIMAL digit   @LEA   08346700
&CWK     SETC  '&UIRATE'(&NDX,1)         Isolate invalid digit   @LEA   08347690
         MNOTE 8,'021 INVALID &CKTY DIGIT ''&CWK'' IN &PARM PARAMETER.' 08348680
                                                                 @LEA   08349670
&ERROR   SETB  1                         Indicates error         @LEA   08350660
.GOODNUU ANOP                                                    @LEA   08351650
&NDX     SETA  &NDX+1                    Point to next digit     @LEA   08352640
         AIF   (&NDX LE K'&UIRATE).NUMLOPU Check next digit      @LEA   08353630
.*                                                               @LEA   08354620
         AIF   (&UIRATE GE 1 AND &UIRATE LE &MAXVAL).ENDUIR      @LEA   08355610
.*                                                   Valid value @LEA   08356600
         MNOTE 8,'042 &PARM VALUE MUST BE A NUMBER FROM 1 TO &MAXVAL.'  08357590
.*                                                               @LEA   08358580
&ERROR   SETB  1                         Indicates error         @LEA   08359570
         AGO   .ENDUIR                   Check next keyword      @LEA   08360560
.SUBNUMU MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'     @LEA   08361550
&ERROR   SETB  1                         Indicates error         @LEA   08362540
.ENDUIR  ANOP                            Check next keyword      @LEA   08363530
.*********************************************************************  08364520
.*                                                               @LEA*  08365510
.*       Validate SHARED              NO | YES                   @LEA*  08366500
.*                                                               @LEA*  08367490
.*********************************************************************  08368480
.CKSHAR  ANOP                                                    @LEA   08369470
&PARM    SETC  'SHARED'                  Set parameter for mnote @LEA   08370460
         AIF   ('&SHARED' EQ '').ENDSHA  SHARED not specified    @LEA   08371450
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA   08372440
.*                                              parameters       @LEA   08373430
&XLEN    SETA  &XLEN+3                   Increment length of     @LEA   08374420
.*                                              parameters       @LEA   08375410
         AIF   ('&SHARED' EQ 'NO').ENDSHA  Default (NO) specified@LEA   08376400
         AIF   ('&SHARED' EQ 'N').ENDSHA   Default (NO) specified@LEA   08377390
         AIF   ('&SHARED' EQ 'YES').ENDSHA SHARED=YES specified  @LEA   08378380
         AIF   ('&SHARED' EQ 'Y').ENDSHA   SHARED=Y    specified @LEA   08379370
         MNOTE 8,'043 &PARM VALUE MUST BE YES, Y, NO or N'       @LEA   08380360
&ERROR   SETB  1                         Indicates error         @LEA   08381350
         AGO   .ENDSHA                   Check next keyword      @LEA   08382340
.ENDSHA  ANOP                                                    @LEA   08383330
.*********************************************************************  08384320
.*                                                               @LEA*  08385310
.*       Validate FOLD                NO | YES                   @LEA*  08386300
.*                                                               @LEA*  08387290
.*********************************************************************  08388280
.CKFOLD  ANOP                                                    @LEA   08389270
&PARM    SETC  'FOLD'                    Set parameter for mnote @LEA   08390260
         AIF   ('&FOLD' EQ '').ENDFO     FOLD not specified      @LEA   08391250
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA   08392240
.*                                              parameters       @LEA   08393230
&XLEN    SETA  &XLEN+3                   Increment length of     @LEA   08394220
.*                                              parameters       @LEA   08395210
.CKFLD1  ANOP                                                    @LEA   08396200
         AIF   ('&FOLD' EQ 'NO').ENDFO   Default (NO) specified  @LEA   08397190
         AIF   ('&FOLD' EQ 'N').ENDFO    Default (NO) specified  @LEA   08398180
         AIF   ('&FOLD' EQ 'YES').ENDFO  FOLD=YES specified      @LEA   08399170
         AIF   ('&FOLD' EQ 'Y').ENDFO    FOLD=Y   specified      @LEA   08400160
         MNOTE 8,'043 &PARM VALUE MUST BE YES, Y, NO or N'       @LEA   08401150
&ERROR   SETB  1                         Indicates error         @LEA   08402140
         AGO   .ENDFO                    Check next keyword      @LEA   08403130
.ENDFO   ANOP                                                    @LEA   08404120
.*********************************************************************  08405110
.*                                                               @LEA*  08406100
.*       Validate SEP                 NO | YES                   @LEA*  08407090
.*                                                               @LEA*  08408080
.*********************************************************************  08409070
.CKSEP   ANOP                                                    @LEA   08410060
&PARM    SETC  'SEP'                     Set parameter for mnote @LEA   08411050
         AIF   ('&SEP' EQ '').ENDSEP     SEP not specified       @LEA   08412040
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA   08413030
.*                                              parameters       @LEA   08414020
&XLEN    SETA  &XLEN+3                   Increment length of     @LEA   08415010
.*                                              parameters       @LEA   08416000
         AIF   ('&SEP' EQ 'NO').ENDSEP   SEP=NO specified        @LEA   08416990
         AIF   ('&SEP' EQ 'N').ENDSEP    SEP=N specified         @LEA   08417980
         AIF   ('&SEP' EQ 'YES').ENDSEP  SEP=YES specified       @LEA   08418970
         AIF   ('&SEP' EQ 'Y').ENDSEP    SEP=Y       specified   @LEA   08419960
         MNOTE 8,'043 &PARM VALUE MUST BE YES, Y, NO or N'       @LEA   08420950
&ERROR   SETB  1                         Indicates error         @LEA   08421940
         AGO   .ENDSEP                   Check next keyword      @LEA   08422930
.ENDSEP  ANOP                                                    @LEA   08423920
.*********************************************************************  08424910
.*                                                               @LEA*  08425900
.*       Validate DPMSIZE           1 decimal number from 1 to 9 @LEA*  08426890
.*                                                               @LEA*  08427880
.*********************************************************************  08428870
.CKDPM   ANOP                                                    @LEA   08429860
&PARM    SETC  'DPMSIZE'                 Set parameter for mnote @LEA   08430850
&L       SETA  1                         Maximum DPMSIZE length  @LEA   08431840
&MAXVAL  SETA  9                         Maximum DPMSIZE value   @LEA   08432830
         AIF   ('&DPMSIZE' EQ '').ENDDPM DPMSIZE not specified   @LEA   08433820
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA   08434810
.*                                            parameters         @LEA   08435800
&XLEN    SETA  &XLEN+&L                  Increment length of     @LEA   08436790
.*                                            parameters         @LEA   08437780
         AIF   (N'&DPMSIZE GT 1).SUBDPM  DPMSIZE is in sublist   @LEA   08438770
.*                                               format          @LEA   08439760
         AIF   (K'&DPMSIZE LE &L).DPMLEN Number of digits        @LEA   08440750
         MNOTE 8,'023 &PARM PARAMETER EXCEEDS &L DIGIT.'         @LEA   08441740
&ERROR   SETB  1                         Indicates error         @LEA   08442730
         AGO   .ENDDPM                                           @LEA   08443720
.DPMLEN  ANOP                                                    @LEA   08444710
.*********************************************************************  08445700
.*       validate digit in DPMSIZE                               @LEA   08446690
.*********************************************************************  08447680
         AIF   (&DPMSIZE GE 1 AND &DPMSIZE LE &MAXVAL).ENDDPM    @LEA   08448670
         MNOTE 8,'042 &PARM VALUE MUST BE A NUMBER FROM 1 TO &MAXVAL.'  08449660
.*                                                               @LEA   08450650
&ERROR   SETB  1                         Indicates error         @LEA   08451640
         AGO   .ENDDPM                   Check next keyword      @LEA   08452630
.SUBDPM  MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'     @LEA   08453620
&ERROR   SETB  1                         Indicates error         @LEA   08454610
.ENDDPM  ANOP                                                    @LEA   08455600
.*********************************************************************  08456590
.*                                                               @LEA*  08457580
.*       Validate SETADDR             1 decimal value from 0 to 4@LEA*  08458570
.*                                                               @LEA*  08459560
.*********************************************************************  08460550
.CKSETA  ANOP                                                    @LEA   08461540
&PARM    SETC  'SETADDR'                 Set parameter for mnote @LEA   08462530
&MAXVAL  SETA  4                         Maximum SETADDR value   @LEA   08463520
         AIF   ('&SETADDR' EQ '').ENDAD  SETADDR not specified   @LEA   08464510
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA   08465500
.*                                            parameters         @LEA   08466490
&XLEN    SETA  &XLEN+1                   Increment length of     @LEA   08467480
.*                                            parameters         @LEA   08468470
         AIF   (N'&SETADDR GT 1).SUBADD  SETADDR is in sublist   @LEA   08469460
.*                                            format             @LEA   08470450
         AIF   ('&SETADDR' LT '0').BADSET    Invalid value       @LEA   08471440
         AIF   (&SETADDR LE &MAXVAL).ENDAD   Valid value         @LEA   08472430
.BADSET  MNOTE 8,'042 &PARM VALUE MUST BE A NUMBER FROM 0 TO &MAXVAL.'  08473420
.*                                                               @LEA   08474410
&ERROR   SETB  1                         Indicate error          @LEA   08475400
         AGO   .ENDAD                    Check next keyword      @LEA   08476390
.SUBADD  MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'     @LEA   08477380
&ERROR   SETB  1                         Indicates error         @LEA   08478370
.ENDAD   ANOP                            Check next keyword      @LEA   08479360
.*********************************************************************  08480350
.*                                                               @LEA*  08481340
.*       Validate BASEADD        1 to 4 hex digit device number  @LEA*  08482330
.*                                                               @LEA*  08483320
.*********************************************************************  08484310
.CKBASE  ANOP                                                    @LEA   08485300
&PARM    SETC  'BASEADD'                 Set parameter for mnote @LEA   08486290
&L       SETA  4                           Maximum BASEADD length@LEA   08487280
         AIF   ('&BASEADD' EQ '').ENDBASE  BASEADD not specified @LEA   08488270
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA   08489260
.*                                            parameters         @LEA   08490250
&XLEN    SETA  &XLEN+&L                  Increment length of     @LEA   08491240
.*                                            parameters         @LEA   08492230
         AIF (N'&BASEADD GT 1).DVSUBLE   Operand is in sublist   @LEA   08493220
.*                                            format             @LEA   08494210
         AIF (K'&BASEADD LT 1).DVIDBAD   Bad length of BASEADD   @LEA   08495200
         AIF (K'&BASEADD LE &L).DVIDLEN  Correct length          @LEA   08496190
.*                                                               @LEA   08497180
.DVIDBAD ANOP                                                    @LEA   08498170
         MNOTE 8,'022 &PARM PARAMETER MUST BE &L DIGITS.'        @LEA   08499160
&ERROR   SETB 1                          Indicate error          @LEA   08500150
.DVIDLEN ANOP                                                    @LEA   08501140
         HEXCHECK STRING=&BASEADD        Check the digits        @LEA   08502130
         AIF   (&INTERR).BASERR          Isolate invalid char    @LEA   08503120
         AGO   .ENDBASE                                          @LEA   08504110
.BASERR  ANOP                                                    @LEA   08505100
&CKTY    SETC  'HEX'                      Set Type of digit      @LEA   08506090
         MNOTE 8,'021 INVALID &CKTY DIGIT ''&CWK'' IN &PARM PARAMETER.' 08507080
&ERROR   SETB  1                         Indicate error          @LEA   08508070
         AGO   .ENDBASE                                          @LEA   08509060
.*                                                               @LEA   08510050
.DVSUBLE MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'     @LEA   08511040
&ERROR   SETB  1                         Indicate error          @LEA   08512030
.ENDBASE ANOP                            Check next keyword      @LEA   08513020
.*********************************************************************  08514010
.*                                                               @LEA*  08515000
.*       Validate CHARS           1..4 characters                @LEA*  08515990
.*                                A-Z,0-9,all special character  @LEA*  08516980
.*                                                               @LEA*  08517970
.*********************************************************************  08518960
.CKCHARS ANOP                                                    @LEA   08519950
&PARM    SETC  'CHARS'                   Set parameter for mnote @LEA   08520940
&L       SETA  4                         Maximum CHAR length     @LEA   08521930
         AIF   ('&CHARS' EQ '').ENDCHAR  CHARS not specified     @LEA   08522920
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA   08523910
.*                                            parameters         @LEA   08524900
&XLEN    SETA  &XLEN+&L                  Increment length of     @LEA   08525890
.*                                            parameters         @LEA   08526880
         AIF   (N'&CHARS GT 1).SUBCHAR   CHARS is in sublist     @LEA   08527870
.*                                            format             @LEA   08528860
         AIF   (K'&CHARS LE &L).CHLEN    Length of CHARS         @LEA   08529850
         MNOTE 8,'033 &PARM PARAMETER EXCEEDS &L CHARACTERS.'    @LEA   08530840
&ERROR   SETB  1                         Indicates error         @LEA   08531830
.CHLEN   ANOP                            check all chars         @LEA   08532820
&IND     SETA  1                         Point to first character@LEA   08533810
.CHLOOP  ANOP                                                    @LEA   08534800
&TEST    SETC  '&CHARS'(&IND,1)          prepare one character   @LEA   08535790
         ALPHANUM STRING=&TEST           Check for alphanumeric  @LEA   08536780
         AIF   (&INTERR).SPECI           not alphanumeric        @LEA   08537770
         AGO   .GOODCH                   valid character         @LEA   08538760
.SPECI   ANOP                                                    @LEA   08539750
         SPECIAL STRING=&TEST            Check for special char  @LEA   08540740
         AIF   (&INTERR).SP2CH           not special character   @LEA   08541730
         AGO   .GOODCH                   valid character         @LEA   08542720
.SP2CH   ANOP                                                    @LEA   08543710
         SPECIAL2 STRING=&TEST           Check for special2 char @LEA   08544700
         AIF   (&INTERR).BADCH           invalid character       @LEA   08545690
         AGO   .GOODCH                   valid character         @LEA   08546680
.BADCH   ANOP                                                    @LEA   08547670
&CWK     SETC  '&CHARS'(&IND,1)          Isolate invalid char    @LEA   08548660
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN &PARM PARAMETER.'   08549650
&ERROR   SETB  1                         Indicates error         @LEA   08550640
.*                                                               @LEA   08551630
.GOODCH  ANOP                                                    @LEA   08552620
&IND     SETA  &IND+1                    Next character of CHARS @LEA   08553610
         AIF   (&IND LE K'&CHARS).CHLOOP  Loop if more chars     @LEA   08554600
         AGO   .ENDCHAR                 Proceed with next keyword@LEA   08555590
.SUBCHAR MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'     @LEA   08556580
&ERROR   SETB  1                         Indicates error         @LEA   08557570
.ENDCHAR ANOP                            Check next keyword      @LEA   08558560
.*********************************************************************  08559550
.*                                                               @LEA*  08560540
.*       Validate FCB             1..4 characters                @LEA*  08561530
.*                                A-Z,0-9,all special character  @LEA*  08562520
.*                                                               @LEA*  08563510
.*********************************************************************  08564500
.CKFCB   ANOP                                                    @LEA   08565490
&PARM    SETC  'FCB'                     Set parameter for mnote @LEA   08566480
&L       SETA  4                         Maximum FCB  length     @LEA   08567470
         AIF   ('&FCB' EQ '').ENDFCB     FCB not specified       @LEA   08568460
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA   08569450
.*                                            parameters         @LEA   08570440
&XLEN    SETA  &XLEN+&L                  Increment length of     @LEA   08571430
.*                                            parameters         @LEA   08572420
         AIF   (N'&FCB GT 1).SUBFCB      FCB is in sublist format@LEA   08573410
         AIF   (K'&FCB LE &L).FCLEN      Length of FCB           @LEA   08574400
         MNOTE 8,'033 &PARM PARAMETER EXCEEDS &L CHARACTERS.'    @LEA   08575390
&ERROR   SETB  1                         Indicates error         @LEA   08576380
.FCLEN   ANOP                                                    @LEA   08577370
&IND     SETA  1                         Point to first character@LEA   08578360
.*********************************************************************  08579350
.*       Loop to validate each character in FCB operand          @LEA   08580340
.*********************************************************************  08581330
.FCLOOP  ANOP                                                    @LEA   08582320
&TEST    SETC  '&FCB'(&IND,1)            Prepare one character   @LEA   08583310
         ALPHANUM STRING=&TEST           Check for alphanumeric  @LEA   08584300
         AIF   (&INTERR).SPECIFC         not alphanumeric char   @LEA   08585290
         AGO   .GOODFC                   valid character         @LEA   08586280
.SPECIFC ANOP                                                    @LEA   08587270
         SPECIAL STRING=&TEST            check for special char  @LEA   08588260
         AIF   (&INTERR).SP2FCB          no special character    @LEA   08589250
         AGO   .GOODFC                   valid character         @LEA   08590240
.SP2FCB  ANOP                                                    @LEA   08591230
         SPECIAL2 STRING=&TEST           check for special2 char @LEA   08592220
         AIF   (&INTERR).BADFC           invalid character       @LEA   08593210
         AGO   .GOODFC                   valid character         @LEA   08594200
.BADFC   ANOP                                                    @LEA   08595190
&CWK     SETC  '&FCB'(&IND,1)            Isolate invalid char    @LEA   08596180
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN &PARM PARAMETER.'   08597170
&ERROR   SETB  1                         Indicates error         @LEA   08598160
.*                                                               @LEA   08599150
.GOODFC  ANOP                                                    @LEA   08600140
&IND     SETA  &IND+1                    Next character of FCB   @LEA   08601130
         AIF   (&IND LE K'&FCB).FCLOOP   Loop if more FCB        @LEA   08602120
         AGO   .ENDFCB                  Proceed with next keyword@LEA   08603110
.SUBFCB  MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'     @LEA   08604100
&ERROR   SETB  1                         Indicates error         @LEA   08605090
.ENDFCB  ANOP                            Check next keyword      @LEA   08606080
.*********************************************************************  08607070
.*                                                               @LEA*  08608060
.*       Validate FORM            1..8 characters                @LEA*  08609050
.*                                A-Z,0-9,all special character  @LEA*  08610040
.*                                                               @LEA*  08611030
.*********************************************************************  08612020
.CKFORM  ANOP                                                    @LEA   08613010
&PARM    SETC  'FORM'                    Set parameter for mnote @LEA   08614000
&L       SETA  8                         Maximum FORM length     @LEA   08614990
         AIF   ('&FORM' EQ '').ENDFORM   FORM not specified      @LEA   08615980
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA   08616970
.*                                            parameters         @LEA   08617960
         AIF   (N'&FORM GT 1).SUBFORM    FORM is in sublist      @LEA   08618950
.*                                            format             @LEA   08619940
&XLEN    SETA  &XLEN+&L                  Increment length of     @LEA   08620930
.*                                            parameters         @LEA   08621920
         AIF   (K'&FORM LE &L).FOLEN     Length of FORM          @LEA   08622910
         MNOTE 8,'033 &PARM PARAMETER EXCEEDS &L CHARACTERS.'    @LEA   08623900
&ERROR   SETB  1                         Indicates error         @LEA   08624890
.FOLEN   ANOP                                                    @LEA   08625880
         AIF   ('&FORM' EQ '*').ENDFORM  Valid FORM              @LEA   08626870
         AIF   ('&FORM' EQ 'STANDARD').ENDFORM  Valid FORM       @LEA   08627860
&IND     SETA  1                         Point to first character@LEA   08628850
.*********************************************************************  08629840
.*       Loop to validate each character in FORM operand         @LEA   08630830
.*********************************************************************  08631820
.FOLOOP  ANOP                                                    @LEA   08632810
&TEST    SETC  '&FORM'(&IND,1)           Prepare first character @LEA   08633800
         ALPHANUM STRING=&TEST           Check for alphanumeric  @LEA   08634790
         AIF   (&INTERR).SPECIFO         not alphnumeric         @LEA   08635780
         AGO   .GOODFO                   valid character         @LEA   08636770
.SPECIFO ANOP                                                    @LEA   08637760
         SPECIAL STRING=&TEST            check for special char  @LEA   08638750
         AIF   (&INTERR).SP2FO           no special character    @LEA   08639740
         AGO   .GOODFO                   valid character         @LEA   08640730
.SP2FO   ANOP                                                    @LEA   08641720
         SPECIAL2 STRING=&TEST           check for special char  @LEA   08642710
         AIF   (&INTERR).BADFO           invalid character       @LEA   08643700
         AGO   .GOODFO                   valid character         @LEA   08644690
.BADFO   ANOP                                                    @LEA   08645680
&CWK     SETC  '&FORM'(&IND,1)           Isolate invalid char    @LEA   08646670
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN &PARM PARAMETER.'   08647660
.*                                                               @LEA   08648650
&ERROR   SETB  1                         Indicates error         @LEA   08649640
.GOODFO  ANOP                                                    @LEA   08650630
&IND     SETA  &IND+1                    Next character of FORM  @LEA   08651620
         AIF   (&IND LE K'&FORM).FOLOOP  Loop if more FORM       @LEA   08652610
         AGO   .ENDFORM                 Proceed with next keyword@LEA   08653600
.*                                                               @LEA   08654590
.SUBFORM MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'     @LEA   08655580
&ERROR   SETB  1                         Indicates error         @LEA   08656570
.ENDFORM ANOP                            Check next keyword      @LEA   08657560
.*********************************************************************  08658550
.*                                                               @LEA*  08659540
.*       Validate IMAGE          1..8 characters                 @LEA*  08660530
.*                               A-Z,0-9,all special character   @LEA*  08661520
.*********************************************************************  08662510
.CKIMAG  ANOP                                                    @LEA   08663500
&PARM    SETC  'IMAGE'                   Set parameter for mnote @LEA   08664490
&L       SETA  8                         Maximum IMAGE length    @LEA   08665480
         AIF   ('&IMAGE' EQ '').ENDIM    IMAGE not specified     @LEA   08666470
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA   08667460
.*                                            parameters         @LEA   08668450
&XLEN    SETA  &XLEN+&L                  Increment length of     @LEA   08669440
.*                                            parameters         @LEA   08670430
         AIF   (N'&IMAGE GT 1).SUBIMAG   IMAGE is in sublist     @LEA   08671420
.*                                            format                    08672410
         AIF   (K'&IMAGE LE &L).IMLEN    Length of IMAGE         @LEA   08673400
         MNOTE 8,'033 &PARM PARAMETER EXCEEDS &L CHARACTERS.'    @LEA   08674390
&ERROR   SETB  1                         Indicates error         @LEA   08675380
.IMLEN   ANOP                                                    @LEA   08676370
&IND     SETA  1                         Point to first character@LEA   08677360
.*********************************************************************  08678350
.*       Loop to validate each character in IMAGE operand        @LEA   08679340
.*********************************************************************  08680330
.IMLOOP  ANOP                                                    @LEA   08681320
&TEST    SETC  '&IMAGE'(&IND,1)          prepare one character   @LEA   08682310
         ALPHANUM STRING=&TEST           check for alphanumeric  @LEA   08683300
         AIF   (&INTERR).SPECIM          no alphanumeric char    @LEA   08684290
         AGO   .GOODIM                   valid character         @LEA   08685280
.SPECIM  ANOP                                                    @LEA   08686270
         SPECIAL STRING=&TEST            check for special char  @LEA   08687260
         AIF   (&INTERR).SP2IM           no special character    @LEA   08688250
         AGO   .GOODIM                   valid character         @LEA   08689240
.SP2IM   ANOP                                                    @LEA   08690230
         SPECIAL2 STRING=&TEST           check for special2 char @LEA   08691220
         AIF   (&INTERR).BADIM           invalid character       @LEA   08692210
         AGO   .GOODIM                   valid character         @LEA   08693200
.BADIM   ANOP                                                    @LEA   08694190
&CWK     SETC  '&IMAGE'(&IND,1)          Isolate invalid char    @LEA   08695180
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN &PARM PARAMETER.'   08696170
&ERROR   SETB  1                         Indicates error         @LEA   08697160
.GOODIM  ANOP                                                    @LEA   08698150
&IND     SETA  &IND+1                    Next character of IMAGE @LEA   08699140
         AIF   (&IND LE K'&IMAGE).IMLOOP  Loop if more characters@LEA   08700130
         AGO   .ENDIM                   Proceed with next keyword@LEA   08701120
.*                                                               @LEA   08702110
.SUBIMAG MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'     @LEA   08703100
&ERROR   SETB  1                         Indicates error         @LEA   08704090
.ENDIM   ANOP                            Check next keyword      @LEA   08705080
.*********************************************************************  08706070
.*                                                               @LEA*  08707060
.*       Validate FLASH           1..8 characters                @LEA*  08708050
.*                                A-Z,0-9,all special character  @LEA*  08709040
.*********************************************************************  08710030
.CKFLA   ANOP                                                    @LEA   08711020
&PARM    SETC  'FLASH'                   Set parameter for mnote @LEA   08712010
&L       SETA  8                         Maximum FLASH length    @LEA   08713000
         AIF   ('&FLASH' EQ '').ENDFLA   FLASH not specified     @LEA   08713990
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA   08714980
.*                                            parameters         @LEA   08715970
&XLEN    SETA  &XLEN+&L                  Increment length of     @LEA   08716960
.*                                            parameters         @LEA   08717950
         AIF   (N'&FLASH GT 1).SUBFLA    FLASH is in sublist     @LEA   08718940
.*                                            format             @LEA   08719930
         AIF   (K'&FLASH LE &L).FLLEN    Length of FLASH         @LEA   08720920
         MNOTE 8,'033 &PARM PARAMETER EXCEEDS &L CHARACTERS.'    @LEA   08721910
&ERROR   SETB  1                         Indicates error         @LEA   08722900
.FLLEN   ANOP                                                    @LEA   08723890
&IND     SETA  1                         Point to first character@LEA   08724880
.*********************************************************************  08725870
.*       Loop to validate each character in FLASH operand        @LEA   08726860
.*********************************************************************  08727850
.FLLOOP  ANOP                                                    @LEA   08728840
&TEST    SETC  '&FLASH'(&IND,1)          Prepare one character   @LEA   08729830
         ALPHANUM STRING=&TEST           Check for aphlanumeric  @LEA   08730820
         AIF   (&INTERR).SPECFLA         no alphanumeric char    @LEA   08731810
         AGO   .GOODFL                   valid character         @LEA   08732800
.SPECFLA SPECIAL STRING=&TEST            check for special char  @LEA   08733790
         AIF   (&INTERR).SP2FL           no special character    @LEA   08734780
         AGO   .GOODFL                   valid character         @LEA   08735770
.SP2FL   SPECIAL2 STRING=&TEST           check for special char  @LEA   08736760
         AIF   (&INTERR).BADFL           invalid character       @LEA   08737750
         AGO   .GOODFL                   valid character         @LEA   08738740
.BADFL   ANOP                                                    @LEA   08739730
&CWK     SETC  '&FLASH'(&IND,1)          Isolate invalid char    @LEA   08740720
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN &PARM PARAMETER.'   08741710
&ERROR   SETB  1                         Indicates error         @LEA   08742700
.GOODFL  ANOP                                                    @LEA   08743690
&IND     SETA  &IND+1                    Next character of FLASH @LEA   08744680
         AIF   (&IND LE K'&FLASH).FLLOOP Loop if more characters @LEA   08745670
         AGO   .ENDFLA                  Proceed with next keyword@LEA   08746660
.*                                                               @LEA   08747650
.SUBFLA  MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'     @LEA   08748640
&ERROR   SETB  1                         Indicates error         @LEA   08749630
.ENDFLA  ANOP                            Check next keyword      @LEA   08750620
.*********************************************************************  08751610
.*                                                               @LEA*  08752600
.*       Validate CPNAME          1..8 characters                @LEA*  08753590
.*                                A-Z,0-9,all special character  @LEA*  08754580
.*                                                               @LEA*  08755570
.*********************************************************************  08756560
.CKCPN   ANOP                                                    @LEA   08757550
&PARM    SETC  'CPNAME'                  Set parameter for mnote @LEA   08758540
&L       SETA  8                         Maximum CPNAME length   @LEA   08759530
         AIF   ('&CPNAME' EQ '').ENDCPN  CPNAME not specified    @LEA   08760520
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA   08761510
.*                                            parameters         @LEA   08762500
&XLEN    SETA  &XLEN+&L                  Increment length of     @LEA   08763490
.*                                            parameters         @LEA   08764480
         AIF   (N'&CPNAME GT 1).SUBCPN   CPNAME is in sublist    @LEA   08765470
.*                                            format             @LEA   08766460
         AIF   (K'&CPNAME LE &L).CPLEN   Length of CPNAME        @LEA   08767450
         MNOTE 8,'033 &PARM PARAMETER EXCEEDS &L CHARACTERS.'    @LEA   08768440
&ERROR   SETB  1                         Indicates error         @LEA   08769430
.CPLEN   ANOP                                                    @LEA   08770420
&IND     SETA  1                         Point to 1st character  @LEA   08771410
.********************************************************************** 08772400
.*       Loop to validate each character in CPNAME operand       @LEA   08773390
.********************************************************************** 08774380
.CPLOOP  ANOP                                                    @LEA   08775370
&TEST    SETC  '&CPNAME'(&IND,1)         Prepare one character   @LEA   08776360
         ALPHANUM STRING=&TEST           Check for alphanumeric  @LEA   08777350
         AIF   (&INTERR).SPECCP          no alphanumeric char    @LEA   08778340
         AGO   .GOODCP                   valid character         @LEA   08779330
.SPECCP  ANOP                                                    @LEA   08780320
         SPECIAL STRING=&TEST            Check for special char  @LEA   08781310
         AIF   (&INTERR).SP2CP           invalid character       @LEA   08782300
         AGO   .GOODCP                   valid character         @LEA   08783290
.SP2CP   ANOP                                                    @LEA   08784280
         SPECIAL2 STRING=&TEST           Check for special2 char @LEA   08785270
         AIF   (&INTERR).BADCP           invalid character       @LEA   08786260
         AGO   .GOODCP                   valid character         @LEA   08787250
.BADCP   ANOP                                                    @LEA   08788240
&CWK     SETC  '&CPNAME'(&IND,1)         Isolate invalid char    @LEA   08789230
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN &PARM PARAMETER.'   08790220
&ERROR   SETB  1                         Indicates error         @LEA   08791210
.GOODCP  ANOP                                                    @LEA   08792200
&IND     SETA  &IND+1                    Next character of CPNAME@LEA   08793190
         AIF   (&IND LE K'&CPNAME).CPLOOP Loop if more characters@LEA   08794180
         AGO   .ENDCPN                  Proceed with next keyword@LEA   08795170
.*                                                               @LEA   08796160
.SUBCPN  MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'     @LEA   08797150
&ERROR   SETB  1                         Indicates error         @LEA   08798140
.ENDCPN  ANOP                            Check next keyword      @LEA   08799130
.*********************************************************************  08800120
.*                                                               @LEA*  08801110
.*       Validate CLASS                                          @LEA*  08802100
.*********************************************************************  08803090
.CKCLASS ANOP                                                    @LEA   08804080
&PARM    SETC  'CLASS'                   Set parameter for mnote @LEA   08805070
         AIF   ('&CLASS' EQ '').ENDCLAS CLASS not specified      @LEA   08806060
&IND     SETA  1                     Point to 1st CLASS value if @LEA   08807050
.*                                          1...8 characters     @LEA   08808040
&SUB     SETA  1                     Point to 1st CLASS operand  @LEA   08809030
&MAXSUB  SETA  8                     Maximum number of operands  @LEA   08810020
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA   08811010
.*                                            parameters         @LEA   08812000
         AIF   (N'&CLASS GT 1).CLLEN2     Operand is in sublist  @LEA   08812990
&XLEN    SETA  &XLEN+8                   Increment length of     @LEA   08813980
.*                                            parameters         @LEA   08814970
         AGO   .CLLEND                                           @LEA   08815960
.CLLEN2  ANOP                             Operand is in sublist  @LEA   08816950
&XLEN    SETA  &XLEN+N'&CLASS            Increment length of     @LEA   08817940
.*                                            parameters         @LEA   08818930
.CLLEND  ANOP                             Operand length is set  @LEA   08819920
         AIF   (K'&CLASS LT 1).NCL1NR    No CLASS given          @LEA   08820910
         AIF   ('&CLASS' EQ '*').VALCL1    Valid CLASS parameter @LEA   08821900
         AIF   ('&CLASS(&SUB)' EQ '*').VALCL1    Valid parameter @LEA   08822890
         AIF   ('&CLASS' EQ 'NONE').VALCL2 Valid CLASS parameter @LEA   08823880
         AIF   (N'&CLASS GT 1).CLLOOP     Operand is in sublist  @LEA   08824870
         AIF   (K'&CLASS LE &MAXSUB).CL8CL    1....8 chars       @LEA   08825860
         AGO   .ENDCLAS                                          @LEA   08826850
.*                                                               @LEA   08827840
.CLLOOP  ANOP                                                    @LEA   08828830
&L       SETA  1                         Length of CLASS operand @LEA   08829820
&SUBLI   SETB  1                         Indicate sublist format @LEA   08830810
         AIF   (N'&CLASS GT &MAXSUB).CL1OP     Too many operands @LEA   08831800
.*********************************************************************  08832790
.*       Loop to validate each CLASS operand                     @LEA   08833780
.*********************************************************************  08834770
.CLLOOPB ANOP                                                    @LEA   08835760
         AIF   ('&CLASS(&SUB)' EQ '').CLNULL  Empty operand      @LEA   08836750
         AIF   (N'&CLASS EQ 1).CL8CL          one oper in subli  @LEA   08837740
         AIF   (K'&CLASS(&SUB) EQ &L).CLSUB   Correct operand    @LEA   08838730
.*                                                length         @LEA   08839720
         AIF   (&SUBLI).SUBLIM               if sublist format   @LEA   08840710
.SUBLIM  MNOTE 8,'033 &PARM PARAMETER SUBLIST ENTRY &SUB EXCEEDS &L CHA*08841700
               RACTERS.'                                         @LEA   08842690
&ERROR   SETB  1                        Indicate error           @LEA   08843680
         AGO   .ENDCLAS                                          @LEA   08844670
.*                                                               @LEA   08845660
.CLSUB   ANOP                           Proceed here if sublist  @LEA   08846650
.*                                            format             @LEA   08847640
&TEST    SETC  '&CLASS(&SUB)'           Prepare first sublist    @LEA   08848630
.*                                            entry              @LEA   08849620
         AGO   .CLLEN                                            @LEA   08850610
.CL8CL   ANOP                                                    @LEA   08851600
&SUBLI   SETB  0                                                 @LEA   08852590
.*       AIF   (K'&CLASS GT &MAXSUB).CL8ER  more than 1..8 chars @LEA   08853580
         AIF   (K'&CLASS(&SUB) GT &MAXSUB).CL8ER                 @LEA   08854570
&TEST    SETC  '&CLASS'(&IND,1)          Prepare first character @LEA   08855560
         AIF   ('&TEST' EQ '(').GOODCL                           @LEA   08856550
         AIF   ('&TEST' EQ ')').ENDCLAS                          @LEA   08857540
.CLLEN   ANOP                                                    @LEA   08858530
         ALPHANUM STRING=&TEST             check for alphanumeric@LEA   08859520
         AIF   (&INTERR).SPECI1              if not found        @LEA   08860510
         AGO   .GOODCL                             Valid operand @LEA   08861500
.SPECI1  ANOP                                                    @LEA   08862490
         SPECIAL STRING=&TEST              check for $,#,@ chars @LEA   08863480
         AIF   (&INTERR).SPECI2              if not found        @LEA   08864470
         AGO   .GOODCL                             Valid operand @LEA   08865460
.SPECI2  ANOP                                                    @LEA   08866450
         SPECIAL2 STRING=&TEST             check for +,-,_,: char@LEA   08867440
         AIF   (&INTERR).BADCL               Invalid character   @LEA   08868430
         AGO   .GOODCL                             Valid operand @LEA   08869420
.CLNULL  ANOP                                                    @LEA   08870410
         MNOTE 8,'018 &PARM SUBLIST ENTRY &SUB MISSING.'         @LEA   08871400
&ERROR   SETB  1                                                 @LEA   08872390
         AGO  .GOODCL                                            @LEA   08873380
.BADCL   ANOP                                                    @LEA   08874370
         AIF  (&SUBLI).SUBMSG          if sublist format         @LEA   08875360
.*                                             indication        @LEA   08876350
.*                                      - goto sublist message   @LEA   08877340
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN &PARM PARAMETER.'   08878330
&ERROR   SETB  1                                                 @LEA   08879320
         AGO  .GOODCL                                            @LEA   08880310
.*                                                               @LEA   08881300
.SUBMSG  MNOTE 8,'031 INVALID CHARACTER ''&CLASS(&SUB)'' IN SUBLIST ENT*08882290
               RY &SUB for &PARM PARAMETER.'                     @LEA   08883280
&ERROR   SETB  1                                                 @LEA   08884270
.GOODCL  ANOP                                                    @LEA   08885260
&SUB     SETA  &SUB+1                  Proceed to next operand   @LEA   08886250
&IND     SETA  &IND+1                  Proceed to next char in   @LEA   08887240
.*                                        string                 @LEA   08888230
         AIF   (&SUBLI).MOORSUB        if sublist format indicat @LEA   08889220
         AGO   .MOORCHA                                          @LEA   08890210
.MOORSUB AIF   (&SUB LE N'&CLASS).CLLOOPB  proceed with next     @LEA   08891200
.*                                           sublist entry       @LEA   08892190
         AGO  .ENDCLAS                                           @LEA   08893180
.MOORCHA ANOP                                                    @LEA   08894170
         AIF   (&IND LE K'&CLASS).CL8CL   proceed with next char @LEA   08895160
         AGO  .ENDCLAS                                           @LEA   08896150
.CL1OP   MNOTE 8,'015 &PARM PARAMETER EXCEEDS &MAXSUB SUBLIST ENTRIES.' 08897140
&ERROR   SETB  1                       Indicate error            @LEA   08898130
         AGO   .ENDCLAS                                          @LEA   08899120
.NCL1NR  MNOTE 8,'018 &PARM SUBLIST ENTRY &SUB MISSING.'         @LEA   08900110
&ERROR   SETB  1                       Indicate error            @LEA   08901100
         AGO   .ENDCLAS                                          @LEA   08902090
.CL8ER   MNOTE 8,'033 &PARM PARAMETER EXCEEDS ''&MAXSUB'' CHARACTERS.'  08903080
&ERROR   SETB  1                       Indicate error            @LEA   08904070
         AGO   .ENDCLAS                                          @LEA   08905060
.VALCL1  ANOP                                                    @LEA   08906050
.*&XLEN    SETA  &XLEN+1                 Increment length of     @LEA   08907040
.*                                            parameters         @LEA   08908030
         AGO   .ENDCLAS                                          @LEA   08909020
.VALCL2  ANOP                                                    @LEA   08910010
.*&XLEN    SETA  &XLEN+N'&CLASS          Increment length of     @LEA   08911000
.*                                            parameters         @LEA   08911990
.ENDCLAS ANOP                                                    @LEA   08912980
.*                                                               @LEA   08913970
.EXTLEN  ANOP                      calculate length of variable  @LEA   08914960
.*                                       extension area          @LEA   08915950
&XPRMC   SETA  &XPRMC*12           multiply for each parameter   @LEA   08916940
.*                                   the header (about 10 bytes) @LEA   08917930
&XLEN    SETA  &XLEN+&XPRMC                                      @LEA   08918920
.ENDEXT  ANOP                                                    @LEA   08919910
.*********************************************************************  08920900
.*                                                               @LEA*  08921890
.*       Generate internal text record                           @LEA*  08922880
.*                                                               @LEA*  08923870
.*********************************************************************  08924860
.GENTEXT ANOP                                                    @LEA   08925850
         AIF   (&ERROR EQ 1).EXIT     Exit if an error has been         08926840
.*                                       found                   @LEA   08927830
&CNO     SETC  '&SYSITRN'             EBCDIC version of statement       08928820
.*                                       number                  @LEA   08929810
         AIF   ('&DEVTYPE' NE 'ICA').SKPICA if device type ICA   @LEA   08930800
&DEVTYP  SETC  '&DEVTYPE&ADAPTER'     Build VM device type       @LEA   08931790
.SKPICA  ANOP                                                    @LEA   08932780
         DC    CL8'&DEVTYP'           Device type specified      @LEA   08933770
.ENDICA  ANOP                                                    @LEA   08934760
         DC    H'0'                   Reserved                   @LEA   08935750
         DC    XL1'00'                UNITADD not specified,            08936740
.*                                       set to 0                @LEA   08937730
         DC    AL1(0)                 Reserved                   @LEA   08938720
         DC    XL2'00'                DEVNUMBR  (not specified)  @LEA   08939710
.*                                                                      08940700
         AIF   ('&DEVNO' EQ '').GENAD                            @LEA   08941690
         DC    XL2'&DEVNO(1)'         2 Hex Digit Device Address @LEA   08942680
         AIF   (N'&DEVNO EQ 2).GENDCNT  Repl fact specified      @LEA   08943670
         DC    H'0'                   Number of multiple devices @LEA   08944660
         DC    XL1'80'                UIM Internal flag byte     @LEA   08945650
         AGO   .EGADDR                                           @LEA   08946640
.GENDCNT DC    H'&DEVNO(2)'           Number of multiple devices @LEA   08947630
         DC    XL1'00'                UIM Internal flag byte     @LEA   08948620
         AGO   .EGADDR                                           @LEA   08949610
.*                                                                      08950600
.GENAD   DC    XL2'&ADDRESS(1)'       2 Hex Digit Device Address @LEA   08951590
         AIF   (N'&ADDRESS EQ 2).GENACNT  Replication factor            08952580
.*                                       specified               @LEA   08953570
         DC    H'0'                   Number of multiple devices @LEA   08954560
         DC    XL1'80'                UIM Internal flag byte     @LEA   08955550
.*                                   Ifb = multiple devices defaulted   08956540
         AGO   .EGADDR                Done with ADDRESS keyword  @LEA   08957530
.GENACNT DC    H'&ADDRESS(2)'         Number of multiple devices @LEA   08958520
         DC    XL1'00'                UIM Internal flag byte     @LEA   08959510
.*                                   Ifb = multiple devices specified   08960500
.EGADDR  ANOP                                                    @LEA   08961490
         DC    XL1'00'                Reserved                   @LEA   08962480
         DC    A(0)                   No CUNUMBR list            @LEA   08963470
         DC    H'0'                   Number of entries in              08964460
*                                         CUNUMBR list           @LEA   08965450
         AIF   (N'&FEATURE EQ 0).NOFEATP  No FEATURE list        @LEA   08966440
         AIF   ('&FEATURE' EQ 'VUA').NOFEATP   or FEATURE = VUA  @LEA   08967430
&AWK     SETA  N'&FEATURE             Number of entries in              08968420
.*                                        FEATURE list           @LEA   08969410
         DC    H'&AWK'                Number of entries in              08970400
*                                         FEATURE list           @LEA   08971390
         DC    A(@F&CNO)              Pointer to FEATURE list    @LEA   08972380
         AGO   .EGFEAT                Done with FEATURE count    @LEA   08973370
.NOFEATP DC    H'0'                   No entries in FEATURE list @LEA   08974360
         DC    A(0)                   No FEATURE list            @LEA   08975350
.EGFEAT  ANOP                                                    @LEA   08976340
         DC    XL8'00'                Flag bytes not for VM      @LEA   08977330
         DC    AL1(0)                 IOCP-only keyword flag byte@LEA   08978320
         DC    AL3(0)                 Reserved for flags         @LEA   08979310
         AIF   ('&MODEL' EQ '').NOMOD  MODEL not specified       @LEA   08980300
         DC    CL4'&MODEL'            Model                      @LEA   08981290
         AGO   .EGMODEL               Done with MODEL keyword    @LEA   08982280
.NOMOD   DC    CL4' '                 Model (not specified)      @LEA   08983270
.EGMODEL ANOP                                                    @LEA   08984260
         DC    AL1(0)                 Parameter flags            @LEA   08985250
         DC    AL1(0)                 Reserved                   @LEA   08986240
         DC    H'0'                   NUMSECT (only for MVS)     @LEA   08987230
         DC    CL4' '                 TCU (only for MVS)         @LEA   08988220
         DC    AL2(0)                 Reserved                   @LEA   08989210
         DC    XL1'00'                PATH (only for MVS)        @LEA   08990200
         DC    AL1(0)                 SETADDR (only for MVS)     @LEA   08991190
         DC    CL5' '                 Adapter (only for MVS)     @LEA   08992180
         DC    AL1(0)                 Reserved                   @LEA   08993170
         DC    AL2(0)                 PCU number (only for MVS)  @LEA   08994160
         DC    AL4(0)                 PPVA area                  @LEA   08995150
         DC    XL2'00'                Reserved                   @LEA   08996140
         DC    AL2(&XLEN)             Length of parameters              08997130
.*                                        specified              @LEA   08998120
         AIF   (&XLEN EQ 0).NOXPP     No additional parameters          08999110
.*                                        specified              @LEA   09000100
         DC    AL4(@P&CNO)            Address of parameter list  @LEA   09001090
         AGO   .EGXPP                                            @LEA   09002080
.NOXPP   ANOP                                                    @LEA   09003070
         DC    A(0)                   Address of parameter list  @LEA   09004060
.EGXPP   ANOP                                                    @LEA   09005050
         DC    XL8'00'                Feature bit string         @LEA   09006040
         DC    CL8' '                 Owner identification       @LEA   09007030
.*                                                               @LEA   09008020
         DC    A(0)                   Partition list             @LBA   09009010
         DC    H'0'                   Number of entries in partition   *09010000
                                      list                         @LBA 09010990
         DC    AL2(0)                 Reserved                     @LBA 09011980
         DS    CL32                   Reserved                   @LEA   09012970
.*                                                               @LEA   09013960
         AIF   (N'&FEATURE EQ 0).XPRMGEN FEATURE list not spec   @LEA   09014950
         AIF   ('&FEATURE' EQ 'VUA').XPRMGEN   or FEATURE = VUA  @LEA   09015940
         SPACE 1                                                 @LEA   09016930
&SUB     SETA  1                      Point to first FEATURE     @LEA   09017920
&CWK     SETC  '@F&CNO'               Label for 1st FEATURE in          09018910
.*                                        list                   @LEA   09019900
.FEATGEN ANOP                                                    @LEA   09020890
&CWK     DC    CL10'&FEATURE(&SUB)'   Feature                    @LEA   09021880
&CWK     SETC  ''                     Blank out label            @LEA   09022870
&SUB     SETA  &SUB+1                 Points to next entry in           09023860
.*                                         array                 @LEA   09024850
         AIF   (&SUB LE N'&FEATURE).FEATGEN     Processes next          09025840
.*                                                  FEATURE      @LEA   09026830
.XPRMGEN ANOP                                                    @LEA   09027820
         AIF   (&XPRMC EQ 0).EXIT                                @LEA   09028810
&CWK     SETC  '@P&CNO'               Label for 1st FEATURE in          09029800
.*                                        list                   @LEA   09030790
&CWK     DS    0F                     Start of parameter list    @LEA   09031780
         AIF   ('&ADAPTER' EQ '').NOADPT  no ADAPTER specified   @LEA   09032770
         DC    CL10'ADAPTER'                                     @LEA   09033760
         DC    AL1(5)                                            @LEA   09034750
         DC    AL1(1)                                            @LEA   09035740
         DC    CL5'&ADAPTER'          insert ADAPTER             @LEA   09036730
.NOADPT  ANOP                                                    @LEA   09037720
         AIF   ('&BASEADD' EQ '').NOBASE  no BASEADD specified   @LEA   09038710
         DC    CL10'BASEADD'                                     @LEA   09039700
         DC    AL1(4)                                            @LEA   09040690
         DC    AL1(1)                                            @LEA   09041680
         DC    CL4'&BASEADD'          insert BASEADD             @LEA   09042670
.NOBASE  ANOP                                                    @LEA   09043660
         AIF   ('&CHARS' EQ '').NOCHRS  no CHARS specified       @LEA   09044650
         DC    CL10'CHARS'                                       @LEA   09045640
         DC    AL1(4)                                            @LEA   09046630
         DC    AL1(1)                                            @LEA   09047620
         DC    CL4'&CHARS'            INSERT CHARS               @LEA   09048610
.NOCHRS  ANOP                                                    @LEA   09049600
         AIF   ('&CLASS' EQ '').NOCLASS no CLASS specified       @LEA   09050590
         AIF   (N'&CLASS GT 1).GCLASSL CLASS list                @LEA   09051580
.GCL8C   DC    CL10'CLASS'             Keyword                   @LEA   09052570
         DC    AL1(8)                  Length of values          @LEA   09053560
         DC    AL1(1)                  number of values          @LEA   09054550
         DC    CL8'&CLASS(1)'         insert CLASS               @LEA   09055540
         AGO   .NOCLASS                                          @LEA   09056530
.GCLASSL ANOP                                                    @LEA   09057520
&SUB     SETA  1                  point to first sublist entry   @LEA   09058510
         DC    CL10'CLASS'             Keyword                   @LEA   09059500
         DC    AL1(1)                  length                    @LEA   09060490
&AWK     SETA  N'&CLASS                                          @LEA   09061480
         DC    AL1(&AWK)               number of values          @LEA   09062470
.CLASSGN ANOP                                                    @LEA   09063460
         DC    CL1'&CLASS(&SUB)'      insert CLASS               @LEA   09064450
&SUB     SETA  &SUB+1                 point to next sublist entry@LEA   09065440
         AIF   (&SUB LE N'&CLASS).CLASSGN  process remaining            09066430
.*                                           entries             @LEA   09067420
         AIF   (N'&CLASS EQ 8).NOCLASS                           @LEA   09068410
.NOCLASS ANOP                                                    @LEA   09069400
         AIF   ('&DEST' EQ '').NODEST     no DEST specified      @LEA   09070390
         AIF   (N'&DEST GE 1).DESTL       DEST list              @LEA   09071380
         DC    CL10'DEST'              Keyword                   @LEA   09072370
         DC    AL1(8)                  Length                    @LEA   09073360
         DC    AL1(1)                  Number of values          @LEA   09074350
         DC    CL8'&DEST'            insert DEST                 @LEA   09075340
         AGO   .NODEST                                           @LEA   09076330
.DESTL   ANOP                                                    @LEA   09077320
&AWK     SETA  N'&DEST                  set number of values     @LEA   09078310
         DC    CL10'DEST'              Keyword                   @LEA   09079300
         DC    AL1(8)                  Length                    @LEA   09080290
         DC    AL1(&AWK)               Number of values          @LEA   09081280
&SUB     SETA  1                    point to first sublist entry @LEA   09082270
.DESTGN  ANOP                                                    @LEA   09083260
         DC    CL8'&DEST(&SUB)'      insert DEST                 @LEA   09084250
&SUB     SETA  &SUB+1                point to next sublist entry @LEA   09085240
         AIF   (&SUB LE N'&DEST).DESTGN  process remaining              09086230
.*                                            entries            @LEA   09087220
         AIF   (N'&DEST EQ 4).NODEST                             @LEA   09088210
.NODEST  ANOP                                                    @LEA   09089200
         AIF   ('&CPNAME' EQ '').NOCPNM  no CPNAME specified     @LEA   09090190
         DC    CL10'CPNAME'            Keyword                   @LEA   09091180
         DC    AL1(8)                  Length                    @LEA   09092170
         DC    AL1(1)                  Number of values          @LEA   09093160
         DC    CL8'&CPNAME'          insert CPNAME               @LEA   09094150
.NOCPNM  ANOP                                                    @LEA   09095140
         AIF   ('&DPMSIZE' EQ '').NODPMS  no DPMSIZE specified   @LEA   09096130
         DC    CL10'DPMSIZE'           Keyword                   @LEA   09097120
         DC    AL1(1)                  Length                    @LEA   09098110
         DC    AL1(1)                  Number of values          @LEA   09099100
         DC    CL1'&DPMSIZE'         insert DPMSIZE              @LEA   09100090
.NODPMS  ANOP                                                    @LEA   09101080
         AIF   ('&FCB' EQ '').NOFCB2  no FCB specified           @LEA   09102070
         DC    CL10'FCB'               Keyword                   @LEA   09103060
         DC    AL1(4)                  Length                    @LEA   09104050
         DC    AL1(1)                  Number of values          @LEA   09105040
         DC    CL4'&FCB'            insert FCB                   @LEA   09106030
.NOFCB2  ANOP                                                    @LEA   09107020
         AIF   ('&AFP' EQ '').NOAFP   no AFP specified           @LEA   09108010
         DC    CL10'AFP'               Keyword                   @LEA   09109000
         DC    AL1(3)                  Length                    @LEA   09109990
         DC    AL1(1)                  Number of values          @LEA   09110980
         DC    CL3'&AFP'            insert AFP                   @LEA   09111970
.NOAFP   ANOP                                                    @LEA   09112960
         AIF   ('&FLASH' EQ '').NOFLASH no FLASH specified       @LEA   09113950
         DC    CL10'FLASH'             Keyword                   @LEA   09114940
         DC    AL1(8)                  Length                    @LEA   09115930
         DC    AL1(1)                  Number of values          @LEA   09116920
         DC    CL8'&FLASH'           insert FLASH                @LEA   09117910
.NOFLASH ANOP                                                    @LEA   09118900
         AIF   ('&FOLD' EQ '').NOFOLD  no FOLD specified         @LEA   09119890
         DC    CL10'FOLD'              Keyword                   @LEA   09120880
         DC    AL1(3)                  Length                    @LEA   09121870
         DC    AL1(1)                  Number of values          @LEA   09122860
         DC    CL3'&FOLD'            insert FOLD                 @LEA   09123850
.NOFOLD  ANOP                                                    @LEA   09124840
         AIF   ('&FORM' EQ '').NOFORM2 no FORM specified         @LEA   09125830
         DC    CL10'FORM'              Keyword                   @LEA   09126820
         DC    AL1(8)                  Length                    @LEA   09127810
         DC    AL1(1)                  Number of values          @LEA   09128800
         DC    CL8'&FORM'            insert FORM                 @LEA   09129790
.NOFORM2 ANOP                                                    @LEA   09130780
         AIF   ('&IMAGE' EQ '').NOIMAG2 no IMAGE specified       @LEA   09131770
         DC    CL10'IMAGE'             Keyword                   @LEA   09132760
         DC    AL1(8)                  Length                    @LEA   09133750
         DC    AL1(1)                  Number of values          @LEA   09134740
         DC    CL8'&IMAGE'           insert IMAGE                @LEA   09135730
.NOIMAG2 ANOP                                                    @LEA   09136720
         AIF   ('&INDEX' EQ '').NOINDX  no INDEX specified       @LEA   09137710
         DC    CL10'INDEX'             Keyword                   @LEA   09138700
         DC    AL1(2)                  Length                    @LEA   09139690
         DC    AL1(1)                  Number of values          @LEA   09140680
         DC    CL2'&INDEX'           insert INDEX                @LEA   09141670
.NOINDX  ANOP                                                    @LEA   09142660
         AIF   ('&UIRATE' EQ '').NOUIRA no UIRATE specified      @LEA   09143650
&AWK     SETA  K'&UIRATE                                                09144640
         DC    CL10'UIRATE'            Keyword                   @LEA   09145630
         DC    AL1(&AWK)               Length                    @LEA   09146620
         DC    AL1(1)                  Number of values          @LEA   09147610
         DC    CL&AWK'&UIRATE'       insert UIRATE               @LEA   09148600
.NOUIRA  ANOP                                                    @LEA   09149590
         AIF   ('&SETADDR' EQ '').NOSETA  no SETADDR specified   @LEA   09150580
         DC    CL10'SETADDR'           Keyword                   @LEA   09151570
         DC    AL1(1)                  Length                    @LEA   09152560
         DC    AL1(1)                  Number of values          @LEA   09153550
         DC    CL1'&SETADDR'         insert SETADDR              @LEA   09154540
.NOSETA  ANOP                                                    @LEA   09155530
         AIF   ('&SEP' EQ '').NOSEP   no SEP specified           @LEA   09156520
         DC    CL10'SEP'               Keyword                   @LEA   09157510
         DC    AL1(3)                  Length                    @LEA   09158500
         DC    AL1(1)                  Number of values          @LEA   09159490
         DC    CL3'&SEP'             insert SEP                  @LEA   09160480
.NOSEP   ANOP                                                    @LEA   09161470
         AIF   ('&SHARED' EQ '').NOSHR   no SHARED specified     @LEA   09162460
         DC    CL10'SHARED'            Keyword                   @LEA   09163450
         DC    AL1(3)                  Length                    @LEA   09164440
         DC    AL1(1)                  Number of values          @LEA   09165430
         DC    CL3'&SHARED'          insert SHARED               @LEA   09166420
.NOSHR   ANOP                                                    @LEA   09167410
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to      09168400
         MNOTE ' '                     occur if NOGEN specified         09169390
         MEND                                                           09170380
*/*==================================================================*/ 09171370
*/*==================================================================*/ 09172360
         TITLE 'HCD MACRO LISTING - RIOGEN - REAL CONSOLE DEFINITION'   09173350
         MACRO  --  PARSE RIOGEN STATEMENT                              09174340
&SYMBOL  RIOGEN &CONS=,&ALTCONS=                                        09175330
         AGO   .SKIP                                                    09176320
*/********************************************************************/ 09177310
*/*                                                              @LEA*/ 09178300
*/*01*  MACRO NAME = RIOGEN                                      @LEA*/ 09179290
*/*                                                              @LEA*/ 09180280
*/*01*  DESCRIPTIVE NAME = Define system console characteristics @LEA*/ 09181270
*/*                                                              @LEA*/ 09182260
*/*01*  MACRO CALL =                                             @LEA*/ 09183250
*/*       label RIOGEN   CONS=number                             @LEA*/ 09184240
*/*                           <,ALTCONS=(number<,number...>)>    @LEA*/ 09185230
*/*                                                              @LEA*/ 09186220
*/*01*  FUNCTION = Define a device as a system console.          @LEA*/ 09187210
*/*                                                              @LEA*/ 09188200
*/*02*    DEPENDENCIES = None.                                   @LEA*/ 09189190
*/*                                                              @LEA*/ 09190180
*/*01*  INPUT = # CONS    = 1 to 4 Hex digit                     @LEA*/ 09191170
*/                          primary VM console device number     @LEA*/ 09192160
*/*               ALTCONS = 1 to 4 hex digit                     @LEA*/ 09193150
*/*                         list of up to 31 alternate VM console@LEA*/ 09194140
*/*                          device numbers                      @LEA*/ 09195130
*/*                                                              @LEA*/ 09196120
*/*             # - Required keyword                             @LEA*/ 09197110
*/*                                                              @LEA*/ 09198100
*/*01*  OUTPUT = Internal text                                   @LEA*/ 09199090
*/*                                                              @LEA*/ 09200080
*/********************************************************************/ 09201070
*/*                                                                @LEA 09202060
.*                                                                 @LEA 09203050
.SKIP    ANOP                                                      @LEA 09204040
         GBLA  &SYSITRN               HCD statement number         @LEA 09205030
         LCLA  &AWK                   Arithmetic work variable     @LEA 09206020
         LCLA  &L                     Max or req'd operand length  @LEA 09207010
         LCLA  &MAXSUB                Max nubr of sublst entries   @LEA 09208000
         LCLA  &NDX                   Substring index              @LEA 09208990
         LCLA  &SUB                   Sublist element number       @LEA 09209980
         LCLB  &ERROR                 Error flag                   @LEA 09210970
         LCLC  &CNO                   EBCDIC version of &SYSITRN   @LEA 09211960
         LCLC  &CWK                   Character work variable      @LEA 09212950
         LCLC  &PARM                  Character work variable      @LEA 09213940
         LCLC  &CKTY                  set type of digit            @LEA 09214930
         ACTR  10000                  Set for infinite loop ctlr   @LEA 09215920
.*                                                                 @LEA 09216910
&SYMBOL  TXTHDR RIOGEN              Build header for RIOGEN rec    @LEA 09217900
.*                                                                      09218890
.********************************************************************** 09219880
.*                                                                    * 09220870
.*       Check if unrecognized parameters are specified               * 09221860
.*                                                                    * 09222850
.********************************************************************** 09223840
         AIF   (N'&SYSLIST EQ 0).XPOS90    No positional parameter @P3A 09224830
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @P3A 09225820
&ERROR   SETB  1                  Indicate error                   @P3A 09226810
         AGO   .XPOS90            and continue                     @P3A 09227800
.*                                                                      09228790
.XPOS90  ANOP  ,                                                   @P3A 09229780
.********************************************************************** 09230770
.*                                                                 @LEA 09231760
.*       Validate CONS                list of device numbers       @LEA 09232750
.*                                     up to 4 Hex digits each     @LEA 09233740
.*                required                                         @LEA 09234730
.********************************************************************** 09235720
.CKCONS  ANOP                                                      @LEA 09236710
&PARM    SETC  'CONS'                    Parameter for mnote       @LEA 09237700
&L       SETA  4                         Required CONS length      @LEA 09238690
         AIF   ('&CONS' EQ '').NOCONS    CONS not specified        @LEA 09239680
         AIF   (N'&CONS GT 1).SUBL    Operand is in sublist format @LEA 09240670
.*                                                                 @LEA 09241660
         AIF   (K'&CONS LT 1).CONSBAD   Bad length of CONS         @LEA 09242650
         AIF   (K'&CONS LE &L).CONSLEN  Correct length of CONS     @LEA 09243640
         AGO   .CONSBAD                 Invalid length of CONS     @LEA 09244630
.CONSLEN ANOP                                                      @LEA 09245620
.*                                                                 @LEA 09246610
&NDX     SETA  1                      Points to 1st digit of number@LEA 09247600
.********************************************************************** 09248590
.*       Loop to validate each digit in the device number CONS     @LEA 09249580
.*                                                                 @LEA 09250570
.********************************************************************** 09251560
.CNLOOPB ANOP                                                      @LEA 09252550
&CKTY    SETC 'HEX'                     set type of digit          @LEA 09253540
         AIF   ('&CONS'(&NDX,1) LT 'A').BADCN   Bad char           @LEA 09254530
         AIF   ('&CONS'(&NDX,1) LE 'F').GOODCN  Good  (A-F)        @LEA 09255520
         AIF   ('&CONS'(&NDX,1) LT '0').BADCN   Bad char           @LEA 09256510
         AIF   ('&CONS'(&NDX,1) LE '9').GOODCN  Good  (0-9)        @LEA 09257500
.BADCN   ANOP                           Invalid HEX digit          @LEA 09258490
&CWK     SETC  '&CONS'(&NDX,1)          Isolate invalid digit      @LEA 09259480
         MNOTE 8,'021 INVALID &CKTY DIGIT ''&CWK'' IN &PARM PARAMETER'  09260470
.*                                                                 @LEA 09261460
&ERROR   SETB  1                      Indicates error              @LEA 09262450
.GOODCN  ANOP                                                      @LEA 09263440
&NDX     SETA  &NDX+1                 Point to next digit          @LEA 09264430
         AIF   (&NDX LE K'&CONS).CNLOOPB  Check next digit         @LEA 09265420
.********************************************************************** 09266410
.*                                                                 @LEA 09267400
.*       Validate ALTCONS       list of up to 31 VM console device @LEA 09268390
.*                              numbers                            @LEA 09269380
.*                                                                 @LEA 09270370
.********************************************************************** 09271360
.CKALTCO ANOP                                                      @LEA 09272350
&PARM    SETC  'ALTCONS'                                           @LEA 09273340
&MAXSUB  SETA  31                     Maximum number of ALTCONS's  @LEA 09274330
         AIF   ('&ALTCONS' EQ '').GENTEXT   ALTCONS not specified  @LEA 09275320
         AIF   (N'&ALTCONS LE &MAXSUB).CONSUBL Number of sublists  @LEA 09276310
         MNOTE 8,'015 &PARM PARAMETER EXCEEDS &MAXSUB SUBLIST ENTRIES  *09277300
               .'                                                  @LEA 09278290
&ERROR   SETB  1                       Indicate error              @LEA 09279280
         AGO   .ENDCONS                                            @LEA 09280270
.CONSUBL ANOP                                                      @LEA 09281260
&SUB     SETA 1                                                    @LEA 09282250
.********************************************************************** 09283240
.*       Loop to validate each sublist entry                       @LEA 09284230
.********************************************************************** 09285220
.DVLOOP  ANOP                                                      @LEA 09286210
         AIF   ('&ALTCONS(&SUB)' EQ '').DVNULL Null sublist entry  @LEA 09287200
         AIF   (K'&ALTCONS(&SUB) LT 1).DVNBAD    Number of digits  @LEA 09288190
         AIF   (K'&ALTCONS(&SUB) LE &L).DVNLEN  Number of digits   @LEA 09289180
.DVNBAD  ANOP                                                      @LEA 09290170
         MNOTE 8,'022 &PARM PARAMETER SUBLIST ENTRY &SUB MUST BE 1 TO  *09291160
                &L DIGITS.'                                        @LEA 09292150
&ERROR   SETB  1                       Indicate error              @LEA 09293140
.DVNLEN  ANOP                                                      @LEA 09294130
&NDX     SETA  1                      Points to 1st digit of number@LEA 09295120
.*                                                                 @LEA 09296110
.********************************************************************** 09297100
.*      Loop to validate each character in the device number       @LEA 09298090
.*                                                    of ALTCONS   @LEA 09299080
.********************************************************************** 09300070
.DVLOOPB ANOP                                                      @LEA 09301060
&CKTY    SETC 'HEX'                     set type of digit          @LEA 09302050
         AIF   ('&ALTCONS(&SUB)'(&NDX,1) LT 'A').BADDV   Bad char  @LEA 09303040
         AIF   ('&ALTCONS(&SUB)'(&NDX,1) LE 'F').GOODDV  Good (A-F)@LEA 09304030
         AIF   ('&ALTCONS(&SUB)'(&NDX,1) LT '0').BADDV   Bad char  @LEA 09305020
         AIF   ('&ALTCONS(&SUB)'(&NDX,1) LE '9').GOODDV  Good (0-9)@LEA 09306010
.BADDV   ANOP                           Invalid HEX digit          @LEA 09307000
&CWK     SETC  '&ALTCONS(&SUB)'(&NDX,1)  Isolate invalid digit     @LEA 09307990
         MNOTE 8,'021 INVALID &CKTY DIGIT ''&CWK'' IN SUBLIST ENTRY &SU*09308980
               B FOR &PARM PARAMETER'                              @LEA 09309970
&ERROR   SETB  1                      Indicates error              @LEA 09310960
.GOODDV  ANOP                                                      @LEA 09311950
&NDX     SETA  &NDX+1                 Point to next digit          @LEA 09312940
         AIF   (&NDX LE K'&ALTCONS(&SUB)).DVLOOPB  Check next digit@LEA 09313930
         AGO  .NXTDVNM                Process next ALTCONS number  @LEA 09314920
.DVNULL  MNOTE 8,'018 &PARM SUBLIST ENTRY &SUB IS MISSING.'        @LEA 09315910
&ERROR   SETB  1                       Indicate error              @LEA 09316900
.*                                                                 @LEA 09317890
.NXTDVNM ANOP                         Next device number           @LEA 09318880
&SUB     SETA  &SUB+1                 Point to next sublist entry  @LEA 09319870
         AIF   (&SUB LE N'&ALTCONS).DVLOOP  More ALTCONS id's ...  @LEA 09320860
         AGO   .GENTEXT               Generate internal text record@LEA 09321850
.*                                                                 @LEA 09322840
.NOCONS  MNOTE 8,'002 &PARM KEYWORD NOT SPECIFIED.'                @LEA 09323830
&ERROR   SETB  1                      Indicate error               @LEA 09324820
         AGO   .ENDCONS                                            @LEA 09325810
.SUBL    ANOP                                                      @LEA 09326800
         MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'       @LEA 09327790
&ERROR   SETB  1                       Indicate error              @LEA 09328780
         AGO   .ENDCONS                                            @LEA 09329770
.CONSBAD ANOP                                                      @LEA 09330760
         MNOTE 8,'022 &PARM PARAMETER MUST BE 1 TO &L HEX DIGITS.' @LEA 09331750
&ERROR   SETB  1                       Indicate error              @LEA 09332740
         AGO   .ENDCONS                                            @LEA 09333730
.ENDCONS ANOP                                                      @LEA 09334720
.********************************************************************** 09335710
.*                                                                 @LEA 09336700
.*       Generate internal text record                             @LEA 09337690
.*                                                                 @LEA 09338680
.********************************************************************** 09339670
.GENTEXT ANOP                                                      @LEA 09340660
         AIF   (&ERROR EQ 1).EXIT     Exit if an error has been    @LEA 09341650
.*                                               found             @LEA 09342640
&CNO     SETC  '&SYSITRN'             EBCDIC version of statement  @LEA 09343630
.*                                               number            @LEA 09344620
         DC    A(@D&CNO)              Pointer to DEVNUM list       @LEA 09345610
&AWK     SETA  N'&ALTCONS+1           Number of entries in list    @LEA 09346600
         DC    H'&AWK'                Number of entries in DEVNUM  @LEA 09347590
.*                                               list              @LEA 09348580
         DC    AL2(0)                 Reserved                     @LEA 09349570
.*                                                                 @LEA 09350560
         SPACE 1                                                   @LEA 09351550
&CWK     SETC  '@D&CNO'               Label for first console      @LEA 09352540
&CWK     DC    XL2'&CONS'             CONS device number           @LEA 09353530
         AIF   (N'&ALTCONS EQ 0).EXIT ALTCONS omitted              @LEA 09354520
&SUB     SETA  1                      Point to first ALTCONS       @LEA 09355510
.CONGEN  ANOP                                                      @LEA 09356500
         DC    XL2'&ALTCONS(&SUB)'    ALTCONS device number        @LEA 09357490
&SUB     SETA  &SUB+1                  Point to next sublist entry @LEA 09358480
         AIF   (&SUB LE N'&ALTCONS).CONGEN  Go insert next ALTCONS @LEA 09359470
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to @LEA 09360460
         MNOTE ' '                     occur if NOGEN specified    @LEA 09361450
         MEND                                                      @LEA 09362440
