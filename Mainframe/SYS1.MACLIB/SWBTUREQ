*/*      Bilingual Executable Macro (PL/AS and BAL)                  */ 00050000
*/**** START OF SPECIFICATIONS ***************************************/ 00100000
*/*                                                                  */ 00150000
*/*    MACRO NAME = IEFSJTRQ (SWBTUREQ)                              */ 00200000
*/*                                                                  */ 00250000
*/*    DESCRIPTIVE NAME = Scheduler JCL Facility Text Unit Request   */ 00300000
*/*                       Macro - SWBTUREQ                           */ 00350000
*/*    COPYRIGHT =                                                   */ 00400000
*/*             5695-047                                             */ 00450000
*/*             THIS MACRO IS "RESTRICTED MATERIALS OF IBM"          */ 00500000
*/*             (C) COPYRIGHT IBM CORPORATION 1990                   */ 00550000
*/*             LICENSED MATERIALS - PROPERTY OF IBM                 */ 00600000
*/*                                                                  */ 00650000
*/*    STATUS = HBB4410                                              */ 00700000
*/*                                                                  */ 00750000
*/*    FUNCTION =  The SWBTUREQ macro is used to invoke the          */ 00800000
*/*              Scheduler JCL Facility for one of the following     */ 00850000
*/*              services:                                           */ 00900000
*/*               Retrieving text units from a SWBTU,                */ 00950000
*/*               Splitting a single SWBTU into a set of SWBTUs,     */ 01000000
*/*               Splicing a set of SWBTUs into a single SWBTU.      */ 01050000
*/*                                                                  */ 01100000
*/*   OPERATION =                                                    */ 01150000
*/*   - Verify the REQUEST parameter. If the REQUEST parameter       */ 01200000
*/*     specifies a valid function then generate the instructions    */ 01250000
*/*     to put the requested function mask into Register 0.          */ 01300000
*/*     Otherwise issue an error MNOTE specifying that the REQUEST   */ 01350000
*/*     parameter was specified incorrectly.                         */ 01400000
*/*   - If the PARM parameter has been coded, then generate the      */ 01450000
*/*     instructions for Register 1 to point to a word (SWBTUPTR)    */ 01500000
*/*     which contains the address of the parameter list.            */ 01550000
*/*   - Generate the instructions to invoke the Scheduler JCL        */ 01600000
*/*     Facility SWBTU services (BAL - BASSM).                       */ 01650000
*/*                                                                  */ 01700000
*/*    NOTES =                                                       */ 01750000
*/*                                                                  */ 01800000
*/*      Bilingual Executable Macro (PL/AS and BAL)                  */ 01850000
*/*                                                                  */ 01900000
*/*      The invoker of a SWBTUREQ macro service should refer        */ 01907100
*/*      to the respective input parameter list mapping macro:       */ 01914200
*/*       RETRIEVE    -  IEFSJTRP                                    */ 01921300
*/*       SPLICE      -  IEFSJTSP                                    */ 01928400
*/*       SPLIT       -  IEFSJTSP                                    */ 01935500
*/*                                                                  */ 01942600
*/*      Also, the reason codes returned from the services are       */ 01944400
*/*      defined in macro IEFSJTRC.                                  */ 01946200
*/*                                                                  */ 01948000
*/*      DEPENDENCIES =                                              */ 01950000
*/*                                                                  */ 02000000
*/*        The caller must include the CVT, and IEFJESCT mapping     */ 02050000
*/*        macros.                                                   */ 02100000
*/*                                                                  */ 02150000
*/*        PL/AS Version =                                           */ 02200000
*/*          The caller must code the ?EPILOG macro, and define      */ 02250000
*/*          CVTPTR (equal to location 16)                           */ 02300000
*/*          The mapping macro IEFJESCT should be included       @D1A*/ 02316600
*/*          this macro is invoked.                              @D1A*/ 02333200
*/*                                                                  */ 02350000
*/*        BAL Version =                                             */ 02400000
*/*          If the caller codes the PARM parameter, a 4 byte        */ 02450000
*/*          pointer SWBTUPTR must be declared.  If the caller       */ 02500000
*/*          does not code the PARM parameter, before SWBTUREQ is    */ 02550000
*/*          invoked, R1 must contain the address of a 4 byte        */ 02600000
*/*          pointer which contains the address of the called        */ 02650000
*/*          function's parameter list.                              */ 02700000
*/*                                                                  */ 02750000
*/*      RESTRICTIONS = None                                         */ 02800000
*/*                                                                  */ 02850000
*/*      REGISTER CONVENTIONS =                                      */ 02900000
*/*        Register 0  - used to indicate which function was         */ 02950000
*/*                      requested for the service routine.          */ 03000000
*/*        Register 1  - contains address of a pointer area that     */ 03050000
*/*                      contains the address of the input           */ 03100000
*/*                      parameter list for the requested service.   */ 03150000
*/*        Register 14 - used for the return address from the        */ 03200000
*/*                      service routine.                            */ 03250000
*/*        Register 15 - used for the entry to the service routine   */ 03300000
*/*                      and contains the return code on exit.       */ 03350000
*/*                                                                  */ 03400000
*/*    MODULE TYPE = MACRO                                           */ 03450000
*/*                                                                  */ 03500000
*/*      PROCESSOR = PL/AS and Assember H                            */ 03550000
*/*                                                                  */ 03600000
*/*      MODULE SIZE = N/A                                           */ 03650000
*/*                                                                  */ 03700000
*/*      ATTRIBUTES = None                                           */ 03750000
*/*                                                                  */ 03800000
*/********************************************************************/ 03850000
*/*                                                                  */ 03900000
*/*    METHOD OF INVOCATION =                                        */ 03950000
*/*                                                                  */ 04000000
*/*    PL/AS Version =                                               */ 04050000
*/*                                                                  */ 04100000
*/*  ? label:  SWBTUREQ                                              */ 04150000
*/*                                                                  */ 04200000
*/*    REQUEST(RETRIEVE | SPLICE | SPLIT)                            */ 04250000
*/*    PARM(parameter_area)                                          */ 04300000
*/*    RETCODE(return_code)                                          */ 04350000
*/*                                                                  */ 04400000
*/*    PARAMETER DESCRIPTION =                                       */ 04450000
*/*                                                                  */ 04500000
*/*      PARAMETER = REQUEST                                         */ 04550000
*/*                                                                  */ 04600000
*/*        DESCRIPTION = Indicates which service is being requested. */ 04650000
*/*                                                                  */ 04700000
*/*        TYPE = Required Keyword                                   */ 04750000
*/*                                                                  */ 04800000
*/*        FORM = Character constant:                                */ 04850000
*/*                 RETRIEVE                                         */ 04900000
*/*                 SPLICE                                           */ 04950000
*/*                 SPLIT                                            */ 05000000
*/*                                                                  */ 05050000
*/*        DEFAULT = None                                            */ 05100000
*/*                                                                  */ 05150000
*/*      PARAMETER = PARM                                            */ 05200000
*/*                                                                  */ 05250000
*/*        DESCRIPTION = Specifies the address of the input          */ 05300000
*/*                      parameter list.                             */ 05350000
*/*                                                                  */ 05400000
*/*        TYPE = Optional Keyword                                   */ 05450000
*/*                                                                  */ 05500000
*/*        FORM = Character constant:                                */ 05550000
*/*                 SJTRP                                            */ 05600000
*/*                 SJTSP                                            */ 05650000
*/*                                                                  */ 05700000
*/*        DEFAULT = If this keyword is not specified, then the      */ 05750000
*/*                  service assumes R1 contains the address of a    */ 05800000
*/*                  word which points to the input parameter list.  */ 05850000
*/*                                                                  */ 05900000
*/*      PARAMETER = RETCODE                                         */ 05950000
*/*                                                                  */ 06000000
*/*        DESCRIPTION = Specifies the name of a variable to contain */ 06050000
*/*                      the return code.                            */ 06100000
*/*                                                                  */ 06150000
*/*        TYPE = Optional Keyword                                   */ 06200000
*/*                                                                  */ 06250000
*/*        FORM = Variable name                                      */ 06300000
*/*                                                                  */ 06350000
*/*        DEFAULT = None                                            */ 06400000
*/*                                                                  */ 06450000
*/*    PARAMETER INTERDEPENDENCIES =                                 */ 06500000
*/*             The requested function and input parameter list      */ 06550000
*/*             must be for the same service.                        */ 06600000
*/*                                                                  */ 06650000
*/*------------------------------------------------------------------*/ 06700000
*/*                                                                  */ 06750000
*/*    BAL Version =                                                 */ 06800000
*/*                                                                  */ 06850000
*/*      name            name: symbol. Begin name in column 1.       */ 06900000
*/*  b                   one or more blanks                          */ 06950000
*/*  SWBTUREQ                                                        */ 07000000
*/*  b                   one or more blanks                          */ 07050000
*/*                                                                  */ 07100000
*/*  ,REQUEST=RETRIEVE | SPLICE | SPLIT                              */ 07150000
*/*  ,PARM=parameter_area                                            */ 07200000
*/*                                                                  */ 07250000
*/*    PARAMETER DESCRIPTION =                                       */ 07300000
*/*                                                                  */ 07350000
*/*      PARAMETER = REQUEST                                         */ 07400000
*/*                                                                  */ 07450000
*/*        DESCRIPTION = Indicates which service is being requested. */ 07500000
*/*                                                                  */ 07550000
*/*        TYPE = Required Keyword                                   */ 07600000
*/*                                                                  */ 07650000
*/*        FORM = Character constant:                                */ 07700000
*/*                 RETRIEVE                                         */ 07750000
*/*                 SPLICE                                           */ 07800000
*/*                 SPLIT                                            */ 07850000
*/*                                                                  */ 07900000
*/*        DEFAULT = None                                            */ 07950000
*/*                                                                  */ 08000000
*/*      PARAMETER = PARM                                            */ 08050000
*/*                                                                  */ 08100000
*/*        DESCRIPTION = Specifies the address of the input          */ 08150000
*/*                      parameter list.                             */ 08200000
*/*                                                                  */ 08250000
*/*        TYPE = Optional Keyword                                   */ 08300000
*/*                                                                  */ 08350000
*/*        FORM = Address, where address may be:                     */ 08400000
*/*                - the address of the parameter list               */ 08450000
*/*                - a register (other than zero) in parenthesis,    */ 08500000
*/*                  containing the address of the input parameter   */ 08550000
*/*                  list                                            */ 08600000
*/*                                                                  */ 08650000
*/*        DEFAULT = If this keyword is not specified, then the      */ 08700000
*/*                  service assumes R1 contains the address of a    */ 08750000
*/*                  word which points to the input parameter list.  */ 08800000
*/*                                                                  */ 08850000
*/*    PARAMETER INTERDEPENDENCIES =                                 */ 08900000
*/*             The requested function and input parameter list      */ 08950000
*/*             must be for the same service.                        */ 09000000
*/*                                                                  */ 09050000
*/*    OUTPUT =                                                      */ 09100000
*/*                                                                  */ 09150000
*/*   The output from the SWBTUREQ macro consists of instructions to */ 09200000
*/*   put the function mask into register 0, put the address of the  */ 09250000
*/*   input parameter list into SWBTUPTR and put the address of      */ 09300000
*/*   SWBTUPTR into register 1.                                      */ 09350000
*/*   Then a test is made to determine if the SWBTUREQ services are  */ 09400000
*/*   available.  If not then return code 24 is placed into register */ 09450000
*/*   15 (and RETCODE variable for PL/AS).  If the service is        */ 09500000
*/*   available, then the SJF SWBTUREQ service is invoked.           */ 09550000
*/*   If the RETCODE variable was specified in the PL/AS version,    */ 09600000
*/*   then upon return from the service the return code in register  */ 09650000
*/*   15 is placed in the RETCODE variable.                          */ 09700000
*/*                                                                  */ 09750000
*/*    EXIT NORMAL =  Macro Phase of Compiler                        */ 09800000
*/*                                                                  */ 09850000
*/*      CONDITION = No errors detected                              */ 09900000
*/*                                                                  */ 09950000
*/*      OUTPUT = When the SWBTUREQ service is invoked,              */ 09954100
*/*               the fields in the input parameter list designated  */ 09958200
*/*               as output fields and assoicated data areas are     */ 09962400
*/*               filled in.                                         */ 09968600
*/*               Register 0 will be set to zero or for some input   */ 09974800
*/*               parameter errors (when register 15 = 4) it will    */ 09981000
*/*               contain the reason code.                           */ 09987200
*/*                                                                  */ 09993400
*/*      RETURN CODE = EHARC = 0                                     */ 10000000
*/*                                                                  */ 10050000
*/*    EXIT ERROR =                                                  */ 10100000
*/*                                                                  */ 10150000
*/*      CONDITION = REQUEST keyword was not specified or specified  */ 10200000
*/*                  incorrectly.                                    */ 10250000
*/*                                                                  */ 10300000
*/*      OUTPUT = Error MNOTE issued.                                */ 10350000
*/*                                                                  */ 10400000
*/*      RETURN CODE = EHARC = 12                                    */ 10450000
*/*                                                                  */ 10500000
*/*      CONDITION = Macro IEFJESCT was not included.            @D1A*/ 10507100
*/*                                                              @D1A*/ 10514200
*/*      OUTPUT = Error MNOTE issued.                            @D1A*/ 10521300
*/*                                                              @D1A*/ 10528400
*/*      RETURN CODE = EHARC = 4                                 @D1A*/ 10535500
*/*                                                              @D1A*/ 10542600
*/*    EXIT ERROR =                                                  */ 10550000
*/*                                                                  */ 10600000
*/*      CONDITION = At least one of the keywords had too many       */ 10650000
*/*                  parameters specified.                           */ 10700000
*/*                                                                  */ 10750000
*/*      OUTPUT = Warning MNOTE issued.                              */ 10800000
*/*                                                                  */ 10850000
*/*      RETURN CODE = EHARC = 4                                     */ 10900000
*/*                                                                  */ 10950000
*/*    EXTERNAL REFERENCES =                                         */ 11000000
*/*                                                                  */ 11050000
*/*      ROUTINES =                                                  */ 11100000
*/*                IEFSJTCL - SWBTUREQ Service Control Module        */ 11150000
*/*                                                                  */ 11200000
*/*      DATA AREAS =                                                */ 11250000
*/*          PLAS Version:                                           */ 11275000
*/*                SWBTUPTR - Word, which is pointed to by register  */ 11300000
*/*                           1, that contains the address of the    */ 11350000
*/*                           input parameter list.                  */ 11400000
*/*                                                                  */ 11450000
*/*      CONTROL BLOCKS =                                            */ 11500000
*/*                CVT      - Communications Vector Table            */ 11550000
*/*                JESCT    - Job Entry Communications Table         */ 11600000
*/*                                                                  */ 11650000
*/*    TABLES = None                                                 */ 11700000
*/*                                                                  */ 11750000
*/*    MAPPING MACROS =                                              */ 11800000
*/*                                                                  */ 11850000
*/*      (Legend: C=Create, D=Delete, M=Modify, R=Reference)         */ 11900000
*/*                                                                  */ 11950000
*/*      Name       Description                       Access         */ 12000000
*/*      --------   --------------------------------- ------         */ 12050000
*/*      CVT        Communications Vector Table       (R)            */ 12100000
*/*      JESCT      Job Entry Communications Table    (R)            */ 12150000
*/*                                                                  */ 12200000
*/*    EXECUTABLE MACROS = None                                      */ 12250000
*/*                                                                  */ 12300000
*/*    SERIALIZATION = None                                          */ 12350000
*/*                                                                  */ 12400000
*/*    MESSAGES =                                                    */ 12450000
*/*                                                                  */ 12500000
*/*   MNOTE 04,'AHA0051 SWBTUREQ:  THE MACLIST maclist IS NOT        */ 12550000
*/*            ALLOWED.  IT IS IGNORED.'                         @P1C*/ 12600000
*/*   MNOTE 04,'AHA0031 SWBTUREQ:  request IS TOO LONG. ARGUMENTS    */ 12650000
*/*            ARE IGNORED AFTER request(1).'                    @P1C*/ 12700000
*/*   MNOTE 04,'AHA0031 SWBTUREQ:  parm IS TOO LONG. ARGUMENTS ARE   */ 12750000
*/*            IGNORED AFTER parm(1).'                           @P1C*/ 12800000
*/*   MNOTE 04,'AHA0031 SWBTUREQ:  retcode IS TOO LONG. ARGUMENTS    */ 12850000
*/*            ARE IGNORED AFTER retcode(1).'                    @P1C*/ 12900000
*/*   MNOTE 12,'AHA0013 SWBTUREQ:  REQUEST IS REQUIRED BUT IS NOT    */ 12950000
*/*            SUPPLIED. NO TEXT IS GENERATED.'                  @P1C*/ 13000000
*/*   MNOTE 12,'AHA0043 SWBTUREQ:  REQUEST MUST BE ONE OF THE SWBTU  */ 13050000
*/*            FUNCTIONS. NO TEXT IS GENERATED.'                 @P1C*/ 13100000
*/*   MNOTE 04,'AHA0053 SWBTUREQ:  Macro IEFJESCT is required but    */ 13110000
*/*            was not found before this invocation'             @D1A*/ 13120000
*/*   MNOTE 04,'AHA0053 SWBTUREQ:  Insert or move the INCLUDE of     */ 13130000
*/*            IEFJESCT before this invocation'                  @D1A*/ 13140000
*/*                                                                  */ 13150000
*/*    ABEND CODES = N/A                                             */ 13200000
*/*                                                                  */ 13250000
*/*    COMPONENT =  BB131 (SJF)                                      */ 13300000
*/*                                                                  */ 13350000
*/*    DISTRIBUTION LIBRARY = AMACLIB                                */ 13400000
*/*                                                                  */ 13450000
*/*    CHANGE ACTIVITY = L0, P1, D1                              @D1C*/ 13500000
*/*                                                                  */ 13550000
*/*    $L0:  EMVS2     HBB4410  881212  PDZ1:  SWBTUREQ Services     */ 13600000
*/*    $P1:  PEO1503   HBB4410  890206  PDZ1:  SWBTUREQ MNOTES   @P1A*/ 13625000
*/*    $D1:  DEO0265 HBB4410 890918 PDCC: Compile error checking @D1A*/ 13637500
*/*                                                                  */ 13650000
*/**** END OF SPECIFICATIONS *****************************************/ 13700000
*/*                                                                  */ 13750000
*/* A - Defined initial SWBTUREQ macro for Enterprise II support.    */ 13800000
*/* C - Changed MNOTES messages to include macro name, SWBTUREQ. @P1A*/ 13825000
*/* A - Checked that the JESCT mapping was included.             @D1A*/ 13837500
*/*                                                                  */ 13850000
*/********************************************************************/ 13900000
*@EJECT;                                                                13950000
*/********************************************************************/ 14000000
*/*                                                                  */ 14050000
*/* Definition of the macro invocation.                              */ 14100000
*/*                                                                  */ 14150000
*/********************************************************************/ 14200000
*                                                                       14250000
*%SWBTUREQ:                                                             14300000
*          MACRO KEYS(REQUEST,PARM,RETCODE);                            14350000
*                                                                       14400000
*/* External Declarations */                                            14450000
*                                                                       14500000
*  DCL EHAREGS CHAR EXT;          /* Regs to be declared by EPILOG  */  14550000
*  DCL EHARC FIXED EXT;           /* Return code                    */  14600000
*  DECLARE IEFJESCT CHARACTER EXTERNAL;          /*             @D1A*/  14616600
*  DEACTIVATE IEFJESCT;           /*                            @D1A*/  14633200
*                                                                       14650000
*/* Initialize external variables */                                    14700000
*                                                                       14750000
*  EHARC=0;                       /* Initialize the return code     */  14800000
*/*                                                                 */  14850000
*/* Declaration of internal macro variables.                        */  14900000
*/*                                                                 */  14950000
*  DCL IREQSTMT CHAR;             /* Input macro statement          */  15000000
*  DCL IERRMSG CHAR;              /* Error message                  */  15050000
*  DCL ICOMCOL FIXED;             /* Comment column                 */  15100000
*                                                                       15150000
*/* Initialize internal variables */                                    15200000
*                                                                       15250000
*  ICOMCOL=MACRMAR-35;            /* Set comment column             */  15300000
*                                                                       15350000
*/*******************************************************************/  15400000
*/*                                                                 */  15450000
*/* Check for the presence of the JESCT.  If it isn't there, issue  */  15452100
*/* a error MNOTE saying that the JESCT macro is a requirement.     */  15454200
*/*                                                             @D1A*/  15456300
*/*******************************************************************/  15458400
*  IF IEFJESCT ^= 'IEFJESCT' THEN DO; /* Is the JESCT there?    @D1A*/  15460500
*                                                                       15462600
*    IERRMSG = 'AHA0053 SWBTUREQ: MACRO IEFJESCT REQUIRED BUT WAS ' ||  15464700
*              'NOT FOUND BEFORE THIS INVOCATION';   /* PRIME MESSAGE   15466800
*                                                       AREA     @D1A*/ 15468900
*    ANSWER MSG(IERRMSG) NORESCAN;  /* PUT OUT MESSAGE           @D1A*/ 15470300
*    ANSWER(COMMENT(IERRMSG)) COLUMN(10) NORESCAN;   /*          @D1A*/ 15471700
*                                                                       15473100
*    IERRMSG = 'AHA0053 SWBTUREQ: INSERT OR MOVE THE INCLUDE ' ||       15475200
*              'OF IEFJESCT BEFORE THIS INVOCATION';   /* PRIME MESSAGE 15477300
*                                                         AREA   @D1A*/ 15479400
*    ANSWER MSG(IERRMSG) NORESCAN;  /* PUT OUT MESSAGE           @D1A*/ 15480800
*    ANSWER(COMMENT(IERRMSG)) COLUMN(10) NORESCAN;   /*          @D1A*/ 15482200
*                                                                       15483600
*    EHARC = 4;                    /* WARNING FROM MACRO PHASE   @D1A*/ 15485700
*    END;                         /*                            @D1A*/  15492000
*/*******************************************************************/  15494100
*/*                                                                 */  15496200
*/* Check if any positional parameters were specified.  If so,      */  15500000
*/* issue a warning MNOTE specifying that the positional parameters */  15550000
*/* are ignored.                                                    */  15600000
*/*                                                                 */  15650000
*/*******************************************************************/  15700000
*  IF NUMBER(MACLIST) ^= 0 THEN DO; /* Any positional parameters?   */  15750000
*    EHARC = 4;                   /* Set warning return code        */  15800000
*    IERRMSG = 'AHA0051 SWBTUREQ:  THE MACLIST ' || MACLIST ||          15850000
*               ' IS NOT ALLOWED. IT IS IGNORED.'; /* Prime message     15900000
*                                                     area      @P1C*/  15950000
*    ANSWER MSG(IERRMSG) NORESCAN;  /* Put out message              */  16000000
*    ANSWER(COMMENT(IERRMSG)) COLUMN(10) NORESCAN;                      16050000
*    END;                                                               16100000
*/*******************************************************************/  16150000
*/*                                                                 */  16200000
*/* Check if more than one argument was specified for the REQUEST   */  16250000
*/* parameter.  If so, issue a warning MNOTE specifying that the    */  16300000
*/* other arguments are ignored.                                    */  16350000
*/*                                                                 */  16400000
*/*******************************************************************/  16450000
*  IF NUMBER(REQUEST) > 1 THEN DO; /* More than 1 parm for REQUEST? */  16500000
*    EHARC = 4;                   /* Set warning return code        */  16550000
*    IERRMSG = 'AHA0031 SWBTUREQ:  ' || REQUEST ||                      16600000
*    ' IS TOO LONG. ARGUMENTS ARE IGNORED AFTER ' ||                    16650000
*    REQUEST(1) || '.';           /* Prime message area         @P1C*/  16700000
*    ANSWER MSG(IERRMSG) NORESCAN; /* Put out message               */  16750000
*    ANSWER(COMMENT(IERRMSG)) COLUMN(10) NORESCAN;                      16800000
*  END;                                                                 16850000
*/*******************************************************************/  16900000
*/*                                                                 */  16950000
*/* Check if more than one argument was specified for the PARM      */  17000000
*/* parameter.  If so, issue a warning MNOTE specifying that the    */  17050000
*/* other arguments are ignored.                                    */  17100000
*/*                                                                 */  17150000
*/*******************************************************************/  17200000
*  IF NUMBER(PARM) > 1 THEN DO;   /* More than 1 parm for PARM?     */  17250000
*    EHARC = 4;                   /* Set warning return code        */  17300000
*    IERRMSG = 'AHA0031 SWBTUREQ:  ' || PARM ||                         17350000
*      ' IS TOO LONG. ARGUMENTS ARE IGNORED AFTER ' ||                  17400000
*      PARM(1) || '.';            /* Prime message area         @P1C*/  17450000
*    ANSWER MSG(IERRMSG) NORESCAN; /* Put out message               */  17500000
*    ANSWER(COMMENT(IERRMSG)) COLUMN(10) NORESCAN;                      17550000
*  END;                                                                 17600000
*/*******************************************************************/  17650000
*/*                                                                 */  17700000
*/* Check if more than one argument was specified for the RETCODE   */  17750000
*/* parameter.  If so, issue a warning MNOTE specifying that the    */  17800000
*/* other arguments are ignored.                                    */  17850000
*/*                                                                 */  17900000
*/*******************************************************************/  17950000
*  IF NUMBER(RETCODE) > 1 THEN DO; /* More than 1 parm for RETCODE? */  18000000
*    EHARC = 4;                   /* Set warning return code        */  18050000
*    IERRMSG = 'AHA0031 SWBTUREQ:  ' || RETCODE ||                      18100000
*      ' IS TOO LONG. ARGUMENTS ARE IGNORED AFTER ' ||                  18150000
*      RETCODE(1) || '.';         /* Prime message area         @P1C*/  18200000
*    ANSWER MSG(IERRMSG) NORESCAN; /* Put out message               */  18250000
*    ANSWER(COMMENT(IERRMSG)) COLUMN(10) NORESCAN;                      18300000
*  END;                                                                 18350000
*                                                                       18400000
*/*******************************************************************/  18450000
*/*                                                                 */  18500000
*/* Verify the REQUEST parameter.                                   */  18550000
*/*                                                                 */  18600000
*/*******************************************************************/  18650000
*  IF REQUEST(1) = 'RETRIEVE' |                                         18700000
*     REQUEST(1) = 'SPLICE' |                                           18750000
*     REQUEST(1) = 'SPLIT'                                              18800000
*   THEN DO;                         /* Valid request specified?    */  18850000
*     IF INDEX(EHAREGS,'00F')=0 THEN                                    18900000
*        EHAREGS=EHAREGS || '00F';   /* Have EPILOG generate a          18950000
*                                       declare for register 0      */  19000000
*     IF INDEX(EHAREGS,'15F')=0 THEN                                    19050000
*        EHAREGS=EHAREGS || '15F';   /* Have EPILOG generate a          19100000
*                                       declare for register 15     */  19150000
*                                                                       19200000
*/*******************************************************************/  19250000
*/*                                                                 */  19300000
*/* Generate the instructions to test if the SWBTUREQ services      */  19350000
*/* are available.                                                  */  19400000
*/*                                                                 */  19450000
*/*******************************************************************/  19500000
*     IF MACLABEL ^= '' THEN                                            19550000
*        ANSWER(MACLABEL) COLUMN(MACLMAR) NORESCAN;                     19600000
*                                                                       19650000
*     IREQSTMT = 'SWBTUREQ ' || MACLIST || ' ' || MACKEYS;              19700000
*     ANSWER('DO;') COLUMN(MACCOL) NORESCAN;                            19750000
*     ANSWER(COMMENT(IREQSTMT)) COLUMN(ICOMCOL) NORESCAN;               19800000
*     ANSWER('IF JESSJTCL ^= 0 THEN') COLUMN(MACCOL)                    19850000
*      NORESCAN;               /* Generate test for SWBTUREQ service*/  19900000
*    ANSWER(COMMENT('Test SWBTU entry point for non-zero'))             19950000
*      COLUMN(ICOMCOL) NORESCAN; /* Generate Comment                */  20000000
*     ANSWER('DO;') COLUMN(MACCOL)                                      20050000
*      NORESCAN;               /* Generate DO statement             */  20100000
*     ANSWER(COMMENT('SWBTU service exists')) COLUMN(ICOMCOL)           20150000
*      NORESCAN;               /* Generate Comment                  */  20200000
*     ANSWER('RFY GPR00F RSTD;') COLUMN(MACCOL+2) NORESCAN;             20250000
*                                                                       20300000
*/*******************************************************************/  20350000
*/*                                                                 */  20400000
*/* Generate the instructions to put the function mask into         */  20450000
*/* Register 0.                                                     */  20500000
*/*                                                                 */  20550000
*/*******************************************************************/  20600000
*     IF REQUEST(1)='RETRIEVE' THEN DO;                                 20650000
*        ANSWER('GPR00F=1;') COLUMN(MACCOL+2) NORESCAN;                 20700000
*        ANSWER(COMMENT('Specify RETRIEVE request')) COLUMN(ICOMCOL)    20750000
*         NORESCAN;                                                     20800000
*      END;                                                             20850000
*     IF REQUEST(1)='SPLICE'                                            20900000
*      THEN DO;                                                         20950000
*        ANSWER('GPR00F=2;') COLUMN(MACCOL+2) NORESCAN;                 21000000
*        ANSWER(COMMENT('Specify SPLICE request')) COLUMN(ICOMCOL)      21050000
*         NORESCAN;                                                     21100000
*      END;                                                             21150000
*     IF REQUEST(1)='SPLIT'                                             21200000
*      THEN DO;                                                         21250000
*        ANSWER('GPR00F=3;') COLUMN(MACCOL+2) NORESCAN;                 21300000
*        ANSWER(COMMENT('Specify SPLIT request')) COLUMN(ICOMCOL)       21350000
*         NORESCAN;                                                     21400000
*      END;                                                             21450000
*                                                                       21500000
*/*******************************************************************/  21550000
*/*                                                                 */  21600000
*/* If the PARM parameter has been coded, then generate the         */  21650000
*/* instruction to invoke the SWBTUREQ service passing the PARM.    */  21700000
*/* Otherwise generate the instruction to invoke the SWBTUREQ       */  21750000
*/* service without a parameter.                                    */  21800000
*/*                                                                 */  21850000
*/*******************************************************************/  21900000
*     IF PARM(1)=''                                                     21950000
*      THEN ANSWER('CALL SWBTU;') COLUMN(MACCOL+2) NORESCAN;            22000000
*      ELSE ANSWER('CALL SWBTU(' || PARM(1) || ');') COLUMN(MACCOL+2)   22050000
*            NORESCAN;                                                  22100000
*     ANSWER(COMMENT('Invoke SJF SWBTUREQ Service')) COLUMN(ICOMCOL)    22150000
*      NORESCAN;                                                        22200000
*     ANSWER('RFY GPR00F UNRSTD;') COLUMN(MACCOL+2) NORESCAN;           22250000
*     ANSWER('END;') COLUMN(MACCOL) NORESCAN;                           22300000
*     ANSWER(COMMENT('End SWBTU service exists processing'))            22350000
*      COLUMN(ICOMCOL) NORESCAN;                                        22400000
*     ANSWER('ELSE DO;') COLUMN(MACCOL) NORESCAN; /* Generate the else  22450000
*                                         for the test if SWBTUREQ      22500000
*                                         service loaded            */  22550000
*     ANSWER(COMMENT('SWBTU service entry point is zero'))              22600000
*      COLUMN(ICOMCOL) NORESCAN;                                        22650000
*     ANSWER('RFY GPR15F RSTD;') COLUMN(MACCOL+2) NORESCAN;             22700000
*     ANSWER('GPR15F = 24;') COLUMN(MACCOL+2) NORESCAN; /* The return   22750000
*                                         code is set to 24         */  22800000
*     ANSWER(COMMENT('Indicate SWBTU service does not exist'))          22850000
*      COLUMN(ICOMCOL) NORESCAN;                                        22900000
*     ANSWER('RFY GPR15F UNRSTD;') COLUMN(MACCOL+2)                     22950000
*      NORESCAN;                                                        23000000
*     ANSWER('END;') COLUMN(MACCOL) NORESCAN; /* SWBTUREQ service is    23050000
*                                               not loaded          */  23100000
*     ANSWER(COMMENT('End SWBTU service entry point zero'))             23150000
*      COLUMN(ICOMCOL) NORESCAN;                                        23200000
*                                                                       23250000
*/*******************************************************************/  23300000
*/*                                                                 */  23350000
*/* If the RETCODE parameter has been coded, then generate the      */  23400000
*/* instructions to store register 15 in the variable name          */  23450000
*/* specified.                                                      */  23500000
*/*                                                                 */  23550000
*/*******************************************************************/  23600000
*     IF RETCODE(1)^=''                                                 23650000
*      THEN DO;                       /* Test for RETCODE parameter */  23700000
*        ANSWER('RFY GPR15F RSTD;') COLUMN(MACCOL)                      23750000
*         NORESCAN;                                                     23800000
*        ANSWER(RETCODE(1) || ' = ' || 'GPR15F;') COLUMN(MACCOL)        23850000
*         NORESCAN;                                                     23900000
*        ANSWER(COMMENT('Save return code')) COLUMN(ICOMCOL)            23950000
*         NORESCAN;                                                     24000000
*        ANSWER('RFY GPR15F UNRSTD;') COLUMN(MACCOL)                    24050000
*         NORESCAN;                                                     24100000
*      END;                                                             24150000
*     ANSWER('END;') COLUMN(MACCOL) NORESCAN; /* SWBTUREQ macro         24200000
*                                                invocation         */  24250000
*     ANSWER(COMMENT(IREQSTMT)) COLUMN(ICOMCOL) NORESCAN;               24300000
*   END;                          /* Valid REQUEST specified        */  24350000
*                                                                       24400000
*/*******************************************************************/  24450000
*/*                                                                 */  24500000
*/* If the REQUEST parameter does not specify a valid function      */  24550000
*/* then issue an error MNOTE specifying that the REQUEST           */  24600000
*/* parameter was specified incorrectly.                            */  24650000
*/*                                                                 */  24700000
*/*******************************************************************/  24750000
*   ELSE DO;                                                            24800000
*     EHARC=12;                   /* Set error return code          */  24850000
*     IF NUMBER(REQUEST) = 0 THEN DO;                                   24900000
*        IERRMSG = 'AHA0013 SWBTUREQ:  REQUEST IS REQUIRED BUT IS NOT'  24937500
*         || ' SUPPLIED. NO TEXT IS GENERATED.'; /* Prime message area  24975000
*                                                   area        @P1C*/  25012500
*        ANSWER MSG(IERRMSG) NORESCAN; /* Put out message           */  25050000
*        ANSWER(COMMENT(IERRMSG)) COLUMN(10) NORESCAN;                  25100000
*      END;                                                             25150000
*      ELSE DO;                                                         25200000
*      IERRMSG = 'AHA0043 SWBTUREQ:  REQUEST MUST BE ONE OF THE SWBTU'  25237500
*         || ' FUNCTIONS. NO TEXT IS GENERATED.'; /* Prime message      25275000
*                                                    area       @P1C*/  25312500
*        ANSWER MSG(IERRMSG) NORESCAN; /* Put out message           */  25350000
*        ANSWER(COMMENT(IERRMSG)) COLUMN(10) NORESCAN;                  25400000
*      END;                                                             25450000
*   END;                          /* Incorrect REQUEST value        */  25500000
*                                                                       25550000
*  RETURN CODE(EHARC);                                                  25600000
*                                                                       25650000
*/*                                                                 */  25700000
*/* End of PL/AS macro version.                                     */  25750000
*/*                                                                 */  25800000
*%END;                                                                  25850000
*                                                                       25900000
*%GOTO  ENDMAC;                   /* Skip BAL Macro Portion          */ 25950000
*/*                                                                     26000000
.********************************************************************** 26050000
.*                                                                    * 26100000
.*  Definition of the macro invocation.                               * 26150000
.*                                                                    * 26200000
.********************************************************************** 26250000
         MACRO                                                          26300000
&NAME    SWBTUREQ &REQUEST=,&PARM=                                      26350000
.*                                                                      26400000
.********************************************************************** 26450000
.*                                                                    * 26500000
.*  Declaration of internal macro variables.                          * 26550000
.*                                                                    * 26600000
.********************************************************************** 26650000
.*                                                                      26700000
         LCLC  &REG              Register specified for PARM            26750000
         LCLC  &FSTPARM          First parameter for PARM               26800000
.*                                                                      26850000
.********************************************************************** 26900000
.*                                                                    * 26950000
.*  Check if any positional parameters were specified.  If so,        * 27000000
.*  issue a warning MNOTE specifying that the positional parameters   * 27050000
.*  are ignored.                                                      * 27100000
.*                                                                    * 27150000
.********************************************************************** 27200000
         AIF   ('&SYSLIST(1)' EQ '').CHKREQ                             27250000
         MNOTE 04,'AHA0051 SWBTUREQ:  THE MACLIST &SYSLIST(1) IS NOT AL+27300000
               LOWED. IT IS IGNORED.'                              @P1C 27350000
.*                                                                      27400000
.********************************************************************** 27450000
.*                                                                    * 27500000
.*  Check if more than one argument was specified for the REQUEST     * 27550000
.*  parameter.  If so, issue a warning MNOTE specifying that the      * 27600000
.*  other arguments are ignored.                                      * 27650000
.*                                                                    * 27700000
.********************************************************************** 27750000
.CHKREQ  ANOP                                                           27800000
         AIF  (N'&REQUEST LE 1).CHKPARM                                 27850000
         MNOTE 04,'AHA0031 SWBTUREQ:  &REQUEST IS TOO LONG. ARGUMENTS A+27900000
               RE IGNORED AFTER &REQUEST(1).'                      @P1C 27950000
.*                                                                      28000000
.********************************************************************   28050000
.*                                                                  *   28100000
.*  Check if more than one argument was specified for the PARM      *   28150000
.*  parameter.  If so, issue a warning MNOTE specifying that the    *   28200000
.*  other arguments are ignored.                                    *   28250000
.*                                                                  *   28300000
.********************************************************************   28350000
.CHKPARM ANOP                                                           28400000
         AIF (N'&PARM LE 1).CHKLBL                                      28450000
         MNOTE 04,'AHA0031 SWBTUREQ:  &PARM IS TOO LONG. ARGUMENTS ARE +28500000
               IGNORED AFTER &PARM(1).'                            @P1C 28550000
.*                                                                      28600000
.*********************************************************************  28650000
.*                                                                   *  28700000
.*  If a label was specified on the macro invocation then            *  28750000
.*  generate an EQU for the label.                                   *  28800000
.*                                                                   *  28850000
.*********************************************************************  28900000
.CHKLBL  ANOP                                                           28950000
         AIF   ('&NAME' EQ '').SKIPLBL                                  29000000
&NAME    EQU   *                                                        29050000
.SKIPLBL ANOP                                                           29100000
.*                                                                      29150000
.*********************************************************************  29200000
.*                                                                   *  29250000
.*  Verify the REQUEST parameter.                                    *  29300000
.*                                                                   *  29350000
.*********************************************************************  29400000
         AIF   ('&REQUEST(1)' EQ 'RETRIEVE').REQGOOD                    29450000
         AIF   ('&REQUEST(1)' EQ 'SPLICE').REQGOOD                      29500000
         AIF   ('&REQUEST(1)' EQ 'SPLIT').REQGOOD                       29550000
         AGO   .REQERR                                                  29600000
.*                                                                      29650000
.*********************************************************************  29700000
.*                                                                   *  29750000
.*  Generate the instructions to test if the SWBTUREQ services       *  29800000
.*  are available.                                                   *  29850000
.*                                                                   *  29900000
.*********************************************************************  29950000
.REQGOOD ANOP                                                           30000000
         L     15,CVTPTR                  Get address of CVT            30050000
         USING CVTMAP,15                  Set addressability TO CVT     30100000
         L     15,CVTJESCT                Get address of JESCT          30150000
         USING JESCT,15                   Set addressability to JESCT   30200000
         L     15,JESCTEXT                Get address of JESCT          30250000
*                                          pageable extension           30300000
         USING JESPEXT,15                 Set addressability to the     30350000
*                                          JESCT pageable extension     30400000
         L     15,JESSJTCL                Get address of the SWBTUREQ   30450000
*                                          service routine              30500000
         LTR   15,15                      Test SWBTU entry point for    30550000
*                                          non-zero                     30600000
         BZ    NSWB&SYSNDX                If SWBTU service is not       30650000
*                                          loaded, branch around call   30700000
         DROP  15                         JESPEXT                       30750000
.*                                                                      30800000
.*********************************************************************  30850000
.*                                                                   *  30900000
.*  Generate the instructions to put the function mask into          *  30950000
.*  Register 0.                                                      *  31000000
.*                                                                   *  31050000
.*********************************************************************  31100000
         AIF   ('&REQUEST(1)' NE 'RETRIEVE').SPLICE                     31150000
         LA    0,1                        Specify RETRIEVE request      31200000
         AGO   .REQDONE                                                 31250000
.SPLICE  ANOP                                                           31300000
         AIF   ('&REQUEST(1)' NE 'SPLICE').SPLIT                        31350000
         LA    0,2                        Specify SPLICE request        31400000
         AGO   .REQDONE                                                 31450000
.SPLIT   ANOP                                                           31500000
         AIF   ('&REQUEST(1)' NE 'SPLIT').REQERR                        31550000
         LA    0,3                        Specify SPLIT request         31600000
.*                                                                      31650000
.*********************************************************************  31700000
.*                                                                   *  31750000
.*  If the PARM parameter has been coded, then generate the          *  31800000
.*  instructions for Register 1 to point to a word (SWBTUPTR)        *  31850000
.*  which contains the address of the parameter list.                *  31900000
.*                                                                   *  31950000
.*********************************************************************  32000000
.REQDONE ANOP                                                           32050000
         AIF   (N'&PARM EQ 0).INVOKE      Parm not specified            32100000
         AIF   (N'&PARM GT 1).TWOPARM     More than one parm specified  32150000
         AIF   ('&PARM'(1,1) EQ '(').REGPARM                            32200000
         LA    1,&PARM                    Get address of parameter      32250000
         ST    1,SWBTUPTR                 Put address into SWBTUPTR     32300000
         LA    1,SWBTUPTR                 Set register 1                32350000
         AGO   .INVOKE                                                  32400000
.REGPARM ANOP                                                           32450000
&REG     SETC  '&PARM'(2,K'&PARM-2)       Register specified for PARM   32500000
         ST    &REG,SWBTUPTR              Put address into SWBTUPTR     32550000
         LA    1,SWBTUPTR                 Set register 1                32600000
         AGO   .INVOKE                                                  32650000
.TWOPARM ANOP                                                           32700000
&FSTPARM SETC  '&PARM(1)'                                               32750000
         AIF   ('&FSTPARM'(1,1) EQ '(').TWOREG                          32800000
         LA    1,&PARM(1)                 Get address of parameter      32850000
         ST    1,SWBTUPTR                 Put address into SWBTUPTR     32900000
         LA    1,SWBTUPTR                 Set register 1                32950000
         AGO   .INVOKE                                                  33000000
.TWOREG  ANOP                                                           33050000
&REG     SETC  '&FSTPARM'(2,K'&FSTPARM-2) Register specified for PARM   33100000
         ST    &REG,SWBTUPTR              Put address into SWBTUPTR     33150000
         LA    1,SWBTUPTR                 Set register 1                33200000
.*                                                                      33250000
.*********************************************************************  33300000
.*                                                                   *  33350000
.* Generate the instructions to invoke SWBTUREQ service.             *  33400000
.*                                                                   *  33450000
.*********************************************************************  33500000
.INVOKE  ANOP                                                           33550000
         BASSM 14,15                      Invoke SJF SWBTUREQ Service   33600000
         B     XSWB&SYSNDX                Branch around not avail RC    33650000
NSWB&SYSNDX   EQU *                                                     33700000
         LA    15,24                      Indicate SWBTU service does   33750000
*                                          not exist                    33800000
XSWB&SYSNDX   EQU *                                                     33850000
         AGO   .END                                                     33900000
.*                                                                      33950000
.*********************************************************************  34000000
.*                                                                   *  34050000
.*  If the REQUEST parameter was not specified or specified          *  34100000
.*  incorrectly then generate an error MNOTE.                        *  34150000
.*                                                                   *  34200000
.*********************************************************************  34250000
.REQERR  ANOP                                                           34300000
         AIF   ('&REQUEST' NE '').REQMSG2                               34350000
.REQMSG1 ANOP                                                           34400000
         MNOTE 12,'AHA0013 SWBTUREQ:  REQUEST IS REQUIRED BUT IS NOT SU+34450000
               PPLIED. NO TEXT IS GENERATED.'                      @P1C 34500000
         AGO   .END                                                     34550000
.REQMSG2 ANOP                                                           34600000
         MNOTE 12,'AHA0043 SWBTUREQ:  REQUEST MUST BE ONE OF THE SWBTU +34650000
               FUNCTIONS. NO TEXT IS GENERATED.'                   @P1C 34700000
.*                                                                      34750000
.*  End of BAL macro version.                                        *  34800000
.*                                                                      34850000
.END     ANOP                                                           34900000
         MEND                                                           34950000
**/                                                                     35000000
*%ENDMAC: ;                                                             35050000
