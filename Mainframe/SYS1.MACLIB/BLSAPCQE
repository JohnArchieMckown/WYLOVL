*/**  START OF SPECIFICATIONS FOR BLSAPCQE ***************************/ 00050000
*/*                                                                  */ 00100000
*/*  $MAC(BLSAPCQE) COMP(SC132) PROD(HBB3310):                       */ 00150000
*/*                                                                  */ 00200000
*/*  MACRO NAME = BLSAPCQE                                           */ 00250000
*/*                                                                  */ 00300000
*/*  DESCRIPTIVE NAME = Contention Queue Element (CQE) create        */ 00350000
*/*                     service parameter list                       */ 00400000
*/*                                                                  */ 00450000
*/*  COPYRIGHT =                                                     */ 00491600
*/*   5685-001                                                       */ 00533200
*/*   THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                    */ 00574800
*/*   (C) COPYRIGHT IBM CORP. 1986, 1988                             */ 00616400
*/*   LICENSED MATERIALS - PROPERTY OF IBM                           */ 00658000
*/*                                                                  */ 00700000
*/*  FUNCTION = Describe the structure of the contention queue       */ 00750000
*/*             service parameter list used by IPCS dump exits to    */ 00800000
*/*             create contention queue entries in the dump          */ 00850000
*/*             directory.                                           */ 00900000
*/*                                                                  */ 00950000
*/*    OPERATION = Create a mapping for BLSAPCQE                     */ 01000000
*/*                                                                  */ 01050000
*/*     METHOD OF ACCESS                                             */ 01100000
*/*                                                                  */ 01150000
*/*      PLS = The macro can expand in a LIST or SUBLIST format.     */ 01200000
*/*                                                                  */ 01250000
*/*        Set macro variable EHBENDCHAR to comma or semicolon.      */ 01300000
*/*        Defaults to semicolon for LIST form and must be set       */ 01350000
*/*        for the SUBLIST form.  For example:                       */ 01400000
*/*                                                                  */ 01450000
*/*          %DCL EHBENDCHAR EXTERNAL CHAR                           */ 01500000
*/*          %EHBENDCHAR=','                                         */ 01550000
*/*                                                                  */ 01600000
*/*      LIST FORM    = ?BLSAPCQE MF(LIST,PREFIX,STORCLASS)          */ 01700000
*/*                                                                  */ 01750000
*/*      SUBLIST FORM = ?BLSAPCQE MF(SUBLIST,PREFIX,STORCLASS,LEVEL) */ 01800000
*/*                                                                  */ 01850000
*/*          MF                                                      */ 01900000
*/*         PARM  Meaning                                            */ 01950000
*/*         ----  -------------------------------------------------- */ 02000000
*/*                                                                  */ 02050000
*/*          1    LIST or L for LIST form                            */ 02100000
*/*               SUBLIST or S for SUBLIST form                      */ 02150000
*/*                                                                  */ 02200000
*/*          2    PREFIX is from 1 to 4 alpha-numeric starting with  */ 02250000
*/*               an alpha character. e.g. 'PCQE'                    */ 02300000
*/*                                                                  */ 02350000
*/*          3    STORAGE CLASS and initialization attribute.        */ 02400000
*/*               COMPLETE keyword will cause initial values to      */ 02450000
*/*               be generated.  Default storage class with COMPLETE */ 02500000
*/*               is STATIC LOCAL.  Can specify BASED, DEFINED ...   */ 02550000
*/*                                                                  */ 02600000
*/*          4    Structure level number to start with.  This can    */ 02650000
*/*               only be specified on the SUBLIST form.             */ 02700000
*/*                                                                  */ 02750000
*/*      ASM = The assembler format takes the form                   */ 02800000
*/*                                                                  */ 02850000
*/*            LABEL  BLSAPCQE DSECT=YES                             */ 02900000
*/*                                  NO                              */ 02950000
*/*                                                                  */ 03000000
*/*            The LABEL is used as the prefix for all the           */ 03050000
*/*            field names.  The label cannot exceed 4 characters.   */ 03100000
*/*            For example code 'PCQE   BLSAPCQE DSECT=YES'          */ 03150000
*/*                                                                  */ 03200000
*/*            DSECT=YES will cause a DSECT to be generated.         */ 03250000
*/*                      The initial values will be ignored.         */ 03300000
*/*                                                                  */ 03350000
*/*            DSECT=NO  will cause a set of initialized DCs         */ 03400000
*/*                      to be generated.                            */ 03450000
*/*                                                                  */ 03500000
*/*  NOTES =                                                         */ 03550000
*/*    DEPENDENCIES = This macro requires external macro variables   */ 03600000
*/*                   be declared in one of the two following ways:  */ 03650000
*/*                                                                  */ 03700000
*/*                   1. Use the BLSRPROC macro to generate the      */ 03750000
*/*                      PROC statement and macro declares.          */ 03800000
*/*                                                                  */ 03850000
*/*                   2. Use the BLSRMAC0 macro to generate only     */ 03900000
*/*                      the declares.                               */ 03950000
*/*                                                                  */ 04000000
*/*    CHARACTER CODE DEPENDENCIES = None                            */ 04050000
*/*    RESTRICTIONS = None                                           */ 04100000
*/*    REGISTER CONVENTIONS = None                                   */ 04150000
*/*                                                                  */ 04200000
*/*  CHANGE ACTIVITY =                                               */ 04250000
*/*                                                                  */ 04300000
*/*    Products =                                                    */ 04333300
*/* $L0= SRVASADA,JBB2220,84108,PD31: Automatic SADMP analysis       */ 04366600
*/* $L1= SRVASADA,JBB2220,84108,PD31: Same as L0, copied code        */ 04399900
*/* $L2= IPCSENH,HBB3310,86158,PDE1: Suppress assembler macro in     */ 04433200
*/*      PLAS source listing                                         */ 04466500
*/*                                                                  */ 04500000
*/*    Design changes = none                                         */ 04516600
*/*                                                                  */ 04533200
*/*    PTMs =                                                        */ 04550000
*/*    = PA20585,JBB2220,85273,PD31: Delete leading blank line       */ 04662500
*/* $P1= PA20624,JBB2220,85283,PD31: Supply a default length for     */ 04675000
*/*      the assembler structure when DSECT=NO is specified.         */ 04687500
*/*                                                                  */ 04700000
*/*    Maintenance =                                                 */ 04750000
*/*                                                                  */ 04800000
*/** END OF SPECIFICATIONS FOR BLSAPCQE ******************************/ 04816600
*   %IF TRUTH ^= TRUTH %THEN        /* Skip assembler macro      @L2P*/ 04849800
*     %DO;                          /* Skip assembler macro      @L2P*/ 04866400
*/* Treat assembler macro as PLAS full-width remark ******************* 04883000
         MACRO                                                          04900000
&P       BLSAPCQE &DSECT=YES                                            04950000
         GBLB    &EPCQE           Blurb produced once in assembly       05000000
         IEZBITS ,                Define symbolic bits             @L1P 05050000
         AIF   ('&DSECT' EQ 'NO').L010 No DSECT statement          @L1P 05100000
&P       DSECT ,                  CQE create parameter list             05150000
         AGO   .L020              Define structure of record       @L1P 05200000
.L010    ANOP  ,                  No DSECT statement               @L1P 05250000
         DS    0D                 Align on doubleword boundary     @P1C 05283300
&P       DS    0CL154             CQE create parameter list        @P1A 05316600
.L020    ANOP  ,                  Define structure of record       @L1P 05350000
&P.000   DS    0C                 Begin BLSAPCQE               #MD85283 05400000
         AIF   (&EPCQE).L030      Blurb produced once in assembly       05450000
*-----------------------------------------------------------------      05500000
* A CQE create parameter list (PCQE) defines the owner or waiter        05550000
* for a resource which may be in contention.                            05600000
*-----------------------------------------------------------------      05650000
.L030    ANOP  ,                  Blurb produced once in assembly  @L1P 05700000
&P.ID    DS    0CL5               Control block identifier              05750000
&P.IDC   DC    CL4'PCQE'          Control block acronym                 05800000
&P.IDL   DC    CL1'1'             Control block level indicator         05850000
         DC    XL3'00'            Reserved                              05900000
&P.RSA   DC    A(0)               Address of resource name              05950000
&P.ADA   DC    A(0)               Address of additional data            06000000
         DC    F'0'               Reserved                              06050000
&P.RSL   DC    H'0'               Length of resource name               06100000
&P.ADL   DC    H'0'               Length of additional data             06150000
&P.SYNM  DC    CL8'        '      System name (e.g.CVTSNAME)            06200000
&P.JOBN  DC    CL8'        '      Jobname or component specific id      06250000
&P.OW    DC    CL2'O '            O=Owner W=Waiter                      06300000
         DC    XL2'00'            Reserved                              06350000
&P.AS    BLSRDATS DSECT=NO        Address space identifier         @L1P 06400000
&P.LAD   DC    A(0)               Logical address                  @L1P 06450000
&P.D     BLSRDATC DSECT=NO        Storage characteristics          @L1P 06500000
&P.MODN  DC    CL8'        '      Name of module requesting the        *06525000
                                  service                          @L1P 06550000
         DC    XL22'00'           Reserved                              06575000
&P.999   DS    0C                 End BLSAPCQE                 #MD85283 06600000
         MEND  ,                  End assembler macro BLSAPCQE       */ 06650000
*                                                                       06680000
*     %END;                         /* Assembler macro skipped   @L2P*/ 06695000
*%BLSAPCQE:                         /* CQE create parameter list     */ 06710000
*   MACRO KEYS(MF);                                                     06740000
*                                                                       06770000
*/*------------------------------------------------------------------*/ 06800000
*/* Define Macro-Variables                                           */ 06850000
*/*------------------------------------------------------------------*/ 06900000
*                                                                       06950000
*   DECLARE                         /* External macro variables      */ 07000000
*     ELSAPCQE CHARACTER EXTERNAL,  /* BLSAPCQE global data          */ 07050000
*     EHBENDCHAR CHARACTER EXTERNAL, /* Final punctuation        @L1P*/ 07100000
*     EHBBLRPENDESS CHARACTER EXTERNAL, /* Deferred macro requests      07150000
*                                                                @L1P*/ 07200000
*     EHBLVL1  CHARACTER EXTERNAL,  /* First level number        @L1P*/ 07250000
*     EHBLVL2  CHARACTER EXTERNAL,  /* Second level number       @L1P*/ 07300000
*     EHBLVL3  CHARACTER EXTERNAL,  /* Third level number        @L1P*/ 07350000
*     EHBLVL4  CHARACTER EXTERNAL,  /* Fourth level number       @L1P*/ 07400000
*     EHBMF1   CHARACTER EXTERNAL,  /* Macro form                @L1P*/ 07450000
*     EHBMF2   CHARACTER EXTERNAL,  /* Prefix characters         @L1P*/ 07500000
*     EHBMF3   CHARACTER EXTERNAL,  /* Scope/storage class       @L1P*/ 07550000
*     EHBMF3A  CHARACTER EXTERNAL,  /* Complete initialization flag     07600000
*                                                                @L1P*/ 07650000
*     BLSRENDDECLARE CHARACTER EXTERNAL, /* Deferred declarations       07695000
*                                                                @L1P*/ 07740000
*     EHBCOL1  FIXED EXTERNAL,      /* First indentation column  @L1P*/ 07785000
*     EHBCOL2  FIXED EXTERNAL,      /* Second indentation column @L1P*/ 07830000
*     EHBCOL3  FIXED EXTERNAL,      /* Third indentation column  @L1P*/ 07875000
*     EHBCOL4  FIXED EXTERNAL,      /* Fourth indentation column @L1P*/ 07920000
*     EHBCSECT CHARACTER EXTERNAL,  /* CSECT name                @L1P*/ 07965000
*     EHBRC    FIXED EXTERNAL;      /* Macro return code         @L1P*/ 08010000
*   DEACTIVATE ELSAPCQE,BLSRENDDECLARE; /* Prevent accidents         */ 08055000
*   DECLARE                         /* Internal macro variables      */ 08100000
*     CENDCHAR CHARACTER INTERNAL,  /* Final punctuation         @L1P*/ 08150000
*     CLVL2    CHARACTER INTERNAL,  /* Second level number       @L1P*/ 08200000
*     CLVL3    CHARACTER INTERNAL,  /* Third level number        @L1P*/ 08250000
*     CLVL4    CHARACTER INTERNAL,  /* Fourth level number       @L1P*/ 08300000
*     CMF1     CHARACTER INTERNAL,  /* Macro form                @L1P*/ 08350000
*     CMF2     CHARACTER INTERNAL,  /* Prefix characters         @L1P*/ 08400000
*     CMF3A    CHARACTER INTERNAL,  /* Complete initialization flag     08450000
*                                                                @L1P*/ 08500000
*     CQCOMPLETE CHARACTER INTERNAL, /* Literal                  @L1P*/ 08550000
*     CQINITIAL CHARACTER INTERNAL, /* Literal                   @L1P*/ 08600000
*     FCOL2    FIXED INTERNAL,      /* Second indentation column @L1P*/ 08650000
*     FCOL3    FIXED INTERNAL,      /* Third indentation column  @L1P*/ 08700000
*     FCOL4    FIXED INTERNAL,      /* Fourth indentation column @L1P*/ 08750000
*     FRC      FIXED INTERNAL,      /* Macro return code         @L1P*/ 08800000
*     F1       FIXED INTERNAL;      /* Utility variable          @L1P*/ 08850000
*   DEACTIVATE CENDCHAR,CLVL2,CLVL3,CLVL4,CMF1,CMF2,CMF3A,CQCOMPLETE,   08900000
*       CQINITIAL,FCOL2,FCOL3,FCOL4,FRC,F1; /* Prevent accidents @L1P*/ 08950000
*   CQINITIAL = ' INITIAL(';        /* Literal                   @L1P*/ 09000000
*   CQCOMPLETE = 'COMPLETE';        /* Literal                   @L1P*/ 09050000
*   ANSWER('?'||MACLABEL||'BLRMF('||MF||') FORMS(L,S);'); /*     @L1P*/ 09100000
*   CENDCHAR = EHBENDCHAR;          /* Final punctuation         @L1P*/ 09150000
*   EHBENDCHAR = ',';               /* Final punctuation         @L1P*/ 09200000
*   CLVL2 = EHBLVL2;                /* Second level number       @L1P*/ 09250000
*   CLVL3 = EHBLVL3;                /* Third level number        @L1P*/ 09300000
*   CLVL4 = EHBLVL4;                /* Fourth level number       @L1P*/ 09350000
*   CMF1 = EHBMF1;                  /* Macro form                @L1P*/ 09400000
*   CMF2 = EHBMF2;                  /* Prefix characters         @L1P*/ 09450000
*   CMF3A = EHBMF3A;                /* Complete initialization flag     09500000
*                                                                @L1P*/ 09550000
*   FCOL2 = EHBCOL2;                /* Second indentation column @L1P*/ 09600000
*   FCOL3 = EHBCOL3;                /* Third indentation column  @L1P*/ 09650000
*   FCOL4 = EHBCOL4;                /* Fourth indentation column @L1P*/ 09700000
*   FRC = EHBRC;                    /* Macro return code         @L1P*/ 09750000
*   BLSRENDDECLARE = BLSRENDDECLARE || CMF2 ||                          09800000
*       'PCQE CHAR(5) CONSTANT(''PCQE1''),' ||                          09850000
*       '/*PCQE identifier constant used to fill in PCQEID */' || CMF2  09900000
*       || 'OWN CHAR(2) CONSTANT(''O ''),/*Owner CQE create request*/'  09950000
*       || CMF2 ||                                                      10000000
*       'WAIT CHAR(2) CONSTANT(''W ''),/*Waiter CQE create request*/';  10050000
*   IF CMF1 = 'LIST' THEN           /* List form                 @L1P*/ 10100000
*     ANSWER('DECLARE/*BLSAPCQE #MD85283*/') COLUMN(5); /*       @P1C*/ 10150000
*   ANSWER(EHBLVL1||CMF2||' BOUNDARY(WORD)'||EHBMF3||',/*BLSAPCQE'||    10200000
*       MACLIST||' '||MACKEYS||'*/') COLUMN(EHBCOL1);                   10250000
*   IF CMF1 = 'LIST' THEN           /* List form                 @L1P*/ 10300000
*     IF INDEX(ELSAPCQE,',BLURB') = 0 THEN /* Produce blurb          */ 10350000
*       DO;                         /* produce BLURB once        @L1P*/ 10400000
*         ANSWER('/*****************************************************10450000
****************/ /* Contention Queue Element (CQE) create service param10500000
*eter list.    */ /*                                                    10550000
*              */ /* FUNCTION = A PCQE is used to describe a unit of wor10600000
*k which       */ /*    owns or is waiting for a resource.  The CQE crea10650000
*te service    */ /*    uses this information to create dump directory r10700000
*ecords        */ /*    to describe resources in contention.            10750000
*              */ /*                                                    10800000
*              */ /* CONTENTS = Major areas within this structure are:  10850000
*              */ /*   RESOURCE - Address and length of the resource nam10900000
*e             */ /*   DATA     - Address and length of additional data 10950000
*which relates */ /*              any information required for debugging11000000
*.             */ ') COLUMN(2);                                         11050000
*         ANSWER('/*   JOBNAME  - Specified when known or is different f11100000
*rom the       */ /*              standard jobname acquired from the dum11150000
*p.            */ /*   SYSNAME  - System name which identifies a system 11200000
*other than    */ /*              the dumped system which owns or is wai11250000
*ting for a    */ /*              resource.                             11300000
*              */ /*   DATS     - Address space block.  This defines cha11350000
*racteristics  */ /*              for the control block representing the11400000
* unit of work.*/ /*              (e.g. virtual storage in ASID xxxx)   11450000
*              */ ') COLUMN(2);                                         11500000
*         ANSWER('/*   LAD      - Logical address.  This is the location11550000
* of the       */ /*              control block which represents the uni11600000
*t of work     */ /*              which owns or is waiting for the resou11650000
*rce.          */ /*   DATC     - Data characteristics.  For this servic11700000
*e, the user   */ /*              will generally only have to fill in th11750000
*e name of a   */ /*              control block (e.g. TCB).             11800000
*              */ /*****************************************************11850000
****************/ ') COLUMN(2);                                         11900000
*         ELSAPCQE = ELSAPCQE || ',BLURB'; /* Blurb produced         */ 11950000
*       END;                        /* produce BLURB once        @L1P*/ 12000000
*   ANSWER(CLVL2||CMF2||'ID CHAR(5)') COLUMN(FCOL2); /*          @L1P*/ 12050000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required?  @L1P*/ 12100000
*     ANSWER(CQINITIAL||CMF2||'PCQE)');                                 12150000
*   ANSWER(',/*Control block identifier*/'); /*                  @L1P*/ 12200000
*   ANSWER(CLVL3||CMF2||'IDC CHARACTER(4),/*Control block acronym*/')   12250000
*       COLUMN(FCOL3);              /*                           @L1P*/ 12300000
*   ANSWER(CLVL3||CMF2||'IDL CHARACTER(1),/*Control block level */')    12350000
*       COLUMN(FCOL3);              /*                           @L1P*/ 12400000
*   ANSWER(CLVL2||'* BIT(24)') COLUMN(FCOL2);                           12450000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required?  @L1P*/ 12500000
*     ANSWER(CQINITIAL||'''00''X)'); /*                          @L1P*/ 12550000
*   ANSWER(',/*Reserved        */');                                    12600000
*   ANSWER(CLVL2||CMF2||'RSA  POINTER(32)') COLUMN(FCOL2);              12650000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required?  @L1P*/ 12700000
*     ANSWER(CQINITIAL||'ZZZZNULL)'); /*                         @L1P*/ 12750000
*   ANSWER(',/*Address of resource name.*/');                           12800000
*   ANSWER(CLVL2||CMF2||'ADA  POINTER(32)') COLUMN(FCOL2);              12850000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required?  @L1P*/ 12900000
*     ANSWER(CQINITIAL||'ZZZZNULL)'); /*                         @L1P*/ 12950000
*   ANSWER(',/*Address of additional data */');                         13000000
*   ANSWER(CLVL2||'* POINTER(32)') COLUMN(FCOL2);                       13050000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required?  @L1P*/ 13100000
*     ANSWER(CQINITIAL||'ZZZZNULL)'); /*                         @L1P*/ 13150000
*   ANSWER(',/*Reserved        */'); /*                          @L1P*/ 13200000
*   ANSWER(CLVL2||CMF2||'RSL  FIXED(16)') COLUMN(FCOL2);                13250000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required?  @L1P*/ 13300000
*     ANSWER(CQINITIAL||'0)');                                          13350000
*   ANSWER(',/*Length of resource name*/');                             13400000
*   ANSWER(CLVL2||CMF2||'ADL  FIXED(16)') COLUMN(FCOL2);                13450000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required?  @L1P*/ 13500000
*     ANSWER(CQINITIAL||'0)');      /*                           @L1P*/ 13550000
*   ANSWER(',/*Length of additional data*/');                           13600000
*   ANSWER(CLVL2||CMF2||'SYNM CHAR(8)') COLUMN(FCOL2);                  13650000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required?  @L1P*/ 13700000
*     ANSWER(CQINITIAL||'ZZZPGM40)');                                   13750000
*   ANSWER(',/*System name (e.g. from CVTSNAME)*/');                    13800000
*   ANSWER(CLVL2||CMF2||'JOBN CHAR(8)') COLUMN(FCOL2);                  13850000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required?  @L1P*/ 13900000
*     ANSWER(CQINITIAL||'ZZZPGM40)'); /*                         @L1P*/ 13950000
*   ANSWER(',/*Jobname or component specific identifier*/');            14000000
*   ANSWER(CLVL2||CMF2||'OW   CHAR(2)') COLUMN(FCOL2);                  14050000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required?  @L1P*/ 14100000
*     ANSWER(CQINITIAL||CMF2||'OWN)');                                  14150000
*   ANSWER(',/*O=owner W=waiter for the resource*/');                   14200000
*   ANSWER(CLVL2||'* BIT(16)') COLUMN(FCOL2);                           14250000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required?  @L1P*/ 14300000
*     ANSWER(CQINITIAL||'''00''X)'); /*                          @L1P*/ 14350000
*   ANSWER(',/*Reserved*/');        /*                           @L1P*/ 14400000
*   ANSWER('?BLSRDATS(ZZZASTCV,ZZZAS1NO,ZZZAS2M)                        14450000
*   MF(SUBLIST,'||CMF2||'AS,'||CMF3A||','||CLVL2||');'); /* Address     14500000
*                                      space identifier              */ 14550000
*   ANSWER(CLVL2||CMF2||'LAD POINTER(32)') COLUMN(FCOL2); /*     @L1P*/ 14600000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required?  @L1P*/ 14650000
*     ANSWER(CQINITIAL||'ZZZZNULL)'); /*                         @L1P*/ 14700000
*   ANSWER(',/*Logical address*/'); /*                           @L1P*/ 14750000
*   ANSWER('?BLSRDATC(ZZZDTYM)                                          14800000
*   MF(SUBLIST,'||CMF2||'D,'||CMF3A||','||CLVL2||');'); /* Storage      14850000
*                                      characteristics               */ 14900000
*   ANSWER(CLVL2||CMF2||'MODN CHAR(8)') COLUMN(FCOL2); /*        @L1P*/ 14950000
*   IF CMF3A = CQCOMPLETE THEN      /*                           @L1P*/ 15000000
*     IF LENGTH(EHBCSECT) >= 8 THEN /* CSECT name defined by BLRPROC    15050000
*                                                                @L1P*/ 15100000
*       ANSWER(CQINITIAL||QUOTE(EHBCSECT(1:8))||')'); /*         @L1P*/ 15150000
*     ELSE                          /* No token specified        @L1P*/ 15200000
*       ANSWER(CQINITIAL||'''        '')'); /* Default is blanks @L1P*/ 15250000
*   ANSWER(',/*Name of module requesting the service*/'); /*     @L1P*/ 15300000
*   ANSWER(CLVL2||'* BIT(176)') COLUMN(FCOL2);                          15350000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required?  @L1P*/ 15400000
*     ANSWER(CQINITIAL||'''00''X)'); /*                          @L1P*/ 15450000
*   ANSWER(',/*Reserved*/');        /*                           @L1P*/ 15500000
*   ANSWER(CLVL2||CMF2||'999 CHARACTER(0)'||CENDCHAR||                  15550000
*       '/*BLSAPCQE #MD85283*/') COLUMN(FCOL2); /*               @P1C*/ 15600000
*   IF CENDCHAR = ';' THEN          /*                           @L1P*/ 15650000
*     ANSWER('?BLSR002;');          /* Process deferred declarations    15700000
*                                                                @L1P*/ 15750000
*   ANSWER('?BLR003(BLSAPCQE,'||CHAR(EHBRC)||');');                     15800000
*   RETURN CODE(FRC);               /*                           @L1P*/ 15850000
*   %END BLSAPCQE;                                                      15900000
