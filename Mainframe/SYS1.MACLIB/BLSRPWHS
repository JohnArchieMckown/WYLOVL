*/**  Start of Specifications for BLSRPWHS ***************************/ 00050000
*/*                                                                  */ 00100000
*/* $MAC(BLSRPWHS) COMP(SC132) PROD(HBB7703): WHERE parameter list   */ 00150000
*/*                                                                  */ 00200000
*/* PROPRIETARY STATEMENT =                                          */ 00212500
*/*                                                                  */ 00225000
*/*   LICENSED MATERIALS - PROPERTY OF IBM                           */ 00262500
*/*   THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                    */ 00266600
*/*   5647-A01 (C) COPYRIGHT IBM CORP. 1984, 2000                    */ 00270700
*/*                                                                  */ 00275000
*/* STATUS = HBB7703                                                 */ 00287500
*/*                                                                  */ 00300000
*/* External classification: PI                                      */ 00350000
*/* End of external classification:                                  */ 00400000
*/*                                                                  */ 00450000
*/* FUNCTION = Describe the input to and the output from the WHERE   */ 00500000
*/* service.                                                         */ 00550000
*/*                                                                  */ 00800000
*/* OPERATION = Create a mapping for BLSRPWHS                        */ 00850000
*/*                                                                  */ 00900000
*/* DESCRIPTIVE NAME: IPCS Symbol Table Record                       */ 00903000
*/*   ACRONYM:  BLSRPWHS                                             */ 00906000
*/*                                                                  */ 00909000
*/* MACRO NAME: BLSRPWHS                                             */ 00912000
*/* DSECT NAME: Selected by invoker                                  */ 00915000
*/* COMPONENT:  IPCS (SC132)                                         */ 00918000
*/* EYE-CATCHER: PWHS                                                */ 00921000
*/*     OFFSET:  0                                                   */ 00924000
*/*     LENGTH:  4                                                   */ 00927000
*/*                                                                  */ 00930000
*/* STORAGE ATTRIBUTES:                                              */ 00933000
*/*   SUBPOOL:  Any that may be altered by key 8 programs            */ 00936000
*/*   KEY:  8                                                        */ 00939000
*/*   RESIDENCY:  LOC(ANY,ANY)                                       */ 00942000
*/*   MAIN STORAGE:  No                                              */ 00945000
*/*   AUXILIARY STORAGE:  Yes                                        */ 00948000
*/*   VIRTUAL STORAGE:  No                                           */ 00951000
*/*   DATA SPACE: No                                                 */ 00954000
*/*                                                                  */ 00957000
*/* SIZE:                                                            */ 00960000
*/*   ABITS=31:  222 bytes                                           */ 00963000
*/*   ABITS=64:  240 bytes                                           */ 00966000
*/*                                                                  */ 00969000
*/* CREATED BY: IPCS subcommands concerned with debugging            */ 00972000
*/* POINTED TO BY: Parameter lists used by IPCS programs to describe */ 00975000
*/*   a location of interest as input to the IPCS Where service and  */ 00978000
*/*   a block that contains it on successful return from that        */ 00981000
*/*   service.                                                       */ 00984000
*/*                                                                  */ 00987000
*/* SERIALIZATION: None                                              */ 00990000
*/*                                                                  */ 00993000
*/*  METHOD OF ACCESS:                                               */ 00996000
*/*                                                                  */ 01000000
*/*   PLS = The macro can expand in a LIST or SUBLIST format.        */ 01050000
*/*                                                                  */ 01100000
*/*     Set macro variable EHBENDCHAR to comma or semicolon.         */ 01150000
*/*     Defaults to semicolon for LIST form and must be set for the  */ 01200000
*/*     SUBLIST form.  For example:                                  */ 01250000
*/*                                                                  */ 01300000
*/*       %DCL EHBENDCHAR EXTERNAL CHARACTER                         */ 01350000
*/*       %EHBENDCHAR=','                                            */ 01400000
*/*                                                                  */ 01450000
*/*                                                                  */ 01500000
*/*    LIST FORM    = ?BLSRPWHS MF(LIST,PREFIX,STORCLASS)            */ 01550000
*/*                                                                  */ 01600000
*/*    SUBLIST FORM = ?BLSRPWHS MF(SUBLIST,PREFIX,STORCLASS,LEVEL)   */ 01650000
*/*                                                                  */ 01700000
*/*       MF                                                         */ 01750000
*/*      PARM  Meaning                                               */ 01800000
*/*      ----  ---------------------------------------------------   */ 01850000
*/*                                                                  */ 01900000
*/*       1    LIST or L for LIST form                               */ 01950000
*/*            SUBLIST or S for SUBLIST form                         */ 02000000
*/*                                                                  */ 02050000
*/*       2    PREFIX is from 1 to 4 alpha-numeric starting with an  */ 02100000
*/*            alpha character. e.g. 'PWHS'                          */ 02150000
*/*                                                                  */ 02200000
*/*       3    STORAGE CLASS and initialization attribute COMPLETE   */ 02250000
*/*            keyword will cause initial values to be generated.    */ 02300000
*/*            Default storage class with COMPLETE is STATIC LOCAL.  */ 02350000
*/*            Can specify BASED, DEFINED ...                        */ 02400000
*/*                                                                  */ 02450000
*/*       4    Structure level number to start with.  This can only  */ 02500000
*/*            be specified on the SUBLIST form.                     */ 02550000
*/*                                                                  */ 02600000
*/*   ASM = The assembler format takes the form                      */ 02650000
*/*                                                                  */ 02700000
*/*         LABEL  BLSRPWHS DSECT=YES                                */ 02750000
*/*                               NO                                 */ 02800000
*/*                                                                  */ 02850000
*/*         The LABEL is used as the prefix for all the field names. */ 02900000
*/*         The label cannot exceed 4 characters.  For example code  */ 02950000
*/*         'PWHS   BLSRPWHS DSECT=YES'                              */ 03000000
*/*                                                                  */ 03050000
*/*         DSECT=YES will cause a DSECT to be generated.  The       */ 03100000
*/*                   initial values will be ignored.                */ 03150000
*/*                                                                  */ 03200000
*/*         DSECT=NO  will cause a set of initialized DCs to be      */ 03250000
*/*                   generated.                                     */ 03300000
*/*                                                                  */ 03350000
*/* NOTES =                                                          */ 03400000
*/*   DEPENDENCIES = This macro requires external macro variables    */ 03450000
*/*     be declared in one of the two following ways:                */ 03500000
*/*                                                                  */ 03550000
*/*     1. Use the BLSRPROC macro to generate the PROC statement and */ 03600000
*/*        macro declares.                                           */ 03650000
*/*                                                                  */ 03700000
*/*     2. Use the BLSRMAC0 macro to generate only the declares.     */ 03750000
*/*                                                                  */ 03850000
*/* ================================================================ */ 03900000
*/*                                                                  */ 04050000
*/* CHANGE ACTIVITY=                                                 */ 04100000
*/*                                                                  */ 04150000
*/*   Products=                                                      */ 04200000
*/* $L0= SRVASADA,JBB2220,84108,PD31: WHERE subcommand support       */ 04250000
*/* $L1= SRVASADA,JBB2220,84108,PD31: WHERE subcommand support       */ 04300000
*/*                                                                  */ 04306200
*/* ---------------------------------------------------------------- */ 04312400
*/*                                                                  */ 04318600
*/*   Hardware=                                                      */ 04324800
*/* $H1= 64BIT,HBB7703,99139,PDE1: 64-bit addressing support         */ 04331000
*/*      o  Enlarge dump data addresses/attributes to doublewords    */ 04332500
*/*      o  Make the parameter list a multiple of doublewords in     */ 04334000
*/*         length                                                   */ 04335500
*/*                                                                  */ 04337200
*/* ---------------------------------------------------------------- */ 04343400
*/*                                                                  */ 04350000
*/*   Design changes=                                                */ 04383300
*/* $D1= DKB0054,HBB4430,92046,PDE1: OPEN/MVS path name support      */ 04416600
*/*                                                                  */ 04450000
*/* ---------------------------------------------------------------- */ 04466600
*/*                                                                  */ 04483200
*/*   PTMs=                                                          */ 04500000
*/* $P1= PA20612,JBB2220,85281,PDL9: Mishandling of address          */ 04512500
*/*      expressions and inaccurate identification of some           */ 04525000
*/*      dump areas                                                  */ 04537500
*/* $P2= PA20624,JBB2220,85283,PD31: Supply a default length for     */ 04541600
*/*      the assembler structure when DSECT=NO is specified.         */ 04545700
*/*                                                                  */ 04550000
*/* ---------------------------------------------------------------- */ 04566600
*/*                                                                  */ 04583200
*/*   Maintenance= none                                              */ 04600000
*/*                                                                  */ 04650000
*/** End of Specifications for BLSRPWHS ******************************  04700000
         MACRO                                                          04750000
&P       BLSRPWHS &DSECT=YES,&ABITS=31                             @H1C 04783300
         GBLA  &BLSABIT           ABITS                            @H1A 04808200
         GBLB  &EPWHS             Blurb produced once in assembly       04833100
         GBLC  &BLSADC            Data type                        @H1A 04858000
         BLSABITS ABITS=&ABITS    Process ABITS option             @H1A 04883200
         IEZBITS ,                Define symbolic bits             @L1P 04900000
         AIF   ('&DSECT' EQ 'NO').L010 No DSECT statement          @L1P 04950000
&P       DSECT ,                  WHERE service parameter list          05000000
         AGO   .L020              Define structure of record       @L1P 05050000
.L010    ANOP  ,                  No DSECT statement               @L1P 05100000
         DS    0D                 Align on doubleword boundary     @P2C 05133300
         AIF   (&BLSABIT EQ 64).L014 ABITS=64                      @H1A 05149900
&P       DS    0CL222             WHERE service parameter list     @P2A 05166600
         AGO   .L020              Common code                      @H1A 05174900
.L014    ANOP  ,                  ABITS=64                         @H1A 05183200
&P       DS    0CL238             WHERE service parameter list     @H1A 05191500
.L020    ANOP  ,                  Define structure of record       @L1P 05200000
&P.000   DS    0D                 Begin BLSRPWHS               #MD99139 05250000
         AIF   (&EPWHS).L030      Blurb produced once in assembly       05300000
*-----------------------------------------------------------------      05350000
* A WHERE service parameter list defines the input to and the           05400000
* output from the WHERE service.                                        05450000
*-----------------------------------------------------------------      05500000
.L030    ANOP  ,                  Blurb produced once in assembly  @L1P 05550000
&P.ID    DS    0CL5               Control block identifier              05600000
&P.IDC   DC    CL4'PWHS'          Control block acronym                 05650000
         AIF   (&BLSABIT EQ 64).L034 ABITS=64                      @H1A 05675000
&P.IDL   DC    CL1'1'             Control block level indicator         05700000
         AGO   .L036              Common code                      @H1A 05707100
.L034    ANOP  ,                  ABITS=64                         @H1A 05714200
&P.IDL   DC    CL1'2'             Control block level indicator    @H1A 05721300
.L036    ANOP  ,                  Common code                      @H1A 05728400
&P.IDL31 EQU   C'1'               ABITS=31                         @H1A 05735500
&P.IDL64 EQU   C'2'               ABITS=64                         @H1A 05742600
&P.PFLG  DS    0BL3               Processing flags                      05750000
&P.PFL1  DC    BL1'0'             First byte of flags                   05800000
&P.PUT   EQU   BIT0               Generate output using the print      X05850000
                                  service                               05900000
&P.RETN  EQU   BIT1               Return nonstandard module name   @D1A 05908300
         DC    XL2'0000'          Reserved                         @D1A 05912400
&P.MODN  DC    CL8'        '      Name of module requesting the        *05916600
                                  service                          @L1P 05933200
&P.AS    BLSRDATS DSECT=NO        Address space identifier         @L1P 05950000
&P.LAD   DC    &BLSADC            WHERE address                    @H1C 05983300
         AIF   (&BLSABIT EQ 64).L040 ABITS=64                      @H1A 06016600
         DC    XL20'00'           Reserved                              06050000
         AGO   .L042              Common code                      @H1A 06060000
.L040    ANOP  ,                  ABITS=64                         @H1A 06070000
         DC    XL12'00'           Reserved                         @H1A 06080000
.L042    ANOP  ,                  Common code                      @H1A 06090000
&P.OUTP  DS    0CL120             WHERE output area                     06100000
&P.OLAD  DC    &BLSADC            Located object address           @H1C 06137500
&P.OD    BLSRDATC DSECT=NO,ABITS=&BLSABIT Storage characteristics of   *06175000
                                  object                           @H1C 06212500
         AIF   (&BLSABIT EQ 64).L060 ABITS=64                      @H1A 06231200
&P.OOFF  DC    F'0'               Offset into located object            06250000
         AGO   .L062              Common code                      @H1A 06260000
.L060    ANOP  ,                  ABITS=64                         @H1A 06270000
&P.OOFF  DC    XL8'00'            Offset into located object       @H1A 06280000
.L062    ANOP  ,                  Common code                      @H1A 06290000
&P.OSAL  DC    H'0'               Length of system area name            06300000
&P.OSAN  DC    CL31' '            System area name (e.g. PLPA)          06350000
         DC    CL1' '             Reserved                              06400000
&P.ONOL  DC    H'0'               Length of NAME+OFFSET string          06450000
&P.ONMO  DC    CL42' '            NAME+OFFSET string                    06500000
         DC    XL2'00'            Reserved                         @D1A 06520000
&P.OMDP  DC    A(0)               Address of nonstandard module name   *06540000
                                  data or 0                        @D1A 06560000
         AIF   (&BLSABIT EQ 64).L094 ABITS=64                      @H1A 06570000
         DC    XL14'00'           Reserved                         @D1C 06580000
         AGO   .L096              Common code                      @H1A 06590000
.L094    ANOP  ,                  ABITS=64                         @H1A 06600000
         DC    XL12'00'           Reserved                         @H1A 06610000
.L096    ANOP  ,                  Common code                      @H1A 06620000
&P.999   DS    0C                 End BLSRPWHS                 #MD99139 06630000
         MEND  ,                  End assembler macro BLSRPWHS       */ 06700000
*                                                                       06737000
*%BLSRPWHS:                         /* WHERE service parameter list  */ 06774000
*   MACRO KEYS(ABITS,MF);           /*                           @H1C*/ 06811000
*                                                                       06848000
*/* ================================================================ */ 06885000
*/* Define Macro-Variables                                           */ 06900000
*/* ================================================================ */ 06950000
*                                                                       07000000
*   DECLARE                         /* External macro variables      */ 07050000
*     BLSABIT  FIXED EXTERNAL,      /* ABITS                     @H1A*/ 07100000
*     BLSADC   CHARACTER EXTERNAL,  /* Pointer data type         @H1A*/ 07150000
*     ELSRPWHS CHARACTER EXTERNAL,  /* BLSRPWHS global data          */ 07200000
*     EHBCSECT CHARACTER EXTERNAL,  /* CSECT name                @L1P*/ 07250000
*     EHBENDCHAR CHARACTER EXTERNAL, /* Final punctuation        @L1P*/ 07300000
*     EHBBLRPENDESS CHARACTER EXTERNAL, /* Deferred macro requests      07350000
*                                                                @L1P*/ 07400000
*     EHBLVL1  CHARACTER EXTERNAL,  /* First level number        @L1P*/ 07450000
*     EHBLVL2  CHARACTER EXTERNAL,  /* Second level number       @L1P*/ 07500000
*     EHBLVL3  CHARACTER EXTERNAL,  /* Third level number        @L1P*/ 07550000
*     EHBLVL4  CHARACTER EXTERNAL,  /* Fourth level number       @L1P*/ 07600000
*     EHBMF1   CHARACTER EXTERNAL,  /* Macro form                @L1P*/ 07650000
*     EHBMF2   CHARACTER EXTERNAL,  /* Prefix characters         @L1P*/ 07700000
*     EHBMF3   CHARACTER EXTERNAL,  /* Scope/storage class       @L1P*/ 07750000
*     EHBMF3A  CHARACTER EXTERNAL,  /* Complete initialization flag     07800000
*                                                                @L1P*/ 07850000
*     BLSRENDDECLARE CHARACTER EXTERNAL, /* Deferred declarations       07900000
*                                                                @L1P*/ 07950000
*     EHBCOL1  FIXED EXTERNAL,      /* First indentation column  @L1P*/ 08000000
*     EHBCOL2  FIXED EXTERNAL,      /* Second indentation column @L1P*/ 08050000
*     EHBCOL3  FIXED EXTERNAL,      /* Third indentation column  @L1P*/ 08100000
*     EHBCOL4  FIXED EXTERNAL,      /* Fourth indentation column @L1P*/ 08150000
*     EHBRC    FIXED EXTERNAL;      /* Macro return code         @L1P*/ 08200000
*   DEACTIVATE ELSRPWHS,BLSRENDDECLARE; /* Prevent accidents         */ 08250000
*   DECLARE                         /* Internal macro variables      */ 08300000
*     CENDCHAR CHARACTER INTERNAL,  /* Final punctuation         @L1P*/ 08350000
*     CLVL2    CHARACTER INTERNAL,  /* Second level number       @L1P*/ 08400000
*     CLVL3    CHARACTER INTERNAL,  /* Third level number        @L1P*/ 08450000
*     CLVL4    CHARACTER INTERNAL,  /* Fourth level number       @L1P*/ 08500000
*     CMF1     CHARACTER INTERNAL,  /* Macro form                @L1P*/ 08550000
*     CMF2     CHARACTER INTERNAL,  /* Prefix characters         @L1P*/ 08600000
*     CMF3A    CHARACTER INTERNAL,  /* Complete initialization flag     08650000
*                                                                @L1P*/ 08700000
*     CQCOMPLETE CHARACTER INTERNAL, /* Literal                  @L1P*/ 08750000
*     CQINITIAL CHARACTER INTERNAL, /* Literal                   @L1P*/ 08800000
*     CQINITPTR CHARACTER INTERNAL, /* Initial pointer           @H1A*/ 08850000
*     FCOL2    FIXED INTERNAL,      /* Second indentation column @L1P*/ 08900000
*     FCOL3    FIXED INTERNAL,      /* Third indentation column  @L1P*/ 08950000
*     FCOL4    FIXED INTERNAL,      /* Fourth indentation column @L1P*/ 09000000
*     FRC      FIXED INTERNAL,      /* Macro return code         @L1P*/ 09050000
*     F1       FIXED INTERNAL;      /* Utility variable          @L1P*/ 09100000
*   DEACTIVATE CENDCHAR,CLVL2,CLVL3,CLVL4,CMF1,CMF2,CMF3A,CQCOMPLETE,   09150000
*       CQINITIAL,CQINITPTR,FCOL2,FCOL3,FCOL4,FRC,F1; /* Prevent        09200000
*                                      accidents                 @H1C*/ 09250000
*   CQINITIAL = ' INITIAL(';        /* Literal                   @L1P*/ 09300000
*   CQCOMPLETE = 'COMPLETE';        /* Literal                   @L1P*/ 09350000
*   ANSWER('?'||MACLABEL||'BLRMF('||MF||') FORMS(L,S);'); /*     @L1P*/ 09400000
*   CENDCHAR = EHBENDCHAR;          /* Final punctuation         @L1P*/ 09450000
*   EHBENDCHAR = ',';               /* Final punctuation         @L1P*/ 09500000
*   CLVL2 = EHBLVL2;                /* Second level number       @L1P*/ 09550000
*   CLVL3 = EHBLVL3;                /* Third level number        @L1P*/ 09600000
*   CLVL4 = EHBLVL4;                /* Fourth level number       @L1P*/ 09650000
*   CMF1 = EHBMF1;                  /* Macro form                @L1P*/ 09700000
*   CMF2 = EHBMF2;                  /* Prefix characters         @L1P*/ 09750000
*   CMF3A = EHBMF3A;                /* Complete initialization flag     09800000
*                                                                @L1P*/ 09850000
*   FCOL2 = EHBCOL2;                /* Second indentation column @L1P*/ 09900000
*   FCOL3 = EHBCOL3;                /* Third indentation column  @L1P*/ 09950000
*   FCOL4 = EHBCOL4;                /* Fourth indentation column @L1P*/ 10000000
*   FRC = EHBRC;                    /* Macro return code         @L1P*/ 10050000
*   BLSRENDDECLARE = BLSRENDDECLARE || CMF2 ||                          10100000
*       'IDL31 CHARACTER(1) CONSTANT(''1''),/*ABITS(31)*/' || CMF2 ||   10150000
*       'IDL64 CHARACTER(1) CONSTANT(''2''),/*ABITS(64)*/'; /*   @H1C*/ 10200000
*   ANSWER('?BLSABITS'||ABITS||';'); /* Process ABITS            @H1A*/ 10250000
*   IF BLSABIT = 64 THEN            /* ABITS=64                  @H1A*/ 10300000
*     DO;                           /* ABITS=64                  @H1A*/ 10350000
*       BLSRENDDECLARE = BLSRENDDECLARE || CMF2 || 'PWHS CHARACTER(5) CO10400000
*NSTANT(''PWHS2''),/*PWHS identifier constant used to fill in PWHSID*/' 10450000
*           ;                       /*                           @H1C*/ 10500000
*       CQINITPTR = CQINITIAL || '''00''X)'; /* Initial pointer value   10550000
*                                                                @H1A*/ 10600000
*     END;                          /* ABITS=64                  @H1A*/ 10650000
*   ELSE                            /* ABITS=31                  @H1A*/ 10700000
*     DO;                           /* ABITS=31                  @H1A*/ 10750000
*       BLSRENDDECLARE = BLSRENDDECLARE || CMF2 || 'PWHS CHARACTER(5) CO10800000
*NSTANT(''PWHS1''),/*PWHS identifier constant used to fill in PWHSID*/' 10850000
*           ;                                                           10900000
*       CQINITPTR = CQINITIAL || 'ZZZZNULL)'; /* Initial pointer        10950000
*                                      value                     @H1A*/ 11000000
*     END;                          /* ABITS=31                  @H1A*/ 11050000
*   IF CMF1 = 'LIST' THEN           /* List form                 @L1P*/ 11100000
*     ANSWER('DECLARE/*BLSRPWHS #MD99139*/') COLUMN(5); /*       @H1C*/ 11150000
*   ANSWER(EHBLVL1||CMF2||' BOUNDARY(WORD)'||EHBMF3||',/*BLSRPWHS'||    11200000
*       MACLIST||' '||MACKEYS||'*/') COLUMN(EHBCOL1);                   11250000
*   IF CMF1 = 'LIST' THEN           /* List form                 @L1P*/ 11300000
*     IF INDEX(ELSRPWHS,',BLURB') = 0 THEN /* Produce blurb          */ 11350000
*       DO;                         /* produce BLURB once        @L1P*/ 11400000
*         ANSWER('/*****************************************************11450000
****************/ /* WHERE service parameter list                       11500000
*              */ /*                                                    11550000
*              */ /* FUNCTION = The WHERE service parameter list defines11600000
* the input    */ /*    to and the output from the WHERE service.       11650000
*              */ /*                                                    11700000
*              */ /* INPUT    = Major areas within the WHERE input secti11750000
*on are:       */ /*   DATS - Address space block.  This defines the typ11800000
*e of data.    */ /*          (e.g. virtual storage in ASID xxxx)       11850000
*              */ ') COLUMN(2);                                         11900000
*         ANSWER('/*   LAD  - Logical address.  This is the location tha11950000
*t the caller  */ /*          of the WHERE service wants identified.    12000000
*              */ /*                                                    12050000
*              */ /* INPUT/OUTPUT                                       12100000
*              */ /*   DATC - Data characteristics.  For the identified 12150000
*area, the     */ /*          DATC will normally indicate a type of STRU12200000
*CTURE         */ /*          (e.g. TCB), a MODULE, or an AREA,         12250000
*              */ /*          and whether the structure has a prefix.   12300000
*              */ /*                                                    12350000
*              */ ') COLUMN(2);     /*                           @P1A*/ 12400000
*         ANSWER('/* OUTPUT   = Major areas within the WHERE output sect12450000
*ion are:      */ /*   OLAD - Logical address.  This is the location of 12500000
*the area      */ /*          identified as containing the input address12550000
*.             */ /*   BFAD - Buffer address contains the address of a b12600000
*uffer which   */ /*          contains a copy of the structure.  This fi12650000
*eld is set    */ /*          by the CBSTAT service before calling the C12700000
*BSTAT exits.  */ /*****************************************************12750000
****************/ ') COLUMN(2);     /*                           @P1C*/ 12800000
*         ELSRPWHS = ELSRPWHS || ',BLURB'; /* Blurb produced         */ 12850000
*       END;                        /* produce BLURB once        @L1P*/ 12900000
*   ANSWER(CLVL2||CMF2||'ID CHARACTER(5)') COLUMN(FCOL2); /*     @L1P*/ 12950000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 13000000
*     ANSWER(CQINITIAL||CMF2||'PWHS)');                                 13050000
*   ANSWER(',/*Control block identifier*/'); /*                  @L1P*/ 13100000
*   ANSWER(CLVL3||CMF2||'IDC CHARACTER(4),/*Control block acronym*/')   13150000
*       COLUMN(FCOL3);              /*                           @L1P*/ 13200000
*   ANSWER(CLVL3||CMF2||'IDL CHARACTER(1),/*Control block level */')    13250000
*       COLUMN(FCOL3);              /*                           @L1P*/ 13300000
*   ANSWER(CLVL2||CMF2||'PFLG BIT(24),/*Processing flags*/') COLUMN(    13350000
*       FCOL3);                                                         13400000
*   ANSWER(CLVL3||CMF2||'PFL1 BIT(8)') COLUMN(FCOL3);                   13450000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 13500000
*     ANSWER(CQINITIAL||'''00''X)'); /*                          @L1P*/ 13550000
*   ANSWER(',/*First flag byte*/'); /*                           @L1P*/ 13600000
*   ANSWER(CLVL4||CMF2||                                                13650000
*       'PUT  BIT(1),/*Generate output using the print service*/')      13700000
*       COLUMN(FCOL4);              /*                           @L1C*/ 13750000
*   ANSWER(CLVL4||CMF2||                                                13800000
*       'RETN  BIT(1),/*Return nonstandard module name*/') COLUMN(FCOL4 13850000
*       );                          /*                           @D1A*/ 13900000
*   ANSWER(CLVL4||'* BIT(6),/*Reserved*/') COLUMN(FCOL4); /*     @D1C*/ 13950000
*   ANSWER(CLVL3||'* BIT(16)') COLUMN(FCOL3);                           14000000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 14050000
*     ANSWER(CQINITIAL||'''00''X)'); /*                          @L1P*/ 14100000
*   ANSWER(',/*Reserved*/');        /*                           @L1P*/ 14150000
*   ANSWER(CLVL2||CMF2||'MODN CHARACTER(8)') COLUMN(FCOL2); /*   @L1P*/ 14200000
*   IF CMF3A = CQCOMPLETE THEN      /*                           @L1P*/ 14250000
*     IF LENGTH(EHBCSECT) >= 8 THEN /* CSECT name defined by BLRPROC    14300000
*                                                                @L1P*/ 14350000
*       ANSWER(CQINITIAL||QUOTE(EHBCSECT(1:8))||')'); /*         @L1P*/ 14400000
*     ELSE                          /* No token specified        @L1P*/ 14450000
*       ANSWER(CQINITIAL||''' '')'); /* Default is blanks        @L1P*/ 14500000
*   ANSWER(',/*Name of module requesting the service*/'); /*     @L1P*/ 14550000
*   ANSWER('?BLSRDATS(ZZZASTCV,ZZZAS1NO,ZZZAS2M) MF(SUBLIST,'||CMF2||   14600000
*       'AS,'||CMF3A||','||CLVL2||');'); /* Address space identifier    14650000
*                                                                @L1P*/ 14700000
*   ANSWER(CLVL2||CMF2||'LAD '||BLSADC) COLUMN(FCOL2); /*        @H1C*/ 14750000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 14800000
*     ANSWER(CQINITPTR);            /*                           @H1C*/ 14850000
*   ANSWER(',/*Logical address requested to be located*/');             14900000
*   IF BLSABIT = 64 THEN            /* ABITS=64                  @H1A*/ 14950000
*     ANSWER(CLVL2||'* BIT(96)') COLUMN(FCOL2); /*               @H1A*/ 15000000
*   ELSE                            /* ABITS=31                  @H1C*/ 15050000
*     ANSWER(CLVL2||'* BIT(160)') COLUMN(FCOL2);                        15100000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 15150000
*     ANSWER(CQINITIAL||'''00''X)'); /*                          @L1P*/ 15200000
*   ANSWER(',/*Reserved*/');        /*                           @L1P*/ 15250000
*   ANSWER(CLVL2||CMF2||'OUTP,/*WHERE output area*/') COLUMN(FCOL2);    15300000
*   ANSWER(CLVL3||CMF2||'OLAD '||BLSADC) COLUMN(FCOL3); /*       @H1C*/ 15350000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 15400000
*     ANSWER(CQINITPTR);            /*                           @H1C*/ 15450000
*   ANSWER(',/*Logical address of located object*/');                   15500000
*   ANSWER('?BLSRDATC L(0) MF(SUBLIST,'||CMF2||'OD,'||CMF3A||','||CLVL3 15550000
*       ||') ABITS('||CHAR(BLSABIT)||');'); /* Storage                  15600000
*                                      characteristics           @H1C*/ 15650000
*   IF BLSABIT = 64 THEN            /* ABITS=64                  @H1A*/ 15700000
*     DO;                           /* ABITS=64                  @H1A*/ 15750000
*       ANSWER(CLVL3||CMF2||'OOFF CHARACTER(8)') COLUMN(FCOL3); /*      15800000
*                                                                @H1A*/ 15850000
*       IF CMF3A = CQCOMPLETE THEN  /* Initialization required   @H1P*/ 15900000
*         ANSWER(CQINITIAL||'''00''X)'); /*                      @H1A*/ 15950000
*     END;                          /* ABITS=64                  @H1A*/ 16000000
*   ELSE                            /* ABITS=31                  @H1A*/ 16050000
*     DO;                           /* ABITS=31                  @H1A*/ 16100000
*       ANSWER(CLVL3||CMF2||'OOFF SIGNED BINARY(31)') COLUMN(FCOL3);    16150000
*       IF CMF3A = CQCOMPLETE THEN  /* Initialization required   @L1P*/ 16200000
*         ANSWER(CQINITIAL||'ZZZZNULL)'); /*                     @L1P*/ 16250000
*     END;                          /* ABITS=31                  @H1A*/ 16300000
*   ANSWER(',/*Offset into located object*/');                          16350000
*   ANSWER(CLVL3||CMF2||'OSAL UNSIGNED BINARY(16)') COLUMN(FCOL3);      16400000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 16450000
*     ANSWER(CQINITIAL||'0)');                                          16500000
*   ANSWER(',/*Length of system area name*/');                          16550000
*   ANSWER(CLVL3||CMF2||'OSAN CHARACTER(ZZZSYML)') COLUMN(FCOL3);       16600000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 16650000
*     ANSWER(CQINITIAL||'ZZZSYM40)');                                   16700000
*   ANSWER(',/*System area name (e.g. PLPA)*/');                        16750000
*   ANSWER(CLVL3||'* CHARACTER(1)') COLUMN(FCOL3);                      16800000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 16850000
*     ANSWER(CQINITIAL||''' '')');  /*                           @L1P*/ 16900000
*   ANSWER(',/*Reserved*/');        /*                           @L1P*/ 16950000
*   ANSWER(CLVL3||CMF2||'ONOL UNSIGNED BINARY(16)') COLUMN(FCOL3);      17000000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 17050000
*     ANSWER(CQINITIAL||'0)');                                          17100000
*   ANSWER(',/*Length of NAME+OFFSET string*/');                        17150000
*   ANSWER(CLVL3||CMF2||'ONMO CHARACTER(42)') COLUMN(FCOL3);            17200000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 17250000
*     ANSWER(CQINITIAL||''' '')');                                      17300000
*   ANSWER(',/*NAME+OFFSET string*/');                                  17350000
*   ANSWER(CLVL3||'* BIT(16)') COLUMN(FCOL3); /*                 @D1A*/ 17400000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @D1P*/ 17450000
*     ANSWER(CQINITIAL||'''00''X)'); /*                          @D1P*/ 17500000
*   ANSWER(',/*Reserved*/');        /*                           @D1P*/ 17550000
*   ANSWER(CLVL3||CMF2||'OMDP POINTER(32)') COLUMN(FCOL3); /*    @D1A*/ 17600000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @D1P*/ 17650000
*     ANSWER(CQINITIAL||'ZZZZNULL)'); /*                         @D1P*/ 17700000
*   ANSWER(',/*Address of nonstandard module name data or 0*/'); /*     17750000
*                                                                @D1A*/ 17800000
*   IF BLSABIT = 64 THEN            /* ABITS=64                  @H1A*/ 17850000
*     ANSWER(CLVL3||'* BIT(128)') COLUMN(FCOL3); /*              @H1A*/ 17900000
*   ELSE                            /* ABITS=31                      */ 17950000
*     ANSWER(CLVL3||'* BIT(112)') COLUMN(FCOL3); /*              @H1C*/ 18000000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 18050000
*     ANSWER(CQINITIAL||'''00''X)'); /*                          @L1P*/ 18100000
*   ANSWER(',/*Reserved*/');        /*                           @L1P*/ 18150000
*   ANSWER(CLVL2||CMF2||'999 CHARACTER(0)'||CENDCHAR||                  18200000
*       '/*BLSRPWHS #MD99139*/') COLUMN(FCOL2); /*               @H1C*/ 18250000
*   IF CENDCHAR = ';' THEN          /*                           @L1P*/ 18300000
*     ANSWER('?BLSR002;');          /* Process deferred declarations    18350000
*                                                                @L1P*/ 18400000
*   ANSWER('?BLR003(BLSRPWHS,'||CHAR(EHBRC)||');');                     18450000
*   RETURN CODE(FRC);               /*                           @L1P*/ 18500000
*   %END BLSRPWHS;                                                      18550000
