*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  COFPURGE                              -03/29/95-<1> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  PURGE CLASS                                   * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5655-068 (C) COPYRIGHT IBM CORP. 1988, 1995                     * 00001300
*                                                                     * 00001400
* STATUS= JBB5522                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*01* FUNCTION:                                                        * 00001900
*                                                                     * 00002000
*      This macro provides the interface to the PURGE CLASS function  * 00002100
*      provided by the Virtual Lookaside Facility.  This function     * 00002200
*      immediately deletes an entire class of VLF objects.            * 00002300
*      Transactions in process for the class may fail and receive a   * 00002400
*      return code appropriate to the operation in progress.          * 00002500
*                                                                     * 00002600
*      The class is not redefined unless a COFDEFIN is issued for the * 00002700
*      class.  A new COFDEFIN to reinstate the same class of objects  * 00002800
*      may be issued immediately following the COFPURGE or at any     * 00002900
*      time thereafter.  The PURGE CLASS operation is logically       * 00003000
*      instantaneous.                                                 * 00003100
*                                                                     * 00003200
*      VLF may decide that a purge of a class is required due to      * 00003300
*      internal problems.                                             * 00003400
*                                                                     * 00003500
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00003600
*                                                                     * 00003700
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00003800
*                                                                     * 00003900
*01* ENVIRONMENT:                                                     * 00004000
*                                                                     * 00004100
*                                                                     * 00004200
*      Dispatchable unit mode: Task mode.                             * 00004300
*                                                                     * 00004400
*      Minimum authorization: Supervisor state or PSW key mask (PKM)  * 00004500
*                        0-7.                                         * 00004600
*                                                                     * 00004700
*      AMODE:            24- or 31-bit.  All parameters must be valid * 00004800
*                        31-bit addresses.                            * 00004900
*                                                                     * 00005000
*      ASC mode:         Primary or Access Register.                  * 00005100
*                                                                     * 00005200
*      Serialization:    Enabled.                                     * 00005300
*                                                                     * 00005400
*                                                                     * 00005500
*                                                                     * 00005600
*01* SYNTAX:                                                          * 00005700
*                                                                     * 00005800
*[xlabel]  COFPURGE   [ PLISTVER                                      * 00005900
*                                =xplistver|IMPLIED_VERSION]        * 00006000
*                      ,CLASS=xclass                                  * 00006100
*                     [,RETCODE=xretcode]                             * 00006200
*                     [,RSNCODE=xrsncode]                             * 00006300
*                    [,MF=S]                                         * 00006400
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00006500
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00006600
*                                                                     * 00006700
*                                                                     * 00006800
*      Where:                                                         * 00006900
*                                                                     * 00007000
*                                                                     * 00007100
*      [xlabel]                                                       * 00007200
*          is an optional symbol, starting in column 1, that is the   * 00007300
*          name on the COFPURGE macro invocation.  The name must      * 00007400
*          conform to the rules for an ordinary assembler language    * 00007500
*          symbol.                                                    * 00007600
*          DEFAULT: No name.                                          * 00007700
*                                                                     * 00007800
*                                                                     * 00007900
*                                                                     * 00008000
*                                                                     * 00008100
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00008200
*          is an optional byte input decimal value in the "1-1" range * 00008300
*          that specifies the macro version.  PLISTVER is the only    * 00008400
*          key allowed on the list form of MF and determines which    * 00008500
*          parameter list is generated.  Note that MAX may be         * 00008600
*          specified instead of a number, and the parameter list will * 00008700
*          be of the largest size currently supported. This size may  * 00008800
*          grow from release to release (thus possibly affecting the  * 00008900
*          amount of storage needed by your program).  If your        * 00009000
*          program can tolerate this, IBM recommends that you always  * 00009100
*          specify MAX when creating the list form parameter list as  * 00009200
*          that will ensure that the list form parameter list is      * 00009300
*          always long enough to hold whatever parameters might be    * 00009400
*          specified on the execute form.                             * 00009500
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00009600
*          default is the lowest version which allows all of the      * 00009700
*          parameters specified on the invocation to be processed.    * 00009800
*                                                                     * 00009900
*                                                                     * 00010000
*                                                                     * 00010100
*                                                                     * 00010200
*      CLASS=xclass                                                   * 00010300
*          is the name (RS-type), or address in register (2)-(12), of * 00010400
*          a required 7 character input variable or constant          * 00010500
*          containing the name of the class of VLF objects to be      * 00010600
*          purged.                                                    * 00010700
*                                                                     * 00010800
*                                                                     * 00010900
*                                                                     * 00011000
*                                                                     * 00011100
*      [RETCODE=xretcode]                                             * 00011200
*          is the name (RS-type) of an optional fullword output       * 00011300
*          variable, or register (2)-(12), into which the return code * 00011400
*          is to be copied from GPR 15.                               * 00011500
*                                                                     * 00011600
*                                                                     * 00011700
*                                                                     * 00011800
*                                                                     * 00011900
*      [RSNCODE=xrsncode]                                             * 00012000
*          is the name (RS-type) of an optional fullword output       * 00012100
*          variable, or register (2)-(12), into which the reason code * 00012200
*          is to be copied from GPR 0.                                * 00012300
*                                                                     * 00012400
*                                                                     * 00012500
*                                                                     * 00012600
*                                                                     * 00012700
*      [MF=S|L|E]                                                   * 00012800
*          is an optional keyword input which specifies the macro     * 00012900
*          form.                                                      * 00013000
*          DEFAULT: S                                                 * 00013100
*                                                                     * 00013200
*                                                                     * 00013300
*          [MF=S]                                                     * 00013400
*              specifies the standard form of the macro.  The "S"     * 00013500
*              form generates code to put the parameters into an      * 00013600
*              in-line parameter list and invoke the desired service. * 00013700
*              Full checking for required macro keys is done along    * 00013800
*              with supplying defaults for omitted optional           * 00013900
*              parameters.                                            * 00014000
*                                                                     * 00014100
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00014200
*              specifies the list form of the macro.  The "L" form    * 00014300
*              defines an area to be used for the parameter list.     * 00014400
*              Only the PLISTVER key may be specified on the          * 00014500
*              invocation.  All other macro parameters are flagged as * 00014600
*              errors.  If PLISTVER is not specified, the original    * 00014700
*              parameter list definition is used.                     * 00014800
*                                                                     * 00014900
*            ,xmfctrl                                                 * 00015000
*              is a required input.  It is the name of a storage area * 00015100
*              for the parameter list.                                * 00015200
*                                                                     * 00015300
*            ,xmfattr|0D                                            * 00015400
*              is an optional 60 character input string that varies   * 00015500
*              from 1 to 60 characters. It can contain any value that * 00015600
*              is valid on an assembler DS pseudo-op. You can use     * 00015700
*              this parameter to force boundary alignment of the      * 00015800
*              parameter list.                                        * 00015900
*              DEFAULT: 0D which forces the parameter list to a       * 00016000
*              doubleword boundary.                                   * 00016100
*                                                                     * 00016200
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00016300
*              specifies the execute form of the macro.  The "E" form * 00016400
*              generates code to put the parameters into the          * 00016500
*              parameter list specified by xmfctrl and provides full  * 00016600
*              syntax checking with default setting.                  * 00016700
*                                                                     * 00016800
*            ,xmfctrl                                                 * 00016900
*              is a required input.  It is the name (RS-type), or     * 00017000
*              address in register (1)-(12), of a storage area for    * 00017100
*              the parameter list.                                    * 00017200
*                                                                     * 00017300
*            ,COMPLETE                                              * 00017400
*              is an optional keyword input which specifies the       * 00017500
*              degree of macro parameter syntax checking.             * 00017600
*              DEFAULT: COMPLETE                                      * 00017700
*                                                                     * 00017800
*                                                                     * 00017900
*              COMPLETE   Checking for required macro keys is done    * 00018000
*                        and defaults are supplied for omitted        * 00018100
*                        optional parameters.                         * 00018200
*                                                                     * 00018300
*                                                                     * 00018400
*                                                                     * 00018500
*                                                                     * 00018600
*                                                                     * 00018700
*                                                                     * 00018800
*                                                                     * 00018900
*01* RETURN CODES:                                                    * 00019000
*                                                                     * 00019100
*                                                                     * 00019200
*            0    Success.  The class is no longer defined.           * 00019300
*                                                                     * 00019400
*            2    The input class is not specified in Parmlib.        * 00019500
*                                                                     * 00019600
*                                                                     * 00019700
*                                                                     * 00019800
*01* REASON CODES:                                                    * 00019900
*                                                                     * 00020000
*       REASON    RETURN                                              * 00020100
*       CODE      CODE      DESCRIPTION                               * 00020200
*                                          * 00020300
*                                                                     * 00020400
*                                                                     * 00020500
*              0  0         Purge was successful.                     * 00020600
*                                                                     * 00020700
*              4  2         This class has no definition in Parmlib.  * 00020800
*                                                                     * 00020900
*                                                                     * 00021000
*                                                                     * 00021100
*01* MODULE TYPE:  ASSEM MACRO                                        * 00021200
*                                                                     * 00021300
*02*   PROCESSOR:  ASSEM                                              * 00021400
*                                                                     * 00021500
*01* COMPONENT:  SC164                                                * 00021600
*                                                                     * 00021700
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00021800
*                                                                     * 00021900
*01* MACRO USAGE NOTES:                                               * 00022000
*                                                                     * 00022100
*                                                                     * 00022200
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00022300
*        global macro variable.  Any value other than 'NO' will       * 00022400
*        result in the macro expansion being printed.  The default is * 00022500
*        'YES'.  The following examples illustrate how the ZPRINT     * 00022600
*        variable should be set.                                      * 00022700
*                                                                     * 00022800
*                    GBLC &ZPRINT                                     * 00022900
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00023000
*                                                                     * 00023100
*                                                                     * 00023200
*    2.  All   keys   currently   contained  in  the  COFPURGE  macro * 00023300
*        correspond  to  version  1.   If you specify PLISTVER, use a * 00023400
*        value of 1 or MAX.                                           * 00023500
*                                                                     * 00023600
*                                                                     * 00023700
*                                                                     * 00023800
*                                                                     * 00023900
*01* CHANGE ACTIVITY:                                                 * 00024000
*                                                                     * 00024100
*   Flag LineItem  FMID    Date   ID    Comment                       * 00024200
*                                                                     * 00024300
*    $L0=VLF      HBB3310 870918 PDAR:  Virtual Lookaside Facility    * 00024400
*    $D1=DEN1048  HBB3310 880114 PDAM:  Return/reason code changes    * 00024500
****** END OF SPECIFICATIONS *****************************************/ 00024600
*/********************************************************************* 00024700
         MACRO                                                          00024800
&XLABEL  COFPURGE &PLISTVER=,&CLASS=,&RETCODE=,&RSNCODE=,&MF=           00024900
.*                                                                      00025000
*              MACDATE -03/29/95-<1>                                    00025100
.*                                                                      00025200
.*******************************************************************    00025300
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00025400
.*******************************************************************    00025500
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   00025600
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     00025700
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             00025800
.*                                                                      00025900
              GBLC  &ZCOFPURGE  YES=MACRO USED AT LEAST ONCE            00026000
.*******************************************************************    00026100
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00026200
.*******************************************************************    00026300
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 00026400
              LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS            00026500
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              00026600
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             00026700
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             00026800
              LCLA  &ZAWRK      USED AS A WORK AREA                     00026900
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  00027000
              LCLA  &ZN         NUMERIC WORK VARIABLE                   00027100
              LCLC  &ZC         CHARACTER WORK VARIABLE                 00027200
              LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE             00027300
              LCLA  &ZTLA       VALUE TOO LONG VARIABLE                 00027400
              LCLA  &ZMACRET    MACRO RETURN CODE                       00027500
&ZMACRET      SETA  0           ASSUME NO ERRORS                        00027600
.*                                                                      00027700
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      00027800
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              00027900
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   00028000
              LCLC  &ZENDBASEPL                 End of base PL          00028100
              LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                   00028200
.*******************************************************************    00028300
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00028400
.*******************************************************************    00028500
              LCLA  &ZI         INDEX FOR ARRAY                         00028600
              LCLA  &ZJ         INDEX FOR PARMS                         00028700
              LCLA  &ZK         INDEX FOR PARSE                         00028800
              LCLA  &ZLO        LOW RANGE VALUE                         00028900
              LCLA  &ZHI        HIGH RANGE VALUE                        00029000
              LCLC  &ZW         WORK AREA FOR PARM                      00029100
.********************************************************************   00029200
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00029300
.********************************************************************   00029400
              GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                 00029500
              GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE          00029600
.*                                                                      00029700
              AIF   (K'&SYSASCE GT 0).ZSYS4     SYS STATE DEFINED       00029800
              AIF   (K'&SYSSPLV GT 0).ZSYS2     SP LEVEL DEFINED        00029900
              SPLEVEL  TEST                                             00030000
.ZSYS2        ANOP  ,                                                   00030100
              AIF   ('&SYSSPLV' EQ '1').ZSYS3   PRE SP 3.1              00030200
              AIF   ('&SYSSPLV' EQ '2').ZSYS3   PRE SP 3.1              00030300
              SYSSTATE TEST                                             00030400
              AGO   .ZSYS4                                              00030500
.ZSYS3        ANOP  ,                                                   00030600
&SYSASCE      SETC  'P'         ASSUME SYSSTATE PRIMARY                 00030700
.ZSYS4        ANOP  ,                                                   00030800
.*******************************************************************    00030900
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00031000
.*******************************************************************    00031100
              LCLA  &XPLISTVER  ++ VALUE                                00031200
              LCLC  &XCLASS     ++ NAME                                 00031300
              LCLC  &XRETCODE   ++ NAME                                 00031400
              LCLC  &XRSNCODE   ++ NAME                                 00031500
              LCLC  &XMF        ++ VALUE                                00031600
              LCLC  &XMFCTRL    ++ NAME                                 00031700
              LCLC  &XMFATTR    ++ VALUE                                00031800
              LCLC  &XMFSCK     ++ VALUE                                00031900
.*******************************************************************    00032000
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00032100
.*******************************************************************    00032200
              LCLC  &ZXPLISTVER                 ++ INPUT VALUE          00032300
              LCLC  &ZXCLASS    ++ INPUT NAME                           00032400
              LCLC  &ZXRETCODE  ++ OUTPUT NAME                          00032500
              LCLC  &ZXRSNCODE  ++ OUTPUT NAME                          00032600
              LCLC  &ZXMF       ++ INPUT VALUE                          00032700
              LCLC  &ZXMFCTRL   ++ INPUT NAME                           00032800
              LCLC  &ZXMFATTR   ++ INPUT VALUE                          00032900
              LCLC  &ZXMFSCK    ++ INPUT VALUE                          00033000
.********************************************************************   00033100
.***AC.PLV01  PROCESS PLISTVER                                      *   00033200
.********************************************************************   00033300
&XPLISTVER      SETA  1                                                 00033400
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00033500
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00033600
&XPLISTVER      SETA  1                                                 00033700
.ZPLV0          ANOP  ,                                                 00033800
.*                                                                      00033900
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00034000
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00034100
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00034200
.*-------------------------------------------------------------------   00034300
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00034400
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00034500
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00034600
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00034700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00034800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00034900
                AGO   .ZPVCK2                                           00035000
.ZPVCK3         ANOP  ,                                                 00035100
.*-------------------------------------------------------------------   00035200
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00035300
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00035400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00035500
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00035600
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00035700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00035800
                AGO   .ZPVCKE                                           00035900
.ZPVCK2         ANOP  ,                                                 00036000
.*-------------------------------------------------------------------   00036100
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00036200
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00036300
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00036400
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00036500
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00036600
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00036700
                MNOTE 8,' &ZMS IS REQUIRED.'                            00036800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00036900
                AGO   .ZPVCK5                                           00037000
.ZPVCK4         ANOP  ,                                                 00037100
&XPLISTVER      SETA  &PLISTVER(1)                                      00037200
.ZPVCK5         ANOP  ,                                                 00037300
.*-------------------------------------------------------------------   00037400
&ZCVAL          SETC  '&PLISTVER(1)'                                    00037500
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00037600
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00037700
                AIF   (&XPLISTVER LT 1).ZPVCK6  TOO LOW                 00037800
                AIF   (&XPLISTVER LE 1).ZPVCKE  NOT HIGH                00037900
.ZPVCK6         ANOP   ,                                                00038000
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00038100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00038200
&ZMS            SETC  '&ZMS THE RANGE IS "1-1"'                         00038300
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00038400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00038500
.ZPVCKE         ANOP   ,                                                00038600
.********************************************************************   00038700
.***AG.MF01 PROCESS MF MACRO FORMS                                      00038800
.********************************************************************   00038900
              ACTR  10000                                               00039000
.*------------------------------------------------------------------    00039100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00039200
&XMF          SETC  ''          INITIALIZE XVARIABLE                    00039300
.*-------------------------------------------------------------------   00039400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00039500
.ZG15         ANOP  ,                                                   00039600
&ZTLC         SETC 'S'                                                  00039700
              AIF   ('&MF(1)' NE '&ZTLC').ZG16                          00039800
&XMF          SETC  'S'         SET KEYWORD                             00039900
              AIF   (N'&MF LE 1).ZG15A          CK NUM                  00040000
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00040100
&ZMS          SETC  '&ZMS.&MF"'                                         00040200
&ZMS          SETC  '&ZMS "MF"'                                         00040300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00040400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00040500
.ZG15A        ANOP  ,                                                   00040600
.*-------------------------------------------------------------------   00040700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00040800
.ZG16         ANOP  ,                                                   00040900
&ZTLC         SETC 'L'                                                  00041000
              AIF   ('&MF(1)' NE '&ZTLC').ZG23                          00041100
&XMF          SETC  'L'         SET KEYWORD                             00041200
              AIF   (N'&MF LE 3).ZG16A          CK NUM                  00041300
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00041400
&ZMS          SETC  '&ZMS.&MF"'                                         00041500
&ZMS          SETC  '&ZMS "MF"'                                         00041600
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00041700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00041800
.ZG16A        ANOP  ,                                                   00041900
.*-------------------------------------------------------------------   00042000
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00042100
              AIF   (N'&SYSLIST NE 0).ZG16B     POSITIONALS?            00042200
              AIF   ('&CLASS' NE '').ZG16B      KEYS?                   00042300
              AIF   ('&RETCODE' NE '').ZG16B    KEYS?                   00042400
              AIF   ('&RSNCODE' NE '').ZG16B    KEYS?                   00042500
              AGO    .ZG16C     INVOCATION OKAY                         00042600
.ZG16B        ANOP  ,                                                   00042700
&ZMS          SETC  'THE "L" FORM OF "MF"'      *MFLA* MNOTE            00042800
&ZMS          SETC  '&ZMS CAN ONLY HAVE'                                00042900
&ZMS          SETC  '&ZMS THE "PLISTVER" KEY'                           00043000
              MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'              00043100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00043200
.ZG16C        ANOP  ,                                                   00043300
.*-------------------------------------------------------------------   00043400
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00043500
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00043600
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00043700
              AIF   (N'&MF(2) GT 1).ZG18B       MULTI PARMS             00043800
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00043900
.ZG18B        AIF   (K'&MF(2) GT 0).ZG18C                               00044000
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00044100
&ZMS          SETC  'WHEN "L" IS SPECIFIED'     *KRQDA*                 00044200
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00044300
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00044400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00044500
.ZG18C        ANOP  ,                                                   00044600
.*-------------------------------------------------------------------   00044700
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00044800
              AIF   (K'&ZXMFCTRL LE 0).ZG18P    NOT I/O                 00044900
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG18P                      00045000
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00045100
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00045200
&ZMS          SETC  '&ZMS.&MF"'                                         00045300
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00045400
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                   00045500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00045600
.ZG18P        ANOP  ,                                                   00045700
.*-------------------------------------------------------------------   00045800
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00045900
&ZXMFATTR     SETC  'INPUT'     SET IN/OUTPUT                           00046000
&XMFATTR      SETC  '0D'                                                00046100
              AIF   (K'&MF(3) LE 0).ZG21B       PARM                    00046200
&XMFATTR      SETC  '&MF(3,1)'  SET XVARIABLE                           00046300
              AIF   (N'&MF(3) GT 1).ZG21B       MULTI PARMS             00046400
&XMFATTR      SETC  '&MF(3)'    SET XVARIABLE                           00046500
.ZG21B        ANOP  ,                                                   00046600
.*-------------------------------------------------------------------   00046700
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00046800
              AIF   (K'&ZXMFATTR LE 0).ZG21P    NOT I/O                 00046900
              AIF   ('&XMFATTR'(1,1) NE '(').ZG21P                      00047000
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00047100
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00047200
&ZMS          SETC  '&ZMS.&MF"'                                         00047300
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00047400
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                   00047500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00047600
.ZG21P        ANOP  ,                                                   00047700
.*-------------------------------------------------------------------   00047800
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00047900
              AIF   (K'&ZXMFATTR LE 0).ZG21S    NOT I/O                 00048000
              AIF   (K'&XMFATTR LE 60).ZG21S    LNG OK                  00048100
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00048200
&ZMS          SETC  '"MF='      *KLNGA* MNOTE                           00048300
&ZMS          SETC  '&ZMS.&MF"'                                         00048400
&ZMS          SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'               00048500
              MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                  00048600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00048700
.ZG21S        ANOP  ,                                                   00048800
.*-------------------------------------------------------------------   00048900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00049000
.ZG23         ANOP  ,                                                   00049100
&ZTLC         SETC 'E'                                                  00049200
              AIF   ('&MF(1)' NE '&ZTLC').ZG31                          00049300
&XMF          SETC  'E'         SET KEYWORD                             00049400
              AIF   (N'&MF LE 3).ZG23A          CK NUM                  00049500
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00049600
&ZMS          SETC  '&ZMS.&MF"'                                         00049700
&ZMS          SETC  '&ZMS "MF"'                                         00049800
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00049900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00050000
.ZG23A        ANOP  ,                                                   00050100
.*-------------------------------------------------------------------   00050200
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00050300
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00050400
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00050500
              AIF   (N'&MF(2) GT 1).ZG25B       MULTI PARMS             00050600
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00050700
.ZG25B        AIF   (K'&MF(2) GT 0).ZG25C                               00050800
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00050900
&ZMS          SETC  'WHEN "E" IS SPECIFIED'     *KRQDA*                 00051000
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00051100
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00051200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00051300
.ZG25C        ANOP  ,                                                   00051400
.*-------------------------------------------------------------------   00051500
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00051600
              AIF   (K'&ZXMFCTRL LE 0).ZG25R    NOT I/O                 00051700
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG25R                      00051800
&ZCGPR        SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                          00051900
              AIF   ('&ZCGPR'(1,1) NE '0').ZG25P                        00052000
              AIF   (K'&ZCGPR GT 2).ZG25Q                               00052100
              AIF   ('&ZCGPR' EQ '0').ZG25Q                             00052200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00052300
              AIF   (T'&ZCGPR NE 'N').ZG25Q     INVALID REG NAME        00052400
.ZG25P        ANOP  ,                                                   00052500
              AIF   (T'&ZCGPR NE 'N').ZG25R     NON NUMERIC             00052600
              AIF   ('&ZCGPR' LT '1').ZG25Q                             00052700
              AIF   ('&ZCGPR' LE '12').ZG25R                            00052800
.ZG25Q        ANOP  ,                                                   00052900
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00053000
&ZMS          SETC  '&ZMS.&MF"'                                         00053100
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'           00053200
              MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                    00053300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00053400
.ZG25R        ANOP  ,                                                   00053500
.*-------------------------------------------------------------------   00053600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00053700
&XMFSCK       SETC  ''          INITIALIZE XVARIABLE                    00053800
.ZG29A   AIF   ('&MF(3)' NE 'COMPLETE').ZG30A                           00053900
&XMFSCK       SETC  'COMPLETE'  SET KEYWORD                             00054000
.*-------------------------------------------------------------------   00054100
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00054200
.ZG30A        AIF   (K'&XMFSCK GT 0).ZG30C      KEYWORD                 00054300
              AIF   (K'&MF(3) LE 0).ZG30B                               00054400
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           00054500
&ZMS          SETC  '&ZMS.&MF"'                                         00054600
&ZMS          SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '           00054700
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00054800
&ZMS          SETC  '&ZMS "COMPLETE".'          VALID KEYWORD           00054900
              MNOTE 8,' &ZMS '                                          00055000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00055100
.ZG30B        ANOP  ,                                                   00055200
&XMFSCK       SETC  'COMPLETE'  SET DEFAULT KEYWORD                     00055300
.ZG30C        ANOP  ,                                                   00055400
&ZXMFSCK      SETC  'INPUT'     SET IN/OUTPUT                           00055500
.*------------------------------------------------------------------    00055600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00055700
.ZG31         ANOP  ,                                                   00055800
&ZXMF         SETC  'INPUT'     SET IN/OUTPUT                           00055900
              AIF   (K'&XMF GT 0).ZG31E         VALID ARG               00056000
              AIF   (T'&MF EQ 'O').ZG31D        OMITTED                 00056100
&ZASYSLNDX    SETA  0                                                   00056200
.ZG31A        ANOP  ,           POSITIONAL MACRO KEY                    00056300
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        00056400
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG31C                    00056500
&ZTLC         SETC 'MF'                                                 00056600
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG31A           00056700
.ZG31B        ANOP  ,                                                   00056800
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00056900
&ZMS          SETC  'THE "MF" KEY'              *KOPTA* MNOTE           00057000
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             00057100
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    00057200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00057300
              AGO   .ZG31E                                              00057400
.ZG31C        ANOP  ,                                                   00057500
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00057600
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           00057700
&ZMS          SETC  '&ZMS.&MF"'                                         00057800
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00057900
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00058000
&ZMS          SETC  '&ZMS "S",'                 VALID KEYWORD           00058100
&ZMS          SETC  '&ZMS "L",'                 VALID KEYWORD           00058200
&ZMS          SETC  '&ZMS OR "E".'              VALID KEYWORD           00058300
              MNOTE 8,' &ZMS '                                          00058400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00058500
              AGO   .ZG31E                                              00058600
.ZG31D        ANOP  ,                                                   00058700
&XMF          SETC  'S'         SET DEFAULT KEYWORD                     00058800
&XMFSCK       SETC  'COMPLETE'  COMPLETE CHECKING                       00058900
.ZG31E        ANOP  ,                                                   00059000
.********************************************************************   00059100
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00059200
.********************************************************************   00059300
              ACTR  10000                                               00059400
.*-------------------------------------------------------------------   00059500
.***AG.MF03 MF=(SLE)                                                    00059600
              AIF   ('&XMF' EQ 'L').ZGMFX                               00059700
.*----------------------------------------------------------------***   00059800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00059900
              AIF   (N'&CLASS LE 1).ZG5A        CK NUM                  00060000
&ZMS          SETC  '"CLASS='   *KPOSA* MNOTE                           00060100
&ZMS          SETC  '&ZMS.&CLASS"'                                      00060200
&ZMS          SETC  '&ZMS "CLASS"'                                      00060300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00060400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00060500
.ZG5A         ANOP  ,                                                   00060600
.*-------------------------------------------------------------------   00060700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00060800
&ZXCLASS      SETC  'INPUT'     SET IN/OUTPUT                           00060900
&XCLASS       SETC  '&CLASS(1)'                 SET XVARIABLE           00061000
              AIF   (N'&CLASS GT 1).ZG5B        MULTI PARMS             00061100
&XCLASS       SETC  '&CLASS'    SET XVARIABLE                           00061200
.ZG5B         AIF   (K'&CLASS(1) GT 0).ZG5C                             00061300
&ZXCLASS      SETC  ''          RESET IN/OUTPUT                         00061400
&ZMS          SETC  ' '         *KRQDA*                                 00061500
&ZMS          SETC  '&ZMS "CLASS" KEY AND ITS ARGUMENT'                 00061600
              MNOTE 8,' &ZMS ARE REQUIRED.'                             00061700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00061800
.ZG5C         ANOP  ,                                                   00061900
.*-------------------------------------------------------------------   00062000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00062100
              AIF   (K'&ZXCLASS LE 0).ZG5R      NOT I/O                 00062200
              AIF   ('&XCLASS'(1,1) NE '(').ZG5R                        00062300
&ZCGPR        SETC  '&XCLASS'(2,K'&XCLASS-2)                            00062400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                         00062500
              AIF   (K'&ZCGPR GT 2).ZG5Q                                00062600
              AIF   ('&ZCGPR' EQ '0').ZG5Q                              00062700
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00062800
              AIF   (T'&ZCGPR NE 'N').ZG5Q      INVALID REG NAME        00062900
.ZG5P         ANOP  ,                                                   00063000
              AIF   (T'&ZCGPR NE 'N').ZG5R      NON NUMERIC             00063100
              AIF   ('&ZCGPR' LT '2').ZG5Q                              00063200
              AIF   ('&ZCGPR' LE '12').ZG5R                             00063300
.ZG5Q         ANOP  ,                                                   00063400
&ZMS          SETC  '"CLASS='   *KGPRA* MNOTE                           00063500
&ZMS          SETC  '&ZMS.&CLASS"'                                      00063600
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00063700
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00063800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00063900
.ZG5R         ANOP  ,                                                   00064000
.*----------------------------------------------------------------***   00064100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00064200
              AIF   (N'&RETCODE LE 1).ZG8A      CK NUM                  00064300
&ZMS          SETC  '"RETCODE='                 *KPOSA* MNOTE           00064400
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00064500
&ZMS          SETC  '&ZMS "RETCODE"'                                    00064600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00064700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00064800
.ZG8A         ANOP  ,                                                   00064900
.*-------------------------------------------------------------------   00065000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00065100
              AIF   (K'&RETCODE(1) LE 0).ZG8C   NO PARM                 00065200
&ZXRETCODE    SETC  'OUTPUT'    SET OUTPUT                              00065300
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE           00065400
              AIF   (N'&RETCODE GT 1).ZG8C                              00065500
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                           00065600
.ZG8C         ANOP  ,                                                   00065700
.*-------------------------------------------------------------------   00065800
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00065900
              AIF   (K'&ZXRETCODE LE 0).ZG8R    NOT I/O                 00066000
              AIF   ('&XRETCODE'(1,1) NE '(').ZG8R                      00066100
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                        00066200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                         00066300
              AIF   (K'&ZCGPR GT 2).ZG8Q                                00066400
              AIF   ('&ZCGPR' EQ '0').ZG8Q                              00066500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00066600
              AIF   (T'&ZCGPR NE 'N').ZG8Q      INVALID REG NAME        00066700
.ZG8P         ANOP  ,                                                   00066800
              AIF   (T'&ZCGPR NE 'N').ZG8R      NON NUMERIC             00066900
              AIF   ('&ZCGPR' LT '2').ZG8Q                              00067000
              AIF   ('&ZCGPR' LE '12').ZG8R                             00067100
.ZG8Q         ANOP  ,                                                   00067200
&ZMS          SETC  '"RETCODE='                 *KGPRA* MNOTE           00067300
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00067400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00067500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00067600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00067700
.ZG8R         ANOP  ,                                                   00067800
.*----------------------------------------------------------------***   00067900
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00068000
              AIF   (N'&RSNCODE LE 1).ZG11A     CK NUM                  00068100
&ZMS          SETC  '"RSNCODE='                 *KPOSA* MNOTE           00068200
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00068300
&ZMS          SETC  '&ZMS "RSNCODE"'                                    00068400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00068500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00068600
.ZG11A        ANOP  ,                                                   00068700
.*-------------------------------------------------------------------   00068800
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00068900
              AIF   (K'&RSNCODE(1) LE 0).ZG11C  NO PARM                 00069000
&ZXRSNCODE    SETC  'OUTPUT'    SET OUTPUT                              00069100
&XRSNCODE     SETC  '&RSNCODE(1)'               SET XVARIABLE           00069200
              AIF   (N'&RSNCODE GT 1).ZG11C                             00069300
&XRSNCODE     SETC  '&RSNCODE'  SET XVARIABLE                           00069400
.ZG11C        ANOP  ,                                                   00069500
.*-------------------------------------------------------------------   00069600
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00069700
              AIF   (K'&ZXRSNCODE LE 0).ZG11R   NOT I/O                 00069800
              AIF   ('&XRSNCODE'(1,1) NE '(').ZG11R                     00069900
&ZCGPR        SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                        00070000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                        00070100
              AIF   (K'&ZCGPR GT 2).ZG11Q                               00070200
              AIF   ('&ZCGPR' EQ '0').ZG11Q                             00070300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00070400
              AIF   (T'&ZCGPR NE 'N').ZG11Q     INVALID REG NAME        00070500
.ZG11P        ANOP  ,                                                   00070600
              AIF   (T'&ZCGPR NE 'N').ZG11R     NON NUMERIC             00070700
              AIF   ('&ZCGPR' LT '2').ZG11Q                             00070800
              AIF   ('&ZCGPR' LE '12').ZG11R                            00070900
.ZG11Q        ANOP  ,                                                   00071000
&ZMS          SETC  '"RSNCODE='                 *KGPRA* MNOTE           00071100
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00071200
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00071300
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00071400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00071500
.ZG11R        ANOP  ,                                                   00071600
.******************************************************************     00071700
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00071800
.******************************************************************     00071900
              ACTR  10000                                               00072000
.*----------------------------------------------------------------***   00072100
.***AH.P02 EXTRA POSITIONALS                                            00072200
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS               00072300
              AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL                00072400
              AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL            00072500
              AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL             00072600
.ZGLISTX1     ANOP  ,                                                   00072700
&ZCVAL        SETC  ''          ERROR FIELD                             00072800
&ZAWRK        SETA  0           POSITIONAL NUMBER                       00072900
.ZGLIST2      ANOP  ,                                                   00073000
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         00073100
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                00073200
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   00073300
              AGO   .ZGLIST2                                            00073400
.*                                                                      00073500
.ZGLIST3      ANOP  ,                                                   00073600
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             00073700
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'   *PPOSA* MNOTE           00073800
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     00073900
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              00074000
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      00074100
              MNOTE 8,' &ZMS ARE ALLOWED.'                              00074200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00074300
.ZGLISTX      ANOP  ,                                                   00074400
&ZASYSLNDX    SETA  0                                                   00074500
.*-------------------------------------------------------------------   00074600
.***AG.MF04 MF=(SLE)                                                    00074700
.ZGMFX        ANOP  ,           END OF FULL SYNTAX CHECK                00074800
.*******************************************************************    00074900
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00075000
.*******************************************************************    00075100
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          00075200
.*******************************************************************    00075300
.***AE.01  START OF COFPURGE MACRO CODE                                 00075400
.*******************************************************************    00075500
              LCLC  &M0M0001                 NAME                       00075600
&M0M0001      SETC  '&XLABEL'                SET NAME                   00075700
              AIF   (K'&XLABEL NE 0).XLAB2                              00075800
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT NAME               00075900
.*                                                                      00076000
.XLAB2        ANOP  ,                                                   00076100
&M0M0001 DS    0H                             COFPURGE-1                00076200
.*******************************************************************    00076300
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00076400
.*******************************************************************    00076500
              PUSH  PRINT                                               00076600
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          00076700
              PRINT OFF         ++ PR01                                 00076800
              AGO   .ZPRNTXX                                            00076900
.ZPRINTX      PRINT ON                                                  00077000
.ZPRNTXX      ANOP  ,                                                   00077100
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00077200
.*-----------BAL macro code-------------                                00077300
         AIF    ('&XMF' EQ 'L').LFORM1                                  00077400
         LA     15,40               .Set VLF not active return code     00077500
         SLR    0,0                 .Clear VLF reason code              00077600
         AIF    ('&SYSASCE' EQ 'P').NOTAR1  Systate Primary             00077700
         SAR    14,0                .Clear the AR                       00077800
.NOTAR1  ANOP                                                           00077900
         L      14,16               .Get CVT addressability             00078000
         L      14,200(14)          .Get SCVT addressability            00078100
         ICM    14,15,156(14)                                           00078200
         BZ     AMGE&SYSNDX         .Bypass if VLF is not active        00078300
         ICM    14,15,8(14)                                             00078400
         BZ     AMGE&SYSNDX         .Bypass if VLF is not active        00078500
         ICM    14,15,8(14)                                             00078600
         BZ     AMGE&SYSNDX         .Bypass if VLF is not active        00078700
         LR     15,14               .Save value around parm list build  00078800
.LFORM1  ANOP                                                           00078900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00079000
.********************************************************************   00079100
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00079200
.********************************************************************   00079300
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00079400
                      LCLA  &ZOPN1         INVOCATION INDEX             00079500
                      LCLC  &ZOPL(4095)    LABEL                        00079600
                      LCLC  &ZOPO(4095)    OPERATION                    00079700
                      LCLC  &ZOPV(4095)    VALUE                        00079800
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00079900
.*                                                                      00080000
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00080100
.******************************************************************     00080200
.***AL.L10 COFPURGE FMT=LIST MF=S|L PARAMETERS                          00080300
.******************************************************************     00080400
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00080500
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00080600
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00080700
&XMFATTR              SETC  '0D'                                        00080800
.*                                                                      00080900
&ZOPN                 SETA  &ZOPN+1                                     00081000
&ZOPL(&ZOPN)          SETC  ' '                                         00081100
&ZOPO(&ZOPN)          SETC  'B'                                         00081200
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00081300
&ZOPD(&ZOPN)          SETC  '++ COFPURGE ARG PARMS'                     00081400
.*                                                                      00081500
&ZOPN                 SETA  &ZOPN+1                                     00081600
&ZOPL(&ZOPN)          SETC  ' '                                         00081700
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00081800
&ZOPV(&ZOPN)          SETC  '1'                                         00081900
&ZOPD(&ZOPN)          SETC  ' '                                         00082000
.*                                                                      00082100
.ZLMFSL2              ANOP  ,                                           00082200
.*-------------------------------------------------------------------   00082300
.***AM.L01  COFPURGE FMT=LIST PARAMETERS                                00082400
&ZOPN                 SETA &ZOPN+1                                      00082500
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00082600
&ZOPO(&ZOPN)          SETC 'DS'                                         00082700
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00082800
&ZOPD(&ZOPN)          SETC '++ COFPURGE PARM LIST'                      00082900
.*-------------------------------------------------------------------   00083000
.***AM.L02 XVERSION XL1                                                 00083100
&ZOPN                 SETA &ZOPN+1                                      00083200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00083300
&ZOPO(&ZOPN)          SETC 'DS'                                         00083400
&ZOPV(&ZOPN)          SETC 'XL1'                                        00083500
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00083600
.*-------------------------------------------------------------------   00083700
.***AM.L09  XCLASS CL7                                                  00083800
&ZOPN                 SETA &ZOPN+1                                      00083900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCLASS'                           00084000
&ZOPO(&ZOPN)          SETC 'DS'                                         00084100
&ZOPV(&ZOPN)          SETC 'CL7'                                        00084200
&ZOPD(&ZOPN)          SETC '++ &ZXCLASS  XCLASS'                        00084300
.*-------------------------------------------------------------------   00084400
.***AM.L10 END OF COFPURGE LIST PARAMETERS                              00084500
&ZOPN                 SETA &ZOPN+1                                      00084600
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00084700
&ZOPO(&ZOPN)          SETC 'EQU'                                        00084800
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00084900
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00085000
.*                                                                      00085100
&ZOPN                 SETA &ZOPN+1                                      00085200
&ZOPL(&ZOPN)          SETC ' '                                          00085300
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00085400
&ZOPV(&ZOPN)          SETC '1'                                          00085500
&ZOPD(&ZOPN)          SETC ' '                                          00085600
.*-------------------------------------------------------------------   00085700
.***AL.L12 COFPURGE FMT=LIST MF=S|L PARAMETERS                          00085800
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00085900
.*                                                                      00086000
&ZOPN                 SETA  &ZOPN+1                                     00086100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00086200
&ZOPO(&ZOPN)          SETC  'DC'                                        00086300
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00086400
&ZOPD(&ZOPN)          SETC  '++ COFPURGE ARG PARMS'                     00086500
.*                                                                      00086600
.ZLMFSLX              ANOP  ,                                           00086700
.*-------------------------------------------------------------------   00086800
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00086900
&ZPLLEN               SETA 8                                            00087000
.*                                                                      00087100
.******************************************************************     00087200
.***AI.L01 COFPURGE FMT=LIST FILL IN PARAMETER AREA                     00087300
.******************************************************************     00087400
                      ACTR  10000                                       00087500
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00087600
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00087700
&ZCVAL                SETC  'LAE'          XAX MODE                     00087800
.ZIMFXA               ANOP ,                                            00087900
.*                                                                      00088000
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00088100
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00088200
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00088300
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00088400
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00088500
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00088600
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00088700
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00088800
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00088900
&ZOPN                 SETA  &ZOPN+1                                     00089000
&ZOPL(&ZOPN)          SETC  ' '                                         00089100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00089200
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00089300
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00089400
                      AGO   .ZIMFNX                                     00089500
.*                                                                      00089600
.ZIMFN2               ANOP ,                                            00089700
&ZOPN                 SETA  &ZOPN+1                                     00089800
&ZOPL(&ZOPN)          SETC  ' '                                         00089900
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00090000
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00090100
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00090200
.ZIMFNX               ANOP ,                                            00090300
.********************************************************************   00090400
.***AI.L02 COFPURGE FMT=LIST INITIALIZE PARAMETER AREA                  00090500
.********************************************************************   00090600
.***AI.L03 MF=(SLE)                                                     00090700
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00090800
.*                                                                      00090900
&ZOPN                 SETA  &ZOPN+1                                     00091000
&ZOPL(&ZOPN)          SETC  ' '                                         00091100
&ZOPO(&ZOPN)          SETC  'XC'                                        00091200
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00091300
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00091400
.ZIMFLX               ANOP  ,                                           00091500
.*-------------------------------------------------------------------   00091600
.***AI.L04A XVERSION XL1                                                00091700
                      AIF   (&XPLISTVER EQ 0).ZIMFVW                    00091800
&ZOPN                 SETA  &ZOPN+1                                     00091900
&ZOPL(&ZOPN)          SETC  ' '                                         00092000
&ZOPO(&ZOPN)          SETC  'MVI'                                       00092100
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00092200
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00092300
.ZIMFVW               ANOP  ,                                           00092400
.*-------------------------------------------------------------------   00092500
.***AI.L25  XCLASS CL7                                                  00092600
                      AIF   ('&ZXCLASS' EQ '').ZI2E  NOT USED           00092700
                      AIF   ('&ZXCLASS' EQ 'OUTPUT').ZI2E               00092800
&ZCGPR                SETC  '&XCLASS'                                   00092900
.*                                                                      00093000
                      AIF   ('&XCLASS'(1,1) NE '(').ZI2B                00093100
&ZCGPR   SETC  '0('.'&XCLASS'(2,K'&XCLASS-2).')'                        00093200
.ZI2B                 ANOP  ,                                           00093300
.*                                                                      00093400
&ZOPN                 SETA  &ZOPN+1                                     00093500
&ZOPL(&ZOPN)          SETC  ' '                                         00093600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00093700
&ZOPV(&ZOPN)          SETC  '1(7,1),&ZCGPR'                             00093800
&ZOPD(&ZOPN)          SETC  '++ &ZXCLASS XCLASS CL7'                    00093900
.*                                                                      00094000
.ZI2E                 ANOP  ,                                           00094100
.*-------------------------------------------------------------------   00094200
&ZOPN1                SETA &ZOPN                                        00094300
.*******************************************************************    00094400
.***  PROCESS COFPURGE OUTPUT PARAMETERS                                00094500
.*******************************************************************    00094600
                      ACTR  10000                                       00094700
.*******************************************************************    00094800
.***AO.X01  LABEL TO BYPASS INVOCATION                                  00094900
.*******************************************************************    00095000
&ZOPN                 SETA  &ZOPN+1                                     00095100
&ZOPL(&ZOPN)          SETC  'AMGE&SYSNDX'                               00095200
&ZOPO(&ZOPN)          SETC  'DS'                                        00095300
&ZOPV(&ZOPN)          SETC  '0H'                                        00095400
&ZOPD(&ZOPN)          SETC  '++ BYPASS INVOCATION'                      00095500
.*******************************************************************    00095600
.***AO.X02  RETURN CODE PROCESSING                                      00095700
.*******************************************************************    00095800
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00095900
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00096000
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00096100
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00096200
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00096300
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00096400
&ZOPN                 SETA  &ZOPN+1                                     00096500
&ZOPL(&ZOPN)          SETC  ' '                                         00096600
&ZOPO(&ZOPN)          SETC  'ST'                                        00096700
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00096800
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00096900
                      AGO   .ZMRETX                                     00097000
.*                                                                      00097100
.ZMRET2               ANOP  ,                                           00097200
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00097300
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00097400
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00097500
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00097600
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00097700
&ZOPN                 SETA  &ZOPN+1                                     00097800
&ZOPL(&ZOPN)          SETC  ' '                                         00097900
&ZOPO(&ZOPN)          SETC  'LR'                                        00098000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00098100
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00098200
.ZMRETX               ANOP  ,                                           00098300
.*******************************************************************    00098400
.***AO.X03  REASON CODE PROCESSING                                      00098500
.*******************************************************************    00098600
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00098700
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00098800
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00098900
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00099000
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00099100
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00099200
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00099300
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00099400
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00099500
&ZOPN                 SETA  &ZOPN+1                                     00099600
&ZOPL(&ZOPN)          SETC  ' '                                         00099700
&ZOPO(&ZOPN)          SETC  'ST'                                        00099800
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00099900
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00100000
                      AGO   .ZMRSNX                                     00100100
.*                                                                      00100200
.ZMRSN2               ANOP  ,                                           00100300
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00100400
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00100500
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00100600
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00100700
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00100800
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00100900
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00101000
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00101100
&ZOPN                 SETA  &ZOPN+1                                     00101200
&ZOPL(&ZOPN)          SETC  ' '                                         00101300
&ZOPO(&ZOPN)          SETC  'LR'                                        00101400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00101500
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00101600
.ZMRSNX               ANOP  ,                                           00101700
.*******************************************************************    00101800
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00101900
.*******************************************************************    00102000
.ZMFLX                ANOP  ,              MF=L PROCESSING              00102100
.*******************************************************************    00102200
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00102300
.*******************************************************************    00102400
                      ACTR  10000                                       00102500
.*                                                                      00102600
                      LCLA  &ZLC           COLUMN POSITION              00102700
                      LCLA  &ZOPX          LIST TABLE INDEX             00102800
                      LCLC  &ZLL           LABEL                        00102900
                      LCLC  &ZLOP          OPERATION                    00103000
                      LCLC  &ZLV           VALUE                        00103100
                      LCLC  &ZLD           DESCRIPTION                  00103200
.*                                                                      00103300
&ZOPX                 SETA  1                                           00103400
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00103500
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00103600
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00103700
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00103800
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00103900
                      AIF   (K'&ZLD LE 0).ZL5                           00104000
&ZLC                  SETA  35             COMMENT COLUMN               00104100
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00104200
&ZLC                  SETA  33             COMMMENT COLUMN              00104300
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00104400
&ZLV                  SETC  '&ZLV'.' '                                  00104500
                      AGO   .ZL3                                        00104600
.*                                                                      00104700
.ZL4                  ANOP  ,                                           00104800
&ZLV                  SETC  '&ZLV'.' '                                  00104900
.ZL5                  ANOP  ,                                           00105000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00105100
.*                                                                      00105200
&ZLL     &ZLOP &ZLV                                                     00105300
.*                                                                      00105400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00105500
                      AGO   .ZL2           CONTINUE LOOPING             00105600
.*                                                                      00105700
.ZLX                  ANOP  ,                                           00105800
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00105900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00106000
         AIF     ('&XMF' EQ 'L').LFORM2                                 00106100
         PC      0(15)               .PC to COFMPURG                    00106200
.LFORM2  ANOP                                                           00106300
.*-----------BAL macro code-------------                                00106400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00106500
.ZLINKX               ANOP  ,                                           00106600
.*******************************************************************    00106700
.***AP.X01  FORMAT GENERATED CODE                                       00106800
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00106900
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00107000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00107100
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00107200
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00107300
                      AIF   (K'&ZLD LE 0).ZL51                          00107400
&ZLC                  SETA  35             COMMENT COLUMN               00107500
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00107600
&ZLC                  SETA  33             COMMENT COLUMN               00107700
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00107800
&ZLV                  SETC  '&ZLV'.' '                                  00107900
                      AGO   .ZL31                                       00108000
.*                                                                      00108100
.ZL41                 ANOP  ,                                           00108200
&ZLV                  SETC  '&ZLV'.' '                                  00108300
.ZL51                 ANOP  ,                                           00108400
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00108500
.*                                                                      00108600
&ZLL     &ZLOP &ZLV                                                     00108700
.*                                                                      00108800
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00108900
                      AGO   .ZL21          CONTINUE LOOPING             00109000
.*                                                                      00109100
.ZLX1                 ANOP  ,                                           00109200
.*******************************************************************    00109300
.***AP.X02  END OF COFPURGE MACRO                                       00109400
&ZCOFPURGE            SETC  'YES'          SET COFPURGE USED            00109500
         POP   PRINT                                                    00109600
*                                            COFPURGE-1                 00109700
         SPACE 1                                                        00109800
.ZLX2                 ANOP  ,                                           00109900
         MEND                                                           00110000
**********************************************************************/ 00110100
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00110200
*%COFPURGE: MACRO KEYS(PLISTVER,CLASS,RETCODE,RSNCODE,MF);              00110300
*  ANS('?'||MACLABEL||' '||'COFPURGP '||MACLIST||                       00110400
*         ' '||MACKEYS||';') COL(MACLMAR);                              00110500
*%END COFPURGE;                                                         00110600
