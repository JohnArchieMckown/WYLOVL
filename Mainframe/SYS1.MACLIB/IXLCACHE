*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXLCACHE                              -03/20/01-<5> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  XES Cache Structure Services                  * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5647-A01 (C) COPYRIGHT IBM CORP. 1993, 2000                     * 00001200
*                                                                     * 00001300
* STATUS= HBB7703                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The IXLCACHE macro provides operations to atomically read,     * 00002100
*      write, cast-out, and delete subsystem data from/to a coupling  * 00002200
*      facility cache structure, and otherwise manipulate subsystem   * 00002300
*      and control information in the structure.                      * 00002400
*                                                                     * 00002500
*      A cache structure is partitioned into a set of directory       * 00002600
*      entries and a set of data entries.  The numbers of each type   * 00002700
*      of entry are determined at structure allocation time via       * 00002800
*      programming interface ratio parameters that indicates the      * 00002900
*      desired partitioning of the total structure space, and are     * 00003000
*      static for the duration of the structure.                      * 00003100
*                                                                     * 00003200
*      Data entries contain cached subsystem data.  Data entries are  * 00003300
*      comprised of 1 to 255 elements.  An entry may or may not have  * 00003400
*      elements. If there are no elements then the data area size     * 00003500
*      (ELENMUM) will be 0.  The size of an element and the maximum   * 00003600
*      number of elements in an entry is specified when the structure * 00003700
*      is allocated.  The number of elements in an entry is           * 00003800
*      established when the entry is initially written and may be     * 00003900
*      changed on any subsequent write to the entry.  These elements  * 00004000
*      are allocated by invoking IXLCACHE to write subsystem data to  * 00004100
*      the structure.  Each allocated data entry has a corresponding  * 00004200
*      directory entry that contains control information.  Directory  * 00004300
*      entries may exist without an associated data entry.            * 00004400
*                                                                     * 00004500
*      An optional 64-byte extension to each data entry, referred to  * 00004600
*      as the adjunct data or adjunct area, may be specified on the   * 00004700
*      allocation of a cache structure.  When adjunct areas are       * 00004800
*      defined then IXLCACHE operations that place subsystem data     * 00004900
*      into the structure or retrieve subsystem data from the         * 00005000
*      structure may also include the adjunct data.  The content of   * 00005100
*      adjunct data is user defined.  Adjunct areas may be used only  * 00005200
*      when data elements exist in the structure and only for entries * 00005300
*      with associated data.                                          * 00005400
*                                                                     * 00005500
*      Directory entries contain control information that identifies  * 00005600
*      named subsystem data items to the structure, describes the     * 00005700
*      attributes of subsystem data items, permits registration of    * 00005800
*      connection interest in data, facilitates the casting out of    * 00005900
*      data, and affects structure resource management operations.  A * 00006000
*      directory entry is always allocated for and associated with a  * 00006100
*      data entry that contains cached subsystem data.  A directory   * 00006200
*      entry may be allocated and useful without an associated data   * 00006300
*      entry by permitting the definition of named subsystem data     * 00006400
*      items and registration of connection interest in such items    * 00006500
*      prior to, and perhaps even without, actually caching the data  * 00006600
*      in the structure.                                              * 00006700
*                                                                     * 00006800
*      All allocated directory and data entries are referred to and   * 00006900
*      identified by a connection specified name.  A name signifies   * 00007000
*      some subsystem data item, and the same name identifies both    * 00007100
*      the directory entry and the associated data entry for cached   * 00007200
*      data.  For uncached data the name identifies the directory     * 00007300
*      entry only.                                                    * 00007400
*                                                                     * 00007500
*      Registration of connection interest is according to named data * 00007600
*      items, and is always relative to a connection's local cache.   * 00007700
*      A local cache is comprised of a user allocated and managed     * 00007800
*      storage area on the local system, and the local cache vector   * 00007900
*      allocated for the connection by the IXLCONN service when the   * 00008000
*      connection is established.  Registration of connection         * 00008100
*      interest correlates a named data item to an index in the       * 00008200
*      vector for this connection such that the index reflects the    * 00008300
*      validity of the data item in the connection's local storage    * 00008400
*      area.  The local storage copy of a data item is deemed to be   * 00008500
*      valid when connection interest is registered in the named data * 00008600
*      item and the connection performs some operation (e.g.,         * 00008700
*      IXLCACHE to read subsystem data) to retrieve a local cache     * 00008800
*      copy of the data matching the latest version.  Structure       * 00008900
*      operations that cause the contents or state of a data entry to * 00009000
*      change result in the invalidation of local copies via the      * 00009100
*      local cache vectors for all registered users.                  * 00009200
*                                                                     * 00009300
*      Cached data may be in either the changed or unchanged state.   * 00009400
*      To say cached data is changed means that the version of the    * 00009500
*      data in the structure supercedes any version on another        * 00009600
*      medium.  Cast-out operations from the structure may only be    * 00009700
*      performed for changed data.  IXLCACHE facilitates casting out  * 00009800
*      data by supporting serialization mechanisms to ensure multiple * 00009900
*      connections do not perform concurrent cast-out of a given data * 00010000
*      item.  Other IXLCACHE functions, however, may be performed     * 00010100
*      against a data item for which cast-out is in progress,         * 00010200
*      including the ability to write changed subsystem data.  All    * 00010300
*      changed data items in the structure are assigned to a          * 00010400
*      connection specified cast-out class.  The number of cast-out   * 00010500
*      classes for a structure is specified via programming interface * 00010600
*      and remains static.                                            * 00010700
*                                                                     * 00010800
*      A cache structure supports the partitioning of named data      * 00010900
*      items according to storage classes.  The number of storage     * 00011000
*      classes for the structure is determined via programming        * 00011100
*      interface when the structure is allocated and remains static.  * 00011200
*      Every named data item identified to the structure resides in a * 00011300
*      connection specified storage class.  When no unused directory  * 00011400
*      or data elements are available to satisfy an IXLCACHE request  * 00011500
*      requiring allocation of an entry or the addition of data       * 00011600
*      elements to an existing entry, then structure resource         * 00011700
*      management algorithms will attempt to reclaim entries for      * 00011800
*      reuse from specific storage classes.  Reclaim is driven either * 00011900
*      using default criteria, or as specified by connections through * 00012000
*      an IXLCACHE interface.  Only directory and data entries for    * 00012100
*      unchanged and unlocked for cast-out items are candidates for   * 00012200
*      reclaim for reuse.  Preference to reclaiming is given to       * 00012300
*      entries which have data but no registered interest.            * 00012400
*                                                                     * 00012500
*      Refer to the IXLCONN service description for additional        * 00012600
*      information regarding the allocation of a cache structure.     * 00012700
*                                                                     * 00012800
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00012900
*                                                                     * 00013000
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00013100
*                                                                     * 00013200
*01* ENVIRONMENT:                                                     * 00013300
*                                                                     * 00013400
*                                                                     * 00013500
*      Minimum authorization: Supervisor state and PSW key 0-7.       * 00013600
*                                                                     * 00013700
*      Dispatchable unit mode: Task or SRB mode.                      * 00013800
*                                                                     * 00013900
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00014000
*                                                                     * 00014100
*                        The current primary address space must be    * 00014200
*                        the same as the primary address space at the * 00014300
*                        time the connection service, IXLCONN, was    * 00014400
*                        issued for the structure.  This address      * 00014500
*                        space is referred to as the connector's      * 00014600
*                        address space.                               * 00014700
*                                                                     * 00014800
*                        The requestor's address space refers to the  * 00014900
*                        home address space of the unit of work which * 00015000
*                        is issuing the IXLCACHE request.  The        * 00015100
*                        requestor's address space may or may not be  * 00015200
*                        the same as the connector's address space.   * 00015300
*                                                                     * 00015400
*      AMODE:            31-bit.                                      * 00015500
*                                                                     * 00015600
*      ASC mode:         Primary or Access Register.                  * 00015700
*                                                                     * 00015800
*      Interrupt status: Enabled or disabled for I/O and external     * 00015900
*                        interrupts.                                  * 00016000
*                                                                     * 00016100
*      Locks:            Disabled callers must be legally disabled by * 00016200
*                        holding the CPU lock and cannot hold other   * 00016300
*                        disabled locks (invocation by DIE routines   * 00016400
*                        is not supported).  Enabled callers must not * 00016500
*                        hold any locks.  When MODE=SYNCSUSPEND is    * 00016600
*                        specified the caller must be enabled.        * 00016700
*                                                                     * 00016800
*      Control parameters:                                            * 00016900
*                                                                     * 00017000
*                                                                     * 00017100
*                        1.  The caller's parameter list must be      * 00017200
*                            addressable in the caller's primary      * 00017300
*                            address space.                           * 00017400
*                                                                     * 00017500
*                        2.  If the caller is running in Access       * 00017600
*                            Register ASC mode and specifies a macro  * 00017700
*                            parameter using explicit register        * 00017800
*                            notation the access register             * 00017900
*                            corresponding to the general register    * 00018000
*                            must appropriately qualify the general   * 00018100
*                            register.                                * 00018200
*                                                                     * 00018300
*                        3.  The virtual storage areas specified by   * 00018400
*                            the STGSTATS, ADJAREA, ANSAREA, BUFFER   * 00018500
*                            (for REG_NAMELIST requests only), and    * 00018600
*                            NSBAREA, keywords must be addressable in * 00018700
*                            the caller's primary address space or    * 00018800
*                            from the caller's PASN access list.      * 00018900
*                                                                     * 00019000
*                        4.  All other virtual storage areas          * 00019100
*                            specified on the invocation may be       * 00019200
*                            addressable in the caller's primary,     * 00019300
*                            secondary, or home address spaces, from  * 00019400
*                            the PASN access list, or from the DU     * 00019500
*                            access list.                             * 00019600
*                                                                     * 00019700
*                                                                     * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*                                                                     * 00020100
*01* PROGRAMMING REQUIREMENTS:                                        * 00020200
*                                                                     * 00020300
*                                                                     * 00020400
*    1.  Access Register mode invokers must specify SYSSTATE          * 00020500
*        ASCENV=AR prior to invoking this macro.                      * 00020600
*                                                                     * 00020700
*                                                                     * 00020800
*                                                                     * 00020900
*01* RESTRICTIONS:                                                    * 00021000
*                                                                     * 00021100
*                                                                     * 00021200
*    1.  If the caller is disabled then the parameter list and all    * 00021300
*        storage areas addressed by macro parameters must reside in   * 00021400
*        either non-pageable or disabled reference storage.           * 00021500
*                                                                     * 00021600
*    2.  The caller may not be running as a Disabled Interrupt Exit   * 00021700
*        (DIE).                                                       * 00021800
*                                                                     * 00021900
*                                                                     * 00022000
*                                                                     * 00022100
*01* INPUT REGISTER INFORMATION:                                      * 00022200
*                                                                     * 00022300
*    Before issuing the IXLCACHE macro, the caller does not have to   * 00022400
*    place any information into any register or AR unless using it in * 00022500
*    register notation for a particular parameter, or using it as a   * 00022600
*    base register.                                                   * 00022700
*                                                                     * 00022800
*01* OUTPUT REGISTER INFORMATION:                                     * 00022900
*                                                                     * 00023000
*    When control returns to the caller, the GPRs contain:            * 00023100
*                                                                     * 00023200
*                                                                     * 00023300
*    REGISTER  CONTENTS                                               * 00023400
*                                                                     * 00023500
*    0         Reason code                                            * 00023600
*                                                                     * 00023700
*    1         Used as work registers by the system                   * 00023800
*                                                                     * 00023900
*    2-13      Unchanged                                              * 00024000
*                                                                     * 00024100
*    14        Used as work registers by the system.                  * 00024200
*                                                                     * 00024300
*    15        Return code                                            * 00024400
*                                                                     * 00024500
*                                                                     * 00024600
*                                                                     * 00024700
*    When control returns to the caller, the ARs contain:             * 00024800
*                                                                     * 00024900
*                                                                     * 00025000
*    REGISTER  CONTENTS                                               * 00025100
*                                                                     * 00025200
*    0-1       Used as work registers by the system                   * 00025300
*                                                                     * 00025400
*    2-13      Unchanged                                              * 00025500
*                                                                     * 00025600
*    14-15     Used as work registers by the system.                  * 00025700
*                                                                     * 00025800
*                                                                     * 00025900
*                                                                     * 00026000
*01* PERFORMANCE IMPLICATIONS:                                        * 00026100
*                                                                     * 00026200
*    None.                                                            * 00026300
*                                                                     * 00026400
*01* SYNTAX:                                                          * 00026500
*                                                                     * 00026600
*[xlabel]  IXLCACHE    REQUEST=READ_DATA                             * 00026700
*                    |    [,ASSIGN=YES|NO]                          * 00026800
*                    |    [,REGUSER=YES|NO]                         * 00026900
*                    |    [,RETURNDATA=YES|NO]                      * 00027000
*                     ,REQUEST=WRITE_DATA                            * 00027100
*                    |   [,WHENREG=YES]                              * 00027200
*                    |   [,WHENREG=NO                                * 00027300
*                    |        [,REGUSER=YES|NO]                     * 00027400
*                    |        [,ASSIGN=YES|NO]]                     * 00027500
*                    |    [,VERSCOMP=xverscomp|NO_VERSCOMP          * 00027600
*                    |        [,VERSCOMPTYPE=EQUAL|LESSOREQUAL]]    * 00027700
*                    |   [,VERSUPDATE=NONE]                          * 00027800
*                    |   [,VERSUPDATE=INC]                           * 00027900
*                    |   [,VERSUPDATE=DEC]                           * 00028000
*                    |   [,VERSUPDATE=SET                            * 00028100
*                    |         ,NEWVERS=xnewvers]                     * 00028200
*                    |   [,CHANGED=NO                                * 00028300
*                    |   |    [,CROSSINVAL=NO|YES]                  * 00028400
*                    |   |   [,GETCOLOCK=NO]                         * 00028500
*                    |   |   [,GETCOLOCK=YES                         * 00028600
*                    |   |        [,PROCESSID                         * 00028700
*                    |   |                    =xprocessid|NO_PROCESS * 00028800
*                    |   |                    ID]]]                  * 00028900
*                    |   [,CHANGED=YES                               * 00029000
*                    |        [,PARITY=xparity|00110000]            * 00029100
*                    |        [,USERDATA=xuserdata|NO_USERDATA]]    * 00029200
*                    |     ,ELEMNUM=xelemnum                          * 00029300
*                     ,REQUEST=REG_NAMELIST                          * 00029400
*                    |     ,STARTINDEX=xstartindex                    * 00029500
*                    |     ,ENDINDEX=xendindex                        * 00029600
*                    |     ,NSBAREA=xnsbarea                          * 00029700
*                     ,REQUEST=CASTOUT_DATA                          * 00029800
*                    |    [,REGUSER=NO|YES]                         * 00029900
*                    |    [,PROCESSID=xprocessid|NO_PROCESSID]      * 00030000
*                     ,REQUEST=UNLOCK_CASTOUT                        * 00030100
*                    |     ,FIRSTNAME=xfirstname                      * 00030200
*                    |     ,LASTNAME=xlastname                        * 00030300
*                    |    [,PROCESSID=xprocessid|NO_PROCESSID]      * 00030400
*                     ,REQUEST=UNLOCK_CO_NAME                        * 00030500
*                    |     ,CUNBAREA=xcunbarea                        * 00030600
*                    |    [,PROCESSID=xprocessid|NO_PROCESSID]      * 00030700
*                     ,REQUEST=CROSS_INVAL                           * 00030800
*                     ,REQUEST=DELETE_NAME                           * 00030900
*                    |   [,DELETETYPE=DIRANDDATA]                    * 00031000
*                    |   [,DELETETYPE=UNCHDATA]                      * 00031100
*                    |   [,DELETETYPE=CHDATA]                        * 00031200
*                    |   [,DELETETYPE=ANYDATA]                       * 00031300
*                    |    [,VERSCOMP=xverscomp|NO_VERSCOMP          * 00031400
*                    |        [,VERSCOMPTYPE=EQUAL|LESSOREQUAL]]    * 00031500
*                     ,REQUEST=DELETE_NAMELIST                       * 00031600
*                    |     ,STARTINDEX=xstartindex                    * 00031700
*                    |     ,ENDINDEX=xendindex                        * 00031800
*                    |   [,DELETETYPE=DIRANDDATA]                    * 00031900
*                    |   [,DELETETYPE=UNCHDATA]                      * 00032000
*                    |   [,DELETETYPE=CHDATA]                        * 00032100
*                    |   [,DELETETYPE=ANYDATA]                       * 00032200
*                    |    [,VERSCOMPTYPE=NONE|EQUAL|LESSOREQUAL]    * 00032300
*                    |    [,ERRORACTION=CONTINUE|TERMINATE]         * 00032400
*                     ,REQUEST=READ_COCLASS                          * 00032500
*                    |    [,DIRINFOFMT=NAMELIST|DIRENTRYLIST]       * 00032600
*                     ,REQUEST=READ_DIRINFO                          * 00032700
*                    |    [,DIRINFOFMT=DIRENTRYLIST|NAMELIST]       * 00032800
*                    |    [,CRITERIA=ALL|CHANGED]                   * 00032900
*                     ,REQUEST=RESET_REFBIT                          * 00033000
*                    |    [,CRITERIA=ALL|CHANGED]                   * 00033100
*                     ,REQUEST=READ_COSTATS                          * 00033200
*                    |     ,COCLASSB=xcoclassb                        * 00033300
*                    |     ,COCLASSE=xcoclasse                        * 00033400
*                    |    [,COSTATSFMT=COCOUNTSLIST|COSTATSLIST]    * 00033500
*                     ,REQUEST=READ_STGSTATS                         * 00033600
*                    |     ,STGSTATS=xstgstats                        * 00033700
*                     ,REQUEST=PROCESS_REFLIST                       * 00033800
*                    |     ,NUMNAMES=xnumnames                        * 00033900
*                     ,REQUEST=SET_RECLVCTR                          * 00034000
*                          ,REPEAT=xrepeat                            * 00034100
*                         [,RECLVCTR=xreclvctr|NO_RECLVCTR]         * 00034200
*                      ,CONTOKEN=xcontoken                            * 00034300
*                     [,REQID=xreqid|NO_REQID]                      * 00034400
*                     [,NAME=xname|NO_NAME                          * 00034500
*                         [,NAMEMASK=xnamemask|1111111111111111]    * 00034600
*                         [,OLDNAME=xoldname|NO_OLDNAME]]           * 00034700
*                    [,BUFLIST=xbuflist                            * 00034800
*                    |   [,BUFADDRTYPE=VIRTUAL                       * 00034900
*                    |   |   [,PAGEABLE=YES                          * 00035000
*                    |   |   |    [,BUFSTGKEY                         * 00035100
*                    |   |   |                =xbufstgkey|CALLERS_KE * 00035200
*                    |   |   |                Y]]                    * 00035300
*                    |   |   [,PAGEABLE=NO]                          * 00035400
*                    |   |    [,BUFALET=xbufalet|NO_BUFALET]]       * 00035500
*                    |   [,BUFADDRTYPE=REAL                          * 00035600
*                    |       [,BUFADDRSIZE=31]                       * 00035700
*                    |       [,BUFADDRSIZE=64]]                      * 00035800
*                    |    [,BUFNUM=xbufnum|NO_BUFNUM]               * 00035900
*                    |    [,BUFINCRNUM=xbufincrnum|NO_BUFINCRNUM]   * 00036000
*                     ,BUFFER=xbuffer                              * 00036100
*                        [,PAGEABLE=YES                              * 00036200
*                        |    [,BUFSTGKEY=xbufstgkey|CALLERS_KEY]]  * 00036300
*                        [,PAGEABLE=NO]                              * 00036400
*                          ,BUFSIZE=xbufsize]                         * 00036500
*                     [,ADJAREA=xadjarea|NO_ADJAREA]                * 00036600
*                     [,STGCLASS=xstgclass|NO_STGCLASS]             * 00036700
*                     [,COCLASS=xcoclass|NO_COCLASS]                * 00036800
*                     [,VECTORINDEX=xvectorindex|NO_VECTORINDEX]    * 00036900
*                    [,RESTOKEN=xrestoken|NO_RESTOKEN              * 00037000
*                     ,EXTRESTOKEN=xextrestoken|NO_EXTRESTOKEN]    * 00037100
*                    [,MODE=SYNCSUSPEND]                             * 00037200
*                    [,MODE=SYNCECB                                  * 00037300
*                    |     ,REQECB=xreqecb]                           * 00037400
*                    [,MODE=SYNCEXIT                                 * 00037500
*                    |    [,REQDATA=xreqdata|NO_REQDATA]]           * 00037600
*                    [,MODE=SYNCTOKEN                                * 00037700
*                    |     ,REQTOKEN=xreqtoken]                       * 00037800
*                    [,MODE=ASYNCECB                                 * 00037900
*                    |     ,REQECB=xreqecb]                           * 00038000
*                    [,MODE=ASYNCEXIT                                * 00038100
*                    |    [,REQDATA=xreqdata|NO_REQDATA]]           * 00038200
*                    [,MODE=ASYNCTOKEN                               * 00038300
*                    |     ,REQTOKEN=xreqtoken]                       * 00038400
*                    [,MODE=ASYNCNORESPONSE]                         * 00038500
*                     [,ANSAREA=xansarea|NO_ANSAREA                 * 00038600
*                          ,ANSLEN=xanslen]                           * 00038700
*                     [,RETCODE=xretcode]                             * 00038800
*                     [,RSNCODE=xrsncode]                             * 00038900
*                     [,PLISTVER=xplistver|IMPLIED_VERSION]         * 00039000
*                    [,MF=S]                                         * 00039100
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00039200
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00039300
*                                                                     * 00039400
*                                                                     * 00039500
*      Where:                                                         * 00039600
*                                                                     * 00039700
*                                                                     * 00039800
*      [xlabel]                                                       * 00039900
*          is an optional symbol, starting in column 1, that is the   * 00040000
*          name on the IXLCACHE macro invocation.  The name must      * 00040100
*          conform to the rules for an ordinary assembler language    * 00040200
*          symbol.                                                    * 00040300
*          DEFAULT: No name.                                          * 00040400
*                                                                     * 00040500
*                                                                     * 00040600
*                                                                     * 00040700
*                                                                     * 00040800
*      REQUEST=READ_DATA|WRITE_DATA|REG_NAMELIST|CASTOUT_DATA|UNLOCK * 00040900
*          _CASTOUT|UNLOCK_CO_NAME|CROSS_INVAL|DELETE_NAME|DELETE_NAM * 00041000
*          ELIST|READ_COCLASS|READ_DIRINFO|RESET_REFBIT|READ_COSTATS| * 00041100
*          READ_STGSTATS|...                                         * 00041200
*          is a required keyword input that specifies the operation   * 00041300
*          to be performed.                                           * 00041400
*                                                                     * 00041500
*                                                                     * 00041600
*          REQUEST=READ_DATA                                          * 00041700
*              requests that subsystem data for the entry specified   * 00041800
*              by NAME optionally be retrieved from the structure and * 00041900
*              placed in the storage locations specified by BUFFER or * 00042000
*              BUFLIST and ADJAREA, if specified.  Furthermore, for   * 00042100
*              structures allocated in CFLEVEL=4 or lower coupling    * 00042200
*              facilities, user interest in the entry will be         * 00042300
*              registered for the connection specified by CONTOKEN    * 00042400
*              using the local cache vector index specified by        * 00042500
*              VECTORINDEX.  For structures allocated in CFLEVEL=5 or * 00042600
*              higher coupling facilities, user interest in the entry * 00042700
*              will not be registered for the connection specified by * 00042800
*              CONTOKEN if REGUSER=NO is specified. Care should be    * 00042900
*              taken when using REGUSER=NO because preference to      * 00043000
*              reclaiming is given to entries which have data but no  * 00043100
*              registered interest.  When registration occurs, if     * 00043200
*              connection interest is already registered then the     * 00043300
*              specified VECTORINDEX replaces any previously          * 00043400
*              specified local cache vector index for this CONTOKEN   * 00043500
*              for the entry.                                         * 00043600
*                                                                     * 00043700
*              The entry is assigned to the storage class specified   * 00043800
*              by STGCLASS, superceding any previously specified      * 00043900
*              storage class for NAME.                                * 00044000
*                                                                     * 00044100
*              OLDNAME should be specified to deregister any          * 00044200
*              outstanding interest for the specified local cache     * 00044300
*              vector index for a different entry.                    * 00044400
*                                                                     * 00044500
*              If ADJAREA is specified and is supported by the        * 00044600
*              structure then the CaaAdjareaValid bit in the ANSAREA  * 00044700
*              will be set to '1' if the adjunct data was returned    * 00044800
*              and '0' if the adjunct data did not exist.             * 00044900
*                                                                     * 00045000
*              For structures allocated in CFLEVEL=4 or higher        * 00045100
*              coupling facilities, RETURNDATA=NO may be specified to * 00045200
*              suppress the read function when a READ_DATA request is * 00045300
*              specified. By specifying RETURNDATA=NO the READ_DATA   * 00045400
*              request will register interest in the entry without    * 00045500
*              returning the associated data. This is useful when     * 00045600
*              data is cached with the entry but the user does not    * 00045700
*              want the data to be read. If adjunct exists, and       * 00045800
*              ADJAREA is specified, it will be returned.             * 00045900
*                                                                     * 00046000
*              The changed indication and parity from the directory   * 00046100
*              entry are returned in the answer area specified by     * 00046200
*              ANSAREA.  When the request replaced a previously       * 00046300
*              specified local cache vector index for the entry the   * 00046400
*              replaced index is returned in the answer area.         * 00046500
*                                                                     * 00046600
*              For structures allocated in CFLEVEL=3 or lower         * 00046700
*              coupling facilities, when BUFFER or BUFLIST is         * 00046800
*              specified the count of elements in the retrieved entry * 00046900
*              is also returned in the answer area.  For structures   * 00047000
*              allocated in CFLEVEL=4 or higher coupling facilities,  * 00047100
*              the count of elements in the retrieved entry is        * 00047200
*              unconditionally returned in the answer area.  When a   * 00047300
*              request fails due to the inability to obtain structure * 00047400
*              resources (e.g., directory entry) the target storage   * 00047500
*              class number from which resources should have been     * 00047600
*              reclaimed is returned in the answer area.              * 00047700
*                                                                     * 00047800
*              Required keywords are NAME, STGCLASS, CONTOKEN, and    * 00047900
*              for structures allocated in CFLEVEL=4 or lower         * 00048000
*              coupling facilities, VECTORINDEX.  For structures      * 00048100
*              allocated in CFLEVEL=5 or higher coupling facilities,  * 00048200
*              VECTORINDEX is required when REGUSER=YES is either     * 00048300
*              specified or selected by default.  VECTORINDEX is      * 00048400
*              required when REGUSER=NO is specified along with       * 00048500
*              OLDNAME and ignored if REGUSER=NO is specified without * 00048600
*              OLDNAME also being specified.                          * 00048700
*                                                                     * 00048800
*                                                                     * 00048900
*              [ASSIGN=YES|NO]                                      * 00049000
*                  is an optional keyword input that specifies        * 00049100
*                  whether or not a directory entry will be assigned  * 00049200
*                  for NAME if one does not currently exist.          * 00049300
*                                                                     * 00049400
*                  DEFAULT: YES                                       * 00049500
*                                                                     * 00049600
*                                                                     * 00049700
*                  ASSIGN=YES                                         * 00049800
*                      indicates that a directory entry will be       * 00049900
*                      assigned.                                      * 00050000
*                                                                     * 00050100
*                                                                     * 00050200
*                  ASSIGN=NO                                          * 00050300
*                      indicates that no directory entry will be      * 00050400
*                      assigned.                                      * 00050500
*                                                                     * 00050600
*                                                                     * 00050700
*                                                                     * 00050800
*                                                                     * 00050900
*                                                                     * 00051000
*                                                                     * 00051100
*              [REGUSER=YES|NO]                                     * 00051200
*                  is an optional keyword input that specifies, for   * 00051300
*                  structures allocated in CFLEVEL=5 or higher        * 00051400
*                  coupling facilities, whether or not the request    * 00051500
*                  should register connection interest in the entry.  * 00051600
*                                                                     * 00051700
*                  DEFAULT: YES                                       * 00051800
*                                                                     * 00051900
*                                                                     * 00052000
*                  REGUSER=YES                                        * 00052100
*                      indicates that connection interest             * 00052200
*                      registration will be performed.                * 00052300
*                                                                     * 00052400
*                                                                     * 00052500
*                  REGUSER=NO                                         * 00052600
*                      indicates that no connection interest          * 00052700
*                      registration will be performed.  Care should   * 00052800
*                      be taken when using REGUSER=NO because         * 00052900
*                      preference to reclaiming is given to entries   * 00053000
*                      which have data but no registered interest.    * 00053100
*                                                                     * 00053200
*                                                                     * 00053300
*                                                                     * 00053400
*                                                                     * 00053500
*                                                                     * 00053600
*                                                                     * 00053700
*              [RETURNDATA=YES|NO]                                  * 00053800
*                  is an optional keyword input that specifies        * 00053900
*                  whether or not the data, if there is any, will be  * 00054000
*                  read for NAME. If ReturnData is not specified then * 00054100
*                  it will default to RETURNDATA=YES.                 * 00054200
*                                                                     * 00054300
*                  DEFAULT: YES                                       * 00054400
*                                                                     * 00054500
*                                                                     * 00054600
*                  RETURNDATA=YES                                     * 00054700
*                      indicates that the data will be read.          * 00054800
*                                                                     * 00054900
*                                                                     * 00055000
*                  RETURNDATA=NO                                      * 00055100
*                      indicates that for structures allocated in     * 00055200
*                      CFLEVEL=4 or higher coupling facilities the    * 00055300
*                      data entry read will be suppressed.  Adjunct   * 00055400
*                      data, if it exists and ADJAREA is specified,   * 00055500
*                      will be returned.  For structures allocated in * 00055600
*                      CFLEVEL=3 or lower coupling facilities         * 00055700
*                      RETURNDATA is ignored.                         * 00055800
*                                                                     * 00055900
*                      If ADJAREA is specified and is supported by    * 00056000
*                      the structure then the CaaAdjareaValid bit in  * 00056100
*                      the ANSAREA will be set to '1' if the adjunct  * 00056200
*                      data was returned and '0' if the adjunct data  * 00056300
*                      did not exist.                                 * 00056400
*                                                                     * 00056500
*                                                                     * 00056600
*                                                                     * 00056700
*                                                                     * 00056800
*                                                                     * 00056900
*          REQUEST=WRITE_DATA                                         * 00057000
*              requests that subsystem data be written from the       * 00057100
*              storage locations specified by BUFFER or BUFLIST and   * 00057200
*              ADJAREA to the entry specified by NAME.  For           * 00057300
*              structures allocated in CFLEVEL=3 or lower coupling    * 00057400
*              facilities BUFFER or BUFLIST is required and ELEMNUM   * 00057500
*              must be 1 or greater.  For structures allocated in     * 00057600
*              CFLEVEL=4 or higher coupling facilities when           * 00057700
*              CHANGED=YES BUFFER or BUFLIST is required and ELEMNUM  * 00057800
*              must be 1 or greater; when CHANGED=NO neither BUFFER   * 00057900
*              nor BUFLIST is required and ELEMNUM may be 0 or        * 00058000
*              greater.                                               * 00058100
*                                                                     * 00058200
*              The entry is assigned to the storage class specified   * 00058300
*              by STGCLASS, superceding any previously specified      * 00058400
*              storage class for NAME.                                * 00058500
*                                                                     * 00058600
*              The size of an existing entry may be altered by        * 00058700
*              specifying an ELEMNUM value which is different than    * 00058800
*              the ELEMNUM value used when the entry was created.     * 00058900
*              When the amount of space indicated by ELEMNUM is       * 00059000
*              greater than the amount of data specified for BUFFER   * 00059100
*              or BUFLIST, or 0 when neither BUFFER nor BUFLIST is    * 00059200
*              specified, then the entry will be padded with zeros.   * 00059300
*                                                                     * 00059400
*              When changed subsystem data is successfully written    * 00059500
*              then the sum of changed and locked for cast-out        * 00059600
*              entries in the storage class and the total number of   * 00059700
*              data elements for the cast-out class to which the      * 00059800
*              entry is assigned is returned in the answer area       * 00059900
*              specified by ANSAREA.  When WHENREG=NO was specified   * 00060000
*              and the request replaced a previously specified local  * 00060100
*              cache vector index for the entry the replaced index is * 00060200
*              returned in the answer area.  When a request fails due * 00060300
*              to the inability to obtain structure resources (e.g.,  * 00060400
*              directory entry or data entry), then the target        * 00060500
*              storage class number from which resources should have  * 00060600
*              been reclaimed is returned in the answer area.         * 00060700
*                                                                     * 00060800
*              Required keywords are NAME, ELEMNUM, STGCLASS, and     * 00060900
*              CONTOKEN.  For structures allocated in CFLEVEL=3 or    * 00061000
*              lower coupling facilities BUFFER or BUFLIST is         * 00061100
*              required.  For structures allocated in CFLEVEL=4 or    * 00061200
*              higher coupling facilities BUFFER or BUFLIST is        * 00061300
*              required when CHANGED=YES and optional when            * 00061400
*              CHANGED=NO.                                            * 00061500
*                                                                     * 00061600
*                                                                     * 00061700
*              [WHENREG=YES|NO                                      * 00061800
*                  is an optional keyword input that specifies        * 00061900
*                  whether or not user interest for the connection    * 00062000
*                  specified by CONTOKEN must previously have been    * 00062100
*                  registered for the entry.                          * 00062200
*                                                                     * 00062300
*                  DEFAULT: YES                                       * 00062400
*                                                                     * 00062500
*                                                                     * 00062600
*                  [WHENREG=YES]                                      * 00062700
*                      indicates that the request should be processed * 00062800
*                      only when connection interest is already       * 00062900
*                      registered for NAME.  If VECTORINDEX is        * 00063000
*                      specified, and the connection specified by     * 00063100
*                      CONTOKEN does not have a registered interest   * 00063200
*                      in the entry with the specified vector index   * 00063300
*                      number, the request will be failed.  Note that * 00063400
*                      specification of VECTORINDEX in this context   * 00063500
*                      will be ignored unless the structure is        * 00063600
*                      allocated in a CFLEVEL=2 or higher CF.  If     * 00063700
*                      there is no currently registered interest for  * 00063800
*                      CONTOKEN the request will be failed.           * 00063900
*                                                                     * 00064000
*                                                                     * 00064100
*                  [WHENREG=NO                                        * 00064200
*                      indicates that user interest need not          * 00064300
*                      previously have been registered.  In this case * 00064400
*                      the WRITE_DATA will, if necessary, assign a    * 00064500
*                      directory entry for NAME, and furthermore, for * 00064600
*                      structures allocated in CFLEVEL=4 or lower     * 00064700
*                      coupling facilities, will register interest    * 00064800
*                      for the connection specified by CONTOKEN using * 00064900
*                      the local cache vector index specified by      * 00065000
*                      VECTORINDEX.  For structures allocated in      * 00065100
*                      CFLEVEL=5 or higher coupling facilities, user  * 00065200
*                      interest in the entry will not be registered   * 00065300
*                      for the connection specified by CONTOKEN if    * 00065400
*                      REGUSER=NO is specified. Care should be taken  * 00065500
*                      when using REGUSER=NO because preference to    * 00065600
*                      reclaiming is given to entries which have data * 00065700
*                      but no registered interest.  When registration * 00065800
*                      is performed, if connection interest is        * 00065900
*                      already registered then the specified          * 00066000
*                      VECTORINDEX replaces any previously specified  * 00066100
*                      local cache vector index for this CONTOKEN for * 00066200
*                      the entry.                                     * 00066300
*                                                                     * 00066400
*                      OLDNAME should be specified to deregister any  * 00066500
*                      outstanding interest for the specified local   * 00066600
*                      cache vector index for a different entry.      * 00066700
*                                                                     * 00066800
*                      For structures allocated in CFLEVEL=4 or lower * 00066900
*                      coupling facilities, VECTORINDEX is required   * 00067000
*                      for WHENREG=NO.                                * 00067100
*                                                                     * 00067200
*                      For structures allocated in CFLEVEL=5 or       * 00067300
*                      higher coupling facilities, VECTORINDEX is     * 00067400
*                      required when REGUSER=YES is either specified  * 00067500
*                      or selected by default.  VECTORINDEX is        * 00067600
*                      required when REGUSER=NO is specified along    * 00067700
*                      with OLDNAME and ignored if REGUSER=NO is      * 00067800
*                      specified without OLDNAME also being           * 00067900
*                      specified.                                     * 00068000
*                                                                     * 00068100
*                                                                     * 00068200
*                      [REGUSER=YES|NO]                             * 00068300
*                          is an optional keyword input that          * 00068400
*                          specifies, for structures allocated in     * 00068500
*                          CFLEVEL=5 or higher coupling facilities,   * 00068600
*                          whether or not the request should register * 00068700
*                          connection interest in the entry.          * 00068800
*                                                                     * 00068900
*                          DEFAULT: YES                               * 00069000
*                                                                     * 00069100
*                                                                     * 00069200
*                          REGUSER=YES                                * 00069300
*                              indicates that connection interest     * 00069400
*                              registration will be performed.        * 00069500
*                                                                     * 00069600
*                                                                     * 00069700
*                          REGUSER=NO                                 * 00069800
*                              indicates that no connection interest  * 00069900
*                              registration will be performed.  Care  * 00070000
*                              should be taken when using REGUSER=NO  * 00070100
*                              because preference to reclaiming is    * 00070200
*                              given to entries which have data but   * 00070300
*                              no registered interest.                * 00070400
*                                                                     * 00070500
*                                                                     * 00070600
*                                                                     * 00070700
*                                                                     * 00070800
*                                                                     * 00070900
*                                                                     * 00071000
*                      [ASSIGN=YES|NO]]                             * 00071100
*                          is an optional keyword input that          * 00071200
*                          specifies whether or not a directory entry * 00071300
*                          will be assigned for NAME if one does not  * 00071400
*                          currently exist.                           * 00071500
*                                                                     * 00071600
*                          DEFAULT: YES                               * 00071700
*                                                                     * 00071800
*                                                                     * 00071900
*                          ASSIGN=YES                                 * 00072000
*                              indicates that a directory entry will  * 00072100
*                              be assigned.                           * 00072200
*                                                                     * 00072300
*                                                                     * 00072400
*                          ASSIGN=NO                                  * 00072500
*                              indicates that no directory entry will * 00072600
*                              be assigned.                           * 00072700
*                                                                     * 00072800
*                              ASSIGN=NO is only meaningful for cache * 00072900
*                              structures allocated in a CFLEVEL=9 or * 00073000
*                              higher coupling facility.              * 00073100
*                                                                     * 00073200
*                                                                     * 00073300
*                                                                     * 00073400
*                                                                     * 00073500
*                                                                     * 00073600
*                                                                     * 00073700
*                                                                     * 00073800
*                                                                     * 00073900
*                                                                     * 00074000
*                                                                     * 00074100
*              [VERSCOMP=xverscomp|NO_VERSCOMP                      * 00074200
*                  is the name (RS-type), or address in register      * 00074300
*                  (2)-(12), of an optional 8 character input which   * 00074400
*                  specifies a value to be compared to the version    * 00074500
*                  number of the designated entry.                    * 00074600
*                                                                     * 00074700
*                  VERSCOMP is only meaningful for structures         * 00074800
*                  allocated in CFLEVEL=5 or higher coupling          * 00074900
*                  facilities.                                        * 00075000
*                                                                     * 00075100
*                  If the condition specified by VERSCOMPTYPE is not  * 00075200
*                  met then the request is terminated with no         * 00075300
*                  resultant change to the structure.                 * 00075400
*                                                                     * 00075500
*                  Note that use of VERSCOMP is needed to ensure that * 00075600
*                  updates to the version number requested via the    * 00075700
*                  VERSUPDATE keyword are not processed multiple      * 00075800
*                  times as a result of internal request redrive      * 00075900
*                  logic affecting this request.                      * 00076000
*                                                                     * 00076100
*                  When VERSCOMP is requested along with a VERSUPDATE * 00076200
*                  to update the version number, then if the initial  * 00076300
*                  execution of the request succeeds, any subsequent  * 00076400
*                  internal redrive of the request will fail due to a * 00076500
*                  version number miscompare,  preventing             * 00076600
*                  unintentional multiple updates from occurring on   * 00076700
*                  the request.                                       * 00076800
*                                                                     * 00076900
*                  Conversely, if the initial execution of the        * 00077000
*                  request was unsuccessful, then any subsequent      * 00077100
*                  internal redrive of the request will be able to    * 00077200
*                  execute successfully and update the version number * 00077300
*                  only once, as intended.                            * 00077400
*                                                                     * 00077500
*                  In either of these cases, if the request is        * 00077600
*                  internally redriven and experiences a version      * 00077700
*                  number miscompare on the redrive, a return/reason  * 00077800
*                  code of IxlRsnCodeStatusUnknown will be returned   * 00077900
*                  for the request.  This reflects the fact that it   * 00078000
*                  is not known whether the observed version number   * 00078100
*                  miscompare on this operation:                      * 00078200
*                                                                     * 00078300
*                                                                     * 00078400
*                  o   resulted from the version number update having * 00078500
*                      succeeded on the original issuance of the      * 00078600
*                      request (causing the miscompare on the         * 00078700
*                      redriven request), or                          * 00078800
*                                                                     * 00078900
*                  o   was present all along,  or                     * 00079000
*                                                                     * 00079100
*                  o   resulted from a version number update made by  * 00079200
*                      another request.                               * 00079300
*                                                                     * 00079400
*                                                                     * 00079500
*                  When this return/reason code is returned,  it is   * 00079600
*                  up to the user to determine whether or not the     * 00079700
*                  requested update has actually occurred, and take   * 00079800
*                  the appropriate recovery action.                   * 00079900
*                  DEFAULT: NO_VERSCOMP                               * 00080000
*                                                                     * 00080100
*                                                                     * 00080200
*                  [VERSCOMPTYPE=EQUAL|LESSOREQUAL]]                * 00080300
*                      is an optional keyword input which specifies   * 00080400
*                      how the structure entry version number         * 00080500
*                      comparison is to be performed.                 * 00080600
*                                                                     * 00080700
*                      VERSCOMPTYPE is only meaningful for structures * 00080800
*                      allocated in CFLEVEL=5 or higher coupling      * 00080900
*                      facilities.                                    * 00081000
*                                                                     * 00081100
*                      DEFAULT: EQUAL                                 * 00081200
*                                                                     * 00081300
*                                                                     * 00081400
*                      VERSCOMPTYPE=EQUAL                             * 00081500
*                          The version number for the structure entry * 00081600
*                          must be equal to the value specified for   * 00081700
*                          VERSCOMP.                                  * 00081800
*                                                                     * 00081900
*                                                                     * 00082000
*                      VERSCOMPTYPE=LESSOREQUAL                       * 00082100
*                          The version number for the structure entry * 00082200
*                          must be less than or equal to the value    * 00082300
*                          specified for VERSCOMP.                    * 00082400
*                                                                     * 00082500
*                                                                     * 00082600
*                                                                     * 00082700
*                                                                     * 00082800
*                                                                     * 00082900
*                                                                     * 00083000
*                                                                     * 00083100
*                                                                     * 00083200
*              [VERSUPDATE=NONE|INC|DEC|SET]                        * 00083300
*                  is an optional keyword input that specifies how    * 00083400
*                  the entry version number will be updated or, for   * 00083500
*                  those cases where an entry is created,             * 00083600
*                  initialized.                                       * 00083700
*                                                                     * 00083800
*                  VERSUPDATE is only meaningful for structures       * 00083900
*                  allocated in CFLEVEL=5 or higher coupling          * 00084000
*                  facilities.                                        * 00084100
*                                                                     * 00084200
*                  DEFAULT: NONE                                      * 00084300
*                                                                     * 00084400
*                                                                     * 00084500
*                  [VERSUPDATE=NONE]                                  * 00084600
*                      The version number is not updated.             * 00084700
*                                                                     * 00084800
*                      On a request that causes an entry to be        * 00084900
*                      created the version number for the created     * 00085000
*                      entry is set to contain all binary zeros.      * 00085100
*                                                                     * 00085200
*                                                                     * 00085300
*                  [VERSUPDATE=INC]                                   * 00085400
*                      The version number will be incremented.        * 00085500
*                                                                     * 00085600
*                      On a request that causes an entry to be        * 00085700
*                      created the version number for the created     * 00085800
*                      entry is set to contain all binary zeros,      * 00085900
*                      except for the low order bit which is set to   * 00086000
*                      one.                                           * 00086100
*                                                                     * 00086200
*                      Note that internal request redrive logic may   * 00086300
*                      cause an INC request to increment the version  * 00086400
*                      number more than once.  If it is necessary to  * 00086500
*                      ensure that this kind of multiple increment    * 00086600
*                      does not occur,  version number comparison     * 00086700
*                      must also be requested.  See the description   * 00086800
*                      of the VERSCOMP keyword.                       * 00086900
*                                                                     * 00087000
*                  [VERSUPDATE=DEC]                                   * 00087100
*                      The version number will be decremented.        * 00087200
*                                                                     * 00087300
*                      On a request that causes an entry to be        * 00087400
*                      created the version number for the created     * 00087500
*                      entry is set to contain all binary ones.       * 00087600
*                                                                     * 00087700
*                      Note that internal request redrive logic may   * 00087800
*                      cause a DEC request to decrement the version   * 00087900
*                      number more than once.  If it is necessary to  * 00088000
*                      ensure that this kind of multiple decrement    * 00088100
*                      does not occur,  version number comparison     * 00088200
*                      must also be requested.  See the description   * 00088300
*                      of the VERSCOMP keyword.                       * 00088400
*                                                                     * 00088500
*                  [VERSUPDATE=SET                                    * 00088600
*                      The version number will be set to the value    * 00088700
*                      specified by NEWVERS, including the case where * 00088800
*                      an entry is created.                           * 00088900
*                                                                     * 00089000
*                      Note that internal request redrive logic may   * 00089100
*                      cause a SET request to set the version number  * 00089200
*                      more than once.  If it is necessary to ensure  * 00089300
*                      that this kind of multiple set does not occur, * 00089400
*                      version number comparison must also be         * 00089500
*                      requested.  See the description of the         * 00089600
*                      VERSCOMP keyword.                              * 00089700
*                                                                     * 00089800
*                                                                     * 00089900
*                      NEWVERS=xnewvers]                              * 00090000
*                          is the name (RS-type), or address in       * 00090100
*                          register (2)-(12), of a required 8         * 00090200
*                          character input which specifies a value    * 00090300
*                          for the entry version number.              * 00090400
*                                                                     * 00090500
*                          DEFAULT: NO_NEWVERS                        * 00090600
*                                                                     * 00090700
*                                                                     * 00090800
*                                                                     * 00090900
*                                                                     * 00091000
*                                                                     * 00091100
*                                                                     * 00091200
*                                                                     * 00091300
*                                                                     * 00091400
*              [CHANGED=NO|YES]                                     * 00091500
*                  is an optional keyword input that specifies the    * 00091600
*                  changed status of the subsystem data being         * 00091700
*                  written.  The directory entry will be updated to   * 00091800
*                  reflect this status.                               * 00091900
*                                                                     * 00092000
*                  DEFAULT: NO                                        * 00092100
*                                                                     * 00092200
*                                                                     * 00092300
*                  [CHANGED=NO                                        * 00092400
*                      indicates the data is unchanged.  In this case * 00092500
*                      if subsystem data is already cached it must be * 00092600
*                      unchanged.  WRITE_DATA cannot be used to       * 00092700
*                      replace changed subsystem data with unchanged  * 00092800
*                      data.  For structures allocated in CFLEVEL=4   * 00092900
*                      or higher coupling facilities, ELEMNUM=0 is    * 00093000
*                      valid and BUFFER and BUFLIST are optional when * 00093100
*                      CHANGED=NO.                                    * 00093200
*                                                                     * 00093300
*                                                                     * 00093400
*                      [CROSSINVAL=NO|YES]                          * 00093500
*                          is an optional keyword input that          * 00093600
*                          specifies whether or not cross-invalidate  * 00093700
*                          processing should be performed.            * 00093800
*                                                                     * 00093900
*                          DEFAULT: NO                                * 00094000
*                                                                     * 00094100
*                                                                     * 00094200
*                          CROSSINVAL=NO                              * 00094300
*                              indicates that all connections with    * 00094400
*                              registered interest in the entry       * 00094500
*                              should remain registered, and that a   * 00094600
*                              cross-invalidate should not be         * 00094700
*                              performed against the local caches.    * 00094800
*                                                                     * 00094900
*                                                                     * 00095000
*                          CROSSINVAL=YES                             * 00095100
*                              Indicates, with the exception of the   * 00095200
*                              connection specified by CONTOKEN, that * 00095300
*                              all connections with registered        * 00095400
*                              interest in the entry have interest    * 00095500
*                              deregistered and a cross-invalidate    * 00095600
*                              performed against their local caches.  * 00095700
*                                                                     * 00095800
*                                                                     * 00095900
*                                                                     * 00096000
*                                                                     * 00096100
*                                                                     * 00096200
*                                                                     * 00096300
*                      [GETCOLOCK=NO|YES]                           * 00096400
*                          is an optional keyword input that          * 00096500
*                          specifies whether or not the castout lock  * 00096600
*                          should be obtained.                        * 00096700
*                                                                     * 00096800
*                          DEFAULT: NO                                * 00096900
*                                                                     * 00097000
*                                                                     * 00097100
*                          [GETCOLOCK=NO]                             * 00097200
*                              indicates the castout lock should not  * 00097300
*                              be obtained.                           * 00097400
*                                                                     * 00097500
*                                                                     * 00097600
*                          [GETCOLOCK=YES                             * 00097700
*                              indicates the castout lock should be   * 00097800
*                              obtained.  Note that if the cast-out   * 00097900
*                              lock is already held from a previous   * 00098000
*                              WRITE_DATA request and the same        * 00098100
*                              CONTOKEN and PROCESSID is specified on * 00098200
*                              the GETCOLOCK request as was specified * 00098300
*                              on the previous WRITE_DATA request,    * 00098400
*                              the GETCOLOCK request will be          * 00098500
*                              accepted.                              * 00098600
*                                                                     * 00098700
*                                                                     * 00098800
*                                                                     * 00098900
*                              [PROCESSID=xprocessid|NO_PROCESSID]] * 00099000
*                                  ]                                  * 00099100
*                                  is the name (RS-type), or address  * 00099200
*                                  in register (2)-(12), of an        * 00099300
*                                  optional byte input field that     * 00099400
*                                  contains a user defined process    * 00099500
*                                  identifier to be placed in the     * 00099600
*                                  cast-out lock along with the       * 00099700
*                                  connection identifier.             * 00099800
*                                                                     * 00099900
*                                  DEFAULT: NO_PROCESSID              * 00100000
*                                                                     * 00100100
*                                                                     * 00100200
*                                                                     * 00100300
*                                                                     * 00100400
*                                                                     * 00100500
*                                                                     * 00100600
*                                                                     * 00100700
*                  [CHANGED=YES                                       * 00100800
*                      indicates the data is changed and will be      * 00100900
*                      assigned to the specified COCLASS, superceding * 00101000
*                      any previously specified cast-out class for    * 00101100
*                      the entry.  Furthermore, with the exception of * 00101200
*                      the connection specified by CONTOKEN, all      * 00101300
*                      connections with registered interest in the    * 00101400
*                      entry have interest deregistered and a         * 00101500
*                      cross-invalidate performed against their local * 00101600
*                      caches. ELEMNUM must be greater than or equal  * 00101700
*                      to 1.                                          * 00101800
*                                                                     * 00101900
*                      COCLASS and one of BUFFER and BUFLIST are      * 00102000
*                      required keywords when CHANGED=YES.            * 00102100
*                                                                     * 00102200
*                                                                     * 00102300
*                      [PARITY=xparity|00110000]                    * 00102400
*                          is the name (RS-type), or address in       * 00102500
*                          register (2)-(12), of an optional 8 bit    * 00102600
*                          input field that contains the parity bits  * 00102700
*                          for the subsystem data being written.  The * 00102800
*                          directory entry parity bits are updated    * 00102900
*                          only when CHANGED=YES is specified and the * 00103000
*                          initial value of the directory entry       * 00103100
*                          parity bits is null (i.e., B'11').         * 00103200
*                          Otherwise permissable parity bit values    * 00103300
*                          are ignored.  When a directory entry is    * 00103400
*                          created the parity bits are initialized to * 00103500
*                          the null value.                            * 00103600
*                                                                     * 00103700
*                          The bits at offsets 2 and 3 are the parity * 00103800
*                          bits.  Bits 0, 1, and 4-7 are ignored.     * 00103900
*                          The possible values for the parity bits    * 00104000
*                          are defined as follows:                    * 00104100
*                                                                     * 00104200
*                                                                     * 00104300
*                          o   00 - parity is zero.                   * 00104400
*                                                                     * 00104500
*                          o   01 - parity is one.                    * 00104600
*                                                                     * 00104700
*                          o   10 - undefined.  (Not allowed.)        * 00104800
*                                                                     * 00104900
*                          o   11 - null.  (The parity is unknown.)   * 00105000
*                                                                     * 00105100
*                                                                     * 00105200
*                                                                     * 00105300
*                          DEFAULT: 00110000                          * 00105400
*                                                                     * 00105500
*                                                                     * 00105600
*                                                                     * 00105700
*                                                                     * 00105800
*                      [USERDATA=xuserdata|NO_USERDATA]]            * 00105900
*                          is the name (RS-type), or address in       * 00106000
*                          register (2)-(12), of an optional 8        * 00106100
*                          character input field that contains user   * 00106200
*                          defined information to be recorded in the  * 00106300
*                          directory entry for NAME.                  * 00106400
*                                                                     * 00106500
*                          If there was previously no cached          * 00106600
*                          subsystem data for NAME or the data was    * 00106700
*                          cached as unchanged then the directory     * 00106800
*                          entry is updated to reflect any specified  * 00106900
*                          USERDATA.  Otherwise USERDATA is ignored.  * 00107000
*                                                                     * 00107100
*                          DEFAULT: NO_USERDATA                       * 00107200
*                                                                     * 00107300
*                                                                     * 00107400
*                                                                     * 00107500
*                                                                     * 00107600
*                                                                     * 00107700
*                                                                     * 00107800
*                                                                     * 00107900
*                                                                     * 00108000
*              ELEMNUM=xelemnum                                       * 00108100
*                  is the name (RS-type), or address in register      * 00108200
*                  (2)-(12), of a required byte input specifying the  * 00108300
*                  number of elements in the entry data of a cache    * 00108400
*                  entry being written.                               * 00108500
*                                                                     * 00108600
*                  If the cache entry already exists and the number   * 00108700
*                  of elements specified by ELEMNUM is greater than   * 00108800
*                  the number of elements currently in the entry then * 00108900
*                  the entry will be expanded to the new size.        * 00109000
*                  Similarly, if the cache entry already exists and   * 00109100
*                  the number of elements specified by ELEMNUM is     * 00109200
*                  less than the number of elements currently in the  * 00109300
*                  entry then the entry will be contracted to the new * 00109400
*                  size.                                              * 00109500
*                                                                     * 00109600
*                  For structures allocated in CFLEVEL=0 coupling     * 00109700
*                  facilities ELEMNUM values must be in the range of  * 00109800
*                  1 to 16.  For structures allocated in coupling     * 00109900
*                  facilities with a CFLEVEL between 1 and 3          * 00110000
*                  inclusive ELEMNUM values must be in the range of 1 * 00110100
*                  to 255.  For structures allocated in coupling      * 00110200
*                  facilities with a CFLEVEL=4 or higher ELEMNUM      * 00110300
*                  values must be in the range of 0 to 255 where 0 is * 00110400
*                  only valid when CHANGED=NO.  ELEMNUM must also be  * 00110500
*                  less than or equal to the value returned in the    * 00110600
*                  connect answer area CONACACHEMAXELEMNUM field from * 00110700
*                  the IXLCONN invocation.                            * 00110800
*                                                                     * 00110900
*                                                                     * 00111000
*                                                                     * 00111100
*          REQUEST=REG_NAMELIST                                       * 00111200
*              requests that user interest be registered in a given   * 00111300
*              set of 1 to 32 entries for the connection specified by * 00111400
*              CONTOKEN.  The set of entries is specified via         * 00111500
*              registration blocks in the BUFFER storage area.        * 00111600
*              STARTINDEX  and ENDINDEX determine the set of          * 00111700
*              registration blocks provided by the user in the BUFFER * 00111800
*              that will be processed by the command.  The            * 00111900
*              registration blocks in the BUFFER are numbered         * 00112000
*              starting with 1. Valid STARTINDEX and ENDINDEX values  * 00112100
*              are 1-origin.                                          * 00112200
*                                                                     * 00112300
*              The REG_NAMELIST request type is valid only for a      * 00112400
*              structure allocated in a CFLEVEL=2 or higher coupling  * 00112500
*              facility.                                              * 00112600
*                                                                     * 00112700
*              The name of the entry and the local cache vector index * 00112800
*              to be used for the entry must be specified in the      * 00112900
*              corresponding registration block.  If connection       * 00113000
*              interest is already registered for the named entry,    * 00113100
*              then the specified local cache vector index replaces   * 00113200
*              any previously specified local cache vector index for  * 00113300
*              the connection and entry, and the old local cache      * 00113400
*              vector index for the entry, which was invalidated, is  * 00113500
*              returned in the NSBAREA.                               * 00113600
*                                                                     * 00113700
*              Storage class is a required input in a registration    * 00113800
*              block.  The entry is assigned to the storage class     * 00113900
*              specified in the corresponding registration block,     * 00114000
*              superceding any previously specified storage class for * 00114100
*              that entry.                                            * 00114200
*                                                                     * 00114300
*              If both name and old name are specified in the         * 00114400
*              corresponding registration block,  the name and old    * 00114500
*              name are not equal, and the name replacement control   * 00114600
*              indicator is set, any registered interest for the      * 00114700
*              specified local cache vector index for the entry       * 00114800
*              designated by the old name will be deregistered prior  * 00114900
*              to registering interest for the named entry.           * 00115000
*                                                                     * 00115100
*              If the assignment control indicator in the             * 00115200
*              registration block is set, a directory entry will be   * 00115300
*              assigned for the named entry if one does not currently * 00115400
*              exist.  If the assignment control indicator is not     * 00115500
*              set, no directory entry will be assigned if one does   * 00115600
*              not currently exist.                                   * 00115700
*                                                                     * 00115800
*              Each registration block in the input array of          * 00115900
*              registration blocks has a one-to-one correspondence    * 00116000
*              with a name-state block and an invalidated local cache * 00116100
*              vector index that is returned in the NSBAREA.  The     * 00116200
*              name-state blocks are returned in an array, as are the * 00116300
*              invalidated local cache vector indices.  The same      * 00116400
*              index is used to access corresponding elements in both * 00116500
*              arrays, as well as in the array of registration blocks * 00116600
*              provided as input.                                     * 00116700
*                                                                     * 00116800
*              For each registration block that was processed, the    * 00116900
*              name-state block returned will contain the changed     * 00117000
*              indicator, data-cached indicator, parity, castout lock * 00117100
*              state, invalidated local cache vector index indicator, * 00117200
*              registration-performed indicator, and for structures   * 00117300
*              allocated in coupling facilities with a CFLEVEL=4 or   * 00117400
*              higher the number of data elements.  If a valid local  * 00117500
*              cache vector index is replaced, the value of the       * 00117600
*              invalidated local cache vector index is returned in    * 00117700
*              the NSBAREA and the invalidated local cache vector     * 00117800
*              index indicator is set to one.                         * 00117900
*                                                                     * 00118000
*              When the assignment control indicator is off and the   * 00118100
*              entry name specified is not in the directory, the      * 00118200
*              name-state block returned is set to zero.              * 00118300
*                                                                     * 00118400
*              When the assignment control indicator is on and a      * 00118500
*              request fails due to the inability to obtain structure * 00118600
*              resources (e.g. directory entry), the registration     * 00118700
*              index returned in the ANSAREA indicates the            * 00118800
*              registration block for which the request failed.  All  * 00118900
*              prior registration blocks were processed.  The target  * 00119000
*              storage class number returned in the answer area       * 00119100
*              indicates the storage class from which resources could * 00119200
*              not be reclaimed.                                      * 00119300
*                                                                     * 00119400
*              When a model-dependent timeout occurs prior to         * 00119500
*              completing the processing of the requested             * 00119600
*              registration blocks, the registration index returned   * 00119700
*              in the ANSAREA contains the index of the first         * 00119800
*              unprocessed registration block.  All prior             * 00119900
*              registration blocks were processed.  To continue       * 00120000
*              processing the desired registration blocks, invoke the * 00120100
*              REG_NAMELIST command specifying the registration index * 00120200
*              returned in the ANSAREA as the STARTINDEX.             * 00120300
*                                                                     * 00120400
*              When an invalid storage class is specified in an input * 00120500
*              registration block, the index of the registration      * 00120600
*              block containing the invalid storage class is returned * 00120700
*              in the answer area.  All prior registration blocks     * 00120800
*              were processed.                                        * 00120900
*                                                                     * 00121000
*              When an invalid local cache vector index is specified  * 00121100
*              in an input registration block, the index of the       * 00121200
*              registration block containing the invalid local cache  * 00121300
*              vector index is returned in the answer area.  None of  * 00121400
*              the specified registration blocks were processed       * 00121500
*              (processing of the entire command was suppressed).     * 00121600
*                                                                     * 00121700
*              Required keywords are STARTINDEX, ENDINDEX, BUFFER,    * 00121800
*              NSBAREA, and CONTOKEN.                                 * 00121900
*                                                                     * 00122000
*                                                                     * 00122100
*              STARTINDEX=xstartindex                                 * 00122200
*                  is the name (RS-type), or address in register      * 00122300
*                  (2)-(12), of a required halfword input field that  * 00122400
*                  contains the index into the registration blocks in * 00122500
*                  the BUFFER storage area of the first registration  * 00122600
*                  block to be processed.  Note that the REG_NAMELIST * 00122700
*                  command will treat the first registration block in * 00122800
*                  the input array as index 1.                        * 00122900
*                                                                     * 00123000
*                                                                     * 00123100
*                                                                     * 00123200
*                                                                     * 00123300
*              ENDINDEX=xendindex                                     * 00123400
*                  is the name (RS-type), or address in register      * 00123500
*                  (2)-(12), of a required halfword input field that  * 00123600
*                  contains the index into the registration blocks in * 00123700
*                  the BUFFER storage area of the last registration   * 00123800
*                  block to be processed.  The specified index must   * 00123900
*                  be greater than or equal to the value specified    * 00124000
*                  for STARTINDEX, but less than or equal to 32.  The * 00124100
*                  specified index must not imply a larger buffer     * 00124200
*                  size than the user has actually provided.          * 00124300
*                                                                     * 00124400
*                                                                     * 00124500
*                                                                     * 00124600
*                                                                     * 00124700
*              NSBAREA=xnsbarea                                       * 00124800
*                  is a required output.  It is the name (RS-type),   * 00124900
*                  or address in register (2)-(12), of a 256-byte     * 00125000
*                  virtual storage area, called the NSB area, in      * 00125100
*                  which the name state block array and the array of  * 00125200
*                  invalidated local cache vector indices will be     * 00125300
*                  placed.  The format of the NSB area is described   * 00125400
*                  by the IXLYNSB mapping macro.                      * 00125500
*                                                                     * 00125600
*                                                                     * 00125700
*                                                                     * 00125800
*          REQUEST=CASTOUT_DATA                                       * 00125900
*              requests that the cast-out lock for the entry          * 00126000
*              specified by NAME be obtained on behalf of the         * 00126100
*              connection specified by CONTOKEN and the process       * 00126200
*              specified by PROCESSID, and that the directory entry   * 00126300
*              change bit be updated to indicate the entry contains   * 00126400
*              unchanged subsystem data.  The entry data is still     * 00126500
*              considered changed while the cast-out lock is held.    * 00126600
*              Furthermore, the subsystem data is retrieved from the  * 00126700
*              structure and placed in the storage locations          * 00126800
*              specified by BUFFER or BUFLIST and ADJAREA.            * 00126900
*                                                                     * 00127000
*              If the request completes successfully the parity bits  * 00127100
*              from the directory entry are returned in the answer    * 00127200
*              area specified by ANSAREA.  When BUFFER or BUFLIST is  * 00127300
*              specified the count of elements in the retrieved entry * 00127400
*              is also returned in the answer area.  When REGUSER=YES * 00127500
*              was specified and the request replaced a previously    * 00127600
*              specified local cache vector index for the entry the   * 00127700
*              replaced index is returned in the answer area.  If the * 00127800
*              cast-out lock cannot be obtained because another       * 00127900
*              connection or process currently holds it, the current  * 00128000
*              value of the castout lock is returned in the answer    * 00128100
*              area.                                                  * 00128200
*                                                                     * 00128300
*              Required keywords are NAME, one of BUFFER or BUFLIST,  * 00128400
*              and CONTOKEN.                                          * 00128500
*                                                                     * 00128600
*                                                                     * 00128700
*              [REGUSER=NO|YES]                                     * 00128800
*                  is an optional keyword input that specifies        * 00128900
*                  whether or not the request should additionally     * 00129000
*                  register connection interest in the entry.         * 00129100
*                                                                     * 00129200
*                  DEFAULT: NO                                        * 00129300
*                                                                     * 00129400
*                                                                     * 00129500
*                  REGUSER=NO                                         * 00129600
*                      indicates that CASTOUT_DATA will not register  * 00129700
*                      connection interest.                           * 00129800
*                                                                     * 00129900
*                      For structures allocated in CFLEVEL=5 or       * 00130000
*                      higher coupling facilities, OLDNAME may be     * 00130100
*                      specified to deregister any outstanding        * 00130200
*                      interest for the specified local cache index   * 00130300
*                      for a different entry.  If OLDNAME is          * 00130400
*                      specified then VECTORINDEX is required.        * 00130500
*                                                                     * 00130600
*                                                                     * 00130700
*                  REGUSER=YES                                        * 00130800
*                      indicates that connection interest will be     * 00130900
*                      registered for the connection specified by     * 00131000
*                      CONTOKEN.  If interest is already registered   * 00131100
*                      then the local cache vector index specified by * 00131200
*                      VECTORINDEX replaces any previously specified  * 00131300
*                      local cache vector index for CONTOKEN for the  * 00131400
*                      entry.                                         * 00131500
*                                                                     * 00131600
*                      OLDNAME should be specified to deregister any  * 00131700
*                      outstanding interest for the specified local   * 00131800
*                      cache index for a different entry.             * 00131900
*                                                                     * 00132000
*                      VECTORINDEX is a required keyword for this     * 00132100
*                      option.                                        * 00132200
*                                                                     * 00132300
*                                                                     * 00132400
*                                                                     * 00132500
*                                                                     * 00132600
*                                                                     * 00132700
*                                                                     * 00132800
*              [PROCESSID=xprocessid|NO_PROCESSID]                  * 00132900
*                  is the name (RS-type), or address in register      * 00133000
*                  (2)-(12), of an optional byte input field that     * 00133100
*                  contains a user defined process identifier to be   * 00133200
*                  placed in the cast-out lock along with the         * 00133300
*                  connection identifier.                             * 00133400
*                                                                     * 00133500
*                  DEFAULT: NO_PROCESSID                              * 00133600
*                                                                     * 00133700
*                                                                     * 00133800
*                                                                     * 00133900
*          REQUEST=UNLOCK_CASTOUT                                     * 00134000
*              requests that the cast-out locks for the entries       * 00134100
*              specified by a list of names be reset to the not-held  * 00134200
*              state if the lock is currently held for the connection * 00134300
*              specified by CONTOKEN, and optionally by PROCESSID,    * 00134400
*              and that whenever the cast-out lock is reset the       * 00134500
*              directory entry user data and parity bits be updated   * 00134600
*              according to information corresponding to the name in  * 00134700
*              the list.                                              * 00134800
*                                                                     * 00134900
*              If the structure is allocated in a CFLEVEL=4 or higher * 00135000
*              coupling facility, an UNLOCK_CO_NAME request should be * 00135100
*              used to reset the lock for a single entry. Although    * 00135200
*              UNLOCK_CASTOUT can be used for this purpose,           * 00135300
*              UNLOCK_CO_NAME is more efficient.                      * 00135400
*                                                                     * 00135500
*              For UNLOCK_CASTOUT the list of names and corresponding * 00135600
*              information are formed into elements in the storage    * 00135700
*              area specified by BUFFER or the buffers specified by   * 00135800
*              BUFLIST.  Refer to the IXLYCUNB mapping macro for the  * 00135900
*              format of these name elements.                         * 00136000
*                                                                     * 00136100
*              Normal UNLOCK_CASTOUT processing will also perform the * 00136200
*              following for entries for which the cast-out lock is   * 00136300
*              reset:                                                 * 00136400
*                                                                     * 00136500
*                                                                     * 00136600
*              o   If the data entry contains unchanged cached        * 00136700
*                  subsystem data, then the entry is disassociated    * 00136800
*                  from any previously specified cast-out class.      * 00136900
*                                                                     * 00137000
*              o   If the data entry contains changed cached          * 00137100
*                  subsystem data, then the entry is left associated  * 00137200
*                  with the last specified cast-out class.  This may  * 00137300
*                  occur due to write activity of changed data while  * 00137400
*                  the cast-out lock is held.                         * 00137500
*                                                                     * 00137600
*                                                                     * 00137700
*                                                                     * 00137800
*              A name element in the list may, however, specify that  * 00137900
*              the cached data is to be overindicated as being        * 00138000
*              changed, regardless of its current actual state, hence * 00138100
*              leaving it assigned to the last specified cast-out     * 00138200
*              class.                                                 * 00138300
*                                                                     * 00138400
*              The names in the list are processed sequentially,      * 00138500
*              beginning with FIRSTNAME and proceeding through        * 00138600
*              LASTNAME.  If any name fails to identify an existing   * 00138700
*              structure entry then processing halts with no names    * 00138800
*              processed beyond the offending name, and the index for * 00138900
*              this name is returned in the answer area specified by  * 00139000
*              ANSAREA.  If UNLOCK_CASTOUT processing encounters any  * 00139100
*              structure entry for which the cast-out lock is not     * 00139200
*              held by the connection specified by CONTOKEN, then     * 00139300
*              processing halts with no names processed beyond the    * 00139400
*              offending name, and the index for this name and the    * 00139500
*              value of the associated directory entry cast-out lock  * 00139600
*              are returned in the answer area.                       * 00139700
*                                                                     * 00139800
*              Required keywords are one of BUFFER or BUFLIST,        * 00139900
*              FIRSTNAME, LASTNAME, and CONTOKEN                      * 00140000
*                                                                     * 00140100
*              An UNLOCK_CASTOUT request may complete prematurely if  * 00140200
*              coupling facility model dependent time out criteria is * 00140300
*              exceeded.  In this event indicative return and reason  * 00140400
*              codes are provided and the index of the first          * 00140500
*              unprocessed name is returned in ANSAREA.  The request  * 00140600
*              may subsequently be re-issued for the sublist of       * 00140700
*              remaining unprocessed name elements by specifying the  * 00140800
*              index returned in the answer area on keyword           * 00140900
*              FIRSTNAME.                                             * 00141000
*                                                                     * 00141100
*              Re-issued requests are processed identically to and    * 00141200
*              must meet the same interface requirements as original  * 00141300
*              requests.  A re-issued request may in turn experience  * 00141400
*              premature completion.                                  * 00141500
*                                                                     * 00141600
*                                                                     * 00141700
*              FIRSTNAME=xfirstname                                   * 00141800
*                  is the name (RS-type), or address in register      * 00141900
*                  (2)-(12), of a required halfword input field that  * 00142000
*                  contains the index into the list of name elements  * 00142100
*                  in the BUFFER storage area or the BUFLIST buffers  * 00142200
*                  of the first name element to be processed.         * 00142300
*                                                                     * 00142400
*                                                                     * 00142500
*                                                                     * 00142600
*                                                                     * 00142700
*              LASTNAME=xlastname                                     * 00142800
*                  is the name (RS-type), or address in register      * 00142900
*                  (2)-(12), of a required halfword input field that  * 00143000
*                  contains the index into the list of name elements  * 00143100
*                  in the BUFFER storage area or the BUFLIST buffers  * 00143200
*                  of the last name element to be processed.  The     * 00143300
*                  specified index must be greater than or equal to   * 00143400
*                  the value specified for FIRSTNAME.                 * 00143500
*                                                                     * 00143600
*                                                                     * 00143700
*                                                                     * 00143800
*                                                                     * 00143900
*              [PROCESSID=xprocessid|NO_PROCESSID]                  * 00144000
*                  is the name (RS-type), or address in register      * 00144100
*                  (2)-(12), of an optional byte input field that     * 00144200
*                  contains a user defined process identifier to be   * 00144300
*                  compared to the process identifier in the castout  * 00144400
*                  lock value.  If the process identifier does not    * 00144500
*                  match then the castout lock will not be released.  * 00144600
*                                                                     * 00144700
*                  DEFAULT: NO_PROCESSID                              * 00144800
*                                                                     * 00144900
*                                                                     * 00145000
*                                                                     * 00145100
*          REQUEST=UNLOCK_CO_NAME                                     * 00145200
*              requests that the cast-out lock for a single entry be  * 00145300
*              reset to the not-held state if the lock is currently   * 00145400
*              held for the connection specified by CONTOKEN, and     * 00145500
*              optionally by PROCESSID, and that whenever the         * 00145600
*              cast-out lock is reset the directory entry user data   * 00145700
*              and parity bits be updated according to information    * 00145800
*              provided.  The UNLOCK_CO_NAME request type is valid    * 00145900
*              only for a structure allocated in a CFLEVEL=4 or       * 00146000
*              higher coupling facility.                              * 00146100
*                                                                     * 00146200
*              To reset multiple locks with a single request use the  * 00146300
*              UNLOCK_CASTOUT request.                                * 00146400
*                                                                     * 00146500
*              The name and other data is provided in the CUNBAREA.   * 00146600
*              Refer to the IXLYCUNB mapping macro for the format of  * 00146700
*              this data.                                             * 00146800
*                                                                     * 00146900
*              Normal UNLOCK_CO_NAME processing will also perform the * 00147000
*              following if the cast-out lock is reset:               * 00147100
*                                                                     * 00147200
*                                                                     * 00147300
*              o   If the data entry contains unchanged cached        * 00147400
*                  subsystem data, then the entry is disassociated    * 00147500
*                  from any previously specified cast-out class.      * 00147600
*                                                                     * 00147700
*              o   If the data entry contains changed cached          * 00147800
*                  subsystem data, then the entry is left associated  * 00147900
*                  with the last specified cast-out class.  This may  * 00148000
*                  occur due to write activity of changed data while  * 00148100
*                  the cast-out lock is held.                         * 00148200
*                                                                     * 00148300
*                                                                     * 00148400
*                                                                     * 00148500
*              The CUNBAREA may, however, specify that the cached     * 00148600
*              data is to be overindicated as being changed,          * 00148700
*              regardless of its current actual state, hence leaving  * 00148800
*              it assigned to the last specified cast-out class.      * 00148900
*                                                                     * 00149000
*              Required keywords are CONTOKEN and CUNBAREA.           * 00149100
*                                                                     * 00149200
*                                                                     * 00149300
*              CUNBAREA=xcunbarea                                     * 00149400
*                  is the name (RS-type), or address in register      * 00149500
*                  (2)-(12), of a required 32 character input field   * 00149600
*                  consisting of a structure entry name followed by   * 00149700
*                  request control information.  A mapping of the     * 00149800
*                  CUNBAREA for UNLOCK_CO_NAME requests is specified  * 00149900
*                  by the IXLYCUNB mapping macro.                     * 00150000
*                                                                     * 00150100
*                  CUNBAREA is required by UNLOCK_CO_NAME requests.   * 00150200
*                  It is mutually exclusive with all other request    * 00150300
*                  types.                                             * 00150400
*                                                                     * 00150500
*                                                                     * 00150600
*                                                                     * 00150700
*                                                                     * 00150800
*              [PROCESSID=xprocessid|NO_PROCESSID]                  * 00150900
*                  is the name (RS-type), or address in register      * 00151000
*                  (2)-(12), of an optional byte input field that     * 00151100
*                  contains a user defined process identifier to be   * 00151200
*                  compared to the process identifier in the castout  * 00151300
*                  lock value.  If the process identifier does not    * 00151400
*                  match then the castout lock will not be released.  * 00151500
*                                                                     * 00151600
*                  DEFAULT: NO_PROCESSID                              * 00151700
*                                                                     * 00151800
*                                                                     * 00151900
*                                                                     * 00152000
*          REQUEST=CROSS_INVAL                                        * 00152100
*              requests that a cross-invalidation operation be        * 00152200
*              performed against all entries specified by NAME and    * 00152300
*              NAMEMASK.  The result of this operation is that with   * 00152400
*              the exception of the connection specified by CONTOKEN, * 00152500
*              all connections with registered interest in the entry  * 00152600
*              have interest deregistered and a cross-invalidate      * 00152700
*              performed against their local caches.                  * 00152800
*                                                                     * 00152900
*              NAME and CONTOKEN are required keywords for            * 00153000
*              CROSS_INVAL requests.                                  * 00153100
*                                                                     * 00153200
*              A CROSS_INVAL request may complete prematurely if      * 00153300
*              coupling facility model dependent time out criteria is * 00153400
*              exceeded.  In this event indicative return and reason  * 00153500
*              codes are provided and a restart token or an extended  * 00153600
*              restart token is returned in the answer area specified * 00153700
*              by ANSAREA.  This restart token may be used to resume  * 00153800
*              such requests with the appropriate structure entry.    * 00153900
*                                                                     * 00154000
*              Except for the fact that the starting point is         * 00154100
*              specified by the RESTOKEN or EXTRESTOKEN keyword,      * 00154200
*              resumed requests are processed identically to and must * 00154300
*              meet all the same interface requirements as            * 00154400
*              non-resumed requests.  A resumed request may in turn   * 00154500
*              experience premature completion.                       * 00154600
*                                                                     * 00154700
*          REQUEST=DELETE_NAME                                        * 00154800
*              requests that association with the entries specified   * 00154900
*              by NAME and NAMEMASK be deleted from the structure.    * 00155000
*                                                                     * 00155100
*              For structures allocated in CFLEVEL=4 or lower         * 00155200
*              coupling facilities, for each applicable structure     * 00155300
*              entry, the name is invalidated and removed from        * 00155400
*              storage and cast-out classes, and all directory and    * 00155500
*              data entry resources for the entry are released for    * 00155600
*              reuse by the structure.  Furthermore, all connections  * 00155700
*              with registered interest in the entry have interest    * 00155800
*              deregistered and a cross-invalidate performed against  * 00155900
*              their local caches.                                    * 00156000
*                                                                     * 00156100
*              For structures allocated in CFLEVEL=5 or higher        * 00156200
*              coupling facilities, for each applicable structure     * 00156300
*              entry, the DELETETYPE keyword indicates what will be   * 00156400
*              deleted.                                               * 00156500
*                                                                     * 00156600
*              Required keywords are NAME and CONTOKEN.               * 00156700
*                                                                     * 00156800
*              A DELETE_NAME request may complete prematurely if      * 00156900
*              coupling facility model dependent time out criteria is * 00157000
*              exceeded.  In this event indicative return and reason  * 00157100
*              codes are provided and a restart token or an extended  * 00157200
*              restart token is returned in the answer area specified * 00157300
*              by ANSAREA.  This restart token may be used to resume  * 00157400
*              such requests with the appropriate structure entry.    * 00157500
*                                                                     * 00157600
*              Except for the fact that the starting point is         * 00157700
*              specified by the RESTOKEN or EXTRESTOKEN keyword,      * 00157800
*              resumed requests are processed identically to and must * 00157900
*              meet all the same interface requirements as            * 00158000
*              non-resumed requests.  A resumed request may in turn   * 00158100
*              experience premature completion.                       * 00158200
*                                                                     * 00158300
*                                                                     * 00158400
*              [DELETETYPE=DIRANDDATA|UNCHDATA|CHDATA|ANYDATA]      * 00158500
*                  is an optional keyword input that specifies the    * 00158600
*                  type of delete which is being requested.           * 00158700
*                                                                     * 00158800
*                  DELETETYPE is only meaningful for structures       * 00158900
*                  allocated in CFLEVEL=5 or higher coupling          * 00159000
*                  facilities.                                        * 00159100
*                                                                     * 00159200
*                  DEFAULT: DIRANDDATA                                * 00159300
*                                                                     * 00159400
*                                                                     * 00159500
*                  [DELETETYPE=DIRANDDATA]                            * 00159600
*                      For each applicable structure entry, the name  * 00159700
*                      is invalidated and removed from storage and    * 00159800
*                      cast-out classes, and all directory and data   * 00159900
*                      entry resources for the entry are released for * 00160000
*                      reuse by the structure.  Furthermore, all      * 00160100
*                      connections with registered interest in the    * 00160200
*                      entry have interest deregistered and a         * 00160300
*                      cross-invalidate performed against their local * 00160400
*                      caches.                                        * 00160500
*                                                                     * 00160600
*                                                                     * 00160700
*                  [DELETETYPE=UNCHDATA]                              * 00160800
*                      For each applicable structure entry, if the    * 00160900
*                      data is unchanged, the data entry resources    * 00161000
*                      are released for reuse by the structure.  The  * 00161100
*                      directory entry is not deleted and no          * 00161200
*                      cross-invalidate is performed.                 * 00161300
*                                                                     * 00161400
*                                                                     * 00161500
*                  [DELETETYPE=CHDATA]                                * 00161600
*                      For each applicable structure entry, if the    * 00161700
*                      data is changed, the data entry resources for  * 00161800
*                      the entry are released for reuse by the        * 00161900
*                      structure, the change bit, castout lock, and   * 00162000
*                      castout lock state are set to zero and the     * 00162100
*                      directory entry is removed from the castout    * 00162200
*                      class.  The directory entry is not deleted and * 00162300
*                      no cross-invalidate is performed.              * 00162400
*                                                                     * 00162500
*                                                                     * 00162600
*                  [DELETETYPE=ANYDATA]                               * 00162700
*                      For each applicable structure entry, whether   * 00162800
*                      the data is changed or unchanged, the data     * 00162900
*                      entry resources for the entry are released for * 00163000
*                      reuse by the structure.  If the data is        * 00163100
*                      changed the change bit, castout lock, and      * 00163200
*                      castout lock state are set to zero and the     * 00163300
*                      directory entry is removed from the castout    * 00163400
*                      class.  The directory entry is not deleted and * 00163500
*                      no cross-invalidate is performed.              * 00163600
*                                                                     * 00163700
*                                                                     * 00163800
*                                                                     * 00163900
*                                                                     * 00164000
*                                                                     * 00164100
*                                                                     * 00164200
*              [VERSCOMP=xverscomp|NO_VERSCOMP                      * 00164300
*                  is the name (RS-type), or address in register      * 00164400
*                  (2)-(12), of an optional 8 character input which   * 00164500
*                  specifies a value to be compared to the version    * 00164600
*                  number of each applicable structure entry.         * 00164700
*                                                                     * 00164800
*                  VERSCOMP is only meaningful for structures         * 00164900
*                  allocated in CFLEVEL=5 or higher coupling          * 00165000
*                  facilities.                                        * 00165100
*                                                                     * 00165200
*                  If the comparison is not successful then the entry * 00165300
*                  is not processed.                                  * 00165400
*                  DEFAULT: NO_VERSCOMP                               * 00165500
*                                                                     * 00165600
*                                                                     * 00165700
*                  [VERSCOMPTYPE=EQUAL|LESSOREQUAL]]                * 00165800
*                      is an optional keyword input which specifies   * 00165900
*                      how the structure entry version number         * 00166000
*                      comparison is to be performed.                 * 00166100
*                                                                     * 00166200
*                      VERSCOMPTYPE may only be specified when        * 00166300
*                      VERSCOMP is also specified.                    * 00166400
*                                                                     * 00166500
*                      VERSCOMPTYPE is only meaningful for structures * 00166600
*                      allocated in CFLEVEL=5 or higher coupling      * 00166700
*                      facilities.                                    * 00166800
*                                                                     * 00166900
*                      DEFAULT: EQUAL                                 * 00167000
*                                                                     * 00167100
*                                                                     * 00167200
*                      VERSCOMPTYPE=EQUAL                             * 00167300
*                          The version number for the structure entry * 00167400
*                          must be equal to the value specified for   * 00167500
*                          VERSCOMP.                                  * 00167600
*                                                                     * 00167700
*                                                                     * 00167800
*                      VERSCOMPTYPE=LESSOREQUAL                       * 00167900
*                          The version number for the structure entry * 00168000
*                          must be less than or equal to the value    * 00168100
*                          specified for VERSCOMP.                    * 00168200
*                                                                     * 00168300
*                                                                     * 00168400
*                                                                     * 00168500
*                                                                     * 00168600
*                                                                     * 00168700
*                                                                     * 00168800
*                                                                     * 00168900
*          REQUEST=DELETE_NAMELIST                                    * 00169000
*              requests that association with a specified set of      * 00169100
*              applicable entries be deleted from the structure.      * 00169200
*                                                                     * 00169300
*              DELETE_NAMELIST is only meaningful for structures      * 00169400
*              allocated in CFLEVEL=5 or higher coupling facilities.  * 00169500
*                                                                     * 00169600
*              The set of entries is specified via name elements in   * 00169700
*              the BUFFER storage area or the buffers specified by    * 00169800
*              BUFLIST.  STARTINDEX  and ENDINDEX determine the set   * 00169900
*              of name elements provided by the user in the BUFFER or * 00170000
*              BUFLIST that will be processed by the command.  The    * 00170100
*              name elements are numbered starting with 1.            * 00170200
*                                                                     * 00170300
*              For each applicable structure entry, the DELETETYPE    * 00170400
*              keyword indicates specifically what will be deleted.   * 00170500
*                                                                     * 00170600
*              The list of names and corresponding information are    * 00170700
*              formed into elements in the storage area specified by  * 00170800
*              BUFFER or the buffers specified by BUFLIST.  Refer to  * 00170900
*              the IXLYDNNB mapping macro for the format of these     * 00171000
*              name elements.                                         * 00171100
*                                                                     * 00171200
*              The names in the list are processed sequentially,      * 00171300
*              beginning with STARTINDEX and proceeding through       * 00171400
*              ENDINDEX.  If any name fails to identify an existing   * 00171500
*              structure entry then processing will either continue   * 00171600
*              or terminate depending on the value specified for the  * 00171700
*              ERRORACTION keyword. If ERRORACTION=TERMINATE then     * 00171800
*              processing stops and the index value of the offending  * 00171900
*              name is returned in the answer area specified by       * 00172000
*              ANSAREA.                                               * 00172100
*                                                                     * 00172200
*              Each name element may optionally contain a comparative * 00172300
*              version number which will be compared with the version * 00172400
*              number associated with the cache structure entry       * 00172500
*              specified by the name in the name element.  The        * 00172600
*              IXLYDNNB mapping macro describes each name element     * 00172700
*              including the name and comparative version number. The * 00172800
*              optional VERSCOMPTYPE keyword is used to define how    * 00172900
*              the comparison is to be performed. If a version        * 00173000
*              comparison mismatch is encountered then processing     * 00173100
*              will either continue or terminate depending on the     * 00173200
*              value specified for the ERRORACTION keyword. If        * 00173300
*              ERRORACTION=TERMINATE then processing stops and the    * 00173400
*              index value of the offending name is returned in the   * 00173500
*              answer area specified by ANSAREA.                      * 00173600
*                                                                     * 00173700
*              Required keywords are one of BUFFER or BUFLIST,        * 00173800
*              STARTINDEX, ENDINDEX, and CONTOKEN                     * 00173900
*                                                                     * 00174000
*              A DELETE_NAMELIST request may complete prematurely if  * 00174100
*              coupling facility model dependent time out criteria is * 00174200
*              exceeded.  In this event indicative return and reason  * 00174300
*              codes are provided and the index of the first          * 00174400
*              unprocessed name is returned in ANSAREA.  The request  * 00174500
*              may subsequently be re-issued for the remaining        * 00174600
*              unprocessed name elements by specifying the index      * 00174700
*              returned in the answer area on keyword STARTINDEX.     * 00174800
*                                                                     * 00174900
*                                                                     * 00175000
*              STARTINDEX=xstartindex                                 * 00175100
*                  is the name (RS-type), or address in register      * 00175200
*                  (2)-(12), of a required halfword input field that  * 00175300
*                  contains the index into the name elements in the   * 00175400
*                  BUFFER storage area or the buffers specified by    * 00175500
*                  BUFLIST of the first name element to be processed. * 00175600
*                  Note that the DELETE_NAMELIST command will treat   * 00175700
*                  the first registration block in the input array as * 00175800
*                  index 1.                                           * 00175900
*                                                                     * 00176000
*                                                                     * 00176100
*                                                                     * 00176200
*                                                                     * 00176300
*              ENDINDEX=xendindex                                     * 00176400
*                  is the name (RS-type), or address in register      * 00176500
*                  (2)-(12), of a required halfword input field that  * 00176600
*                  contains the index into the name elements in the   * 00176700
*                  BUFFER storage area or the buffers specified by    * 00176800
*                  BUFLIST of the last name element to be processed.  * 00176900
*                  The specified index must be greater than or equal  * 00177000
*                  to the value specified for STARTINDEX.  The        * 00177100
*                  specified index must not imply a larger buffer     * 00177200
*                  size than the user has actually provided.          * 00177300
*                                                                     * 00177400
*                                                                     * 00177500
*                                                                     * 00177600
*                                                                     * 00177700
*              [DELETETYPE=DIRANDDATA|UNCHDATA|CHDATA|ANYDATA]      * 00177800
*                  is an optional keyword input that specifies the    * 00177900
*                  type of delete processing which is being           * 00178000
*                  requested.                                         * 00178100
*                                                                     * 00178200
*                  DEFAULT: DIRANDDATA                                * 00178300
*                                                                     * 00178400
*                                                                     * 00178500
*                  [DELETETYPE=DIRANDDATA]                            * 00178600
*                      For each applicable structure entry, the name  * 00178700
*                      is invalidated and removed from storage and    * 00178800
*                      cast-out classes, and all directory and data   * 00178900
*                      entry resources for the entry are released for * 00179000
*                      reuse by the structure.  Furthermore, all      * 00179100
*                      connections with registered interest in the    * 00179200
*                      entry have interest deregistered and a         * 00179300
*                      cross-invalidate performed against their local * 00179400
*                      caches.                                        * 00179500
*                                                                     * 00179600
*                                                                     * 00179700
*                  [DELETETYPE=UNCHDATA]                              * 00179800
*                      For each applicable structure entry, if the    * 00179900
*                      data is unchanged, the data entry resources    * 00180000
*                      for the entry are released for reuse by the    * 00180100
*                      structure.  The directory entry is not deleted * 00180200
*                      and no cross-invalidate is performed.          * 00180300
*                                                                     * 00180400
*                                                                     * 00180500
*                  [DELETETYPE=CHDATA]                                * 00180600
*                      For each applicable structure entry, if the    * 00180700
*                      data is changed, the data entry resources for  * 00180800
*                      the entry are released for reuse by the        * 00180900
*                      structure, the change bit, castout lock, and   * 00181000
*                      castout lock state are set to zero and the     * 00181100
*                      directory entry is removed from the castout    * 00181200
*                      class.  The directory entry is not deleted and * 00181300
*                      no cross-invalidate is performed.              * 00181400
*                                                                     * 00181500
*                                                                     * 00181600
*                  [DELETETYPE=ANYDATA]                               * 00181700
*                      For each applicable structure entry, whether   * 00181800
*                      the data is changed or unchanged, the data     * 00181900
*                      entry resources for the entry are released for * 00182000
*                      reuse by the structure.  If the data is        * 00182100
*                      changed the change bit, castout lock, and      * 00182200
*                      castout lock state are set to zero and the     * 00182300
*                      directory entry is removed from the castout    * 00182400
*                      class.  The directory entry is not deleted and * 00182500
*                      no cross-invalidate is performed.              * 00182600
*                                                                     * 00182700
*                                                                     * 00182800
*                                                                     * 00182900
*                                                                     * 00183000
*                                                                     * 00183100
*                                                                     * 00183200
*              [VERSCOMPTYPE=NONE|EQUAL|LESSOREQUAL]                * 00183300
*                  is an optional keyword input which specifies how   * 00183400
*                  the structure entry version number comparison is   * 00183500
*                  to be performed.                                   * 00183600
*                                                                     * 00183700
*                  DEFAULT: NONE                                      * 00183800
*                                                                     * 00183900
*                                                                     * 00184000
*                  VERSCOMPTYPE=NONE                                  * 00184100
*                      No version number is provided for comparison   * 00184200
*                      so version comparisons are not performed.      * 00184300
*                                                                     * 00184400
*                                                                     * 00184500
*                  VERSCOMPTYPE=EQUAL                                 * 00184600
*                      The version number for the structure entry     * 00184700
*                      must be equal to the value specified for the   * 00184800
*                      corresponding name element as defined in the   * 00184900
*                      IXLYDNNB mapping macro.                        * 00185000
*                                                                     * 00185100
*                                                                     * 00185200
*                  VERSCOMPTYPE=LESSOREQUAL                           * 00185300
*                      The version number for the structure entry     * 00185400
*                      must be less than or equal to the value        * 00185500
*                      specified for the corresponding name element   * 00185600
*                      as defined in the IXLYDNNB mapping macro.      * 00185700
*                                                                     * 00185800
*                                                                     * 00185900
*                                                                     * 00186000
*                                                                     * 00186100
*                                                                     * 00186200
*                                                                     * 00186300
*              [ERRORACTION=CONTINUE|TERMINATE]                     * 00186400
*                  is an optional keyword input which specifies       * 00186500
*                  whether or not processing is to continue with the  * 00186600
*                  next name element if an entry is not found or a    * 00186700
*                  version number mismatch occurs.                    * 00186800
*                                                                     * 00186900
*                  DEFAULT: CONTINUE                                  * 00187000
*                                                                     * 00187100
*                                                                     * 00187200
*                  ERRORACTION=CONTINUE                               * 00187300
*                      If an error is encountered processing will     * 00187400
*                      continue with the next name element.           * 00187500
*                                                                     * 00187600
*                                                                     * 00187700
*                  ERRORACTION=TERMINATE                              * 00187800
*                      If an error is encountered processing will     * 00187900
*                      halt and the index of the offending name       * 00188000
*                      element is returned in the answer area.        * 00188100
*                                                                     * 00188200
*                                                                     * 00188300
*                                                                     * 00188400
*                                                                     * 00188500
*                                                                     * 00188600
*          REQUEST=READ_COCLASS                                       * 00188700
*              requests that directory information be retrieved for a * 00188800
*              specified cast-out class and placed in the storage     * 00188900
*              area specified by BUFFER or the buffers specified by   * 00189000
*              BUFLIST.  The returned information is reported on an   * 00189100
*              individual directory entry basis, and may be limited   * 00189200
*              by using the DIRINFOFMT keyword.                       * 00189300
*                                                                     * 00189400
*              The number of elements returned in the BUFFER area or  * 00189500
*              the BUFLIST buffers is returned in the answer area     * 00189600
*              specified by ANSAREA.  For structures allocated in     * 00189700
*              CFLEVEL=4 or lower coupling facilities refer to the    * 00189800
*              IXLYCANB mapping macro for the format of these         * 00189900
*              elements.  For structures allocated in CFLEVEL=5 or    * 00190000
*              higher coupling facilities refer to the IXLYCANB       * 00190100
*              mapping macro or the IXLYDEIB mapping macro, depending * 00190200
*              on the value specified for the DIRINFOFMT keyword. The * 00190300
*              default value is DIRINFOFMT=NAMELIST which will return * 00190400
*              data in the IXLYCANB format.                           * 00190500
*                                                                     * 00190600
*              A READ_COCLASS request may complete prematurely due to * 00190700
*              exhaustion of the storage area specified by BUFFER or  * 00190800
*              BUFLIST, or if coupling facility model dependent time  * 00190900
*              out criteria is exceeded.  In this event indicative    * 00191000
*              return and reason codes are provided, and the number   * 00191100
*              of name elements and either a restart token or an      * 00191200
*              extended restart token are returned in in ANSAREA.     * 00191300
*              This restart token may be used to resume such requests * 00191400
*              with the appropriate directory entry.                  * 00191500
*                                                                     * 00191600
*              Except for the fact that the starting point is         * 00191700
*              specified by the RESTOKEN or EXTRESTOKEN keyword,      * 00191800
*              resumed requests are processed identically to and must * 00191900
*              meet all the same interface requirements as            * 00192000
*              non-resumed requests.  For example, BUFFER and BUFLIST * 00192100
*              boundary and length requirements are unchanged, and a  * 00192200
*              resumed request may in turn experience premature       * 00192300
*              completion.                                            * 00192400
*                                                                     * 00192500
*              Required keywords are one of BUFFER and BUFLIST,       * 00192600
*              COCLASS, and CONTOKEN.                                 * 00192700
*                                                                     * 00192800
*                                                                     * 00192900
*              [DIRINFOFMT=NAMELIST|DIRENTRYLIST]                   * 00193000
*                  is an optional keyword input that specifies the    * 00193100
*                  amount of information to be returned for each      * 00193200
*                  directory entry.                                   * 00193300
*                                                                     * 00193400
*                  DIRINFOFMT is only meaningful for structures       * 00193500
*                  allocated in CFLEVEL=5 or higher coupling          * 00193600
*                  facilities.                                        * 00193700
*                                                                     * 00193800
*                  DEFAULT: NAMELIST                                  * 00193900
*                                                                     * 00194000
*                                                                     * 00194100
*                  DIRINFOFMT=NAMELIST                                * 00194200
*                      indicates that a subset of the information for * 00194300
*                      each directory be returned.  Information       * 00194400
*                      returned includes:                             * 00194500
*                                                                     * 00194600
*                                                                     * 00194700
*                      o   Name.                                      * 00194800
*                                                                     * 00194900
*                      o   User data.                                 * 00195000
*                                                                     * 00195100
*                      o   The size of the data entry.                * 00195200
*                                                                     * 00195300
*                                                                     * 00195400
*                                                                     * 00195500
*                      Refer to the IXLYCANB mapping macro for the    * 00195600
*                      format of the data returned in the BUFFER area * 00195700
*                      or the BUFLIST buffers.                        * 00195800
*                                                                     * 00195900
*                                                                     * 00196000
*                  DIRINFOFMT=DIRENTRYLIST                            * 00196100
*                      indicates that all information for each        * 00196200
*                      directory be returned.  Information returned   * 00196300
*                      includes:                                      * 00196400
*                                                                     * 00196500
*                                                                     * 00196600
*                      o   Name.                                      * 00196700
*                                                                     * 00196800
*                      o   User data.                                 * 00196900
*                                                                     * 00197000
*                      o   Storage class assigned to.                 * 00197100
*                                                                     * 00197200
*                      o   Indication of whether data is currently    * 00197300
*                          cached.                                    * 00197400
*                                                                     * 00197500
*                      o   Indication of whether data is changed (if  * 00197600
*                          cached).                                   * 00197700
*                                                                     * 00197800
*                      o   Castout class assigned to (if changed).    * 00197900
*                                                                     * 00198000
*                      o   Parity bits.                               * 00198100
*                                                                     * 00198200
*                      o   Value and state of the cast-out lock.      * 00198300
*                                                                     * 00198400
*                      o   Indication of which connected users have   * 00198500
*                          registered interest.                       * 00198600
*                                                                     * 00198700
*                      o   The size of the data entry.                * 00198800
*                                                                     * 00198900
*                      o   The version number.                        * 00199000
*                                                                     * 00199100
*                                                                     * 00199200
*                                                                     * 00199300
*                      Refer to the IXLYDEIB mapping macro for the    * 00199400
*                      format of the data returned in the BUFFER area * 00199500
*                      or the BUFLIST buffers.                        * 00199600
*                                                                     * 00199700
*                                                                     * 00199800
*                                                                     * 00199900
*                                                                     * 00200000
*                                                                     * 00200100
*          REQUEST=READ_DIRINFO                                       * 00200200
*              requests that directory information from the structure * 00200300
*              be retrieved and placed in the storage location        * 00200400
*              specified by BUFFER or the buffers specified by        * 00200500
*              BUFLIST.  The returned information is reported on an   * 00200600
*              individual directory entry basis, and may be limited   * 00200700
*              by using the DIRINFOFMT keyword.                       * 00200800
*                                                                     * 00200900
*              The number of directory entries returned in the BUFFER * 00201000
*              area or the BUFLIST buffers is returned in the answer  * 00201100
*              area specified by ANSAREA.                             * 00201200
*                                                                     * 00201300
*              A READ_DIRINFO request may complete prematurely due to * 00201400
*              exhaustion of the specified output storage area, or if * 00201500
*              coupling facility model dependent time out criteria is * 00201600
*              exceeded.  In this event indicative return and reason  * 00201700
*              codes are provided, and the number of directory        * 00201800
*              entries and either a restart token or an extended      * 00201900
*              restart token are returned in ANSAREA.  This restart   * 00202000
*              token may be used to resume such requests with the     * 00202100
*              appropriate directory entry.                           * 00202200
*                                                                     * 00202300
*              Except for the fact that the starting point is         * 00202400
*              specified by the RESTOKEN or EXTRESTOKEN keyword,      * 00202500
*              resumed requests are processed identically to and must * 00202600
*              meet all the same interface requirements as            * 00202700
*              non-resumed requests.  For example, BUFFER and BUFLIST * 00202800
*              boundary and length requirements are unchanged, and a  * 00202900
*              resumed request may in turn experience premature       * 00203000
*              completion.                                            * 00203100
*                                                                     * 00203200
*              Required keywords are one of BUFFER or BUFLIST, and    * 00203300
*              CONTOKEN.                                              * 00203400
*                                                                     * 00203500
*                                                                     * 00203600
*              [DIRINFOFMT=DIRENTRYLIST|NAMELIST]                   * 00203700
*                  is an optional keyword input that specifies the    * 00203800
*                  amount of information to be returned for each      * 00203900
*                  directory entry.                                   * 00204000
*                                                                     * 00204100
*                  DEFAULT: DIRENTRYLIST                              * 00204200
*                                                                     * 00204300
*                                                                     * 00204400
*                  DIRINFOFMT=DIRENTRYLIST                            * 00204500
*                      indicates that all information for each        * 00204600
*                      directory be returned.  Information returned   * 00204700
*                      includes:                                      * 00204800
*                                                                     * 00204900
*                                                                     * 00205000
*                      o   Name.                                      * 00205100
*                                                                     * 00205200
*                      o   User data.                                 * 00205300
*                                                                     * 00205400
*                      o   Storage class assigned to.                 * 00205500
*                                                                     * 00205600
*                      o   Indication of whether data is currently    * 00205700
*                          cached.                                    * 00205800
*                                                                     * 00205900
*                      o   Indication of whether data is changed (if  * 00206000
*                          cached).                                   * 00206100
*                                                                     * 00206200
*                      o   Castout class assigned to (if changed).    * 00206300
*                                                                     * 00206400
*                      o   Parity bits.                               * 00206500
*                                                                     * 00206600
*                      o   Value and state of the cast-out lock.      * 00206700
*                                                                     * 00206800
*                      o   Indication of which connected users have   * 00206900
*                          registered interest.                       * 00207000
*                                                                     * 00207100
*                      o   The size of the data entry.                * 00207200
*                                                                     * 00207300
*                      o   For structures allocated in CFLEVEL=5 or   * 00207400
*                          higher coupling facilities, the version    * 00207500
*                          number.                                    * 00207600
*                                                                     * 00207700
*                                                                     * 00207800
*                                                                     * 00207900
*                      Refer to the IXLYDEIB mapping macro for the    * 00208000
*                      format of the data returned in the BUFFER area * 00208100
*                      or the BUFLIST buffers.                        * 00208200
*                                                                     * 00208300
*                                                                     * 00208400
*                  DIRINFOFMT=NAMELIST                                * 00208500
*                      indicates that a subset of the information for * 00208600
*                      each directory be returned.  Information       * 00208700
*                      returned includes:                             * 00208800
*                                                                     * 00208900
*                                                                     * 00209000
*                      o   Name.                                      * 00209100
*                                                                     * 00209200
*                      o   User data.                                 * 00209300
*                                                                     * 00209400
*                      o   The size of the data entry.                * 00209500
*                                                                     * 00209600
*                                                                     * 00209700
*                                                                     * 00209800
*                      Refer to the IXLYCANB mapping macro for the    * 00209900
*                      format of the data returned in the BUFFER area * 00210000
*                      or the BUFLIST buffers.                        * 00210100
*                                                                     * 00210200
*                                                                     * 00210300
*                                                                     * 00210400
*                                                                     * 00210500
*                                                                     * 00210600
*                                                                     * 00210700
*              [CRITERIA=ALL|CHANGED]                               * 00210800
*                  is an optional keyword input that specifies the    * 00210900
*                  selection criteria to be used in determining for   * 00211000
*                  which directory entries information should be      * 00211100
*                  retrieved.  Further granularity on selecting       * 00211200
*                  directory entries may be achieved be specifying    * 00211300
*                  the NAME and NAMEMASK keywords.                    * 00211400
*                                                                     * 00211500
*                  DEFAULT: ALL                                       * 00211600
*                                                                     * 00211700
*                                                                     * 00211800
*                  CRITERIA=ALL                                       * 00211900
*                      indicates that information for all allocated   * 00212000
*                      directory entries will be retrieved.           * 00212100
*                                                                     * 00212200
*                                                                     * 00212300
*                  CRITERIA=CHANGED                                   * 00212400
*                      indicates that information for only those      * 00212500
*                      directory entries for changed or locked for    * 00212600
*                      cast-out cached subsystem data will be         * 00212700
*                      retrieved.                                     * 00212800
*                                                                     * 00212900
*                                                                     * 00213000
*                                                                     * 00213100
*                                                                     * 00213200
*                                                                     * 00213300
*          REQUEST=RESET_REFBIT                                       * 00213400
*              requests that the directory entry reference bit be set * 00213500
*              to indicate an unreferenced entry for each entry       * 00213600
*              meeting the specified selection criteria.              * 00213700
*                                                                     * 00213800
*              The total number of processed directory entries and    * 00213900
*              the number of these directory entries for which the    * 00214000
*              reference bit was actually reset is returned in the    * 00214100
*              answer area specified by ANSAREA.                      * 00214200
*                                                                     * 00214300
*              The CONTOKEN keyword is required on RESET_REFBIT       * 00214400
*              requests.                                              * 00214500
*                                                                     * 00214600
*              A RESET REFBIT request may complete prematurely if     * 00214700
*              coupling facility model dependent time out criteria is * 00214800
*              exceeded.  In this event indicative return and reason  * 00214900
*              codes are provided and a restart token or an extended  * 00215000
*              restart token is returned in the answer area specified * 00215100
*              by ANSAREA.  This restart token may be used to resume  * 00215200
*              such requests with the appropriate structure entry.    * 00215300
*                                                                     * 00215400
*              Except for the fact that the starting point is         * 00215500
*              specified by the RESTOKEN or EXTRESTOKEN keyword,      * 00215600
*              resumed requests are processed identically to and must * 00215700
*              meet all the same interface requirements as            * 00215800
*              non-resumed requests.  A resumed request may in turn   * 00215900
*              experience premature completion.                       * 00216000
*                                                                     * 00216100
*                                                                     * 00216200
*              [CRITERIA=ALL|CHANGED]                               * 00216300
*                  is an optional keyword input that specifies the    * 00216400
*                  selection criteria for determining which directory * 00216500
*                  entries RESET_REFBIT will process.  Further        * 00216600
*                  granularity on selecting directory entries may be  * 00216700
*                  achieved be specifying the NAME and NAMEMASK       * 00216800
*                  keywords.                                          * 00216900
*                                                                     * 00217000
*                  DEFAULT: ALL                                       * 00217100
*                                                                     * 00217200
*                                                                     * 00217300
*                  CRITERIA=ALL                                       * 00217400
*                      indicates that RESET_REFBIT processing should  * 00217500
*                      be performed on all allocated directory        * 00217600
*                      entries.                                       * 00217700
*                                                                     * 00217800
*                                                                     * 00217900
*                  CRITERIA=CHANGED                                   * 00218000
*                      indicates that RESET_REFBIT processing should  * 00218100
*                      be performed only on directory entries for     * 00218200
*                      changed or locked for cast-out cached          * 00218300
*                      subsystem data.                                * 00218400
*                                                                     * 00218500
*                                                                     * 00218600
*                                                                     * 00218700
*                                                                     * 00218800
*                                                                     * 00218900
*          REQUEST=READ_COSTATS                                       * 00219000
*              requests that statistical information for the cast-out * 00219100
*              classes in the range beginning with COCLASSB and       * 00219200
*              ending with COCLASSE be retrieved and placed in the    * 00219300
*              storage location specified by BUFFER or the buffers    * 00219400
*              specified by BUFLIST.                                  * 00219500
*                                                                     * 00219600
*              For structures allocated in CFLEVEL=4 or lower         * 00219700
*              coupling facilities, refer to the CCIH and the         * 00219800
*              CCIHCOUNTS mappings in the IXLYCCIH mapping macro for  * 00219900
*              the format of the data returned.  For structures       * 00220000
*              allocated in CFLEVEL=5 or higher coupling facilities,  * 00220100
*              the format of the data returned may be specified by    * 00220200
*              using the COSTATSFMT keyword.                          * 00220300
*                                                                     * 00220400
*              Required keywords are one of BUFFER and BUFLIST,       * 00220500
*              CONTOKEN, COCLASSB, and COCLASSE.                      * 00220600
*                                                                     * 00220700
*                                                                     * 00220800
*              COCLASSB=xcoclassb                                     * 00220900
*                  is the name (RS-type), or address in register      * 00221000
*                  (2)-(12), of a required halfword input field that  * 00221100
*                  contains the first cast-out class in the range of  * 00221200
*                  cast-out classes to be reported.  The specified    * 00221300
*                  value must fall within the range of 1 to the       * 00221400
*                  maximum cast-out class value defined for the       * 00221500
*                  structure, inclusive.                              * 00221600
*                                                                     * 00221700
*                                                                     * 00221800
*                                                                     * 00221900
*                                                                     * 00222000
*              COCLASSE=xcoclasse                                     * 00222100
*                  is the name (RS-type), or address in register      * 00222200
*                  (2)-(12), of a required halfword input field that  * 00222300
*                  contains the last cast-out class in the range of   * 00222400
*                  cast-out classes to be reported on.  The specified * 00222500
*                  value must fall within the range of 1 to the       * 00222600
*                  maximum cast-out class value defined for the       * 00222700
*                  structure, inclusive.                              * 00222800
*                                                                     * 00222900
*                                                                     * 00223000
*                                                                     * 00223100
*                                                                     * 00223200
*              [COSTATSFMT=COCOUNTSLIST|COSTATSLIST]                * 00223300
*                  is an optional keyword input that specifies the    * 00223400
*                  format of the data which is returned for each      * 00223500
*                  castout class.  COSTATSFMT is only meaningful for  * 00223600
*                  structures allocated in CFLEVEL=5 or higher        * 00223700
*                  coupling facilities.                               * 00223800
*                                                                     * 00223900
*                  DEFAULT: COCOUNTSLIST                              * 00224000
*                                                                     * 00224100
*                                                                     * 00224200
*                  COSTATSFMT=COCOUNTSLIST                            * 00224300
*                      indicates that the data returned in the BUFFER * 00224400
*                      area or the BUFLIST buffers will be in the     * 00224500
*                      format defined by the CCIH and CCIHCOUNTS      * 00224600
*                      mappings in the IXLYCCIH mapping macro.        * 00224700
*                                                                     * 00224800
*                                                                     * 00224900
*                  COSTATSFMT=COSTATSLIST                             * 00225000
*                      indicates that the data returned in the BUFFER * 00225100
*                      area or the BUFLIST buffers will be in the     * 00225200
*                      format defined by the CCIH and the CCIHCCIBS   * 00225300
*                      mappings in the IXLYCCIH mapping macro.        * 00225400
*                                                                     * 00225500
*                                                                     * 00225600
*                                                                     * 00225700
*                                                                     * 00225800
*                                                                     * 00225900
*          REQUEST=READ_STGSTATS                                      * 00226000
*              requests that statisical information for the storage   * 00226100
*              class specified by STGCLASS be retrieved and placed in * 00226200
*              the storage location specified by STGSTATS.            * 00226300
*                                                                     * 00226400
*              Required keywords are STGSTATS, STGCLASS, and          * 00226500
*              CONTOKEN.                                              * 00226600
*                                                                     * 00226700
*                                                                     * 00226800
*              STGSTATS=xstgstats                                     * 00226900
*                  is a required input.  It is the name (RS-type), or * 00227000
*                  address in register (2)-(12), of a 256-byte        * 00227100
*                  virtual storage area to contain the statistics     * 00227200
*                  returned from a READ_STGSTATS request for storage  * 00227300
*                  class statistics.                                  * 00227400
*                                                                     * 00227500
*                  Upon completion of the request the resulting       * 00227600
*                  contents of STGSTATS is defined and formatted as   * 00227700
*                  specified by the mapping in macro IXLYCSCS.        * 00227800
*                                                                     * 00227900
*                                                                     * 00228000
*                                                                     * 00228100
*          REQUEST=PROCESS_REFLIST                                    * 00228200
*              requests that the list of entry names in the storage   * 00228300
*              area specified by BUFFER or the buffers specified by   * 00228400
*              BUFLIST, for which interest is registered for the      * 00228500
*              connection specified by CONTOKEN and which are         * 00228600
*              associated with the specified storage class be         * 00228700
*              processed in the structure as having been referenced.  * 00228800
*                                                                     * 00228900
*              Required keywords are one of BUFFER or BUFLIST,        * 00229000
*              NUMNAMES, STGCLASS, and CONTOKEN.                      * 00229100
*                                                                     * 00229200
*                                                                     * 00229300
*              NUMNAMES=xnumnames                                     * 00229400
*                  is the name (RS-type), or address in register      * 00229500
*                  (2)-(12), of a required halfword input field that  * 00229600
*                  contains the number of names in the storage area   * 00229700
*                  specified by BUFFER or the buffers specified by    * 00229800
*                  BUFLIST to be processed.                           * 00229900
*                                                                     * 00230000
*                                                                     * 00230100
*                                                                     * 00230200
*          REQUEST=SET_RECLVCTR                                       * 00230300
*              requests that the reclaiming vector in the storage     * 00230400
*              location specified by RECLVCTR be activated for the    * 00230500
*              storage class specified by STGCLASS.                   * 00230600
*                                                                     * 00230700
*              When an IXLALTER is processed for a cache structure    * 00230800
*              all active reclaim vectors are deactivated.  While the * 00230900
*              structure is in the process of being altered any       * 00231000
*              attempt to activate a reclaim vector will be rejected. * 00231100
*              When the alter process completes the reclaim vectors   * 00231200
*              which were deactivated at the start of the alter are   * 00231300
*              not reinstated automatically.  It is the               * 00231400
*              responsibility of the user to activate new reclaim     * 00231500
*              vectors, if desired.                                   * 00231600
*                                                                     * 00231700
*              Required keywords are CONTOKEN, REPEAT, and STGCLASS.  * 00231800
*                                                                     * 00231900
*                                                                     * 00232000
*              REPEAT=xrepeat                                         * 00232100
*                  is the name (RS-type), or address in register      * 00232200
*                  (2)-(12), of a required halfword input field that  * 00232300
*                  contains the repeat factor for the reclaim vector  * 00232400
*                  being activated.  The specified value must fall    * 00232500
*                  within the range 0 to 65535, inclusive.            * 00232600
*                  Specifying a repeat factor of zero causes any      * 00232700
*                  currently active reclaiming vector for the storage * 00232800
*                  class to be deactivated.                           * 00232900
*                                                                     * 00233000
*                  The repeat factor defines the number of iterations * 00233100
*                  through the vector before the vector naturally     * 00233200
*                  deactivates.                                       * 00233300
*                                                                     * 00233400
*                                                                     * 00233500
*                                                                     * 00233600
*                                                                     * 00233700
*              [RECLVCTR=xreclvctr|NO_RECLVCTR]                     * 00233800
*                  is an optional input.  It is the name (RS-type),   * 00233900
*                  or address in register (2)-(12), of a virtual      * 00234000
*                  storage area containing the reclaiming vector to   * 00234100
*                  be activated.  The storage area must be of a       * 00234200
*                  length two times the number of storage classes     * 00234300
*                  defined for the structure.  RECLVCTR is ignored    * 00234400
*                  when a REPEAT factor of zero is specified,         * 00234500
*                  otherwise it is required.                          * 00234600
*                                                                     * 00234700
*                  Upon invocation of a SET_RECLVCTR request RECLVCTR * 00234800
*                  must, starting at offset 0, contain a fully        * 00234900
*                  initialized array of halfwords, where each         * 00235000
*                  halfword contains the reclaiming count for a       * 00235100
*                  target storage class.  The relative position in    * 00235200
*                  the array of a halfword defines the storage class  * 00235300
*                  associated with that halfword.  Entry values of    * 00235400
*                  zero may be specified to avoid reclaim from a      * 00235500
*                  target storage class.  Reclaim will begin with the * 00235600
*                  target storage class associated with the first     * 00235700
*                  nonzero vector entry.                              * 00235800
*                                                                     * 00235900
*                  DEFAULT: NO_RECLVCTR                               * 00236000
*                                                                     * 00236100
*                                                                     * 00236200
*                                                                     * 00236300
*                                                                     * 00236400
*                                                                     * 00236500
*                                                                     * 00236600
*                                                                     * 00236700
*                                                                     * 00236800
*      CONTOKEN=xcontoken                                             * 00236900
*          is the name (RS-type), or address in register (2)-(12), of * 00237000
*          a required 16 character input field that contains the      * 00237100
*          connection token returned by the IXLCONN service.  The     * 00237200
*          CONTOKEN uniquely identifies the user's connection to the  * 00237300
*          structure.                                                 * 00237400
*                                                                     * 00237500
*                                                                     * 00237600
*                                                                     * 00237700
*                                                                     * 00237800
*      [REQID=xreqid|NO_REQID]                                      * 00237900
*          is the name (RS-type), or address in register (2)-(12), of * 00238000
*          an optional 8 character input that contains a user-defined * 00238100
*          request identifier to be associated with the request.      * 00238200
*                                                                     * 00238300
*          Requests that have not been processed may be cancelled     * 00238400
*          using this request identifier.                             * 00238500
*                                                                     * 00238600
*          DEFAULT: NO_REQID                                          * 00238700
*                                                                     * 00238800
*                                                                     * 00238900
*                                                                     * 00239000
*                                                                     * 00239100
*      [NAME=xname|NO_NAME                                          * 00239200
*          is the name (RS-type), or address in register (2)-(12), of * 00239300
*          an optional 16 character input field that contains the     * 00239400
*          name of the structure entry to be processed, or, if used   * 00239500
*          in conjunction with NAMEMASK, the mask values to be used   * 00239600
*          in selecting names to be processed.                        * 00239700
*                                                                     * 00239800
*          NAME is required for READ_DATA, WRITE_DATA, CASTOUT_DATA,  * 00239900
*          CROSS_INVAL, and DELETE_NAME requests, and may optionally  * 00240000
*          be specified for READ_DIRINFO, READ_COCLASS, and           * 00240100
*          RESET_REFBIT requests.  NAME is mutually exclusive with    * 00240200
*          all other request types.                                   * 00240300
*                                                                     * 00240400
*          DEFAULT: NO_NAME                                           * 00240500
*                                                                     * 00240600
*                                                                     * 00240700
*          [NAMEMASK=xnamemask|1111111111111111]                    * 00240800
*              is the name (RS-type), or address in register          * 00240900
*              (2)-(12), of an optional 16 bit input field that       * 00241000
*              contains the mask pattern definition to be applied to  * 00241100
*              NAME in determining a mask to select entry names to be * 00241200
*              processed.                                             * 00241300
*                                                                     * 00241400
*              NAMEMASK may be optionally specified for READ_DIRINFO, * 00241500
*              READ_COCLASS, RESET_REFBIT, CROSS_INVAL, and           * 00241600
*              DELETE_NAME requests.  It is mutually exclusive with   * 00241700
*              all other request types.                               * 00241800
*                                                                     * 00241900
*              The position of each bit in NAMEMASK corresponds to    * 00242000
*              the same relative character position in NAME.  If a    * 00242100
*              bit is a one then the corresponding position in NAME   * 00242200
*              is applied in the masking operation.  If a bit is a    * 00242300
*              zero then the corresponding position in NAME is not    * 00242400
*              applied.  Specifying a NAMEMASK where all the bits are * 00242500
*              zero causes all names to be selected for processing.   * 00242600
*              Specifying a NAMEMASK where all the bits are one       * 00242700
*              causes exactly one name (as specified by NAME) to be   * 00242800
*              selected.                                              * 00242900
*                                                                     * 00243000
*              DEFAULT: 1111111111111111                              * 00243100
*                                                                     * 00243200
*                                                                     * 00243300
*                                                                     * 00243400
*                                                                     * 00243500
*          [OLDNAME=xoldname|NO_OLDNAME]]                           * 00243600
*              is the name (RS-type), or address in register          * 00243700
*              (2)-(12), of an optional 16 character input field that * 00243800
*              contains the name of the entry for which interest      * 00243900
*              should be deregistered for the connection specified by * 00244000
*              CONTOKEN prior to registering interest in the entry    * 00244100
*              specified by NAME.  Note that,  in order for           * 00244200
*              deregistration to be performed, NAME must be different * 00244300
*              from OLDNAME,  the connection specified by CONTOKEN    * 00244400
*              must have a current registered interest in the entry   * 00244500
*              designated by OLDNAME,  and the vector index of that   * 00244600
*              registration must match the VECTORINDEX that is        * 00244700
*              specified on the current request.  If NAME is equal to * 00244800
*              OLDNAME, the vector index does not match,  or the user * 00244900
*              is not currently registered for the OLDNAME entry, the * 00245000
*              request will be processed but deregistration for the   * 00245100
*              entry designated by OLDNAME will not be performed.     * 00245200
*                                                                     * 00245300
*              For structures allocated in CFLEVEL=5 or higher        * 00245400
*              coupling facilities, interest in the specified entry   * 00245500
*              can be deregistered for the OLDNAME without            * 00245600
*              registering interest in the entry specified by NAME.   * 00245700
*                                                                     * 00245800
*              OLDNAME may optionally be specified on READ_DATA,      * 00245900
*              WRITE_DATA when WHENREG=NO is specified, and           * 00246000
*              CASTOUT_DATA requests.  OLDNAME is mutually exclusive  * 00246100
*              with all other requests.                               * 00246200
*                                                                     * 00246300
*              For READ_DATA requests, interest in OLDNAME is         * 00246400
*              deregistered when the request completes with:          * 00246500
*                                                                     * 00246600
*                                                                     * 00246700
*              o   return code 0 (IxlRetCodeOk)                       * 00246800
*                                                                     * 00246900
*              o   return code 4 (IxlRetCodeWarning)                  * 00247000
*                                                                     * 00247100
*              o   return code 8 (IxlRetCodeParmError) with reason    * 00247200
*                  code xxxx0825 (IxlRsnCodeNoEntry)                  * 00247300
*                                                                     * 00247400
*              o   return code C (IxlRetCodeEnvError) with reason     * 00247500
*                  code xxxx0C17 (IxlRsnCodeStrFull)                  * 00247600
*                                                                     * 00247700
*                                                                     * 00247800
*                                                                     * 00247900
*              For WRITE_DATA requests, interest in OLDNAME is        * 00248000
*              deregistered when the request completes with:          * 00248100
*                                                                     * 00248200
*                                                                     * 00248300
*              o   return code 0 (IxlRetCodeOk)                       * 00248400
*                                                                     * 00248500
*              o   return code 8 (IxlRetCodeParmError) with reason    * 00248600
*                  code xxxx0825 (IxlRsnCodeNoEntry), and ASSIGN=NO   * 00248700
*                  was specified                                      * 00248800
*                                                                     * 00248900
*              o   return code 8 (IxlRetCodeParmError) with reason    * 00249000
*                  code xxxx0826 (IxlRsnCodeIncompatState)            * 00249100
*                                                                     * 00249200
*              o   return code C (IxlRetCodeEnvError) with reason     * 00249300
*                  code xxxx0C17 (IxlRsnCodeStrFull).                 * 00249400
*                                                                     * 00249500
*                                                                     * 00249600
*                                                                     * 00249700
*              For CASTOUT_DATA requests, interest in OLDNAME is      * 00249800
*              deregistered when the request completes with:          * 00249900
*                                                                     * 00250000
*                                                                     * 00250100
*              o   return code 0 (IxlRetCodeOk)                       * 00250200
*                                                                     * 00250300
*              o   return code 4 (IxlRetCodeWarning)                  * 00250400
*                                                                     * 00250500
*              o   return code 8 (IxlRetCodeParmError) with reason    * 00250600
*                  code xxxx0825 (IxlRsnCodeNoEntry), xxxx0827        * 00250700
*                  (IxlRsnCodeCoLockHeld), or xxxx0828                * 00250800
*                  (IxlRsnCodeCoUnchanged).                           * 00250900
*                                                                     * 00251000
*                                                                     * 00251100
*                                                                     * 00251200
*              DEFAULT: NO_OLDNAME                                    * 00251300
*                                                                     * 00251400
*                                                                     * 00251500
*                                                                     * 00251600
*                                                                     * 00251700
*                                                                     * 00251800
*                                                                     * 00251900
*      The following is a set of mutually exclusive keys.  This set   * 00252000
*      is optional; only one key may be specified.                    * 00252100
*                                                                     * 00252200
*                                                                     * 00252300
*      [BUFLIST=xbuflist                                            * 00252400
*          belongs to a set of mutually exclusive keys. It is an      * 00252500
*          optional input.  It is the name (RS-type), or address in   * 00252600
*          register (2)-(12), of a 128-byte virtual storage area      * 00252700
*          containing a list of addresses of buffers.  These buffers  * 00252800
*          may contain input data for the request or may receive      * 00252900
*          output data from the request, depending on the request     * 00253000
*          specified.  The set of buffers is used as if it were a     * 00253100
*          single contiguous area for purposes of input and output.   * 00253200
*                                                                     * 00253300
*          The format of the list is a set of 8-byte elements.  The   * 00253400
*          first four bytes of each element is reserved space.  The   * 00253500
*          second four bytes of each element contains the address of  * 00253600
*          a buffer.                                                  * 00253700
*                                                                     * 00253800
*          There may be 0 to 16 buffers passed in the list.  Each     * 00253900
*          buffer in the list must be the same size and must reside   * 00254000
*          in the same address space or data space.  Data is fetched  * 00254100
*          from or stored into the buffers in the order specified.    * 00254200
*                                                                     * 00254300
*          One of BUFFER or BUFLIST is required for CASTOUT_DATA,     * 00254400
*          UNLOCK_CASTOUT, PROCESS_REFLIST, READ_COCLASS,             * 00254500
*          READ_DIRINFO, READ_COSTATS, and DELETE_NAMELIST requests.  * 00254600
*                                                                     * 00254700
*          For WRITE_DATA requests, for structures allocated in       * 00254800
*          CFLEVEL=0 through CFLEVEL=3 coupling facilities inclusive  * 00254900
*          one of BUFFER or BUFLIST is required.  For structures      * 00255000
*          allocated in CFLEVEL=4 or higher coupling facilities one   * 00255100
*          of BUFFER or BUFLIST is required when CHANGED=YES and      * 00255200
*          optional when CHANGED=NO.                                  * 00255300
*                                                                     * 00255400
*          One of BUFFER or BUFLIST is optional for READ_DATA         * 00255500
*          requests.                                                  * 00255600
*                                                                     * 00255700
*          BUFFER is mutually exclusive with BUFLIST and with all     * 00255800
*          requests not described above.                              * 00255900
*                                                                     * 00256000
*          For READ_DATA, CASTOUT_DATA WRITE_DATA and DELETE_NAMELIST * 00256100
*          requests the length of a buffer must be a multiple of 256  * 00256200
*          bytes between 256 and 4096.  Each buffer must start on a   * 00256300
*          256-byte boundary and must not cross a 4096-byte boundary. * 00256400
*                                                                     * 00256500
*          If BUFLIST is specified for a READ_DATA, CASTOUT_DATA, or  * 00256600
*          WRITE_DATA request and the structure does not support      * 00256700
*          entry data, or there is no data to return, or the read of  * 00256800
*          the data was suppressed, then the contents of BUFLIST      * 00256900
*          neither affects the request nor is affected by the         * 00257000
*          request.                                                   * 00257100
*                                                                     * 00257200
*          For UNLOCK_CASTOUT, PROCESS_REFLIST, READ_COCLASS,         * 00257300
*          READ_DIRINFO, and READ_COSTATS requests each buffer must   * 00257400
*          be 4096 bytes in length and must start on a 4096-byte      * 00257500
*          boundary.                                                  * 00257600
*                                                                     * 00257700
*          For READ_DATA and CASTOUT_DATA requests BUFLIST defines a  * 00257800
*          set of buffers into which cached subsystem data is to be   * 00257900
*          read.                                                      * 00258000
*                                                                     * 00258100
*          For WRITE_DATA requests BUFLIST defines a set of buffers   * 00258200
*          containing subsystem data to be written to the structure.  * 00258300
*                                                                     * 00258400
*          For UNLOCK_CASTOUT requests BUFLIST defines a set of       * 00258500
*          buffers containing a list of structure entry names to be   * 00258600
*          processed.  Upon invocation, the BUFLIST buffers must be   * 00258700
*          formatted into 32-byte name elements, starting at offset   * 00258800
*          zero.  FIRSTNAME and LASTNAME specify which name elements  * 00258900
*          are to be processed.  Each element consists of a 16-byte   * 00259000
*          structure entry name, immediately followed by 16 bytes of  * 00259100
*          request control information.  A mapping of a name element  * 00259200
*          for UNLOCK_CASTOUT requests is specified by the IXLYCUNB   * 00259300
*          mapping macro.                                             * 00259400
*                                                                     * 00259500
*          For PROCESS_REFLIST requests BUFLIST defines a set of      * 00259600
*          buffers containing a list of structure entry names to be   * 00259700
*          processed.  Upon invocation, the BUFLIST buffers must be   * 00259800
*          formatted into 16-byte name elements, starting at offset   * 00259900
*          zero, each of which contains a 16-byte structure entry     * 00260000
*          name to be processed.  PROCESS_REFLIST requests always     * 00260100
*          begin processing with the first name element.  NUMNAMES    * 00260200
*          specifies the number of name elements to be processed.     * 00260300
*                                                                     * 00260400
*          For READ_COCLASS requests BUFLIST defines a set of buffers * 00260500
*          to contain a list of returned elements.  Upon successful   * 00260600
*          completion, the BUFLIST buffers are formatted into         * 00260700
*          elements starting at offset zero.  A mapping of an element * 00260800
*          for READ_COCLASS requests is specified by either the       * 00260900
*          IXLYCANB mapping macro or the IXLYDEIB mapping macro       * 00261000
*          depending on the value specified on the DIRINFOFMT         * 00261100
*          keyword.                                                   * 00261200
*                                                                     * 00261300
*          For READ_DIRINFO requests BUFLIST defines a set of buffers * 00261400
*          to contain returned directory information.  Upon           * 00261500
*          successful completion, the BUFLIST buffers are formatted   * 00261600
*          into directory entries or name elements, one per directory * 00261700
*          entry processed, starting at offset zero.  Directory       * 00261800
*          entries are returned when DIRINFOFMT=DIRENTRYLIST is       * 00261900
*          specified.  The IXLYDEIB mapping macro specifies the       * 00262000
*          length, fields, and format of a directory element.  Name   * 00262100
*          elements are returned when DIRINFOFMT=NAMELIST is          * 00262200
*          specified.  The IXLYCANB mapping macro specifies the       * 00262300
*          length, fields, and format of a name element.              * 00262400
*                                                                     * 00262500
*          For READ_COSTATS requests BUFLIST defines a set of buffers * 00262600
*          to contain returned statistics information. The format of  * 00262700
*          the information returned depends on the value specified or * 00262800
*          selected by default on the COSTATSFMT keyword.  For        * 00262900
*          structures allocated in CFLEVEL=4 or lower coupling        * 00263000
*          facilities the COSTATSFMT keyword is not recognized and is * 00263100
*          considered to always default to COSTATSFMT=COCOUNTSLIST.   * 00263200
*                                                                     * 00263300
*          If COSTATSFMT=COCOUNTSLIST is either specified or selected * 00263400
*          by default then upon successful completion of the request  * 00263500
*          the first four bytes of the first buffer contain general   * 00263600
*          information pertinent to the request.  A mapping of this   * 00263700
*          information is specified by the Ccih mapping in the        * 00263800
*          IXLYCCIH mapping macro.  Starting at offset four in the    * 00263900
*          first buffer is an array of fullwords,  with each fullword * 00264000
*          containing the number of data elements associated with     * 00264100
*          entries that are associated with the indicated cast-out    * 00264200
*          class.  The number of fullwords returned equals the number * 00264300
*          of cast-out classes processed, and the relative position   * 00264400
*          of the fullword in the array associates it with the        * 00264500
*          cast-out class represented by the same relative position   * 00264600
*          in the range of cast-out classes processed.  This format   * 00264700
*          is mapped in the CCIHCOUNTS mapping in the IXLYCCIH        * 00264800
*          mapping macro.                                             * 00264900
*                                                                     * 00265000
*          If COSTATSFMT=COSTATSLIST is specified then upon           * 00265100
*          successful completion of the request the first 4 bytes of  * 00265200
*          the first buffer contains general information pertinent to * 00265300
*          the request.  A mapping of this information is specified   * 00265400
*          by the CCIH mapping in the IXLYCCIH mapping macro.  The    * 00265500
*          next 28 bytes in the buffer are reserved.  Each subsequent * 00265600
*          32 bytes will be an information element which is described * 00265700
*          by the CCIHCCIBS mapping in the IXLYCCIH mapping macro.    * 00265800
*          The number of information elements returned equals the     * 00265900
*          number of cast-out classes processed, and the relative     * 00266000
*          position of the information element in the array           * 00266100
*          associates it with the cast-out class represented by the   * 00266200
*          same relative position in the range of cast-out classes    * 00266300
*          processed.                                                 * 00266400
*                                                                     * 00266500
*          For DELETE_NAMELIST requests BUFLIST defines a set of      * 00266600
*          buffers containing a list of structure entry name elements * 00266700
*          to be processed.  Upon invocation, the BUFLIST buffers     * 00266800
*          must be formatted into 32-byte name elements, starting at  * 00266900
*          offset zero.  STARTINDEX and ENDINDEX specify which name   * 00267000
*          elements are to be processed.  A mapping of a name element * 00267100
*          for DELETE_NAMELIST requests is specified by the IXLYDNNB  * 00267200
*          mapping macro.                                             * 00267300
*                                                                     * 00267400
*                                                                     * 00267500
*          [BUFADDRTYPE=VIRTUAL|REAL                                * 00267600
*              is an optional keyword input that specifies whether    * 00267700
*              the buffer addresses specified in the BUFLIST list are * 00267800
*              virtual storage addresses or real storage addresses.   * 00267900
*                                                                     * 00268000
*              DEFAULT: VIRTUAL                                       * 00268100
*                                                                     * 00268200
*                                                                     * 00268300
*              [BUFADDRTYPE=VIRTUAL                                   * 00268400
*                  Indicates that the buffer addresses specified in   * 00268500
*                  the BUFLIST list are virtual storage addresses.    * 00268600
*                                                                     * 00268700
*                                                                     * 00268800
*                                                                     * 00268900
*                  [PAGEABLE=YES|NO]                                * 00269000
*                      is an optional keyword input that specifies    * 00269100
*                      whether or not the buffers specified by        * 00269200
*                      BUFLIST resides in pageable storage.           * 00269300
*                                                                     * 00269400
*                      DEFAULT: YES                                   * 00269500
*                                                                     * 00269600
*                                                                     * 00269700
*                      [PAGEABLE=YES                                  * 00269800
*                          Indicates that the BUFLIST buffers reside  * 00269900
*                          in pageable virtual storage.               * 00270000
*                                                                     * 00270100
*                          This includes disabled reference (DREF)    * 00270200
*                          storage, and may include storage that has  * 00270300
*                          the potential to become pageable during    * 00270400
*                          the processing of a request (for example,  * 00270500
*                          address space storage owned by any         * 00270600
*                          swappable address space, for which a PGSER * 00270700
*                          FIX has been successfully processed,  but  * 00270800
*                          for which the owning address space gets    * 00270900
*                          swapped during processing of an IXLCACHE   * 00271000
*                          request).  It does not include implicitly  * 00271100
*                          non-pageable storage (such as is obtained  * 00271200
*                          from non-pageable subpools).               * 00271300
*                                                                     * 00271400
*                          The system takes responsibility for        * 00271500
*                          managing real storage binds associated     * 00271600
*                          with the pageable virtual storage for the  * 00271700
*                          duration of the request,  regardless of    * 00271800
*                          what address space owns the storage or     * 00271900
*                          whether the storage-owning address space   * 00272000
*                          is swappable or nonswappable.  The storage * 00272100
*                          may be owned by any address space.         * 00272200
*                                                                     * 00272300
*                                                                     * 00272400
*                                                                     * 00272500
*                          [BUFSTGKEY=xbufstgkey|CALLERS_KEY]]      * 00272600
*                              is the name (RS-type), or address in   * 00272700
*                              register (2)-(12), of an optional 8    * 00272800
*                              bit input containing the storage key   * 00272900
*                              to be used when referencing the        * 00273000
*                              buffers in the list specified by       * 00273100
*                              BUFLIST.                               * 00273200
*                                                                     * 00273300
*                              The high order nibble contains the     * 00273400
*                              storage key, the low order nibble is   * 00273500
*                              ignored.  For example, set 'kkkk' in   * 00273600
*                              the binary bit string 'kkkkxxxx'B to   * 00273700
*                              correspond to the desired storage key. * 00273800
*                                                                     * 00273900
*                              If BUFSTGKEY is not specified, then    * 00274000
*                              all references to the BUFLIST buffers  * 00274100
*                              are performed using the caller's PSW   * 00274200
*                              key.                                   * 00274300
*                                                                     * 00274400
*                              DEFAULT: CALLERS_KEY                   * 00274500
*                                                                     * 00274600
*                                                                     * 00274700
*                                                                     * 00274800
*                      [PAGEABLE=NO]                                  * 00274900
*                          Indicates that the BUFLIST buffers reside  * 00275000
*                          in non-pageable virtual storage.           * 00275100
*                                                                     * 00275200
*                          This includes implicitly non-pageable      * 00275300
*                          storage areas (such as is obtained from    * 00275400
*                          non-pageable subpools), and may include    * 00275500
*                          storage that has the potential to become   * 00275600
*                          pageable during the processing of an       * 00275700
*                          IXLCACHE request (for example, address     * 00275800
*                          space storage owned by a swappable         * 00275900
*                          requestor's or connector's address space,  * 00276000
*                          for which a PGSER FIX  has been            * 00276100
*                          successfully processed,  but for which the * 00276200
*                          owning address space has been swapped      * 00276300
*                          during processing of an IXLCACHE request). * 00276400
*                                                                     * 00276500
*                          The system takes responsibility for        * 00276600
*                          managing real storage binds associated     * 00276700
*                          with the non-pageable virtual storage for  * 00276800
*                          the duration of the request if and only if * 00276900
*                          the storage is owned by either the         * 00277000
*                          requestor's address space or the           * 00277100
*                          connector's address space.  If the storage * 00277200
*                          is owned by any other address space, then  * 00277300
*                          the invoker is responsible for ensuring    * 00277400
*                          that the virtual storage remains fixed in  * 00277500
*                          real storage for the duration of the       * 00277600
*                          request (including the case where the      * 00277700
*                          storage is owned by a swappable address    * 00277800
*                          space which is swapped during processing   * 00277900
*                          of the request).  With this proviso, the   * 00278000
*                          storage may be owned by any address space. * 00278100
*                                                                     * 00278200
*                          If MODE=ASYNCTOKEN is specified or         * 00278300
*                          MODE=SYNCTOKEN is specified and the        * 00278400
*                          request does not complete synchronously,   * 00278500
*                          then the storage must remain non-pageable  * 00278600
*                          until completion of the corresponding      * 00278700
*                          IXLFCOMP request.  If MODE=ASYNCEXIT is    * 00278800
*                          specified or MODE=SYNCEXIT is specified    * 00278900
*                          and the request does not complete          * 00279000
*                          synchronously, then the storage must       * 00279100
*                          remain non-pageable until the completion   * 00279200
*                          exit is driven for the request.  If        * 00279300
*                          MODE=ASYNCECB is specified or MODE=SYNCECB * 00279400
*                          is specified and the request does not      * 00279500
*                          complete synchronously, then the storage   * 00279600
*                          must remain non-pageable until the         * 00279700
*                          specified ECB is posted for the request.   * 00279800
*                                                                     * 00279900
*                                                                     * 00280000
*                                                                     * 00280100
*                                                                     * 00280200
*                                                                     * 00280300
*                                                                     * 00280400
*                  [BUFALET=xbufalet|NO_BUFALET]]                   * 00280500
*                      is the name (RS-type), or address in register  * 00280600
*                      (2)-(12), of an optional fullword input        * 00280700
*                      specifying the ALET value to be used in        * 00280800
*                      referencing all of the buffers specified for   * 00280900
*                      BUFLIST                                        * 00281000
*                                                                     * 00281100
*                      DEFAULT: NO_BUFALET                            * 00281200
*                                                                     * 00281300
*                                                                     * 00281400
*                                                                     * 00281500
*              [BUFADDRTYPE=REAL                                      * 00281600
*                  Indicates that the buffer addresses specified in   * 00281700
*                  the BUFLIST list are real storage addresses.       * 00281800
*                                                                     * 00281900
*                  The system takes no responsibility for managing    * 00282000
*                  real storage binds when real addresses are         * 00282100
*                  provided.  The invoker is responsible for ensuring * 00282200
*                  the real storage addresses provided remain valid   * 00282300
*                  for the duration of the request (including the     * 00282400
*                  case where the real storage provided is backing    * 00282500
*                  virtual storage owned by a swappable address space * 00282600
*                  which is swapped during processing of the          * 00282700
*                  request).  The virtual storage backed by the real  * 00282800
*                  storage whose addresses are provided may be owned  * 00282900
*                  by any address space.                              * 00283000
*                                                                     * 00283100
*                                                                     * 00283200
*                                                                     * 00283300
*                  [BUFADDRSIZE=31|64]]                             * 00283400
*                      is an optional keyword input that specifies    * 00283500
*                      whether a 31 or a 64 bit address is specified  * 00283600
*                      by a BUFLIST entry.                            * 00283700
*                                                                     * 00283800
*                      DEFAULT: 31                                    * 00283900
*                                                                     * 00284000
*                                                                     * 00284100
*                      [BUFADDRSIZE=31]                               * 00284200
*                          Indicates that the BUFLIST address is 31   * 00284300
*                          bits in size.                              * 00284400
*                                                                     * 00284500
*                      [BUFADDRSIZE=64]]                              * 00284600
*                          Indicates that the BUFLIST address is 64   * 00284700
*                          bits in size.                              * 00284800
*                                                                     * 00284900
*                                                                     * 00285000
*                                                                     * 00285100
*                                                                     * 00285200
*                                                                     * 00285300
*                                                                     * 00285400
*                                                                     * 00285500
*                                                                     * 00285600
*                                                                     * 00285700
*                                                                     * 00285800
*          [BUFNUM=xbufnum|NO_BUFNUM]                               * 00285900
*              is the name (RS-type), or address in register          * 00286000
*              (2)-(12), of an optional byte input specifying the     * 00286100
*              number of buffers defined in the BUFLIST list.         * 00286200
*                                                                     * 00286300
*              BUFNUM values must be in the range of 0 to 16.  A      * 00286400
*              BUFNUM value of zero indicates that no structure data  * 00286500
*              is to be read or written into the BUFLIST buffers.     * 00286600
*                                                                     * 00286700
*              BUFNUM is required when BUFLIST is specified, and is   * 00286800
*              mutually exclusive otherwise.                          * 00286900
*                                                                     * 00287000
*              DEFAULT: NO_BUFNUM                                     * 00287100
*                                                                     * 00287200
*                                                                     * 00287300
*                                                                     * 00287400
*                                                                     * 00287500
*          [BUFINCRNUM=xbufincrnum|NO_BUFINCRNUM]                   * 00287600
*              is the name (RS-type), or address in register          * 00287700
*              (2)-(12), of an optional byte input specifying the     * 00287800
*              number of 256-byte increments or segments in each      * 00287900
*              buffer in the BUFLIST list.                            * 00288000
*                                                                     * 00288100
*              BUFINCRNUM values must be a power of 2 in the range of * 00288200
*              1 to 16 (1, 2, 4, 8, 16), corresponding to BUFLIST     * 00288300
*              buffer sizes of 256 to 4096 bytes.                     * 00288400
*                                                                     * 00288500
*              BUFINCRNUM is mutually exclusive with UNLOCK_CASTOUT,  * 00288600
*              PROCESS_REFLIST, READ_COCLASS, READ_DIRINFO, and       * 00288700
*              READ_COSTATS requests.  For these requests a           * 00288800
*              BUFINCRNUM value of 16 will be used.  For all other    * 00288900
*              requests BUFINCRNUM is required when BUFLIST is        * 00289000
*              specified.                                             * 00289100
*                                                                     * 00289200
*              DEFAULT: NO_BUFINCRNUM                                 * 00289300
*                                                                     * 00289400
*                                                                     * 00289500
*                                                                     * 00289600
*      BUFFER=xbuffer                                               * 00289700
*          belongs to a set of mutually exclusive keys. It is an      * 00289800
*          optional input.  It is the name (RS-type), or address in   * 00289900
*          register (2)-(12), of a virtual storage area containing    * 00290000
*          input data for the request or to receive output data from  * 00290100
*          the request, depending on the request specified.  The      * 00290200
*          BUFSIZE keyword specifies the size of the buffer.          * 00290300
*                                                                     * 00290400
*          BUFFER is required for REG_NAMELIST requests.  One of      * 00290500
*          BUFFER or BUFLIST is required for CASTOUT_DATA,            * 00290600
*          UNLOCK_CASTOUT, PROCESS_REFLIST, READ_COCLASS,             * 00290700
*          READ_DIRINFO, READ_COSTATS, and DELETE_NAMELIST requests.  * 00290800
*                                                                     * 00290900
*          For WRITE_DATA requests, for structures allocated in       * 00291000
*          CFLEVEL=0 through CFLEVEL=3 coupling facilities inclusive  * 00291100
*          one of BUFFER or BUFLIST is required.  For structures      * 00291200
*          allocated in CFLEVEL=4 or higher coupling facilities one   * 00291300
*          of BUFFER or BUFLIST is required when CHANGED=YES and      * 00291400
*          optional when CHANGED=NO.                                  * 00291500
*                                                                     * 00291600
*          One of BUFFER or BUFLIST is optional for READ_DATA         * 00291700
*          requests.                                                  * 00291800
*                                                                     * 00291900
*          BUFFER is mutually exclusive with BUFLIST and with all     * 00292000
*          requests not described above.                              * 00292100
*                                                                     * 00292200
*          For READ_DATA, REG_NAMELIST, CASTOUT_DATA,                 * 00292300
*          DELETE_NAMELIST, and WRITE_DATA requests if the length of  * 00292400
*          the buffer is less than or equal to 4096 bytes then the    * 00292500
*          length of the buffer must be a power of 2 between 256 and  * 00292600
*          4096 bytes (256, 512, 1024, 2048, or 4096), the buffer     * 00292700
*          must start on a 256-byte boundary, and the buffer must not * 00292800
*          cross a 4096-byte boundary.  If the length of the buffer   * 00292900
*          is greater than 4096 bytes then the length of the buffer   * 00293000
*          must be a multiple of 4096 bytes between 4096 and 65536    * 00293100
*          and the buffer must start on a 4096-byte boundary.         * 00293200
*                                                                     * 00293300
*          If BUFFER is specified for a READ_DATA, CASTOUT_DATA, or   * 00293400
*          WRITE_DATA request and the structure does not support      * 00293500
*          entry data, or there is no data to return, or the read of  * 00293600
*          the data was suppressed, then the contents of BUFFER       * 00293700
*          neither affects the request nor is affected by the         * 00293800
*          request.                                                   * 00293900
*                                                                     * 00294000
*          For UNLOCK_CASTOUT, PROCESS_REFLIST, READ_COCLASS,         * 00294100
*          READ_DIRINFO, and READ_COSTATS requests the length of the  * 00294200
*          buffer must be a multiple of 4096 bytes between 4096 and   * 00294300
*          65536 and the buffer must start on a 4096-byte boundary.   * 00294400
*                                                                     * 00294500
*          For READ_DATA and CASTOUT_DATA requests BUFFER defines an  * 00294600
*          area into which cached subsystem data is to be read.       * 00294700
*                                                                     * 00294800
*          For WRITE_DATA requests BUFFER defines an area containing  * 00294900
*          subsystem data to be written to the structure.             * 00295000
*                                                                     * 00295100
*          For REG_NAMELIST requests, BUFFER defines an area          * 00295200
*          containing an array of 1 to 32 registration blocks         * 00295300
*          specifying parameters to be used in registering interest   * 00295400
*          in a given set of entries.  Note that for a REG_NAMELIST   * 00295500
*          request,  the BUFFER area must be addressable in the       * 00295600
*          caller's primary address space or from the caller's PASN   * 00295700
*          access list.                                               * 00295800
*                                                                     * 00295900
*          For UNLOCK_CASTOUT requests BUFFER defines an area         * 00296000
*          containing a list of structure entry names to be           * 00296100
*          processed.  Upon invocation, BUFFER must be formatted into * 00296200
*          32-byte name elements, starting at offset zero.  FIRSTNAME * 00296300
*          and LASTNAME specify which name elements are to be         * 00296400
*          processed.  Each element consists of a 16-byte structure   * 00296500
*          entry name, immediately followed by 16 bytes of request    * 00296600
*          control information.  A mapping of a name element for      * 00296700
*          UNLOCK_CASTOUT requests is specified by the IXLYCUNB       * 00296800
*          mapping macro.                                             * 00296900
*                                                                     * 00297000
*          For PROCESS_REFLIST requests BUFFER defines an area        * 00297100
*          containing a list of structure entry names to be           * 00297200
*          processed.  Upon invocation, BUFFER must be formatted into * 00297300
*          16-byte name elements, starting at offset zero, each of    * 00297400
*          which contains a 16-byte structure entry name to be        * 00297500
*          processed.  PROCESS_REFLIST requests always begin          * 00297600
*          processing with the first name element.  NUMNAMES          * 00297700
*          specifies the number of name elements to be processed.     * 00297800
*                                                                     * 00297900
*          For READ_COCLASS requests BUFFER defines an area to        * 00298000
*          contain a list of returned name elements.  Upon successful * 00298100
*          completion, BUFFER is formatted into name elements,        * 00298200
*          starting at offset zero.  A mapping of a name element for  * 00298300
*          READ_COCLASS requests is specified by either the IXLYCANB  * 00298400
*          mapping macro or the IXLYDEIB mapping macro depending on   * 00298500
*          the value specified on the DIRINFOFMT keyword.             * 00298600
*                                                                     * 00298700
*          For READ_DIRINFO requests BUFFER defines an area to        * 00298800
*          contain returned directory information.  Upon successful   * 00298900
*          completion, BUFFER is formatted into directory entries or  * 00299000
*          name elements, one per directory entry processed, starting * 00299100
*          at offset zero.  Directory entries are returned when       * 00299200
*          DIRINFOFMT=DIRENTRYLIST is specified.  The IXLYDEIB        * 00299300
*          mapping macro specifies the length, fields, and format of  * 00299400
*          a directory element.  Name elements are returned when      * 00299500
*          DIRINFOFMT=NAMELIST is specified.  The IXLYCANB mapping    * 00299600
*          macro specifies the length, fields, and format of a name   * 00299700
*          element.                                                   * 00299800
*                                                                     * 00299900
*          For READ_COSTATS requests BUFFER defines an area to        * 00300000
*          contain returned statistics information.  The format of    * 00300100
*          the information returned depends on the value specified or * 00300200
*          selected by default on the COSTATSFMT keyword.  For        * 00300300
*          structures allocated in CFLEVEL=4 or lower coupling        * 00300400
*          facilities the COSTATSFMT keyword is not recognized and is * 00300500
*          considered to always default to COSTATSFMT=COCOUNTSLIST.   * 00300600
*                                                                     * 00300700
*          If COSTATSFMT=COCOUNTSLIST is either specified or selected * 00300800
*          by default then upon successful completion of the request  * 00300900
*          the first four bytes of BUFFER contains general            * 00301000
*          information pertinent to the request.  A mapping of this   * 00301100
*          information is specified by the CCIH mapping in the        * 00301200
*          IXLYCCIH mapping macro.  Starting at offset four BUFFER    * 00301300
*          contains an array of fullwords,  with each fullword        * 00301400
*          containing the number of data elements associated with     * 00301500
*          entries that are associated with the indicated cast-out    * 00301600
*          class.  The number of fullwords returned equals the number * 00301700
*          of cast-out classes processed, and the relative position   * 00301800
*          of the fullword in the array associates it with the        * 00301900
*          cast-out class represented by the same relative position   * 00302000
*          in the range of cast-out classes processed.  A mapping of  * 00302100
*          this information is specified by the CCIHCOUNTS mapping in * 00302200
*          the IXLYCCIH mapping macro.                                * 00302300
*                                                                     * 00302400
*          If COSTATSFMT=COSTATSLIST is specified then upon           * 00302500
*          successful completion of the request the first 4 bytes of  * 00302600
*          the BUFFER contain general information pertinent to the    * 00302700
*          request.  A mapping of this information is specified by    * 00302800
*          the CCIH mapping in the IXLYCCIH mapping macro.  The next  * 00302900
*          28 bytes in the buffer are reserved.  Each subsequent 32   * 00303000
*          bytes will be an information element which is described by * 00303100
*          the CCIHCCIBS mapping in the IXLYCCIH mapping macro.  The  * 00303200
*          number of information elements returned equals the number  * 00303300
*          of cast-out classes processed, and the relative position   * 00303400
*          of the information element in the array associates it with * 00303500
*          the cast-out class represented by the same relative        * 00303600
*          position in the range of cast-out classes processed.       * 00303700
*                                                                     * 00303800
*          For DELETE_NAMELIST requests BUFFER defines an area        * 00303900
*          containing a list of structure entry name elements to be   * 00304000
*          processed.  Upon invocation, BUFFER must be formatted into * 00304100
*          32-byte name elements, starting at offset zero.            * 00304200
*          STARTINDEX and ENDINDEX specify which name elements are to * 00304300
*          be processed.  A mapping of a name element for             * 00304400
*          DELETE_NAMELIST requests is specified by the IXLYDNNB      * 00304500
*          mapping macro.                                             * 00304600
*                                                                     * 00304700
*                                                                     * 00304800
*          [PAGEABLE=YES|NO]                                        * 00304900
*              is an optional keyword input that specifies whether or * 00305000
*              not the storage area specified by BUFFER resides in    * 00305100
*              pageable storage.                                      * 00305200
*                                                                     * 00305300
*              DEFAULT: YES                                           * 00305400
*                                                                     * 00305500
*                                                                     * 00305600
*              [PAGEABLE=YES                                          * 00305700
*                  Indicates that the BUFFER area resides in pageable * 00305800
*                  virtual storage.                                   * 00305900
*                                                                     * 00306000
*                  This includes disabled reference (DREF) storage,   * 00306100
*                  and may include storage that has the potential to  * 00306200
*                  become pageable during the processing of a request * 00306300
*                  (for example, address space storage owned by any   * 00306400
*                  swappable address space, for which a PGSER FIX has * 00306500
*                  been successfully processed,  but for which the    * 00306600
*                  owning address space gets swapped during           * 00306700
*                  processing of an IXLCACHE request).  It does not   * 00306800
*                  include implicitly non-pageable storage (such as   * 00306900
*                  is obtained from non-pageable subpools).           * 00307000
*                                                                     * 00307100
*                  The system takes responsibility for managing real  * 00307200
*                  storage binds associated with the pageable virtual * 00307300
*                  storage for the duration of the request,           * 00307400
*                  regardless of what address space owns the storage  * 00307500
*                  or whether the storage-owning address space is     * 00307600
*                  swappable or nonswappable.  The storage may be     * 00307700
*                  owned by any address space.                        * 00307800
*                                                                     * 00307900
*                                                                     * 00308000
*                                                                     * 00308100
*                  [BUFSTGKEY=xbufstgkey|CALLERS_KEY]]              * 00308200
*                      is the name (RS-type), or address in register  * 00308300
*                      (2)-(12), of an optional 8 bit input           * 00308400
*                      containing the storage key to be used when     * 00308500
*                      referencing the storage area specified by      * 00308600
*                      BUFFER.                                        * 00308700
*                                                                     * 00308800
*                      The high order nibble contains the storage     * 00308900
*                      key, the low order nibble is ignored.  For     * 00309000
*                      example, set 'kkkk' in the binary bit string   * 00309100
*                      'kkkkxxxx'B to correspond to the desired       * 00309200
*                      storage key.                                   * 00309300
*                                                                     * 00309400
*                      If BUFSTGKEY is not specified, then all        * 00309500
*                      references to the BUFFER buffer storage are    * 00309600
*                      performed using the caller's PSW key.          * 00309700
*                                                                     * 00309800
*                      DEFAULT: CALLERS_KEY                           * 00309900
*                                                                     * 00310000
*                                                                     * 00310100
*                                                                     * 00310200
*              [PAGEABLE=NO]                                          * 00310300
*                  Indicates that the BUFFER area resides in          * 00310400
*                  non-pageable virtual storage.                      * 00310500
*                                                                     * 00310600
*                  This includes implicitly non-pageable storage      * 00310700
*                  areas (such as is obtained from non-pageable       * 00310800
*                  subpools), and may include storage that has the    * 00310900
*                  potential to become pageable during the processing * 00311000
*                  of an IXLCACHE request (for example, address space * 00311100
*                  storage owned by a swappable requestor's or        * 00311200
*                  connector's address space, for which a PGSER FIX   * 00311300
*                  has been successfully processed,  but for which    * 00311400
*                  the owning address space has been swapped during   * 00311500
*                  processing of an IXLCACHE request).                * 00311600
*                                                                     * 00311700
*                  The system takes responsibility for managing real  * 00311800
*                  storage binds associated with the non-pageable     * 00311900
*                  virtual storage for the duration of the request if * 00312000
*                  and only if the storage is owned by either the     * 00312100
*                  requestor's address space or the connector's       * 00312200
*                  address space.  If the storage is owned by any     * 00312300
*                  other address space, then the invoker is           * 00312400
*                  responsible for ensuring that the virtual storage  * 00312500
*                  remains fixed in real storage for the duration of  * 00312600
*                  the request (including the case where the storage  * 00312700
*                  is owned by a swappable address space which is     * 00312800
*                  swapped during processing of the request).  With   * 00312900
*                  this proviso, the storage may be owned by any      * 00313000
*                  address space.                                     * 00313100
*                                                                     * 00313200
*                  If MODE=ASYNCTOKEN is specified or MODE=SYNCTOKEN  * 00313300
*                  is specified and the request does not complete     * 00313400
*                  synchronously, then the storage must remain        * 00313500
*                  non-pageable until completion of the corresponding * 00313600
*                  IXLFCOMP request.  If MODE=ASYNCEXIT is specified  * 00313700
*                  or MODE=SYNCEXIT is specified and the request does * 00313800
*                  not complete synchronously, then the storage must  * 00313900
*                  remain non-pageable until the completion exit is   * 00314000
*                  driven for the request.  If MODE=ASYNCECB is       * 00314100
*                  specified or MODE=SYNCECB is specified and the     * 00314200
*                  request does not complete synchronously, then the  * 00314300
*                  storage must remain non-pageable until the         * 00314400
*                  specified ECB is posted for the request.           * 00314500
*                                                                     * 00314600
*                                                                     * 00314700
*                                                                     * 00314800
*                                                                     * 00314900
*                                                                     * 00315000
*                                                                     * 00315100
*          BUFSIZE=xbufsize]                                          * 00315200
*              is the name (RS-type), or address in register          * 00315300
*              (2)-(12), of a required fullword input specifying the  * 00315400
*              length of the virtual storage area specified for       * 00315500
*              BUFFER in bytes.                                       * 00315600
*                                                                     * 00315700
*              Refer to BUFFER for the buffer size requirements for   * 00315800
*              each request type.                                     * 00315900
*                                                                     * 00316000
*              BUFSIZE is required when BUFFER is specified, and is   * 00316100
*              mutually exclusive otherwise.                          * 00316200
*                                                                     * 00316300
*                                                                     * 00316400
*                                                                     * 00316500
*                                                                     * 00316600
*                                                                     * 00316700
*      End of a set of mutually exclusive optional keys.              * 00316800
*      DEFAULT: BUFLIST                                               * 00316900
*                                                                     * 00317000
*                                                                     * 00317100
*                                                                     * 00317200
*      [ADJAREA=xadjarea|NO_ADJAREA]                                * 00317300
*          is an optional input.  It is the name (RS-type), or        * 00317400
*          address in register (2)-(12), of a 64-byte area in virtual * 00317500
*          storage where structure entry adjunct data is to be read   * 00317600
*          for a READ_DATA or CASTOUT_DATA request, or where data to  * 00317700
*          be written to a structure entry adjunct area resides for a * 00317800
*          WRITE_DATA request.                                        * 00317900
*                                                                     * 00318000
*          ADJAREA may optionally be specified on READ_DATA and       * 00318100
*          CASTOUT_DATA requests.  ADJAREA may optionally be          * 00318200
*          specified for a WRITE_DATA request only when ELEMNUM is    * 00318300
*          greater than 0.  ADJAREA is mutually exclusive with all    * 00318400
*          other request types.                                       * 00318500
*                                                                     * 00318600
*          If the structure supports adjunct data and ADJAREA is not  * 00318700
*          specified, then:                                           * 00318800
*                                                                     * 00318900
*                                                                     * 00319000
*          o   For WRITE_DATA requests binary zeros are written to    * 00319100
*              the adjunct area if ELEMNUM is greater than 0.         * 00319200
*              Otherwise adjunct does not exist for the entry.        * 00319300
*                                                                     * 00319400
*          o   For READ_DATA and CASTOUT_DATA requests no adjunct     * 00319500
*              data is returned.                                      * 00319600
*                                                                     * 00319700
*                                                                     * 00319800
*                                                                     * 00319900
*          If the structure does not support adjunct data and ADJAREA * 00320000
*          is specified, then:                                        * 00320100
*                                                                     * 00320200
*                                                                     * 00320300
*          o   For WRITE_DATA requests ADJAREA is ignored.            * 00320400
*                                                                     * 00320500
*          o   For READ_DATA and CASTOUT_DATA requests entry data is  * 00320600
*              returned, but no adjunct data is returned and the      * 00320700
*              request will complete with return code 4               * 00320800
*              (IxlRetCodeWarning) and reason code xxxx040C           * 00320900
*              (IxlRsnCodeNoAdjunctData).                             * 00321000
*                                                                     * 00321100
*                                                                     * 00321200
*                                                                     * 00321300
*          If the structure supports adjunct data and ADJAREA is      * 00321400
*          specified, but there is no data and adjunct associated     * 00321500
*          with the entry then:                                       * 00321600
*                                                                     * 00321700
*                                                                     * 00321800
*          o   For READ_DATA requests the request completes with      * 00321900
*              return code 4 (IxlRetCodeWarning) and reason code      * 00322000
*              xxxx040A (IxlRsnCodeNoReadData).                       * 00322100
*                                                                     * 00322200
*          o   For CASTOUT_DATA requests the request fails with       * 00322300
*              return code 8 (IxlRetCodeParmError) and reason code    * 00322400
*              xxxx0828 (IxlRsnCodeCOUnchanged).                      * 00322500
*                                                                     * 00322600
*                                                                     * 00322700
*                                                                     * 00322800
*          DEFAULT: NO_ADJAREA                                        * 00322900
*                                                                     * 00323000
*                                                                     * 00323100
*                                                                     * 00323200
*                                                                     * 00323300
*      [STGCLASS=xstgclass|NO_STGCLASS]                             * 00323400
*          is the name (RS-type), or address in register (2)-(12), of * 00323500
*          an optional byte input field that contains the storage     * 00323600
*          class for the data entry being read or written, for which  * 00323700
*          storage class a reclaim vector is to be activated or       * 00323800
*          deactivated, to indicate which storage class is affected   * 00323900
*          by reference processing, or to indicate which storage      * 00324000
*          class statistics should be reported for.                   * 00324100
*                                                                     * 00324200
*          STGCLASS is required for READ_DATA, WRITE_DATA,            * 00324300
*          PROCESS_REFLIST, SET_RECLVCTR, and READ_STGSTATS requests. * 00324400
*          It is mutually exclusive with all other request types.     * 00324500
*                                                                     * 00324600
*          DEFAULT: NO_STGCLASS                                       * 00324700
*                                                                     * 00324800
*                                                                     * 00324900
*                                                                     * 00325000
*                                                                     * 00325100
*      [COCLASS=xcoclass|NO_COCLASS]                                * 00325200
*          is the name (RS-type), or address in register (2)-(12), of * 00325300
*          an optional halfword input field that contains the         * 00325400
*          cast-out class number for the data entry being written, or * 00325500
*          for which cast-out class directory entry names and         * 00325600
*          directory entry user data should be retrieved.             * 00325700
*                                                                     * 00325800
*          COCLASS is required for WRITE_DATA requests when           * 00325900
*          CHANGED=YES is also specified, and for READ_COCLASS        * 00326000
*          requests.  It is mutually exclusive with all other request * 00326100
*          types.                                                     * 00326200
*                                                                     * 00326300
*          DEFAULT: NO_COCLASS                                        * 00326400
*                                                                     * 00326500
*                                                                     * 00326600
*                                                                     * 00326700
*                                                                     * 00326800
*      [VECTORINDEX=xvectorindex|NO_VECTORINDEX]                    * 00326900
*          is the name (RS-type), or address in register (2)-(12), of * 00327000
*          an optional fullword input field that contains the index   * 00327100
*          into the local cache vector for CONTOKEN for the entry     * 00327200
*          specified by NAME.  For structures allocated in CFLEVEL=4  * 00327300
*          or lower coupling facilities, VECTORINDEX is required for  * 00327400
*          READ_DATA requests, WRITE_DATA requests when WHENREG=NO,   * 00327500
*          and CASTOUT_DATA requests when REGUSER=YES.  For           * 00327600
*          structures allocated in CFLEVEL=5 or higher coupling       * 00327700
*          facilities, VECTORINDEX is required on READ_DATA requests, * 00327800
*          CASTOUT_DATA requests , and WRITE_DATA requests when       * 00327900
*          WHENREG=NO, when either REGUSER=YES or OLDNAME is          * 00328000
*          specified, Note that REGUSER=YES is the default for        * 00328100
*          READ_DATA and WRITE_DATA requests and REGUSER=NO is the    * 00328200
*          default for CASTOUT_DATA requests.                         * 00328300
*                                                                     * 00328400
*          VECTORINDEX is optional for WRITE_DATA requests when       * 00328500
*          WHENREG=YES is specified.  If VECTORINDEX is specified on  * 00328600
*          a WRITE_DATA  request with WHENREG=YES specified, and the  * 00328700
*          connection specified by CONTOKEN does not have a           * 00328800
*          registered interest in the entry with the specified vector * 00328900
*          index number, the request will be failed.  Note that       * 00329000
*          specification of VECTORINDEX in this context will be       * 00329100
*          ignored unless the structure is allocated in a coupling    * 00329200
*          facility with CFLEVEL=2 or higher.                         * 00329300
*                                                                     * 00329400
*          VECTORINDEX is mutually exclusive with all other request   * 00329500
*          types.                                                     * 00329600
*                                                                     * 00329700
*          DEFAULT: NO_VECTORINDEX                                    * 00329800
*                                                                     * 00329900
*                                                                     * 00330000
*                                                                     * 00330100
*                                                                     * 00330200
*      The following is a set of mutually exclusive keys.  This set   * 00330300
*      is optional; only one key may be specified.                    * 00330400
*                                                                     * 00330500
*                                                                     * 00330600
*          The RESTOKEN and EXTRESTOKEN keywords are input fields     * 00330700
*          that name a restart token specifying an appropriate        * 00330800
*          coupling facility indicator for resuming requests that     * 00330900
*          complete prematurely.                                      * 00331000
*                                                                     * 00331100
*          RESTOKEN and EXTRESTOKEN are optional on READ_DIRINFO,     * 00331200
*          READ_COCLASS, CROSS_INVAL, DELETE_NAME, and RESET_REFBIT   * 00331300
*          requests, and are mutually exclusive with all other        * 00331400
*          request types.                                             * 00331500
*                                                                     * 00331600
*          Specifying an input restart token initialized to all zeros * 00331700
*          causes the request to consider all directory entries as    * 00331800
*          unprocessed.  Specifying an input restart token other than * 00331900
*          one returned from a previous invocation of the request and * 00332000
*          not fully initialized to all zeros will produce            * 00332100
*          unpredictable request results.                             * 00332200
*                                                                     * 00332300
*          A restart token is returned in the answer area specified   * 00332400
*          by ANSAREA when coupling facility model dependent time out * 00332500
*          criteria has been exceeded prior to completion of the      * 00332600
*          request, or because the storage area specified by BUFFER   * 00332700
*          or the buffers specifed by BUFLIST have been exhausted     * 00332800
*          before all the directory entries matching the selected     * 00332900
*          criteria have been reported on.  If neither of these       * 00333000
*          events occurs, then the returned token will contain binary * 00333100
*          zeros.                                                     * 00333200
*                                                                     * 00333300
*          A returned restart token may be specified as input on a    * 00333400
*          subsequent request of the same type with the same request  * 00333500
*          options/values specified.  This will cause processing of   * 00333600
*          the request to resume with the appropriate structure or    * 00333700
*          directory entry.                                           * 00333800
*                                                                     * 00333900
*          Requestors who specify IXLCONN ALLOWAUTO=YES must use the  * 00334000
*          16-byte extended restart token (EXTRESTOKEN).  Users who   * 00334100
*          specify IXLCONN ALLOWAUTO=NO must use the standard 8-byte  * 00334200
*          restart tokens (RESTOKEN).                                 * 00334300
*                                                                     * 00334400
*      [RESTOKEN=xrestoken|NO_RESTOKEN                              * 00334500
*          belongs to a set of mutually exclusive keys. It is the     * 00334600
*          name (RS-type), or address in register (2)-(12), of an     * 00334700
*          optional 8 character input field that contains a restart   * 00334800
*          token specifying an appropriate coupling facility          * 00334900
*          indicator for resuming requests that complete prematurely. * 00335000
*                                                                     * 00335100
*          A restart token is returned in the CAARESTOKEN field of    * 00335200
*          the answer area specified by ANSAREA when the request      * 00335300
*          completes prematurely.                                     * 00335400
*                                                                     * 00335500
*          DEFAULT: NO_RESTOKEN                                       * 00335600
*                                                                     * 00335700
*      EXTRESTOKEN=xextrestoken|NO_EXTRESTOKEN]                     * 00335800
*          belongs to a set of mutually exclusive keys. It is the     * 00335900
*          name (RS-type), or address in register (2)-(12), of an     * 00336000
*          optional 16 character input field that contains an         * 00336100
*          extended restart token specifying an appropriate coupling  * 00336200
*          facility indicator for resuming requests that complete     * 00336300
*          prematurely.                                               * 00336400
*                                                                     * 00336500
*          A restart token is returned in the CAAEXTRESTOKEN field of * 00336600
*          the answer area specified by ANSAREA when the request      * 00336700
*          completes prematurely.  Use of the EXTRESTOKEN keyword     * 00336800
*          requires a value of ANSLEN greater than or equal to        * 00336900
*          CAALEVEL1LEN.                                              * 00337000
*                                                                     * 00337100
*          DEFAULT: NO_EXTRESTOKEN                                    * 00337200
*                                                                     * 00337300
*                                                                     * 00337400
*                                                                     * 00337500
*      End of a set of mutually exclusive optional keys.              * 00337600
*      DEFAULT: RESTOKEN                                              * 00337700
*                                                                     * 00337800
*                                                                     * 00337900
*                                                                     * 00338000
*      [MODE=SYNCSUSPEND|SYNCECB|SYNCEXIT|SYNCTOKEN|ASYNCECB|ASYNCEX * 00338100
*          IT|ASYNCTOKEN|ASYNCNORESPONSE]                            * 00338200
*          is an optional keyword input that specifies whether the    * 00338300
*          request is to be performed synchronously or                * 00338400
*          asynchronously.                                            * 00338500
*                                                                     * 00338600
*          DEFAULT: SYNCSUSPEND                                       * 00338700
*                                                                     * 00338800
*                                                                     * 00338900
*          [MODE=SYNCSUSPEND]                                         * 00339000
*              Indicates that the request will be performed           * 00339100
*              synchronously.  Control is not returned to the caller  * 00339200
*              until request processing is complete and the final     * 00339300
*              disposition determined.                                * 00339400
*                                                                     * 00339500
*              If necessary the caller will be suspended until the    * 00339600
*              request completes.  The caller must be executing in an * 00339700
*              enabled state to use this option.                      * 00339800
*                                                                     * 00339900
*                                                                     * 00340000
*          [MODE=SYNCECB                                              * 00340100
*              Indicates that the request will be attempted           * 00340200
*              synchronously.  If the request can not be completed    * 00340300
*              synchronously control is returned to the caller prior  * 00340400
*              to completion of the request, and the ECB specified by * 00340500
*              REQECB is posted when the request has completed.       * 00340600
*                                                                     * 00340700
*              When MODE=SYNCECB is specified and the request does    * 00340800
*              not complete synchronously latent XES binds to the     * 00340900
*              storage locations specified by BUFFER, BUFLIST,        * 00341000
*              STGSTATS, ADJAREA, ANSAREA and NSBAREA persist until   * 00341100
*              the REQECB ECB is posted.                              * 00341200
*                                                                     * 00341300
*                                                                     * 00341400
*              REQECB=xreqecb]                                        * 00341500
*                  is the name (RS-type), or address in register      * 00341600
*                  (2)-(12), of a required 4 byte input that contains * 00341700
*                  the address of an ECB to be posted when the        * 00341800
*                  request has completed.                             * 00341900
*                                                                     * 00342000
*                  The ECB should be initialized by the requestor     * 00342100
*                  prior to use with this service.  The ECB must      * 00342200
*                  reside either in common storage or in the home     * 00342300
*                  address space that existed at the time the         * 00342400
*                  connection service, IXLCONN, was issued for the    * 00342500
*                  structure.  Any task which waits on the ECB must   * 00342600
*                  have the same home address space as existed when   * 00342700
*                  IXLCONN was issued.                                * 00342800
*                                                                     * 00342900
*                                                                     * 00343000
*                                                                     * 00343100
*          [MODE=SYNCEXIT                                             * 00343200
*              Indicates that the request will be attempted           * 00343300
*              synchronously.  If the request can not be completed    * 00343400
*              synchronously control is returned to the caller prior  * 00343500
*              to completion of the request.  When the request        * 00343600
*              completes the connection's Complete Exit will be       * 00343700
*              called.                                                * 00343800
*                                                                     * 00343900
*              When MODE=SYNCEXIT is specified and the request does   * 00344000
*              not complete synchronously latent XES binds to the     * 00344100
*              storage locations specified by BUFFER, BUFLIST,        * 00344200
*              STGSTATS, ADJAREA, ANSAREA, and NSBAREA persist until  * 00344300
*              the connection's Complete Exit is called.              * 00344400
*                                                                     * 00344500
*                                                                     * 00344600
*              [REQDATA=xreqdata|NO_REQDATA]]                       * 00344700
*                  is the name (RS-type), or address in register      * 00344800
*                  (2)-(12), of an optional 8 character input         * 00344900
*                  variable that contains connected user-defined data * 00345000
*                  for the request to be passed to the Complete Exit  * 00345100
*                  when driven.  The contents of REQDATA has no       * 00345200
*                  meaning to the system.                             * 00345300
*                                                                     * 00345400
*                  DEFAULT: NO_REQDATA                                * 00345500
*                                                                     * 00345600
*                                                                     * 00345700
*                                                                     * 00345800
*          [MODE=SYNCTOKEN                                            * 00345900
*              Indicates that the request will be attempted           * 00346000
*              synchronously.  If the request can not be completed    * 00346100
*              synchronously control is returned to the caller prior  * 00346200
*              to completion of the request and a token that uniquely * 00346300
*              identifies the request is returned.                    * 00346400
*                                                                     * 00346500
*              When MODE=SYNCTOKEN is specified and the request does  * 00346600
*              not complete synchronously latent XES binds to the     * 00346700
*              storage locations specified by BUFFER, BUFLIST,        * 00346800
*              STGSTATS, ADJAREA, ANSAREA, and NSBAREA persist until  * 00346900
*              a subsequent corresponding IXLFCOMP request indicates  * 00347000
*              request completion.                                    * 00347100
*                                                                     * 00347200
*                                                                     * 00347300
*              REQTOKEN=xreqtoken]                                    * 00347400
*                  is a required output.  It is the name (RS-type),   * 00347500
*                  or address in register (2)-(12), of a 16 character * 00347600
*                  field into which is stored a token that uniquely   * 00347700
*                  identifies this request.                           * 00347800
*                                                                     * 00347900
*                  This token must be specified on a subsequent       * 00348000
*                  invocation of IXLFCOMP to force completion of the  * 00348100
*                  request and determine its final disposition.       * 00348200
*                                                                     * 00348300
*                                                                     * 00348400
*                                                                     * 00348500
*          [MODE=ASYNCECB                                             * 00348600
*              Indicates that the request is to be initiated and      * 00348700
*              control is to be returned to the caller prior to       * 00348800
*              completion of the request.  When the request completes * 00348900
*              the ECB specified by REQECB will be posted.            * 00349000
*                                                                     * 00349100
*              When MODE=ASYNCECB is specified latent XES binds to    * 00349200
*              the storage locations specified by BUFFER, BUFLIST,    * 00349300
*              STGSTATS, ADJAREA, ANSAREA, and NSBAREA persist until  * 00349400
*              the REQECB ECB is posted.                              * 00349500
*                                                                     * 00349600
*                                                                     * 00349700
*              REQECB=xreqecb]                                        * 00349800
*                  is the name (RS-type), or address in register      * 00349900
*                  (2)-(12), of a required 4 byte input that contains * 00350000
*                  the address of an ECB to be posted when the        * 00350100
*                  request has completed.                             * 00350200
*                                                                     * 00350300
*                  The ECB should be initialized by the requestor     * 00350400
*                  prior to use with this service.  The ECB must      * 00350500
*                  reside either in common storage or in the home     * 00350600
*                  address space that existed at the time the         * 00350700
*                  connection service, IXLCONN, was issued for the    * 00350800
*                  structure.  Any task which waits on the ECB must   * 00350900
*                  have the same home address space as existed when   * 00351000
*                  IXLCONN was issued.                                * 00351100
*                                                                     * 00351200
*                                                                     * 00351300
*                                                                     * 00351400
*          [MODE=ASYNCEXIT                                            * 00351500
*              Indicates that the request is to be initiated and      * 00351600
*              control is to be returned to the caller prior to       * 00351700
*              completion of the request.  When the request completes * 00351800
*              the connection's Complete Exit will be called.         * 00351900
*                                                                     * 00352000
*              When MODE=ASYNCEXIT is specified latent XES binds to   * 00352100
*              the storage locations specified by BUFFER, BUFLIST,    * 00352200
*              STGSTATS, ADJAREA, ANSAREA, and NSBAREA persist until  * 00352300
*              the connection's Complete Exit is called.              * 00352400
*                                                                     * 00352500
*                                                                     * 00352600
*              [REQDATA=xreqdata|NO_REQDATA]]                       * 00352700
*                  is the name (RS-type), or address in register      * 00352800
*                  (2)-(12), of an optional 8 character input         * 00352900
*                  variable that contains connected user-defined data * 00353000
*                  for the request to be passed to the Complete Exit  * 00353100
*                  when driven.  The contents of REQDATA has no       * 00353200
*                  meaning to the system.                             * 00353300
*                                                                     * 00353400
*                  DEFAULT: NO_REQDATA                                * 00353500
*                                                                     * 00353600
*                                                                     * 00353700
*                                                                     * 00353800
*          [MODE=ASYNCTOKEN                                           * 00353900
*              Indicates that the request is to be initiated, a token * 00354000
*              generated that uniquely identifies the request on this * 00354100
*              system, and control returned to the caller prior to    * 00354200
*              completion of the requested operation.                 * 00354300
*                                                                     * 00354400
*              When MODE=ASYNCTOKEN is specified latent XES binds to  * 00354500
*              the storage locations specified by BUFFER, BUFLIST,    * 00354600
*              STGSTATS, ADJAREA, ANSAREA, and NSBAREA persist until  * 00354700
*              a subsequent corresponding IXLFCOMP request indicates  * 00354800
*              request completion.                                    * 00354900
*                                                                     * 00355000
*                                                                     * 00355100
*              REQTOKEN=xreqtoken]                                    * 00355200
*                  is a required output.  It is the name (RS-type),   * 00355300
*                  or address in register (2)-(12), of a 16 character * 00355400
*                  field into which is stored a token that uniquely   * 00355500
*                  identifies this request.                           * 00355600
*                                                                     * 00355700
*                  This token must be specified on a subsequent       * 00355800
*                  invocation of IXLFCOMP to force completion of the  * 00355900
*                  request and determine its final disposition.       * 00356000
*                                                                     * 00356100
*                                                                     * 00356200
*                                                                     * 00356300
*          [MODE=ASYNCNORESPONSE]                                     * 00356400
*              Indicates that the request is to be initiated and      * 00356500
*              control returned to the caller prior to completion of  * 00356600
*              the requested operation.  No asynchronous request      * 00356700
*              token is returned, hence no external mechanism exists  * 00356800
*              to force completion of the request.                    * 00356900
*                                                                     * 00357000
*              MODE=ASYNCNORESPONSE may only be specified for         * 00357100
*              SET_RECLVCTR requests.                                 * 00357200
*                                                                     * 00357300
*                                                                     * 00357400
*                                                                     * 00357500
*                                                                     * 00357600
*                                                                     * 00357700
*                                                                     * 00357800
*      [ANSAREA=xansarea|NO_ANSAREA                                 * 00357900
*          is an optional input.  It is the name (RS-type), or        * 00358000
*          address in register (2)-(12), of a virtual storage area,   * 00358100
*          called the answer area, in which command response          * 00358200
*          information will be placed.  The format of the answer area * 00358300
*          is described by the IXLYCAA mapping macro.                 * 00358400
*                                                                     * 00358500
*          ANSAREA is required when a MODE value of SYNCTOKEN or      * 00358600
*          ASYNCTOKEN is specified.  ANSAREA may be specified in      * 00358700
*          conjunction with any type of IXLCACHE request, although    * 00358800
*          not all fields in the answer area are applicable to all    * 00358900
*          request types.                                             * 00359000
*                                                                     * 00359100
*          ANSAREA is ignored whenever ASYNC=NORESPONSE is also       * 00359200
*          specified.                                                 * 00359300
*                                                                     * 00359400
*          DEFAULT: NO_ANSAREA                                        * 00359500
*                                                                     * 00359600
*                                                                     * 00359700
*          ANSLEN=xanslen]                                            * 00359800
*              is the name (RS-type), or address in register          * 00359900
*              (2)-(12), of a required halfword input field that      * 00360000
*              contains the length of the answer area specified by    * 00360100
*              ANSAREA.  The answer area length must be at least      * 00360200
*              large enough to accomodate the level of the IXLYCAA    * 00360300
*              mapping appropriate to the requested function.  The    * 00360400
*              following table specifies required answer area length  * 00360500
*              as a function of PLISTVER.  Length constants are       * 00360600
*              defined in IXLYCAA.                                    * 00360700
*                                                                     * 00360800
*                                                                     * 00360900
*              PLISTVER      MINIMUM ANSWER AREA LENGTH               * 00361000
*                                                                     * 00361100
*              0 - 3         CaaLevel0Len                             * 00361200
*                                                                     * 00361300
*              4 - 5         CaaLevel1Len                             * 00361400
*                                                                     * 00361500
*                                                                     * 00361600
*                                                                     * 00361700
*              DEFAULT: NO_ANSLEN                                     * 00361800
*                                                                     * 00361900
*                                                                     * 00362000
*                                                                     * 00362100
*                                                                     * 00362200
*                                                                     * 00362300
*                                                                     * 00362400
*      [RETCODE=xretcode]                                             * 00362500
*          is the name (RS-type) of an optional fullword output       * 00362600
*          variable, or register (2)-(12), into which the return code * 00362700
*          is to be copied from GPR 15.                               * 00362800
*                                                                     * 00362900
*                                                                     * 00363000
*                                                                     * 00363100
*                                                                     * 00363200
*      [RSNCODE=xrsncode]                                             * 00363300
*          is the name (RS-type) of an optional fullword output       * 00363400
*          variable, or register (2)-(12), into which the reason code * 00363500
*          is to be copied from GPR 0.                                * 00363600
*                                                                     * 00363700
*                                                                     * 00363800
*                                                                     * 00363900
*                                                                     * 00364000
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00364100
*          is an optional byte input decimal value in the "0-5" range * 00364200
*          that specifies the macro version.  PLISTVER is the only    * 00364300
*          key allowed on the list form of MF and determines which    * 00364400
*          parameter list is generated.  The macro keys associated    * 00364500
*          with each supported version of the macro are listed in     * 00364600
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00364700
*          instead of a number, and the parameter list will be of the * 00364800
*          largest size currently supported. This size may grow from  * 00364900
*          release to release (thus possibly affecting the amount of  * 00365000
*          storage needed by your program).  If your program can      * 00365100
*          tolerate this, IBM recommends that you always specify MAX  * 00365200
*          when creating the list form parameter list as that will    * 00365300
*          ensure that the list form parameter list is always long    * 00365400
*          enough to hold whatever parameters might be specified on   * 00365500
*          the execute form.                                          * 00365600
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00365700
*          default is the lowest version which allows all of the      * 00365800
*          parameters specified on the invocation to be processed.    * 00365900
*                                                                     * 00366000
*                                                                     * 00366100
*                                                                     * 00366200
*                                                                     * 00366300
*      [MF=S|L|E]                                                   * 00366400
*          is an optional keyword input which specifies the macro     * 00366500
*          form.                                                      * 00366600
*          DEFAULT: S                                                 * 00366700
*                                                                     * 00366800
*                                                                     * 00366900
*          [MF=S]                                                     * 00367000
*              specifies the standard form of the macro.  The "S"     * 00367100
*              form generates code to put the parameters into an      * 00367200
*              in-line parameter list and invoke the desired service. * 00367300
*              Full checking for required macro keys is done along    * 00367400
*              with supplying defaults for omitted optional           * 00367500
*              parameters.                                            * 00367600
*                                                                     * 00367700
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00367800
*              specifies the list form of the macro.  The "L" form    * 00367900
*              defines an area to be used for the parameter list.     * 00368000
*              Only the PLISTVER key may be specified on the          * 00368100
*              invocation.  All other macro parameters are flagged as * 00368200
*              errors.  If PLISTVER is not specified, the original    * 00368300
*              parameter list definition is used.                     * 00368400
*                                                                     * 00368500
*            ,xmfctrl                                                 * 00368600
*              is a required input.  It is the name of a storage area * 00368700
*              for the parameter list.                                * 00368800
*                                                                     * 00368900
*            ,xmfattr|0D                                            * 00369000
*              is an optional 60 character input string that varies   * 00369100
*              from 1 to 60 characters. Use it to force boundary      * 00369200
*              alignment of the parameter list. Use only 0F or 0D.    * 00369300
*              DEFAULT: 0D which forces the parameter list to a       * 00369400
*              doubleword boundary.                                   * 00369500
*                                                                     * 00369600
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00369700
*              specifies the execute form of the macro.  The "E" form * 00369800
*              generates code to put the parameters into the          * 00369900
*              parameter list specified by xmfctrl and provides full  * 00370000
*              syntax checking with default setting.                  * 00370100
*                                                                     * 00370200
*            ,xmfctrl                                                 * 00370300
*              is a required input.  It is the name (RS-type), or     * 00370400
*              address in register (1)-(12), of a storage area for    * 00370500
*              the parameter list.                                    * 00370600
*                                                                     * 00370700
*            ,COMPLETE                                              * 00370800
*              is an optional keyword input which specifies the       * 00370900
*              degree of macro parameter syntax checking.             * 00371000
*              DEFAULT: COMPLETE                                      * 00371100
*                                                                     * 00371200
*                                                                     * 00371300
*              COMPLETE                                               * 00371400
*                  Checking for required macro keys is done and       * 00371500
*                  defaults are supplied for omitted optional         * 00371600
*                  parameters.                                        * 00371700
*                                                                     * 00371800
*                                                                     * 00371900
*                                                                     * 00372000
*                                                                     * 00372100
*                                                                     * 00372200
*                                                                     * 00372300
*                                                                     * 00372400
*01* RETURN CODES:                                                    * 00372500
*                                                                     * 00372600
*                                                                     * 00372700
*       0         IxlRetCodeOk:  Successful completion.               * 00372800
*                                                                     * 00372900
*                 If a MODE value of ASYNCECB, ASYNCEXIT, ASYNCTOKEN, * 00373000
*                 or ASYNCNORESPONSE was specified then the request   * 00373100
*                 has been successfully initiated.                    * 00373200
*                                                                     * 00373300
*                                                                     * 00373400
*       4         IxlRetCodeWarning:  Warning.  The request           * 00373500
*                 completed, but with exceptional circumstances.      * 00373600
*                                                                     * 00373700
*                 HEX REASON  MEANING                                 * 00373800
*                 CODE                                                * 00373900
*                                                                     * 00374000
*                                                                     * 00374100
*                 xxxx0402    IxlRsnCodeAsynch:  The request could    * 00374200
*                             not be completed synchronously.  It     * 00374300
*                             will be completed asynchronously.       * 00374400
*                                                                     * 00374500
*                             If MODE=SYNCECB was specified the ECB   * 00374600
*                             specifed for REQECB will be posted when * 00374700
*                             the request has finished.               * 00374800
*                                                                     * 00374900
*                             If MODE=SYNCEXIT was specified the      * 00375000
*                             connection's completion exit will be    * 00375100
*                             given control when the request has      * 00375200
*                             finished.                               * 00375300
*                                                                     * 00375400
*                             If MODE=SYNCTOKEN was specified the     * 00375500
*                             answer area contains an asynchronous    * 00375600
*                             request token which may be used on the  * 00375700
*                             IXLFCOMP macro to determine when the    * 00375800
*                             request has finished.                   * 00375900
*                                                                     * 00376000
*                 xxxx0409    IxlRsnCodeTimeout:  A REG_NAMELIST,     * 00376100
*                             READ_DIRINFO, READ_COCLASS,             * 00376200
*                             DELETE_NAME, DELETE_NAMELIST,           * 00376300
*                             CROSS_INVAL, UNLOCK_CASTOUT, or         * 00376400
*                             RESET_REFBIT request has completed      * 00376500
*                             prematurely due to a model-dependent    * 00376600
*                             timeout condition.                      * 00376700
*                                                                     * 00376800
*                             For READ_DIRINFO and READ_COCLASS       * 00376900
*                             requests, the number of reliable        * 00377000
*                             directory or name elements,             * 00377100
*                             respectively, and a token for           * 00377200
*                             restarting the request have been        * 00377300
*                             returned in the answer area.            * 00377400
*                                                                     * 00377500
*                             For REG_NAMELIST requests, the index of * 00377600
*                             the first unprocessed registration      * 00377700
*                             block has been returned in the answer   * 00377800
*                             area.  All prior registration blocks    * 00377900
*                             have been processed.                    * 00378000
*                                                                     * 00378100
*                             For UNLOCK_CASTOUT requests, the index  * 00378200
*                             of the first unprocessed name element   * 00378300
*                             has been returned in the answer area.   * 00378400
*                                                                     * 00378500
*                             For all other request types a token for * 00378600
*                             restarting the request has been         * 00378700
*                             returned in the answer area.            * 00378800
*                                                                     * 00378900
*                 xxxx040A    IxlRsnCodeNoReadData:  A READ_DATA      * 00379000
*                             request may have caused interest to be  * 00379100
*                             registered in the entry, but there was  * 00379200
*                             no cached subsystem data for NAME or    * 00379300
*                             data existed but the read was           * 00379400
*                             suppressed, hence no data was returned  * 00379500
*                             in BUFFER or BUFLIST.  If the structure * 00379600
*                             entry contained data and adjunct, and   * 00379700
*                             ADJAREA was specified, then the adjunct * 00379800
*                             was returned and the CaaAdjareaValid    * 00379900
*                             bit in the ANSAREA was set to '1'. If   * 00380000
*                             adjunct data did not exist then the     * 00380100
*                             CaaAdjareaValid bit was set to '0'.     * 00380200
*                                                                     * 00380300
*                 xxxx040B    IxlRsnCodeHighCOEnd:  The specified     * 00380400
*                             COCLASSE on a READ_COSTATS request      * 00380500
*                             exceeds the maximum defined castout     * 00380600
*                             class for the structure.  A subrange of * 00380700
*                             classes through the maximum defined     * 00380800
*                             class was reported on.                  * 00380900
*                                                                     * 00381000
*                 xxxx040C    IxlRsnCodeNoAdjunctData:  A READ_DATA   * 00381100
*                             or CASTOUT_DATA request specified that  * 00381200
*                             adjunct data was to be read, but the    * 00381300
*                             structure does not support adjunct      * 00381400
*                             areas.  The cached subsystem data was   * 00381500
*                             retrieved if requested.                 * 00381600
*                                                                     * 00381700
*                 xxxx040D    IxlRsnCodeBadReadAdjData:  A READ_DATA  * 00381800
*                             or CASTOUT_DATA request specified that  * 00381900
*                             adjunct data was to be read, but the    * 00382000
*                             provided storage area for adjunct data  * 00382100
*                             is not addressable.  The subsystem data * 00382200
*                             was retrieved if requested.             * 00382300
*                                                                     * 00382400
*                 xxxx040F    IxlRsnCodeBufferFull:  A READ_DIRINFO,  * 00382500
*                             READ_COCLASS, or READ_COSTATS request   * 00382600
*                             has completed prematurely due to a      * 00382700
*                             buffer full condition.                  * 00382800
*                                                                     * 00382900
*                             For READ_DIRINFO and READ_COCLASS       * 00383000
*                             requests, the number of reliable        * 00383100
*                             directory or name elements,             * 00383200
*                             respectively, and a token for           * 00383300
*                             restarting the request have been        * 00383400
*                             returned in the answer area.            * 00383500
*                                                                     * 00383600
*                             For READ_COSTATS requests, a subrange   * 00383700
*                             of the requested cast-out classes was   * 00383800
*                             reported on, as specified in the        * 00383900
*                             IXLYCCIH mapping macro.                 * 00384000
*                                                                     * 00384100
*                 xxxx0414    IxlRsnCodeRclVctrNotSet:  An IXLCACHE   * 00384200
*                             request to set the reclaim vector was   * 00384300
*                             not performed because either the        * 00384400
*                             structure size or the entry-to-element  * 00384500
*                             ratio is being changed via IXLALTER.    * 00384600
*                                                                     * 00384700
*                                                                     * 00384800
*                                                                     * 00384900
*                                                                     * 00385000
*       8         IxlRetCodeParmError:  Error.  The request cannot be * 00385100
*                 completed due to a user error.                      * 00385200
*                                                                     * 00385300
*                 HEX REASON  MEANING                                 * 00385400
*                 CODE                                                * 00385500
*                                                                     * 00385600
*                                                                     * 00385700
*                 xxxx0801    IxlRsnCodeBadParmlist:  The IXLCACHE    * 00385800
*                             parameter list is not addressable.      * 00385900
*                                                                     * 00386000
*                 xxxx0804    IxlRsnCodeBadVersion#:  The version     * 00386100
*                             number in the parameter list is not     * 00386200
*                             valid.  This usually indicates that the * 00386300
*                             level of the macro is incompatible with * 00386400
*                             the level of the XES service code.      * 00386500
*                                                                     * 00386600
*                 xxxx080A    IxlRsnCodeBadContoken:  Invalid         * 00386700
*                             contoken specified.  The contoken is    * 00386800
*                             invalid for one of the following        * 00386900
*                             reasons:  disconnect has occurred, EOT  * 00387000
*                             of the connector's task, input contoken * 00387100
*                             is not the contoken returned from       * 00387200
*                             IXLCONN, the request was issued outside * 00387300
*                             the connector's address space, or the   * 00387400
*                             contoken has been invalidated for       * 00387500
*                             rebuild.                                * 00387600
*                                                                     * 00387700
*                 xxxx0819    IxlRsnCodeBadVectorOp:  On a READ_DATA, * 00387800
*                             WRITE_DATA, or CASTOUT_DATA request, a  * 00387900
*                             local cache bit vector operation failed * 00388000
*                             because the specified VECTORINDEX is    * 00388100
*                             invalid.  Request processing was        * 00388200
*                             suppressed.  On a REG_NAMELIST request, * 00388300
*                             a local cache bit vector operation      * 00388400
*                             failed because the vector index         * 00388500
*                             specified in one of the registration    * 00388600
*                             blocks is invalid.  The index of the    * 00388700
*                             registration block containing the first * 00388800
*                             invalid vector index is returned in the * 00388900
*                             ANSAREA  None of the specified          * 00389000
*                             registration blocks were processed      * 00389100
*                             (processing of the entire command was   * 00389200
*                             suppressed).                            * 00389300
*                                                                     * 00389400
*                 xxxx081E    IxlRsnCodeBadCoLockState:  Change-bit   * 00389500
*                             overindication was specified for        * 00389600
*                             unlocking a castout lock on either an   * 00389700
*                             UNLOCK_CASTOUT request or an            * 00389800
*                             UNLOCK_CO_NAME request, but the castout * 00389900
*                             lock state indicates write with         * 00390000
*                             castout, which is incompatible.         * 00390100
*                                                                     * 00390200
*                 xxxx0824    IxlRsnCodeWrongStrType:  The connection * 00390300
*                             specified by CONTOKEN is not to a cache * 00390400
*                             structure.                              * 00390500
*                                                                     * 00390600
*                 xxxx0825    IxlRsnCodeNoEntry:  For a READ_DATA     * 00390700
*                             request with ASSIGN=NO specified, or    * 00390800
*                             for a CASTOUT_DATA request, the entry   * 00390900
*                             designated by NAME did not exist within * 00391000
*                             the structure.  For a WRITE_DATA        * 00391100
*                             request with WHENREG=YES specified,     * 00391200
*                             either the entry did not exist or the   * 00391300
*                             user's connection did not have          * 00391400
*                             registered interest in the entry.  For  * 00391500
*                             a WRITE_DATA request with WHENREG=YES   * 00391600
*                             and VECTORINDEX specified, either the   * 00391700
*                             entry did not exist or the connection   * 00391800
*                             specified by CONTOKEN did not have      * 00391900
*                             registered interest in the entry with   * 00392000
*                             the specified vector index number.  For * 00392100
*                             a WRITE_DATA request with WHENREG=NO    * 00392200
*                             and ASSIGN=NO specified, the entry did  * 00392300
*                             not exist.  For an UNLOCK_CASTOUT or    * 00392400
*                             DELETE_NAMELIST request a name element  * 00392500
*                             specified an entry name that did not    * 00392600
*                             exist in the structure.  For an         * 00392700
*                             UNLOCK_CO_NAME request the name         * 00392800
*                             specified in the CUNBAREA did not exist * 00392900
*                             in the structure.                       * 00393000
*                                                                     * 00393100
*                 xxxx0826    IxlRsnCodeIncompatState:  A WRITE_DATA  * 00393200
*                             request failed because the state of the * 00393300
*                             named data item is incompatible with    * 00393400
*                             the request.  This may be due to one of * 00393500
*                             the following conditions:               * 00393600
*                                                                     * 00393700
*                                                                     * 00393800
*                             o   CHANGED=NO was specified on a       * 00393900
*                                 WRITE_DATA request, but the data in * 00394000
*                                 the cache structure was marked as   * 00394100
*                                 changed.                            * 00394200
*                                                                     * 00394300
*                             o   GETCOLOCK=YES was specified on a    * 00394400
*                                 WRITE_DATA request, but the         * 00394500
*                                 cast-out lock was already held from * 00394600
*                                 a previous request.  The previous   * 00394700
*                                 request will be one of the          * 00394800
*                                 following:                          * 00394900
*                                                                     * 00395000
*                                                                     * 00395100
*                                 -   A CASTOUT_DATA request.         * 00395200
*                                                                     * 00395300
*                                 -   A WRITE_DATA request with       * 00395400
*                                     GETCOLOCK=YES specified, where  * 00395500
*                                     the CONTOKEN specified on the   * 00395600
*                                     previous request is not equal   * 00395700
*                                     to the CONTOKEN specified on    * 00395800
*                                     the failing WRITE_DATA request. * 00395900
*                                                                     * 00396000
*                                 -   A WRITE_DATA request with       * 00396100
*                                     GETCOLOCK=YES specified, where  * 00396200
*                                     the CONTOKEN specified on the   * 00396300
*                                     previous request was equal to   * 00396400
*                                     the CONTOKEN specified on the   * 00396500
*                                     failing WRITE_DATA request, but * 00396600
*                                     the PROCESSID specified on the  * 00396700
*                                     previous request was not equal  * 00396800
*                                     to the PROCESSID specified on   * 00396900
*                                     the failing WRITE_DATA request. * 00397000
*                                                                     * 00397100
*                                                                     * 00397200
*                                                                     * 00397300
*                                                                     * 00397400
*                                                                     * 00397500
*                 xxxx0827    IxlRsnCodeCOLockHeld:  A CASTOUT_DATA   * 00397600
*                             request found the cast-out lock for     * 00397700
*                             NAME was already held, and hence did    * 00397800
*                             not lock the entry for cast-out.  No    * 00397900
*                             subsystem data was returned in BUFFER,  * 00398000
*                             BUFLIST, or ADJAREA.                    * 00398100
*                                                                     * 00398200
*                 xxxx0828    IxlRsnCodeCOUnchanged:  A CASTOUT_DATA  * 00398300
*                             request was issued for an entry that    * 00398400
*                             did not contain changed subsystem data. * 00398500
*                             The request was denied and no data was  * 00398600
*                             returned in BUFFER, BUFLIST, or         * 00398700
*                             ADJAREA.                                * 00398800
*                                                                     * 00398900
*                 xxxx0829    IxlRsnCodeBadUnlockVal:  For an         * 00399000
*                             UNLOCK_CASTOUT request, the request     * 00399100
*                             encountered a name element for which    * 00399200
*                             the cast-out lock was not held for the  * 00399300
*                             connection specified by CONTOKEN, and   * 00399400
*                             optionally the PROCESSID.  Processing   * 00399500
*                             was halted with this name element.  For * 00399600
*                             an UNLOCK_CO_NAME request, the cast-out * 00399700
*                             lock was not held for the connection    * 00399800
*                             specified by CONTOKEN, and optionally   * 00399900
*                             the PROCESSID.                          * 00400000
*                                                                     * 00400100
*                 xxxx082A    IxlRsnCodeBadCOBeg:  The specified      * 00400200
*                             COCLASSB on a READ_COSTATS request      * 00400300
*                             exceeds the maximum defined cast-out    * 00400400
*                             class for the structure.                * 00400500
*                                                                     * 00400600
*                 xxxx082B    IxlRsnCodeBadIDIndex:  On an            * 00400700
*                             UNLOCK_CASTOUT request, either an       * 00400800
*                             invalid FIRSTNAME or invalid LASTNAME   * 00400900
*                             was specified.  The index of the first  * 00401000
*                             name element which was not processed is * 00401100
*                             returned in the answer area.  On a      * 00401200
*                             DELETE_NAMELIST request the value       * 00401300
*                             specified for STARTINDEX or ENDINDEX is * 00401400
*                             not valid. ENDINDEX must be greater     * 00401500
*                             than or or equal to STARTINDEX.         * 00401600
*                                                                     * 00401700
*                 xxxx082D    IxlRsnCodeBadStgClass:  On a READ_DATA, * 00401800
*                             WRITE_DATA, PROCESS_REFLIST,            * 00401900
*                             SET_RECLVCTR, or READ_STGSTATS request, * 00402000
*                             STGCLASS specifies a storage class      * 00402100
*                             exceeding the maximum defined storage   * 00402200
*                             class for the structure.  On a          * 00402300
*                             REG_NAMELIST request, one of the        * 00402400
*                             registration blocks specified a storage * 00402500
*                             class that exceeded the maximum defined * 00402600
*                             storage class for the structure.  The   * 00402700
*                             ANSAREA contains the index of the       * 00402800
*                             registration block for which the error  * 00402900
*                             was encountered.  The preceding         * 00403000
*                             registration blocks were processed.     * 00403100
*                                                                     * 00403200
*                 xxxx082E    IxlRsnCodeBadCOClass:  COCLASS          * 00403300
*                             specifies a cast-out class exceeding    * 00403400
*                             the maximum defined cast-out class for  * 00403500
*                             the structure.                          * 00403600
*                                                                     * 00403700
*                 xxxx082F    IxlRsnCodeBadParity:  For a WRITE_DATA  * 00403800
*                             request, the specified PARITY value was * 00403900
*                             invalid.  For an UNLOCK_CASTOUT         * 00404000
*                             request, the parity bits in a name      * 00404100
*                             element were invalid.  For an           * 00404200
*                             UNLOCK_CO_NAME request, the parity bits * 00404300
*                             for the name specified in the CUNBAREA  * 00404400
*                             were invalid.                           * 00404500
*                                                                     * 00404600
*                 xxxx0830    IxlRsnCodeBadNumNames:  A               * 00404700
*                             PROCESS_REFLIST request specified a     * 00404800
*                             NUMNAMES value which is not valid.      * 00404900
*                                                                     * 00405000
*                 xxxx0832    IxlRsnCodeNoRclvctr:  A SET_RECLVCTR    * 00405100
*                             request specified a REPEAT value        * 00405200
*                             greater than 0, but no RECLVCTR storage * 00405300
*                             area was specified.                     * 00405400
*                                                                     * 00405500
*                 xxxx0833    IxlRsnCodeBadPgblAttr:  The storage     * 00405600
*                             area specified by BUFFER, or one of the * 00405700
*                             buffers in the BUFLIST list is          * 00405800
*                             specified as being pageable, but is     * 00405900
*                             not.                                    * 00406000
*                                                                     * 00406100
*                 xxxx0834    IxlRsnCodeBadNonPgblAttr:  The storage  * 00406200
*                             area specified by BUFFER, or one of the * 00406300
*                             buffers in the BUFLIST list is          * 00406400
*                             specified as being non-pageable, but is * 00406500
*                             pageable.                               * 00406600
*                                                                     * 00406700
*                 xxxx0835    IxlRsnCodeBadDataAddr:  The storage     * 00406800
*                             area specified by BUFFER or one of the  * 00406900
*                             buffers in the BUFLIST list is not      * 00407000
*                             addressable.                            * 00407100
*                                                                     * 00407200
*                 xxxx0836    IxlRsnCodeBadRealAddr:  Real storage    * 00407300
*                             addresses were provided in a BUFLIST    * 00407400
*                             list.  One of the buffers is not        * 00407500
*                             addressable in central storage.         * 00407600
*                                                                     * 00407700
*                 xxxx0837    IxlRsnCodeBadWriteAdjData:  A           * 00407800
*                             WRITE_DATA specified that adjunct data  * 00407900
*                             was to be written, but the provided     * 00408000
*                             storage area for adjunct data is not    * 00408100
*                             addressable.  The request was           * 00408200
*                             suppressed.                             * 00408300
*                                                                     * 00408400
*                 xxxx0838    IxlRsnCodeBadAnsArea:  The storage area * 00408500
*                             specified by ANSAREA and ANSLEN is not  * 00408600
*                             addressable.                            * 00408700
*                                                                     * 00408800
*                 xxxx0839    IxlRsnCodeBadReqTokenArea:  The storage * 00408900
*                             area specified by REQTOKEN is not       * 00409000
*                             addressable.                            * 00409100
*                                                                     * 00409200
*                 xxxx083D    IxlRsnCodeBadAnsLen:  The length of the * 00409300
*                             answer area, as specified by ANSLEN, is * 00409400
*                             not sufficient for providing answer     * 00409500
*                             area information.                       * 00409600
*                                                                     * 00409700
*                 xxxx083F    IxlRsnCodeBadEntryVersion:  The         * 00409800
*                             specified structure entry has a version * 00409900
*                             number which does not meet the criteria * 00410000
*                             specified in the request.  The          * 00410100
*                             structure entry version number is       * 00410200
*                             returned in the answer area.            * 00410300
*                                                                     * 00410400
*                 xxxx0849    IxlRsnCodeBadResToken:  The specified   * 00410500
*                             RESTOKEN does not resolve to an         * 00410600
*                             appropriate entry to resume the         * 00410700
*                             request.  Possible causes are:          * 00410800
*                                                                     * 00410900
*                                                                     * 00411000
*                             o   For a READ_COCLASS request it may   * 00411100
*                                 be that the entry to be resumed on  * 00411200
*                                 no longer resides in the cast-out   * 00411300
*                                 class specified by COCLASS.         * 00411400
*                                                                     * 00411500
*                             o   The specified token does not        * 00411600
*                                 correspond to a previous            * 00411700
*                                 prematurely-completed request.      * 00411800
*                                                                     * 00411900
*                             o   The user specified RESTOKEN when    * 00412000
*                                 EXTRESTOKEN was required.           * 00412100
*                                                                     * 00412200
*                             o   The user specified EXTRESTOKEN when * 00412300
*                                 RESTOKEN was required.              * 00412400
*                                                                     * 00412500
*                                                                     * 00412600
*                                                                     * 00412700
*                 xxxx0851    IxlRsnCodeNoSuspenDisable:  A request   * 00412800
*                             specifying MODE=SYNCSUSPEND failed      * 00412900
*                             because the caller is disabled and      * 00413000
*                             cannot be suspended.                    * 00413100
*                                                                     * 00413200
*                 xxxx0864    IxlRsnCodeBadBufSize:  The specified    * 00413300
*                             buffer area is not large enough to      * 00413400
*                             contain the data being read.  No data   * 00413500
*                             is returned.                            * 00413600
*                                                                     * 00413700
*                 xxxx0865    IxlRsnCodeBadBufSpec:  The buffer       * 00413800
*                             specification is in error.  Refer to    * 00413900
*                             the BUFFER or BUFLIST specification     * 00414000
*                             requirements.                           * 00414100
*                                                                     * 00414200
*                 xxxx0866    IxlRsnCodeBadBufKey:  The buffer        * 00414300
*                             storage key is incorrect.  For requests * 00414400
*                             which write CF data the data cannot be  * 00414500
*                             fetched.  For requests which read CF    * 00414600
*                             data the data cannot be stored.         * 00414700
*                                                                     * 00414800
*                 xxxx0867    IxlRsnCodeBadBufList:  The storage area * 00414900
*                             specified by BUFLIST is not             * 00415000
*                             addressable.                            * 00415100
*                                                                     * 00415200
*                 xxxx0868    IxlRsnCodeBadReclVctr:  The storage     * 00415300
*                             area specified by RECLVCTR is not       * 00415400
*                             addressable.                            * 00415500
*                                                                     * 00415600
*                 xxxx0869    IxlRsnCodeBadStgStats:  The storage     * 00415700
*                             area specified by STGSTATS is not       * 00415800
*                             addressable.                            * 00415900
*                                                                     * 00416000
*                 xxxx086A    IxlRsnCodeBadElemNum:  The value        * 00416100
*                             specified for ELEMNUM is not valid.     * 00416200
*                                                                     * 00416300
*                 xxxx0874    IxlRsnCodeBadRNLIndex:  The value       * 00416400
*                             specified for either STARTINDEX or      * 00416500
*                             ENDINDEX is not valid.                  * 00416600
*                                                                     * 00416700
*                 xxxx0875    IxlRsnCodeBadNSBArea:  The storage area * 00416800
*                             specified by NSBAREA is not             * 00416900
*                             addressable.                            * 00417000
*                                                                     * 00417100
*                 xxxx0887    IxlRsnCodeBadExtResToken:  The          * 00417200
*                             specified extended restart token is not * 00417300
*                             valid.  The specified token refers to   * 00417400
*                             an older instance of the target         * 00417500
*                             structure.                              * 00417600
*                                                                     * 00417700
*                                                                     * 00417800
*                                                                     * 00417900
*                                                                     * 00418000
*       C         IxlRetCodeEnvError:  Environmental problem.         * 00418100
*                                                                     * 00418200
*                 HEX REASON  MEANING                                 * 00418300
*                 CODE                                                * 00418400
*                                                                     * 00418500
*                                                                     * 00418600
*                 xxxx0C06    IxlRsnCodeNoConn:  No connectivity to   * 00418700
*                             the cache structure.  This may occur    * 00418800
*                             due to operator commands such as VARY   * 00418900
*                             PATH OFFLINE or CONFIG CHP OFFLINE or   * 00419000
*                             hardware errors such as facility or     * 00419100
*                             path failures.  The contoken will be    * 00419200
*                             invalidated.  The user should           * 00419300
*                             disconnect or rebuild.                  * 00419400
*                                                                     * 00419500
*                 xxxx0C13    IxlRsnCodeReqPurged:  Prior to          * 00419600
*                             completion of the request, the request  * 00419700
*                             was purged.  Reasons: the connector     * 00419800
*                             failed, the connector disconnected, the * 00419900
*                             requestor failed, the request was       * 00420000
*                             purged by IXLPURGE, or requests were    * 00420100
*                             purged when the connector provided an   * 00420200
*                             IXLEERSP response for the Rebuild Stop  * 00420300
*                             or Rebuild Cleanup event.               * 00420400
*                                                                     * 00420500
*                 xxxx0C14    IxlRsnCodeStatusUnknown:  The IXLCACHE  * 00420600
*                             request has completed, but the final    * 00420700
*                             disposition of the request can not be   * 00420800
*                             determined.                             * 00420900
*                                                                     * 00421000
*                 xxxx0C17    IxlRsnCodeStrFull:  READ_DATA,          * 00421100
*                             WRITE_DATA, or REG_NAMELIST processing  * 00421200
*                             needed to allocate a directory and/or   * 00421300
*                             data entry, but none was available nor  * 00421400
*                             could any be reclaimed.  On a           * 00421500
*                             REG_NAMELIST request, the ANSAREA       * 00421600
*                             contains both the index of the          * 00421700
*                             registration block which was being      * 00421800
*                             processed when the error was            * 00421900
*                             encountered, and the target storage     * 00422000
*                             class from which resources could not be * 00422100
*                             reclaimed.  All prior registration      * 00422200
*                             blocks were processed.                  * 00422300
*                                                                     * 00422400
*                 xxxx0C25    IxlRsnCodeStrFailure:  Prior to         * 00422500
*                             completion of the request, the cache    * 00422600
*                             structure failed.                       * 00422700
*                                                                     * 00422800
*                 xxxx0C68    IxlRsnCodeBadReqCFLevel:  The request   * 00422900
*                             type is not permitted for the level of  * 00423000
*                             coupling facility in which the target   * 00423100
*                             structure is allocated.                 * 00423200
*                                                                     * 00423300
*                 xxxx0CA0    IxlRsnCodeQuiescedSuspendFail:  The     * 00423400
*                             request is failed because the structure * 00423500
*                             is quiesced for a system-managed        * 00423600
*                             process and SUSPEND=FAIL is specified   * 00423700
*                             on the IXLCONN.                         * 00423800
*                                                                     * 00423900
*                 xxxxFFFF    IxlRsnCodeNotAvailable:  XES functions  * 00424000
*                             are not available.  This can be because * 00424100
*                             the hardware necessary to provide XES   * 00424200
*                             function is not present.                * 00424300
*                                                                     * 00424400
*                                                                     * 00424500
*                                                                     * 00424600
*                                                                     * 00424700
*       10        IxlRetCodeCompError:  XES processing failure.  The  * 00424800
*                 state of the involved structure and the disposition * 00424900
*                 of the request are unpredictable.                   * 00425000
*                                                                     * 00425100
*                                                                     * 00425200
*                                                                     * 00425300
*01* REASON CODES:                                                    * 00425400
*                                                                     * 00425500
*       Reason codes, as appropriate, are defined under their         * 00425600
*       corresponding return code.  Reason code and return code       * 00425700
*       constants are defined within IXLYCON.                         * 00425800
*                                                                     * 00425900
*01* MODULE TYPE:  ASSEM MACRO                                        * 00426000
*                                                                     * 00426100
*02*   PROCESSOR:  ASSEM                                              * 00426200
*                                                                     * 00426300
*01* COMPONENT:  SCIXL                                                * 00426400
*                                                                     * 00426500
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00426600
*                                                                     * 00426700
*01* MACRO USAGE NOTES:                                               * 00426800
*                                                                     * 00426900
*                                                                     * 00427000
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00427100
*        global macro variable.  Any value other than 'NO' will       * 00427200
*        result in the macro expansion being printed.  The default is * 00427300
*        'YES'.  The following examples illustrate how the ZPRINT     * 00427400
*        variable should be set.                                      * 00427500
*                                                                     * 00427600
*                    GBLC &ZPRINT                                     * 00427700
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00427800
*                                                                     * 00427900
*                                                                     * 00428000
*    2.  The IXLCACHE macro supports multiple versions. The macro key * 00428100
*        list  below  contains the version level in which the key was * 00428200
*        first  introduced.  Positionals  are  identified by the word * 00428300
*        'Positional'  followed by the numeric value of its position. * 00428400
*        Nested  positionals  are  preceded  by their outer key.  The * 00428500
*        lowest value represents the original version and the highest * 00428600
*        value  represents  the  most  recent version of the IXLCACHE * 00428700
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00428800
*        least  as high as the highest version number of all the keys * 00428900
*        being used.                                                  * 00429000
*                                                                     * 00429100
*        VERSION   KEY                                                * 00429200
*                                                                     * 00429300
*              0      ADJAREA                                         * 00429400
*                     ANSAREA                                         * 00429500
*                     ANSLEN                                          * 00429600
*                     ASSIGN                                          * 00429700
*                     BUFADDRSIZE                                     * 00429800
*                     BUFADDRTYPE                                     * 00429900
*                     BUFALET                                         * 00430000
*                     BUFFER                                          * 00430100
*                     BUFINCRNUM                                      * 00430200
*                     BUFLIST                                         * 00430300
*                     BUFNUM                                          * 00430400
*                     BUFSIZE                                         * 00430500
*                     BUFSTGKEY                                       * 00430600
*                     CHANGED                                         * 00430700
*                     COCLASS                                         * 00430800
*                     COCLASSB                                        * 00430900
*                     COCLASSE                                        * 00431000
*                     CONTOKEN                                        * 00431100
*                     CRITERIA                                        * 00431200
*                     CROSSINVAL                                      * 00431300
*                     DIRINFOFMT                                      * 00431400
*                     ELEMNUM                                         * 00431500
*                     FIRSTNAME                                       * 00431600
*                     GETCOLOCK                                       * 00431700
*                     LASTNAME                                        * 00431800
*                     MODE                                            * 00431900
*                     NAME                                            * 00432000
*                     NAMEMASK                                        * 00432100
*                     NUMNAMES                                        * 00432200
*                     OLDNAME                                         * 00432300
*                     PAGEABLE                                        * 00432400
*                     PARITY                                          * 00432500
*                     PROCESSID                                       * 00432600
*                     RECLVCTR                                        * 00432700
*                     REGUSER                                         * 00432800
*                     REPEAT                                          * 00432900
*                     REQDATA                                         * 00433000
*                     REQECB                                          * 00433100
*                     REQID                                           * 00433200
*                     REQTOKEN                                        * 00433300
*                     REQUEST                                         * 00433400
*                     RESTOKEN                                        * 00433500
*                     STGCLASS                                        * 00433600
*                     STGSTATS                                        * 00433700
*                     USERDATA                                        * 00433800
*                     VECTORINDEX                                     * 00433900
*                     WHENREG                                         * 00434000
*              1      ENDINDEX                                        * 00434100
*                     NSBAREA                                         * 00434200
*                     STARTINDEX                                      * 00434300
*              2      CUNBAREA                                        * 00434400
*                     RETURNDATA                                      * 00434500
*              3      COSTATSFMT                                      * 00434600
*                     DELETETYPE                                      * 00434700
*                     ERRORACTION                                     * 00434800
*                     NEWVERS                                         * 00434900
*                     VERSCOMP                                        * 00435000
*                     VERSCOMPTYPE                                    * 00435100
*                     VERSUPDATE                                      * 00435200
*              4      EXTRESTOKEN                                     * 00435300
*                                                                     * 00435400
*    3.  Different parameter list versions may be generated depending * 00435500
*        on  the  value  specified  for certain keys.   The following * 00435600
*        table  summarizes  the  minimum  version required to support * 00435700
*        such  specifications.   When  specifying  PLISTVER,  be sure * 00435800
*        that it is as least as high as the highest version number of * 00435900
*        all the key values being used.                               * 00436000
*                                                                     * 00436100
*        Key              Version  Key Value                          * 00436200
*        -------------    -------  ---------------------------------- * 00436300
*        -                                                            * 00436400
*        ASSIGN           0        YES                                * 00436500
*                                  NO with REQUEST=READ_DATA          * 00436600
*                         1        same as 0                          * 00436700
*                         2        same as 1                          * 00436800
*                         3        same as 2                          * 00436900
*                         4        same as 3                          * 00437000
*                         5        YES                                * 00437100
*                                  NO with REQUEST=READ_DATA          * 00437200
*                                  NO with REQUEST=WRITE_DATA, WHENRE * 00437300
*        G=NO                                                         * 00437400
*                                                                     * 00437500
*                                                                     * 00437600
*                                                                     * 00437700
*01* CHANGE ACTIVITY:                                                 * 00437800
*                                                                     * 00437900
*   Flag LineItem  FMID    Date   ID    Comment                       * 00438000
*                                                                     * 00438100
*    $L0=SYSLKSMG HBB5510 910304 PD00K1:  Locking support             * 00438200
*    $P1=PIG0383  HBB5510 910923 PD00AO:  Fix name block size         * 00438300
*    $P2=PIG0267  HBB5510 910923 PD00AO:  Fix asm plst field          * 00438400
*                                         references                  * 00438500
*    $P3=PIG0503  HBB5510 920106 PD00AO:  Update RSN code             * 00438600
*                                         documentation               * 00438700
*    $P4=PIG0504  HBB5510 920106 PD00AO:  Change REPLNAME to OLDNAME  * 00438800
*    $P5=PIG0536  HBB5510 920106 PD00AO:  Fix NO_xxx defaults         * 00438900
*    $P6=PIG0578  HBB5510 920224 PD00AO:  Add ASM default removal     * 00439000
*    $D1=DIG0018  HBB5510 921105 PD00AO:  >4K support                 * 00439100
*    $D2=DIG0048  HBB5510 930114 PD00AO:  Miscellaneous changes       * 00439200
*    $P7=PIG1064  HBB5510 930201 PD00AO:  Fix ASM stmt syntax         * 00439300
*    $P8=PIG1557  HBB5510 930520 PD00AO:  Change for BufSize check    * 00439400
*    $D3=DIG0129  HBB5510 930520 PD00AO:  Write-thru cache support    * 00439500
*    $P9=PIG1857  HBB5510 930607 PD00AO:  Fix MCB DBS values          * 00439600
*    $D4=DIG0162  HBB5510 930802 PD00AO:  New architecture support    * 00439700
*    $PA=PIG2997  HBB5510 931001 PD00AO:  Do not allow VectorIndex on * 00439800
*                                         Castout_Data with           * 00439900
*                                         RegUser(No)                 * 00440000
*    $PB=PIG3233  HBB5510 931001 PD00AO:  Fix ASM BufSize offset      * 00440100
*    $PC=PIG3684  HBB5510 931201 PD00AO:  Expand RsnCode descriptions * 00440200
*    $PD=PIG3706  HBB5510 931119 PD00AO:  Expand RsnCode and OldName  * 00440300
*                                         descriptions                * 00440400
*    $PE=PIG5158  HBB5510 940211 PD00FR:  Castout Class Count defn    * 00440500
*    $PF=PIG5178  HBB5510 940314 PD00AO:  Performance                 * 00440600
*    $PG=PIG5236  HBB5510 940314 PD00FR:  Document DIE mode           * 00440700
*                                         restriction                 * 00440800
*    $PH=PIG5540  HBB5510 940715 PD00AO:  Fix ELEMNUM and PARITY      * 00440900
*                                         assembler                   * 00441000
*    $PI=PIG5560  HBB5510 940801 PD00AO:  Fix ASYNCxxxx assembler     * 00441100
*    $D5=DN70083  HBB5520 940720 PD00AO:  Reapportionment support     * 00441200
*    $D6=DN70092  HBB5520 940801 PD00AO:  255-element support         * 00441300
*    $PJ=PN71438  HBB5520 940901 PD00AO:  Fix 255-element             * 00441400
*                                         documentation               * 00441500
*    $01=OW13805  HBB5510 950616 PD00FR:  Fix DIRINFOFMT assembler    * 00441600
*    $02=OW15587  HBB5520 950615 PD00HX:  REG_NAMELIST support        * 00441700
*    $03=OW19393  HBB5510 961127 PD00FR:  Storage bind processing     * 00441800
*    $04=OW24532  HBB5520 961230 PD00GW:  UNLOCK_CO_NAME and Write    * 00441900
*                                         with no data                * 00442000
*    $05=OW28460  HBB6603 970401 PD00GW:  User Controlled Duplexing   * 00442100
*    $PK=PVT0144  HBB5510 971211 PD00BC:  VECTORINDEX checking        * 00442200
*    $PL=PVT0169  HBB5510 971211 PD00BC:  STARTINDEX code generation  * 00442300
*    $PM=PVT0456  HBB6603 980228 PD00BC:  PLOFF_XCMDFLAG9 offset      * 00442400
*    $L1=AUTOR    HBB6608 980622 PD00XM:  Add ExtRestoken keyword     * 00442500
*    $PN=PWK0157  HBB6608 980828 PD00XM:  Fix ASM setting of extended * 00442600
*                                         restart token in parameter  * 00442700
*                                         list                        * 00442800
*    $L2=AUTOR    HBB6608 980828 PD00MP:  Auto Rebuild support        * 00442900
*    $L3=64BIT    HBB7703 981208 B7VBGD:  64 bit real support         * 00443000
*    $06=OW35883  HBB6603 990107 PD00GW:  Fix EndIndex code           * 00443100
*                                         generation                  * 00443200
*    $PO=PWY0280  JBB6609 990322 PD00DV:  Assignment Suppression      * 00443300
*                                         Control                     * 00443400
*    $PP=PWY0716  JBB6609 990726 PD00FR:  Version number              * 00443500
*                                         comparison/update           * 00443600
*                                         documentation changes       * 00443700
*    $PQ=PXD0474  HBB7703 991022 PD00GW:  Version number              * 00443800
*                                         comparison/update           * 00443900
*                                         documentation changes       * 00444000
*    $PR=PXD1141  HBB7703 990112 PD00GW:  Version number              * 00444100
*                                         comparison/update           * 00444200
*                                         documentation changes       * 00444300
*    $07=OW39892  HBB6608 010413 PD00BC:  AutoR extension for CICS    * 00444400
****** END OF SPECIFICATIONS *****************************************/ 00444500
*/* TLINE 1 *********************************************************** 00444600
         MACRO                                                          00444700
&XLABEL  IXLCACHE &REQUEST=,&ASSIGN=,&REGUSER=,&RETURNDATA=,&WHENREG=, *00444800
               &VERSCOMP=,&VERSCOMPTYPE=,&VERSUPDATE=,&NEWVERS=,       *00444900
               &CHANGED=,&CROSSINVAL=,&GETCOLOCK=,&PROCESSID=,&PARITY=,*00445000
               &USERDATA=,&ELEMNUM=,&STARTINDEX=,&ENDINDEX=,&NSBAREA=, *00445100
               &FIRSTNAME=,&LASTNAME=,&CUNBAREA=,&DELETETYPE=,         *00445200
               &ERRORACTION=,&DIRINFOFMT=,&CRITERIA=,&COCLASSB=,       *00445300
               &COCLASSE=,&COSTATSFMT=,&STGSTATS=,&NUMNAMES=,&REPEAT=, *00445400
               &RECLVCTR=,&CONTOKEN=,&REQID=,&NAME=,&NAMEMASK=,        *00445500
               &OLDNAME=,&BUFLIST=,&BUFADDRTYPE=,&PAGEABLE=,           *00445600
               &BUFSTGKEY=,&BUFALET=,&BUFADDRSIZE=,&BUFNUM=,           *00445700
               &BUFINCRNUM=,&BUFFER=,&BUFSIZE=,&ADJAREA=,&STGCLASS=,   *00445800
               &COCLASS=,&VECTORINDEX=,&RESTOKEN=,&EXTRESTOKEN=,&MODE=,*00445900
               &REQECB=,&REQDATA=,&REQTOKEN=,&ANSAREA=,&ANSLEN=,       *00446000
               &RETCODE=,&RSNCODE=,&PLISTVER=,&MF=                      00446100
.*                                                                      00446200
*                     MACDATE -03/20/01-<5>                             00446300
.*                                                                      00446400
.*******************************************************************    00446500
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00446600
.*******************************************************************    00446700
                     GBLC  &ZPRINT     YES=PRINT NO=NO PRINT            00446800
                     GBLC  &ZTEST      YES=TEST NO=NO TEST              00446900
                     GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX      00447000
.*                                                                      00447100
                     GBLC  &ZIXLCACHE  YES=MACRO USED AT LEAST ONCE     00447200
.*******************************************************************    00447300
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00447400
.*******************************************************************    00447500
                     LCLC  &ZMS        ERROR MESSAGE WORK AREA          00447600
                     LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS     00447700
                     LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED       00447800
                     LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR      00447900
                     LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE      00448000
                     LCLA  &ZAWRK      USED AS A WORK AREA              00448100
                     LCLA  &ZASIZ      USED FOR SIZE OF VALUE           00448200
                     LCLA  &ZN         NUMERIC WORK VARIABLE            00448300
                     LCLC  &ZC         CHARACTER WORK VARIABLE          00448400
                     LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE      00448500
                     LCLA  &ZTLA       VALUE TOO LONG VARIABLE          00448600
                     LCLA  &ZMACRET    MACRO RETURN CODE                00448700
&ZMACRET             SETA  0           ASSUME NO ERRORS                 00448800
.*                                                                      00448900
                     LCLC  &ZCSYSLIST(255)      NONXKEY, POS ARRAY      00449000
                     LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()       00449100
                     LCLA  &ZPLLEN     PARAMETER LIST LENGTH            00449200
                     LCLC  &ZENDBASEPL          End of base PL          00449300
                     LCLA  &ZPLWORKA   PARAMETER LIST LENGTH            00449400
.*******************************************************************    00449500
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00449600
.*******************************************************************    00449700
                     LCLA  &ZI         INDEX FOR ARRAY                  00449800
                     LCLA  &ZJ         INDEX FOR PARMS                  00449900
                     LCLA  &ZK         INDEX FOR PARSE                  00450000
                     LCLA  &ZLO        LOW RANGE VALUE                  00450100
                     LCLA  &ZHI        HIGH RANGE VALUE                 00450200
                     LCLC  &ZW         WORK AREA FOR PARM               00450300
.********************************************************************   00450400
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00450500
.********************************************************************   00450600
                     GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL          00450700
                     GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE   00450800
                     GBLA  &SYSALVL    SYSSTATE ARCHLVL                 00450900
.*                                                                      00451000
                     AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED   00451100
                     AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED    00451200
                     SPLEVEL  TEST                                      00451300
.ZSYS2               ANOP  ,                                            00451400
                     AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1        00451500
                     AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1        00451600
                     SYSSTATE TEST                                      00451700
                     AGO   .ZSYS4                                       00451800
.ZSYS3               ANOP  ,                                            00451900
&SYSASCE             SETC  'P'         ASSUME SYSSTATE PRIMARY          00452000
.ZSYS4               ANOP  ,                                            00452100
.*******************************************************************    00452200
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00452300
.*******************************************************************    00452400
                     LCLC  &XREQUEST   ++ VALUE                         00452500
                     LCLC  &XASSIGN    ++ VALUE                         00452600
                     LCLC  &XREGUSER   ++ VALUE                         00452700
                     LCLC  &XRETURNDATA         ++ VALUE                00452800
                     LCLC  &XWHENREG   ++ VALUE                         00452900
                     LCLC  &XVERSCOMP  ++ NAME                          00453000
                     LCLC  &XVERSCOMPTYPE       ++ VALUE                00453100
                     LCLC  &XVERSUPDATE         ++ VALUE                00453200
                     LCLC  &XNEWVERS   ++ NAME                          00453300
                     LCLC  &XCHANGED   ++ VALUE                         00453400
                     LCLC  &XCROSSINVAL         ++ VALUE                00453500
                     LCLC  &XGETCOLOCK          ++ VALUE                00453600
                     LCLC  &XPROCESSID          ++ NAME                 00453700
                     LCLC  &XPARITY    ++ NAME                          00453800
                     LCLC  &XUSERDATA  ++ NAME                          00453900
                     LCLC  &XELEMNUM   ++ NAME                          00454000
                     LCLC  &XSTARTINDEX         ++ NAME                 00454100
                     LCLC  &XENDINDEX  ++ NAME                          00454200
                     LCLC  &XNSBAREA   ++ NAME                          00454300
                     LCLC  &XFIRSTNAME          ++ NAME                 00454400
                     LCLC  &XLASTNAME  ++ NAME                          00454500
                     LCLC  &XCUNBAREA  ++ NAME                          00454600
                     LCLC  &XDELETETYPE         ++ VALUE                00454700
                     LCLC  &XERRORACTION        ++ VALUE                00454800
                     LCLC  &XDIRINFOFMT         ++ VALUE                00454900
                     LCLC  &XCRITERIA  ++ VALUE                         00455000
                     LCLC  &XCOCLASSB  ++ NAME                          00455100
                     LCLC  &XCOCLASSE  ++ NAME                          00455200
                     LCLC  &XCOSTATSFMT         ++ VALUE                00455300
                     LCLC  &XSTGSTATS  ++ NAME                          00455400
                     LCLC  &XNUMNAMES  ++ NAME                          00455500
                     LCLC  &XREPEAT    ++ NAME                          00455600
                     LCLC  &XRECLVCTR  ++ NAME                          00455700
                     LCLC  &XCONTOKEN  ++ NAME                          00455800
                     LCLC  &XREQID     ++ NAME                          00455900
                     LCLC  &XNAME      ++ NAME                          00456000
                     LCLC  &XNAMEMASK  ++ NAME                          00456100
                     LCLC  &XOLDNAME   ++ NAME                          00456200
                     LCLC  &XDATAREA   ++ NAME                          00456300
                     LCLC  &XBUFLIST   ++ NAME                          00456400
                     LCLC  &XBUFADDRTYPE        ++ VALUE                00456500
                     LCLC  &XPAGEABLE  ++ VALUE                         00456600
                     LCLC  &XBUFSTGKEY          ++ NAME                 00456700
                     LCLC  &XBUFALET   ++ NAME                          00456800
                     LCLC  &XBUFADDRSIZE        ++ VALUE                00456900
                     LCLC  &XBUFNUM    ++ NAME                          00457000
                     LCLC  &XBUFINCRNUM         ++ NAME                 00457100
                     LCLC  &XBUFFER    ++ NAME                          00457200
                     LCLC  &XBUFSIZE   ++ NAME                          00457300
                     LCLC  &XADJAREA   ++ NAME                          00457400
                     LCLC  &XSTGCLASS  ++ NAME                          00457500
                     LCLC  &XCOCLASS   ++ NAME                          00457600
                     LCLC  &XVECTORINDEX        ++ NAME                 00457700
                     LCLC  &XRESTARTTOKEN       ++ NAME                 00457800
                     LCLC  &XRESTOKEN  ++ NAME                          00457900
                     LCLC  &XEXTRESTOKEN        ++ NAME                 00458000
                     LCLC  &XMODE      ++ VALUE                         00458100
                     LCLC  &XREQECB    ++ NAME                          00458200
                     LCLC  &XREQDATA   ++ NAME                          00458300
                     LCLC  &XREQTOKEN  ++ NAME                          00458400
                     LCLC  &XANSAREA   ++ NAME                          00458500
                     LCLC  &XANSLEN    ++ NAME                          00458600
                     LCLC  &XRETCODE   ++ NAME                          00458700
                     LCLC  &XRSNCODE   ++ NAME                          00458800
                     LCLA  &XPLISTVER  ++ VALUE                         00458900
                     LCLC  &XMF        ++ VALUE                         00459000
                     LCLC  &XMFCTRL    ++ NAME                          00459100
                     LCLC  &XMFATTR    ++ VALUE                         00459200
                     LCLC  &XMFSCK     ++ VALUE                         00459300
.*******************************************************************    00459400
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00459500
.*******************************************************************    00459600
                     LCLC  &ZXREQUEST  ++ INPUT VALUE                   00459700
                     LCLC  &ZXASSIGN   ++ INPUT VALUE                   00459800
                     LCLC  &ZXREGUSER  ++ INPUT VALUE                   00459900
                     LCLC  &ZXRETURNDATA        ++ INPUT VALUE          00460000
                     LCLC  &ZXWHENREG  ++ INPUT VALUE                   00460100
                     LCLC  &ZXVERSCOMP          ++ INPUT NAME           00460200
                     LCLC  &ZXVERSCOMPTYPE      ++ INPUT VALUE          00460300
                     LCLC  &ZXVERSUPDATE        ++ INPUT VALUE          00460400
                     LCLC  &ZXNEWVERS  ++ INPUT NAME                    00460500
                     LCLC  &ZXCHANGED  ++ INPUT VALUE                   00460600
                     LCLC  &ZXCROSSINVAL        ++ INPUT VALUE          00460700
                     LCLC  &ZXGETCOLOCK         ++ INPUT VALUE          00460800
                     LCLC  &ZXPROCESSID         ++ INPUT NAME           00460900
                     LCLC  &ZXPARITY   ++ INPUT NAME                    00461000
                     LCLC  &ZXUSERDATA          ++ INPUT NAME           00461100
                     LCLC  &ZXELEMNUM  ++ INPUT NAME                    00461200
                     LCLC  &ZXSTARTINDEX        ++ INPUT NAME           00461300
                     LCLC  &ZXENDINDEX          ++ INPUT NAME           00461400
                     LCLC  &ZXNSBAREA  ++ OUTPUT NAME                   00461500
                     LCLC  &ZXFIRSTNAME         ++ INPUT NAME           00461600
                     LCLC  &ZXLASTNAME          ++ INPUT NAME           00461700
                     LCLC  &ZXCUNBAREA          ++ INPUT NAME           00461800
                     LCLC  &ZXDELETETYPE        ++ INPUT VALUE          00461900
                     LCLC  &ZXERRORACTION       ++ INPUT VALUE          00462000
                     LCLC  &ZXDIRINFOFMT        ++ INPUT VALUE          00462100
                     LCLC  &ZXCRITERIA          ++ INPUT VALUE          00462200
                     LCLC  &ZXCOCLASSB          ++ INPUT NAME           00462300
                     LCLC  &ZXCOCLASSE          ++ INPUT NAME           00462400
                     LCLC  &ZXCOSTATSFMT        ++ INPUT VALUE          00462500
                     LCLC  &ZXSTGSTATS          ++ INPUT NAME           00462600
                     LCLC  &ZXNUMNAMES          ++ INPUT NAME           00462700
                     LCLC  &ZXREPEAT   ++ INPUT NAME                    00462800
                     LCLC  &ZXRECLVCTR          ++ INPUT NAME           00462900
                     LCLC  &ZXCONTOKEN          ++ INPUT NAME           00463000
                     LCLC  &ZXREQID    ++ INPUT NAME                    00463100
                     LCLC  &ZXNAME     ++ INPUT NAME                    00463200
                     LCLC  &ZXNAMEMASK          ++ INPUT NAME           00463300
                     LCLC  &ZXOLDNAME  ++ INPUT NAME                    00463400
                     LCLC  &ZXDATAREA  ++ INPUT NAME                    00463500
                     LCLC  &ZXBUFLIST  ++ INPUT NAME                    00463600
                     LCLC  &ZXBUFADDRTYPE       ++ INPUT VALUE          00463700
                     LCLC  &ZXPAGEABLE          ++ INPUT VALUE          00463800
                     LCLC  &ZXBUFSTGKEY         ++ INPUT NAME           00463900
                     LCLC  &ZXBUFALET  ++ INPUT NAME                    00464000
                     LCLC  &ZXBUFADDRSIZE       ++ INPUT VALUE          00464100
                     LCLC  &ZXBUFNUM   ++ INPUT NAME                    00464200
                     LCLC  &ZXBUFINCRNUM        ++ INPUT NAME           00464300
                     LCLC  &ZXBUFFER   ++ INPUT NAME                    00464400
                     LCLC  &ZXBUFSIZE  ++ INPUT NAME                    00464500
                     LCLC  &ZXADJAREA  ++ INPUT NAME                    00464600
                     LCLC  &ZXSTGCLASS          ++ INPUT NAME           00464700
                     LCLC  &ZXCOCLASS  ++ INPUT NAME                    00464800
                     LCLC  &ZXVECTORINDEX       ++ INPUT NAME           00464900
                     LCLC  &ZXRESTARTTOKEN      ++ INPUT NAME           00465000
                     LCLC  &ZXRESTOKEN          ++ INPUT NAME           00465100
                     LCLC  &ZXEXTRESTOKEN       ++ INPUT NAME           00465200
                     LCLC  &ZXMODE     ++ INPUT VALUE                   00465300
                     LCLC  &ZXREQECB   ++ INPUT NAME                    00465400
                     LCLC  &ZXREQDATA  ++ INPUT NAME                    00465500
                     LCLC  &ZXREQTOKEN          ++ OUTPUT NAME          00465600
                     LCLC  &ZXANSAREA  ++ INPUT NAME                    00465700
                     LCLC  &ZXANSLEN   ++ INPUT NAME                    00465800
                     LCLC  &ZXRETCODE  ++ OUTPUT NAME                   00465900
                     LCLC  &ZXRSNCODE  ++ OUTPUT NAME                   00466000
                     LCLC  &ZXPLISTVER          ++ INPUT VALUE          00466100
                     LCLC  &ZXMF       ++ INPUT VALUE                   00466200
                     LCLC  &ZXMFCTRL   ++ INPUT NAME                    00466300
                     LCLC  &ZXMFATTR   ++ INPUT VALUE                   00466400
                     LCLC  &ZXMFSCK    ++ INPUT VALUE                   00466500
.********************************************************************   00466600
.***AC.PLV01  PROCESS PLISTVER                                      *   00466700
.********************************************************************   00466800
&XPLISTVER      SETA  0                                                 00466900
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00467000
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00467100
&XPLISTVER      SETA  5                                                 00467200
.ZPLV0          ANOP  ,                                                 00467300
.*                                                                      00467400
                AIF   ('&RETURNDATA' EQ '').ZPLV1E                      00467500
                AIF   (&XPLISTVER GE 2).ZPLV1E                          00467600
&XPLISTVER      SETA  2                                                 00467700
.ZPLV1E         ANOP  ,                                                 00467800
.*                                                                      00467900
                AIF   ('&VERSCOMP' EQ '').ZPLV2E                        00468000
                AIF   (&XPLISTVER GE 3).ZPLV2E                          00468100
&XPLISTVER      SETA  3                                                 00468200
.ZPLV2E         ANOP  ,                                                 00468300
.*                                                                      00468400
                AIF   ('&VERSCOMPTYPE' EQ '').ZPLV3E                    00468500
                AIF   (&XPLISTVER GE 3).ZPLV3E                          00468600
&XPLISTVER      SETA  3                                                 00468700
.ZPLV3E         ANOP  ,                                                 00468800
.*                                                                      00468900
                AIF   ('&VERSUPDATE' EQ '').ZPLV4E                      00469000
                AIF   (&XPLISTVER GE 3).ZPLV4E                          00469100
&XPLISTVER      SETA  3                                                 00469200
.ZPLV4E         ANOP  ,                                                 00469300
.*                                                                      00469400
                AIF   ('&NEWVERS' EQ '').ZPLV5E                         00469500
                AIF   (&XPLISTVER GE 3).ZPLV5E                          00469600
&XPLISTVER      SETA  3                                                 00469700
.ZPLV5E         ANOP  ,                                                 00469800
.*                                                                      00469900
                AIF   ('&STARTINDEX' EQ '').ZPLV6E                      00470000
                AIF   (&XPLISTVER GE 1).ZPLV6E                          00470100
&XPLISTVER      SETA  1                                                 00470200
.ZPLV6E         ANOP  ,                                                 00470300
.*                                                                      00470400
                AIF   ('&ENDINDEX' EQ '').ZPLV7E                        00470500
                AIF   (&XPLISTVER GE 1).ZPLV7E                          00470600
&XPLISTVER      SETA  1                                                 00470700
.ZPLV7E         ANOP  ,                                                 00470800
.*                                                                      00470900
                AIF   ('&NSBAREA' EQ '').ZPLV8E                         00471000
                AIF   (&XPLISTVER GE 1).ZPLV8E                          00471100
&XPLISTVER      SETA  1                                                 00471200
.ZPLV8E         ANOP  ,                                                 00471300
.*                                                                      00471400
                AIF   ('&CUNBAREA' EQ '').ZPLV9E                        00471500
                AIF   (&XPLISTVER GE 2).ZPLV9E                          00471600
&XPLISTVER      SETA  2                                                 00471700
.ZPLV9E         ANOP  ,                                                 00471800
.*                                                                      00471900
                AIF   ('&DELETETYPE' EQ '').ZPLV10E                     00472000
                AIF   (&XPLISTVER GE 3).ZPLV10E                         00472100
&XPLISTVER      SETA  3                                                 00472200
.ZPLV10E        ANOP  ,                                                 00472300
.*                                                                      00472400
                AIF   ('&VERSCOMP' EQ '').ZPLV11E                       00472500
                AIF   (&XPLISTVER GE 3).ZPLV11E                         00472600
&XPLISTVER      SETA  3                                                 00472700
.ZPLV11E        ANOP  ,                                                 00472800
.*                                                                      00472900
                AIF   ('&VERSCOMPTYPE' EQ '').ZPLV12E                   00473000
                AIF   (&XPLISTVER GE 3).ZPLV12E                         00473100
&XPLISTVER      SETA  3                                                 00473200
.ZPLV12E        ANOP  ,                                                 00473300
.*                                                                      00473400
                AIF   ('&STARTINDEX' EQ '').ZPLV13E                     00473500
                AIF   (&XPLISTVER GE 1).ZPLV13E                         00473600
&XPLISTVER      SETA  1                                                 00473700
.ZPLV13E        ANOP  ,                                                 00473800
.*                                                                      00473900
                AIF   ('&ENDINDEX' EQ '').ZPLV14E                       00474000
                AIF   (&XPLISTVER GE 1).ZPLV14E                         00474100
&XPLISTVER      SETA  1                                                 00474200
.ZPLV14E        ANOP  ,                                                 00474300
.*                                                                      00474400
                AIF   ('&DELETETYPE' EQ '').ZPLV15E                     00474500
                AIF   (&XPLISTVER GE 3).ZPLV15E                         00474600
&XPLISTVER      SETA  3                                                 00474700
.ZPLV15E        ANOP  ,                                                 00474800
.*                                                                      00474900
                AIF   ('&VERSCOMPTYPE' EQ '').ZPLV16E                   00475000
                AIF   (&XPLISTVER GE 3).ZPLV16E                         00475100
&XPLISTVER      SETA  3                                                 00475200
.ZPLV16E        ANOP  ,                                                 00475300
.*                                                                      00475400
                AIF   ('&ERRORACTION' EQ '').ZPLV17E                    00475500
                AIF   (&XPLISTVER GE 3).ZPLV17E                         00475600
&XPLISTVER      SETA  3                                                 00475700
.ZPLV17E        ANOP  ,                                                 00475800
.*                                                                      00475900
                AIF   ('&COSTATSFMT' EQ '').ZPLV18E                     00476000
                AIF   (&XPLISTVER GE 3).ZPLV18E                         00476100
&XPLISTVER      SETA  3                                                 00476200
.ZPLV18E        ANOP  ,                                                 00476300
.*                                                                      00476400
                AIF   ('&EXTRESTOKEN' EQ '').ZPLV19E                    00476500
                AIF   (&XPLISTVER GE 4).ZPLV19E                         00476600
&XPLISTVER      SETA  4                                                 00476700
.ZPLV19E        ANOP  ,                                                 00476800
.*                                                                      00476900
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00477000
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00477100
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00477200
.*-------------------------------------------------------------------   00477300
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00477400
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00477500
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00477600
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00477700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00477800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00477900
                AGO   .ZPVCK2                                           00478000
.ZPVCK3         ANOP  ,                                                 00478100
.*-------------------------------------------------------------------   00478200
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00478300
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00478400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00478500
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00478600
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00478700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00478800
                AGO   .ZPVCKE                                           00478900
.ZPVCK2         ANOP  ,                                                 00479000
.*-------------------------------------------------------------------   00479100
&ZCVAL          SETC  '&PLISTVER(1)'                                    00479200
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00479300
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00479400
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00479500
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00479600
                AIF   (&ZN LE 5).ZPVCK4A   NOT HIGH                     00479700
.ZPVCK6         ANOP  ,                                                 00479800
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00479900
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00480000
&ZMS            SETC  '&ZMS THE RANGE IS "0-5"'                         00480100
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00480200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00480300
&XPLISTVER      SETA  5                                                 00480400
                AGO   .ZPVCKE                                           00480500
.*-------------------------------------------------------------------   00480600
.ZPVCK4A        ANOP  ,                                                 00480700
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00480800
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00480900
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00481000
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00481100
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00481200
                MNOTE 8,' &ZMS IS REQUIRED.'                            00481300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00481400
                AGO   .ZPVCK5                                           00481500
.ZPVCK4         ANOP  ,                                                 00481600
&XPLISTVER      SETA  &PLISTVER(1)                                      00481700
.ZPVCK5         ANOP  ,                                                 00481800
.ZPVCKE         ANOP  ,                                                 00481900
.********************************************************************   00482000
.***AG.MF01 PROCESS MF MACRO FORMS                                      00482100
.********************************************************************   00482200
                     ACTR  10000                                        00482300
.*------------------------------------------------------------------    00482400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00482500
&XMF                 SETC  ''          INITIALIZE XVARIABLE             00482600
.*-------------------------------------------------------------------   00482700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00482800
.ZG328               ANOP  ,                                            00482900
&ZTLC                SETC 'S'                                           00483000
                     AIF   ('&MF(1)' NE '&ZTLC').ZG329                  00483100
&XMF                 SETC  'S'         SET KEYWORD                      00483200
                     AIF   (N'&MF LE 1).ZG328A  CK NUM                  00483300
&ZMS                 SETC  '"MF='      *KPOSA* MNOTE                    00483400
&ZMS                 SETC  '&ZMS.&MF"'                                  00483500
&ZMS                 SETC  '&ZMS "MF"'                                  00483600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00483700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00483800
.ZG328A              ANOP  ,                                            00483900
.*-------------------------------------------------------------------   00484000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00484100
.ZG329               ANOP  ,                                            00484200
&ZTLC                SETC 'L'                                           00484300
                     AIF   ('&MF(1)' NE '&ZTLC').ZG336                  00484400
&XMF                 SETC  'L'         SET KEYWORD                      00484500
                     AIF   (N'&MF LE 3).ZG329A  CK NUM                  00484600
&ZMS                 SETC  '"MF='      *KPOSA* MNOTE                    00484700
&ZMS                 SETC  '&ZMS.&MF"'                                  00484800
&ZMS                 SETC  '&ZMS "MF"'                                  00484900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'         00485000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00485100
.ZG329A              ANOP  ,                                            00485200
.*-------------------------------------------------------------------   00485300
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00485400
                     AIF   (N'&SYSLIST NE 0).ZG329B  POSITIONALS?       00485500
                     AIF   ('&REQUEST' NE '').ZG329B  KEYS?             00485600
                     AIF   ('&ASSIGN' NE '').ZG329B  KEYS?              00485700
                     AIF   ('&REGUSER' NE '').ZG329B  KEYS?             00485800
                     AIF   ('&RETURNDATA' NE '').ZG329B  KEYS?          00485900
                     AIF   ('&WHENREG' NE '').ZG329B  KEYS?             00486000
                     AIF   ('&VERSCOMP' NE '').ZG329B  KEYS?            00486100
                     AIF   ('&VERSCOMPTYPE' NE '').ZG329B  KEYS?        00486200
                     AIF   ('&VERSUPDATE' NE '').ZG329B  KEYS?          00486300
                     AIF   ('&NEWVERS' NE '').ZG329B  KEYS?             00486400
                     AIF   ('&CHANGED' NE '').ZG329B  KEYS?             00486500
                     AIF   ('&CROSSINVAL' NE '').ZG329B  KEYS?          00486600
                     AIF   ('&GETCOLOCK' NE '').ZG329B  KEYS?           00486700
                     AIF   ('&PROCESSID' NE '').ZG329B  KEYS?           00486800
                     AIF   ('&PARITY' NE '').ZG329B  KEYS?              00486900
                     AIF   ('&USERDATA' NE '').ZG329B  KEYS?            00487000
                     AIF   ('&ELEMNUM' NE '').ZG329B  KEYS?             00487100
                     AIF   ('&STARTINDEX' NE '').ZG329B  KEYS?          00487200
                     AIF   ('&ENDINDEX' NE '').ZG329B  KEYS?            00487300
                     AIF   ('&NSBAREA' NE '').ZG329B  KEYS?             00487400
                     AIF   ('&FIRSTNAME' NE '').ZG329B  KEYS?           00487500
                     AIF   ('&LASTNAME' NE '').ZG329B  KEYS?            00487600
                     AIF   ('&CUNBAREA' NE '').ZG329B  KEYS?            00487700
                     AIF   ('&DELETETYPE' NE '').ZG329B  KEYS?          00487800
                     AIF   ('&ERRORACTION' NE '').ZG329B  KEYS?         00487900
                     AIF   ('&DIRINFOFMT' NE '').ZG329B  KEYS?          00488000
                     AIF   ('&CRITERIA' NE '').ZG329B  KEYS?            00488100
                     AIF   ('&COCLASSB' NE '').ZG329B  KEYS?            00488200
                     AIF   ('&COCLASSE' NE '').ZG329B  KEYS?            00488300
                     AIF   ('&COSTATSFMT' NE '').ZG329B  KEYS?          00488400
                     AIF   ('&STGSTATS' NE '').ZG329B  KEYS?            00488500
                     AIF   ('&NUMNAMES' NE '').ZG329B  KEYS?            00488600
                     AIF   ('&REPEAT' NE '').ZG329B  KEYS?              00488700
                     AIF   ('&RECLVCTR' NE '').ZG329B  KEYS?            00488800
                     AIF   ('&CONTOKEN' NE '').ZG329B  KEYS?            00488900
                     AIF   ('&REQID' NE '').ZG329B  KEYS?               00489000
                     AIF   ('&NAME' NE '').ZG329B  KEYS?                00489100
                     AIF   ('&NAMEMASK' NE '').ZG329B  KEYS?            00489200
                     AIF   ('&OLDNAME' NE '').ZG329B  KEYS?             00489300
                     AIF   ('&BUFLIST' NE '').ZG329B  KEYS?             00489400
                     AIF   ('&BUFADDRTYPE' NE '').ZG329B  KEYS?         00489500
                     AIF   ('&PAGEABLE' NE '').ZG329B  KEYS?            00489600
                     AIF   ('&BUFSTGKEY' NE '').ZG329B  KEYS?           00489700
                     AIF   ('&BUFALET' NE '').ZG329B  KEYS?             00489800
                     AIF   ('&BUFADDRSIZE' NE '').ZG329B  KEYS?         00489900
                     AIF   ('&BUFNUM' NE '').ZG329B  KEYS?              00490000
                     AIF   ('&BUFINCRNUM' NE '').ZG329B  KEYS?          00490100
                     AIF   ('&BUFFER' NE '').ZG329B  KEYS?              00490200
                     AIF   ('&BUFSIZE' NE '').ZG329B  KEYS?             00490300
                     AIF   ('&ADJAREA' NE '').ZG329B  KEYS?             00490400
                     AIF   ('&STGCLASS' NE '').ZG329B  KEYS?            00490500
                     AIF   ('&COCLASS' NE '').ZG329B  KEYS?             00490600
                     AIF   ('&VECTORINDEX' NE '').ZG329B  KEYS?         00490700
                     AIF   ('&RESTOKEN' NE '').ZG329B  KEYS?            00490800
                     AIF   ('&EXTRESTOKEN' NE '').ZG329B  KEYS?         00490900
                     AIF   ('&MODE' NE '').ZG329B  KEYS?                00491000
                     AIF   ('&REQECB' NE '').ZG329B  KEYS?              00491100
                     AIF   ('&REQDATA' NE '').ZG329B  KEYS?             00491200
                     AIF   ('&REQTOKEN' NE '').ZG329B  KEYS?            00491300
                     AIF   ('&ANSAREA' NE '').ZG329B  KEYS?             00491400
                     AIF   ('&ANSLEN' NE '').ZG329B  KEYS?              00491500
                     AIF   ('&RETCODE' NE '').ZG329B  KEYS?             00491600
                     AIF   ('&RSNCODE' NE '').ZG329B  KEYS?             00491700
                     AGO    .ZG329C    INVOCATION OKAY                  00491800
.ZG329B              ANOP  ,                                            00491900
&ZMS                 SETC  'THE "L" FORM OF "MF"'  *MFLA* MNOTE         00492000
&ZMS                 SETC  '&ZMS CAN ONLY HAVE'                         00492100
&ZMS                 SETC  '&ZMS THE "PLISTVER" KEY'                    00492200
                     MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'       00492300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00492400
.ZG329C              ANOP  ,                                            00492500
.*-------------------------------------------------------------------   00492600
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00492700
&ZXMFCTRL            SETC  'INPUT'     SET IN/OUTPUT                    00492800
&XMFCTRL             SETC  '&MF(2,1)'  SET XVARIABLE                    00492900
                     AIF   (N'&MF(2) GT 1).ZG331B  MULTI PARMS          00493000
&XMFCTRL             SETC  '&MF(2)'    SET XVARIABLE                    00493100
.ZG331B              AIF   (K'&MF(2) GT 0).ZG331C                       00493200
&ZXMFCTRL            SETC  ''          RESET IN/OUTPUT                  00493300
&ZMS                 SETC  'WHEN "L" IS SPECIFIED'  *KRQDA*             00493400
&ZMS                 SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'          00493500
                     MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                 00493600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00493700
.ZG331C              ANOP  ,                                            00493800
.*-------------------------------------------------------------------   00493900
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00494000
                     AIF   (K'&ZXMFCTRL LE 0).ZG331P  NOT I/O           00494100
                     AIF   ('&XMFCTRL'(1,1) NE '(').ZG331P              00494200
&ZXMFCTRL            SETC  ''          RESET IN/OUTPUT                  00494300
&ZMS                 SETC  '"MF='      *KGPRA* MNOTE                    00494400
&ZMS                 SETC  '&ZMS.&MF"'                                  00494500
&ZMS                 SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'    00494600
                     MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'            00494700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00494800
.ZG331P              ANOP  ,                                            00494900
.*-------------------------------------------------------------------   00495000
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00495100
&ZXMFATTR            SETC  'INPUT'     SET IN/OUTPUT                    00495200
&XMFATTR             SETC  '0D'                                         00495300
                     AIF   (K'&MF(3) LE 0).ZG334B  PARM                 00495400
&XMFATTR             SETC  '&MF(3,1)'  SET XVARIABLE                    00495500
                     AIF   (N'&MF(3) GT 1).ZG334B  MULTI PARMS          00495600
&XMFATTR             SETC  '&MF(3)'    SET XVARIABLE                    00495700
.ZG334B              ANOP  ,                                            00495800
.*-------------------------------------------------------------------   00495900
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00496000
                     AIF   (K'&ZXMFATTR LE 0).ZG334P  NOT I/O           00496100
                     AIF   ('&XMFATTR'(1,1) NE '(').ZG334P              00496200
&ZXMFATTR            SETC  ''          RESET IN/OUTPUT                  00496300
&ZMS                 SETC  '"MF='      *KGPRA* MNOTE                    00496400
&ZMS                 SETC  '&ZMS.&MF"'                                  00496500
&ZMS                 SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'    00496600
                     MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'            00496700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00496800
.ZG334P              ANOP  ,                                            00496900
.*-------------------------------------------------------------------   00497000
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00497100
                     AIF   (K'&ZXMFATTR LE 0).ZG334S  NOT I/O           00497200
                     AIF   (K'&XMFATTR LE 60).ZG334S  LNG OK            00497300
&ZXMFATTR            SETC  ''          RESET IN/OUTPUT                  00497400
&ZMS                 SETC  '"MF='      *KLNGA* MNOTE                    00497500
&ZMS                 SETC  '&ZMS.&MF"'                                  00497600
&ZMS                 SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'        00497700
                     MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'           00497800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00497900
.ZG334S              ANOP  ,                                            00498000
.*-------------------------------------------------------------------   00498100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00498200
.ZG336               ANOP  ,                                            00498300
&ZTLC                SETC 'E'                                           00498400
                     AIF   ('&MF(1)' NE '&ZTLC').ZG344                  00498500
&XMF                 SETC  'E'         SET KEYWORD                      00498600
                     AIF   (N'&MF LE 3).ZG336A  CK NUM                  00498700
&ZMS                 SETC  '"MF='      *KPOSA* MNOTE                    00498800
&ZMS                 SETC  '&ZMS.&MF"'                                  00498900
&ZMS                 SETC  '&ZMS "MF"'                                  00499000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'         00499100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00499200
.ZG336A              ANOP  ,                                            00499300
.*-------------------------------------------------------------------   00499400
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00499500
&ZXMFCTRL            SETC  'INPUT'     SET IN/OUTPUT                    00499600
&XMFCTRL             SETC  '&MF(2,1)'  SET XVARIABLE                    00499700
                     AIF   (N'&MF(2) GT 1).ZG338B  MULTI PARMS          00499800
&XMFCTRL             SETC  '&MF(2)'    SET XVARIABLE                    00499900
.ZG338B              AIF   (K'&MF(2) GT 0).ZG338C                       00500000
&ZXMFCTRL            SETC  ''          RESET IN/OUTPUT                  00500100
&ZMS                 SETC  'WHEN "E" IS SPECIFIED'  *KRQDA*             00500200
&ZMS                 SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'          00500300
                     MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                 00500400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00500500
.ZG338C              ANOP  ,                                            00500600
.*-------------------------------------------------------------------   00500700
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00500800
                     AIF   (K'&ZXMFCTRL LE 0).ZG338R  NOT I/O           00500900
                     AIF   ('&XMFCTRL'(1,1) NE '(').ZG338R              00501000
&ZCGPR               SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                   00501100
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG338P                00501200
                     AIF   (K'&ZCGPR GT 2).ZG338Q                       00501300
                     AIF   ('&ZCGPR' EQ '0').ZG338Q                     00501400
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00501500
                     AIF   (T'&ZCGPR NE 'N').ZG338Q  INVALID REG NAME   00501600
.ZG338P              ANOP  ,                                            00501700
                     AIF   (T'&ZCGPR NE 'N').ZG338R  NON NUMERIC        00501800
                     AIF   ('&ZCGPR' LT '1').ZG338Q                     00501900
                     AIF   ('&ZCGPR' LE '12').ZG338R                    00502000
.ZG338Q              ANOP  ,                                            00502100
&ZMS                 SETC  '"MF='      *KGPRA* MNOTE                    00502200
&ZMS                 SETC  '&ZMS.&MF"'                                  00502300
&ZMS                 SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'    00502400
                     MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'             00502500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00502600
.ZG338R              ANOP  ,                                            00502700
.*-------------------------------------------------------------------   00502800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00502900
&XMFSCK              SETC  ''          INITIALIZE XVARIABLE             00503000
.ZG342A   AIF   ('&MF(3)' NE 'COMPLETE').ZG343A                         00503100
&XMFSCK              SETC  'COMPLETE'  SET KEYWORD                      00503200
.*-------------------------------------------------------------------   00503300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00503400
.ZG343A              AIF   (K'&XMFSCK GT 0).ZG343C  KEYWORD             00503500
                     AIF   (K'&MF(3) LE 0).ZG343B                       00503600
&ZMS                 SETC  '"MF='      *KUKWA* MNOTE                    00503700
&ZMS                 SETC  '&ZMS.&MF"'                                  00503800
&ZMS                 SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '    00503900
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00504000
&ZMS                 SETC  '&ZMS "COMPLETE".'                           00504100
                     MNOTE 8,' &ZMS '                                   00504200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00504300
.ZG343B              ANOP  ,                                            00504400
&XMFSCK              SETC  'COMPLETE'  SET DEFAULT KEYWORD              00504500
.ZG343C              ANOP  ,                                            00504600
&ZXMFSCK             SETC  'INPUT'     SET IN/OUTPUT                    00504700
.*------------------------------------------------------------------    00504800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00504900
.ZG344               ANOP  ,                                            00505000
&ZXMF                SETC  'INPUT'     SET IN/OUTPUT                    00505100
                     AIF   (K'&XMF GT 0).ZG344E  VALID ARG              00505200
                     AIF   (T'&MF EQ 'O').ZG344D  OMITTED               00505300
&ZASYSLNDX           SETA  0                                            00505400
.ZG344A              ANOP  ,           POSITIONAL MACRO KEY             00505500
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00505600
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG344C            00505700
&ZTLC                SETC 'MF'                                          00505800
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG344A   00505900
.ZG344B              ANOP  ,                                            00506000
&ZXMF                SETC  ''          RESET IN/OUTPUT                  00506100
&ZMS                 SETC  'THE "MF" KEY'       *KOPTA* MNOTE           00506200
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00506300
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00506400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00506500
                     AGO   .ZG344E                                      00506600
.ZG344C              ANOP  ,                                            00506700
&ZXMF                SETC  ''          RESET IN/OUTPUT                  00506800
&ZMS                 SETC  '"MF='      *KUKWA* MNOTE                    00506900
&ZMS                 SETC  '&ZMS.&MF"'                                  00507000
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00507100
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00507200
&ZMS                 SETC  '&ZMS "S",'                                  00507300
&ZMS                 SETC  '&ZMS "L",'                                  00507400
&ZMS                 SETC  '&ZMS OR "E".'                               00507500
                     MNOTE 8,' &ZMS '                                   00507600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00507700
                     AGO   .ZG344E                                      00507800
.ZG344D              ANOP  ,                                            00507900
&XMF                 SETC  'S'         SET DEFAULT KEYWORD              00508000
&XMFSCK              SETC  'COMPLETE'  COMPLETE CHECKING                00508100
.ZG344E              ANOP  ,                                            00508200
.********************************************************************   00508300
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00508400
.********************************************************************   00508500
                     ACTR  10000                                        00508600
.*-------------------------------------------------------------------   00508700
.***AG.MF03 MF=(SLE)                                                    00508800
                     AIF   ('&XMF' EQ 'L').ZGMFX                        00508900
.*------------------------------------------------------------------    00509000
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00509100
&XREQUEST            SETC  ''          INITIALIZE XVARIABLE             00509200
.*-------------------------------------------------------------------   00509300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00509400
.ZG3                 ANOP  ,                                            00509500
                     AIF   (K'&REQUEST(1) LE 0).ZG3A                    00509600
&ZTLC                SETC 'READ_DATA'                                   00509700
                     AIF   ('&REQUEST(1)' NE '&ZTLC').ZG19              00509800
&XREQUEST            SETC  'READ_DATA'          SET KEYWORD             00509900
                     AIF   (N'&REQUEST LE 1).ZG3A  CK NUM               00510000
&ZMS                 SETC  '"REQUEST='          *KPOSA* MNOTE           00510100
&ZMS                 SETC  '&ZMS.&REQUEST"'                             00510200
&ZMS                 SETC  '&ZMS "REQUEST"'                             00510300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00510400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00510500
.ZG3A                ANOP  ,                                            00510600
.*------------------------------------------------------------------    00510700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00510800
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00510900
.ZG3A0               AIF   (K'&WHENREG LE 0).ZG3A1  OK                  00511000
&ZCVAL               SETC '&ZCVAL WHENREG'      INCORRECT KEY USED      00511100
.ZG3A1               AIF   (K'&VERSCOMP LE 0).ZG3A2  OK                 00511200
&ZCVAL               SETC '&ZCVAL VERSCOMP'     INCORRECT KEY USED      00511300
.ZG3A2               AIF   (K'&VERSCOMPTYPE LE 0).ZG3A3  OK             00511400
&ZCVAL               SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED     00511500
.ZG3A3               AIF   (K'&VERSUPDATE LE 0).ZG3A4  OK               00511600
&ZCVAL               SETC '&ZCVAL VERSUPDATE'   INCORRECT KEY USED      00511700
.ZG3A4               AIF   (K'&NEWVERS LE 0).ZG3A5  OK                  00511800
&ZCVAL               SETC '&ZCVAL NEWVERS'      INCORRECT KEY USED      00511900
.ZG3A5               AIF   (K'&CHANGED LE 0).ZG3A6  OK                  00512000
&ZCVAL               SETC '&ZCVAL CHANGED'      INCORRECT KEY USED      00512100
.ZG3A6               AIF   (K'&CROSSINVAL LE 0).ZG3A7  OK               00512200
&ZCVAL               SETC '&ZCVAL CROSSINVAL'   INCORRECT KEY USED      00512300
.ZG3A7               AIF   (K'&GETCOLOCK LE 0).ZG3A8  OK                00512400
&ZCVAL               SETC '&ZCVAL GETCOLOCK'    INCORRECT KEY USED      00512500
.ZG3A8               AIF   (K'&PROCESSID LE 0).ZG3A9  OK                00512600
&ZCVAL               SETC '&ZCVAL PROCESSID'    INCORRECT KEY USED      00512700
.ZG3A9               AIF   (K'&PARITY LE 0).ZG3A10  OK                  00512800
&ZCVAL               SETC '&ZCVAL PARITY'       INCORRECT KEY USED      00512900
.ZG3A10              AIF   (K'&USERDATA LE 0).ZG3A11  OK                00513000
&ZCVAL               SETC '&ZCVAL USERDATA'     INCORRECT KEY USED      00513100
.ZG3A11              AIF   (K'&ELEMNUM LE 0).ZG3A12  OK                 00513200
&ZCVAL               SETC '&ZCVAL ELEMNUM'      INCORRECT KEY USED      00513300
.ZG3A12              AIF   (K'&STARTINDEX LE 0).ZG3A13  OK              00513400
&ZCVAL               SETC '&ZCVAL STARTINDEX'   INCORRECT KEY USED      00513500
.ZG3A13              AIF   (K'&ENDINDEX LE 0).ZG3A14  OK                00513600
&ZCVAL               SETC '&ZCVAL ENDINDEX'     INCORRECT KEY USED      00513700
.ZG3A14              AIF   (K'&NSBAREA LE 0).ZG3A15  OK                 00513800
&ZCVAL               SETC '&ZCVAL NSBAREA'      INCORRECT KEY USED      00513900
.ZG3A15              AIF   (K'&FIRSTNAME LE 0).ZG3A16  OK               00514000
&ZCVAL               SETC '&ZCVAL FIRSTNAME'    INCORRECT KEY USED      00514100
.ZG3A16              AIF   (K'&LASTNAME LE 0).ZG3A17  OK                00514200
&ZCVAL               SETC '&ZCVAL LASTNAME'     INCORRECT KEY USED      00514300
.ZG3A17              AIF   (K'&CUNBAREA LE 0).ZG3A18  OK                00514400
&ZCVAL               SETC '&ZCVAL CUNBAREA'     INCORRECT KEY USED      00514500
.ZG3A18              AIF   (K'&DELETETYPE LE 0).ZG3A19  OK              00514600
&ZCVAL               SETC '&ZCVAL DELETETYPE'   INCORRECT KEY USED      00514700
.ZG3A19              AIF   (K'&ERRORACTION LE 0).ZG3A20  OK             00514800
&ZCVAL               SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED      00514900
.ZG3A20              AIF   (K'&DIRINFOFMT LE 0).ZG3A21  OK              00515000
&ZCVAL               SETC '&ZCVAL DIRINFOFMT'   INCORRECT KEY USED      00515100
.ZG3A21              AIF   (K'&CRITERIA LE 0).ZG3A22  OK                00515200
&ZCVAL               SETC '&ZCVAL CRITERIA'     INCORRECT KEY USED      00515300
.ZG3A22              AIF   (K'&COCLASSB LE 0).ZG3A23  OK                00515400
&ZCVAL               SETC '&ZCVAL COCLASSB'     INCORRECT KEY USED      00515500
.ZG3A23              AIF   (K'&COCLASSE LE 0).ZG3A24  OK                00515600
&ZCVAL               SETC '&ZCVAL COCLASSE'     INCORRECT KEY USED      00515700
.ZG3A24              AIF   (K'&COSTATSFMT LE 0).ZG3A25  OK              00515800
&ZCVAL               SETC '&ZCVAL COSTATSFMT'   INCORRECT KEY USED      00515900
.ZG3A25              AIF   (K'&STGSTATS LE 0).ZG3A26  OK                00516000
&ZCVAL               SETC '&ZCVAL STGSTATS'     INCORRECT KEY USED      00516100
.ZG3A26              AIF   (K'&NUMNAMES LE 0).ZG3A27  OK                00516200
&ZCVAL               SETC '&ZCVAL NUMNAMES'     INCORRECT KEY USED      00516300
.ZG3A27              AIF   (K'&REPEAT LE 0).ZG3A28  OK                  00516400
&ZCVAL               SETC '&ZCVAL REPEAT'       INCORRECT KEY USED      00516500
.ZG3A28              AIF   (K'&RECLVCTR LE 0).ZG3A29  OK                00516600
&ZCVAL               SETC '&ZCVAL RECLVCTR'     INCORRECT KEY USED      00516700
.ZG3A29              AIF   (K'&ZCVAL LE 0).ZG3A30  OK                   00516800
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00516900
                     AIF  (K'&ZCVAL LE 160).ZG3A30A                     00517000
&ZCVAL               SETC '&ZCVAL'(1,160)                               00517100
&ZCVAL               SETC '&ZCVAL....'                                  00517200
.ZG3A30A             ANOP                                               00517300
&ZMS                 SETC  '"REQUEST'  *KMEIA* MNOTE                    00517400
&ZMS                 SETC  '&ZMS.=&REQUEST"'                            00517500
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00517600
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00517700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00517800
.ZG3A30              ANOP  ,                                            00517900
.*----------------------------------------------------------------***   00518000
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00518100
                     AIF   (N'&ASSIGN LE 1).ZG5A  CK NUM                00518200
&ZMS                 SETC  '"ASSIGN='  *KPOSA* MNOTE                    00518300
&ZMS                 SETC  '&ZMS.&ASSIGN"'                              00518400
&ZMS                 SETC  '&ZMS "ASSIGN"'                              00518500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00518600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00518700
.ZG5A                ANOP  ,                                            00518800
.*-------------------------------------------------------------------   00518900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00519000
&XASSIGN             SETC  ''          INITIALIZE XVARIABLE             00519100
.ZG6A   AIF   ('&ASSIGN(1)' NE 'YES').ZG7A                              00519200
&XASSIGN             SETC  'YES'       SET KEYWORD                      00519300
.*-------------------------------------------------------------------   00519400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00519500
.ZG7A   AIF   ('&ASSIGN(1)' NE 'NO').ZG8A                               00519600
&XASSIGN             SETC  'NO'        SET KEYWORD                      00519700
.*-------------------------------------------------------------------   00519800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00519900
.ZG8A                AIF   (K'&XASSIGN GT 0).ZG8C  KEYWORD              00520000
                     AIF   (K'&ASSIGN(1) LE 0).ZG8B                     00520100
&ZMS                 SETC  '"ASSIGN='  *KUKWA* MNOTE                    00520200
&ZMS                 SETC  '&ZMS.&ASSIGN"'                              00520300
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00520400
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00520500
&ZMS                 SETC  '&ZMS "YES"'                                 00520600
&ZMS                 SETC  '&ZMS OR "NO".'                              00520700
                     MNOTE 8,' &ZMS '                                   00520800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00520900
.ZG8B                ANOP  ,                                            00521000
&XASSIGN             SETC  'YES'       SET DEFAULT KEYWORD              00521100
.ZG8C                ANOP  ,                                            00521200
&ZXASSIGN            SETC  'INPUT'     SET IN/OUTPUT                    00521300
.*----------------------------------------------------------------***   00521400
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00521500
                     AIF   (N'&REGUSER LE 1).ZG10A  CK NUM              00521600
&ZMS                 SETC  '"REGUSER='          *KPOSA* MNOTE           00521700
&ZMS                 SETC  '&ZMS.&REGUSER"'                             00521800
&ZMS                 SETC  '&ZMS "REGUSER"'                             00521900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00522000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00522100
.ZG10A               ANOP  ,                                            00522200
.*-------------------------------------------------------------------   00522300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00522400
&XREGUSER            SETC  ''          INITIALIZE XVARIABLE             00522500
.ZG11A   AIF   ('&REGUSER(1)' NE 'YES').ZG12A                           00522600
&XREGUSER            SETC  'YES'       SET KEYWORD                      00522700
.*-------------------------------------------------------------------   00522800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00522900
.ZG12A   AIF   ('&REGUSER(1)' NE 'NO').ZG13A                            00523000
&XREGUSER            SETC  'NO'        SET KEYWORD                      00523100
.*-------------------------------------------------------------------   00523200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00523300
.ZG13A               AIF   (K'&XREGUSER GT 0).ZG13C  KEYWORD            00523400
                     AIF   (K'&REGUSER(1) LE 0).ZG13B                   00523500
&ZMS                 SETC  '"REGUSER='          *KUKWA* MNOTE           00523600
&ZMS                 SETC  '&ZMS.&REGUSER"'                             00523700
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00523800
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00523900
&ZMS                 SETC  '&ZMS "YES"'                                 00524000
&ZMS                 SETC  '&ZMS OR "NO".'                              00524100
                     MNOTE 8,' &ZMS '                                   00524200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00524300
.ZG13B               ANOP  ,                                            00524400
&XREGUSER            SETC  'YES'       SET DEFAULT KEYWORD              00524500
.ZG13C               ANOP  ,                                            00524600
&ZXREGUSER           SETC  'INPUT'     SET IN/OUTPUT                    00524700
.*----------------------------------------------------------------***   00524800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00524900
                     AIF   (N'&RETURNDATA LE 1).ZG15A  CK NUM           00525000
&ZMS                 SETC  '"RETURNDATA='       *KPOSA* MNOTE           00525100
&ZMS                 SETC  '&ZMS.&RETURNDATA"'                          00525200
&ZMS                 SETC  '&ZMS "RETURNDATA"'                          00525300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00525400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00525500
.ZG15A               ANOP  ,                                            00525600
.*-------------------------------------------------------------------   00525700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00525800
&XRETURNDATA         SETC  ''          INITIALIZE XVARIABLE             00525900
.ZG16A   AIF   ('&RETURNDATA(1)' NE 'YES').ZG17A                        00526000
&XRETURNDATA         SETC  'YES'       SET KEYWORD                      00526100
.*-------------------------------------------------------------------   00526200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00526300
.ZG17A   AIF   ('&RETURNDATA(1)' NE 'NO').ZG18A                         00526400
&XRETURNDATA         SETC  'NO'        SET KEYWORD                      00526500
.*-------------------------------------------------------------------   00526600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00526700
.ZG18A               AIF   (K'&XRETURNDATA GT 0).ZG18C  KEYWORD         00526800
                     AIF   (K'&RETURNDATA(1) LE 0).ZG18B                00526900
&ZMS                 SETC  '"RETURNDATA='       *KUKWA* MNOTE           00527000
&ZMS                 SETC  '&ZMS.&RETURNDATA"'                          00527100
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00527200
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00527300
&ZMS                 SETC  '&ZMS "YES"'                                 00527400
&ZMS                 SETC  '&ZMS OR "NO".'                              00527500
                     MNOTE 8,' &ZMS '                                   00527600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00527700
.ZG18B               ANOP  ,                                            00527800
&XRETURNDATA         SETC  'YES'       SET DEFAULT KEYWORD              00527900
.ZG18C               ANOP  ,                                            00528000
&ZXRETURNDATA        SETC  'INPUT'     SET IN/OUTPUT                    00528100
.*-------------------------------------------------------------------   00528200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00528300
.ZG19                ANOP  ,                                            00528400
&ZTLC                SETC 'WRITE_DATA'                                  00528500
                     AIF   ('&REQUEST(1)' NE '&ZTLC').ZG80              00528600
&XREQUEST            SETC  'WRITE_DATA'         SET KEYWORD             00528700
                     AIF   (N'&REQUEST LE 1).ZG19A  CK NUM              00528800
&ZMS                 SETC  '"REQUEST='          *KPOSA* MNOTE           00528900
&ZMS                 SETC  '&ZMS.&REQUEST"'                             00529000
&ZMS                 SETC  '&ZMS "REQUEST"'                             00529100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00529200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00529300
.ZG19A               ANOP  ,                                            00529400
.*------------------------------------------------------------------    00529500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00529600
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00529700
.ZG19A0              AIF   (K'&RETURNDATA LE 0).ZG19A1  OK              00529800
&ZCVAL               SETC '&ZCVAL RETURNDATA'   INCORRECT KEY USED      00529900
.ZG19A1              AIF   (K'&STARTINDEX LE 0).ZG19A2  OK              00530000
&ZCVAL               SETC '&ZCVAL STARTINDEX'   INCORRECT KEY USED      00530100
.ZG19A2              AIF   (K'&ENDINDEX LE 0).ZG19A3  OK                00530200
&ZCVAL               SETC '&ZCVAL ENDINDEX'     INCORRECT KEY USED      00530300
.ZG19A3              AIF   (K'&NSBAREA LE 0).ZG19A4  OK                 00530400
&ZCVAL               SETC '&ZCVAL NSBAREA'      INCORRECT KEY USED      00530500
.ZG19A4              AIF   (K'&FIRSTNAME LE 0).ZG19A5  OK               00530600
&ZCVAL               SETC '&ZCVAL FIRSTNAME'    INCORRECT KEY USED      00530700
.ZG19A5              AIF   (K'&LASTNAME LE 0).ZG19A6  OK                00530800
&ZCVAL               SETC '&ZCVAL LASTNAME'     INCORRECT KEY USED      00530900
.ZG19A6              AIF   (K'&CUNBAREA LE 0).ZG19A7  OK                00531000
&ZCVAL               SETC '&ZCVAL CUNBAREA'     INCORRECT KEY USED      00531100
.ZG19A7              AIF   (K'&DELETETYPE LE 0).ZG19A8  OK              00531200
&ZCVAL               SETC '&ZCVAL DELETETYPE'   INCORRECT KEY USED      00531300
.ZG19A8              AIF   (K'&ERRORACTION LE 0).ZG19A9  OK             00531400
&ZCVAL               SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED      00531500
.ZG19A9              AIF   (K'&DIRINFOFMT LE 0).ZG19A10  OK             00531600
&ZCVAL               SETC '&ZCVAL DIRINFOFMT'   INCORRECT KEY USED      00531700
.ZG19A10             AIF   (K'&CRITERIA LE 0).ZG19A11  OK               00531800
&ZCVAL               SETC '&ZCVAL CRITERIA'     INCORRECT KEY USED      00531900
.ZG19A11             AIF   (K'&COCLASSB LE 0).ZG19A12  OK               00532000
&ZCVAL               SETC '&ZCVAL COCLASSB'     INCORRECT KEY USED      00532100
.ZG19A12             AIF   (K'&COCLASSE LE 0).ZG19A13  OK               00532200
&ZCVAL               SETC '&ZCVAL COCLASSE'     INCORRECT KEY USED      00532300
.ZG19A13             AIF   (K'&COSTATSFMT LE 0).ZG19A14  OK             00532400
&ZCVAL               SETC '&ZCVAL COSTATSFMT'   INCORRECT KEY USED      00532500
.ZG19A14             AIF   (K'&STGSTATS LE 0).ZG19A15  OK               00532600
&ZCVAL               SETC '&ZCVAL STGSTATS'     INCORRECT KEY USED      00532700
.ZG19A15             AIF   (K'&NUMNAMES LE 0).ZG19A16  OK               00532800
&ZCVAL               SETC '&ZCVAL NUMNAMES'     INCORRECT KEY USED      00532900
.ZG19A16             AIF   (K'&REPEAT LE 0).ZG19A17  OK                 00533000
&ZCVAL               SETC '&ZCVAL REPEAT'       INCORRECT KEY USED      00533100
.ZG19A17             AIF   (K'&RECLVCTR LE 0).ZG19A18  OK               00533200
&ZCVAL               SETC '&ZCVAL RECLVCTR'     INCORRECT KEY USED      00533300
.ZG19A18             AIF   (K'&ZCVAL LE 0).ZG19A19  OK                  00533400
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00533500
                     AIF  (K'&ZCVAL LE 160).ZG19A19A                    00533600
&ZCVAL               SETC '&ZCVAL'(1,160)                               00533700
&ZCVAL               SETC '&ZCVAL....'                                  00533800
.ZG19A19A            ANOP                                               00533900
&ZMS                 SETC  '"REQUEST'  *KMEIA* MNOTE                    00534000
&ZMS                 SETC  '&ZMS.=&REQUEST"'                            00534100
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00534200
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00534300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00534400
.ZG19A19             ANOP  ,                                            00534500
.*------------------------------------------------------------------    00534600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00534700
&XWHENREG            SETC  ''          INITIALIZE XVARIABLE             00534800
.*-------------------------------------------------------------------   00534900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00535000
.ZG22                ANOP  ,                                            00535100
                     AIF   (K'&WHENREG(1) LE 0).ZG22A                   00535200
&ZTLC                SETC 'YES'                                         00535300
                     AIF   ('&WHENREG(1)' NE '&ZTLC').ZG23              00535400
&XWHENREG            SETC  'YES'       SET KEYWORD                      00535500
                     AIF   (N'&WHENREG LE 1).ZG22A  CK NUM              00535600
&ZMS                 SETC  '"WHENREG='          *KPOSA* MNOTE           00535700
&ZMS                 SETC  '&ZMS.&WHENREG"'                             00535800
&ZMS                 SETC  '&ZMS "WHENREG"'                             00535900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00536000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00536100
.ZG22A               ANOP  ,                                            00536200
.*------------------------------------------------------------------    00536300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00536400
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00536500
.ZG22A0              AIF   (K'&REGUSER LE 0).ZG22A1  OK                 00536600
&ZCVAL               SETC '&ZCVAL REGUSER'      INCORRECT KEY USED      00536700
.ZG22A1              AIF   (K'&ASSIGN LE 0).ZG22A2  OK                  00536800
&ZCVAL               SETC '&ZCVAL ASSIGN'       INCORRECT KEY USED      00536900
.ZG22A2              AIF   (K'&ZCVAL LE 0).ZG22A3  OK                   00537000
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00537100
&ZMS                 SETC  '"WHENREG'  *KMEIA* MNOTE                    00537200
&ZMS                 SETC  '&ZMS.=&WHENREG"'                            00537300
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00537400
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00537500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00537600
.ZG22A3              ANOP  ,                                            00537700
.*-------------------------------------------------------------------   00537800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00537900
.ZG23                ANOP  ,                                            00538000
&ZTLC                SETC 'NO'                                          00538100
                     AIF   ('&WHENREG(1)' NE '&ZTLC').ZG34              00538200
&XWHENREG            SETC  'NO'        SET KEYWORD                      00538300
                     AIF   (N'&WHENREG LE 1).ZG23A  CK NUM              00538400
&ZMS                 SETC  '"WHENREG='          *KPOSA* MNOTE           00538500
&ZMS                 SETC  '&ZMS.&WHENREG"'                             00538600
&ZMS                 SETC  '&ZMS "WHENREG"'                             00538700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00538800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00538900
.ZG23A               ANOP  ,                                            00539000
.*----------------------------------------------------------------***   00539100
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00539200
                     AIF   (N'&REGUSER LE 1).ZG25A  CK NUM              00539300
&ZMS                 SETC  '"REGUSER='          *KPOSA* MNOTE           00539400
&ZMS                 SETC  '&ZMS.&REGUSER"'                             00539500
&ZMS                 SETC  '&ZMS "REGUSER"'                             00539600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00539700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00539800
.ZG25A               ANOP  ,                                            00539900
.*-------------------------------------------------------------------   00540000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00540100
&XREGUSER            SETC  ''          INITIALIZE XVARIABLE             00540200
.ZG26A   AIF   ('&REGUSER(1)' NE 'YES').ZG27A                           00540300
&XREGUSER            SETC  'YES'       SET KEYWORD                      00540400
.*-------------------------------------------------------------------   00540500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00540600
.ZG27A   AIF   ('&REGUSER(1)' NE 'NO').ZG28A                            00540700
&XREGUSER            SETC  'NO'        SET KEYWORD                      00540800
.*-------------------------------------------------------------------   00540900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00541000
.ZG28A               AIF   (K'&XREGUSER GT 0).ZG28C  KEYWORD            00541100
                     AIF   (K'&REGUSER(1) LE 0).ZG28B                   00541200
&ZMS                 SETC  '"REGUSER='          *KUKWA* MNOTE           00541300
&ZMS                 SETC  '&ZMS.&REGUSER"'                             00541400
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00541500
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00541600
&ZMS                 SETC  '&ZMS "YES"'                                 00541700
&ZMS                 SETC  '&ZMS OR "NO".'                              00541800
                     MNOTE 8,' &ZMS '                                   00541900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00542000
.ZG28B               ANOP  ,                                            00542100
&XREGUSER            SETC  'YES'       SET DEFAULT KEYWORD              00542200
.ZG28C               ANOP  ,                                            00542300
&ZXREGUSER           SETC  'INPUT'     SET IN/OUTPUT                    00542400
.*----------------------------------------------------------------***   00542500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00542600
                     AIF   (N'&ASSIGN LE 1).ZG30A  CK NUM               00542700
&ZMS                 SETC  '"ASSIGN='  *KPOSA* MNOTE                    00542800
&ZMS                 SETC  '&ZMS.&ASSIGN"'                              00542900
&ZMS                 SETC  '&ZMS "ASSIGN"'                              00543000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00543100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00543200
.ZG30A               ANOP  ,                                            00543300
.*-------------------------------------------------------------------   00543400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00543500
&XASSIGN             SETC  ''          INITIALIZE XVARIABLE             00543600
.ZG31A   AIF   ('&ASSIGN(1)' NE 'YES').ZG32A                            00543700
&XASSIGN             SETC  'YES'       SET KEYWORD                      00543800
.*-------------------------------------------------------------------   00543900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00544000
.ZG32A   AIF   ('&ASSIGN(1)' NE 'NO').ZG33A                             00544100
&XASSIGN             SETC  'NO'        SET KEYWORD                      00544200
.*-------------------------------------------------------------------   00544300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00544400
.ZG33A               AIF   (K'&XASSIGN GT 0).ZG33C  KEYWORD             00544500
                     AIF   (K'&ASSIGN(1) LE 0).ZG33B                    00544600
&ZMS                 SETC  '"ASSIGN='  *KUKWA* MNOTE                    00544700
&ZMS                 SETC  '&ZMS.&ASSIGN"'                              00544800
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00544900
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00545000
&ZMS                 SETC  '&ZMS "YES"'                                 00545100
&ZMS                 SETC  '&ZMS OR "NO".'                              00545200
                     MNOTE 8,' &ZMS '                                   00545300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00545400
.ZG33B               ANOP  ,                                            00545500
&XASSIGN             SETC  'YES'       SET DEFAULT KEYWORD              00545600
.ZG33C               ANOP  ,                                            00545700
&ZXASSIGN            SETC  'INPUT'     SET IN/OUTPUT                    00545800
.*------------------------------------------------------------------    00545900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00546000
.ZG34                ANOP  ,                                            00546100
&ZXWHENREG           SETC  'INPUT'     SET IN/OUTPUT                    00546200
                     AIF   (K'&XWHENREG GT 0).ZG34E  VALID ARG          00546300
                     AIF   (T'&WHENREG EQ 'O').ZG34D  OMITTED           00546400
&ZASYSLNDX           SETA  0                                            00546500
.ZG34A               ANOP  ,           POSITIONAL MACRO KEY             00546600
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00546700
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG34C             00546800
&ZTLC                SETC 'WHENREG'                                     00546900
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG34A    00547000
.ZG34B               ANOP  ,                                            00547100
&ZXWHENREG           SETC  ''          RESET IN/OUTPUT                  00547200
&ZMS                 SETC  'THE "WHENREG" KEY'  *KOPTA* MNOTE           00547300
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00547400
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00547500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00547600
                     AGO   .ZG34E                                       00547700
.ZG34C               ANOP  ,                                            00547800
&ZXWHENREG           SETC  ''          RESET IN/OUTPUT                  00547900
&ZMS                 SETC  '"WHENREG='          *KUKWA* MNOTE           00548000
&ZMS                 SETC  '&ZMS.&WHENREG"'                             00548100
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00548200
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00548300
&ZMS                 SETC  '&ZMS "YES"'                                 00548400
&ZMS                 SETC  '&ZMS OR "NO".'                              00548500
                     MNOTE 8,' &ZMS '                                   00548600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00548700
                     AGO   .ZG34E                                       00548800
.ZG34D               ANOP  ,                                            00548900
&XWHENREG            SETC  'YES'       SET DEFAULT KEYWORD              00549000
.ZG34E               ANOP  ,                                            00549100
.*----------------------------------------------------------------***   00549200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00549300
                     AIF   (N'&VERSCOMP LE 1).ZG36A  CK NUM             00549400
&ZMS                 SETC  '"VERSCOMP='         *KPOSA* MNOTE           00549500
&ZMS                 SETC  '&ZMS.&VERSCOMP"'                            00549600
&ZMS                 SETC  '&ZMS "VERSCOMP"'                            00549700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00549800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00549900
.ZG36A               ANOP  ,                                            00550000
.*-------------------------------------------------------------------   00550100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00550200
&ZXVERSCOMP          SETC  'INPUT'     SET IN/OUTPUT                    00550300
&XVERSCOMP           SETC  'NO_VERSCOMP'                                00550400
                     AIF   (K'&VERSCOMP(1) LE 0).ZG36B  PARM            00550500
&XVERSCOMP           SETC  '&VERSCOMP(1)'       SET XVARIABLE           00550600
                     AIF   (N'&VERSCOMP GT 1).ZG36B  MULTI PARMS        00550700
&XVERSCOMP           SETC  '&VERSCOMP'          SET XVARIABLE           00550800
.ZG36B               ANOP  ,                                            00550900
.*-------------------------------------------------------------------   00551000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00551100
                     AIF   (K'&ZXVERSCOMP LE 0).ZG36R  NOT I/O          00551200
         AIF   ('&XVERSCOMP' EQ 'NO_VERSCOMP').ZG36R                    00551300
                     AIF   ('&XVERSCOMP'(1,1) NE '(').ZG36R             00551400
&ZCGPR               SETC  '&XVERSCOMP'(2,K'&XVERSCOMP-2)               00551500
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG36P                 00551600
                     AIF   (K'&ZCGPR GT 2).ZG36Q                        00551700
                     AIF   ('&ZCGPR' EQ '0').ZG36Q                      00551800
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00551900
                     AIF   (T'&ZCGPR NE 'N').ZG36Q  INVALID REG NAME    00552000
.ZG36P               ANOP  ,                                            00552100
                     AIF   (T'&ZCGPR NE 'N').ZG36R  NON NUMERIC         00552200
                     AIF   ('&ZCGPR' LT '2').ZG36Q                      00552300
                     AIF   ('&ZCGPR' LE '12').ZG36R                     00552400
.ZG36Q               ANOP  ,                                            00552500
&ZMS                 SETC  '"VERSCOMP='         *KGPRA* MNOTE           00552600
&ZMS                 SETC  '&ZMS.&VERSCOMP"'                            00552700
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00552800
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00552900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00553000
.ZG36R               ANOP  ,                                            00553100
.*----------------------------------------------------------------***   00553200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00553300
                     AIF   (N'&VERSCOMPTYPE LE 1).ZG38A  CK NUM         00553400
&ZMS                 SETC  '"VERSCOMPTYPE='     *KPOSA* MNOTE           00553500
&ZMS                 SETC  '&ZMS.&VERSCOMPTYPE"'                        00553600
&ZMS                 SETC  '&ZMS "VERSCOMPTYPE"'                        00553700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00553800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00553900
.ZG38A               ANOP  ,                                            00554000
.*-------------------------------------------------------------------   00554100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00554200
&XVERSCOMPTYPE       SETC  ''          INITIALIZE XVARIABLE             00554300
.ZG39A   AIF   ('&VERSCOMPTYPE(1)' NE 'EQUAL').ZG40A                    00554400
&XVERSCOMPTYPE       SETC  'EQUAL'     SET KEYWORD                      00554500
.*-------------------------------------------------------------------   00554600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00554700
.ZG40A   AIF   ('&VERSCOMPTYPE(1)' NE 'LESSOREQUAL').ZG41A              00554800
&XVERSCOMPTYPE       SETC  'LESSOREQUAL'        SET KEYWORD             00554900
.*-------------------------------------------------------------------   00555000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00555100
.ZG41A               AIF   (K'&XVERSCOMPTYPE GT 0).ZG41C  KEYWORD       00555200
                     AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG41B              00555300
&ZMS                 SETC  '"VERSCOMPTYPE='     *KUKWA* MNOTE           00555400
&ZMS                 SETC  '&ZMS.&VERSCOMPTYPE"'                        00555500
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00555600
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00555700
&ZMS                 SETC  '&ZMS "EQUAL"'                               00555800
&ZMS                 SETC  '&ZMS OR "LESSOREQUAL".'                     00555900
                     MNOTE 8,' &ZMS '                                   00556000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00556100
.ZG41B               ANOP  ,                                            00556200
&XVERSCOMPTYPE       SETC  'EQUAL'     SET DEFAULT KEYWORD              00556300
.ZG41C               ANOP  ,                                            00556400
&ZXVERSCOMPTYPE      SETC  'INPUT'     SET IN/OUTPUT                    00556500
.*-------------------------------------------------------------------   00556600
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00556700
                     AIF   (K'&VERSCOMP(1) GT 0).ZG41D  KEY             00556800
                     AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG41D  PARM        00556900
&ZMS                 SETC  '"VERSCOMPTYPE'      *KDEPA* MNOTE           00557000
&ZMS                 SETC  '&ZMS.=&VERSCOMPTYPE"'                       00557100
&ZMS                 SETC  '&ZMS CAN ONLY BE SPECIFIED IF'              00557200
&ZMS                 SETC  '&ZMS '                                      00557300
&ZMS                 SETC  '&ZMS "VERSCOMP"'                            00557400
                     MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                 00557500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00557600
.ZG41D               ANOP  ,                                            00557700
.*------------------------------------------------------------------    00557800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00557900
&XVERSUPDATE         SETC  ''          INITIALIZE XVARIABLE             00558000
.*-------------------------------------------------------------------   00558100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00558200
.ZG45                ANOP  ,                                            00558300
                     AIF   (K'&VERSUPDATE(1) LE 0).ZG45A                00558400
&ZTLC                SETC 'NONE'                                        00558500
                     AIF   ('&VERSUPDATE(1)' NE '&ZTLC').ZG46           00558600
&XVERSUPDATE         SETC  'NONE'      SET KEYWORD                      00558700
                     AIF   (N'&VERSUPDATE LE 1).ZG45A  CK NUM           00558800
&ZMS                 SETC  '"VERSUPDATE='       *KPOSA* MNOTE           00558900
&ZMS                 SETC  '&ZMS.&VERSUPDATE"'                          00559000
&ZMS                 SETC  '&ZMS "VERSUPDATE"'                          00559100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00559200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00559300
.ZG45A               ANOP  ,                                            00559400
.*------------------------------------------------------------------    00559500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00559600
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00559700
.ZG45A0              AIF   (K'&NEWVERS LE 0).ZG45A1  OK                 00559800
&ZCVAL               SETC '&ZCVAL NEWVERS'      INCORRECT KEY USED      00559900
.ZG45A1              AIF   (K'&ZCVAL LE 0).ZG45A2  OK                   00560000
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00560100
&ZMS                 SETC  '"VERSUPDATE'        *KMEIA* MNOTE           00560200
&ZMS                 SETC  '&ZMS.=&VERSUPDATE"'                         00560300
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00560400
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00560500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00560600
.ZG45A2              ANOP  ,                                            00560700
.*-------------------------------------------------------------------   00560800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00560900
.ZG46                ANOP  ,                                            00561000
&ZTLC                SETC 'INC'                                         00561100
                     AIF   ('&VERSUPDATE(1)' NE '&ZTLC').ZG47           00561200
&XVERSUPDATE         SETC  'INC'       SET KEYWORD                      00561300
                     AIF   (N'&VERSUPDATE LE 1).ZG46A  CK NUM           00561400
&ZMS                 SETC  '"VERSUPDATE='       *KPOSA* MNOTE           00561500
&ZMS                 SETC  '&ZMS.&VERSUPDATE"'                          00561600
&ZMS                 SETC  '&ZMS "VERSUPDATE"'                          00561700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00561800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00561900
.ZG46A               ANOP  ,                                            00562000
.*------------------------------------------------------------------    00562100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00562200
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00562300
.ZG46A0              AIF   (K'&NEWVERS LE 0).ZG46A1  OK                 00562400
&ZCVAL               SETC '&ZCVAL NEWVERS'      INCORRECT KEY USED      00562500
.ZG46A1              AIF   (K'&ZCVAL LE 0).ZG46A2  OK                   00562600
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00562700
&ZMS                 SETC  '"VERSUPDATE'        *KMEIA* MNOTE           00562800
&ZMS                 SETC  '&ZMS.=&VERSUPDATE"'                         00562900
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00563000
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00563100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00563200
.ZG46A2              ANOP  ,                                            00563300
.*-------------------------------------------------------------------   00563400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00563500
.ZG47                ANOP  ,                                            00563600
&ZTLC                SETC 'DEC'                                         00563700
                     AIF   ('&VERSUPDATE(1)' NE '&ZTLC').ZG48           00563800
&XVERSUPDATE         SETC  'DEC'       SET KEYWORD                      00563900
                     AIF   (N'&VERSUPDATE LE 1).ZG47A  CK NUM           00564000
&ZMS                 SETC  '"VERSUPDATE='       *KPOSA* MNOTE           00564100
&ZMS                 SETC  '&ZMS.&VERSUPDATE"'                          00564200
&ZMS                 SETC  '&ZMS "VERSUPDATE"'                          00564300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00564400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00564500
.ZG47A               ANOP  ,                                            00564600
.*------------------------------------------------------------------    00564700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00564800
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00564900
.ZG47A0              AIF   (K'&NEWVERS LE 0).ZG47A1  OK                 00565000
&ZCVAL               SETC '&ZCVAL NEWVERS'      INCORRECT KEY USED      00565100
.ZG47A1              AIF   (K'&ZCVAL LE 0).ZG47A2  OK                   00565200
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00565300
&ZMS                 SETC  '"VERSUPDATE'        *KMEIA* MNOTE           00565400
&ZMS                 SETC  '&ZMS.=&VERSUPDATE"'                         00565500
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00565600
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00565700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00565800
.ZG47A2              ANOP  ,                                            00565900
.*-------------------------------------------------------------------   00566000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00566100
.ZG48                ANOP  ,                                            00566200
&ZTLC                SETC 'SET'                                         00566300
                     AIF   ('&VERSUPDATE(1)' NE '&ZTLC').ZG52           00566400
&XVERSUPDATE         SETC  'SET'       SET KEYWORD                      00566500
                     AIF   (N'&VERSUPDATE LE 1).ZG48A  CK NUM           00566600
&ZMS                 SETC  '"VERSUPDATE='       *KPOSA* MNOTE           00566700
&ZMS                 SETC  '&ZMS.&VERSUPDATE"'                          00566800
&ZMS                 SETC  '&ZMS "VERSUPDATE"'                          00566900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00567000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00567100
.ZG48A               ANOP  ,                                            00567200
.*----------------------------------------------------------------***   00567300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00567400
                     AIF   (N'&NEWVERS LE 1).ZG50A  CK NUM              00567500
&ZMS                 SETC  '"NEWVERS='          *KPOSA* MNOTE           00567600
&ZMS                 SETC  '&ZMS.&NEWVERS"'                             00567700
&ZMS                 SETC  '&ZMS "NEWVERS"'                             00567800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00567900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00568000
.ZG50A               ANOP  ,                                            00568100
.*-------------------------------------------------------------------   00568200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00568300
&ZXNEWVERS           SETC  'INPUT'     SET IN/OUTPUT                    00568400
&XNEWVERS            SETC  '&NEWVERS(1)'        SET XVARIABLE           00568500
                     AIF   (N'&NEWVERS GT 1).ZG50B  MULTI PARMS         00568600
&XNEWVERS            SETC  '&NEWVERS'  SET XVARIABLE                    00568700
.ZG50B               AIF   (K'&NEWVERS(1) GT 0).ZG50C                   00568800
&ZXNEWVERS           SETC  ''          RESET IN/OUTPUT                  00568900
&ZMS                 SETC  ' '         *KRQDA*                          00569000
&ZMS                 SETC  '&ZMS "NEWVERS" KEY AND ITS'                 00569100
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00569200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00569300
                     AGO   .ZG50D                                       00569400
.ZG50C               AIF   ('&XNEWVERS' NE 'NO_NEWVERS').ZG50D          00569500
&ZXNEWVERS           SETC  ''          RESET IN/OUTPUT                  00569600
.ZG50D               ANOP  ,                                            00569700
.*-------------------------------------------------------------------   00569800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00569900
                     AIF   (K'&ZXNEWVERS LE 0).ZG50R  NOT I/O           00570000
         AIF   ('&XNEWVERS' EQ 'NO_NEWVERS').ZG50R                      00570100
                     AIF   ('&XNEWVERS'(1,1) NE '(').ZG50R              00570200
&ZCGPR               SETC  '&XNEWVERS'(2,K'&XNEWVERS-2)                 00570300
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG50P                 00570400
                     AIF   (K'&ZCGPR GT 2).ZG50Q                        00570500
                     AIF   ('&ZCGPR' EQ '0').ZG50Q                      00570600
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00570700
                     AIF   (T'&ZCGPR NE 'N').ZG50Q  INVALID REG NAME    00570800
.ZG50P               ANOP  ,                                            00570900
                     AIF   (T'&ZCGPR NE 'N').ZG50R  NON NUMERIC         00571000
                     AIF   ('&ZCGPR' LT '2').ZG50Q                      00571100
                     AIF   ('&ZCGPR' LE '12').ZG50R                     00571200
.ZG50Q               ANOP  ,                                            00571300
&ZMS                 SETC  '"NEWVERS='          *KGPRA* MNOTE           00571400
&ZMS                 SETC  '&ZMS.&NEWVERS"'                             00571500
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00571600
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00571700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00571800
.ZG50R               ANOP  ,                                            00571900
.*------------------------------------------------------------------    00572000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00572100
.ZG52                ANOP  ,                                            00572200
&ZXVERSUPDATE        SETC  'INPUT'     SET IN/OUTPUT                    00572300
                     AIF   (K'&XVERSUPDATE GT 0).ZG52E  VALID ARG       00572400
                     AIF   (T'&VERSUPDATE EQ 'O').ZG52D  OMITTED        00572500
&ZASYSLNDX           SETA  0                                            00572600
.ZG52A               ANOP  ,           POSITIONAL MACRO KEY             00572700
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00572800
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG52C             00572900
&ZTLC                SETC 'VERSUPDATE'                                  00573000
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG52A    00573100
.ZG52B               ANOP  ,                                            00573200
&ZXVERSUPDATE        SETC  ''          RESET IN/OUTPUT                  00573300
&ZMS                 SETC  'THE "VERSUPDATE" KEY'  *KOPTA* MNOTE        00573400
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00573500
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00573600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00573700
                     AGO   .ZG52E                                       00573800
.ZG52C               ANOP  ,                                            00573900
&ZXVERSUPDATE        SETC  ''          RESET IN/OUTPUT                  00574000
&ZMS                 SETC  '"VERSUPDATE='       *KUKWA* MNOTE           00574100
&ZMS                 SETC  '&ZMS.&VERSUPDATE"'                          00574200
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00574300
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00574400
&ZMS                 SETC  '&ZMS "NONE",'                               00574500
&ZMS                 SETC  '&ZMS "INC",'                                00574600
&ZMS                 SETC  '&ZMS "DEC",'                                00574700
&ZMS                 SETC  '&ZMS OR "SET".'                             00574800
                     MNOTE 8,' &ZMS '                                   00574900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00575000
                     AGO   .ZG52E                                       00575100
.ZG52D               ANOP  ,                                            00575200
&XVERSUPDATE         SETC  'NONE'      SET DEFAULT KEYWORD              00575300
.ZG52E               ANOP  ,                                            00575400
.*------------------------------------------------------------------    00575500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00575600
&XCHANGED            SETC  ''          INITIALIZE XVARIABLE             00575700
.*-------------------------------------------------------------------   00575800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00575900
.ZG55                ANOP  ,                                            00576000
                     AIF   (K'&CHANGED(1) LE 0).ZG55A                   00576100
&ZTLC                SETC 'NO'                                          00576200
                     AIF   ('&CHANGED(1)' NE '&ZTLC').ZG69              00576300
&XCHANGED            SETC  'NO'        SET KEYWORD                      00576400
                     AIF   (N'&CHANGED LE 1).ZG55A  CK NUM              00576500
&ZMS                 SETC  '"CHANGED='          *KPOSA* MNOTE           00576600
&ZMS                 SETC  '&ZMS.&CHANGED"'                             00576700
&ZMS                 SETC  '&ZMS "CHANGED"'                             00576800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00576900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00577000
.ZG55A               ANOP  ,                                            00577100
.*------------------------------------------------------------------    00577200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00577300
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00577400
.ZG55A0              AIF   (K'&PARITY LE 0).ZG55A1  OK                  00577500
&ZCVAL               SETC '&ZCVAL PARITY'       INCORRECT KEY USED      00577600
.ZG55A1              AIF   (K'&USERDATA LE 0).ZG55A2  OK                00577700
&ZCVAL               SETC '&ZCVAL USERDATA'     INCORRECT KEY USED      00577800
.ZG55A2              AIF   (K'&ZCVAL LE 0).ZG55A3  OK                   00577900
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00578000
&ZMS                 SETC  '"CHANGED'  *KMEIA* MNOTE                    00578100
&ZMS                 SETC  '&ZMS.=&CHANGED"'                            00578200
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00578300
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00578400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00578500
.ZG55A3              ANOP  ,                                            00578600
.*----------------------------------------------------------------***   00578700
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00578800
                     AIF   (N'&CROSSINVAL LE 1).ZG57A  CK NUM           00578900
&ZMS                 SETC  '"CROSSINVAL='       *KPOSA* MNOTE           00579000
&ZMS                 SETC  '&ZMS.&CROSSINVAL"'                          00579100
&ZMS                 SETC  '&ZMS "CROSSINVAL"'                          00579200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00579300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00579400
.ZG57A               ANOP  ,                                            00579500
.*-------------------------------------------------------------------   00579600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00579700
&XCROSSINVAL         SETC  ''          INITIALIZE XVARIABLE             00579800
.ZG58A   AIF   ('&CROSSINVAL(1)' NE 'NO').ZG59A                         00579900
&XCROSSINVAL         SETC  'NO'        SET KEYWORD                      00580000
.*-------------------------------------------------------------------   00580100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00580200
.ZG59A   AIF   ('&CROSSINVAL(1)' NE 'YES').ZG60A                        00580300
&XCROSSINVAL         SETC  'YES'       SET KEYWORD                      00580400
.*-------------------------------------------------------------------   00580500
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00580600
.ZG60A               AIF   (K'&XCROSSINVAL GT 0).ZG60C  KEYWORD         00580700
                     AIF   (K'&CROSSINVAL(1) LE 0).ZG60B                00580800
&ZMS                 SETC  '"CROSSINVAL='       *KUKWA* MNOTE           00580900
&ZMS                 SETC  '&ZMS.&CROSSINVAL"'                          00581000
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00581100
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00581200
&ZMS                 SETC  '&ZMS "NO"'                                  00581300
&ZMS                 SETC  '&ZMS OR "YES".'                             00581400
                     MNOTE 8,' &ZMS '                                   00581500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00581600
.ZG60B               ANOP  ,                                            00581700
&XCROSSINVAL         SETC  'NO'        SET DEFAULT KEYWORD              00581800
.ZG60C               ANOP  ,                                            00581900
&ZXCROSSINVAL        SETC  'INPUT'     SET IN/OUTPUT                    00582000
.*------------------------------------------------------------------    00582100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00582200
&XGETCOLOCK          SETC  ''          INITIALIZE XVARIABLE             00582300
.*-------------------------------------------------------------------   00582400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00582500
.ZG63                ANOP  ,                                            00582600
                     AIF   (K'&GETCOLOCK(1) LE 0).ZG63A                 00582700
&ZTLC                SETC 'NO'                                          00582800
                     AIF   ('&GETCOLOCK(1)' NE '&ZTLC').ZG64            00582900
&XGETCOLOCK          SETC  'NO'        SET KEYWORD                      00583000
                     AIF   (N'&GETCOLOCK LE 1).ZG63A  CK NUM            00583100
&ZMS                 SETC  '"GETCOLOCK='        *KPOSA* MNOTE           00583200
&ZMS                 SETC  '&ZMS.&GETCOLOCK"'                           00583300
&ZMS                 SETC  '&ZMS "GETCOLOCK"'                           00583400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00583500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00583600
.ZG63A               ANOP  ,                                            00583700
.*------------------------------------------------------------------    00583800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00583900
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00584000
.ZG63A0              AIF   (K'&PROCESSID LE 0).ZG63A1  OK               00584100
&ZCVAL               SETC '&ZCVAL PROCESSID'    INCORRECT KEY USED      00584200
.ZG63A1              AIF   (K'&ZCVAL LE 0).ZG63A2  OK                   00584300
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00584400
&ZMS                 SETC  '"GETCOLOCK'         *KMEIA* MNOTE           00584500
&ZMS                 SETC  '&ZMS.=&GETCOLOCK"'                          00584600
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00584700
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00584800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00584900
.ZG63A2              ANOP  ,                                            00585000
.*-------------------------------------------------------------------   00585100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00585200
.ZG64                ANOP  ,                                            00585300
&ZTLC                SETC 'YES'                                         00585400
                     AIF   ('&GETCOLOCK(1)' NE '&ZTLC').ZG68            00585500
&XGETCOLOCK          SETC  'YES'       SET KEYWORD                      00585600
                     AIF   (N'&GETCOLOCK LE 1).ZG64A  CK NUM            00585700
&ZMS                 SETC  '"GETCOLOCK='        *KPOSA* MNOTE           00585800
&ZMS                 SETC  '&ZMS.&GETCOLOCK"'                           00585900
&ZMS                 SETC  '&ZMS "GETCOLOCK"'                           00586000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00586100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00586200
.ZG64A               ANOP  ,                                            00586300
.*----------------------------------------------------------------***   00586400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00586500
                     AIF   (N'&PROCESSID LE 1).ZG66A  CK NUM            00586600
&ZMS                 SETC  '"PROCESSID='        *KPOSA* MNOTE           00586700
&ZMS                 SETC  '&ZMS.&PROCESSID"'                           00586800
&ZMS                 SETC  '&ZMS "PROCESSID"'                           00586900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00587000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00587100
.ZG66A               ANOP  ,                                            00587200
.*-------------------------------------------------------------------   00587300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00587400
&ZXPROCESSID         SETC  'INPUT'     SET IN/OUTPUT                    00587500
&XPROCESSID          SETC  'NO_PROCESSID'                               00587600
                     AIF   (K'&PROCESSID(1) LE 0).ZG66B  PARM           00587700
&XPROCESSID          SETC  '&PROCESSID(1)'      SET XVARIABLE           00587800
                     AIF   (N'&PROCESSID GT 1).ZG66B  MULTI PARMS       00587900
&XPROCESSID          SETC  '&PROCESSID'         SET XVARIABLE           00588000
.ZG66B               ANOP  ,                                            00588100
.*-------------------------------------------------------------------   00588200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00588300
                     AIF   (K'&ZXPROCESSID LE 0).ZG66R  NOT I/O         00588400
         AIF   ('&XPROCESSID' EQ 'NO_PROCESSID').ZG66R                  00588500
                     AIF   ('&XPROCESSID'(1,1) NE '(').ZG66R            00588600
&ZCGPR               SETC  '&XPROCESSID'(2,K'&XPROCESSID-2)             00588700
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG66P                 00588800
                     AIF   (K'&ZCGPR GT 2).ZG66Q                        00588900
                     AIF   ('&ZCGPR' EQ '0').ZG66Q                      00589000
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00589100
                     AIF   (T'&ZCGPR NE 'N').ZG66Q  INVALID REG NAME    00589200
.ZG66P               ANOP  ,                                            00589300
                     AIF   (T'&ZCGPR NE 'N').ZG66R  NON NUMERIC         00589400
                     AIF   ('&ZCGPR' LT '2').ZG66Q                      00589500
                     AIF   ('&ZCGPR' LE '12').ZG66R                     00589600
.ZG66Q               ANOP  ,                                            00589700
&ZMS                 SETC  '"PROCESSID='        *KGPRA* MNOTE           00589800
&ZMS                 SETC  '&ZMS.&PROCESSID"'                           00589900
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00590000
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00590100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00590200
.ZG66R               ANOP  ,                                            00590300
.*------------------------------------------------------------------    00590400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00590500
.ZG68                ANOP  ,                                            00590600
&ZXGETCOLOCK         SETC  'INPUT'     SET IN/OUTPUT                    00590700
                     AIF   (K'&XGETCOLOCK GT 0).ZG68E  VALID ARG        00590800
                     AIF   (T'&GETCOLOCK EQ 'O').ZG68D  OMITTED         00590900
&ZASYSLNDX           SETA  0                                            00591000
.ZG68A               ANOP  ,           POSITIONAL MACRO KEY             00591100
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00591200
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG68C             00591300
&ZTLC                SETC 'GETCOLOCK'                                   00591400
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG68A    00591500
.ZG68B               ANOP  ,                                            00591600
&ZXGETCOLOCK         SETC  ''          RESET IN/OUTPUT                  00591700
&ZMS                 SETC  'THE "GETCOLOCK" KEY'  *KOPTA* MNOTE         00591800
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00591900
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00592000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00592100
                     AGO   .ZG68E                                       00592200
.ZG68C               ANOP  ,                                            00592300
&ZXGETCOLOCK         SETC  ''          RESET IN/OUTPUT                  00592400
&ZMS                 SETC  '"GETCOLOCK='        *KUKWA* MNOTE           00592500
&ZMS                 SETC  '&ZMS.&GETCOLOCK"'                           00592600
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00592700
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00592800
&ZMS                 SETC  '&ZMS "NO"'                                  00592900
&ZMS                 SETC  '&ZMS OR "YES".'                             00593000
                     MNOTE 8,' &ZMS '                                   00593100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00593200
                     AGO   .ZG68E                                       00593300
.ZG68D               ANOP  ,                                            00593400
&XGETCOLOCK          SETC  'NO'        SET DEFAULT KEYWORD              00593500
.ZG68E               ANOP  ,                                            00593600
.*-------------------------------------------------------------------   00593700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00593800
.ZG69                ANOP  ,                                            00593900
&ZTLC                SETC 'YES'                                         00594000
                     AIF   ('&CHANGED(1)' NE '&ZTLC').ZG76              00594100
&XCHANGED            SETC  'YES'       SET KEYWORD                      00594200
                     AIF   (N'&CHANGED LE 1).ZG69A  CK NUM              00594300
&ZMS                 SETC  '"CHANGED='          *KPOSA* MNOTE           00594400
&ZMS                 SETC  '&ZMS.&CHANGED"'                             00594500
&ZMS                 SETC  '&ZMS "CHANGED"'                             00594600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00594700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00594800
.ZG69A               ANOP  ,                                            00594900
.*------------------------------------------------------------------    00595000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00595100
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00595200
.ZG69A0              AIF   (K'&CROSSINVAL LE 0).ZG69A1  OK              00595300
&ZCVAL               SETC '&ZCVAL CROSSINVAL'   INCORRECT KEY USED      00595400
.ZG69A1              AIF   (K'&GETCOLOCK LE 0).ZG69A2  OK               00595500
&ZCVAL               SETC '&ZCVAL GETCOLOCK'    INCORRECT KEY USED      00595600
.ZG69A2              AIF   (K'&PROCESSID LE 0).ZG69A3  OK               00595700
&ZCVAL               SETC '&ZCVAL PROCESSID'    INCORRECT KEY USED      00595800
.ZG69A3              AIF   (K'&ZCVAL LE 0).ZG69A4  OK                   00595900
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00596000
&ZMS                 SETC  '"CHANGED'  *KMEIA* MNOTE                    00596100
&ZMS                 SETC  '&ZMS.=&CHANGED"'                            00596200
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00596300
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00596400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00596500
.ZG69A4              ANOP  ,                                            00596600
.*----------------------------------------------------------------***   00596700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00596800
                     AIF   (N'&PARITY LE 1).ZG71A  CK NUM               00596900
&ZMS                 SETC  '"PARITY='  *KPOSA* MNOTE                    00597000
&ZMS                 SETC  '&ZMS.&PARITY"'                              00597100
&ZMS                 SETC  '&ZMS "PARITY"'                              00597200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00597300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00597400
.ZG71A               ANOP  ,                                            00597500
.*-------------------------------------------------------------------   00597600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00597700
&ZXPARITY            SETC  'INPUT'     SET IN/OUTPUT                    00597800
&XPARITY             SETC  '00110000'                                   00597900
                     AIF   (K'&PARITY(1) LE 0).ZG71B  PARM              00598000
&XPARITY             SETC  '&PARITY(1)'         SET XVARIABLE           00598100
                     AIF   (N'&PARITY GT 1).ZG71B  MULTI PARMS          00598200
&XPARITY             SETC  '&PARITY'   SET XVARIABLE                    00598300
.ZG71B               ANOP  ,                                            00598400
.*-------------------------------------------------------------------   00598500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00598600
                     AIF   (K'&ZXPARITY LE 0).ZG71R  NOT I/O            00598700
                     AIF   ('&XPARITY'(1,1) NE '(').ZG71R               00598800
&ZCGPR               SETC  '&XPARITY'(2,K'&XPARITY-2)                   00598900
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG71P                 00599000
                     AIF   (K'&ZCGPR GT 2).ZG71Q                        00599100
                     AIF   ('&ZCGPR' EQ '0').ZG71Q                      00599200
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00599300
                     AIF   (T'&ZCGPR NE 'N').ZG71Q  INVALID REG NAME    00599400
.ZG71P               ANOP  ,                                            00599500
                     AIF   (T'&ZCGPR NE 'N').ZG71R  NON NUMERIC         00599600
                     AIF   ('&ZCGPR' LT '2').ZG71Q                      00599700
                     AIF   ('&ZCGPR' LE '12').ZG71R                     00599800
.ZG71Q               ANOP  ,                                            00599900
&ZMS                 SETC  '"PARITY='  *KGPRA* MNOTE                    00600000
&ZMS                 SETC  '&ZMS.&PARITY"'                              00600100
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00600200
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00600300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00600400
.ZG71R               ANOP  ,                                            00600500
.*----------------------------------------------------------------***   00600600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00600700
                     AIF   (N'&USERDATA LE 1).ZG74A  CK NUM             00600800
&ZMS                 SETC  '"USERDATA='         *KPOSA* MNOTE           00600900
&ZMS                 SETC  '&ZMS.&USERDATA"'                            00601000
&ZMS                 SETC  '&ZMS "USERDATA"'                            00601100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00601200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00601300
.ZG74A               ANOP  ,                                            00601400
.*-------------------------------------------------------------------   00601500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00601600
&ZXUSERDATA          SETC  'INPUT'     SET IN/OUTPUT                    00601700
&XUSERDATA           SETC  'NO_USERDATA'                                00601800
                     AIF   (K'&USERDATA(1) LE 0).ZG74B  PARM            00601900
&XUSERDATA           SETC  '&USERDATA(1)'       SET XVARIABLE           00602000
                     AIF   (N'&USERDATA GT 1).ZG74B  MULTI PARMS        00602100
&XUSERDATA           SETC  '&USERDATA'          SET XVARIABLE           00602200
.ZG74B               ANOP  ,                                            00602300
.*-------------------------------------------------------------------   00602400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00602500
                     AIF   (K'&ZXUSERDATA LE 0).ZG74R  NOT I/O          00602600
         AIF   ('&XUSERDATA' EQ 'NO_USERDATA').ZG74R                    00602700
                     AIF   ('&XUSERDATA'(1,1) NE '(').ZG74R             00602800
&ZCGPR               SETC  '&XUSERDATA'(2,K'&XUSERDATA-2)               00602900
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG74P                 00603000
                     AIF   (K'&ZCGPR GT 2).ZG74Q                        00603100
                     AIF   ('&ZCGPR' EQ '0').ZG74Q                      00603200
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00603300
                     AIF   (T'&ZCGPR NE 'N').ZG74Q  INVALID REG NAME    00603400
.ZG74P               ANOP  ,                                            00603500
                     AIF   (T'&ZCGPR NE 'N').ZG74R  NON NUMERIC         00603600
                     AIF   ('&ZCGPR' LT '2').ZG74Q                      00603700
                     AIF   ('&ZCGPR' LE '12').ZG74R                     00603800
.ZG74Q               ANOP  ,                                            00603900
&ZMS                 SETC  '"USERDATA='         *KGPRA* MNOTE           00604000
&ZMS                 SETC  '&ZMS.&USERDATA"'                            00604100
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00604200
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00604300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00604400
.ZG74R               ANOP  ,                                            00604500
.*------------------------------------------------------------------    00604600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00604700
.ZG76                ANOP  ,                                            00604800
&ZXCHANGED           SETC  'INPUT'     SET IN/OUTPUT                    00604900
                     AIF   (K'&XCHANGED GT 0).ZG76E  VALID ARG          00605000
                     AIF   (T'&CHANGED EQ 'O').ZG76D  OMITTED           00605100
&ZASYSLNDX           SETA  0                                            00605200
.ZG76A               ANOP  ,           POSITIONAL MACRO KEY             00605300
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00605400
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG76C             00605500
&ZTLC                SETC 'CHANGED'                                     00605600
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG76A    00605700
.ZG76B               ANOP  ,                                            00605800
&ZXCHANGED           SETC  ''          RESET IN/OUTPUT                  00605900
&ZMS                 SETC  'THE "CHANGED" KEY'  *KOPTA* MNOTE           00606000
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00606100
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00606200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00606300
                     AGO   .ZG76E                                       00606400
.ZG76C               ANOP  ,                                            00606500
&ZXCHANGED           SETC  ''          RESET IN/OUTPUT                  00606600
&ZMS                 SETC  '"CHANGED='          *KUKWA* MNOTE           00606700
&ZMS                 SETC  '&ZMS.&CHANGED"'                             00606800
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00606900
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00607000
&ZMS                 SETC  '&ZMS "NO"'                                  00607100
&ZMS                 SETC  '&ZMS OR "YES".'                             00607200
                     MNOTE 8,' &ZMS '                                   00607300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00607400
                     AGO   .ZG76E                                       00607500
.ZG76D               ANOP  ,                                            00607600
&XCHANGED            SETC  'NO'        SET DEFAULT KEYWORD              00607700
.ZG76E               ANOP  ,                                            00607800
.*----------------------------------------------------------------***   00607900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00608000
                     AIF   (N'&ELEMNUM LE 1).ZG78A  CK NUM              00608100
&ZMS                 SETC  '"ELEMNUM='          *KPOSA* MNOTE           00608200
&ZMS                 SETC  '&ZMS.&ELEMNUM"'                             00608300
&ZMS                 SETC  '&ZMS "ELEMNUM"'                             00608400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00608500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00608600
.ZG78A               ANOP  ,                                            00608700
.*-------------------------------------------------------------------   00608800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00608900
&ZXELEMNUM           SETC  'INPUT'     SET IN/OUTPUT                    00609000
&XELEMNUM            SETC  '&ELEMNUM(1)'        SET XVARIABLE           00609100
                     AIF   (N'&ELEMNUM GT 1).ZG78B  MULTI PARMS         00609200
&XELEMNUM            SETC  '&ELEMNUM'  SET XVARIABLE                    00609300
.ZG78B               AIF   (K'&ELEMNUM(1) GT 0).ZG78C                   00609400
&ZXELEMNUM           SETC  ''          RESET IN/OUTPUT                  00609500
&ZMS                 SETC  ' '         *KRQDA*                          00609600
&ZMS                 SETC  '&ZMS "ELEMNUM" KEY AND ITS'                 00609700
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00609800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00609900
.ZG78C               ANOP  ,                                            00610000
.*-------------------------------------------------------------------   00610100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00610200
                     AIF   (K'&ZXELEMNUM LE 0).ZG78R  NOT I/O           00610300
                     AIF   ('&XELEMNUM'(1,1) NE '(').ZG78R              00610400
&ZCGPR               SETC  '&XELEMNUM'(2,K'&XELEMNUM-2)                 00610500
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG78P                 00610600
                     AIF   (K'&ZCGPR GT 2).ZG78Q                        00610700
                     AIF   ('&ZCGPR' EQ '0').ZG78Q                      00610800
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00610900
                     AIF   (T'&ZCGPR NE 'N').ZG78Q  INVALID REG NAME    00611000
.ZG78P               ANOP  ,                                            00611100
                     AIF   (T'&ZCGPR NE 'N').ZG78R  NON NUMERIC         00611200
                     AIF   ('&ZCGPR' LT '2').ZG78Q                      00611300
                     AIF   ('&ZCGPR' LE '12').ZG78R                     00611400
.ZG78Q               ANOP  ,                                            00611500
&ZMS                 SETC  '"ELEMNUM='          *KGPRA* MNOTE           00611600
&ZMS                 SETC  '&ZMS.&ELEMNUM"'                             00611700
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00611800
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00611900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00612000
.ZG78R               ANOP  ,                                            00612100
.*-------------------------------------------------------------------   00612200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00612300
.ZG80                ANOP  ,                                            00612400
&ZTLC                SETC 'REG_NAMELIST'                                00612500
                     AIF   ('&REQUEST(1)' NE '&ZTLC').ZG90              00612600
&XREQUEST            SETC  'REG_NAMELIST'       SET KEYWORD             00612700
                     AIF   (N'&REQUEST LE 1).ZG80A  CK NUM              00612800
&ZMS                 SETC  '"REQUEST='          *KPOSA* MNOTE           00612900
&ZMS                 SETC  '&ZMS.&REQUEST"'                             00613000
&ZMS                 SETC  '&ZMS "REQUEST"'                             00613100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00613200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00613300
.ZG80A               ANOP  ,                                            00613400
.*------------------------------------------------------------------    00613500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00613600
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00613700
.ZG80A0              AIF   (K'&ASSIGN LE 0).ZG80A1  OK                  00613800
&ZCVAL               SETC '&ZCVAL ASSIGN'       INCORRECT KEY USED      00613900
.ZG80A1              AIF   (K'&REGUSER LE 0).ZG80A2  OK                 00614000
&ZCVAL               SETC '&ZCVAL REGUSER'      INCORRECT KEY USED      00614100
.ZG80A2              AIF   (K'&RETURNDATA LE 0).ZG80A3  OK              00614200
&ZCVAL               SETC '&ZCVAL RETURNDATA'   INCORRECT KEY USED      00614300
.ZG80A3              AIF   (K'&WHENREG LE 0).ZG80A4  OK                 00614400
&ZCVAL               SETC '&ZCVAL WHENREG'      INCORRECT KEY USED      00614500
.ZG80A4              AIF   (K'&VERSCOMP LE 0).ZG80A5  OK                00614600
&ZCVAL               SETC '&ZCVAL VERSCOMP'     INCORRECT KEY USED      00614700
.ZG80A5              AIF   (K'&VERSCOMPTYPE LE 0).ZG80A6  OK            00614800
&ZCVAL               SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED     00614900
.ZG80A6              AIF   (K'&VERSUPDATE LE 0).ZG80A7  OK              00615000
&ZCVAL               SETC '&ZCVAL VERSUPDATE'   INCORRECT KEY USED      00615100
.ZG80A7              AIF   (K'&NEWVERS LE 0).ZG80A8  OK                 00615200
&ZCVAL               SETC '&ZCVAL NEWVERS'      INCORRECT KEY USED      00615300
.ZG80A8              AIF   (K'&CHANGED LE 0).ZG80A9  OK                 00615400
&ZCVAL               SETC '&ZCVAL CHANGED'      INCORRECT KEY USED      00615500
.ZG80A9              AIF   (K'&CROSSINVAL LE 0).ZG80A10  OK             00615600
&ZCVAL               SETC '&ZCVAL CROSSINVAL'   INCORRECT KEY USED      00615700
.ZG80A10             AIF   (K'&GETCOLOCK LE 0).ZG80A11  OK              00615800
&ZCVAL               SETC '&ZCVAL GETCOLOCK'    INCORRECT KEY USED      00615900
.ZG80A11             AIF   (K'&PROCESSID LE 0).ZG80A12  OK              00616000
&ZCVAL               SETC '&ZCVAL PROCESSID'    INCORRECT KEY USED      00616100
.ZG80A12             AIF   (K'&PARITY LE 0).ZG80A13  OK                 00616200
&ZCVAL               SETC '&ZCVAL PARITY'       INCORRECT KEY USED      00616300
.ZG80A13             AIF   (K'&USERDATA LE 0).ZG80A14  OK               00616400
&ZCVAL               SETC '&ZCVAL USERDATA'     INCORRECT KEY USED      00616500
.ZG80A14             AIF   (K'&ELEMNUM LE 0).ZG80A15  OK                00616600
&ZCVAL               SETC '&ZCVAL ELEMNUM'      INCORRECT KEY USED      00616700
.ZG80A15             AIF   (K'&FIRSTNAME LE 0).ZG80A16  OK              00616800
&ZCVAL               SETC '&ZCVAL FIRSTNAME'    INCORRECT KEY USED      00616900
.ZG80A16             AIF   (K'&LASTNAME LE 0).ZG80A17  OK               00617000
&ZCVAL               SETC '&ZCVAL LASTNAME'     INCORRECT KEY USED      00617100
.ZG80A17             AIF   (K'&CUNBAREA LE 0).ZG80A18  OK               00617200
&ZCVAL               SETC '&ZCVAL CUNBAREA'     INCORRECT KEY USED      00617300
.ZG80A18             AIF   (K'&DELETETYPE LE 0).ZG80A19  OK             00617400
&ZCVAL               SETC '&ZCVAL DELETETYPE'   INCORRECT KEY USED      00617500
.ZG80A19             AIF   (K'&ERRORACTION LE 0).ZG80A20  OK            00617600
&ZCVAL               SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED      00617700
.ZG80A20             AIF   (K'&DIRINFOFMT LE 0).ZG80A21  OK             00617800
&ZCVAL               SETC '&ZCVAL DIRINFOFMT'   INCORRECT KEY USED      00617900
.ZG80A21             AIF   (K'&CRITERIA LE 0).ZG80A22  OK               00618000
&ZCVAL               SETC '&ZCVAL CRITERIA'     INCORRECT KEY USED      00618100
.ZG80A22             AIF   (K'&COCLASSB LE 0).ZG80A23  OK               00618200
&ZCVAL               SETC '&ZCVAL COCLASSB'     INCORRECT KEY USED      00618300
.ZG80A23             AIF   (K'&COCLASSE LE 0).ZG80A24  OK               00618400
&ZCVAL               SETC '&ZCVAL COCLASSE'     INCORRECT KEY USED      00618500
.ZG80A24             AIF   (K'&COSTATSFMT LE 0).ZG80A25  OK             00618600
&ZCVAL               SETC '&ZCVAL COSTATSFMT'   INCORRECT KEY USED      00618700
.ZG80A25             AIF   (K'&STGSTATS LE 0).ZG80A26  OK               00618800
&ZCVAL               SETC '&ZCVAL STGSTATS'     INCORRECT KEY USED      00618900
.ZG80A26             AIF   (K'&NUMNAMES LE 0).ZG80A27  OK               00619000
&ZCVAL               SETC '&ZCVAL NUMNAMES'     INCORRECT KEY USED      00619100
.ZG80A27             AIF   (K'&REPEAT LE 0).ZG80A28  OK                 00619200
&ZCVAL               SETC '&ZCVAL REPEAT'       INCORRECT KEY USED      00619300
.ZG80A28             AIF   (K'&RECLVCTR LE 0).ZG80A29  OK               00619400
&ZCVAL               SETC '&ZCVAL RECLVCTR'     INCORRECT KEY USED      00619500
.ZG80A29             AIF   (K'&ZCVAL LE 0).ZG80A30  OK                  00619600
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00619700
                     AIF  (K'&ZCVAL LE 160).ZG80A30A                    00619800
&ZCVAL               SETC '&ZCVAL'(1,160)                               00619900
&ZCVAL               SETC '&ZCVAL....'                                  00620000
.ZG80A30A            ANOP                                               00620100
&ZMS                 SETC  '"REQUEST'  *KMEIA* MNOTE                    00620200
&ZMS                 SETC  '&ZMS.=&REQUEST"'                            00620300
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00620400
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00620500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00620600
.ZG80A30             ANOP  ,                                            00620700
.*----------------------------------------------------------------***   00620800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00620900
                     AIF   (N'&STARTINDEX LE 1).ZG82A  CK NUM           00621000
&ZMS                 SETC  '"STARTINDEX='       *KPOSA* MNOTE           00621100
&ZMS                 SETC  '&ZMS.&STARTINDEX"'                          00621200
&ZMS                 SETC  '&ZMS "STARTINDEX"'                          00621300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00621400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00621500
.ZG82A               ANOP  ,                                            00621600
.*-------------------------------------------------------------------   00621700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00621800
&ZXSTARTINDEX        SETC  'INPUT'     SET IN/OUTPUT                    00621900
&XSTARTINDEX         SETC  '&STARTINDEX(1)'     SET XVARIABLE           00622000
                     AIF   (N'&STARTINDEX GT 1).ZG82B  MULTI PARMS      00622100
&XSTARTINDEX         SETC  '&STARTINDEX'        SET XVARIABLE           00622200
.ZG82B               AIF   (K'&STARTINDEX(1) GT 0).ZG82C                00622300
&ZXSTARTINDEX        SETC  ''          RESET IN/OUTPUT                  00622400
&ZMS                 SETC  ' '         *KRQDA*                          00622500
&ZMS                 SETC  '&ZMS "STARTINDEX" KEY AND ITS'              00622600
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00622700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00622800
.ZG82C               ANOP  ,                                            00622900
.*-------------------------------------------------------------------   00623000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00623100
                     AIF   (K'&ZXSTARTINDEX LE 0).ZG82R  NOT I/O        00623200
                     AIF   ('&XSTARTINDEX'(1,1) NE '(').ZG82R           00623300
&ZCGPR               SETC  '&XSTARTINDEX'(2,K'&XSTARTINDEX-2)           00623400
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG82P                 00623500
                     AIF   (K'&ZCGPR GT 2).ZG82Q                        00623600
                     AIF   ('&ZCGPR' EQ '0').ZG82Q                      00623700
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00623800
                     AIF   (T'&ZCGPR NE 'N').ZG82Q  INVALID REG NAME    00623900
.ZG82P               ANOP  ,                                            00624000
                     AIF   (T'&ZCGPR NE 'N').ZG82R  NON NUMERIC         00624100
                     AIF   ('&ZCGPR' LT '2').ZG82Q                      00624200
                     AIF   ('&ZCGPR' LE '12').ZG82R                     00624300
.ZG82Q               ANOP  ,                                            00624400
&ZMS                 SETC  '"STARTINDEX='       *KGPRA* MNOTE           00624500
&ZMS                 SETC  '&ZMS.&STARTINDEX"'                          00624600
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00624700
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00624800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00624900
.ZG82R               ANOP  ,                                            00625000
.*----------------------------------------------------------------***   00625100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00625200
                     AIF   (N'&ENDINDEX LE 1).ZG85A  CK NUM             00625300
&ZMS                 SETC  '"ENDINDEX='         *KPOSA* MNOTE           00625400
&ZMS                 SETC  '&ZMS.&ENDINDEX"'                            00625500
&ZMS                 SETC  '&ZMS "ENDINDEX"'                            00625600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00625700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00625800
.ZG85A               ANOP  ,                                            00625900
.*-------------------------------------------------------------------   00626000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00626100
&ZXENDINDEX          SETC  'INPUT'     SET IN/OUTPUT                    00626200
&XENDINDEX           SETC  '&ENDINDEX(1)'       SET XVARIABLE           00626300
                     AIF   (N'&ENDINDEX GT 1).ZG85B  MULTI PARMS        00626400
&XENDINDEX           SETC  '&ENDINDEX'          SET XVARIABLE           00626500
.ZG85B               AIF   (K'&ENDINDEX(1) GT 0).ZG85C                  00626600
&ZXENDINDEX          SETC  ''          RESET IN/OUTPUT                  00626700
&ZMS                 SETC  ' '         *KRQDA*                          00626800
&ZMS                 SETC  '&ZMS "ENDINDEX" KEY AND ITS'                00626900
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00627000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00627100
.ZG85C               ANOP  ,                                            00627200
.*-------------------------------------------------------------------   00627300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00627400
                     AIF   (K'&ZXENDINDEX LE 0).ZG85R  NOT I/O          00627500
                     AIF   ('&XENDINDEX'(1,1) NE '(').ZG85R             00627600
&ZCGPR               SETC  '&XENDINDEX'(2,K'&XENDINDEX-2)               00627700
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG85P                 00627800
                     AIF   (K'&ZCGPR GT 2).ZG85Q                        00627900
                     AIF   ('&ZCGPR' EQ '0').ZG85Q                      00628000
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00628100
                     AIF   (T'&ZCGPR NE 'N').ZG85Q  INVALID REG NAME    00628200
.ZG85P               ANOP  ,                                            00628300
                     AIF   (T'&ZCGPR NE 'N').ZG85R  NON NUMERIC         00628400
                     AIF   ('&ZCGPR' LT '2').ZG85Q                      00628500
                     AIF   ('&ZCGPR' LE '12').ZG85R                     00628600
.ZG85Q               ANOP  ,                                            00628700
&ZMS                 SETC  '"ENDINDEX='         *KGPRA* MNOTE           00628800
&ZMS                 SETC  '&ZMS.&ENDINDEX"'                            00628900
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00629000
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00629100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00629200
.ZG85R               ANOP  ,                                            00629300
.*----------------------------------------------------------------***   00629400
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00629500
                     AIF   (N'&NSBAREA LE 1).ZG88A  CK NUM              00629600
&ZMS                 SETC  '"NSBAREA='          *KPOSA* MNOTE           00629700
&ZMS                 SETC  '&ZMS.&NSBAREA"'                             00629800
&ZMS                 SETC  '&ZMS "NSBAREA"'                             00629900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00630000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00630100
.ZG88A               ANOP  ,                                            00630200
.*-------------------------------------------------------------------   00630300
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00630400
&ZXNSBAREA           SETC  'OUTPUT'    SET IN/OUTPUT                    00630500
&XNSBAREA            SETC  '&NSBAREA(1)'        SET XVARIABLE           00630600
                     AIF   (N'&NSBAREA GT 1).ZG88B  MULTI PARMS         00630700
&XNSBAREA            SETC  '&NSBAREA'  SET XVARIABLE                    00630800
.ZG88B               AIF   (K'&NSBAREA(1) GT 0).ZG88C                   00630900
&ZXNSBAREA           SETC  ''          RESET IN/OUTPUT                  00631000
&ZMS                 SETC  ' '         *KRQDA*                          00631100
&ZMS                 SETC  '&ZMS "NSBAREA" KEY AND ITS'                 00631200
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00631300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00631400
.ZG88C               ANOP  ,                                            00631500
.*-------------------------------------------------------------------   00631600
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00631700
                     AIF   (K'&ZXNSBAREA LE 0).ZG88R  NOT I/O           00631800
                     AIF   ('&XNSBAREA'(1,1) NE '(').ZG88R              00631900
&ZCGPR               SETC  '&XNSBAREA'(2,K'&XNSBAREA-2)                 00632000
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG88P                 00632100
                     AIF   (K'&ZCGPR GT 2).ZG88Q                        00632200
                     AIF   ('&ZCGPR' EQ '0').ZG88Q                      00632300
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00632400
                     AIF   (T'&ZCGPR NE 'N').ZG88Q  INVALID REG NAME    00632500
.ZG88P               ANOP  ,                                            00632600
                     AIF   (T'&ZCGPR NE 'N').ZG88R  NON NUMERIC         00632700
                     AIF   ('&ZCGPR' LT '2').ZG88Q                      00632800
                     AIF   ('&ZCGPR' LE '12').ZG88R                     00632900
.ZG88Q               ANOP  ,                                            00633000
&ZMS                 SETC  '"NSBAREA='          *KGPRA* MNOTE           00633100
&ZMS                 SETC  '&ZMS.&NSBAREA"'                             00633200
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00633300
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00633400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00633500
.ZG88R               ANOP  ,                                            00633600
.*-------------------------------------------------------------------   00633700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00633800
.ZG90                ANOP  ,                                            00633900
&ZTLC                SETC 'CASTOUT_DATA'                                00634000
                     AIF   ('&REQUEST(1)' NE '&ZTLC').ZG99              00634100
&XREQUEST            SETC  'CASTOUT_DATA'       SET KEYWORD             00634200
                     AIF   (N'&REQUEST LE 1).ZG90A  CK NUM              00634300
&ZMS                 SETC  '"REQUEST='          *KPOSA* MNOTE           00634400
&ZMS                 SETC  '&ZMS.&REQUEST"'                             00634500
&ZMS                 SETC  '&ZMS "REQUEST"'                             00634600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00634700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00634800
.ZG90A               ANOP  ,                                            00634900
.*------------------------------------------------------------------    00635000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00635100
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00635200
.ZG90A0              AIF   (K'&ASSIGN LE 0).ZG90A1  OK                  00635300
&ZCVAL               SETC '&ZCVAL ASSIGN'       INCORRECT KEY USED      00635400
.ZG90A1              AIF   (K'&RETURNDATA LE 0).ZG90A2  OK              00635500
&ZCVAL               SETC '&ZCVAL RETURNDATA'   INCORRECT KEY USED      00635600
.ZG90A2              AIF   (K'&WHENREG LE 0).ZG90A3  OK                 00635700
&ZCVAL               SETC '&ZCVAL WHENREG'      INCORRECT KEY USED      00635800
.ZG90A3              AIF   (K'&VERSCOMP LE 0).ZG90A4  OK                00635900
&ZCVAL               SETC '&ZCVAL VERSCOMP'     INCORRECT KEY USED      00636000
.ZG90A4              AIF   (K'&VERSCOMPTYPE LE 0).ZG90A5  OK            00636100
&ZCVAL               SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED     00636200
.ZG90A5              AIF   (K'&VERSUPDATE LE 0).ZG90A6  OK              00636300
&ZCVAL               SETC '&ZCVAL VERSUPDATE'   INCORRECT KEY USED      00636400
.ZG90A6              AIF   (K'&NEWVERS LE 0).ZG90A7  OK                 00636500
&ZCVAL               SETC '&ZCVAL NEWVERS'      INCORRECT KEY USED      00636600
.ZG90A7              AIF   (K'&CHANGED LE 0).ZG90A8  OK                 00636700
&ZCVAL               SETC '&ZCVAL CHANGED'      INCORRECT KEY USED      00636800
.ZG90A8              AIF   (K'&CROSSINVAL LE 0).ZG90A9  OK              00636900
&ZCVAL               SETC '&ZCVAL CROSSINVAL'   INCORRECT KEY USED      00637000
.ZG90A9              AIF   (K'&GETCOLOCK LE 0).ZG90A10  OK              00637100
&ZCVAL               SETC '&ZCVAL GETCOLOCK'    INCORRECT KEY USED      00637200
.ZG90A10             AIF   (K'&PARITY LE 0).ZG90A11  OK                 00637300
&ZCVAL               SETC '&ZCVAL PARITY'       INCORRECT KEY USED      00637400
.ZG90A11             AIF   (K'&USERDATA LE 0).ZG90A12  OK               00637500
&ZCVAL               SETC '&ZCVAL USERDATA'     INCORRECT KEY USED      00637600
.ZG90A12             AIF   (K'&ELEMNUM LE 0).ZG90A13  OK                00637700
&ZCVAL               SETC '&ZCVAL ELEMNUM'      INCORRECT KEY USED      00637800
.ZG90A13             AIF   (K'&STARTINDEX LE 0).ZG90A14  OK             00637900
&ZCVAL               SETC '&ZCVAL STARTINDEX'   INCORRECT KEY USED      00638000
.ZG90A14             AIF   (K'&ENDINDEX LE 0).ZG90A15  OK               00638100
&ZCVAL               SETC '&ZCVAL ENDINDEX'     INCORRECT KEY USED      00638200
.ZG90A15             AIF   (K'&NSBAREA LE 0).ZG90A16  OK                00638300
&ZCVAL               SETC '&ZCVAL NSBAREA'      INCORRECT KEY USED      00638400
.ZG90A16             AIF   (K'&FIRSTNAME LE 0).ZG90A17  OK              00638500
&ZCVAL               SETC '&ZCVAL FIRSTNAME'    INCORRECT KEY USED      00638600
.ZG90A17             AIF   (K'&LASTNAME LE 0).ZG90A18  OK               00638700
&ZCVAL               SETC '&ZCVAL LASTNAME'     INCORRECT KEY USED      00638800
.ZG90A18             AIF   (K'&CUNBAREA LE 0).ZG90A19  OK               00638900
&ZCVAL               SETC '&ZCVAL CUNBAREA'     INCORRECT KEY USED      00639000
.ZG90A19             AIF   (K'&DELETETYPE LE 0).ZG90A20  OK             00639100
&ZCVAL               SETC '&ZCVAL DELETETYPE'   INCORRECT KEY USED      00639200
.ZG90A20             AIF   (K'&ERRORACTION LE 0).ZG90A21  OK            00639300
&ZCVAL               SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED      00639400
.ZG90A21             AIF   (K'&DIRINFOFMT LE 0).ZG90A22  OK             00639500
&ZCVAL               SETC '&ZCVAL DIRINFOFMT'   INCORRECT KEY USED      00639600
.ZG90A22             AIF   (K'&CRITERIA LE 0).ZG90A23  OK               00639700
&ZCVAL               SETC '&ZCVAL CRITERIA'     INCORRECT KEY USED      00639800
.ZG90A23             AIF   (K'&COCLASSB LE 0).ZG90A24  OK               00639900
&ZCVAL               SETC '&ZCVAL COCLASSB'     INCORRECT KEY USED      00640000
.ZG90A24             AIF   (K'&COCLASSE LE 0).ZG90A25  OK               00640100
&ZCVAL               SETC '&ZCVAL COCLASSE'     INCORRECT KEY USED      00640200
.ZG90A25             AIF   (K'&COSTATSFMT LE 0).ZG90A26  OK             00640300
&ZCVAL               SETC '&ZCVAL COSTATSFMT'   INCORRECT KEY USED      00640400
.ZG90A26             AIF   (K'&STGSTATS LE 0).ZG90A27  OK               00640500
&ZCVAL               SETC '&ZCVAL STGSTATS'     INCORRECT KEY USED      00640600
.ZG90A27             AIF   (K'&NUMNAMES LE 0).ZG90A28  OK               00640700
&ZCVAL               SETC '&ZCVAL NUMNAMES'     INCORRECT KEY USED      00640800
.ZG90A28             AIF   (K'&REPEAT LE 0).ZG90A29  OK                 00640900
&ZCVAL               SETC '&ZCVAL REPEAT'       INCORRECT KEY USED      00641000
.ZG90A29             AIF   (K'&RECLVCTR LE 0).ZG90A30  OK               00641100
&ZCVAL               SETC '&ZCVAL RECLVCTR'     INCORRECT KEY USED      00641200
.ZG90A30             AIF   (K'&ZCVAL LE 0).ZG90A31  OK                  00641300
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00641400
                     AIF  (K'&ZCVAL LE 160).ZG90A31A                    00641500
&ZCVAL               SETC '&ZCVAL'(1,160)                               00641600
&ZCVAL               SETC '&ZCVAL....'                                  00641700
.ZG90A31A            ANOP                                               00641800
&ZMS                 SETC  '"REQUEST'  *KMEIA* MNOTE                    00641900
&ZMS                 SETC  '&ZMS.=&REQUEST"'                            00642000
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00642100
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00642200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00642300
.ZG90A31             ANOP  ,                                            00642400
.*----------------------------------------------------------------***   00642500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00642600
                     AIF   (N'&REGUSER LE 1).ZG92A  CK NUM              00642700
&ZMS                 SETC  '"REGUSER='          *KPOSA* MNOTE           00642800
&ZMS                 SETC  '&ZMS.&REGUSER"'                             00642900
&ZMS                 SETC  '&ZMS "REGUSER"'                             00643000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00643100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00643200
.ZG92A               ANOP  ,                                            00643300
.*-------------------------------------------------------------------   00643400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00643500
&XREGUSER            SETC  ''          INITIALIZE XVARIABLE             00643600
.ZG93A   AIF   ('&REGUSER(1)' NE 'NO').ZG94A                            00643700
&XREGUSER            SETC  'NO'        SET KEYWORD                      00643800
.*-------------------------------------------------------------------   00643900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00644000
.ZG94A   AIF   ('&REGUSER(1)' NE 'YES').ZG95A                           00644100
&XREGUSER            SETC  'YES'       SET KEYWORD                      00644200
.*-------------------------------------------------------------------   00644300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00644400
.ZG95A               AIF   (K'&XREGUSER GT 0).ZG95C  KEYWORD            00644500
                     AIF   (K'&REGUSER(1) LE 0).ZG95B                   00644600
&ZMS                 SETC  '"REGUSER='          *KUKWA* MNOTE           00644700
&ZMS                 SETC  '&ZMS.&REGUSER"'                             00644800
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00644900
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00645000
&ZMS                 SETC  '&ZMS "NO"'                                  00645100
&ZMS                 SETC  '&ZMS OR "YES".'                             00645200
                     MNOTE 8,' &ZMS '                                   00645300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00645400
.ZG95B               ANOP  ,                                            00645500
&XREGUSER            SETC  'NO'        SET DEFAULT KEYWORD              00645600
.ZG95C               ANOP  ,                                            00645700
&ZXREGUSER           SETC  'INPUT'     SET IN/OUTPUT                    00645800
.*----------------------------------------------------------------***   00645900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00646000
                     AIF   (N'&PROCESSID LE 1).ZG97A  CK NUM            00646100
&ZMS                 SETC  '"PROCESSID='        *KPOSA* MNOTE           00646200
&ZMS                 SETC  '&ZMS.&PROCESSID"'                           00646300
&ZMS                 SETC  '&ZMS "PROCESSID"'                           00646400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00646500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00646600
.ZG97A               ANOP  ,                                            00646700
.*-------------------------------------------------------------------   00646800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00646900
&ZXPROCESSID         SETC  'INPUT'     SET IN/OUTPUT                    00647000
&XPROCESSID          SETC  'NO_PROCESSID'                               00647100
                     AIF   (K'&PROCESSID(1) LE 0).ZG97B  PARM           00647200
&XPROCESSID          SETC  '&PROCESSID(1)'      SET XVARIABLE           00647300
                     AIF   (N'&PROCESSID GT 1).ZG97B  MULTI PARMS       00647400
&XPROCESSID          SETC  '&PROCESSID'         SET XVARIABLE           00647500
.ZG97B               ANOP  ,                                            00647600
.*-------------------------------------------------------------------   00647700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00647800
                     AIF   (K'&ZXPROCESSID LE 0).ZG97R  NOT I/O         00647900
         AIF   ('&XPROCESSID' EQ 'NO_PROCESSID').ZG97R                  00648000
                     AIF   ('&XPROCESSID'(1,1) NE '(').ZG97R            00648100
&ZCGPR               SETC  '&XPROCESSID'(2,K'&XPROCESSID-2)             00648200
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG97P                 00648300
                     AIF   (K'&ZCGPR GT 2).ZG97Q                        00648400
                     AIF   ('&ZCGPR' EQ '0').ZG97Q                      00648500
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00648600
                     AIF   (T'&ZCGPR NE 'N').ZG97Q  INVALID REG NAME    00648700
.ZG97P               ANOP  ,                                            00648800
                     AIF   (T'&ZCGPR NE 'N').ZG97R  NON NUMERIC         00648900
                     AIF   ('&ZCGPR' LT '2').ZG97Q                      00649000
                     AIF   ('&ZCGPR' LE '12').ZG97R                     00649100
.ZG97Q               ANOP  ,                                            00649200
&ZMS                 SETC  '"PROCESSID='        *KGPRA* MNOTE           00649300
&ZMS                 SETC  '&ZMS.&PROCESSID"'                           00649400
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00649500
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00649600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00649700
.ZG97R               ANOP  ,                                            00649800
.*-------------------------------------------------------------------   00649900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00650000
.ZG99                ANOP  ,                                            00650100
&ZTLC                SETC 'UNLOCK_CASTOUT'                              00650200
                     AIF   ('&REQUEST(1)' NE '&ZTLC').ZG109             00650300
&XREQUEST            SETC  'UNLOCK_CASTOUT'     SET KEYWORD             00650400
                     AIF   (N'&REQUEST LE 1).ZG99A  CK NUM              00650500
&ZMS                 SETC  '"REQUEST='          *KPOSA* MNOTE           00650600
&ZMS                 SETC  '&ZMS.&REQUEST"'                             00650700
&ZMS                 SETC  '&ZMS "REQUEST"'                             00650800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00650900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00651000
.ZG99A               ANOP  ,                                            00651100
.*------------------------------------------------------------------    00651200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00651300
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00651400
.ZG99A0              AIF   (K'&ASSIGN LE 0).ZG99A1  OK                  00651500
&ZCVAL               SETC '&ZCVAL ASSIGN'       INCORRECT KEY USED      00651600
.ZG99A1              AIF   (K'&REGUSER LE 0).ZG99A2  OK                 00651700
&ZCVAL               SETC '&ZCVAL REGUSER'      INCORRECT KEY USED      00651800
.ZG99A2              AIF   (K'&RETURNDATA LE 0).ZG99A3  OK              00651900
&ZCVAL               SETC '&ZCVAL RETURNDATA'   INCORRECT KEY USED      00652000
.ZG99A3              AIF   (K'&WHENREG LE 0).ZG99A4  OK                 00652100
&ZCVAL               SETC '&ZCVAL WHENREG'      INCORRECT KEY USED      00652200
.ZG99A4              AIF   (K'&VERSCOMP LE 0).ZG99A5  OK                00652300
&ZCVAL               SETC '&ZCVAL VERSCOMP'     INCORRECT KEY USED      00652400
.ZG99A5              AIF   (K'&VERSCOMPTYPE LE 0).ZG99A6  OK            00652500
&ZCVAL               SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED     00652600
.ZG99A6              AIF   (K'&VERSUPDATE LE 0).ZG99A7  OK              00652700
&ZCVAL               SETC '&ZCVAL VERSUPDATE'   INCORRECT KEY USED      00652800
.ZG99A7              AIF   (K'&NEWVERS LE 0).ZG99A8  OK                 00652900
&ZCVAL               SETC '&ZCVAL NEWVERS'      INCORRECT KEY USED      00653000
.ZG99A8              AIF   (K'&CHANGED LE 0).ZG99A9  OK                 00653100
&ZCVAL               SETC '&ZCVAL CHANGED'      INCORRECT KEY USED      00653200
.ZG99A9              AIF   (K'&CROSSINVAL LE 0).ZG99A10  OK             00653300
&ZCVAL               SETC '&ZCVAL CROSSINVAL'   INCORRECT KEY USED      00653400
.ZG99A10             AIF   (K'&GETCOLOCK LE 0).ZG99A11  OK              00653500
&ZCVAL               SETC '&ZCVAL GETCOLOCK'    INCORRECT KEY USED      00653600
.ZG99A11             AIF   (K'&PARITY LE 0).ZG99A12  OK                 00653700
&ZCVAL               SETC '&ZCVAL PARITY'       INCORRECT KEY USED      00653800
.ZG99A12             AIF   (K'&USERDATA LE 0).ZG99A13  OK               00653900
&ZCVAL               SETC '&ZCVAL USERDATA'     INCORRECT KEY USED      00654000
.ZG99A13             AIF   (K'&ELEMNUM LE 0).ZG99A14  OK                00654100
&ZCVAL               SETC '&ZCVAL ELEMNUM'      INCORRECT KEY USED      00654200
.ZG99A14             AIF   (K'&STARTINDEX LE 0).ZG99A15  OK             00654300
&ZCVAL               SETC '&ZCVAL STARTINDEX'   INCORRECT KEY USED      00654400
.ZG99A15             AIF   (K'&ENDINDEX LE 0).ZG99A16  OK               00654500
&ZCVAL               SETC '&ZCVAL ENDINDEX'     INCORRECT KEY USED      00654600
.ZG99A16             AIF   (K'&NSBAREA LE 0).ZG99A17  OK                00654700
&ZCVAL               SETC '&ZCVAL NSBAREA'      INCORRECT KEY USED      00654800
.ZG99A17             AIF   (K'&CUNBAREA LE 0).ZG99A18  OK               00654900
&ZCVAL               SETC '&ZCVAL CUNBAREA'     INCORRECT KEY USED      00655000
.ZG99A18             AIF   (K'&DELETETYPE LE 0).ZG99A19  OK             00655100
&ZCVAL               SETC '&ZCVAL DELETETYPE'   INCORRECT KEY USED      00655200
.ZG99A19             AIF   (K'&ERRORACTION LE 0).ZG99A20  OK            00655300
&ZCVAL               SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED      00655400
.ZG99A20             AIF   (K'&DIRINFOFMT LE 0).ZG99A21  OK             00655500
&ZCVAL               SETC '&ZCVAL DIRINFOFMT'   INCORRECT KEY USED      00655600
.ZG99A21             AIF   (K'&CRITERIA LE 0).ZG99A22  OK               00655700
&ZCVAL               SETC '&ZCVAL CRITERIA'     INCORRECT KEY USED      00655800
.ZG99A22             AIF   (K'&COCLASSB LE 0).ZG99A23  OK               00655900
&ZCVAL               SETC '&ZCVAL COCLASSB'     INCORRECT KEY USED      00656000
.ZG99A23             AIF   (K'&COCLASSE LE 0).ZG99A24  OK               00656100
&ZCVAL               SETC '&ZCVAL COCLASSE'     INCORRECT KEY USED      00656200
.ZG99A24             AIF   (K'&COSTATSFMT LE 0).ZG99A25  OK             00656300
&ZCVAL               SETC '&ZCVAL COSTATSFMT'   INCORRECT KEY USED      00656400
.ZG99A25             AIF   (K'&STGSTATS LE 0).ZG99A26  OK               00656500
&ZCVAL               SETC '&ZCVAL STGSTATS'     INCORRECT KEY USED      00656600
.ZG99A26             AIF   (K'&NUMNAMES LE 0).ZG99A27  OK               00656700
&ZCVAL               SETC '&ZCVAL NUMNAMES'     INCORRECT KEY USED      00656800
.ZG99A27             AIF   (K'&REPEAT LE 0).ZG99A28  OK                 00656900
&ZCVAL               SETC '&ZCVAL REPEAT'       INCORRECT KEY USED      00657000
.ZG99A28             AIF   (K'&RECLVCTR LE 0).ZG99A29  OK               00657100
&ZCVAL               SETC '&ZCVAL RECLVCTR'     INCORRECT KEY USED      00657200
.ZG99A29             AIF   (K'&ZCVAL LE 0).ZG99A30  OK                  00657300
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00657400
                     AIF  (K'&ZCVAL LE 160).ZG99A30A                    00657500
&ZCVAL               SETC '&ZCVAL'(1,160)                               00657600
&ZCVAL               SETC '&ZCVAL....'                                  00657700
.ZG99A30A            ANOP                                               00657800
&ZMS                 SETC  '"REQUEST'  *KMEIA* MNOTE                    00657900
&ZMS                 SETC  '&ZMS.=&REQUEST"'                            00658000
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00658100
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00658200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00658300
.ZG99A30             ANOP  ,                                            00658400
.*----------------------------------------------------------------***   00658500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00658600
                     AIF   (N'&FIRSTNAME LE 1).ZG101A  CK NUM           00658700
&ZMS                 SETC  '"FIRSTNAME='        *KPOSA* MNOTE           00658800
&ZMS                 SETC  '&ZMS.&FIRSTNAME"'                           00658900
&ZMS                 SETC  '&ZMS "FIRSTNAME"'                           00659000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00659100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00659200
.ZG101A              ANOP  ,                                            00659300
.*-------------------------------------------------------------------   00659400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00659500
&ZXFIRSTNAME         SETC  'INPUT'     SET IN/OUTPUT                    00659600
&XFIRSTNAME          SETC  '&FIRSTNAME(1)'      SET XVARIABLE           00659700
                     AIF   (N'&FIRSTNAME GT 1).ZG101B  MULTI PARMS      00659800
&XFIRSTNAME          SETC  '&FIRSTNAME'         SET XVARIABLE           00659900
.ZG101B              AIF   (K'&FIRSTNAME(1) GT 0).ZG101C                00660000
&ZXFIRSTNAME         SETC  ''          RESET IN/OUTPUT                  00660100
&ZMS                 SETC  ' '         *KRQDA*                          00660200
&ZMS                 SETC  '&ZMS "FIRSTNAME" KEY AND ITS'               00660300
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00660400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00660500
.ZG101C              ANOP  ,                                            00660600
.*-------------------------------------------------------------------   00660700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00660800
                     AIF   (K'&ZXFIRSTNAME LE 0).ZG101R  NOT I/O        00660900
                     AIF   ('&XFIRSTNAME'(1,1) NE '(').ZG101R           00661000
&ZCGPR               SETC  '&XFIRSTNAME'(2,K'&XFIRSTNAME-2)             00661100
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG101P                00661200
                     AIF   (K'&ZCGPR GT 2).ZG101Q                       00661300
                     AIF   ('&ZCGPR' EQ '0').ZG101Q                     00661400
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00661500
                     AIF   (T'&ZCGPR NE 'N').ZG101Q  INVALID REG NAME   00661600
.ZG101P              ANOP  ,                                            00661700
                     AIF   (T'&ZCGPR NE 'N').ZG101R  NON NUMERIC        00661800
                     AIF   ('&ZCGPR' LT '2').ZG101Q                     00661900
                     AIF   ('&ZCGPR' LE '12').ZG101R                    00662000
.ZG101Q              ANOP  ,                                            00662100
&ZMS                 SETC  '"FIRSTNAME='        *KGPRA* MNOTE           00662200
&ZMS                 SETC  '&ZMS.&FIRSTNAME"'                           00662300
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00662400
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00662500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00662600
.ZG101R              ANOP  ,                                            00662700
.*----------------------------------------------------------------***   00662800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00662900
                     AIF   (N'&LASTNAME LE 1).ZG104A  CK NUM            00663000
&ZMS                 SETC  '"LASTNAME='         *KPOSA* MNOTE           00663100
&ZMS                 SETC  '&ZMS.&LASTNAME"'                            00663200
&ZMS                 SETC  '&ZMS "LASTNAME"'                            00663300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00663400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00663500
.ZG104A              ANOP  ,                                            00663600
.*-------------------------------------------------------------------   00663700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00663800
&ZXLASTNAME          SETC  'INPUT'     SET IN/OUTPUT                    00663900
&XLASTNAME           SETC  '&LASTNAME(1)'       SET XVARIABLE           00664000
                     AIF   (N'&LASTNAME GT 1).ZG104B  MULTI PARMS       00664100
&XLASTNAME           SETC  '&LASTNAME'          SET XVARIABLE           00664200
.ZG104B              AIF   (K'&LASTNAME(1) GT 0).ZG104C                 00664300
&ZXLASTNAME          SETC  ''          RESET IN/OUTPUT                  00664400
&ZMS                 SETC  ' '         *KRQDA*                          00664500
&ZMS                 SETC  '&ZMS "LASTNAME" KEY AND ITS'                00664600
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00664700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00664800
.ZG104C              ANOP  ,                                            00664900
.*-------------------------------------------------------------------   00665000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00665100
                     AIF   (K'&ZXLASTNAME LE 0).ZG104R  NOT I/O         00665200
                     AIF   ('&XLASTNAME'(1,1) NE '(').ZG104R            00665300
&ZCGPR               SETC  '&XLASTNAME'(2,K'&XLASTNAME-2)               00665400
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG104P                00665500
                     AIF   (K'&ZCGPR GT 2).ZG104Q                       00665600
                     AIF   ('&ZCGPR' EQ '0').ZG104Q                     00665700
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00665800
                     AIF   (T'&ZCGPR NE 'N').ZG104Q  INVALID REG NAME   00665900
.ZG104P              ANOP  ,                                            00666000
                     AIF   (T'&ZCGPR NE 'N').ZG104R  NON NUMERIC        00666100
                     AIF   ('&ZCGPR' LT '2').ZG104Q                     00666200
                     AIF   ('&ZCGPR' LE '12').ZG104R                    00666300
.ZG104Q              ANOP  ,                                            00666400
&ZMS                 SETC  '"LASTNAME='         *KGPRA* MNOTE           00666500
&ZMS                 SETC  '&ZMS.&LASTNAME"'                            00666600
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00666700
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00666800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00666900
.ZG104R              ANOP  ,                                            00667000
.*----------------------------------------------------------------***   00667100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00667200
                     AIF   (N'&PROCESSID LE 1).ZG107A  CK NUM           00667300
&ZMS                 SETC  '"PROCESSID='        *KPOSA* MNOTE           00667400
&ZMS                 SETC  '&ZMS.&PROCESSID"'                           00667500
&ZMS                 SETC  '&ZMS "PROCESSID"'                           00667600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00667700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00667800
.ZG107A              ANOP  ,                                            00667900
.*-------------------------------------------------------------------   00668000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00668100
&ZXPROCESSID         SETC  'INPUT'     SET IN/OUTPUT                    00668200
&XPROCESSID          SETC  'NO_PROCESSID'                               00668300
                     AIF   (K'&PROCESSID(1) LE 0).ZG107B  PARM          00668400
&XPROCESSID          SETC  '&PROCESSID(1)'      SET XVARIABLE           00668500
                     AIF   (N'&PROCESSID GT 1).ZG107B  MULTI PARMS      00668600
&XPROCESSID          SETC  '&PROCESSID'         SET XVARIABLE           00668700
.ZG107B              ANOP  ,                                            00668800
.*-------------------------------------------------------------------   00668900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00669000
                     AIF   (K'&ZXPROCESSID LE 0).ZG107R  NOT I/O        00669100
         AIF   ('&XPROCESSID' EQ 'NO_PROCESSID').ZG107R                 00669200
                     AIF   ('&XPROCESSID'(1,1) NE '(').ZG107R           00669300
&ZCGPR               SETC  '&XPROCESSID'(2,K'&XPROCESSID-2)             00669400
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG107P                00669500
                     AIF   (K'&ZCGPR GT 2).ZG107Q                       00669600
                     AIF   ('&ZCGPR' EQ '0').ZG107Q                     00669700
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00669800
                     AIF   (T'&ZCGPR NE 'N').ZG107Q  INVALID REG NAME   00669900
.ZG107P              ANOP  ,                                            00670000
                     AIF   (T'&ZCGPR NE 'N').ZG107R  NON NUMERIC        00670100
                     AIF   ('&ZCGPR' LT '2').ZG107Q                     00670200
                     AIF   ('&ZCGPR' LE '12').ZG107R                    00670300
.ZG107Q              ANOP  ,                                            00670400
&ZMS                 SETC  '"PROCESSID='        *KGPRA* MNOTE           00670500
&ZMS                 SETC  '&ZMS.&PROCESSID"'                           00670600
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00670700
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00670800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00670900
.ZG107R              ANOP  ,                                            00671000
.*-------------------------------------------------------------------   00671100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00671200
.ZG109               ANOP  ,                                            00671300
&ZTLC                SETC 'UNLOCK_CO_NAME'                              00671400
                     AIF   ('&REQUEST(1)' NE '&ZTLC').ZG116             00671500
&XREQUEST            SETC  'UNLOCK_CO_NAME'     SET KEYWORD             00671600
                     AIF   (N'&REQUEST LE 1).ZG109A  CK NUM             00671700
&ZMS                 SETC  '"REQUEST='          *KPOSA* MNOTE           00671800
&ZMS                 SETC  '&ZMS.&REQUEST"'                             00671900
&ZMS                 SETC  '&ZMS "REQUEST"'                             00672000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00672100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00672200
.ZG109A              ANOP  ,                                            00672300
.*------------------------------------------------------------------    00672400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00672500
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00672600
.ZG109A0             AIF   (K'&ASSIGN LE 0).ZG109A1  OK                 00672700
&ZCVAL               SETC '&ZCVAL ASSIGN'       INCORRECT KEY USED      00672800
.ZG109A1             AIF   (K'&REGUSER LE 0).ZG109A2  OK                00672900
&ZCVAL               SETC '&ZCVAL REGUSER'      INCORRECT KEY USED      00673000
.ZG109A2             AIF   (K'&RETURNDATA LE 0).ZG109A3  OK             00673100
&ZCVAL               SETC '&ZCVAL RETURNDATA'   INCORRECT KEY USED      00673200
.ZG109A3             AIF   (K'&WHENREG LE 0).ZG109A4  OK                00673300
&ZCVAL               SETC '&ZCVAL WHENREG'      INCORRECT KEY USED      00673400
.ZG109A4             AIF   (K'&VERSCOMP LE 0).ZG109A5  OK               00673500
&ZCVAL               SETC '&ZCVAL VERSCOMP'     INCORRECT KEY USED      00673600
.ZG109A5             AIF   (K'&VERSCOMPTYPE LE 0).ZG109A6  OK           00673700
&ZCVAL               SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED     00673800
.ZG109A6             AIF   (K'&VERSUPDATE LE 0).ZG109A7  OK             00673900
&ZCVAL               SETC '&ZCVAL VERSUPDATE'   INCORRECT KEY USED      00674000
.ZG109A7             AIF   (K'&NEWVERS LE 0).ZG109A8  OK                00674100
&ZCVAL               SETC '&ZCVAL NEWVERS'      INCORRECT KEY USED      00674200
.ZG109A8             AIF   (K'&CHANGED LE 0).ZG109A9  OK                00674300
&ZCVAL               SETC '&ZCVAL CHANGED'      INCORRECT KEY USED      00674400
.ZG109A9             AIF   (K'&CROSSINVAL LE 0).ZG109A10  OK            00674500
&ZCVAL               SETC '&ZCVAL CROSSINVAL'   INCORRECT KEY USED      00674600
.ZG109A10            AIF   (K'&GETCOLOCK LE 0).ZG109A11  OK             00674700
&ZCVAL               SETC '&ZCVAL GETCOLOCK'    INCORRECT KEY USED      00674800
.ZG109A11            AIF   (K'&PARITY LE 0).ZG109A12  OK                00674900
&ZCVAL               SETC '&ZCVAL PARITY'       INCORRECT KEY USED      00675000
.ZG109A12            AIF   (K'&USERDATA LE 0).ZG109A13  OK              00675100
&ZCVAL               SETC '&ZCVAL USERDATA'     INCORRECT KEY USED      00675200
.ZG109A13            AIF   (K'&ELEMNUM LE 0).ZG109A14  OK               00675300
&ZCVAL               SETC '&ZCVAL ELEMNUM'      INCORRECT KEY USED      00675400
.ZG109A14            AIF   (K'&STARTINDEX LE 0).ZG109A15  OK            00675500
&ZCVAL               SETC '&ZCVAL STARTINDEX'   INCORRECT KEY USED      00675600
.ZG109A15            AIF   (K'&ENDINDEX LE 0).ZG109A16  OK              00675700
&ZCVAL               SETC '&ZCVAL ENDINDEX'     INCORRECT KEY USED      00675800
.ZG109A16            AIF   (K'&NSBAREA LE 0).ZG109A17  OK               00675900
&ZCVAL               SETC '&ZCVAL NSBAREA'      INCORRECT KEY USED      00676000
.ZG109A17            AIF   (K'&FIRSTNAME LE 0).ZG109A18  OK             00676100
&ZCVAL               SETC '&ZCVAL FIRSTNAME'    INCORRECT KEY USED      00676200
.ZG109A18            AIF   (K'&LASTNAME LE 0).ZG109A19  OK              00676300
&ZCVAL               SETC '&ZCVAL LASTNAME'     INCORRECT KEY USED      00676400
.ZG109A19            AIF   (K'&DELETETYPE LE 0).ZG109A20  OK            00676500
&ZCVAL               SETC '&ZCVAL DELETETYPE'   INCORRECT KEY USED      00676600
.ZG109A20            AIF   (K'&ERRORACTION LE 0).ZG109A21  OK           00676700
&ZCVAL               SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED      00676800
.ZG109A21            AIF   (K'&DIRINFOFMT LE 0).ZG109A22  OK            00676900
&ZCVAL               SETC '&ZCVAL DIRINFOFMT'   INCORRECT KEY USED      00677000
.ZG109A22            AIF   (K'&CRITERIA LE 0).ZG109A23  OK              00677100
&ZCVAL               SETC '&ZCVAL CRITERIA'     INCORRECT KEY USED      00677200
.ZG109A23            AIF   (K'&COCLASSB LE 0).ZG109A24  OK              00677300
&ZCVAL               SETC '&ZCVAL COCLASSB'     INCORRECT KEY USED      00677400
.ZG109A24            AIF   (K'&COCLASSE LE 0).ZG109A25  OK              00677500
&ZCVAL               SETC '&ZCVAL COCLASSE'     INCORRECT KEY USED      00677600
.ZG109A25            AIF   (K'&COSTATSFMT LE 0).ZG109A26  OK            00677700
&ZCVAL               SETC '&ZCVAL COSTATSFMT'   INCORRECT KEY USED      00677800
.ZG109A26            AIF   (K'&STGSTATS LE 0).ZG109A27  OK              00677900
&ZCVAL               SETC '&ZCVAL STGSTATS'     INCORRECT KEY USED      00678000
.ZG109A27            AIF   (K'&NUMNAMES LE 0).ZG109A28  OK              00678100
&ZCVAL               SETC '&ZCVAL NUMNAMES'     INCORRECT KEY USED      00678200
.ZG109A28            AIF   (K'&REPEAT LE 0).ZG109A29  OK                00678300
&ZCVAL               SETC '&ZCVAL REPEAT'       INCORRECT KEY USED      00678400
.ZG109A29            AIF   (K'&RECLVCTR LE 0).ZG109A30  OK              00678500
&ZCVAL               SETC '&ZCVAL RECLVCTR'     INCORRECT KEY USED      00678600
.ZG109A30            AIF   (K'&ZCVAL LE 0).ZG109A31  OK                 00678700
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00678800
                     AIF  (K'&ZCVAL LE 160).ZG109A31A                   00678900
&ZCVAL               SETC '&ZCVAL'(1,160)                               00679000
&ZCVAL               SETC '&ZCVAL....'                                  00679100
.ZG109A31A           ANOP                                               00679200
&ZMS                 SETC  '"REQUEST'  *KMEIA* MNOTE                    00679300
&ZMS                 SETC  '&ZMS.=&REQUEST"'                            00679400
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00679500
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00679600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00679700
.ZG109A31            ANOP  ,                                            00679800
.*----------------------------------------------------------------***   00679900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00680000
                     AIF   (N'&CUNBAREA LE 1).ZG111A  CK NUM            00680100
&ZMS                 SETC  '"CUNBAREA='         *KPOSA* MNOTE           00680200
&ZMS                 SETC  '&ZMS.&CUNBAREA"'                            00680300
&ZMS                 SETC  '&ZMS "CUNBAREA"'                            00680400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00680500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00680600
.ZG111A              ANOP  ,                                            00680700
.*-------------------------------------------------------------------   00680800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00680900
&ZXCUNBAREA          SETC  'INPUT'     SET IN/OUTPUT                    00681000
&XCUNBAREA           SETC  '&CUNBAREA(1)'       SET XVARIABLE           00681100
                     AIF   (N'&CUNBAREA GT 1).ZG111B  MULTI PARMS       00681200
&XCUNBAREA           SETC  '&CUNBAREA'          SET XVARIABLE           00681300
.ZG111B              AIF   (K'&CUNBAREA(1) GT 0).ZG111C                 00681400
&ZXCUNBAREA          SETC  ''          RESET IN/OUTPUT                  00681500
&ZMS                 SETC  ' '         *KRQDA*                          00681600
&ZMS                 SETC  '&ZMS "CUNBAREA" KEY AND ITS'                00681700
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00681800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00681900
.ZG111C              ANOP  ,                                            00682000
.*-------------------------------------------------------------------   00682100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00682200
                     AIF   (K'&ZXCUNBAREA LE 0).ZG111R  NOT I/O         00682300
                     AIF   ('&XCUNBAREA'(1,1) NE '(').ZG111R            00682400
&ZCGPR               SETC  '&XCUNBAREA'(2,K'&XCUNBAREA-2)               00682500
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG111P                00682600
                     AIF   (K'&ZCGPR GT 2).ZG111Q                       00682700
                     AIF   ('&ZCGPR' EQ '0').ZG111Q                     00682800
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00682900
                     AIF   (T'&ZCGPR NE 'N').ZG111Q  INVALID REG NAME   00683000
.ZG111P              ANOP  ,                                            00683100
                     AIF   (T'&ZCGPR NE 'N').ZG111R  NON NUMERIC        00683200
                     AIF   ('&ZCGPR' LT '2').ZG111Q                     00683300
                     AIF   ('&ZCGPR' LE '12').ZG111R                    00683400
.ZG111Q              ANOP  ,                                            00683500
&ZMS                 SETC  '"CUNBAREA='         *KGPRA* MNOTE           00683600
&ZMS                 SETC  '&ZMS.&CUNBAREA"'                            00683700
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00683800
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00683900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00684000
.ZG111R              ANOP  ,                                            00684100
.*----------------------------------------------------------------***   00684200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00684300
                     AIF   (N'&PROCESSID LE 1).ZG114A  CK NUM           00684400
&ZMS                 SETC  '"PROCESSID='        *KPOSA* MNOTE           00684500
&ZMS                 SETC  '&ZMS.&PROCESSID"'                           00684600
&ZMS                 SETC  '&ZMS "PROCESSID"'                           00684700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00684800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00684900
.ZG114A              ANOP  ,                                            00685000
.*-------------------------------------------------------------------   00685100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00685200
&ZXPROCESSID         SETC  'INPUT'     SET IN/OUTPUT                    00685300
&XPROCESSID          SETC  'NO_PROCESSID'                               00685400
                     AIF   (K'&PROCESSID(1) LE 0).ZG114B  PARM          00685500
&XPROCESSID          SETC  '&PROCESSID(1)'      SET XVARIABLE           00685600
                     AIF   (N'&PROCESSID GT 1).ZG114B  MULTI PARMS      00685700
&XPROCESSID          SETC  '&PROCESSID'         SET XVARIABLE           00685800
.ZG114B              ANOP  ,                                            00685900
.*-------------------------------------------------------------------   00686000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00686100
                     AIF   (K'&ZXPROCESSID LE 0).ZG114R  NOT I/O        00686200
         AIF   ('&XPROCESSID' EQ 'NO_PROCESSID').ZG114R                 00686300
                     AIF   ('&XPROCESSID'(1,1) NE '(').ZG114R           00686400
&ZCGPR               SETC  '&XPROCESSID'(2,K'&XPROCESSID-2)             00686500
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG114P                00686600
                     AIF   (K'&ZCGPR GT 2).ZG114Q                       00686700
                     AIF   ('&ZCGPR' EQ '0').ZG114Q                     00686800
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00686900
                     AIF   (T'&ZCGPR NE 'N').ZG114Q  INVALID REG NAME   00687000
.ZG114P              ANOP  ,                                            00687100
                     AIF   (T'&ZCGPR NE 'N').ZG114R  NON NUMERIC        00687200
                     AIF   ('&ZCGPR' LT '2').ZG114Q                     00687300
                     AIF   ('&ZCGPR' LE '12').ZG114R                    00687400
.ZG114Q              ANOP  ,                                            00687500
&ZMS                 SETC  '"PROCESSID='        *KGPRA* MNOTE           00687600
&ZMS                 SETC  '&ZMS.&PROCESSID"'                           00687700
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00687800
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00687900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00688000
.ZG114R              ANOP  ,                                            00688100
.*-------------------------------------------------------------------   00688200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00688300
.ZG116               ANOP  ,                                            00688400
&ZTLC                SETC 'CROSS_INVAL'                                 00688500
                     AIF   ('&REQUEST(1)' NE '&ZTLC').ZG117             00688600
&XREQUEST            SETC  'CROSS_INVAL'        SET KEYWORD             00688700
                     AIF   (N'&REQUEST LE 1).ZG116A  CK NUM             00688800
&ZMS                 SETC  '"REQUEST='          *KPOSA* MNOTE           00688900
&ZMS                 SETC  '&ZMS.&REQUEST"'                             00689000
&ZMS                 SETC  '&ZMS "REQUEST"'                             00689100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00689200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00689300
.ZG116A              ANOP  ,                                            00689400
.*------------------------------------------------------------------    00689500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00689600
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00689700
.ZG116A0             AIF   (K'&ASSIGN LE 0).ZG116A1  OK                 00689800
&ZCVAL               SETC '&ZCVAL ASSIGN'       INCORRECT KEY USED      00689900
.ZG116A1             AIF   (K'&REGUSER LE 0).ZG116A2  OK                00690000
&ZCVAL               SETC '&ZCVAL REGUSER'      INCORRECT KEY USED      00690100
.ZG116A2             AIF   (K'&RETURNDATA LE 0).ZG116A3  OK             00690200
&ZCVAL               SETC '&ZCVAL RETURNDATA'   INCORRECT KEY USED      00690300
.ZG116A3             AIF   (K'&WHENREG LE 0).ZG116A4  OK                00690400
&ZCVAL               SETC '&ZCVAL WHENREG'      INCORRECT KEY USED      00690500
.ZG116A4             AIF   (K'&VERSCOMP LE 0).ZG116A5  OK               00690600
&ZCVAL               SETC '&ZCVAL VERSCOMP'     INCORRECT KEY USED      00690700
.ZG116A5             AIF   (K'&VERSCOMPTYPE LE 0).ZG116A6  OK           00690800
&ZCVAL               SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED     00690900
.ZG116A6             AIF   (K'&VERSUPDATE LE 0).ZG116A7  OK             00691000
&ZCVAL               SETC '&ZCVAL VERSUPDATE'   INCORRECT KEY USED      00691100
.ZG116A7             AIF   (K'&NEWVERS LE 0).ZG116A8  OK                00691200
&ZCVAL               SETC '&ZCVAL NEWVERS'      INCORRECT KEY USED      00691300
.ZG116A8             AIF   (K'&CHANGED LE 0).ZG116A9  OK                00691400
&ZCVAL               SETC '&ZCVAL CHANGED'      INCORRECT KEY USED      00691500
.ZG116A9             AIF   (K'&CROSSINVAL LE 0).ZG116A10  OK            00691600
&ZCVAL               SETC '&ZCVAL CROSSINVAL'   INCORRECT KEY USED      00691700
.ZG116A10            AIF   (K'&GETCOLOCK LE 0).ZG116A11  OK             00691800
&ZCVAL               SETC '&ZCVAL GETCOLOCK'    INCORRECT KEY USED      00691900
.ZG116A11            AIF   (K'&PROCESSID LE 0).ZG116A12  OK             00692000
&ZCVAL               SETC '&ZCVAL PROCESSID'    INCORRECT KEY USED      00692100
.ZG116A12            AIF   (K'&PARITY LE 0).ZG116A13  OK                00692200
&ZCVAL               SETC '&ZCVAL PARITY'       INCORRECT KEY USED      00692300
.ZG116A13            AIF   (K'&USERDATA LE 0).ZG116A14  OK              00692400
&ZCVAL               SETC '&ZCVAL USERDATA'     INCORRECT KEY USED      00692500
.ZG116A14            AIF   (K'&ELEMNUM LE 0).ZG116A15  OK               00692600
&ZCVAL               SETC '&ZCVAL ELEMNUM'      INCORRECT KEY USED      00692700
.ZG116A15            AIF   (K'&STARTINDEX LE 0).ZG116A16  OK            00692800
&ZCVAL               SETC '&ZCVAL STARTINDEX'   INCORRECT KEY USED      00692900
.ZG116A16            AIF   (K'&ENDINDEX LE 0).ZG116A17  OK              00693000
&ZCVAL               SETC '&ZCVAL ENDINDEX'     INCORRECT KEY USED      00693100
.ZG116A17            AIF   (K'&NSBAREA LE 0).ZG116A18  OK               00693200
&ZCVAL               SETC '&ZCVAL NSBAREA'      INCORRECT KEY USED      00693300
.ZG116A18            AIF   (K'&FIRSTNAME LE 0).ZG116A19  OK             00693400
&ZCVAL               SETC '&ZCVAL FIRSTNAME'    INCORRECT KEY USED      00693500
.ZG116A19            AIF   (K'&LASTNAME LE 0).ZG116A20  OK              00693600
&ZCVAL               SETC '&ZCVAL LASTNAME'     INCORRECT KEY USED      00693700
.ZG116A20            AIF   (K'&CUNBAREA LE 0).ZG116A21  OK              00693800
&ZCVAL               SETC '&ZCVAL CUNBAREA'     INCORRECT KEY USED      00693900
.ZG116A21            AIF   (K'&DELETETYPE LE 0).ZG116A22  OK            00694000
&ZCVAL               SETC '&ZCVAL DELETETYPE'   INCORRECT KEY USED      00694100
.ZG116A22            AIF   (K'&ERRORACTION LE 0).ZG116A23  OK           00694200
&ZCVAL               SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED      00694300
.ZG116A23            AIF   (K'&DIRINFOFMT LE 0).ZG116A24  OK            00694400
&ZCVAL               SETC '&ZCVAL DIRINFOFMT'   INCORRECT KEY USED      00694500
.ZG116A24            AIF   (K'&CRITERIA LE 0).ZG116A25  OK              00694600
&ZCVAL               SETC '&ZCVAL CRITERIA'     INCORRECT KEY USED      00694700
.ZG116A25            AIF   (K'&COCLASSB LE 0).ZG116A26  OK              00694800
&ZCVAL               SETC '&ZCVAL COCLASSB'     INCORRECT KEY USED      00694900
.ZG116A26            AIF   (K'&COCLASSE LE 0).ZG116A27  OK              00695000
&ZCVAL               SETC '&ZCVAL COCLASSE'     INCORRECT KEY USED      00695100
.ZG116A27            AIF   (K'&COSTATSFMT LE 0).ZG116A28  OK            00695200
&ZCVAL               SETC '&ZCVAL COSTATSFMT'   INCORRECT KEY USED      00695300
.ZG116A28            AIF   (K'&STGSTATS LE 0).ZG116A29  OK              00695400
&ZCVAL               SETC '&ZCVAL STGSTATS'     INCORRECT KEY USED      00695500
.ZG116A29            AIF   (K'&NUMNAMES LE 0).ZG116A30  OK              00695600
&ZCVAL               SETC '&ZCVAL NUMNAMES'     INCORRECT KEY USED      00695700
.ZG116A30            AIF   (K'&REPEAT LE 0).ZG116A31  OK                00695800
&ZCVAL               SETC '&ZCVAL REPEAT'       INCORRECT KEY USED      00695900
.ZG116A31            AIF   (K'&RECLVCTR LE 0).ZG116A32  OK              00696000
&ZCVAL               SETC '&ZCVAL RECLVCTR'     INCORRECT KEY USED      00696100
.ZG116A32            AIF   (K'&ZCVAL LE 0).ZG116A33  OK                 00696200
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00696300
                     AIF  (K'&ZCVAL LE 160).ZG116A33A                   00696400
&ZCVAL               SETC '&ZCVAL'(1,160)                               00696500
&ZCVAL               SETC '&ZCVAL....'                                  00696600
.ZG116A33A           ANOP                                               00696700
&ZMS                 SETC  '"REQUEST'  *KMEIA* MNOTE                    00696800
&ZMS                 SETC  '&ZMS.=&REQUEST"'                            00696900
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00697000
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00697100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00697200
.ZG116A33            ANOP  ,                                            00697300
.*-------------------------------------------------------------------   00697400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00697500
.ZG117               ANOP  ,                                            00697600
&ZTLC                SETC 'DELETE_NAME'                                 00697700
                     AIF   ('&REQUEST(1)' NE '&ZTLC').ZG133             00697800
&XREQUEST            SETC  'DELETE_NAME'        SET KEYWORD             00697900
                     AIF   (N'&REQUEST LE 1).ZG117A  CK NUM             00698000
&ZMS                 SETC  '"REQUEST='          *KPOSA* MNOTE           00698100
&ZMS                 SETC  '&ZMS.&REQUEST"'                             00698200
&ZMS                 SETC  '&ZMS "REQUEST"'                             00698300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00698400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00698500
.ZG117A              ANOP  ,                                            00698600
.*------------------------------------------------------------------    00698700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00698800
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00698900
.ZG117A0             AIF   (K'&ASSIGN LE 0).ZG117A1  OK                 00699000
&ZCVAL               SETC '&ZCVAL ASSIGN'       INCORRECT KEY USED      00699100
.ZG117A1             AIF   (K'&REGUSER LE 0).ZG117A2  OK                00699200
&ZCVAL               SETC '&ZCVAL REGUSER'      INCORRECT KEY USED      00699300
.ZG117A2             AIF   (K'&RETURNDATA LE 0).ZG117A3  OK             00699400
&ZCVAL               SETC '&ZCVAL RETURNDATA'   INCORRECT KEY USED      00699500
.ZG117A3             AIF   (K'&WHENREG LE 0).ZG117A4  OK                00699600
&ZCVAL               SETC '&ZCVAL WHENREG'      INCORRECT KEY USED      00699700
.ZG117A4             AIF   (K'&VERSUPDATE LE 0).ZG117A5  OK             00699800
&ZCVAL               SETC '&ZCVAL VERSUPDATE'   INCORRECT KEY USED      00699900
.ZG117A5             AIF   (K'&NEWVERS LE 0).ZG117A6  OK                00700000
&ZCVAL               SETC '&ZCVAL NEWVERS'      INCORRECT KEY USED      00700100
.ZG117A6             AIF   (K'&CHANGED LE 0).ZG117A7  OK                00700200
&ZCVAL               SETC '&ZCVAL CHANGED'      INCORRECT KEY USED      00700300
.ZG117A7             AIF   (K'&CROSSINVAL LE 0).ZG117A8  OK             00700400
&ZCVAL               SETC '&ZCVAL CROSSINVAL'   INCORRECT KEY USED      00700500
.ZG117A8             AIF   (K'&GETCOLOCK LE 0).ZG117A9  OK              00700600
&ZCVAL               SETC '&ZCVAL GETCOLOCK'    INCORRECT KEY USED      00700700
.ZG117A9             AIF   (K'&PROCESSID LE 0).ZG117A10  OK             00700800
&ZCVAL               SETC '&ZCVAL PROCESSID'    INCORRECT KEY USED      00700900
.ZG117A10            AIF   (K'&PARITY LE 0).ZG117A11  OK                00701000
&ZCVAL               SETC '&ZCVAL PARITY'       INCORRECT KEY USED      00701100
.ZG117A11            AIF   (K'&USERDATA LE 0).ZG117A12  OK              00701200
&ZCVAL               SETC '&ZCVAL USERDATA'     INCORRECT KEY USED      00701300
.ZG117A12            AIF   (K'&ELEMNUM LE 0).ZG117A13  OK               00701400
&ZCVAL               SETC '&ZCVAL ELEMNUM'      INCORRECT KEY USED      00701500
.ZG117A13            AIF   (K'&STARTINDEX LE 0).ZG117A14  OK            00701600
&ZCVAL               SETC '&ZCVAL STARTINDEX'   INCORRECT KEY USED      00701700
.ZG117A14            AIF   (K'&ENDINDEX LE 0).ZG117A15  OK              00701800
&ZCVAL               SETC '&ZCVAL ENDINDEX'     INCORRECT KEY USED      00701900
.ZG117A15            AIF   (K'&NSBAREA LE 0).ZG117A16  OK               00702000
&ZCVAL               SETC '&ZCVAL NSBAREA'      INCORRECT KEY USED      00702100
.ZG117A16            AIF   (K'&FIRSTNAME LE 0).ZG117A17  OK             00702200
&ZCVAL               SETC '&ZCVAL FIRSTNAME'    INCORRECT KEY USED      00702300
.ZG117A17            AIF   (K'&LASTNAME LE 0).ZG117A18  OK              00702400
&ZCVAL               SETC '&ZCVAL LASTNAME'     INCORRECT KEY USED      00702500
.ZG117A18            AIF   (K'&CUNBAREA LE 0).ZG117A19  OK              00702600
&ZCVAL               SETC '&ZCVAL CUNBAREA'     INCORRECT KEY USED      00702700
.ZG117A19            AIF   (K'&ERRORACTION LE 0).ZG117A20  OK           00702800
&ZCVAL               SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED      00702900
.ZG117A20            AIF   (K'&DIRINFOFMT LE 0).ZG117A21  OK            00703000
&ZCVAL               SETC '&ZCVAL DIRINFOFMT'   INCORRECT KEY USED      00703100
.ZG117A21            AIF   (K'&CRITERIA LE 0).ZG117A22  OK              00703200
&ZCVAL               SETC '&ZCVAL CRITERIA'     INCORRECT KEY USED      00703300
.ZG117A22            AIF   (K'&COCLASSB LE 0).ZG117A23  OK              00703400
&ZCVAL               SETC '&ZCVAL COCLASSB'     INCORRECT KEY USED      00703500
.ZG117A23            AIF   (K'&COCLASSE LE 0).ZG117A24  OK              00703600
&ZCVAL               SETC '&ZCVAL COCLASSE'     INCORRECT KEY USED      00703700
.ZG117A24            AIF   (K'&COSTATSFMT LE 0).ZG117A25  OK            00703800
&ZCVAL               SETC '&ZCVAL COSTATSFMT'   INCORRECT KEY USED      00703900
.ZG117A25            AIF   (K'&STGSTATS LE 0).ZG117A26  OK              00704000
&ZCVAL               SETC '&ZCVAL STGSTATS'     INCORRECT KEY USED      00704100
.ZG117A26            AIF   (K'&NUMNAMES LE 0).ZG117A27  OK              00704200
&ZCVAL               SETC '&ZCVAL NUMNAMES'     INCORRECT KEY USED      00704300
.ZG117A27            AIF   (K'&REPEAT LE 0).ZG117A28  OK                00704400
&ZCVAL               SETC '&ZCVAL REPEAT'       INCORRECT KEY USED      00704500
.ZG117A28            AIF   (K'&RECLVCTR LE 0).ZG117A29  OK              00704600
&ZCVAL               SETC '&ZCVAL RECLVCTR'     INCORRECT KEY USED      00704700
.ZG117A29            AIF   (K'&ZCVAL LE 0).ZG117A30  OK                 00704800
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00704900
                     AIF  (K'&ZCVAL LE 160).ZG117A30A                   00705000
&ZCVAL               SETC '&ZCVAL'(1,160)                               00705100
&ZCVAL               SETC '&ZCVAL....'                                  00705200
.ZG117A30A           ANOP                                               00705300
&ZMS                 SETC  '"REQUEST'  *KMEIA* MNOTE                    00705400
&ZMS                 SETC  '&ZMS.=&REQUEST"'                            00705500
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00705600
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00705700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00705800
.ZG117A30            ANOP  ,                                            00705900
.*------------------------------------------------------------------    00706000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00706100
&XDELETETYPE         SETC  ''          INITIALIZE XVARIABLE             00706200
.*-------------------------------------------------------------------   00706300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00706400
.ZG120               ANOP  ,                                            00706500
                     AIF   (K'&DELETETYPE(1) LE 0).ZG120A               00706600
&ZTLC                SETC 'DIRANDDATA'                                  00706700
                     AIF   ('&DELETETYPE(1)' NE '&ZTLC').ZG121          00706800
&XDELETETYPE         SETC  'DIRANDDATA'         SET KEYWORD             00706900
                     AIF   (N'&DELETETYPE LE 1).ZG120A  CK NUM          00707000
&ZMS                 SETC  '"DELETETYPE='       *KPOSA* MNOTE           00707100
&ZMS                 SETC  '&ZMS.&DELETETYPE"'                          00707200
&ZMS                 SETC  '&ZMS "DELETETYPE"'                          00707300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00707400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00707500
.ZG120A              ANOP  ,                                            00707600
.*-------------------------------------------------------------------   00707700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00707800
.ZG121               ANOP  ,                                            00707900
&ZTLC                SETC 'UNCHDATA'                                    00708000
                     AIF   ('&DELETETYPE(1)' NE '&ZTLC').ZG122          00708100
&XDELETETYPE         SETC  'UNCHDATA'  SET KEYWORD                      00708200
                     AIF   (N'&DELETETYPE LE 1).ZG121A  CK NUM          00708300
&ZMS                 SETC  '"DELETETYPE='       *KPOSA* MNOTE           00708400
&ZMS                 SETC  '&ZMS.&DELETETYPE"'                          00708500
&ZMS                 SETC  '&ZMS "DELETETYPE"'                          00708600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00708700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00708800
.ZG121A              ANOP  ,                                            00708900
.*-------------------------------------------------------------------   00709000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00709100
.ZG122               ANOP  ,                                            00709200
&ZTLC                SETC 'CHDATA'                                      00709300
                     AIF   ('&DELETETYPE(1)' NE '&ZTLC').ZG123          00709400
&XDELETETYPE         SETC  'CHDATA'    SET KEYWORD                      00709500
                     AIF   (N'&DELETETYPE LE 1).ZG122A  CK NUM          00709600
&ZMS                 SETC  '"DELETETYPE='       *KPOSA* MNOTE           00709700
&ZMS                 SETC  '&ZMS.&DELETETYPE"'                          00709800
&ZMS                 SETC  '&ZMS "DELETETYPE"'                          00709900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00710000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00710100
.ZG122A              ANOP  ,                                            00710200
.*-------------------------------------------------------------------   00710300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00710400
.ZG123               ANOP  ,                                            00710500
&ZTLC                SETC 'ANYDATA'                                     00710600
                     AIF   ('&DELETETYPE(1)' NE '&ZTLC').ZG124          00710700
&XDELETETYPE         SETC  'ANYDATA'   SET KEYWORD                      00710800
                     AIF   (N'&DELETETYPE LE 1).ZG123A  CK NUM          00710900
&ZMS                 SETC  '"DELETETYPE='       *KPOSA* MNOTE           00711000
&ZMS                 SETC  '&ZMS.&DELETETYPE"'                          00711100
&ZMS                 SETC  '&ZMS "DELETETYPE"'                          00711200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00711300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00711400
.ZG123A              ANOP  ,                                            00711500
.*------------------------------------------------------------------    00711600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00711700
.ZG124               ANOP  ,                                            00711800
&ZXDELETETYPE        SETC  'INPUT'     SET IN/OUTPUT                    00711900
                     AIF   (K'&XDELETETYPE GT 0).ZG124E  VALID ARG      00712000
                     AIF   (T'&DELETETYPE EQ 'O').ZG124D  OMITTED       00712100
&ZASYSLNDX           SETA  0                                            00712200
.ZG124A              ANOP  ,           POSITIONAL MACRO KEY             00712300
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00712400
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG124C            00712500
&ZTLC                SETC 'DELETETYPE'                                  00712600
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG124A   00712700
.ZG124B              ANOP  ,                                            00712800
&ZXDELETETYPE        SETC  ''          RESET IN/OUTPUT                  00712900
&ZMS                 SETC  'THE "DELETETYPE" KEY'  *KOPTA* MNOTE        00713000
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00713100
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00713200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00713300
                     AGO   .ZG124E                                      00713400
.ZG124C              ANOP  ,                                            00713500
&ZXDELETETYPE        SETC  ''          RESET IN/OUTPUT                  00713600
&ZMS                 SETC  '"DELETETYPE='       *KUKWA* MNOTE           00713700
&ZMS                 SETC  '&ZMS.&DELETETYPE"'                          00713800
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00713900
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00714000
&ZMS                 SETC  '&ZMS "DIRANDDATA",'                         00714100
&ZMS                 SETC  '&ZMS "UNCHDATA",'                           00714200
&ZMS                 SETC  '&ZMS "CHDATA",'                             00714300
&ZMS                 SETC  '&ZMS OR "ANYDATA".'                         00714400
                     MNOTE 8,' &ZMS '                                   00714500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00714600
                     AGO   .ZG124E                                      00714700
.ZG124D              ANOP  ,                                            00714800
&XDELETETYPE         SETC  'DIRANDDATA'         SET DEFAULT KEYWORD     00714900
.ZG124E              ANOP  ,                                            00715000
.*----------------------------------------------------------------***   00715100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00715200
                     AIF   (N'&VERSCOMP LE 1).ZG126A  CK NUM            00715300
&ZMS                 SETC  '"VERSCOMP='         *KPOSA* MNOTE           00715400
&ZMS                 SETC  '&ZMS.&VERSCOMP"'                            00715500
&ZMS                 SETC  '&ZMS "VERSCOMP"'                            00715600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00715700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00715800
.ZG126A              ANOP  ,                                            00715900
.*-------------------------------------------------------------------   00716000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00716100
&ZXVERSCOMP          SETC  'INPUT'     SET IN/OUTPUT                    00716200
&XVERSCOMP           SETC  'NO_VERSCOMP'                                00716300
                     AIF   (K'&VERSCOMP(1) LE 0).ZG126B  PARM           00716400
&XVERSCOMP           SETC  '&VERSCOMP(1)'       SET XVARIABLE           00716500
                     AIF   (N'&VERSCOMP GT 1).ZG126B  MULTI PARMS       00716600
&XVERSCOMP           SETC  '&VERSCOMP'          SET XVARIABLE           00716700
.ZG126B              ANOP  ,                                            00716800
.*-------------------------------------------------------------------   00716900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00717000
                     AIF   (K'&ZXVERSCOMP LE 0).ZG126R  NOT I/O         00717100
         AIF   ('&XVERSCOMP' EQ 'NO_VERSCOMP').ZG126R                   00717200
                     AIF   ('&XVERSCOMP'(1,1) NE '(').ZG126R            00717300
&ZCGPR               SETC  '&XVERSCOMP'(2,K'&XVERSCOMP-2)               00717400
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG126P                00717500
                     AIF   (K'&ZCGPR GT 2).ZG126Q                       00717600
                     AIF   ('&ZCGPR' EQ '0').ZG126Q                     00717700
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00717800
                     AIF   (T'&ZCGPR NE 'N').ZG126Q  INVALID REG NAME   00717900
.ZG126P              ANOP  ,                                            00718000
                     AIF   (T'&ZCGPR NE 'N').ZG126R  NON NUMERIC        00718100
                     AIF   ('&ZCGPR' LT '2').ZG126Q                     00718200
                     AIF   ('&ZCGPR' LE '12').ZG126R                    00718300
.ZG126Q              ANOP  ,                                            00718400
&ZMS                 SETC  '"VERSCOMP='         *KGPRA* MNOTE           00718500
&ZMS                 SETC  '&ZMS.&VERSCOMP"'                            00718600
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00718700
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00718800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00718900
.ZG126R              ANOP  ,                                            00719000
.*----------------------------------------------------------------***   00719100
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00719200
                     AIF   (N'&VERSCOMPTYPE LE 1).ZG128A  CK NUM        00719300
&ZMS                 SETC  '"VERSCOMPTYPE='     *KPOSA* MNOTE           00719400
&ZMS                 SETC  '&ZMS.&VERSCOMPTYPE"'                        00719500
&ZMS                 SETC  '&ZMS "VERSCOMPTYPE"'                        00719600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00719700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00719800
.ZG128A              ANOP  ,                                            00719900
.*-------------------------------------------------------------------   00720000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00720100
&XVERSCOMPTYPE       SETC  ''          INITIALIZE XVARIABLE             00720200
.ZG129A   AIF   ('&VERSCOMPTYPE(1)' NE 'EQUAL').ZG130A                  00720300
&XVERSCOMPTYPE       SETC  'EQUAL'     SET KEYWORD                      00720400
.*-------------------------------------------------------------------   00720500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00720600
.ZG130A   AIF   ('&VERSCOMPTYPE(1)' NE 'LESSOREQUAL').ZG131A            00720700
&XVERSCOMPTYPE       SETC  'LESSOREQUAL'        SET KEYWORD             00720800
.*-------------------------------------------------------------------   00720900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00721000
.ZG131A              AIF   (K'&XVERSCOMPTYPE GT 0).ZG131C  KEYWORD      00721100
                     AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG131B             00721200
&ZMS                 SETC  '"VERSCOMPTYPE='     *KUKWA* MNOTE           00721300
&ZMS                 SETC  '&ZMS.&VERSCOMPTYPE"'                        00721400
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00721500
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00721600
&ZMS                 SETC  '&ZMS "EQUAL"'                               00721700
&ZMS                 SETC  '&ZMS OR "LESSOREQUAL".'                     00721800
                     MNOTE 8,' &ZMS '                                   00721900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00722000
.ZG131B              ANOP  ,                                            00722100
&XVERSCOMPTYPE       SETC  'EQUAL'     SET DEFAULT KEYWORD              00722200
.ZG131C              ANOP  ,                                            00722300
&ZXVERSCOMPTYPE      SETC  'INPUT'     SET IN/OUTPUT                    00722400
.*-------------------------------------------------------------------   00722500
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00722600
                     AIF   (K'&VERSCOMP(1) GT 0).ZG131D  KEY            00722700
                     AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG131D  PARM       00722800
&ZMS                 SETC  '"VERSCOMPTYPE'      *KDEPA* MNOTE           00722900
&ZMS                 SETC  '&ZMS.=&VERSCOMPTYPE"'                       00723000
&ZMS                 SETC  '&ZMS CAN ONLY BE SPECIFIED IF'              00723100
&ZMS                 SETC  '&ZMS '                                      00723200
&ZMS                 SETC  '&ZMS "VERSCOMP"'                            00723300
                     MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                 00723400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00723500
.ZG131D              ANOP  ,                                            00723600
.*-------------------------------------------------------------------   00723700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00723800
.ZG133               ANOP  ,                                            00723900
&ZTLC                SETC 'DELETE_NAMELIST'                             00724000
                     AIF   ('&REQUEST(1)' NE '&ZTLC').ZG158             00724100
&XREQUEST            SETC  'DELETE_NAMELIST'    SET KEYWORD             00724200
                     AIF   (N'&REQUEST LE 1).ZG133A  CK NUM             00724300
&ZMS                 SETC  '"REQUEST='          *KPOSA* MNOTE           00724400
&ZMS                 SETC  '&ZMS.&REQUEST"'                             00724500
&ZMS                 SETC  '&ZMS "REQUEST"'                             00724600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00724700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00724800
.ZG133A              ANOP  ,                                            00724900
.*------------------------------------------------------------------    00725000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00725100
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00725200
.ZG133A0             AIF   (K'&ASSIGN LE 0).ZG133A1  OK                 00725300
&ZCVAL               SETC '&ZCVAL ASSIGN'       INCORRECT KEY USED      00725400
.ZG133A1             AIF   (K'&REGUSER LE 0).ZG133A2  OK                00725500
&ZCVAL               SETC '&ZCVAL REGUSER'      INCORRECT KEY USED      00725600
.ZG133A2             AIF   (K'&RETURNDATA LE 0).ZG133A3  OK             00725700
&ZCVAL               SETC '&ZCVAL RETURNDATA'   INCORRECT KEY USED      00725800
.ZG133A3             AIF   (K'&WHENREG LE 0).ZG133A4  OK                00725900
&ZCVAL               SETC '&ZCVAL WHENREG'      INCORRECT KEY USED      00726000
.ZG133A4             AIF   (K'&VERSCOMP LE 0).ZG133A5  OK               00726100
&ZCVAL               SETC '&ZCVAL VERSCOMP'     INCORRECT KEY USED      00726200
.ZG133A5             AIF   (K'&VERSUPDATE LE 0).ZG133A6  OK             00726300
&ZCVAL               SETC '&ZCVAL VERSUPDATE'   INCORRECT KEY USED      00726400
.ZG133A6             AIF   (K'&NEWVERS LE 0).ZG133A7  OK                00726500
&ZCVAL               SETC '&ZCVAL NEWVERS'      INCORRECT KEY USED      00726600
.ZG133A7             AIF   (K'&CHANGED LE 0).ZG133A8  OK                00726700
&ZCVAL               SETC '&ZCVAL CHANGED'      INCORRECT KEY USED      00726800
.ZG133A8             AIF   (K'&CROSSINVAL LE 0).ZG133A9  OK             00726900
&ZCVAL               SETC '&ZCVAL CROSSINVAL'   INCORRECT KEY USED      00727000
.ZG133A9             AIF   (K'&GETCOLOCK LE 0).ZG133A10  OK             00727100
&ZCVAL               SETC '&ZCVAL GETCOLOCK'    INCORRECT KEY USED      00727200
.ZG133A10            AIF   (K'&PROCESSID LE 0).ZG133A11  OK             00727300
&ZCVAL               SETC '&ZCVAL PROCESSID'    INCORRECT KEY USED      00727400
.ZG133A11            AIF   (K'&PARITY LE 0).ZG133A12  OK                00727500
&ZCVAL               SETC '&ZCVAL PARITY'       INCORRECT KEY USED      00727600
.ZG133A12            AIF   (K'&USERDATA LE 0).ZG133A13  OK              00727700
&ZCVAL               SETC '&ZCVAL USERDATA'     INCORRECT KEY USED      00727800
.ZG133A13            AIF   (K'&ELEMNUM LE 0).ZG133A14  OK               00727900
&ZCVAL               SETC '&ZCVAL ELEMNUM'      INCORRECT KEY USED      00728000
.ZG133A14            AIF   (K'&NSBAREA LE 0).ZG133A15  OK               00728100
&ZCVAL               SETC '&ZCVAL NSBAREA'      INCORRECT KEY USED      00728200
.ZG133A15            AIF   (K'&FIRSTNAME LE 0).ZG133A16  OK             00728300
&ZCVAL               SETC '&ZCVAL FIRSTNAME'    INCORRECT KEY USED      00728400
.ZG133A16            AIF   (K'&LASTNAME LE 0).ZG133A17  OK              00728500
&ZCVAL               SETC '&ZCVAL LASTNAME'     INCORRECT KEY USED      00728600
.ZG133A17            AIF   (K'&CUNBAREA LE 0).ZG133A18  OK              00728700
&ZCVAL               SETC '&ZCVAL CUNBAREA'     INCORRECT KEY USED      00728800
.ZG133A18            AIF   (K'&DIRINFOFMT LE 0).ZG133A19  OK            00728900
&ZCVAL               SETC '&ZCVAL DIRINFOFMT'   INCORRECT KEY USED      00729000
.ZG133A19            AIF   (K'&CRITERIA LE 0).ZG133A20  OK              00729100
&ZCVAL               SETC '&ZCVAL CRITERIA'     INCORRECT KEY USED      00729200
.ZG133A20            AIF   (K'&COCLASSB LE 0).ZG133A21  OK              00729300
&ZCVAL               SETC '&ZCVAL COCLASSB'     INCORRECT KEY USED      00729400
.ZG133A21            AIF   (K'&COCLASSE LE 0).ZG133A22  OK              00729500
&ZCVAL               SETC '&ZCVAL COCLASSE'     INCORRECT KEY USED      00729600
.ZG133A22            AIF   (K'&COSTATSFMT LE 0).ZG133A23  OK            00729700
&ZCVAL               SETC '&ZCVAL COSTATSFMT'   INCORRECT KEY USED      00729800
.ZG133A23            AIF   (K'&STGSTATS LE 0).ZG133A24  OK              00729900
&ZCVAL               SETC '&ZCVAL STGSTATS'     INCORRECT KEY USED      00730000
.ZG133A24            AIF   (K'&NUMNAMES LE 0).ZG133A25  OK              00730100
&ZCVAL               SETC '&ZCVAL NUMNAMES'     INCORRECT KEY USED      00730200
.ZG133A25            AIF   (K'&REPEAT LE 0).ZG133A26  OK                00730300
&ZCVAL               SETC '&ZCVAL REPEAT'       INCORRECT KEY USED      00730400
.ZG133A26            AIF   (K'&RECLVCTR LE 0).ZG133A27  OK              00730500
&ZCVAL               SETC '&ZCVAL RECLVCTR'     INCORRECT KEY USED      00730600
.ZG133A27            AIF   (K'&ZCVAL LE 0).ZG133A28  OK                 00730700
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00730800
                     AIF  (K'&ZCVAL LE 160).ZG133A28A                   00730900
&ZCVAL               SETC '&ZCVAL'(1,160)                               00731000
&ZCVAL               SETC '&ZCVAL....'                                  00731100
.ZG133A28A           ANOP                                               00731200
&ZMS                 SETC  '"REQUEST'  *KMEIA* MNOTE                    00731300
&ZMS                 SETC  '&ZMS.=&REQUEST"'                            00731400
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00731500
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00731600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00731700
.ZG133A28            ANOP  ,                                            00731800
.*----------------------------------------------------------------***   00731900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00732000
                     AIF   (N'&STARTINDEX LE 1).ZG135A  CK NUM          00732100
&ZMS                 SETC  '"STARTINDEX='       *KPOSA* MNOTE           00732200
&ZMS                 SETC  '&ZMS.&STARTINDEX"'                          00732300
&ZMS                 SETC  '&ZMS "STARTINDEX"'                          00732400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00732500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00732600
.ZG135A              ANOP  ,                                            00732700
.*-------------------------------------------------------------------   00732800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00732900
&ZXSTARTINDEX        SETC  'INPUT'     SET IN/OUTPUT                    00733000
&XSTARTINDEX         SETC  '&STARTINDEX(1)'     SET XVARIABLE           00733100
                     AIF   (N'&STARTINDEX GT 1).ZG135B  MULTI PARMS     00733200
&XSTARTINDEX         SETC  '&STARTINDEX'        SET XVARIABLE           00733300
.ZG135B              AIF   (K'&STARTINDEX(1) GT 0).ZG135C               00733400
&ZXSTARTINDEX        SETC  ''          RESET IN/OUTPUT                  00733500
&ZMS                 SETC  ' '         *KRQDA*                          00733600
&ZMS                 SETC  '&ZMS "STARTINDEX" KEY AND ITS'              00733700
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00733800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00733900
.ZG135C              ANOP  ,                                            00734000
.*-------------------------------------------------------------------   00734100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00734200
                     AIF   (K'&ZXSTARTINDEX LE 0).ZG135R  NOT I/O       00734300
                     AIF   ('&XSTARTINDEX'(1,1) NE '(').ZG135R          00734400
&ZCGPR               SETC  '&XSTARTINDEX'(2,K'&XSTARTINDEX-2)           00734500
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG135P                00734600
                     AIF   (K'&ZCGPR GT 2).ZG135Q                       00734700
                     AIF   ('&ZCGPR' EQ '0').ZG135Q                     00734800
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00734900
                     AIF   (T'&ZCGPR NE 'N').ZG135Q  INVALID REG NAME   00735000
.ZG135P              ANOP  ,                                            00735100
                     AIF   (T'&ZCGPR NE 'N').ZG135R  NON NUMERIC        00735200
                     AIF   ('&ZCGPR' LT '2').ZG135Q                     00735300
                     AIF   ('&ZCGPR' LE '12').ZG135R                    00735400
.ZG135Q              ANOP  ,                                            00735500
&ZMS                 SETC  '"STARTINDEX='       *KGPRA* MNOTE           00735600
&ZMS                 SETC  '&ZMS.&STARTINDEX"'                          00735700
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00735800
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00735900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00736000
.ZG135R              ANOP  ,                                            00736100
.*----------------------------------------------------------------***   00736200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00736300
                     AIF   (N'&ENDINDEX LE 1).ZG138A  CK NUM            00736400
&ZMS                 SETC  '"ENDINDEX='         *KPOSA* MNOTE           00736500
&ZMS                 SETC  '&ZMS.&ENDINDEX"'                            00736600
&ZMS                 SETC  '&ZMS "ENDINDEX"'                            00736700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00736800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00736900
.ZG138A              ANOP  ,                                            00737000
.*-------------------------------------------------------------------   00737100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00737200
&ZXENDINDEX          SETC  'INPUT'     SET IN/OUTPUT                    00737300
&XENDINDEX           SETC  '&ENDINDEX(1)'       SET XVARIABLE           00737400
                     AIF   (N'&ENDINDEX GT 1).ZG138B  MULTI PARMS       00737500
&XENDINDEX           SETC  '&ENDINDEX'          SET XVARIABLE           00737600
.ZG138B              AIF   (K'&ENDINDEX(1) GT 0).ZG138C                 00737700
&ZXENDINDEX          SETC  ''          RESET IN/OUTPUT                  00737800
&ZMS                 SETC  ' '         *KRQDA*                          00737900
&ZMS                 SETC  '&ZMS "ENDINDEX" KEY AND ITS'                00738000
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00738100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00738200
.ZG138C              ANOP  ,                                            00738300
.*-------------------------------------------------------------------   00738400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00738500
                     AIF   (K'&ZXENDINDEX LE 0).ZG138R  NOT I/O         00738600
                     AIF   ('&XENDINDEX'(1,1) NE '(').ZG138R            00738700
&ZCGPR               SETC  '&XENDINDEX'(2,K'&XENDINDEX-2)               00738800
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG138P                00738900
                     AIF   (K'&ZCGPR GT 2).ZG138Q                       00739000
                     AIF   ('&ZCGPR' EQ '0').ZG138Q                     00739100
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00739200
                     AIF   (T'&ZCGPR NE 'N').ZG138Q  INVALID REG NAME   00739300
.ZG138P              ANOP  ,                                            00739400
                     AIF   (T'&ZCGPR NE 'N').ZG138R  NON NUMERIC        00739500
                     AIF   ('&ZCGPR' LT '2').ZG138Q                     00739600
                     AIF   ('&ZCGPR' LE '12').ZG138R                    00739700
.ZG138Q              ANOP  ,                                            00739800
&ZMS                 SETC  '"ENDINDEX='         *KGPRA* MNOTE           00739900
&ZMS                 SETC  '&ZMS.&ENDINDEX"'                            00740000
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00740100
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00740200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00740300
.ZG138R              ANOP  ,                                            00740400
.*------------------------------------------------------------------    00740500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00740600
&XDELETETYPE         SETC  ''          INITIALIZE XVARIABLE             00740700
.*-------------------------------------------------------------------   00740800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00740900
.ZG142               ANOP  ,                                            00741000
                     AIF   (K'&DELETETYPE(1) LE 0).ZG142A               00741100
&ZTLC                SETC 'DIRANDDATA'                                  00741200
                     AIF   ('&DELETETYPE(1)' NE '&ZTLC').ZG143          00741300
&XDELETETYPE         SETC  'DIRANDDATA'         SET KEYWORD             00741400
                     AIF   (N'&DELETETYPE LE 1).ZG142A  CK NUM          00741500
&ZMS                 SETC  '"DELETETYPE='       *KPOSA* MNOTE           00741600
&ZMS                 SETC  '&ZMS.&DELETETYPE"'                          00741700
&ZMS                 SETC  '&ZMS "DELETETYPE"'                          00741800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00741900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00742000
.ZG142A              ANOP  ,                                            00742100
.*-------------------------------------------------------------------   00742200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00742300
.ZG143               ANOP  ,                                            00742400
&ZTLC                SETC 'UNCHDATA'                                    00742500
                     AIF   ('&DELETETYPE(1)' NE '&ZTLC').ZG144          00742600
&XDELETETYPE         SETC  'UNCHDATA'  SET KEYWORD                      00742700
                     AIF   (N'&DELETETYPE LE 1).ZG143A  CK NUM          00742800
&ZMS                 SETC  '"DELETETYPE='       *KPOSA* MNOTE           00742900
&ZMS                 SETC  '&ZMS.&DELETETYPE"'                          00743000
&ZMS                 SETC  '&ZMS "DELETETYPE"'                          00743100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00743200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00743300
.ZG143A              ANOP  ,                                            00743400
.*-------------------------------------------------------------------   00743500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00743600
.ZG144               ANOP  ,                                            00743700
&ZTLC                SETC 'CHDATA'                                      00743800
                     AIF   ('&DELETETYPE(1)' NE '&ZTLC').ZG145          00743900
&XDELETETYPE         SETC  'CHDATA'    SET KEYWORD                      00744000
                     AIF   (N'&DELETETYPE LE 1).ZG144A  CK NUM          00744100
&ZMS                 SETC  '"DELETETYPE='       *KPOSA* MNOTE           00744200
&ZMS                 SETC  '&ZMS.&DELETETYPE"'                          00744300
&ZMS                 SETC  '&ZMS "DELETETYPE"'                          00744400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00744500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00744600
.ZG144A              ANOP  ,                                            00744700
.*-------------------------------------------------------------------   00744800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00744900
.ZG145               ANOP  ,                                            00745000
&ZTLC                SETC 'ANYDATA'                                     00745100
                     AIF   ('&DELETETYPE(1)' NE '&ZTLC').ZG146          00745200
&XDELETETYPE         SETC  'ANYDATA'   SET KEYWORD                      00745300
                     AIF   (N'&DELETETYPE LE 1).ZG145A  CK NUM          00745400
&ZMS                 SETC  '"DELETETYPE='       *KPOSA* MNOTE           00745500
&ZMS                 SETC  '&ZMS.&DELETETYPE"'                          00745600
&ZMS                 SETC  '&ZMS "DELETETYPE"'                          00745700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00745800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00745900
.ZG145A              ANOP  ,                                            00746000
.*------------------------------------------------------------------    00746100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00746200
.ZG146               ANOP  ,                                            00746300
&ZXDELETETYPE        SETC  'INPUT'     SET IN/OUTPUT                    00746400
                     AIF   (K'&XDELETETYPE GT 0).ZG146E  VALID ARG      00746500
                     AIF   (T'&DELETETYPE EQ 'O').ZG146D  OMITTED       00746600
&ZASYSLNDX           SETA  0                                            00746700
.ZG146A              ANOP  ,           POSITIONAL MACRO KEY             00746800
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00746900
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG146C            00747000
&ZTLC                SETC 'DELETETYPE'                                  00747100
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG146A   00747200
.ZG146B              ANOP  ,                                            00747300
&ZXDELETETYPE        SETC  ''          RESET IN/OUTPUT                  00747400
&ZMS                 SETC  'THE "DELETETYPE" KEY'  *KOPTA* MNOTE        00747500
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00747600
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00747700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00747800
                     AGO   .ZG146E                                      00747900
.ZG146C              ANOP  ,                                            00748000
&ZXDELETETYPE        SETC  ''          RESET IN/OUTPUT                  00748100
&ZMS                 SETC  '"DELETETYPE='       *KUKWA* MNOTE           00748200
&ZMS                 SETC  '&ZMS.&DELETETYPE"'                          00748300
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00748400
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00748500
&ZMS                 SETC  '&ZMS "DIRANDDATA",'                         00748600
&ZMS                 SETC  '&ZMS "UNCHDATA",'                           00748700
&ZMS                 SETC  '&ZMS "CHDATA",'                             00748800
&ZMS                 SETC  '&ZMS OR "ANYDATA".'                         00748900
                     MNOTE 8,' &ZMS '                                   00749000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00749100
                     AGO   .ZG146E                                      00749200
.ZG146D              ANOP  ,                                            00749300
&XDELETETYPE         SETC  'DIRANDDATA'         SET DEFAULT KEYWORD     00749400
.ZG146E              ANOP  ,                                            00749500
.*----------------------------------------------------------------***   00749600
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00749700
                     AIF   (N'&VERSCOMPTYPE LE 1).ZG148A  CK NUM        00749800
&ZMS                 SETC  '"VERSCOMPTYPE='     *KPOSA* MNOTE           00749900
&ZMS                 SETC  '&ZMS.&VERSCOMPTYPE"'                        00750000
&ZMS                 SETC  '&ZMS "VERSCOMPTYPE"'                        00750100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00750200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00750300
.ZG148A              ANOP  ,                                            00750400
.*-------------------------------------------------------------------   00750500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00750600
&XVERSCOMPTYPE       SETC  ''          INITIALIZE XVARIABLE             00750700
.ZG149A   AIF   ('&VERSCOMPTYPE(1)' NE 'NONE').ZG150A                   00750800
&XVERSCOMPTYPE       SETC  'NONE'      SET KEYWORD                      00750900
.*-------------------------------------------------------------------   00751000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00751100
.ZG150A   AIF   ('&VERSCOMPTYPE(1)' NE 'EQUAL').ZG151A                  00751200
&XVERSCOMPTYPE       SETC  'EQUAL'     SET KEYWORD                      00751300
.*-------------------------------------------------------------------   00751400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00751500
.ZG151A   AIF   ('&VERSCOMPTYPE(1)' NE 'LESSOREQUAL').ZG152A            00751600
&XVERSCOMPTYPE       SETC  'LESSOREQUAL'        SET KEYWORD             00751700
.*-------------------------------------------------------------------   00751800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00751900
.ZG152A              AIF   (K'&XVERSCOMPTYPE GT 0).ZG152C  KEYWORD      00752000
                     AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG152B             00752100
&ZMS                 SETC  '"VERSCOMPTYPE='     *KUKWA* MNOTE           00752200
&ZMS                 SETC  '&ZMS.&VERSCOMPTYPE"'                        00752300
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00752400
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00752500
&ZMS                 SETC  '&ZMS "NONE",'                               00752600
&ZMS                 SETC  '&ZMS "EQUAL",'                              00752700
&ZMS                 SETC  '&ZMS OR "LESSOREQUAL".'                     00752800
                     MNOTE 8,' &ZMS '                                   00752900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00753000
.ZG152B              ANOP  ,                                            00753100
&XVERSCOMPTYPE       SETC  'NONE'      SET DEFAULT KEYWORD              00753200
.ZG152C              ANOP  ,                                            00753300
&ZXVERSCOMPTYPE      SETC  'INPUT'     SET IN/OUTPUT                    00753400
.*----------------------------------------------------------------***   00753500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00753600
                     AIF   (N'&ERRORACTION LE 1).ZG154A  CK NUM         00753700
&ZMS                 SETC  '"ERRORACTION='      *KPOSA* MNOTE           00753800
&ZMS                 SETC  '&ZMS.&ERRORACTION"'                         00753900
&ZMS                 SETC  '&ZMS "ERRORACTION"'                         00754000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00754100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00754200
.ZG154A              ANOP  ,                                            00754300
.*-------------------------------------------------------------------   00754400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00754500
&XERRORACTION        SETC  ''          INITIALIZE XVARIABLE             00754600
.ZG155A   AIF   ('&ERRORACTION(1)' NE 'CONTINUE').ZG156A                00754700
&XERRORACTION        SETC  'CONTINUE'  SET KEYWORD                      00754800
.*-------------------------------------------------------------------   00754900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00755000
.ZG156A   AIF   ('&ERRORACTION(1)' NE 'TERMINATE').ZG157A               00755100
&XERRORACTION        SETC  'TERMINATE'          SET KEYWORD             00755200
.*-------------------------------------------------------------------   00755300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00755400
.ZG157A              AIF   (K'&XERRORACTION GT 0).ZG157C  KEYWORD       00755500
                     AIF   (K'&ERRORACTION(1) LE 0).ZG157B              00755600
&ZMS                 SETC  '"ERRORACTION='      *KUKWA* MNOTE           00755700
&ZMS                 SETC  '&ZMS.&ERRORACTION"'                         00755800
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00755900
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00756000
&ZMS                 SETC  '&ZMS "CONTINUE"'                            00756100
&ZMS                 SETC  '&ZMS OR "TERMINATE".'                       00756200
                     MNOTE 8,' &ZMS '                                   00756300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00756400
.ZG157B              ANOP  ,                                            00756500
&XERRORACTION        SETC  'CONTINUE'  SET DEFAULT KEYWORD              00756600
.ZG157C              ANOP  ,                                            00756700
&ZXERRORACTION       SETC  'INPUT'     SET IN/OUTPUT                    00756800
.*-------------------------------------------------------------------   00756900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00757000
.ZG158               ANOP  ,                                            00757100
&ZTLC                SETC 'READ_COCLASS'                                00757200
                     AIF   ('&REQUEST(1)' NE '&ZTLC').ZG164             00757300
&XREQUEST            SETC  'READ_COCLASS'       SET KEYWORD             00757400
                     AIF   (N'&REQUEST LE 1).ZG158A  CK NUM             00757500
&ZMS                 SETC  '"REQUEST='          *KPOSA* MNOTE           00757600
&ZMS                 SETC  '&ZMS.&REQUEST"'                             00757700
&ZMS                 SETC  '&ZMS "REQUEST"'                             00757800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00757900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00758000
.ZG158A              ANOP  ,                                            00758100
.*------------------------------------------------------------------    00758200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00758300
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00758400
.ZG158A0             AIF   (K'&ASSIGN LE 0).ZG158A1  OK                 00758500
&ZCVAL               SETC '&ZCVAL ASSIGN'       INCORRECT KEY USED      00758600
.ZG158A1             AIF   (K'&REGUSER LE 0).ZG158A2  OK                00758700
&ZCVAL               SETC '&ZCVAL REGUSER'      INCORRECT KEY USED      00758800
.ZG158A2             AIF   (K'&RETURNDATA LE 0).ZG158A3  OK             00758900
&ZCVAL               SETC '&ZCVAL RETURNDATA'   INCORRECT KEY USED      00759000
.ZG158A3             AIF   (K'&WHENREG LE 0).ZG158A4  OK                00759100
&ZCVAL               SETC '&ZCVAL WHENREG'      INCORRECT KEY USED      00759200
.ZG158A4             AIF   (K'&VERSCOMP LE 0).ZG158A5  OK               00759300
&ZCVAL               SETC '&ZCVAL VERSCOMP'     INCORRECT KEY USED      00759400
.ZG158A5             AIF   (K'&VERSCOMPTYPE LE 0).ZG158A6  OK           00759500
&ZCVAL               SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED     00759600
.ZG158A6             AIF   (K'&VERSUPDATE LE 0).ZG158A7  OK             00759700
&ZCVAL               SETC '&ZCVAL VERSUPDATE'   INCORRECT KEY USED      00759800
.ZG158A7             AIF   (K'&NEWVERS LE 0).ZG158A8  OK                00759900
&ZCVAL               SETC '&ZCVAL NEWVERS'      INCORRECT KEY USED      00760000
.ZG158A8             AIF   (K'&CHANGED LE 0).ZG158A9  OK                00760100
&ZCVAL               SETC '&ZCVAL CHANGED'      INCORRECT KEY USED      00760200
.ZG158A9             AIF   (K'&CROSSINVAL LE 0).ZG158A10  OK            00760300
&ZCVAL               SETC '&ZCVAL CROSSINVAL'   INCORRECT KEY USED      00760400
.ZG158A10            AIF   (K'&GETCOLOCK LE 0).ZG158A11  OK             00760500
&ZCVAL               SETC '&ZCVAL GETCOLOCK'    INCORRECT KEY USED      00760600
.ZG158A11            AIF   (K'&PROCESSID LE 0).ZG158A12  OK             00760700
&ZCVAL               SETC '&ZCVAL PROCESSID'    INCORRECT KEY USED      00760800
.ZG158A12            AIF   (K'&PARITY LE 0).ZG158A13  OK                00760900
&ZCVAL               SETC '&ZCVAL PARITY'       INCORRECT KEY USED      00761000
.ZG158A13            AIF   (K'&USERDATA LE 0).ZG158A14  OK              00761100
&ZCVAL               SETC '&ZCVAL USERDATA'     INCORRECT KEY USED      00761200
.ZG158A14            AIF   (K'&ELEMNUM LE 0).ZG158A15  OK               00761300
&ZCVAL               SETC '&ZCVAL ELEMNUM'      INCORRECT KEY USED      00761400
.ZG158A15            AIF   (K'&STARTINDEX LE 0).ZG158A16  OK            00761500
&ZCVAL               SETC '&ZCVAL STARTINDEX'   INCORRECT KEY USED      00761600
.ZG158A16            AIF   (K'&ENDINDEX LE 0).ZG158A17  OK              00761700
&ZCVAL               SETC '&ZCVAL ENDINDEX'     INCORRECT KEY USED      00761800
.ZG158A17            AIF   (K'&NSBAREA LE 0).ZG158A18  OK               00761900
&ZCVAL               SETC '&ZCVAL NSBAREA'      INCORRECT KEY USED      00762000
.ZG158A18            AIF   (K'&FIRSTNAME LE 0).ZG158A19  OK             00762100
&ZCVAL               SETC '&ZCVAL FIRSTNAME'    INCORRECT KEY USED      00762200
.ZG158A19            AIF   (K'&LASTNAME LE 0).ZG158A20  OK              00762300
&ZCVAL               SETC '&ZCVAL LASTNAME'     INCORRECT KEY USED      00762400
.ZG158A20            AIF   (K'&CUNBAREA LE 0).ZG158A21  OK              00762500
&ZCVAL               SETC '&ZCVAL CUNBAREA'     INCORRECT KEY USED      00762600
.ZG158A21            AIF   (K'&DELETETYPE LE 0).ZG158A22  OK            00762700
&ZCVAL               SETC '&ZCVAL DELETETYPE'   INCORRECT KEY USED      00762800
.ZG158A22            AIF   (K'&ERRORACTION LE 0).ZG158A23  OK           00762900
&ZCVAL               SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED      00763000
.ZG158A23            AIF   (K'&CRITERIA LE 0).ZG158A24  OK              00763100
&ZCVAL               SETC '&ZCVAL CRITERIA'     INCORRECT KEY USED      00763200
.ZG158A24            AIF   (K'&COCLASSB LE 0).ZG158A25  OK              00763300
&ZCVAL               SETC '&ZCVAL COCLASSB'     INCORRECT KEY USED      00763400
.ZG158A25            AIF   (K'&COCLASSE LE 0).ZG158A26  OK              00763500
&ZCVAL               SETC '&ZCVAL COCLASSE'     INCORRECT KEY USED      00763600
.ZG158A26            AIF   (K'&COSTATSFMT LE 0).ZG158A27  OK            00763700
&ZCVAL               SETC '&ZCVAL COSTATSFMT'   INCORRECT KEY USED      00763800
.ZG158A27            AIF   (K'&STGSTATS LE 0).ZG158A28  OK              00763900
&ZCVAL               SETC '&ZCVAL STGSTATS'     INCORRECT KEY USED      00764000
.ZG158A28            AIF   (K'&NUMNAMES LE 0).ZG158A29  OK              00764100
&ZCVAL               SETC '&ZCVAL NUMNAMES'     INCORRECT KEY USED      00764200
.ZG158A29            AIF   (K'&REPEAT LE 0).ZG158A30  OK                00764300
&ZCVAL               SETC '&ZCVAL REPEAT'       INCORRECT KEY USED      00764400
.ZG158A30            AIF   (K'&RECLVCTR LE 0).ZG158A31  OK              00764500
&ZCVAL               SETC '&ZCVAL RECLVCTR'     INCORRECT KEY USED      00764600
.ZG158A31            AIF   (K'&ZCVAL LE 0).ZG158A32  OK                 00764700
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00764800
                     AIF  (K'&ZCVAL LE 160).ZG158A32A                   00764900
&ZCVAL               SETC '&ZCVAL'(1,160)                               00765000
&ZCVAL               SETC '&ZCVAL....'                                  00765100
.ZG158A32A           ANOP                                               00765200
&ZMS                 SETC  '"REQUEST'  *KMEIA* MNOTE                    00765300
&ZMS                 SETC  '&ZMS.=&REQUEST"'                            00765400
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00765500
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00765600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00765700
.ZG158A32            ANOP  ,                                            00765800
.*----------------------------------------------------------------***   00765900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00766000
                     AIF   (N'&DIRINFOFMT LE 1).ZG160A  CK NUM          00766100
&ZMS                 SETC  '"DIRINFOFMT='       *KPOSA* MNOTE           00766200
&ZMS                 SETC  '&ZMS.&DIRINFOFMT"'                          00766300
&ZMS                 SETC  '&ZMS "DIRINFOFMT"'                          00766400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00766500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00766600
.ZG160A              ANOP  ,                                            00766700
.*-------------------------------------------------------------------   00766800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00766900
&XDIRINFOFMT         SETC  ''          INITIALIZE XVARIABLE             00767000
.ZG161A   AIF   ('&DIRINFOFMT(1)' NE 'NAMELIST').ZG162A                 00767100
&XDIRINFOFMT         SETC  'NAMELIST'  SET KEYWORD                      00767200
.*-------------------------------------------------------------------   00767300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00767400
.ZG162A   AIF   ('&DIRINFOFMT(1)' NE 'DIRENTRYLIST').ZG163A             00767500
&XDIRINFOFMT         SETC  'DIRENTRYLIST'       SET KEYWORD             00767600
.*-------------------------------------------------------------------   00767700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00767800
.ZG163A              AIF   (K'&XDIRINFOFMT GT 0).ZG163C  KEYWORD        00767900
                     AIF   (K'&DIRINFOFMT(1) LE 0).ZG163B               00768000
&ZMS                 SETC  '"DIRINFOFMT='       *KUKWA* MNOTE           00768100
&ZMS                 SETC  '&ZMS.&DIRINFOFMT"'                          00768200
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00768300
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00768400
&ZMS                 SETC  '&ZMS "NAMELIST"'                            00768500
&ZMS                 SETC  '&ZMS OR "DIRENTRYLIST".'                    00768600
                     MNOTE 8,' &ZMS '                                   00768700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00768800
.ZG163B              ANOP  ,                                            00768900
&XDIRINFOFMT         SETC  'NAMELIST'  SET DEFAULT KEYWORD              00769000
.ZG163C              ANOP  ,                                            00769100
&ZXDIRINFOFMT        SETC  'INPUT'     SET IN/OUTPUT                    00769200
.*-------------------------------------------------------------------   00769300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00769400
.ZG164               ANOP  ,                                            00769500
&ZTLC                SETC 'READ_DIRINFO'                                00769600
                     AIF   ('&REQUEST(1)' NE '&ZTLC').ZG175             00769700
&XREQUEST            SETC  'READ_DIRINFO'       SET KEYWORD             00769800
                     AIF   (N'&REQUEST LE 1).ZG164A  CK NUM             00769900
&ZMS                 SETC  '"REQUEST='          *KPOSA* MNOTE           00770000
&ZMS                 SETC  '&ZMS.&REQUEST"'                             00770100
&ZMS                 SETC  '&ZMS "REQUEST"'                             00770200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00770300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00770400
.ZG164A              ANOP  ,                                            00770500
.*------------------------------------------------------------------    00770600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00770700
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00770800
.ZG164A0             AIF   (K'&ASSIGN LE 0).ZG164A1  OK                 00770900
&ZCVAL               SETC '&ZCVAL ASSIGN'       INCORRECT KEY USED      00771000
.ZG164A1             AIF   (K'&REGUSER LE 0).ZG164A2  OK                00771100
&ZCVAL               SETC '&ZCVAL REGUSER'      INCORRECT KEY USED      00771200
.ZG164A2             AIF   (K'&RETURNDATA LE 0).ZG164A3  OK             00771300
&ZCVAL               SETC '&ZCVAL RETURNDATA'   INCORRECT KEY USED      00771400
.ZG164A3             AIF   (K'&WHENREG LE 0).ZG164A4  OK                00771500
&ZCVAL               SETC '&ZCVAL WHENREG'      INCORRECT KEY USED      00771600
.ZG164A4             AIF   (K'&VERSCOMP LE 0).ZG164A5  OK               00771700
&ZCVAL               SETC '&ZCVAL VERSCOMP'     INCORRECT KEY USED      00771800
.ZG164A5             AIF   (K'&VERSCOMPTYPE LE 0).ZG164A6  OK           00771900
&ZCVAL               SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED     00772000
.ZG164A6             AIF   (K'&VERSUPDATE LE 0).ZG164A7  OK             00772100
&ZCVAL               SETC '&ZCVAL VERSUPDATE'   INCORRECT KEY USED      00772200
.ZG164A7             AIF   (K'&NEWVERS LE 0).ZG164A8  OK                00772300
&ZCVAL               SETC '&ZCVAL NEWVERS'      INCORRECT KEY USED      00772400
.ZG164A8             AIF   (K'&CHANGED LE 0).ZG164A9  OK                00772500
&ZCVAL               SETC '&ZCVAL CHANGED'      INCORRECT KEY USED      00772600
.ZG164A9             AIF   (K'&CROSSINVAL LE 0).ZG164A10  OK            00772700
&ZCVAL               SETC '&ZCVAL CROSSINVAL'   INCORRECT KEY USED      00772800
.ZG164A10            AIF   (K'&GETCOLOCK LE 0).ZG164A11  OK             00772900
&ZCVAL               SETC '&ZCVAL GETCOLOCK'    INCORRECT KEY USED      00773000
.ZG164A11            AIF   (K'&PROCESSID LE 0).ZG164A12  OK             00773100
&ZCVAL               SETC '&ZCVAL PROCESSID'    INCORRECT KEY USED      00773200
.ZG164A12            AIF   (K'&PARITY LE 0).ZG164A13  OK                00773300
&ZCVAL               SETC '&ZCVAL PARITY'       INCORRECT KEY USED      00773400
.ZG164A13            AIF   (K'&USERDATA LE 0).ZG164A14  OK              00773500
&ZCVAL               SETC '&ZCVAL USERDATA'     INCORRECT KEY USED      00773600
.ZG164A14            AIF   (K'&ELEMNUM LE 0).ZG164A15  OK               00773700
&ZCVAL               SETC '&ZCVAL ELEMNUM'      INCORRECT KEY USED      00773800
.ZG164A15            AIF   (K'&STARTINDEX LE 0).ZG164A16  OK            00773900
&ZCVAL               SETC '&ZCVAL STARTINDEX'   INCORRECT KEY USED      00774000
.ZG164A16            AIF   (K'&ENDINDEX LE 0).ZG164A17  OK              00774100
&ZCVAL               SETC '&ZCVAL ENDINDEX'     INCORRECT KEY USED      00774200
.ZG164A17            AIF   (K'&NSBAREA LE 0).ZG164A18  OK               00774300
&ZCVAL               SETC '&ZCVAL NSBAREA'      INCORRECT KEY USED      00774400
.ZG164A18            AIF   (K'&FIRSTNAME LE 0).ZG164A19  OK             00774500
&ZCVAL               SETC '&ZCVAL FIRSTNAME'    INCORRECT KEY USED      00774600
.ZG164A19            AIF   (K'&LASTNAME LE 0).ZG164A20  OK              00774700
&ZCVAL               SETC '&ZCVAL LASTNAME'     INCORRECT KEY USED      00774800
.ZG164A20            AIF   (K'&CUNBAREA LE 0).ZG164A21  OK              00774900
&ZCVAL               SETC '&ZCVAL CUNBAREA'     INCORRECT KEY USED      00775000
.ZG164A21            AIF   (K'&DELETETYPE LE 0).ZG164A22  OK            00775100
&ZCVAL               SETC '&ZCVAL DELETETYPE'   INCORRECT KEY USED      00775200
.ZG164A22            AIF   (K'&ERRORACTION LE 0).ZG164A23  OK           00775300
&ZCVAL               SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED      00775400
.ZG164A23            AIF   (K'&COCLASSB LE 0).ZG164A24  OK              00775500
&ZCVAL               SETC '&ZCVAL COCLASSB'     INCORRECT KEY USED      00775600
.ZG164A24            AIF   (K'&COCLASSE LE 0).ZG164A25  OK              00775700
&ZCVAL               SETC '&ZCVAL COCLASSE'     INCORRECT KEY USED      00775800
.ZG164A25            AIF   (K'&COSTATSFMT LE 0).ZG164A26  OK            00775900
&ZCVAL               SETC '&ZCVAL COSTATSFMT'   INCORRECT KEY USED      00776000
.ZG164A26            AIF   (K'&STGSTATS LE 0).ZG164A27  OK              00776100
&ZCVAL               SETC '&ZCVAL STGSTATS'     INCORRECT KEY USED      00776200
.ZG164A27            AIF   (K'&NUMNAMES LE 0).ZG164A28  OK              00776300
&ZCVAL               SETC '&ZCVAL NUMNAMES'     INCORRECT KEY USED      00776400
.ZG164A28            AIF   (K'&REPEAT LE 0).ZG164A29  OK                00776500
&ZCVAL               SETC '&ZCVAL REPEAT'       INCORRECT KEY USED      00776600
.ZG164A29            AIF   (K'&RECLVCTR LE 0).ZG164A30  OK              00776700
&ZCVAL               SETC '&ZCVAL RECLVCTR'     INCORRECT KEY USED      00776800
.ZG164A30            AIF   (K'&ZCVAL LE 0).ZG164A31  OK                 00776900
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00777000
                     AIF  (K'&ZCVAL LE 160).ZG164A31A                   00777100
&ZCVAL               SETC '&ZCVAL'(1,160)                               00777200
&ZCVAL               SETC '&ZCVAL....'                                  00777300
.ZG164A31A           ANOP                                               00777400
&ZMS                 SETC  '"REQUEST'  *KMEIA* MNOTE                    00777500
&ZMS                 SETC  '&ZMS.=&REQUEST"'                            00777600
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00777700
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00777800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00777900
.ZG164A31            ANOP  ,                                            00778000
.*----------------------------------------------------------------***   00778100
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00778200
                     AIF   (N'&DIRINFOFMT LE 1).ZG166A  CK NUM          00778300
&ZMS                 SETC  '"DIRINFOFMT='       *KPOSA* MNOTE           00778400
&ZMS                 SETC  '&ZMS.&DIRINFOFMT"'                          00778500
&ZMS                 SETC  '&ZMS "DIRINFOFMT"'                          00778600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00778700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00778800
.ZG166A              ANOP  ,                                            00778900
.*-------------------------------------------------------------------   00779000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00779100
&XDIRINFOFMT         SETC  ''          INITIALIZE XVARIABLE             00779200
.ZG167A   AIF   ('&DIRINFOFMT(1)' NE 'DIRENTRYLIST').ZG168A             00779300
&XDIRINFOFMT         SETC  'DIRENTRYLIST'       SET KEYWORD             00779400
.*-------------------------------------------------------------------   00779500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00779600
.ZG168A   AIF   ('&DIRINFOFMT(1)' NE 'NAMELIST').ZG169A                 00779700
&XDIRINFOFMT         SETC  'NAMELIST'  SET KEYWORD                      00779800
.*-------------------------------------------------------------------   00779900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00780000
.ZG169A              AIF   (K'&XDIRINFOFMT GT 0).ZG169C  KEYWORD        00780100
                     AIF   (K'&DIRINFOFMT(1) LE 0).ZG169B               00780200
&ZMS                 SETC  '"DIRINFOFMT='       *KUKWA* MNOTE           00780300
&ZMS                 SETC  '&ZMS.&DIRINFOFMT"'                          00780400
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00780500
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00780600
&ZMS                 SETC  '&ZMS "DIRENTRYLIST"'                        00780700
&ZMS                 SETC  '&ZMS OR "NAMELIST".'                        00780800
                     MNOTE 8,' &ZMS '                                   00780900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00781000
.ZG169B              ANOP  ,                                            00781100
&XDIRINFOFMT         SETC  'DIRENTRYLIST'       SET DEFAULT KEYWORD     00781200
.ZG169C              ANOP  ,                                            00781300
&ZXDIRINFOFMT        SETC  'INPUT'     SET IN/OUTPUT                    00781400
.*----------------------------------------------------------------***   00781500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00781600
                     AIF   (N'&CRITERIA LE 1).ZG171A  CK NUM            00781700
&ZMS                 SETC  '"CRITERIA='         *KPOSA* MNOTE           00781800
&ZMS                 SETC  '&ZMS.&CRITERIA"'                            00781900
&ZMS                 SETC  '&ZMS "CRITERIA"'                            00782000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00782100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00782200
.ZG171A              ANOP  ,                                            00782300
.*-------------------------------------------------------------------   00782400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00782500
&XCRITERIA           SETC  ''          INITIALIZE XVARIABLE             00782600
.ZG172A   AIF   ('&CRITERIA(1)' NE 'ALL').ZG173A                        00782700
&XCRITERIA           SETC  'ALL'       SET KEYWORD                      00782800
.*-------------------------------------------------------------------   00782900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00783000
.ZG173A   AIF   ('&CRITERIA(1)' NE 'CHANGED').ZG174A                    00783100
&XCRITERIA           SETC  'CHANGED'   SET KEYWORD                      00783200
.*-------------------------------------------------------------------   00783300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00783400
.ZG174A              AIF   (K'&XCRITERIA GT 0).ZG174C  KEYWORD          00783500
                     AIF   (K'&CRITERIA(1) LE 0).ZG174B                 00783600
&ZMS                 SETC  '"CRITERIA='         *KUKWA* MNOTE           00783700
&ZMS                 SETC  '&ZMS.&CRITERIA"'                            00783800
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00783900
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00784000
&ZMS                 SETC  '&ZMS "ALL"'                                 00784100
&ZMS                 SETC  '&ZMS OR "CHANGED".'                         00784200
                     MNOTE 8,' &ZMS '                                   00784300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00784400
.ZG174B              ANOP  ,                                            00784500
&XCRITERIA           SETC  'ALL'       SET DEFAULT KEYWORD              00784600
.ZG174C              ANOP  ,                                            00784700
&ZXCRITERIA          SETC  'INPUT'     SET IN/OUTPUT                    00784800
.*-------------------------------------------------------------------   00784900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00785000
.ZG175               ANOP  ,                                            00785100
&ZTLC                SETC 'RESET_REFBIT'                                00785200
                     AIF   ('&REQUEST(1)' NE '&ZTLC').ZG181             00785300
&XREQUEST            SETC  'RESET_REFBIT'       SET KEYWORD             00785400
                     AIF   (N'&REQUEST LE 1).ZG175A  CK NUM             00785500
&ZMS                 SETC  '"REQUEST='          *KPOSA* MNOTE           00785600
&ZMS                 SETC  '&ZMS.&REQUEST"'                             00785700
&ZMS                 SETC  '&ZMS "REQUEST"'                             00785800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00785900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00786000
.ZG175A              ANOP  ,                                            00786100
.*------------------------------------------------------------------    00786200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00786300
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00786400
.ZG175A0             AIF   (K'&ASSIGN LE 0).ZG175A1  OK                 00786500
&ZCVAL               SETC '&ZCVAL ASSIGN'       INCORRECT KEY USED      00786600
.ZG175A1             AIF   (K'&REGUSER LE 0).ZG175A2  OK                00786700
&ZCVAL               SETC '&ZCVAL REGUSER'      INCORRECT KEY USED      00786800
.ZG175A2             AIF   (K'&RETURNDATA LE 0).ZG175A3  OK             00786900
&ZCVAL               SETC '&ZCVAL RETURNDATA'   INCORRECT KEY USED      00787000
.ZG175A3             AIF   (K'&WHENREG LE 0).ZG175A4  OK                00787100
&ZCVAL               SETC '&ZCVAL WHENREG'      INCORRECT KEY USED      00787200
.ZG175A4             AIF   (K'&VERSCOMP LE 0).ZG175A5  OK               00787300
&ZCVAL               SETC '&ZCVAL VERSCOMP'     INCORRECT KEY USED      00787400
.ZG175A5             AIF   (K'&VERSCOMPTYPE LE 0).ZG175A6  OK           00787500
&ZCVAL               SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED     00787600
.ZG175A6             AIF   (K'&VERSUPDATE LE 0).ZG175A7  OK             00787700
&ZCVAL               SETC '&ZCVAL VERSUPDATE'   INCORRECT KEY USED      00787800
.ZG175A7             AIF   (K'&NEWVERS LE 0).ZG175A8  OK                00787900
&ZCVAL               SETC '&ZCVAL NEWVERS'      INCORRECT KEY USED      00788000
.ZG175A8             AIF   (K'&CHANGED LE 0).ZG175A9  OK                00788100
&ZCVAL               SETC '&ZCVAL CHANGED'      INCORRECT KEY USED      00788200
.ZG175A9             AIF   (K'&CROSSINVAL LE 0).ZG175A10  OK            00788300
&ZCVAL               SETC '&ZCVAL CROSSINVAL'   INCORRECT KEY USED      00788400
.ZG175A10            AIF   (K'&GETCOLOCK LE 0).ZG175A11  OK             00788500
&ZCVAL               SETC '&ZCVAL GETCOLOCK'    INCORRECT KEY USED      00788600
.ZG175A11            AIF   (K'&PROCESSID LE 0).ZG175A12  OK             00788700
&ZCVAL               SETC '&ZCVAL PROCESSID'    INCORRECT KEY USED      00788800
.ZG175A12            AIF   (K'&PARITY LE 0).ZG175A13  OK                00788900
&ZCVAL               SETC '&ZCVAL PARITY'       INCORRECT KEY USED      00789000
.ZG175A13            AIF   (K'&USERDATA LE 0).ZG175A14  OK              00789100
&ZCVAL               SETC '&ZCVAL USERDATA'     INCORRECT KEY USED      00789200
.ZG175A14            AIF   (K'&ELEMNUM LE 0).ZG175A15  OK               00789300
&ZCVAL               SETC '&ZCVAL ELEMNUM'      INCORRECT KEY USED      00789400
.ZG175A15            AIF   (K'&STARTINDEX LE 0).ZG175A16  OK            00789500
&ZCVAL               SETC '&ZCVAL STARTINDEX'   INCORRECT KEY USED      00789600
.ZG175A16            AIF   (K'&ENDINDEX LE 0).ZG175A17  OK              00789700
&ZCVAL               SETC '&ZCVAL ENDINDEX'     INCORRECT KEY USED      00789800
.ZG175A17            AIF   (K'&NSBAREA LE 0).ZG175A18  OK               00789900
&ZCVAL               SETC '&ZCVAL NSBAREA'      INCORRECT KEY USED      00790000
.ZG175A18            AIF   (K'&FIRSTNAME LE 0).ZG175A19  OK             00790100
&ZCVAL               SETC '&ZCVAL FIRSTNAME'    INCORRECT KEY USED      00790200
.ZG175A19            AIF   (K'&LASTNAME LE 0).ZG175A20  OK              00790300
&ZCVAL               SETC '&ZCVAL LASTNAME'     INCORRECT KEY USED      00790400
.ZG175A20            AIF   (K'&CUNBAREA LE 0).ZG175A21  OK              00790500
&ZCVAL               SETC '&ZCVAL CUNBAREA'     INCORRECT KEY USED      00790600
.ZG175A21            AIF   (K'&DELETETYPE LE 0).ZG175A22  OK            00790700
&ZCVAL               SETC '&ZCVAL DELETETYPE'   INCORRECT KEY USED      00790800
.ZG175A22            AIF   (K'&ERRORACTION LE 0).ZG175A23  OK           00790900
&ZCVAL               SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED      00791000
.ZG175A23            AIF   (K'&DIRINFOFMT LE 0).ZG175A24  OK            00791100
&ZCVAL               SETC '&ZCVAL DIRINFOFMT'   INCORRECT KEY USED      00791200
.ZG175A24            AIF   (K'&COCLASSB LE 0).ZG175A25  OK              00791300
&ZCVAL               SETC '&ZCVAL COCLASSB'     INCORRECT KEY USED      00791400
.ZG175A25            AIF   (K'&COCLASSE LE 0).ZG175A26  OK              00791500
&ZCVAL               SETC '&ZCVAL COCLASSE'     INCORRECT KEY USED      00791600
.ZG175A26            AIF   (K'&COSTATSFMT LE 0).ZG175A27  OK            00791700
&ZCVAL               SETC '&ZCVAL COSTATSFMT'   INCORRECT KEY USED      00791800
.ZG175A27            AIF   (K'&STGSTATS LE 0).ZG175A28  OK              00791900
&ZCVAL               SETC '&ZCVAL STGSTATS'     INCORRECT KEY USED      00792000
.ZG175A28            AIF   (K'&NUMNAMES LE 0).ZG175A29  OK              00792100
&ZCVAL               SETC '&ZCVAL NUMNAMES'     INCORRECT KEY USED      00792200
.ZG175A29            AIF   (K'&REPEAT LE 0).ZG175A30  OK                00792300
&ZCVAL               SETC '&ZCVAL REPEAT'       INCORRECT KEY USED      00792400
.ZG175A30            AIF   (K'&RECLVCTR LE 0).ZG175A31  OK              00792500
&ZCVAL               SETC '&ZCVAL RECLVCTR'     INCORRECT KEY USED      00792600
.ZG175A31            AIF   (K'&ZCVAL LE 0).ZG175A32  OK                 00792700
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00792800
                     AIF  (K'&ZCVAL LE 160).ZG175A32A                   00792900
&ZCVAL               SETC '&ZCVAL'(1,160)                               00793000
&ZCVAL               SETC '&ZCVAL....'                                  00793100
.ZG175A32A           ANOP                                               00793200
&ZMS                 SETC  '"REQUEST'  *KMEIA* MNOTE                    00793300
&ZMS                 SETC  '&ZMS.=&REQUEST"'                            00793400
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00793500
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00793600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00793700
.ZG175A32            ANOP  ,                                            00793800
.*----------------------------------------------------------------***   00793900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00794000
                     AIF   (N'&CRITERIA LE 1).ZG177A  CK NUM            00794100
&ZMS                 SETC  '"CRITERIA='         *KPOSA* MNOTE           00794200
&ZMS                 SETC  '&ZMS.&CRITERIA"'                            00794300
&ZMS                 SETC  '&ZMS "CRITERIA"'                            00794400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00794500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00794600
.ZG177A              ANOP  ,                                            00794700
.*-------------------------------------------------------------------   00794800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00794900
&XCRITERIA           SETC  ''          INITIALIZE XVARIABLE             00795000
.ZG178A   AIF   ('&CRITERIA(1)' NE 'ALL').ZG179A                        00795100
&XCRITERIA           SETC  'ALL'       SET KEYWORD                      00795200
.*-------------------------------------------------------------------   00795300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00795400
.ZG179A   AIF   ('&CRITERIA(1)' NE 'CHANGED').ZG180A                    00795500
&XCRITERIA           SETC  'CHANGED'   SET KEYWORD                      00795600
.*-------------------------------------------------------------------   00795700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00795800
.ZG180A              AIF   (K'&XCRITERIA GT 0).ZG180C  KEYWORD          00795900
                     AIF   (K'&CRITERIA(1) LE 0).ZG180B                 00796000
&ZMS                 SETC  '"CRITERIA='         *KUKWA* MNOTE           00796100
&ZMS                 SETC  '&ZMS.&CRITERIA"'                            00796200
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00796300
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00796400
&ZMS                 SETC  '&ZMS "ALL"'                                 00796500
&ZMS                 SETC  '&ZMS OR "CHANGED".'                         00796600
                     MNOTE 8,' &ZMS '                                   00796700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00796800
.ZG180B              ANOP  ,                                            00796900
&XCRITERIA           SETC  'ALL'       SET DEFAULT KEYWORD              00797000
.ZG180C              ANOP  ,                                            00797100
&ZXCRITERIA          SETC  'INPUT'     SET IN/OUTPUT                    00797200
.*-------------------------------------------------------------------   00797300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00797400
.ZG181               ANOP  ,                                            00797500
&ZTLC                SETC 'READ_COSTATS'                                00797600
                     AIF   ('&REQUEST(1)' NE '&ZTLC').ZG193             00797700
&XREQUEST            SETC  'READ_COSTATS'       SET KEYWORD             00797800
                     AIF   (N'&REQUEST LE 1).ZG181A  CK NUM             00797900
&ZMS                 SETC  '"REQUEST='          *KPOSA* MNOTE           00798000
&ZMS                 SETC  '&ZMS.&REQUEST"'                             00798100
&ZMS                 SETC  '&ZMS "REQUEST"'                             00798200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00798300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00798400
.ZG181A              ANOP  ,                                            00798500
.*------------------------------------------------------------------    00798600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00798700
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00798800
.ZG181A0             AIF   (K'&ASSIGN LE 0).ZG181A1  OK                 00798900
&ZCVAL               SETC '&ZCVAL ASSIGN'       INCORRECT KEY USED      00799000
.ZG181A1             AIF   (K'&REGUSER LE 0).ZG181A2  OK                00799100
&ZCVAL               SETC '&ZCVAL REGUSER'      INCORRECT KEY USED      00799200
.ZG181A2             AIF   (K'&RETURNDATA LE 0).ZG181A3  OK             00799300
&ZCVAL               SETC '&ZCVAL RETURNDATA'   INCORRECT KEY USED      00799400
.ZG181A3             AIF   (K'&WHENREG LE 0).ZG181A4  OK                00799500
&ZCVAL               SETC '&ZCVAL WHENREG'      INCORRECT KEY USED      00799600
.ZG181A4             AIF   (K'&VERSCOMP LE 0).ZG181A5  OK               00799700
&ZCVAL               SETC '&ZCVAL VERSCOMP'     INCORRECT KEY USED      00799800
.ZG181A5             AIF   (K'&VERSCOMPTYPE LE 0).ZG181A6  OK           00799900
&ZCVAL               SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED     00800000
.ZG181A6             AIF   (K'&VERSUPDATE LE 0).ZG181A7  OK             00800100
&ZCVAL               SETC '&ZCVAL VERSUPDATE'   INCORRECT KEY USED      00800200
.ZG181A7             AIF   (K'&NEWVERS LE 0).ZG181A8  OK                00800300
&ZCVAL               SETC '&ZCVAL NEWVERS'      INCORRECT KEY USED      00800400
.ZG181A8             AIF   (K'&CHANGED LE 0).ZG181A9  OK                00800500
&ZCVAL               SETC '&ZCVAL CHANGED'      INCORRECT KEY USED      00800600
.ZG181A9             AIF   (K'&CROSSINVAL LE 0).ZG181A10  OK            00800700
&ZCVAL               SETC '&ZCVAL CROSSINVAL'   INCORRECT KEY USED      00800800
.ZG181A10            AIF   (K'&GETCOLOCK LE 0).ZG181A11  OK             00800900
&ZCVAL               SETC '&ZCVAL GETCOLOCK'    INCORRECT KEY USED      00801000
.ZG181A11            AIF   (K'&PROCESSID LE 0).ZG181A12  OK             00801100
&ZCVAL               SETC '&ZCVAL PROCESSID'    INCORRECT KEY USED      00801200
.ZG181A12            AIF   (K'&PARITY LE 0).ZG181A13  OK                00801300
&ZCVAL               SETC '&ZCVAL PARITY'       INCORRECT KEY USED      00801400
.ZG181A13            AIF   (K'&USERDATA LE 0).ZG181A14  OK              00801500
&ZCVAL               SETC '&ZCVAL USERDATA'     INCORRECT KEY USED      00801600
.ZG181A14            AIF   (K'&ELEMNUM LE 0).ZG181A15  OK               00801700
&ZCVAL               SETC '&ZCVAL ELEMNUM'      INCORRECT KEY USED      00801800
.ZG181A15            AIF   (K'&STARTINDEX LE 0).ZG181A16  OK            00801900
&ZCVAL               SETC '&ZCVAL STARTINDEX'   INCORRECT KEY USED      00802000
.ZG181A16            AIF   (K'&ENDINDEX LE 0).ZG181A17  OK              00802100
&ZCVAL               SETC '&ZCVAL ENDINDEX'     INCORRECT KEY USED      00802200
.ZG181A17            AIF   (K'&NSBAREA LE 0).ZG181A18  OK               00802300
&ZCVAL               SETC '&ZCVAL NSBAREA'      INCORRECT KEY USED      00802400
.ZG181A18            AIF   (K'&FIRSTNAME LE 0).ZG181A19  OK             00802500
&ZCVAL               SETC '&ZCVAL FIRSTNAME'    INCORRECT KEY USED      00802600
.ZG181A19            AIF   (K'&LASTNAME LE 0).ZG181A20  OK              00802700
&ZCVAL               SETC '&ZCVAL LASTNAME'     INCORRECT KEY USED      00802800
.ZG181A20            AIF   (K'&CUNBAREA LE 0).ZG181A21  OK              00802900
&ZCVAL               SETC '&ZCVAL CUNBAREA'     INCORRECT KEY USED      00803000
.ZG181A21            AIF   (K'&DELETETYPE LE 0).ZG181A22  OK            00803100
&ZCVAL               SETC '&ZCVAL DELETETYPE'   INCORRECT KEY USED      00803200
.ZG181A22            AIF   (K'&ERRORACTION LE 0).ZG181A23  OK           00803300
&ZCVAL               SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED      00803400
.ZG181A23            AIF   (K'&DIRINFOFMT LE 0).ZG181A24  OK            00803500
&ZCVAL               SETC '&ZCVAL DIRINFOFMT'   INCORRECT KEY USED      00803600
.ZG181A24            AIF   (K'&CRITERIA LE 0).ZG181A25  OK              00803700
&ZCVAL               SETC '&ZCVAL CRITERIA'     INCORRECT KEY USED      00803800
.ZG181A25            AIF   (K'&STGSTATS LE 0).ZG181A26  OK              00803900
&ZCVAL               SETC '&ZCVAL STGSTATS'     INCORRECT KEY USED      00804000
.ZG181A26            AIF   (K'&NUMNAMES LE 0).ZG181A27  OK              00804100
&ZCVAL               SETC '&ZCVAL NUMNAMES'     INCORRECT KEY USED      00804200
.ZG181A27            AIF   (K'&REPEAT LE 0).ZG181A28  OK                00804300
&ZCVAL               SETC '&ZCVAL REPEAT'       INCORRECT KEY USED      00804400
.ZG181A28            AIF   (K'&RECLVCTR LE 0).ZG181A29  OK              00804500
&ZCVAL               SETC '&ZCVAL RECLVCTR'     INCORRECT KEY USED      00804600
.ZG181A29            AIF   (K'&ZCVAL LE 0).ZG181A30  OK                 00804700
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00804800
                     AIF  (K'&ZCVAL LE 160).ZG181A30A                   00804900
&ZCVAL               SETC '&ZCVAL'(1,160)                               00805000
&ZCVAL               SETC '&ZCVAL....'                                  00805100
.ZG181A30A           ANOP                                               00805200
&ZMS                 SETC  '"REQUEST'  *KMEIA* MNOTE                    00805300
&ZMS                 SETC  '&ZMS.=&REQUEST"'                            00805400
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00805500
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00805600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00805700
.ZG181A30            ANOP  ,                                            00805800
.*----------------------------------------------------------------***   00805900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00806000
                     AIF   (N'&COCLASSB LE 1).ZG183A  CK NUM            00806100
&ZMS                 SETC  '"COCLASSB='         *KPOSA* MNOTE           00806200
&ZMS                 SETC  '&ZMS.&COCLASSB"'                            00806300
&ZMS                 SETC  '&ZMS "COCLASSB"'                            00806400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00806500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00806600
.ZG183A              ANOP  ,                                            00806700
.*-------------------------------------------------------------------   00806800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00806900
&ZXCOCLASSB          SETC  'INPUT'     SET IN/OUTPUT                    00807000
&XCOCLASSB           SETC  '&COCLASSB(1)'       SET XVARIABLE           00807100
                     AIF   (N'&COCLASSB GT 1).ZG183B  MULTI PARMS       00807200
&XCOCLASSB           SETC  '&COCLASSB'          SET XVARIABLE           00807300
.ZG183B              AIF   (K'&COCLASSB(1) GT 0).ZG183C                 00807400
&ZXCOCLASSB          SETC  ''          RESET IN/OUTPUT                  00807500
&ZMS                 SETC  ' '         *KRQDA*                          00807600
&ZMS                 SETC  '&ZMS "COCLASSB" KEY AND ITS'                00807700
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00807800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00807900
.ZG183C              ANOP  ,                                            00808000
.*-------------------------------------------------------------------   00808100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00808200
                     AIF   (K'&ZXCOCLASSB LE 0).ZG183R  NOT I/O         00808300
                     AIF   ('&XCOCLASSB'(1,1) NE '(').ZG183R            00808400
&ZCGPR               SETC  '&XCOCLASSB'(2,K'&XCOCLASSB-2)               00808500
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG183P                00808600
                     AIF   (K'&ZCGPR GT 2).ZG183Q                       00808700
                     AIF   ('&ZCGPR' EQ '0').ZG183Q                     00808800
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00808900
                     AIF   (T'&ZCGPR NE 'N').ZG183Q  INVALID REG NAME   00809000
.ZG183P              ANOP  ,                                            00809100
                     AIF   (T'&ZCGPR NE 'N').ZG183R  NON NUMERIC        00809200
                     AIF   ('&ZCGPR' LT '2').ZG183Q                     00809300
                     AIF   ('&ZCGPR' LE '12').ZG183R                    00809400
.ZG183Q              ANOP  ,                                            00809500
&ZMS                 SETC  '"COCLASSB='         *KGPRA* MNOTE           00809600
&ZMS                 SETC  '&ZMS.&COCLASSB"'                            00809700
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00809800
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00809900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00810000
.ZG183R              ANOP  ,                                            00810100
.*----------------------------------------------------------------***   00810200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00810300
                     AIF   (N'&COCLASSE LE 1).ZG186A  CK NUM            00810400
&ZMS                 SETC  '"COCLASSE='         *KPOSA* MNOTE           00810500
&ZMS                 SETC  '&ZMS.&COCLASSE"'                            00810600
&ZMS                 SETC  '&ZMS "COCLASSE"'                            00810700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00810800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00810900
.ZG186A              ANOP  ,                                            00811000
.*-------------------------------------------------------------------   00811100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00811200
&ZXCOCLASSE          SETC  'INPUT'     SET IN/OUTPUT                    00811300
&XCOCLASSE           SETC  '&COCLASSE(1)'       SET XVARIABLE           00811400
                     AIF   (N'&COCLASSE GT 1).ZG186B  MULTI PARMS       00811500
&XCOCLASSE           SETC  '&COCLASSE'          SET XVARIABLE           00811600
.ZG186B              AIF   (K'&COCLASSE(1) GT 0).ZG186C                 00811700
&ZXCOCLASSE          SETC  ''          RESET IN/OUTPUT                  00811800
&ZMS                 SETC  ' '         *KRQDA*                          00811900
&ZMS                 SETC  '&ZMS "COCLASSE" KEY AND ITS'                00812000
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00812100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00812200
.ZG186C              ANOP  ,                                            00812300
.*-------------------------------------------------------------------   00812400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00812500
                     AIF   (K'&ZXCOCLASSE LE 0).ZG186R  NOT I/O         00812600
                     AIF   ('&XCOCLASSE'(1,1) NE '(').ZG186R            00812700
&ZCGPR               SETC  '&XCOCLASSE'(2,K'&XCOCLASSE-2)               00812800
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG186P                00812900
                     AIF   (K'&ZCGPR GT 2).ZG186Q                       00813000
                     AIF   ('&ZCGPR' EQ '0').ZG186Q                     00813100
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00813200
                     AIF   (T'&ZCGPR NE 'N').ZG186Q  INVALID REG NAME   00813300
.ZG186P              ANOP  ,                                            00813400
                     AIF   (T'&ZCGPR NE 'N').ZG186R  NON NUMERIC        00813500
                     AIF   ('&ZCGPR' LT '2').ZG186Q                     00813600
                     AIF   ('&ZCGPR' LE '12').ZG186R                    00813700
.ZG186Q              ANOP  ,                                            00813800
&ZMS                 SETC  '"COCLASSE='         *KGPRA* MNOTE           00813900
&ZMS                 SETC  '&ZMS.&COCLASSE"'                            00814000
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00814100
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00814200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00814300
.ZG186R              ANOP  ,                                            00814400
.*----------------------------------------------------------------***   00814500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00814600
                     AIF   (N'&COSTATSFMT LE 1).ZG189A  CK NUM          00814700
&ZMS                 SETC  '"COSTATSFMT='       *KPOSA* MNOTE           00814800
&ZMS                 SETC  '&ZMS.&COSTATSFMT"'                          00814900
&ZMS                 SETC  '&ZMS "COSTATSFMT"'                          00815000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00815100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00815200
.ZG189A              ANOP  ,                                            00815300
.*-------------------------------------------------------------------   00815400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00815500
&XCOSTATSFMT         SETC  ''          INITIALIZE XVARIABLE             00815600
.ZG190A   AIF   ('&COSTATSFMT(1)' NE 'COCOUNTSLIST').ZG191A             00815700
&XCOSTATSFMT         SETC  'COCOUNTSLIST'       SET KEYWORD             00815800
.*-------------------------------------------------------------------   00815900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00816000
.ZG191A   AIF   ('&COSTATSFMT(1)' NE 'COSTATSLIST').ZG192A              00816100
&XCOSTATSFMT         SETC  'COSTATSLIST'        SET KEYWORD             00816200
.*-------------------------------------------------------------------   00816300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00816400
.ZG192A              AIF   (K'&XCOSTATSFMT GT 0).ZG192C  KEYWORD        00816500
                     AIF   (K'&COSTATSFMT(1) LE 0).ZG192B               00816600
&ZMS                 SETC  '"COSTATSFMT='       *KUKWA* MNOTE           00816700
&ZMS                 SETC  '&ZMS.&COSTATSFMT"'                          00816800
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00816900
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00817000
&ZMS                 SETC  '&ZMS "COCOUNTSLIST"'                        00817100
&ZMS                 SETC  '&ZMS OR "COSTATSLIST".'                     00817200
                     MNOTE 8,' &ZMS '                                   00817300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00817400
.ZG192B              ANOP  ,                                            00817500
&XCOSTATSFMT         SETC  'COCOUNTSLIST'       SET DEFAULT KEYWORD     00817600
.ZG192C              ANOP  ,                                            00817700
&ZXCOSTATSFMT        SETC  'INPUT'     SET IN/OUTPUT                    00817800
.*-------------------------------------------------------------------   00817900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00818000
.ZG193               ANOP  ,                                            00818100
&ZTLC                SETC 'READ_STGSTATS'                               00818200
                     AIF   ('&REQUEST(1)' NE '&ZTLC').ZG197             00818300
&XREQUEST            SETC  'READ_STGSTATS'      SET KEYWORD             00818400
                     AIF   (N'&REQUEST LE 1).ZG193A  CK NUM             00818500
&ZMS                 SETC  '"REQUEST='          *KPOSA* MNOTE           00818600
&ZMS                 SETC  '&ZMS.&REQUEST"'                             00818700
&ZMS                 SETC  '&ZMS "REQUEST"'                             00818800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00818900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00819000
.ZG193A              ANOP  ,                                            00819100
.*------------------------------------------------------------------    00819200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00819300
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00819400
.ZG193A0             AIF   (K'&ASSIGN LE 0).ZG193A1  OK                 00819500
&ZCVAL               SETC '&ZCVAL ASSIGN'       INCORRECT KEY USED      00819600
.ZG193A1             AIF   (K'&REGUSER LE 0).ZG193A2  OK                00819700
&ZCVAL               SETC '&ZCVAL REGUSER'      INCORRECT KEY USED      00819800
.ZG193A2             AIF   (K'&RETURNDATA LE 0).ZG193A3  OK             00819900
&ZCVAL               SETC '&ZCVAL RETURNDATA'   INCORRECT KEY USED      00820000
.ZG193A3             AIF   (K'&WHENREG LE 0).ZG193A4  OK                00820100
&ZCVAL               SETC '&ZCVAL WHENREG'      INCORRECT KEY USED      00820200
.ZG193A4             AIF   (K'&VERSCOMP LE 0).ZG193A5  OK               00820300
&ZCVAL               SETC '&ZCVAL VERSCOMP'     INCORRECT KEY USED      00820400
.ZG193A5             AIF   (K'&VERSCOMPTYPE LE 0).ZG193A6  OK           00820500
&ZCVAL               SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED     00820600
.ZG193A6             AIF   (K'&VERSUPDATE LE 0).ZG193A7  OK             00820700
&ZCVAL               SETC '&ZCVAL VERSUPDATE'   INCORRECT KEY USED      00820800
.ZG193A7             AIF   (K'&NEWVERS LE 0).ZG193A8  OK                00820900
&ZCVAL               SETC '&ZCVAL NEWVERS'      INCORRECT KEY USED      00821000
.ZG193A8             AIF   (K'&CHANGED LE 0).ZG193A9  OK                00821100
&ZCVAL               SETC '&ZCVAL CHANGED'      INCORRECT KEY USED      00821200
.ZG193A9             AIF   (K'&CROSSINVAL LE 0).ZG193A10  OK            00821300
&ZCVAL               SETC '&ZCVAL CROSSINVAL'   INCORRECT KEY USED      00821400
.ZG193A10            AIF   (K'&GETCOLOCK LE 0).ZG193A11  OK             00821500
&ZCVAL               SETC '&ZCVAL GETCOLOCK'    INCORRECT KEY USED      00821600
.ZG193A11            AIF   (K'&PROCESSID LE 0).ZG193A12  OK             00821700
&ZCVAL               SETC '&ZCVAL PROCESSID'    INCORRECT KEY USED      00821800
.ZG193A12            AIF   (K'&PARITY LE 0).ZG193A13  OK                00821900
&ZCVAL               SETC '&ZCVAL PARITY'       INCORRECT KEY USED      00822000
.ZG193A13            AIF   (K'&USERDATA LE 0).ZG193A14  OK              00822100
&ZCVAL               SETC '&ZCVAL USERDATA'     INCORRECT KEY USED      00822200
.ZG193A14            AIF   (K'&ELEMNUM LE 0).ZG193A15  OK               00822300
&ZCVAL               SETC '&ZCVAL ELEMNUM'      INCORRECT KEY USED      00822400
.ZG193A15            AIF   (K'&STARTINDEX LE 0).ZG193A16  OK            00822500
&ZCVAL               SETC '&ZCVAL STARTINDEX'   INCORRECT KEY USED      00822600
.ZG193A16            AIF   (K'&ENDINDEX LE 0).ZG193A17  OK              00822700
&ZCVAL               SETC '&ZCVAL ENDINDEX'     INCORRECT KEY USED      00822800
.ZG193A17            AIF   (K'&NSBAREA LE 0).ZG193A18  OK               00822900
&ZCVAL               SETC '&ZCVAL NSBAREA'      INCORRECT KEY USED      00823000
.ZG193A18            AIF   (K'&FIRSTNAME LE 0).ZG193A19  OK             00823100
&ZCVAL               SETC '&ZCVAL FIRSTNAME'    INCORRECT KEY USED      00823200
.ZG193A19            AIF   (K'&LASTNAME LE 0).ZG193A20  OK              00823300
&ZCVAL               SETC '&ZCVAL LASTNAME'     INCORRECT KEY USED      00823400
.ZG193A20            AIF   (K'&CUNBAREA LE 0).ZG193A21  OK              00823500
&ZCVAL               SETC '&ZCVAL CUNBAREA'     INCORRECT KEY USED      00823600
.ZG193A21            AIF   (K'&DELETETYPE LE 0).ZG193A22  OK            00823700
&ZCVAL               SETC '&ZCVAL DELETETYPE'   INCORRECT KEY USED      00823800
.ZG193A22            AIF   (K'&ERRORACTION LE 0).ZG193A23  OK           00823900
&ZCVAL               SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED      00824000
.ZG193A23            AIF   (K'&DIRINFOFMT LE 0).ZG193A24  OK            00824100
&ZCVAL               SETC '&ZCVAL DIRINFOFMT'   INCORRECT KEY USED      00824200
.ZG193A24            AIF   (K'&CRITERIA LE 0).ZG193A25  OK              00824300
&ZCVAL               SETC '&ZCVAL CRITERIA'     INCORRECT KEY USED      00824400
.ZG193A25            AIF   (K'&COCLASSB LE 0).ZG193A26  OK              00824500
&ZCVAL               SETC '&ZCVAL COCLASSB'     INCORRECT KEY USED      00824600
.ZG193A26            AIF   (K'&COCLASSE LE 0).ZG193A27  OK              00824700
&ZCVAL               SETC '&ZCVAL COCLASSE'     INCORRECT KEY USED      00824800
.ZG193A27            AIF   (K'&COSTATSFMT LE 0).ZG193A28  OK            00824900
&ZCVAL               SETC '&ZCVAL COSTATSFMT'   INCORRECT KEY USED      00825000
.ZG193A28            AIF   (K'&NUMNAMES LE 0).ZG193A29  OK              00825100
&ZCVAL               SETC '&ZCVAL NUMNAMES'     INCORRECT KEY USED      00825200
.ZG193A29            AIF   (K'&REPEAT LE 0).ZG193A30  OK                00825300
&ZCVAL               SETC '&ZCVAL REPEAT'       INCORRECT KEY USED      00825400
.ZG193A30            AIF   (K'&RECLVCTR LE 0).ZG193A31  OK              00825500
&ZCVAL               SETC '&ZCVAL RECLVCTR'     INCORRECT KEY USED      00825600
.ZG193A31            AIF   (K'&ZCVAL LE 0).ZG193A32  OK                 00825700
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00825800
                     AIF  (K'&ZCVAL LE 160).ZG193A32A                   00825900
&ZCVAL               SETC '&ZCVAL'(1,160)                               00826000
&ZCVAL               SETC '&ZCVAL....'                                  00826100
.ZG193A32A           ANOP                                               00826200
&ZMS                 SETC  '"REQUEST'  *KMEIA* MNOTE                    00826300
&ZMS                 SETC  '&ZMS.=&REQUEST"'                            00826400
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00826500
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00826600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00826700
.ZG193A32            ANOP  ,                                            00826800
.*----------------------------------------------------------------***   00826900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00827000
                     AIF   (N'&STGSTATS LE 1).ZG195A  CK NUM            00827100
&ZMS                 SETC  '"STGSTATS='         *KPOSA* MNOTE           00827200
&ZMS                 SETC  '&ZMS.&STGSTATS"'                            00827300
&ZMS                 SETC  '&ZMS "STGSTATS"'                            00827400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00827500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00827600
.ZG195A              ANOP  ,                                            00827700
.*-------------------------------------------------------------------   00827800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00827900
&ZXSTGSTATS          SETC  'INPUT'     SET IN/OUTPUT                    00828000
&XSTGSTATS           SETC  '&STGSTATS(1)'       SET XVARIABLE           00828100
                     AIF   (N'&STGSTATS GT 1).ZG195B  MULTI PARMS       00828200
&XSTGSTATS           SETC  '&STGSTATS'          SET XVARIABLE           00828300
.ZG195B              AIF   (K'&STGSTATS(1) GT 0).ZG195C                 00828400
&ZXSTGSTATS          SETC  ''          RESET IN/OUTPUT                  00828500
&ZMS                 SETC  ' '         *KRQDA*                          00828600
&ZMS                 SETC  '&ZMS "STGSTATS" KEY AND ITS'                00828700
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00828800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00828900
.ZG195C              ANOP  ,                                            00829000
.*-------------------------------------------------------------------   00829100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00829200
                     AIF   (K'&ZXSTGSTATS LE 0).ZG195R  NOT I/O         00829300
                     AIF   ('&XSTGSTATS'(1,1) NE '(').ZG195R            00829400
&ZCGPR               SETC  '&XSTGSTATS'(2,K'&XSTGSTATS-2)               00829500
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG195P                00829600
                     AIF   (K'&ZCGPR GT 2).ZG195Q                       00829700
                     AIF   ('&ZCGPR' EQ '0').ZG195Q                     00829800
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00829900
                     AIF   (T'&ZCGPR NE 'N').ZG195Q  INVALID REG NAME   00830000
.ZG195P              ANOP  ,                                            00830100
                     AIF   (T'&ZCGPR NE 'N').ZG195R  NON NUMERIC        00830200
                     AIF   ('&ZCGPR' LT '2').ZG195Q                     00830300
                     AIF   ('&ZCGPR' LE '12').ZG195R                    00830400
.ZG195Q              ANOP  ,                                            00830500
&ZMS                 SETC  '"STGSTATS='         *KGPRA* MNOTE           00830600
&ZMS                 SETC  '&ZMS.&STGSTATS"'                            00830700
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00830800
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00830900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00831000
.ZG195R              ANOP  ,                                            00831100
.*-------------------------------------------------------------------   00831200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00831300
.ZG197               ANOP  ,                                            00831400
&ZTLC                SETC 'PROCESS_REFLIST'                             00831500
                     AIF   ('&REQUEST(1)' NE '&ZTLC').ZG201             00831600
&XREQUEST            SETC  'PROCESS_REFLIST'    SET KEYWORD             00831700
                     AIF   (N'&REQUEST LE 1).ZG197A  CK NUM             00831800
&ZMS                 SETC  '"REQUEST='          *KPOSA* MNOTE           00831900
&ZMS                 SETC  '&ZMS.&REQUEST"'                             00832000
&ZMS                 SETC  '&ZMS "REQUEST"'                             00832100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00832200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00832300
.ZG197A              ANOP  ,                                            00832400
.*------------------------------------------------------------------    00832500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00832600
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00832700
.ZG197A0             AIF   (K'&ASSIGN LE 0).ZG197A1  OK                 00832800
&ZCVAL               SETC '&ZCVAL ASSIGN'       INCORRECT KEY USED      00832900
.ZG197A1             AIF   (K'&REGUSER LE 0).ZG197A2  OK                00833000
&ZCVAL               SETC '&ZCVAL REGUSER'      INCORRECT KEY USED      00833100
.ZG197A2             AIF   (K'&RETURNDATA LE 0).ZG197A3  OK             00833200
&ZCVAL               SETC '&ZCVAL RETURNDATA'   INCORRECT KEY USED      00833300
.ZG197A3             AIF   (K'&WHENREG LE 0).ZG197A4  OK                00833400
&ZCVAL               SETC '&ZCVAL WHENREG'      INCORRECT KEY USED      00833500
.ZG197A4             AIF   (K'&VERSCOMP LE 0).ZG197A5  OK               00833600
&ZCVAL               SETC '&ZCVAL VERSCOMP'     INCORRECT KEY USED      00833700
.ZG197A5             AIF   (K'&VERSCOMPTYPE LE 0).ZG197A6  OK           00833800
&ZCVAL               SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED     00833900
.ZG197A6             AIF   (K'&VERSUPDATE LE 0).ZG197A7  OK             00834000
&ZCVAL               SETC '&ZCVAL VERSUPDATE'   INCORRECT KEY USED      00834100
.ZG197A7             AIF   (K'&NEWVERS LE 0).ZG197A8  OK                00834200
&ZCVAL               SETC '&ZCVAL NEWVERS'      INCORRECT KEY USED      00834300
.ZG197A8             AIF   (K'&CHANGED LE 0).ZG197A9  OK                00834400
&ZCVAL               SETC '&ZCVAL CHANGED'      INCORRECT KEY USED      00834500
.ZG197A9             AIF   (K'&CROSSINVAL LE 0).ZG197A10  OK            00834600
&ZCVAL               SETC '&ZCVAL CROSSINVAL'   INCORRECT KEY USED      00834700
.ZG197A10            AIF   (K'&GETCOLOCK LE 0).ZG197A11  OK             00834800
&ZCVAL               SETC '&ZCVAL GETCOLOCK'    INCORRECT KEY USED      00834900
.ZG197A11            AIF   (K'&PROCESSID LE 0).ZG197A12  OK             00835000
&ZCVAL               SETC '&ZCVAL PROCESSID'    INCORRECT KEY USED      00835100
.ZG197A12            AIF   (K'&PARITY LE 0).ZG197A13  OK                00835200
&ZCVAL               SETC '&ZCVAL PARITY'       INCORRECT KEY USED      00835300
.ZG197A13            AIF   (K'&USERDATA LE 0).ZG197A14  OK              00835400
&ZCVAL               SETC '&ZCVAL USERDATA'     INCORRECT KEY USED      00835500
.ZG197A14            AIF   (K'&ELEMNUM LE 0).ZG197A15  OK               00835600
&ZCVAL               SETC '&ZCVAL ELEMNUM'      INCORRECT KEY USED      00835700
.ZG197A15            AIF   (K'&STARTINDEX LE 0).ZG197A16  OK            00835800
&ZCVAL               SETC '&ZCVAL STARTINDEX'   INCORRECT KEY USED      00835900
.ZG197A16            AIF   (K'&ENDINDEX LE 0).ZG197A17  OK              00836000
&ZCVAL               SETC '&ZCVAL ENDINDEX'     INCORRECT KEY USED      00836100
.ZG197A17            AIF   (K'&NSBAREA LE 0).ZG197A18  OK               00836200
&ZCVAL               SETC '&ZCVAL NSBAREA'      INCORRECT KEY USED      00836300
.ZG197A18            AIF   (K'&FIRSTNAME LE 0).ZG197A19  OK             00836400
&ZCVAL               SETC '&ZCVAL FIRSTNAME'    INCORRECT KEY USED      00836500
.ZG197A19            AIF   (K'&LASTNAME LE 0).ZG197A20  OK              00836600
&ZCVAL               SETC '&ZCVAL LASTNAME'     INCORRECT KEY USED      00836700
.ZG197A20            AIF   (K'&CUNBAREA LE 0).ZG197A21  OK              00836800
&ZCVAL               SETC '&ZCVAL CUNBAREA'     INCORRECT KEY USED      00836900
.ZG197A21            AIF   (K'&DELETETYPE LE 0).ZG197A22  OK            00837000
&ZCVAL               SETC '&ZCVAL DELETETYPE'   INCORRECT KEY USED      00837100
.ZG197A22            AIF   (K'&ERRORACTION LE 0).ZG197A23  OK           00837200
&ZCVAL               SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED      00837300
.ZG197A23            AIF   (K'&DIRINFOFMT LE 0).ZG197A24  OK            00837400
&ZCVAL               SETC '&ZCVAL DIRINFOFMT'   INCORRECT KEY USED      00837500
.ZG197A24            AIF   (K'&CRITERIA LE 0).ZG197A25  OK              00837600
&ZCVAL               SETC '&ZCVAL CRITERIA'     INCORRECT KEY USED      00837700
.ZG197A25            AIF   (K'&COCLASSB LE 0).ZG197A26  OK              00837800
&ZCVAL               SETC '&ZCVAL COCLASSB'     INCORRECT KEY USED      00837900
.ZG197A26            AIF   (K'&COCLASSE LE 0).ZG197A27  OK              00838000
&ZCVAL               SETC '&ZCVAL COCLASSE'     INCORRECT KEY USED      00838100
.ZG197A27            AIF   (K'&COSTATSFMT LE 0).ZG197A28  OK            00838200
&ZCVAL               SETC '&ZCVAL COSTATSFMT'   INCORRECT KEY USED      00838300
.ZG197A28            AIF   (K'&STGSTATS LE 0).ZG197A29  OK              00838400
&ZCVAL               SETC '&ZCVAL STGSTATS'     INCORRECT KEY USED      00838500
.ZG197A29            AIF   (K'&REPEAT LE 0).ZG197A30  OK                00838600
&ZCVAL               SETC '&ZCVAL REPEAT'       INCORRECT KEY USED      00838700
.ZG197A30            AIF   (K'&RECLVCTR LE 0).ZG197A31  OK              00838800
&ZCVAL               SETC '&ZCVAL RECLVCTR'     INCORRECT KEY USED      00838900
.ZG197A31            AIF   (K'&ZCVAL LE 0).ZG197A32  OK                 00839000
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00839100
                     AIF  (K'&ZCVAL LE 160).ZG197A32A                   00839200
&ZCVAL               SETC '&ZCVAL'(1,160)                               00839300
&ZCVAL               SETC '&ZCVAL....'                                  00839400
.ZG197A32A           ANOP                                               00839500
&ZMS                 SETC  '"REQUEST'  *KMEIA* MNOTE                    00839600
&ZMS                 SETC  '&ZMS.=&REQUEST"'                            00839700
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00839800
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00839900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00840000
.ZG197A32            ANOP  ,                                            00840100
.*----------------------------------------------------------------***   00840200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00840300
                     AIF   (N'&NUMNAMES LE 1).ZG199A  CK NUM            00840400
&ZMS                 SETC  '"NUMNAMES='         *KPOSA* MNOTE           00840500
&ZMS                 SETC  '&ZMS.&NUMNAMES"'                            00840600
&ZMS                 SETC  '&ZMS "NUMNAMES"'                            00840700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00840800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00840900
.ZG199A              ANOP  ,                                            00841000
.*-------------------------------------------------------------------   00841100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00841200
&ZXNUMNAMES          SETC  'INPUT'     SET IN/OUTPUT                    00841300
&XNUMNAMES           SETC  '&NUMNAMES(1)'       SET XVARIABLE           00841400
                     AIF   (N'&NUMNAMES GT 1).ZG199B  MULTI PARMS       00841500
&XNUMNAMES           SETC  '&NUMNAMES'          SET XVARIABLE           00841600
.ZG199B              AIF   (K'&NUMNAMES(1) GT 0).ZG199C                 00841700
&ZXNUMNAMES          SETC  ''          RESET IN/OUTPUT                  00841800
&ZMS                 SETC  ' '         *KRQDA*                          00841900
&ZMS                 SETC  '&ZMS "NUMNAMES" KEY AND ITS'                00842000
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00842100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00842200
.ZG199C              ANOP  ,                                            00842300
.*-------------------------------------------------------------------   00842400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00842500
                     AIF   (K'&ZXNUMNAMES LE 0).ZG199R  NOT I/O         00842600
                     AIF   ('&XNUMNAMES'(1,1) NE '(').ZG199R            00842700
&ZCGPR               SETC  '&XNUMNAMES'(2,K'&XNUMNAMES-2)               00842800
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG199P                00842900
                     AIF   (K'&ZCGPR GT 2).ZG199Q                       00843000
                     AIF   ('&ZCGPR' EQ '0').ZG199Q                     00843100
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00843200
                     AIF   (T'&ZCGPR NE 'N').ZG199Q  INVALID REG NAME   00843300
.ZG199P              ANOP  ,                                            00843400
                     AIF   (T'&ZCGPR NE 'N').ZG199R  NON NUMERIC        00843500
                     AIF   ('&ZCGPR' LT '2').ZG199Q                     00843600
                     AIF   ('&ZCGPR' LE '12').ZG199R                    00843700
.ZG199Q              ANOP  ,                                            00843800
&ZMS                 SETC  '"NUMNAMES='         *KGPRA* MNOTE           00843900
&ZMS                 SETC  '&ZMS.&NUMNAMES"'                            00844000
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00844100
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00844200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00844300
.ZG199R              ANOP  ,                                            00844400
.*-------------------------------------------------------------------   00844500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00844600
.ZG201               ANOP  ,                                            00844700
&ZTLC                SETC 'SET_RECLVCTR'                                00844800
                     AIF   ('&REQUEST(1)' NE '&ZTLC').ZG208             00844900
&XREQUEST            SETC  'SET_RECLVCTR'       SET KEYWORD             00845000
                     AIF   (N'&REQUEST LE 1).ZG201A  CK NUM             00845100
&ZMS                 SETC  '"REQUEST='          *KPOSA* MNOTE           00845200
&ZMS                 SETC  '&ZMS.&REQUEST"'                             00845300
&ZMS                 SETC  '&ZMS "REQUEST"'                             00845400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00845500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00845600
.ZG201A              ANOP  ,                                            00845700
.*------------------------------------------------------------------    00845800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00845900
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00846000
.ZG201A0             AIF   (K'&ASSIGN LE 0).ZG201A1  OK                 00846100
&ZCVAL               SETC '&ZCVAL ASSIGN'       INCORRECT KEY USED      00846200
.ZG201A1             AIF   (K'&REGUSER LE 0).ZG201A2  OK                00846300
&ZCVAL               SETC '&ZCVAL REGUSER'      INCORRECT KEY USED      00846400
.ZG201A2             AIF   (K'&RETURNDATA LE 0).ZG201A3  OK             00846500
&ZCVAL               SETC '&ZCVAL RETURNDATA'   INCORRECT KEY USED      00846600
.ZG201A3             AIF   (K'&WHENREG LE 0).ZG201A4  OK                00846700
&ZCVAL               SETC '&ZCVAL WHENREG'      INCORRECT KEY USED      00846800
.ZG201A4             AIF   (K'&VERSCOMP LE 0).ZG201A5  OK               00846900
&ZCVAL               SETC '&ZCVAL VERSCOMP'     INCORRECT KEY USED      00847000
.ZG201A5             AIF   (K'&VERSCOMPTYPE LE 0).ZG201A6  OK           00847100
&ZCVAL               SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED     00847200
.ZG201A6             AIF   (K'&VERSUPDATE LE 0).ZG201A7  OK             00847300
&ZCVAL               SETC '&ZCVAL VERSUPDATE'   INCORRECT KEY USED      00847400
.ZG201A7             AIF   (K'&NEWVERS LE 0).ZG201A8  OK                00847500
&ZCVAL               SETC '&ZCVAL NEWVERS'      INCORRECT KEY USED      00847600
.ZG201A8             AIF   (K'&CHANGED LE 0).ZG201A9  OK                00847700
&ZCVAL               SETC '&ZCVAL CHANGED'      INCORRECT KEY USED      00847800
.ZG201A9             AIF   (K'&CROSSINVAL LE 0).ZG201A10  OK            00847900
&ZCVAL               SETC '&ZCVAL CROSSINVAL'   INCORRECT KEY USED      00848000
.ZG201A10            AIF   (K'&GETCOLOCK LE 0).ZG201A11  OK             00848100
&ZCVAL               SETC '&ZCVAL GETCOLOCK'    INCORRECT KEY USED      00848200
.ZG201A11            AIF   (K'&PROCESSID LE 0).ZG201A12  OK             00848300
&ZCVAL               SETC '&ZCVAL PROCESSID'    INCORRECT KEY USED      00848400
.ZG201A12            AIF   (K'&PARITY LE 0).ZG201A13  OK                00848500
&ZCVAL               SETC '&ZCVAL PARITY'       INCORRECT KEY USED      00848600
.ZG201A13            AIF   (K'&USERDATA LE 0).ZG201A14  OK              00848700
&ZCVAL               SETC '&ZCVAL USERDATA'     INCORRECT KEY USED      00848800
.ZG201A14            AIF   (K'&ELEMNUM LE 0).ZG201A15  OK               00848900
&ZCVAL               SETC '&ZCVAL ELEMNUM'      INCORRECT KEY USED      00849000
.ZG201A15            AIF   (K'&STARTINDEX LE 0).ZG201A16  OK            00849100
&ZCVAL               SETC '&ZCVAL STARTINDEX'   INCORRECT KEY USED      00849200
.ZG201A16            AIF   (K'&ENDINDEX LE 0).ZG201A17  OK              00849300
&ZCVAL               SETC '&ZCVAL ENDINDEX'     INCORRECT KEY USED      00849400
.ZG201A17            AIF   (K'&NSBAREA LE 0).ZG201A18  OK               00849500
&ZCVAL               SETC '&ZCVAL NSBAREA'      INCORRECT KEY USED      00849600
.ZG201A18            AIF   (K'&FIRSTNAME LE 0).ZG201A19  OK             00849700
&ZCVAL               SETC '&ZCVAL FIRSTNAME'    INCORRECT KEY USED      00849800
.ZG201A19            AIF   (K'&LASTNAME LE 0).ZG201A20  OK              00849900
&ZCVAL               SETC '&ZCVAL LASTNAME'     INCORRECT KEY USED      00850000
.ZG201A20            AIF   (K'&CUNBAREA LE 0).ZG201A21  OK              00850100
&ZCVAL               SETC '&ZCVAL CUNBAREA'     INCORRECT KEY USED      00850200
.ZG201A21            AIF   (K'&DELETETYPE LE 0).ZG201A22  OK            00850300
&ZCVAL               SETC '&ZCVAL DELETETYPE'   INCORRECT KEY USED      00850400
.ZG201A22            AIF   (K'&ERRORACTION LE 0).ZG201A23  OK           00850500
&ZCVAL               SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED      00850600
.ZG201A23            AIF   (K'&DIRINFOFMT LE 0).ZG201A24  OK            00850700
&ZCVAL               SETC '&ZCVAL DIRINFOFMT'   INCORRECT KEY USED      00850800
.ZG201A24            AIF   (K'&CRITERIA LE 0).ZG201A25  OK              00850900
&ZCVAL               SETC '&ZCVAL CRITERIA'     INCORRECT KEY USED      00851000
.ZG201A25            AIF   (K'&COCLASSB LE 0).ZG201A26  OK              00851100
&ZCVAL               SETC '&ZCVAL COCLASSB'     INCORRECT KEY USED      00851200
.ZG201A26            AIF   (K'&COCLASSE LE 0).ZG201A27  OK              00851300
&ZCVAL               SETC '&ZCVAL COCLASSE'     INCORRECT KEY USED      00851400
.ZG201A27            AIF   (K'&COSTATSFMT LE 0).ZG201A28  OK            00851500
&ZCVAL               SETC '&ZCVAL COSTATSFMT'   INCORRECT KEY USED      00851600
.ZG201A28            AIF   (K'&STGSTATS LE 0).ZG201A29  OK              00851700
&ZCVAL               SETC '&ZCVAL STGSTATS'     INCORRECT KEY USED      00851800
.ZG201A29            AIF   (K'&NUMNAMES LE 0).ZG201A30  OK              00851900
&ZCVAL               SETC '&ZCVAL NUMNAMES'     INCORRECT KEY USED      00852000
.ZG201A30            AIF   (K'&ZCVAL LE 0).ZG201A31  OK                 00852100
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00852200
                     AIF  (K'&ZCVAL LE 160).ZG201A31A                   00852300
&ZCVAL               SETC '&ZCVAL'(1,160)                               00852400
&ZCVAL               SETC '&ZCVAL....'                                  00852500
.ZG201A31A           ANOP                                               00852600
&ZMS                 SETC  '"REQUEST'  *KMEIA* MNOTE                    00852700
&ZMS                 SETC  '&ZMS.=&REQUEST"'                            00852800
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00852900
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00853000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00853100
.ZG201A31            ANOP  ,                                            00853200
.*----------------------------------------------------------------***   00853300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00853400
                     AIF   (N'&REPEAT LE 1).ZG203A  CK NUM              00853500
&ZMS                 SETC  '"REPEAT='  *KPOSA* MNOTE                    00853600
&ZMS                 SETC  '&ZMS.&REPEAT"'                              00853700
&ZMS                 SETC  '&ZMS "REPEAT"'                              00853800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00853900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00854000
.ZG203A              ANOP  ,                                            00854100
.*-------------------------------------------------------------------   00854200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00854300
&ZXREPEAT            SETC  'INPUT'     SET IN/OUTPUT                    00854400
&XREPEAT             SETC  '&REPEAT(1)'         SET XVARIABLE           00854500
                     AIF   (N'&REPEAT GT 1).ZG203B  MULTI PARMS         00854600
&XREPEAT             SETC  '&REPEAT'   SET XVARIABLE                    00854700
.ZG203B              AIF   (K'&REPEAT(1) GT 0).ZG203C                   00854800
&ZXREPEAT            SETC  ''          RESET IN/OUTPUT                  00854900
&ZMS                 SETC  ' '         *KRQDA*                          00855000
&ZMS                 SETC  '&ZMS "REPEAT" KEY AND ITS'                  00855100
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00855200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00855300
.ZG203C              ANOP  ,                                            00855400
.*-------------------------------------------------------------------   00855500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00855600
                     AIF   (K'&ZXREPEAT LE 0).ZG203R  NOT I/O           00855700
                     AIF   ('&XREPEAT'(1,1) NE '(').ZG203R              00855800
&ZCGPR               SETC  '&XREPEAT'(2,K'&XREPEAT-2)                   00855900
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG203P                00856000
                     AIF   (K'&ZCGPR GT 2).ZG203Q                       00856100
                     AIF   ('&ZCGPR' EQ '0').ZG203Q                     00856200
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00856300
                     AIF   (T'&ZCGPR NE 'N').ZG203Q  INVALID REG NAME   00856400
.ZG203P              ANOP  ,                                            00856500
                     AIF   (T'&ZCGPR NE 'N').ZG203R  NON NUMERIC        00856600
                     AIF   ('&ZCGPR' LT '2').ZG203Q                     00856700
                     AIF   ('&ZCGPR' LE '12').ZG203R                    00856800
.ZG203Q              ANOP  ,                                            00856900
&ZMS                 SETC  '"REPEAT='  *KGPRA* MNOTE                    00857000
&ZMS                 SETC  '&ZMS.&REPEAT"'                              00857100
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00857200
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00857300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00857400
.ZG203R              ANOP  ,                                            00857500
.*----------------------------------------------------------------***   00857600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00857700
                     AIF   (N'&RECLVCTR LE 1).ZG206A  CK NUM            00857800
&ZMS                 SETC  '"RECLVCTR='         *KPOSA* MNOTE           00857900
&ZMS                 SETC  '&ZMS.&RECLVCTR"'                            00858000
&ZMS                 SETC  '&ZMS "RECLVCTR"'                            00858100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00858200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00858300
.ZG206A              ANOP  ,                                            00858400
.*-------------------------------------------------------------------   00858500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00858600
&ZXRECLVCTR          SETC  'INPUT'     SET IN/OUTPUT                    00858700
&XRECLVCTR           SETC  'NO_RECLVCTR'                                00858800
                     AIF   (K'&RECLVCTR(1) LE 0).ZG206B  PARM           00858900
&XRECLVCTR           SETC  '&RECLVCTR(1)'       SET XVARIABLE           00859000
                     AIF   (N'&RECLVCTR GT 1).ZG206B  MULTI PARMS       00859100
&XRECLVCTR           SETC  '&RECLVCTR'          SET XVARIABLE           00859200
.ZG206B              ANOP  ,                                            00859300
.*-------------------------------------------------------------------   00859400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00859500
                     AIF   (K'&ZXRECLVCTR LE 0).ZG206R  NOT I/O         00859600
         AIF   ('&XRECLVCTR' EQ 'NO_RECLVCTR').ZG206R                   00859700
                     AIF   ('&XRECLVCTR'(1,1) NE '(').ZG206R            00859800
&ZCGPR               SETC  '&XRECLVCTR'(2,K'&XRECLVCTR-2)               00859900
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG206P                00860000
                     AIF   (K'&ZCGPR GT 2).ZG206Q                       00860100
                     AIF   ('&ZCGPR' EQ '0').ZG206Q                     00860200
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00860300
                     AIF   (T'&ZCGPR NE 'N').ZG206Q  INVALID REG NAME   00860400
.ZG206P              ANOP  ,                                            00860500
                     AIF   (T'&ZCGPR NE 'N').ZG206R  NON NUMERIC        00860600
                     AIF   ('&ZCGPR' LT '2').ZG206Q                     00860700
                     AIF   ('&ZCGPR' LE '12').ZG206R                    00860800
.ZG206Q              ANOP  ,                                            00860900
&ZMS                 SETC  '"RECLVCTR='         *KGPRA* MNOTE           00861000
&ZMS                 SETC  '&ZMS.&RECLVCTR"'                            00861100
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00861200
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00861300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00861400
.ZG206R              ANOP  ,                                            00861500
.*------------------------------------------------------------------    00861600
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00861700
.ZG208               ANOP  ,                                            00861800
&ZXREQUEST           SETC  'INPUT'     SET IN/OUTPUT                    00861900
                     AIF   (K'&XREQUEST GT 0).ZG208E  VALID ARG         00862000
                     AIF   (T'&REQUEST EQ 'O').ZG208D  OMITTED          00862100
&ZASYSLNDX           SETA  0                                            00862200
.ZG208A              ANOP  ,           POSITIONAL MACRO KEY             00862300
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00862400
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG208C            00862500
&ZTLC                SETC 'REQUEST'                                     00862600
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG208A   00862700
.ZG208B              ANOP  ,                                            00862800
&ZXREQUEST           SETC  ''          RESET IN/OUTPUT                  00862900
&ZMS                 SETC  'THE "REQUEST" KEY'  *KOPTA* MNOTE           00863000
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00863100
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00863200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00863300
                     AGO   .ZG208E                                      00863400
.ZG208C              ANOP  ,                                            00863500
&ZXREQUEST           SETC  ''          RESET IN/OUTPUT                  00863600
&ZMS                 SETC  '"REQUEST='          *KUKWA* MNOTE           00863700
&ZMS                 SETC  '&ZMS.&REQUEST"'                             00863800
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00863900
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00864000
&ZMS                 SETC  '&ZMS "READ_DATA",'                          00864100
&ZMS                 SETC  '&ZMS "WRITE_DATA",'                         00864200
&ZMS                 SETC  '&ZMS "REG_NAMELIST",'                       00864300
&ZMS                 SETC  '&ZMS "CASTOUT_DATA",'                       00864400
&ZMS                 SETC  '&ZMS "UNLOCK_CASTOUT",'                     00864500
&ZMS                 SETC  '&ZMS "UNLOCK_CO_NAME",'                     00864600
&ZMS                 SETC  '&ZMS "CROSS_INVAL",'                        00864700
&ZMS                 SETC  '&ZMS "DELETE_NAME",'                        00864800
&ZMS                 SETC  '&ZMS "DELETE_NAMELIST",'                    00864900
                     MNOTE 8,' &ZMS '                                   00865000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00865100
&ZMS                 SETC  '(CONTINUED) '                               00865200
&ZMS                 SETC  '&ZMS "READ_COCLASS",'                       00865300
&ZMS                 SETC  '&ZMS "READ_DIRINFO",'                       00865400
&ZMS                 SETC  '&ZMS "RESET_REFBIT",'                       00865500
&ZMS                 SETC  '&ZMS "READ_COSTATS",'                       00865600
&ZMS                 SETC  '&ZMS "READ_STGSTATS",'                      00865700
&ZMS                 SETC  '&ZMS "PROCESS_REFLIST",'                    00865800
&ZMS                 SETC  '&ZMS OR "SET_RECLVCTR".'                    00865900
                     MNOTE 8,' &ZMS '                                   00866000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00866100
                     AGO   .ZG208E                                      00866200
.ZG208D              ANOP  ,                                            00866300
&XREQUEST            SETC  'READ_DATA'          SET DEFAULT KEYWORD     00866400
.ZG208E              ANOP  ,                                            00866500
.*------------------------------------------------------------------    00866600
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00866700
                     AIF   (K'&REQUEST(1) GT 0).ZG208F  PARM            00866800
&XREQUEST            SETC  ''          ENSURE NULL KEYWORD              00866900
&ZXREQUEST           SETC  ''          RESET IN/OUTPUT                  00867000
&ZMS                 SETC  'THE'                                        00867100
&ZMS                 SETC  '&ZMS "REQUEST" KEY AND ITS'                 00867200
&ZMS                 SETC  '&ZMS ARGUMENT ARE REQUIRED.'                00867300
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00867400
&ZMS                 SETC  '&ZMS "READ_DATA",'                          00867500
&ZMS                 SETC  '&ZMS "WRITE_DATA",'                         00867600
&ZMS                 SETC  '&ZMS "REG_NAMELIST",'                       00867700
&ZMS                 SETC  '&ZMS "CASTOUT_DATA",'                       00867800
&ZMS                 SETC  '&ZMS "UNLOCK_CASTOUT",'                     00867900
&ZMS                 SETC  '&ZMS "UNLOCK_CO_NAME",'                     00868000
&ZMS                 SETC  '&ZMS "CROSS_INVAL",'                        00868100
&ZMS                 SETC  '&ZMS "DELETE_NAME",'                        00868200
                     MNOTE 8,' &ZMS '                                   00868300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00868400
&ZMS                 SETC  '(CONTINUED) '                               00868500
&ZMS                 SETC  '&ZMS "DELETE_NAMELIST",'                    00868600
&ZMS                 SETC  '&ZMS "READ_COCLASS",'                       00868700
&ZMS                 SETC  '&ZMS "READ_DIRINFO",'                       00868800
&ZMS                 SETC  '&ZMS "RESET_REFBIT",'                       00868900
&ZMS                 SETC  '&ZMS "READ_COSTATS",'                       00869000
&ZMS                 SETC  '&ZMS "READ_STGSTATS",'                      00869100
&ZMS                 SETC  '&ZMS "PROCESS_REFLIST",'                    00869200
&ZMS                 SETC  '&ZMS OR "SET_RECLVCTR".'                    00869300
                     MNOTE 8,' &ZMS '                                   00869400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00869500
.ZG208F              ANOP  ,                                            00869600
.*----------------------------------------------------------------***   00869700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00869800
                     AIF   (N'&CONTOKEN LE 1).ZG210A  CK NUM            00869900
&ZMS                 SETC  '"CONTOKEN='         *KPOSA* MNOTE           00870000
&ZMS                 SETC  '&ZMS.&CONTOKEN"'                            00870100
&ZMS                 SETC  '&ZMS "CONTOKEN"'                            00870200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00870300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00870400
.ZG210A              ANOP  ,                                            00870500
.*-------------------------------------------------------------------   00870600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00870700
&ZXCONTOKEN          SETC  'INPUT'     SET IN/OUTPUT                    00870800
&XCONTOKEN           SETC  '&CONTOKEN(1)'       SET XVARIABLE           00870900
                     AIF   (N'&CONTOKEN GT 1).ZG210B  MULTI PARMS       00871000
&XCONTOKEN           SETC  '&CONTOKEN'          SET XVARIABLE           00871100
.ZG210B              AIF   (K'&CONTOKEN(1) GT 0).ZG210C                 00871200
&ZXCONTOKEN          SETC  ''          RESET IN/OUTPUT                  00871300
&ZMS                 SETC  ' '         *KRQDA*                          00871400
&ZMS                 SETC  '&ZMS "CONTOKEN" KEY AND ITS'                00871500
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00871600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00871700
.ZG210C              ANOP  ,                                            00871800
.*-------------------------------------------------------------------   00871900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00872000
                     AIF   (K'&ZXCONTOKEN LE 0).ZG210R  NOT I/O         00872100
                     AIF   ('&XCONTOKEN'(1,1) NE '(').ZG210R            00872200
&ZCGPR               SETC  '&XCONTOKEN'(2,K'&XCONTOKEN-2)               00872300
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG210P                00872400
                     AIF   (K'&ZCGPR GT 2).ZG210Q                       00872500
                     AIF   ('&ZCGPR' EQ '0').ZG210Q                     00872600
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00872700
                     AIF   (T'&ZCGPR NE 'N').ZG210Q  INVALID REG NAME   00872800
.ZG210P              ANOP  ,                                            00872900
                     AIF   (T'&ZCGPR NE 'N').ZG210R  NON NUMERIC        00873000
                     AIF   ('&ZCGPR' LT '2').ZG210Q                     00873100
                     AIF   ('&ZCGPR' LE '12').ZG210R                    00873200
.ZG210Q              ANOP  ,                                            00873300
&ZMS                 SETC  '"CONTOKEN='         *KGPRA* MNOTE           00873400
&ZMS                 SETC  '&ZMS.&CONTOKEN"'                            00873500
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00873600
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00873700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00873800
.ZG210R              ANOP  ,                                            00873900
.*----------------------------------------------------------------***   00874000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00874100
                     AIF   (N'&REQID LE 1).ZG213A  CK NUM               00874200
&ZMS                 SETC  '"REQID='   *KPOSA* MNOTE                    00874300
&ZMS                 SETC  '&ZMS.&REQID"'                               00874400
&ZMS                 SETC  '&ZMS "REQID"'                               00874500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00874600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00874700
.ZG213A              ANOP  ,                                            00874800
.*-------------------------------------------------------------------   00874900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00875000
&ZXREQID             SETC  'INPUT'     SET IN/OUTPUT                    00875100
&XREQID              SETC  'NO_REQID'                                   00875200
                     AIF   (K'&REQID(1) LE 0).ZG213B  PARM              00875300
&XREQID              SETC  '&REQID(1)'          SET XVARIABLE           00875400
                     AIF   (N'&REQID GT 1).ZG213B  MULTI PARMS          00875500
&XREQID              SETC  '&REQID'    SET XVARIABLE                    00875600
.ZG213B              ANOP  ,                                            00875700
.*-------------------------------------------------------------------   00875800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00875900
                     AIF   (K'&ZXREQID LE 0).ZG213R  NOT I/O            00876000
         AIF   ('&XREQID' EQ 'NO_REQID').ZG213R                         00876100
                     AIF   ('&XREQID'(1,1) NE '(').ZG213R               00876200
&ZCGPR               SETC  '&XREQID'(2,K'&XREQID-2)                     00876300
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG213P                00876400
                     AIF   (K'&ZCGPR GT 2).ZG213Q                       00876500
                     AIF   ('&ZCGPR' EQ '0').ZG213Q                     00876600
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00876700
                     AIF   (T'&ZCGPR NE 'N').ZG213Q  INVALID REG NAME   00876800
.ZG213P              ANOP  ,                                            00876900
                     AIF   (T'&ZCGPR NE 'N').ZG213R  NON NUMERIC        00877000
                     AIF   ('&ZCGPR' LT '2').ZG213Q                     00877100
                     AIF   ('&ZCGPR' LE '12').ZG213R                    00877200
.ZG213Q              ANOP  ,                                            00877300
&ZMS                 SETC  '"REQID='   *KGPRA* MNOTE                    00877400
&ZMS                 SETC  '&ZMS.&REQID"'                               00877500
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00877600
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00877700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00877800
.ZG213R              ANOP  ,                                            00877900
.*----------------------------------------------------------------***   00878000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00878100
                     AIF   (N'&NAME LE 1).ZG216A  CK NUM                00878200
&ZMS                 SETC  '"NAME='    *KPOSA* MNOTE                    00878300
&ZMS                 SETC  '&ZMS.&NAME"'                                00878400
&ZMS                 SETC  '&ZMS "NAME"'                                00878500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00878600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00878700
.ZG216A              ANOP  ,                                            00878800
.*-------------------------------------------------------------------   00878900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00879000
&ZXNAME              SETC  'INPUT'     SET IN/OUTPUT                    00879100
&XNAME               SETC  'NO_NAME'                                    00879200
                     AIF   (K'&NAME(1) LE 0).ZG216B  PARM               00879300
&XNAME               SETC  '&NAME(1)'  SET XVARIABLE                    00879400
                     AIF   (N'&NAME GT 1).ZG216B  MULTI PARMS           00879500
&XNAME               SETC  '&NAME'     SET XVARIABLE                    00879600
.ZG216B              ANOP  ,                                            00879700
.*-------------------------------------------------------------------   00879800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00879900
                     AIF   (K'&ZXNAME LE 0).ZG216R  NOT I/O             00880000
         AIF   ('&XNAME' EQ 'NO_NAME').ZG216R                           00880100
                     AIF   ('&XNAME'(1,1) NE '(').ZG216R                00880200
&ZCGPR               SETC  '&XNAME'(2,K'&XNAME-2)                       00880300
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG216P                00880400
                     AIF   (K'&ZCGPR GT 2).ZG216Q                       00880500
                     AIF   ('&ZCGPR' EQ '0').ZG216Q                     00880600
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00880700
                     AIF   (T'&ZCGPR NE 'N').ZG216Q  INVALID REG NAME   00880800
.ZG216P              ANOP  ,                                            00880900
                     AIF   (T'&ZCGPR NE 'N').ZG216R  NON NUMERIC        00881000
                     AIF   ('&ZCGPR' LT '2').ZG216Q                     00881100
                     AIF   ('&ZCGPR' LE '12').ZG216R                    00881200
.ZG216Q              ANOP  ,                                            00881300
&ZMS                 SETC  '"NAME='    *KGPRA* MNOTE                    00881400
&ZMS                 SETC  '&ZMS.&NAME"'                                00881500
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00881600
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00881700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00881800
.ZG216R              ANOP  ,                                            00881900
.*----------------------------------------------------------------***   00882000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00882100
                     AIF   (N'&NAMEMASK LE 1).ZG218A  CK NUM            00882200
&ZMS                 SETC  '"NAMEMASK='         *KPOSA* MNOTE           00882300
&ZMS                 SETC  '&ZMS.&NAMEMASK"'                            00882400
&ZMS                 SETC  '&ZMS "NAMEMASK"'                            00882500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00882600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00882700
.ZG218A              ANOP  ,                                            00882800
.*-------------------------------------------------------------------   00882900
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00883000
&XNAMEMASK           SETC  '1111111111111111'   SET DEFAULT             00883100
                     AIF   (K'&NAMEMASK(1) LE 0).ZG218C  PARM           00883200
&XNAMEMASK           SETC  '&NAMEMASK(1)'       SET XVARIABLE           00883300
                     AIF   (N'&NAMEMASK GT 1).ZG218B  MULTI PARMS       00883400
&XNAMEMASK           SETC  '&NAMEMASK'          SET XVARIABLE           00883500
.ZG218B              AIF   (K'&NAME(1) GT 0).ZG218C  KEY                00883600
&ZMS                 SETC  '"NAMEMASK'          *KDEPA* MNOTE           00883700
&ZMS                 SETC  '&ZMS.=&NAMEMASK"'                           00883800
&ZMS                 SETC  '&ZMS CAN ONLY BE SPECIFIED IF'              00883900
&ZMS                 SETC  '&ZMS '                                      00884000
&ZMS                 SETC  '&ZMS "NAME"'                                00884100
                     MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                 00884200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00884300
.ZG218C              ANOP  ,                                            00884400
&ZXNAMEMASK          SETC  'INPUT'     SET IN/OUTPUT                    00884500
.*-------------------------------------------------------------------   00884600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00884700
                     AIF   (K'&ZXNAMEMASK LE 0).ZG218R  NOT I/O         00884800
                     AIF   ('&XNAMEMASK'(1,1) NE '(').ZG218R            00884900
&ZCGPR               SETC  '&XNAMEMASK'(2,K'&XNAMEMASK-2)               00885000
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG218P                00885100
                     AIF   (K'&ZCGPR GT 2).ZG218Q                       00885200
                     AIF   ('&ZCGPR' EQ '0').ZG218Q                     00885300
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00885400
                     AIF   (T'&ZCGPR NE 'N').ZG218Q  INVALID REG NAME   00885500
.ZG218P              ANOP  ,                                            00885600
                     AIF   (T'&ZCGPR NE 'N').ZG218R  NON NUMERIC        00885700
                     AIF   ('&ZCGPR' LT '2').ZG218Q                     00885800
                     AIF   ('&ZCGPR' LE '12').ZG218R                    00885900
.ZG218Q              ANOP  ,                                            00886000
&ZMS                 SETC  '"NAMEMASK='         *KGPRA* MNOTE           00886100
&ZMS                 SETC  '&ZMS.&NAMEMASK"'                            00886200
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00886300
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00886400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00886500
.ZG218R              ANOP  ,                                            00886600
.*----------------------------------------------------------------***   00886700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00886800
                     AIF   (N'&OLDNAME LE 1).ZG221A  CK NUM             00886900
&ZMS                 SETC  '"OLDNAME='          *KPOSA* MNOTE           00887000
&ZMS                 SETC  '&ZMS.&OLDNAME"'                             00887100
&ZMS                 SETC  '&ZMS "OLDNAME"'                             00887200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00887300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00887400
.ZG221A              ANOP  ,                                            00887500
.*-------------------------------------------------------------------   00887600
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00887700
&XOLDNAME            SETC  'NO_OLDNAME'         SET DEFAULT             00887800
                     AIF   (K'&OLDNAME(1) LE 0).ZG221C  PARM            00887900
&XOLDNAME            SETC  '&OLDNAME(1)'        SET XVARIABLE           00888000
                     AIF   (N'&OLDNAME GT 1).ZG221B  MULTI PARMS        00888100
&XOLDNAME            SETC  '&OLDNAME'  SET XVARIABLE                    00888200
.ZG221B              AIF   (K'&NAME(1) GT 0).ZG221C  KEY                00888300
&ZMS                 SETC  '"OLDNAME'  *KDEPA* MNOTE                    00888400
&ZMS                 SETC  '&ZMS.=&OLDNAME"'                            00888500
&ZMS                 SETC  '&ZMS CAN ONLY BE SPECIFIED IF'              00888600
&ZMS                 SETC  '&ZMS '                                      00888700
&ZMS                 SETC  '&ZMS "NAME"'                                00888800
                     MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                 00888900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00889000
.ZG221C              ANOP  ,                                            00889100
&ZXOLDNAME           SETC  'INPUT'     SET IN/OUTPUT                    00889200
.*-------------------------------------------------------------------   00889300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00889400
                     AIF   (K'&ZXOLDNAME LE 0).ZG221R  NOT I/O          00889500
         AIF   ('&XOLDNAME' EQ 'NO_OLDNAME').ZG221R                     00889600
                     AIF   ('&XOLDNAME'(1,1) NE '(').ZG221R             00889700
&ZCGPR               SETC  '&XOLDNAME'(2,K'&XOLDNAME-2)                 00889800
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG221P                00889900
                     AIF   (K'&ZCGPR GT 2).ZG221Q                       00890000
                     AIF   ('&ZCGPR' EQ '0').ZG221Q                     00890100
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00890200
                     AIF   (T'&ZCGPR NE 'N').ZG221Q  INVALID REG NAME   00890300
.ZG221P              ANOP  ,                                            00890400
                     AIF   (T'&ZCGPR NE 'N').ZG221R  NON NUMERIC        00890500
                     AIF   ('&ZCGPR' LT '2').ZG221Q                     00890600
                     AIF   ('&ZCGPR' LE '12').ZG221R                    00890700
.ZG221Q              ANOP  ,                                            00890800
&ZMS                 SETC  '"OLDNAME='          *KGPRA* MNOTE           00890900
&ZMS                 SETC  '&ZMS.&OLDNAME"'                             00891000
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00891100
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00891200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00891300
.ZG221R              ANOP  ,                                            00891400
.*----------------------------------------------------------------***   00891500
.***AG.KMEKY01 NAME, OPT INPUT, ME KEYS -XVARIABLE                      00891600
&XDATAREA            SETC  ''          INITIALIZE XVARIABLE             00891700
                     AIF   (K'&BUFLIST LE 0).ZG225C                     00891800
&ZXDATAREA           SETC  'INPUT'     SET IN/OUTPUT                    00891900
&XDATAREA            SETC  'BUFLIST'   SET XVARIABLE                    00892000
&ZXBUFLIST           SETC  'INPUT'     SET IN/OUTPUT                    00892100
&XBUFLIST            SETC  '&BUFLIST(1)'        SET XVARIABLE PARM      00892200
                     AIF   (N'&BUFLIST GT 1).ZG225A                     00892300
&XBUFLIST            SETC  '&BUFLIST'  SET XVARIABLE PARM               00892400
.ZG225A              AIF   (N'&BUFLIST LE 1).ZG225B  CK NUM             00892500
&ZMS                 SETC  '"BUFLIST='          *KPOSA* MNOTE           00892600
&ZMS                 SETC  '&ZMS.&BUFLIST"'                             00892700
&ZMS                 SETC  '&ZMS "BUFLIST"'                             00892800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00892900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00893000
.ZG225B              AIF   (K'&XBUFLIST GT 0).ZG225C  ONE PARM          00893100
&ZXDATAREA           SETC  ''          RESET IN/OUTPUT                  00893200
&ZXBUFLIST           SETC  ''          RESET IN/OUTPUT                  00893300
&ZMS                 SETC  ' '         *KRQDA*                          00893400
&ZMS                 SETC  '&ZMS "BUFLIST" KEY AND ITS'                 00893500
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00893600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00893700
.ZG225C              ANOP  ,                                            00893800
.*----------------------------------------------------------------***   00893900
.***AG.KMEKY02 NAME, OPT INPUT, ME KEYS -XVARIABLE                      00894000
                     AIF   (K'&BUFFER LE 0).ZG253D  NO ME KEY           00894100
                     AIF   (N'&BUFFER LE 1).ZG253A  CK NUM              00894200
&ZMS                 SETC  '"BUFFER='  *KPOSA* MNOTE                    00894300
&ZMS                 SETC  '&ZMS.&BUFFER"'                              00894400
&ZMS                 SETC  '&ZMS "BUFFER"'                              00894500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00894600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00894700
.ZG253A              AIF   (K'&XDATAREA LE 0).ZG253B                    00894800
&ZMS                 SETC  '"BUFFER'   *KMEKA* MNOTE                    00894900
&ZMS                 SETC  '&ZMS.=&BUFFER"'                             00895000
&ZMS                 SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'        00895100
&ZMS                 SETC  '&ZMS "&XDATAREA"'                           00895200
                     MNOTE 8,' &ZMS KEY.'                               00895300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00895400
                     AGO   .ZG253D                                      00895500
.*                                                                      00895600
.ZG253B              ANOP  ,                                            00895700
&ZXDATAREA           SETC  'INPUT'     SET IN/OUTPUT                    00895800
&XDATAREA            SETC  'BUFFER'    SET XVARIABLE                    00895900
&ZXBUFFER            SETC  'INPUT'     SET IN/OUTPUT                    00896000
&XBUFFER             SETC  '&BUFFER(1)'         SET XVARIABLE PARM      00896100
                     AIF   (N'&BUFFER GT 1).ZG253C                      00896200
&XBUFFER             SETC  '&BUFFER'   SET XVARIABLE PARM               00896300
.ZG253C              AIF   (K'&XBUFFER GT 0).ZG253D  ONE PARM           00896400
&ZXDATAREA           SETC  ''          RESET IN/OUTPUT                  00896500
&ZXBUFFER            SETC  ''          RESET IN/OUTPUT                  00896600
&ZMS                 SETC  ' '         *KRQDA*                          00896700
&ZMS                 SETC  '&ZMS "BUFFER" KEY AND ITS'                  00896800
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00896900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00897000
.ZG253D              ANOP  ,                                            00897100
.*------------------------------------------------------------------    00897200
.***AG.KMEKY07 NAME, OPT INPUT, ME KEYS -CHECK IF KEY ENTERED           00897300
                     AIF   (K'&XDATAREA GT 0).ZG265B                    00897400
&ZXDATAREA           SETC  'INPUT'     SET IN/OUTPUT                    00897500
&XDATAREA            SETC  'BUFLIST'   SET DEFAULT                      00897600
&ZXBUFLIST           SETC  'INPUT'     SET IN/OUTPUT                    00897700
&XBUFLIST            SETC  '0'         SET DEFAULT PARM                 00897800
.ZG265B              ANOP  ,                                            00897900
.*-------------------------------------------------------------------   00898000
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00898100
                     AIF   (K'&ZXBUFFER LE 0).ZG265R  NOT I/O           00898200
                     AIF   ('&XBUFFER'(1,1) NE '(').ZG265R              00898300
&ZCGPR               SETC  '&XBUFFER'(2,K'&XBUFFER-2)                   00898400
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG265P                00898500
                     AIF   (K'&ZCGPR GT 2).ZG265Q                       00898600
                     AIF   ('&ZCGPR' EQ '0').ZG265Q                     00898700
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00898800
                     AIF   (T'&ZCGPR NE 'N').ZG265Q  INVALID REG NAME   00898900
.ZG265P              ANOP  ,                                            00899000
                     AIF   (T'&ZCGPR NE 'N').ZG265R  NON NUMERIC        00899100
                     AIF   ('&ZCGPR' LT '2').ZG265Q                     00899200
                     AIF   ('&ZCGPR' LE '12').ZG265R                    00899300
.ZG265Q              ANOP  ,                                            00899400
&ZMS                 SETC  '"BUFFER='  *KGPRA* MNOTE                    00899500
&ZMS                 SETC  '&ZMS.&BUFFER"'                              00899600
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00899700
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00899800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00899900
.ZG265R              ANOP  ,                                            00900000
.*-------------------------------------------------------------------   00900100
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           00900200
.ZG225               AIF   ('&XDATAREA' NE 'BUFLIST').ZG253             00900300
.*-------------------------------------------------------------------   00900400
.***AG.KMEKY14 NAME, OPT INPUT, ME KEYS -DISALLOWED KEYS                00900500
&ZCVAL               SETC ''           ERROR KEY FIELD                  00900600
.ZG225I0             AIF   (K'&BUFSIZE LE 0).ZG225I1                    00900700
&ZCVAL               SETC '&ZCVAL BUFSIZE'      DISALLOWED KEY          00900800
.ZG225I1             AIF   (K'&ZCVAL LE 0).ZG225J  KEY                  00900900
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00901000
&ZMS                 SETC  '"BUFLIST'  *KMEIA* MNOTE                    00901100
&ZMS                 SETC  '&ZMS.=&BUFLIST"'                            00901200
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00901300
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00901400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00901500
.ZG225J              ANOP  ,                                            00901600
.*-------------------------------------------------------------------   00901700
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00901800
                     AIF   (K'&ZXBUFLIST LE 0).ZG225R  NOT I/O          00901900
                     AIF   ('&XBUFLIST'(1,1) NE '(').ZG225R             00902000
&ZCGPR               SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                 00902100
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG225P                00902200
                     AIF   (K'&ZCGPR GT 2).ZG225Q                       00902300
                     AIF   ('&ZCGPR' EQ '0').ZG225Q                     00902400
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00902500
                     AIF   (T'&ZCGPR NE 'N').ZG225Q  INVALID REG NAME   00902600
.ZG225P              ANOP  ,                                            00902700
                     AIF   (T'&ZCGPR NE 'N').ZG225R  NON NUMERIC        00902800
                     AIF   ('&ZCGPR' LT '2').ZG225Q                     00902900
                     AIF   ('&ZCGPR' LE '12').ZG225R                    00903000
.ZG225Q              ANOP  ,                                            00903100
&ZMS                 SETC  '"BUFLIST='          *KGPRA* MNOTE           00903200
&ZMS                 SETC  '&ZMS.&BUFLIST"'                             00903300
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00903400
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00903500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00903600
.ZG225R              ANOP  ,                                            00903700
.*------------------------------------------------------------------    00903800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00903900
&XBUFADDRTYPE        SETC  ''          INITIALIZE XVARIABLE             00904000
.*-------------------------------------------------------------------   00904100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00904200
.ZG228               ANOP  ,                                            00904300
                     AIF   (K'&BUFADDRTYPE(1) LE 0).ZG228A              00904400
&ZTLC                SETC 'VIRTUAL'                                     00904500
                     AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG240         00904600
&XBUFADDRTYPE        SETC  'VIRTUAL'   SET KEYWORD                      00904700
                     AIF   (N'&BUFADDRTYPE LE 1).ZG228A  CK NUM         00904800
&ZMS                 SETC  '"BUFADDRTYPE='      *KPOSA* MNOTE           00904900
&ZMS                 SETC  '&ZMS.&BUFADDRTYPE"'                         00905000
&ZMS                 SETC  '&ZMS "BUFADDRTYPE"'                         00905100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00905200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00905300
.ZG228A              ANOP  ,                                            00905400
.*------------------------------------------------------------------    00905500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00905600
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00905700
.ZG228A0             AIF   (K'&BUFADDRSIZE LE 0).ZG228A1  OK            00905800
&ZCVAL               SETC '&ZCVAL BUFADDRSIZE'  INCORRECT KEY USED      00905900
.ZG228A1             AIF   (K'&ZCVAL LE 0).ZG228A2  OK                  00906000
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00906100
&ZMS                 SETC  '"BUFADDRTYPE'       *KMEIA* MNOTE           00906200
&ZMS                 SETC  '&ZMS.=&BUFADDRTYPE"'                        00906300
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00906400
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00906500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00906600
.ZG228A2             ANOP  ,                                            00906700
.*------------------------------------------------------------------    00906800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00906900
&XPAGEABLE           SETC  ''          INITIALIZE XVARIABLE             00907000
.*-------------------------------------------------------------------   00907100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00907200
.ZG231               ANOP  ,                                            00907300
                     AIF   (K'&PAGEABLE(1) LE 0).ZG231A                 00907400
&ZTLC                SETC 'YES'                                         00907500
                     AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG235            00907600
&XPAGEABLE           SETC  'YES'       SET KEYWORD                      00907700
                     AIF   (N'&PAGEABLE LE 1).ZG231A  CK NUM            00907800
&ZMS                 SETC  '"PAGEABLE='         *KPOSA* MNOTE           00907900
&ZMS                 SETC  '&ZMS.&PAGEABLE"'                            00908000
&ZMS                 SETC  '&ZMS "PAGEABLE"'                            00908100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00908200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00908300
.ZG231A              ANOP  ,                                            00908400
.*----------------------------------------------------------------***   00908500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00908600
                     AIF   (N'&BUFSTGKEY LE 1).ZG233A  CK NUM           00908700
&ZMS                 SETC  '"BUFSTGKEY='        *KPOSA* MNOTE           00908800
&ZMS                 SETC  '&ZMS.&BUFSTGKEY"'                           00908900
&ZMS                 SETC  '&ZMS "BUFSTGKEY"'                           00909000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00909100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00909200
.ZG233A              ANOP  ,                                            00909300
.*-------------------------------------------------------------------   00909400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00909500
&ZXBUFSTGKEY         SETC  'INPUT'     SET IN/OUTPUT                    00909600
&XBUFSTGKEY          SETC  'CALLERS_KEY'                                00909700
                     AIF   (K'&BUFSTGKEY(1) LE 0).ZG233B  PARM          00909800
&XBUFSTGKEY          SETC  '&BUFSTGKEY(1)'      SET XVARIABLE           00909900
                     AIF   (N'&BUFSTGKEY GT 1).ZG233B  MULTI PARMS      00910000
&XBUFSTGKEY          SETC  '&BUFSTGKEY'         SET XVARIABLE           00910100
.ZG233B              ANOP  ,                                            00910200
.*-------------------------------------------------------------------   00910300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00910400
                     AIF   (K'&ZXBUFSTGKEY LE 0).ZG233R  NOT I/O        00910500
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG233R                  00910600
                     AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG233R           00910700
&ZCGPR               SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)             00910800
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG233P                00910900
                     AIF   (K'&ZCGPR GT 2).ZG233Q                       00911000
                     AIF   ('&ZCGPR' EQ '0').ZG233Q                     00911100
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00911200
                     AIF   (T'&ZCGPR NE 'N').ZG233Q  INVALID REG NAME   00911300
.ZG233P              ANOP  ,                                            00911400
                     AIF   (T'&ZCGPR NE 'N').ZG233R  NON NUMERIC        00911500
                     AIF   ('&ZCGPR' LT '2').ZG233Q                     00911600
                     AIF   ('&ZCGPR' LE '12').ZG233R                    00911700
.ZG233Q              ANOP  ,                                            00911800
&ZMS                 SETC  '"BUFSTGKEY='        *KGPRA* MNOTE           00911900
&ZMS                 SETC  '&ZMS.&BUFSTGKEY"'                           00912000
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00912100
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00912200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00912300
.ZG233R              ANOP  ,                                            00912400
.*-------------------------------------------------------------------   00912500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00912600
.ZG235               ANOP  ,                                            00912700
&ZTLC                SETC 'NO'                                          00912800
                     AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG236            00912900
&XPAGEABLE           SETC  'NO'        SET KEYWORD                      00913000
                     AIF   (N'&PAGEABLE LE 1).ZG235A  CK NUM            00913100
&ZMS                 SETC  '"PAGEABLE='         *KPOSA* MNOTE           00913200
&ZMS                 SETC  '&ZMS.&PAGEABLE"'                            00913300
&ZMS                 SETC  '&ZMS "PAGEABLE"'                            00913400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00913500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00913600
.ZG235A              ANOP  ,                                            00913700
.*------------------------------------------------------------------    00913800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00913900
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00914000
.ZG235A0             AIF   (K'&BUFSTGKEY LE 0).ZG235A1  OK              00914100
&ZCVAL               SETC '&ZCVAL BUFSTGKEY'    INCORRECT KEY USED      00914200
.ZG235A1             AIF   (K'&ZCVAL LE 0).ZG235A2  OK                  00914300
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00914400
&ZMS                 SETC  '"PAGEABLE'          *KMEIA* MNOTE           00914500
&ZMS                 SETC  '&ZMS.=&PAGEABLE"'                           00914600
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00914700
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00914800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00914900
.ZG235A2             ANOP  ,                                            00915000
.*------------------------------------------------------------------    00915100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00915200
.ZG236               ANOP  ,                                            00915300
&ZXPAGEABLE          SETC  'INPUT'     SET IN/OUTPUT                    00915400
                     AIF   (K'&XPAGEABLE GT 0).ZG236E  VALID ARG        00915500
                     AIF   (T'&PAGEABLE EQ 'O').ZG236D  OMITTED         00915600
&ZASYSLNDX           SETA  0                                            00915700
.ZG236A              ANOP  ,           POSITIONAL MACRO KEY             00915800
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00915900
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG236C            00916000
&ZTLC                SETC 'PAGEABLE'                                    00916100
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG236A   00916200
.ZG236B              ANOP  ,                                            00916300
&ZXPAGEABLE          SETC  ''          RESET IN/OUTPUT                  00916400
&ZMS                 SETC  'THE "PAGEABLE" KEY'  *KOPTA* MNOTE          00916500
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00916600
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00916700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00916800
                     AGO   .ZG236E                                      00916900
.ZG236C              ANOP  ,                                            00917000
&ZXPAGEABLE          SETC  ''          RESET IN/OUTPUT                  00917100
&ZMS                 SETC  '"PAGEABLE='         *KUKWA* MNOTE           00917200
&ZMS                 SETC  '&ZMS.&PAGEABLE"'                            00917300
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00917400
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00917500
&ZMS                 SETC  '&ZMS "YES"'                                 00917600
&ZMS                 SETC  '&ZMS OR "NO".'                              00917700
                     MNOTE 8,' &ZMS '                                   00917800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00917900
                     AGO   .ZG236E                                      00918000
.ZG236D              ANOP  ,                                            00918100
&XPAGEABLE           SETC  'YES'       SET DEFAULT KEYWORD              00918200
.ZG236E              ANOP  ,                                            00918300
.*----------------------------------------------------------------***   00918400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00918500
                     AIF   (N'&BUFALET LE 1).ZG238A  CK NUM             00918600
&ZMS                 SETC  '"BUFALET='          *KPOSA* MNOTE           00918700
&ZMS                 SETC  '&ZMS.&BUFALET"'                             00918800
&ZMS                 SETC  '&ZMS "BUFALET"'                             00918900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00919000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00919100
.ZG238A              ANOP  ,                                            00919200
.*-------------------------------------------------------------------   00919300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00919400
&ZXBUFALET           SETC  'INPUT'     SET IN/OUTPUT                    00919500
&XBUFALET            SETC  'NO_BUFALET'                                 00919600
                     AIF   (K'&BUFALET(1) LE 0).ZG238B  PARM            00919700
&XBUFALET            SETC  '&BUFALET(1)'        SET XVARIABLE           00919800
                     AIF   (N'&BUFALET GT 1).ZG238B  MULTI PARMS        00919900
&XBUFALET            SETC  '&BUFALET'  SET XVARIABLE                    00920000
.ZG238B              ANOP  ,                                            00920100
.*-------------------------------------------------------------------   00920200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00920300
                     AIF   (K'&ZXBUFALET LE 0).ZG238R  NOT I/O          00920400
         AIF   ('&XBUFALET' EQ 'NO_BUFALET').ZG238R                     00920500
                     AIF   ('&XBUFALET'(1,1) NE '(').ZG238R             00920600
&ZCGPR               SETC  '&XBUFALET'(2,K'&XBUFALET-2)                 00920700
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG238P                00920800
                     AIF   (K'&ZCGPR GT 2).ZG238Q                       00920900
                     AIF   ('&ZCGPR' EQ '0').ZG238Q                     00921000
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00921100
                     AIF   (T'&ZCGPR NE 'N').ZG238Q  INVALID REG NAME   00921200
.ZG238P              ANOP  ,                                            00921300
                     AIF   (T'&ZCGPR NE 'N').ZG238R  NON NUMERIC        00921400
                     AIF   ('&ZCGPR' LT '2').ZG238Q                     00921500
                     AIF   ('&ZCGPR' LE '12').ZG238R                    00921600
.ZG238Q              ANOP  ,                                            00921700
&ZMS                 SETC  '"BUFALET='          *KGPRA* MNOTE           00921800
&ZMS                 SETC  '&ZMS.&BUFALET"'                             00921900
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00922000
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00922100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00922200
.ZG238R              ANOP  ,                                            00922300
.*-------------------------------------------------------------------   00922400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00922500
.ZG240               ANOP  ,                                            00922600
&ZTLC                SETC 'REAL'                                        00922700
                     AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG246         00922800
&XBUFADDRTYPE        SETC  'REAL'      SET KEYWORD                      00922900
                     AIF   (N'&BUFADDRTYPE LE 1).ZG240A  CK NUM         00923000
&ZMS                 SETC  '"BUFADDRTYPE='      *KPOSA* MNOTE           00923100
&ZMS                 SETC  '&ZMS.&BUFADDRTYPE"'                         00923200
&ZMS                 SETC  '&ZMS "BUFADDRTYPE"'                         00923300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00923400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00923500
.ZG240A              ANOP  ,                                            00923600
.*------------------------------------------------------------------    00923700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00923800
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00923900
.ZG240A0             AIF   (K'&PAGEABLE LE 0).ZG240A1  OK               00924000
&ZCVAL               SETC '&ZCVAL PAGEABLE'     INCORRECT KEY USED      00924100
.ZG240A1             AIF   (K'&BUFSTGKEY LE 0).ZG240A2  OK              00924200
&ZCVAL               SETC '&ZCVAL BUFSTGKEY'    INCORRECT KEY USED      00924300
.ZG240A2             AIF   (K'&BUFALET LE 0).ZG240A3  OK                00924400
&ZCVAL               SETC '&ZCVAL BUFALET'      INCORRECT KEY USED      00924500
.ZG240A3             AIF   (K'&ZCVAL LE 0).ZG240A4  OK                  00924600
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00924700
&ZMS                 SETC  '"BUFADDRTYPE'       *KMEIA* MNOTE           00924800
&ZMS                 SETC  '&ZMS.=&BUFADDRTYPE"'                        00924900
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00925000
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00925100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00925200
.ZG240A4             ANOP  ,                                            00925300
.*------------------------------------------------------------------    00925400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00925500
&XBUFADDRSIZE        SETC  ''          INITIALIZE XVARIABLE             00925600
.*-------------------------------------------------------------------   00925700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00925800
.ZG243               ANOP  ,                                            00925900
                     AIF   (K'&BUFADDRSIZE(1) LE 0).ZG243A              00926000
&ZTLC                SETC '31'                                          00926100
                     AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG244         00926200
&XBUFADDRSIZE        SETC  '31'        SET KEYWORD                      00926300
                     AIF   (N'&BUFADDRSIZE LE 1).ZG243A  CK NUM         00926400
&ZMS                 SETC  '"BUFADDRSIZE='      *KPOSA* MNOTE           00926500
&ZMS                 SETC  '&ZMS.&BUFADDRSIZE"'                         00926600
&ZMS                 SETC  '&ZMS "BUFADDRSIZE"'                         00926700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00926800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00926900
.ZG243A              ANOP  ,                                            00927000
.*-------------------------------------------------------------------   00927100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00927200
.ZG244               ANOP  ,                                            00927300
&ZTLC                SETC '64'                                          00927400
                     AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG245         00927500
&XBUFADDRSIZE        SETC  '64'        SET KEYWORD                      00927600
                     AIF   (N'&BUFADDRSIZE LE 1).ZG244A  CK NUM         00927700
&ZMS                 SETC  '"BUFADDRSIZE='      *KPOSA* MNOTE           00927800
&ZMS                 SETC  '&ZMS.&BUFADDRSIZE"'                         00927900
&ZMS                 SETC  '&ZMS "BUFADDRSIZE"'                         00928000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00928100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00928200
.ZG244A              ANOP  ,                                            00928300
.*------------------------------------------------------------------    00928400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00928500
.ZG245               ANOP  ,                                            00928600
&ZXBUFADDRSIZE       SETC  'INPUT'     SET IN/OUTPUT                    00928700
                     AIF   (K'&XBUFADDRSIZE GT 0).ZG245E  VALID ARG     00928800
                     AIF   (T'&BUFADDRSIZE EQ 'O').ZG245D  OMITTED      00928900
&ZASYSLNDX           SETA  0                                            00929000
.ZG245A              ANOP  ,           POSITIONAL MACRO KEY             00929100
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00929200
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG245C            00929300
&ZTLC                SETC 'BUFADDRSIZE'                                 00929400
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG245A   00929500
.ZG245B              ANOP  ,                                            00929600
&ZXBUFADDRSIZE       SETC  ''          RESET IN/OUTPUT                  00929700
&ZMS                 SETC  'THE "BUFADDRSIZE" KEY'  *KOPTA* MNOTE       00929800
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00929900
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00930000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00930100
                     AGO   .ZG245E                                      00930200
.ZG245C              ANOP  ,                                            00930300
&ZXBUFADDRSIZE       SETC  ''          RESET IN/OUTPUT                  00930400
&ZMS                 SETC  '"BUFADDRSIZE='      *KUKWA* MNOTE           00930500
&ZMS                 SETC  '&ZMS.&BUFADDRSIZE"'                         00930600
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00930700
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00930800
&ZMS                 SETC  '&ZMS "31"'                                  00930900
&ZMS                 SETC  '&ZMS OR "64".'                              00931000
                     MNOTE 8,' &ZMS '                                   00931100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00931200
                     AGO   .ZG245E                                      00931300
.ZG245D              ANOP  ,                                            00931400
&XBUFADDRSIZE        SETC  '31'        SET DEFAULT KEYWORD              00931500
.ZG245E              ANOP  ,                                            00931600
.*------------------------------------------------------------------    00931700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00931800
.ZG246               ANOP  ,                                            00931900
&ZXBUFADDRTYPE       SETC  'INPUT'     SET IN/OUTPUT                    00932000
                     AIF   (K'&XBUFADDRTYPE GT 0).ZG246E  VALID ARG     00932100
                     AIF   (T'&BUFADDRTYPE EQ 'O').ZG246D  OMITTED      00932200
&ZASYSLNDX           SETA  0                                            00932300
.ZG246A              ANOP  ,           POSITIONAL MACRO KEY             00932400
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00932500
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG246C            00932600
&ZTLC                SETC 'BUFADDRTYPE'                                 00932700
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG246A   00932800
.ZG246B              ANOP  ,                                            00932900
&ZXBUFADDRTYPE       SETC  ''          RESET IN/OUTPUT                  00933000
&ZMS                 SETC  'THE "BUFADDRTYPE" KEY'  *KOPTA* MNOTE       00933100
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00933200
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00933300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00933400
                     AGO   .ZG246E                                      00933500
.ZG246C              ANOP  ,                                            00933600
&ZXBUFADDRTYPE       SETC  ''          RESET IN/OUTPUT                  00933700
&ZMS                 SETC  '"BUFADDRTYPE='      *KUKWA* MNOTE           00933800
&ZMS                 SETC  '&ZMS.&BUFADDRTYPE"'                         00933900
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00934000
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00934100
&ZMS                 SETC  '&ZMS "VIRTUAL"'                             00934200
&ZMS                 SETC  '&ZMS OR "REAL".'                            00934300
                     MNOTE 8,' &ZMS '                                   00934400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00934500
                     AGO   .ZG246E                                      00934600
.ZG246D              ANOP  ,                                            00934700
&XBUFADDRTYPE        SETC  'VIRTUAL'   SET DEFAULT KEYWORD              00934800
.ZG246E              ANOP  ,                                            00934900
.*----------------------------------------------------------------***   00935000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00935100
                     AIF   (N'&BUFNUM LE 1).ZG248A  CK NUM              00935200
&ZMS                 SETC  '"BUFNUM='  *KPOSA* MNOTE                    00935300
&ZMS                 SETC  '&ZMS.&BUFNUM"'                              00935400
&ZMS                 SETC  '&ZMS "BUFNUM"'                              00935500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00935600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00935700
.ZG248A              ANOP  ,                                            00935800
.*-------------------------------------------------------------------   00935900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00936000
&ZXBUFNUM            SETC  'INPUT'     SET IN/OUTPUT                    00936100
&XBUFNUM             SETC  'NO_BUFNUM'                                  00936200
                     AIF   (K'&BUFNUM(1) LE 0).ZG248B  PARM             00936300
&XBUFNUM             SETC  '&BUFNUM(1)'         SET XVARIABLE           00936400
                     AIF   (N'&BUFNUM GT 1).ZG248B  MULTI PARMS         00936500
&XBUFNUM             SETC  '&BUFNUM'   SET XVARIABLE                    00936600
.ZG248B              ANOP  ,                                            00936700
.*-------------------------------------------------------------------   00936800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00936900
                     AIF   (K'&ZXBUFNUM LE 0).ZG248R  NOT I/O           00937000
         AIF   ('&XBUFNUM' EQ 'NO_BUFNUM').ZG248R                       00937100
                     AIF   ('&XBUFNUM'(1,1) NE '(').ZG248R              00937200
&ZCGPR               SETC  '&XBUFNUM'(2,K'&XBUFNUM-2)                   00937300
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG248P                00937400
                     AIF   (K'&ZCGPR GT 2).ZG248Q                       00937500
                     AIF   ('&ZCGPR' EQ '0').ZG248Q                     00937600
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00937700
                     AIF   (T'&ZCGPR NE 'N').ZG248Q  INVALID REG NAME   00937800
.ZG248P              ANOP  ,                                            00937900
                     AIF   (T'&ZCGPR NE 'N').ZG248R  NON NUMERIC        00938000
                     AIF   ('&ZCGPR' LT '2').ZG248Q                     00938100
                     AIF   ('&ZCGPR' LE '12').ZG248R                    00938200
.ZG248Q              ANOP  ,                                            00938300
&ZMS                 SETC  '"BUFNUM='  *KGPRA* MNOTE                    00938400
&ZMS                 SETC  '&ZMS.&BUFNUM"'                              00938500
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00938600
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00938700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00938800
.ZG248R              ANOP  ,                                            00938900
.*----------------------------------------------------------------***   00939000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00939100
                     AIF   (N'&BUFINCRNUM LE 1).ZG251A  CK NUM          00939200
&ZMS                 SETC  '"BUFINCRNUM='       *KPOSA* MNOTE           00939300
&ZMS                 SETC  '&ZMS.&BUFINCRNUM"'                          00939400
&ZMS                 SETC  '&ZMS "BUFINCRNUM"'                          00939500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00939600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00939700
.ZG251A              ANOP  ,                                            00939800
.*-------------------------------------------------------------------   00939900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00940000
&ZXBUFINCRNUM        SETC  'INPUT'     SET IN/OUTPUT                    00940100
&XBUFINCRNUM         SETC  'NO_BUFINCRNUM'                              00940200
                     AIF   (K'&BUFINCRNUM(1) LE 0).ZG251B  PARM         00940300
&XBUFINCRNUM         SETC  '&BUFINCRNUM(1)'     SET XVARIABLE           00940400
                     AIF   (N'&BUFINCRNUM GT 1).ZG251B  MULTI PARMS     00940500
&XBUFINCRNUM         SETC  '&BUFINCRNUM'        SET XVARIABLE           00940600
.ZG251B              ANOP  ,                                            00940700
.*-------------------------------------------------------------------   00940800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00940900
                     AIF   (K'&ZXBUFINCRNUM LE 0).ZG251R  NOT I/O       00941000
         AIF   ('&XBUFINCRNUM' EQ 'NO_BUFINCRNUM').ZG251R               00941100
                     AIF   ('&XBUFINCRNUM'(1,1) NE '(').ZG251R          00941200
&ZCGPR               SETC  '&XBUFINCRNUM'(2,K'&XBUFINCRNUM-2)           00941300
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG251P                00941400
                     AIF   (K'&ZCGPR GT 2).ZG251Q                       00941500
                     AIF   ('&ZCGPR' EQ '0').ZG251Q                     00941600
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00941700
                     AIF   (T'&ZCGPR NE 'N').ZG251Q  INVALID REG NAME   00941800
.ZG251P              ANOP  ,                                            00941900
                     AIF   (T'&ZCGPR NE 'N').ZG251R  NON NUMERIC        00942000
                     AIF   ('&ZCGPR' LT '2').ZG251Q                     00942100
                     AIF   ('&ZCGPR' LE '12').ZG251R                    00942200
.ZG251Q              ANOP  ,                                            00942300
&ZMS                 SETC  '"BUFINCRNUM='       *KGPRA* MNOTE           00942400
&ZMS                 SETC  '&ZMS.&BUFINCRNUM"'                          00942500
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00942600
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00942700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00942800
.ZG251R              ANOP  ,                                            00942900
.*-------------------------------------------------------------------   00943000
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           00943100
.ZG253               AIF   ('&XDATAREA' NE 'BUFFER').ZG265              00943200
.*-------------------------------------------------------------------   00943300
.***AG.KMEKY14 NAME, OPT INPUT, ME KEYS -DISALLOWED KEYS                00943400
&ZCVAL               SETC ''           ERROR KEY FIELD                  00943500
.ZG253I0             AIF   (K'&BUFADDRTYPE LE 0).ZG253I1                00943600
&ZCVAL               SETC '&ZCVAL BUFADDRTYPE'  DISALLOWED KEY          00943700
.ZG253I1             AIF   (K'&BUFALET LE 0).ZG253I2                    00943800
&ZCVAL               SETC '&ZCVAL BUFALET'      DISALLOWED KEY          00943900
.ZG253I2             AIF   (K'&BUFADDRSIZE LE 0).ZG253I3                00944000
&ZCVAL               SETC '&ZCVAL BUFADDRSIZE'  DISALLOWED KEY          00944100
.ZG253I3             AIF   (K'&BUFNUM LE 0).ZG253I4                     00944200
&ZCVAL               SETC '&ZCVAL BUFNUM'       DISALLOWED KEY          00944300
.ZG253I4             AIF   (K'&BUFINCRNUM LE 0).ZG253I5                 00944400
&ZCVAL               SETC '&ZCVAL BUFINCRNUM'   DISALLOWED KEY          00944500
.ZG253I5             AIF   (K'&ZCVAL LE 0).ZG253J  KEY                  00944600
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00944700
&ZMS                 SETC  '"BUFFER'   *KMEIA* MNOTE                    00944800
&ZMS                 SETC  '&ZMS.=&BUFFER"'                             00944900
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00945000
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00945100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00945200
.ZG253J              ANOP  ,                                            00945300
.*-------------------------------------------------------------------   00945400
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00945500
                     AIF   (K'&ZXBUFFER LE 0).ZG253R  NOT I/O           00945600
                     AIF   ('&XBUFFER'(1,1) NE '(').ZG253R              00945700
&ZCGPR               SETC  '&XBUFFER'(2,K'&XBUFFER-2)                   00945800
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG253P                00945900
                     AIF   (K'&ZCGPR GT 2).ZG253Q                       00946000
                     AIF   ('&ZCGPR' EQ '0').ZG253Q                     00946100
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00946200
                     AIF   (T'&ZCGPR NE 'N').ZG253Q  INVALID REG NAME   00946300
.ZG253P              ANOP  ,                                            00946400
                     AIF   (T'&ZCGPR NE 'N').ZG253R  NON NUMERIC        00946500
                     AIF   ('&ZCGPR' LT '2').ZG253Q                     00946600
                     AIF   ('&ZCGPR' LE '12').ZG253R                    00946700
.ZG253Q              ANOP  ,                                            00946800
&ZMS                 SETC  '"BUFFER='  *KGPRA* MNOTE                    00946900
&ZMS                 SETC  '&ZMS.&BUFFER"'                              00947000
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00947100
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00947200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00947300
.ZG253R              ANOP  ,                                            00947400
.*------------------------------------------------------------------    00947500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00947600
&XPAGEABLE           SETC  ''          INITIALIZE XVARIABLE             00947700
.*-------------------------------------------------------------------   00947800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00947900
.ZG256               ANOP  ,                                            00948000
                     AIF   (K'&PAGEABLE(1) LE 0).ZG256A                 00948100
&ZTLC                SETC 'YES'                                         00948200
                     AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG260            00948300
&XPAGEABLE           SETC  'YES'       SET KEYWORD                      00948400
                     AIF   (N'&PAGEABLE LE 1).ZG256A  CK NUM            00948500
&ZMS                 SETC  '"PAGEABLE='         *KPOSA* MNOTE           00948600
&ZMS                 SETC  '&ZMS.&PAGEABLE"'                            00948700
&ZMS                 SETC  '&ZMS "PAGEABLE"'                            00948800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00948900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00949000
.ZG256A              ANOP  ,                                            00949100
.*----------------------------------------------------------------***   00949200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00949300
                     AIF   (N'&BUFSTGKEY LE 1).ZG258A  CK NUM           00949400
&ZMS                 SETC  '"BUFSTGKEY='        *KPOSA* MNOTE           00949500
&ZMS                 SETC  '&ZMS.&BUFSTGKEY"'                           00949600
&ZMS                 SETC  '&ZMS "BUFSTGKEY"'                           00949700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00949800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00949900
.ZG258A              ANOP  ,                                            00950000
.*-------------------------------------------------------------------   00950100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00950200
&ZXBUFSTGKEY         SETC  'INPUT'     SET IN/OUTPUT                    00950300
&XBUFSTGKEY          SETC  'CALLERS_KEY'                                00950400
                     AIF   (K'&BUFSTGKEY(1) LE 0).ZG258B  PARM          00950500
&XBUFSTGKEY          SETC  '&BUFSTGKEY(1)'      SET XVARIABLE           00950600
                     AIF   (N'&BUFSTGKEY GT 1).ZG258B  MULTI PARMS      00950700
&XBUFSTGKEY          SETC  '&BUFSTGKEY'         SET XVARIABLE           00950800
.ZG258B              ANOP  ,                                            00950900
.*-------------------------------------------------------------------   00951000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00951100
                     AIF   (K'&ZXBUFSTGKEY LE 0).ZG258R  NOT I/O        00951200
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG258R                  00951300
                     AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG258R           00951400
&ZCGPR               SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)             00951500
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG258P                00951600
                     AIF   (K'&ZCGPR GT 2).ZG258Q                       00951700
                     AIF   ('&ZCGPR' EQ '0').ZG258Q                     00951800
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00951900
                     AIF   (T'&ZCGPR NE 'N').ZG258Q  INVALID REG NAME   00952000
.ZG258P              ANOP  ,                                            00952100
                     AIF   (T'&ZCGPR NE 'N').ZG258R  NON NUMERIC        00952200
                     AIF   ('&ZCGPR' LT '2').ZG258Q                     00952300
                     AIF   ('&ZCGPR' LE '12').ZG258R                    00952400
.ZG258Q              ANOP  ,                                            00952500
&ZMS                 SETC  '"BUFSTGKEY='        *KGPRA* MNOTE           00952600
&ZMS                 SETC  '&ZMS.&BUFSTGKEY"'                           00952700
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00952800
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00952900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00953000
.ZG258R              ANOP  ,                                            00953100
.*-------------------------------------------------------------------   00953200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00953300
.ZG260               ANOP  ,                                            00953400
&ZTLC                SETC 'NO'                                          00953500
                     AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG261            00953600
&XPAGEABLE           SETC  'NO'        SET KEYWORD                      00953700
                     AIF   (N'&PAGEABLE LE 1).ZG260A  CK NUM            00953800
&ZMS                 SETC  '"PAGEABLE='         *KPOSA* MNOTE           00953900
&ZMS                 SETC  '&ZMS.&PAGEABLE"'                            00954000
&ZMS                 SETC  '&ZMS "PAGEABLE"'                            00954100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00954200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00954300
.ZG260A              ANOP  ,                                            00954400
.*------------------------------------------------------------------    00954500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00954600
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00954700
.ZG260A0             AIF   (K'&BUFSTGKEY LE 0).ZG260A1  OK              00954800
&ZCVAL               SETC '&ZCVAL BUFSTGKEY'    INCORRECT KEY USED      00954900
.ZG260A1             AIF   (K'&ZCVAL LE 0).ZG260A2  OK                  00955000
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00955100
&ZMS                 SETC  '"PAGEABLE'          *KMEIA* MNOTE           00955200
&ZMS                 SETC  '&ZMS.=&PAGEABLE"'                           00955300
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00955400
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00955500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00955600
.ZG260A2             ANOP  ,                                            00955700
.*------------------------------------------------------------------    00955800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00955900
.ZG261               ANOP  ,                                            00956000
&ZXPAGEABLE          SETC  'INPUT'     SET IN/OUTPUT                    00956100
                     AIF   (K'&XPAGEABLE GT 0).ZG261E  VALID ARG        00956200
                     AIF   (T'&PAGEABLE EQ 'O').ZG261D  OMITTED         00956300
&ZASYSLNDX           SETA  0                                            00956400
.ZG261A              ANOP  ,           POSITIONAL MACRO KEY             00956500
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00956600
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG261C            00956700
&ZTLC                SETC 'PAGEABLE'                                    00956800
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG261A   00956900
.ZG261B              ANOP  ,                                            00957000
&ZXPAGEABLE          SETC  ''          RESET IN/OUTPUT                  00957100
&ZMS                 SETC  'THE "PAGEABLE" KEY'  *KOPTA* MNOTE          00957200
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00957300
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00957400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00957500
                     AGO   .ZG261E                                      00957600
.ZG261C              ANOP  ,                                            00957700
&ZXPAGEABLE          SETC  ''          RESET IN/OUTPUT                  00957800
&ZMS                 SETC  '"PAGEABLE='         *KUKWA* MNOTE           00957900
&ZMS                 SETC  '&ZMS.&PAGEABLE"'                            00958000
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00958100
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00958200
&ZMS                 SETC  '&ZMS "YES"'                                 00958300
&ZMS                 SETC  '&ZMS OR "NO".'                              00958400
                     MNOTE 8,' &ZMS '                                   00958500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00958600
                     AGO   .ZG261E                                      00958700
.ZG261D              ANOP  ,                                            00958800
&XPAGEABLE           SETC  'YES'       SET DEFAULT KEYWORD              00958900
.ZG261E              ANOP  ,                                            00959000
.*----------------------------------------------------------------***   00959100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00959200
                     AIF   (N'&BUFSIZE LE 1).ZG263A  CK NUM             00959300
&ZMS                 SETC  '"BUFSIZE='          *KPOSA* MNOTE           00959400
&ZMS                 SETC  '&ZMS.&BUFSIZE"'                             00959500
&ZMS                 SETC  '&ZMS "BUFSIZE"'                             00959600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00959700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00959800
.ZG263A              ANOP  ,                                            00959900
.*-------------------------------------------------------------------   00960000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00960100
&ZXBUFSIZE           SETC  'INPUT'     SET IN/OUTPUT                    00960200
&XBUFSIZE            SETC  '&BUFSIZE(1)'        SET XVARIABLE           00960300
                     AIF   (N'&BUFSIZE GT 1).ZG263B  MULTI PARMS        00960400
&XBUFSIZE            SETC  '&BUFSIZE'  SET XVARIABLE                    00960500
.ZG263B              AIF   (K'&BUFSIZE(1) GT 0).ZG263C                  00960600
&ZXBUFSIZE           SETC  ''          RESET IN/OUTPUT                  00960700
&ZMS                 SETC  'WHEN "BUFFER" IS SPECIFIED'  *KRQDA*        00960800
&ZMS                 SETC  '&ZMS , "BUFSIZE" KEY AND ITS'               00960900
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00961000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00961100
.ZG263C              ANOP  ,                                            00961200
.*-------------------------------------------------------------------   00961300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00961400
                     AIF   (K'&ZXBUFSIZE LE 0).ZG263R  NOT I/O          00961500
                     AIF   ('&XBUFSIZE'(1,1) NE '(').ZG263R             00961600
&ZCGPR               SETC  '&XBUFSIZE'(2,K'&XBUFSIZE-2)                 00961700
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG263P                00961800
                     AIF   (K'&ZCGPR GT 2).ZG263Q                       00961900
                     AIF   ('&ZCGPR' EQ '0').ZG263Q                     00962000
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00962100
                     AIF   (T'&ZCGPR NE 'N').ZG263Q  INVALID REG NAME   00962200
.ZG263P              ANOP  ,                                            00962300
                     AIF   (T'&ZCGPR NE 'N').ZG263R  NON NUMERIC        00962400
                     AIF   ('&ZCGPR' LT '2').ZG263Q                     00962500
                     AIF   ('&ZCGPR' LE '12').ZG263R                    00962600
.ZG263Q              ANOP  ,                                            00962700
&ZMS                 SETC  '"BUFSIZE='          *KGPRA* MNOTE           00962800
&ZMS                 SETC  '&ZMS.&BUFSIZE"'                             00962900
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00963000
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00963100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00963200
.ZG263R              ANOP  ,                                            00963300
.*-------------------------------------------------------------------   00963400
.***AG.KMEKY15 NAME, OPT INPUT, ME KEYS -END                            00963500
.ZG265               ANOP  ,           END MUTUALLY EXCLUSIVE KEYS      00963600
.*----------------------------------------------------------------***   00963700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00963800
                     AIF   (N'&ADJAREA LE 1).ZG267A  CK NUM             00963900
&ZMS                 SETC  '"ADJAREA='          *KPOSA* MNOTE           00964000
&ZMS                 SETC  '&ZMS.&ADJAREA"'                             00964100
&ZMS                 SETC  '&ZMS "ADJAREA"'                             00964200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00964300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00964400
.ZG267A              ANOP  ,                                            00964500
.*-------------------------------------------------------------------   00964600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00964700
&ZXADJAREA           SETC  'INPUT'     SET IN/OUTPUT                    00964800
&XADJAREA            SETC  'NO_ADJAREA'                                 00964900
                     AIF   (K'&ADJAREA(1) LE 0).ZG267B  PARM            00965000
&XADJAREA            SETC  '&ADJAREA(1)'        SET XVARIABLE           00965100
                     AIF   (N'&ADJAREA GT 1).ZG267B  MULTI PARMS        00965200
&XADJAREA            SETC  '&ADJAREA'  SET XVARIABLE                    00965300
.ZG267B              ANOP  ,                                            00965400
.*-------------------------------------------------------------------   00965500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00965600
                     AIF   (K'&ZXADJAREA LE 0).ZG267R  NOT I/O          00965700
         AIF   ('&XADJAREA' EQ 'NO_ADJAREA').ZG267R                     00965800
                     AIF   ('&XADJAREA'(1,1) NE '(').ZG267R             00965900
&ZCGPR               SETC  '&XADJAREA'(2,K'&XADJAREA-2)                 00966000
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG267P                00966100
                     AIF   (K'&ZCGPR GT 2).ZG267Q                       00966200
                     AIF   ('&ZCGPR' EQ '0').ZG267Q                     00966300
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00966400
                     AIF   (T'&ZCGPR NE 'N').ZG267Q  INVALID REG NAME   00966500
.ZG267P              ANOP  ,                                            00966600
                     AIF   (T'&ZCGPR NE 'N').ZG267R  NON NUMERIC        00966700
                     AIF   ('&ZCGPR' LT '2').ZG267Q                     00966800
                     AIF   ('&ZCGPR' LE '12').ZG267R                    00966900
.ZG267Q              ANOP  ,                                            00967000
&ZMS                 SETC  '"ADJAREA='          *KGPRA* MNOTE           00967100
&ZMS                 SETC  '&ZMS.&ADJAREA"'                             00967200
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00967300
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00967400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00967500
.ZG267R              ANOP  ,                                            00967600
.*----------------------------------------------------------------***   00967700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00967800
                     AIF   (N'&STGCLASS LE 1).ZG270A  CK NUM            00967900
&ZMS                 SETC  '"STGCLASS='         *KPOSA* MNOTE           00968000
&ZMS                 SETC  '&ZMS.&STGCLASS"'                            00968100
&ZMS                 SETC  '&ZMS "STGCLASS"'                            00968200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00968300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00968400
.ZG270A              ANOP  ,                                            00968500
.*-------------------------------------------------------------------   00968600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00968700
&ZXSTGCLASS          SETC  'INPUT'     SET IN/OUTPUT                    00968800
&XSTGCLASS           SETC  'NO_STGCLASS'                                00968900
                     AIF   (K'&STGCLASS(1) LE 0).ZG270B  PARM           00969000
&XSTGCLASS           SETC  '&STGCLASS(1)'       SET XVARIABLE           00969100
                     AIF   (N'&STGCLASS GT 1).ZG270B  MULTI PARMS       00969200
&XSTGCLASS           SETC  '&STGCLASS'          SET XVARIABLE           00969300
.ZG270B              ANOP  ,                                            00969400
.*-------------------------------------------------------------------   00969500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00969600
                     AIF   (K'&ZXSTGCLASS LE 0).ZG270R  NOT I/O         00969700
         AIF   ('&XSTGCLASS' EQ 'NO_STGCLASS').ZG270R                   00969800
                     AIF   ('&XSTGCLASS'(1,1) NE '(').ZG270R            00969900
&ZCGPR               SETC  '&XSTGCLASS'(2,K'&XSTGCLASS-2)               00970000
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG270P                00970100
                     AIF   (K'&ZCGPR GT 2).ZG270Q                       00970200
                     AIF   ('&ZCGPR' EQ '0').ZG270Q                     00970300
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00970400
                     AIF   (T'&ZCGPR NE 'N').ZG270Q  INVALID REG NAME   00970500
.ZG270P              ANOP  ,                                            00970600
                     AIF   (T'&ZCGPR NE 'N').ZG270R  NON NUMERIC        00970700
                     AIF   ('&ZCGPR' LT '2').ZG270Q                     00970800
                     AIF   ('&ZCGPR' LE '12').ZG270R                    00970900
.ZG270Q              ANOP  ,                                            00971000
&ZMS                 SETC  '"STGCLASS='         *KGPRA* MNOTE           00971100
&ZMS                 SETC  '&ZMS.&STGCLASS"'                            00971200
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00971300
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00971400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00971500
.ZG270R              ANOP  ,                                            00971600
.*----------------------------------------------------------------***   00971700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00971800
                     AIF   (N'&COCLASS LE 1).ZG273A  CK NUM             00971900
&ZMS                 SETC  '"COCLASS='          *KPOSA* MNOTE           00972000
&ZMS                 SETC  '&ZMS.&COCLASS"'                             00972100
&ZMS                 SETC  '&ZMS "COCLASS"'                             00972200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00972300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00972400
.ZG273A              ANOP  ,                                            00972500
.*-------------------------------------------------------------------   00972600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00972700
&ZXCOCLASS           SETC  'INPUT'     SET IN/OUTPUT                    00972800
&XCOCLASS            SETC  'NO_COCLASS'                                 00972900
                     AIF   (K'&COCLASS(1) LE 0).ZG273B  PARM            00973000
&XCOCLASS            SETC  '&COCLASS(1)'        SET XVARIABLE           00973100
                     AIF   (N'&COCLASS GT 1).ZG273B  MULTI PARMS        00973200
&XCOCLASS            SETC  '&COCLASS'  SET XVARIABLE                    00973300
.ZG273B              ANOP  ,                                            00973400
.*-------------------------------------------------------------------   00973500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00973600
                     AIF   (K'&ZXCOCLASS LE 0).ZG273R  NOT I/O          00973700
         AIF   ('&XCOCLASS' EQ 'NO_COCLASS').ZG273R                     00973800
                     AIF   ('&XCOCLASS'(1,1) NE '(').ZG273R             00973900
&ZCGPR               SETC  '&XCOCLASS'(2,K'&XCOCLASS-2)                 00974000
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG273P                00974100
                     AIF   (K'&ZCGPR GT 2).ZG273Q                       00974200
                     AIF   ('&ZCGPR' EQ '0').ZG273Q                     00974300
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00974400
                     AIF   (T'&ZCGPR NE 'N').ZG273Q  INVALID REG NAME   00974500
.ZG273P              ANOP  ,                                            00974600
                     AIF   (T'&ZCGPR NE 'N').ZG273R  NON NUMERIC        00974700
                     AIF   ('&ZCGPR' LT '2').ZG273Q                     00974800
                     AIF   ('&ZCGPR' LE '12').ZG273R                    00974900
.ZG273Q              ANOP  ,                                            00975000
&ZMS                 SETC  '"COCLASS='          *KGPRA* MNOTE           00975100
&ZMS                 SETC  '&ZMS.&COCLASS"'                             00975200
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00975300
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00975400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00975500
.ZG273R              ANOP  ,                                            00975600
.*----------------------------------------------------------------***   00975700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00975800
                     AIF   (N'&VECTORINDEX LE 1).ZG276A  CK NUM         00975900
&ZMS                 SETC  '"VECTORINDEX='      *KPOSA* MNOTE           00976000
&ZMS                 SETC  '&ZMS.&VECTORINDEX"'                         00976100
&ZMS                 SETC  '&ZMS "VECTORINDEX"'                         00976200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00976300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00976400
.ZG276A              ANOP  ,                                            00976500
.*-------------------------------------------------------------------   00976600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00976700
&ZXVECTORINDEX       SETC  'INPUT'     SET IN/OUTPUT                    00976800
&XVECTORINDEX        SETC  'NO_VECTORINDEX'                             00976900
                     AIF   (K'&VECTORINDEX(1) LE 0).ZG276B  PARM        00977000
&XVECTORINDEX        SETC  '&VECTORINDEX(1)'    SET XVARIABLE           00977100
                     AIF   (N'&VECTORINDEX GT 1).ZG276B  MULTI PARMS    00977200
&XVECTORINDEX        SETC  '&VECTORINDEX'       SET XVARIABLE           00977300
.ZG276B              ANOP  ,                                            00977400
.*-------------------------------------------------------------------   00977500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00977600
                     AIF   (K'&ZXVECTORINDEX LE 0).ZG276R  NOT I/O      00977700
         AIF   ('&XVECTORINDEX' EQ 'NO_VECTORINDEX').ZG276R             00977800
                     AIF   ('&XVECTORINDEX'(1,1) NE '(').ZG276R         00977900
&ZCGPR               SETC  '&XVECTORINDEX'(2,K'&XVECTORINDEX-2)         00978000
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG276P                00978100
                     AIF   (K'&ZCGPR GT 2).ZG276Q                       00978200
                     AIF   ('&ZCGPR' EQ '0').ZG276Q                     00978300
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00978400
                     AIF   (T'&ZCGPR NE 'N').ZG276Q  INVALID REG NAME   00978500
.ZG276P              ANOP  ,                                            00978600
                     AIF   (T'&ZCGPR NE 'N').ZG276R  NON NUMERIC        00978700
                     AIF   ('&ZCGPR' LT '2').ZG276Q                     00978800
                     AIF   ('&ZCGPR' LE '12').ZG276R                    00978900
.ZG276Q              ANOP  ,                                            00979000
&ZMS                 SETC  '"VECTORINDEX='      *KGPRA* MNOTE           00979100
&ZMS                 SETC  '&ZMS.&VECTORINDEX"'                         00979200
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00979300
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00979400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00979500
.ZG276R              ANOP  ,                                            00979600
.*----------------------------------------------------------------***   00979700
.***AG.KMEKY01 NAME, OPT INPUT, ME KEYS -XVARIABLE                      00979800
&XRESTARTTOKEN       SETC  ''          INITIALIZE XVARIABLE             00979900
                     AIF   (K'&RESTOKEN LE 0).ZG279C                    00980000
&ZXRESTARTTOKEN      SETC  'INPUT'     SET IN/OUTPUT                    00980100
&XRESTARTTOKEN       SETC  'RESTOKEN'  SET XVARIABLE                    00980200
&ZXRESTOKEN          SETC  'INPUT'     SET IN/OUTPUT                    00980300
&XRESTOKEN           SETC  '&RESTOKEN(1)'       SET XVARIABLE PARM      00980400
                     AIF   (N'&RESTOKEN GT 1).ZG279A                    00980500
&XRESTOKEN           SETC  '&RESTOKEN'          SET XVARIABLE PARM      00980600
.ZG279A              AIF   (N'&RESTOKEN LE 1).ZG279B  CK NUM            00980700
&ZMS                 SETC  '"RESTOKEN='         *KPOSA* MNOTE           00980800
&ZMS                 SETC  '&ZMS.&RESTOKEN"'                            00980900
&ZMS                 SETC  '&ZMS "RESTOKEN"'                            00981000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00981100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00981200
.ZG279B              AIF   (K'&XRESTOKEN GT 0).ZG279C  ONE PARM         00981300
&ZXRESTARTTOKEN      SETC  ''          RESET IN/OUTPUT                  00981400
&ZXRESTOKEN          SETC  ''          RESET IN/OUTPUT                  00981500
&ZMS                 SETC  ' '         *KRQDA*                          00981600
&ZMS                 SETC  '&ZMS "RESTOKEN" KEY AND ITS'                00981700
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00981800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00981900
.ZG279C              ANOP  ,                                            00982000
.*----------------------------------------------------------------***   00982100
.***AG.KMEKY02 NAME, OPT INPUT, ME KEYS -XVARIABLE                      00982200
                     AIF   (K'&EXTRESTOKEN LE 0).ZG280D  NO ME KEY      00982300
                     AIF   (N'&EXTRESTOKEN LE 1).ZG280A  CK NUM         00982400
&ZMS                 SETC  '"EXTRESTOKEN='      *KPOSA* MNOTE           00982500
&ZMS                 SETC  '&ZMS.&EXTRESTOKEN"'                         00982600
&ZMS                 SETC  '&ZMS "EXTRESTOKEN"'                         00982700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00982800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00982900
.ZG280A              AIF   (K'&XRESTARTTOKEN LE 0).ZG280B               00983000
&ZMS                 SETC  '"EXTRESTOKEN'       *KMEKA* MNOTE           00983100
&ZMS                 SETC  '&ZMS.=&EXTRESTOKEN"'                        00983200
&ZMS                 SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'        00983300
&ZMS                 SETC  '&ZMS "&XRESTARTTOKEN"'                      00983400
                     MNOTE 8,' &ZMS KEY.'                               00983500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00983600
                     AGO   .ZG280D                                      00983700
.*                                                                      00983800
.ZG280B              ANOP  ,                                            00983900
&ZXRESTARTTOKEN      SETC  'INPUT'     SET IN/OUTPUT                    00984000
&XRESTARTTOKEN       SETC  'EXTRESTOKEN'        SET XVARIABLE           00984100
&ZXEXTRESTOKEN       SETC  'INPUT'     SET IN/OUTPUT                    00984200
&XEXTRESTOKEN        SETC  '&EXTRESTOKEN(1)'    SET XVARIABLE PARM      00984300
                     AIF   (N'&EXTRESTOKEN GT 1).ZG280C                 00984400
&XEXTRESTOKEN        SETC  '&EXTRESTOKEN'       SET XVARIABLE PARM      00984500
.ZG280C              AIF   (K'&XEXTRESTOKEN GT 0).ZG280D  ONE PARM      00984600
&ZXRESTARTTOKEN      SETC  ''          RESET IN/OUTPUT                  00984700
&ZXEXTRESTOKEN       SETC  ''          RESET IN/OUTPUT                  00984800
&ZMS                 SETC  ' '         *KRQDA*                          00984900
&ZMS                 SETC  '&ZMS "EXTRESTOKEN" KEY AND ITS'             00985000
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00985100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00985200
.ZG280D              ANOP  ,                                            00985300
.*------------------------------------------------------------------    00985400
.***AG.KMEKY07 NAME, OPT INPUT, ME KEYS -CHECK IF KEY ENTERED           00985500
                     AIF   (K'&XRESTARTTOKEN GT 0).ZG281B               00985600
&ZXRESTARTTOKEN      SETC  'INPUT'     SET IN/OUTPUT                    00985700
&XRESTARTTOKEN       SETC  'RESTOKEN'  SET DEFAULT                      00985800
&ZXRESTOKEN          SETC  'INPUT'     SET IN/OUTPUT                    00985900
&XRESTOKEN           SETC  'NO_RESTOKEN'        SET DEFAULT PARM        00986000
.ZG281B              ANOP  ,                                            00986100
.*-------------------------------------------------------------------   00986200
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00986300
                     AIF   (K'&ZXEXTRESTOKEN LE 0).ZG281R  NOT I/O      00986400
         AIF   ('&XEXTRESTOKEN' EQ 'NO_RESTOKEN').ZG281R                00986500
                     AIF   ('&XEXTRESTOKEN'(1,1) NE '(').ZG281R         00986600
&ZCGPR               SETC  '&XEXTRESTOKEN'(2,K'&XEXTRESTOKEN-2)         00986700
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG281P                00986800
                     AIF   (K'&ZCGPR GT 2).ZG281Q                       00986900
                     AIF   ('&ZCGPR' EQ '0').ZG281Q                     00987000
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00987100
                     AIF   (T'&ZCGPR NE 'N').ZG281Q  INVALID REG NAME   00987200
.ZG281P              ANOP  ,                                            00987300
                     AIF   (T'&ZCGPR NE 'N').ZG281R  NON NUMERIC        00987400
                     AIF   ('&ZCGPR' LT '2').ZG281Q                     00987500
                     AIF   ('&ZCGPR' LE '12').ZG281R                    00987600
.ZG281Q              ANOP  ,                                            00987700
&ZMS                 SETC  '"EXTRESTOKEN='      *KGPRA* MNOTE           00987800
&ZMS                 SETC  '&ZMS.&EXTRESTOKEN"'                         00987900
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00988000
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00988100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00988200
.ZG281R              ANOP  ,                                            00988300
.*-------------------------------------------------------------------   00988400
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           00988500
.ZG279               AIF   ('&XRESTARTTOKEN' NE 'RESTOKEN').ZG280       00988600
.*-------------------------------------------------------------------   00988700
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00988800
                     AIF   (K'&ZXRESTOKEN LE 0).ZG279R  NOT I/O         00988900
         AIF   ('&XRESTOKEN' EQ 'NO_RESTOKEN').ZG279R                   00989000
                     AIF   ('&XRESTOKEN'(1,1) NE '(').ZG279R            00989100
&ZCGPR               SETC  '&XRESTOKEN'(2,K'&XRESTOKEN-2)               00989200
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG279P                00989300
                     AIF   (K'&ZCGPR GT 2).ZG279Q                       00989400
                     AIF   ('&ZCGPR' EQ '0').ZG279Q                     00989500
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00989600
                     AIF   (T'&ZCGPR NE 'N').ZG279Q  INVALID REG NAME   00989700
.ZG279P              ANOP  ,                                            00989800
                     AIF   (T'&ZCGPR NE 'N').ZG279R  NON NUMERIC        00989900
                     AIF   ('&ZCGPR' LT '2').ZG279Q                     00990000
                     AIF   ('&ZCGPR' LE '12').ZG279R                    00990100
.ZG279Q              ANOP  ,                                            00990200
&ZMS                 SETC  '"RESTOKEN='         *KGPRA* MNOTE           00990300
&ZMS                 SETC  '&ZMS.&RESTOKEN"'                            00990400
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00990500
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00990600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00990700
.ZG279R              ANOP  ,                                            00990800
.*-------------------------------------------------------------------   00990900
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           00991000
.ZG280               AIF   ('&XRESTARTTOKEN' NE 'EXTRESTOKEN').ZG281    00991100
.*-------------------------------------------------------------------   00991200
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00991300
                     AIF   (K'&ZXEXTRESTOKEN LE 0).ZG280R  NOT I/O      00991400
         AIF   ('&XEXTRESTOKEN' EQ 'NO_EXTRESTOKEN').ZG280R             00991500
                     AIF   ('&XEXTRESTOKEN'(1,1) NE '(').ZG280R         00991600
&ZCGPR               SETC  '&XEXTRESTOKEN'(2,K'&XEXTRESTOKEN-2)         00991700
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG280P                00991800
                     AIF   (K'&ZCGPR GT 2).ZG280Q                       00991900
                     AIF   ('&ZCGPR' EQ '0').ZG280Q                     00992000
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00992100
                     AIF   (T'&ZCGPR NE 'N').ZG280Q  INVALID REG NAME   00992200
.ZG280P              ANOP  ,                                            00992300
                     AIF   (T'&ZCGPR NE 'N').ZG280R  NON NUMERIC        00992400
                     AIF   ('&ZCGPR' LT '2').ZG280Q                     00992500
                     AIF   ('&ZCGPR' LE '12').ZG280R                    00992600
.ZG280Q              ANOP  ,                                            00992700
&ZMS                 SETC  '"EXTRESTOKEN='      *KGPRA* MNOTE           00992800
&ZMS                 SETC  '&ZMS.&EXTRESTOKEN"'                         00992900
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00993000
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00993100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00993200
.ZG280R              ANOP  ,                                            00993300
.*-------------------------------------------------------------------   00993400
.***AG.KMEKY15 NAME, OPT INPUT, ME KEYS -END                            00993500
.ZG281               ANOP  ,           END MUTUALLY EXCLUSIVE KEYS      00993600
.*------------------------------------------------------------------    00993700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00993800
&XMODE               SETC  ''          INITIALIZE XVARIABLE             00993900
.*-------------------------------------------------------------------   00994000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00994100
.ZG284               ANOP  ,                                            00994200
                     AIF   (K'&MODE(1) LE 0).ZG284A                     00994300
&ZTLC                SETC 'SYNCSUSPEND'                                 00994400
                     AIF   ('&MODE(1)' NE '&ZTLC').ZG285                00994500
&XMODE               SETC  'SYNCSUSPEND'        SET KEYWORD             00994600
                     AIF   (N'&MODE LE 1).ZG284A  CK NUM                00994700
&ZMS                 SETC  '"MODE='    *KPOSA* MNOTE                    00994800
&ZMS                 SETC  '&ZMS.&MODE"'                                00994900
&ZMS                 SETC  '&ZMS "MODE"'                                00995000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00995100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00995200
.ZG284A              ANOP  ,                                            00995300
.*------------------------------------------------------------------    00995400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00995500
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00995600
.ZG284A0             AIF   (K'&REQECB LE 0).ZG284A1  OK                 00995700
&ZCVAL               SETC '&ZCVAL REQECB'       INCORRECT KEY USED      00995800
.ZG284A1             AIF   (K'&REQDATA LE 0).ZG284A2  OK                00995900
&ZCVAL               SETC '&ZCVAL REQDATA'      INCORRECT KEY USED      00996000
.ZG284A2             AIF   (K'&REQTOKEN LE 0).ZG284A3  OK               00996100
&ZCVAL               SETC '&ZCVAL REQTOKEN'     INCORRECT KEY USED      00996200
.ZG284A3             AIF   (K'&ZCVAL LE 0).ZG284A4  OK                  00996300
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00996400
&ZMS                 SETC  '"MODE'     *KMEIA* MNOTE                    00996500
&ZMS                 SETC  '&ZMS.=&MODE"'                               00996600
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00996700
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00996800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00996900
.ZG284A4             ANOP  ,                                            00997000
.*-------------------------------------------------------------------   00997100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00997200
.ZG285               ANOP  ,                                            00997300
&ZTLC                SETC 'SYNCECB'                                     00997400
                     AIF   ('&MODE(1)' NE '&ZTLC').ZG289                00997500
&XMODE               SETC  'SYNCECB'   SET KEYWORD                      00997600
                     AIF   (N'&MODE LE 1).ZG285A  CK NUM                00997700
&ZMS                 SETC  '"MODE='    *KPOSA* MNOTE                    00997800
&ZMS                 SETC  '&ZMS.&MODE"'                                00997900
&ZMS                 SETC  '&ZMS "MODE"'                                00998000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00998100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00998200
.ZG285A              ANOP  ,                                            00998300
.*------------------------------------------------------------------    00998400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00998500
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00998600
.ZG285A0             AIF   (K'&REQDATA LE 0).ZG285A1  OK                00998700
&ZCVAL               SETC '&ZCVAL REQDATA'      INCORRECT KEY USED      00998800
.ZG285A1             AIF   (K'&REQTOKEN LE 0).ZG285A2  OK               00998900
&ZCVAL               SETC '&ZCVAL REQTOKEN'     INCORRECT KEY USED      00999000
.ZG285A2             AIF   (K'&ZCVAL LE 0).ZG285A3  OK                  00999100
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00999200
&ZMS                 SETC  '"MODE'     *KMEIA* MNOTE                    00999300
&ZMS                 SETC  '&ZMS.=&MODE"'                               00999400
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00999500
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00999600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00999700
.ZG285A3             ANOP  ,                                            00999800
.*----------------------------------------------------------------***   00999900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01000000
                     AIF   (N'&REQECB LE 1).ZG287A  CK NUM              01000100
&ZMS                 SETC  '"REQECB='  *KPOSA* MNOTE                    01000200
&ZMS                 SETC  '&ZMS.&REQECB"'                              01000300
&ZMS                 SETC  '&ZMS "REQECB"'                              01000400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          01000500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01000600
.ZG287A              ANOP  ,                                            01000700
.*-------------------------------------------------------------------   01000800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01000900
&ZXREQECB            SETC  'INPUT'     SET IN/OUTPUT                    01001000
&XREQECB             SETC  '&REQECB(1)'         SET XVARIABLE           01001100
                     AIF   (N'&REQECB GT 1).ZG287B  MULTI PARMS         01001200
&XREQECB             SETC  '&REQECB'   SET XVARIABLE                    01001300
.ZG287B              AIF   (K'&REQECB(1) GT 0).ZG287C                   01001400
&ZXREQECB            SETC  ''          RESET IN/OUTPUT                  01001500
&ZMS                 SETC  'WHEN "SYNCECB" IS SPECIFIED'  *KRQDA*       01001600
&ZMS                 SETC  '&ZMS , "REQECB" KEY AND ITS'                01001700
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             01001800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01001900
.ZG287C              ANOP  ,                                            01002000
.*-------------------------------------------------------------------   01002100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01002200
                     AIF   (K'&ZXREQECB LE 0).ZG287R  NOT I/O           01002300
                     AIF   ('&XREQECB'(1,1) NE '(').ZG287R              01002400
&ZCGPR               SETC  '&XREQECB'(2,K'&XREQECB-2)                   01002500
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG287P                01002600
                     AIF   (K'&ZCGPR GT 2).ZG287Q                       01002700
                     AIF   ('&ZCGPR' EQ '0').ZG287Q                     01002800
&ZCGPR               SETC  '&ZCGPR'(2,1)                                01002900
                     AIF   (T'&ZCGPR NE 'N').ZG287Q  INVALID REG NAME   01003000
.ZG287P              ANOP  ,                                            01003100
                     AIF   (T'&ZCGPR NE 'N').ZG287R  NON NUMERIC        01003200
                     AIF   ('&ZCGPR' LT '2').ZG287Q                     01003300
                     AIF   ('&ZCGPR' LE '12').ZG287R                    01003400
.ZG287Q              ANOP  ,                                            01003500
&ZMS                 SETC  '"REQECB='  *KGPRA* MNOTE                    01003600
&ZMS                 SETC  '&ZMS.&REQECB"'                              01003700
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    01003800
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             01003900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01004000
.ZG287R              ANOP  ,                                            01004100
.*-------------------------------------------------------------------   01004200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01004300
.ZG289               ANOP  ,                                            01004400
&ZTLC                SETC 'SYNCEXIT'                                    01004500
                     AIF   ('&MODE(1)' NE '&ZTLC').ZG293                01004600
&XMODE               SETC  'SYNCEXIT'  SET KEYWORD                      01004700
                     AIF   (N'&MODE LE 1).ZG289A  CK NUM                01004800
&ZMS                 SETC  '"MODE='    *KPOSA* MNOTE                    01004900
&ZMS                 SETC  '&ZMS.&MODE"'                                01005000
&ZMS                 SETC  '&ZMS "MODE"'                                01005100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          01005200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01005300
.ZG289A              ANOP  ,                                            01005400
.*------------------------------------------------------------------    01005500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01005600
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      01005700
.ZG289A0             AIF   (K'&REQECB LE 0).ZG289A1  OK                 01005800
&ZCVAL               SETC '&ZCVAL REQECB'       INCORRECT KEY USED      01005900
.ZG289A1             AIF   (K'&REQTOKEN LE 0).ZG289A2  OK               01006000
&ZCVAL               SETC '&ZCVAL REQTOKEN'     INCORRECT KEY USED      01006100
.ZG289A2             AIF   (K'&ZCVAL LE 0).ZG289A3  OK                  01006200
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        01006300
&ZMS                 SETC  '"MODE'     *KMEIA* MNOTE                    01006400
&ZMS                 SETC  '&ZMS.=&MODE"'                               01006500
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         01006600
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         01006700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01006800
.ZG289A3             ANOP  ,                                            01006900
.*----------------------------------------------------------------***   01007000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01007100
                     AIF   (N'&REQDATA LE 1).ZG291A  CK NUM             01007200
&ZMS                 SETC  '"REQDATA='          *KPOSA* MNOTE           01007300
&ZMS                 SETC  '&ZMS.&REQDATA"'                             01007400
&ZMS                 SETC  '&ZMS "REQDATA"'                             01007500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          01007600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01007700
.ZG291A              ANOP  ,                                            01007800
.*-------------------------------------------------------------------   01007900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01008000
&ZXREQDATA           SETC  'INPUT'     SET IN/OUTPUT                    01008100
&XREQDATA            SETC  'NO_REQDATA'                                 01008200
                     AIF   (K'&REQDATA(1) LE 0).ZG291B  PARM            01008300
&XREQDATA            SETC  '&REQDATA(1)'        SET XVARIABLE           01008400
                     AIF   (N'&REQDATA GT 1).ZG291B  MULTI PARMS        01008500
&XREQDATA            SETC  '&REQDATA'  SET XVARIABLE                    01008600
.ZG291B              ANOP  ,                                            01008700
.*-------------------------------------------------------------------   01008800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01008900
                     AIF   (K'&ZXREQDATA LE 0).ZG291R  NOT I/O          01009000
         AIF   ('&XREQDATA' EQ 'NO_REQDATA').ZG291R                     01009100
                     AIF   ('&XREQDATA'(1,1) NE '(').ZG291R             01009200
&ZCGPR               SETC  '&XREQDATA'(2,K'&XREQDATA-2)                 01009300
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG291P                01009400
                     AIF   (K'&ZCGPR GT 2).ZG291Q                       01009500
                     AIF   ('&ZCGPR' EQ '0').ZG291Q                     01009600
&ZCGPR               SETC  '&ZCGPR'(2,1)                                01009700
                     AIF   (T'&ZCGPR NE 'N').ZG291Q  INVALID REG NAME   01009800
.ZG291P              ANOP  ,                                            01009900
                     AIF   (T'&ZCGPR NE 'N').ZG291R  NON NUMERIC        01010000
                     AIF   ('&ZCGPR' LT '2').ZG291Q                     01010100
                     AIF   ('&ZCGPR' LE '12').ZG291R                    01010200
.ZG291Q              ANOP  ,                                            01010300
&ZMS                 SETC  '"REQDATA='          *KGPRA* MNOTE           01010400
&ZMS                 SETC  '&ZMS.&REQDATA"'                             01010500
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    01010600
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             01010700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01010800
.ZG291R              ANOP  ,                                            01010900
.*-------------------------------------------------------------------   01011000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01011100
.ZG293               ANOP  ,                                            01011200
&ZTLC                SETC 'SYNCTOKEN'                                   01011300
                     AIF   ('&MODE(1)' NE '&ZTLC').ZG297                01011400
&XMODE               SETC  'SYNCTOKEN'          SET KEYWORD             01011500
                     AIF   (N'&MODE LE 1).ZG293A  CK NUM                01011600
&ZMS                 SETC  '"MODE='    *KPOSA* MNOTE                    01011700
&ZMS                 SETC  '&ZMS.&MODE"'                                01011800
&ZMS                 SETC  '&ZMS "MODE"'                                01011900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          01012000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01012100
.ZG293A              ANOP  ,                                            01012200
.*------------------------------------------------------------------    01012300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01012400
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      01012500
.ZG293A0             AIF   (K'&REQECB LE 0).ZG293A1  OK                 01012600
&ZCVAL               SETC '&ZCVAL REQECB'       INCORRECT KEY USED      01012700
.ZG293A1             AIF   (K'&REQDATA LE 0).ZG293A2  OK                01012800
&ZCVAL               SETC '&ZCVAL REQDATA'      INCORRECT KEY USED      01012900
.ZG293A2             AIF   (K'&ZCVAL LE 0).ZG293A3  OK                  01013000
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        01013100
&ZMS                 SETC  '"MODE'     *KMEIA* MNOTE                    01013200
&ZMS                 SETC  '&ZMS.=&MODE"'                               01013300
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         01013400
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         01013500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01013600
.ZG293A3             ANOP  ,                                            01013700
.*----------------------------------------------------------------***   01013800
.***AG.KXVAR05 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE KEY                01013900
                     AIF   (N'&REQTOKEN LE 1).ZG295A  CK NUM            01014000
&ZMS                 SETC  '"REQTOKEN='         *KPOSA* MNOTE           01014100
&ZMS                 SETC  '&ZMS.&REQTOKEN"'                            01014200
&ZMS                 SETC  '&ZMS "REQTOKEN"'                            01014300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          01014400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01014500
.ZG295A              ANOP  ,                                            01014600
.*-------------------------------------------------------------------   01014700
.***AG.KXVAR06 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE                    01014800
&ZXREQTOKEN          SETC  'OUTPUT'    SET IN/OUTPUT                    01014900
&XREQTOKEN           SETC  '&REQTOKEN(1)'       SET XVARIABLE           01015000
                     AIF   (N'&REQTOKEN GT 1).ZG295B  MULTI PARMS       01015100
&XREQTOKEN           SETC  '&REQTOKEN'          SET XVARIABLE           01015200
.ZG295B              AIF   (K'&REQTOKEN(1) GT 0).ZG295C                 01015300
&ZXREQTOKEN          SETC  ''          RESET IN/OUTPUT                  01015400
&ZMS                 SETC  'WHEN "SYNCTOKEN" IS SPECIFIED'  *KRQDA*     01015500
&ZMS                 SETC  '&ZMS , "REQTOKEN" KEY AND ITS'              01015600
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             01015700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01015800
.ZG295C              ANOP  ,                                            01015900
.*-------------------------------------------------------------------   01016000
.***AG.KCK02 NAME, OPT RQD OUTPUT, KEYS -GPR OUT OF RANGE               01016100
                     AIF   (K'&ZXREQTOKEN LE 0).ZG295R  NOT I/O         01016200
                     AIF   ('&XREQTOKEN'(1,1) NE '(').ZG295R            01016300
&ZCGPR               SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)               01016400
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG295P                01016500
                     AIF   (K'&ZCGPR GT 2).ZG295Q                       01016600
                     AIF   ('&ZCGPR' EQ '0').ZG295Q                     01016700
&ZCGPR               SETC  '&ZCGPR'(2,1)                                01016800
                     AIF   (T'&ZCGPR NE 'N').ZG295Q  INVALID REG NAME   01016900
.ZG295P              ANOP  ,                                            01017000
                     AIF   (T'&ZCGPR NE 'N').ZG295R  NON NUMERIC        01017100
                     AIF   ('&ZCGPR' LT '2').ZG295Q                     01017200
                     AIF   ('&ZCGPR' LE '12').ZG295R                    01017300
.ZG295Q              ANOP  ,                                            01017400
&ZMS                 SETC  '"REQTOKEN='         *KGPRA* MNOTE           01017500
&ZMS                 SETC  '&ZMS.&REQTOKEN"'                            01017600
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    01017700
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             01017800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01017900
.ZG295R              ANOP  ,                                            01018000
.*-------------------------------------------------------------------   01018100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01018200
.ZG297               ANOP  ,                                            01018300
&ZTLC                SETC 'ASYNCECB'                                    01018400
                     AIF   ('&MODE(1)' NE '&ZTLC').ZG301                01018500
&XMODE               SETC  'ASYNCECB'  SET KEYWORD                      01018600
                     AIF   (N'&MODE LE 1).ZG297A  CK NUM                01018700
&ZMS                 SETC  '"MODE='    *KPOSA* MNOTE                    01018800
&ZMS                 SETC  '&ZMS.&MODE"'                                01018900
&ZMS                 SETC  '&ZMS "MODE"'                                01019000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          01019100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01019200
.ZG297A              ANOP  ,                                            01019300
.*------------------------------------------------------------------    01019400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01019500
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      01019600
.ZG297A0             AIF   (K'&REQDATA LE 0).ZG297A1  OK                01019700
&ZCVAL               SETC '&ZCVAL REQDATA'      INCORRECT KEY USED      01019800
.ZG297A1             AIF   (K'&REQTOKEN LE 0).ZG297A2  OK               01019900
&ZCVAL               SETC '&ZCVAL REQTOKEN'     INCORRECT KEY USED      01020000
.ZG297A2             AIF   (K'&ZCVAL LE 0).ZG297A3  OK                  01020100
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        01020200
&ZMS                 SETC  '"MODE'     *KMEIA* MNOTE                    01020300
&ZMS                 SETC  '&ZMS.=&MODE"'                               01020400
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         01020500
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         01020600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01020700
.ZG297A3             ANOP  ,                                            01020800
.*----------------------------------------------------------------***   01020900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01021000
                     AIF   (N'&REQECB LE 1).ZG299A  CK NUM              01021100
&ZMS                 SETC  '"REQECB='  *KPOSA* MNOTE                    01021200
&ZMS                 SETC  '&ZMS.&REQECB"'                              01021300
&ZMS                 SETC  '&ZMS "REQECB"'                              01021400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          01021500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01021600
.ZG299A              ANOP  ,                                            01021700
.*-------------------------------------------------------------------   01021800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01021900
&ZXREQECB            SETC  'INPUT'     SET IN/OUTPUT                    01022000
&XREQECB             SETC  '&REQECB(1)'         SET XVARIABLE           01022100
                     AIF   (N'&REQECB GT 1).ZG299B  MULTI PARMS         01022200
&XREQECB             SETC  '&REQECB'   SET XVARIABLE                    01022300
.ZG299B              AIF   (K'&REQECB(1) GT 0).ZG299C                   01022400
&ZXREQECB            SETC  ''          RESET IN/OUTPUT                  01022500
&ZMS                 SETC  'WHEN "ASYNCECB" IS SPECIFIED'  *KRQDA*      01022600
&ZMS                 SETC  '&ZMS , "REQECB" KEY AND ITS'                01022700
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             01022800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01022900
.ZG299C              ANOP  ,                                            01023000
.*-------------------------------------------------------------------   01023100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01023200
                     AIF   (K'&ZXREQECB LE 0).ZG299R  NOT I/O           01023300
                     AIF   ('&XREQECB'(1,1) NE '(').ZG299R              01023400
&ZCGPR               SETC  '&XREQECB'(2,K'&XREQECB-2)                   01023500
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG299P                01023600
                     AIF   (K'&ZCGPR GT 2).ZG299Q                       01023700
                     AIF   ('&ZCGPR' EQ '0').ZG299Q                     01023800
&ZCGPR               SETC  '&ZCGPR'(2,1)                                01023900
                     AIF   (T'&ZCGPR NE 'N').ZG299Q  INVALID REG NAME   01024000
.ZG299P              ANOP  ,                                            01024100
                     AIF   (T'&ZCGPR NE 'N').ZG299R  NON NUMERIC        01024200
                     AIF   ('&ZCGPR' LT '2').ZG299Q                     01024300
                     AIF   ('&ZCGPR' LE '12').ZG299R                    01024400
.ZG299Q              ANOP  ,                                            01024500
&ZMS                 SETC  '"REQECB='  *KGPRA* MNOTE                    01024600
&ZMS                 SETC  '&ZMS.&REQECB"'                              01024700
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    01024800
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             01024900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01025000
.ZG299R              ANOP  ,                                            01025100
.*-------------------------------------------------------------------   01025200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01025300
.ZG301               ANOP  ,                                            01025400
&ZTLC                SETC 'ASYNCEXIT'                                   01025500
                     AIF   ('&MODE(1)' NE '&ZTLC').ZG305                01025600
&XMODE               SETC  'ASYNCEXIT'          SET KEYWORD             01025700
                     AIF   (N'&MODE LE 1).ZG301A  CK NUM                01025800
&ZMS                 SETC  '"MODE='    *KPOSA* MNOTE                    01025900
&ZMS                 SETC  '&ZMS.&MODE"'                                01026000
&ZMS                 SETC  '&ZMS "MODE"'                                01026100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          01026200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01026300
.ZG301A              ANOP  ,                                            01026400
.*------------------------------------------------------------------    01026500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01026600
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      01026700
.ZG301A0             AIF   (K'&REQECB LE 0).ZG301A1  OK                 01026800
&ZCVAL               SETC '&ZCVAL REQECB'       INCORRECT KEY USED      01026900
.ZG301A1             AIF   (K'&REQTOKEN LE 0).ZG301A2  OK               01027000
&ZCVAL               SETC '&ZCVAL REQTOKEN'     INCORRECT KEY USED      01027100
.ZG301A2             AIF   (K'&ZCVAL LE 0).ZG301A3  OK                  01027200
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        01027300
&ZMS                 SETC  '"MODE'     *KMEIA* MNOTE                    01027400
&ZMS                 SETC  '&ZMS.=&MODE"'                               01027500
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         01027600
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         01027700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01027800
.ZG301A3             ANOP  ,                                            01027900
.*----------------------------------------------------------------***   01028000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01028100
                     AIF   (N'&REQDATA LE 1).ZG303A  CK NUM             01028200
&ZMS                 SETC  '"REQDATA='          *KPOSA* MNOTE           01028300
&ZMS                 SETC  '&ZMS.&REQDATA"'                             01028400
&ZMS                 SETC  '&ZMS "REQDATA"'                             01028500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          01028600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01028700
.ZG303A              ANOP  ,                                            01028800
.*-------------------------------------------------------------------   01028900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01029000
&ZXREQDATA           SETC  'INPUT'     SET IN/OUTPUT                    01029100
&XREQDATA            SETC  'NO_REQDATA'                                 01029200
                     AIF   (K'&REQDATA(1) LE 0).ZG303B  PARM            01029300
&XREQDATA            SETC  '&REQDATA(1)'        SET XVARIABLE           01029400
                     AIF   (N'&REQDATA GT 1).ZG303B  MULTI PARMS        01029500
&XREQDATA            SETC  '&REQDATA'  SET XVARIABLE                    01029600
.ZG303B              ANOP  ,                                            01029700
.*-------------------------------------------------------------------   01029800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01029900
                     AIF   (K'&ZXREQDATA LE 0).ZG303R  NOT I/O          01030000
         AIF   ('&XREQDATA' EQ 'NO_REQDATA').ZG303R                     01030100
                     AIF   ('&XREQDATA'(1,1) NE '(').ZG303R             01030200
&ZCGPR               SETC  '&XREQDATA'(2,K'&XREQDATA-2)                 01030300
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG303P                01030400
                     AIF   (K'&ZCGPR GT 2).ZG303Q                       01030500
                     AIF   ('&ZCGPR' EQ '0').ZG303Q                     01030600
&ZCGPR               SETC  '&ZCGPR'(2,1)                                01030700
                     AIF   (T'&ZCGPR NE 'N').ZG303Q  INVALID REG NAME   01030800
.ZG303P              ANOP  ,                                            01030900
                     AIF   (T'&ZCGPR NE 'N').ZG303R  NON NUMERIC        01031000
                     AIF   ('&ZCGPR' LT '2').ZG303Q                     01031100
                     AIF   ('&ZCGPR' LE '12').ZG303R                    01031200
.ZG303Q              ANOP  ,                                            01031300
&ZMS                 SETC  '"REQDATA='          *KGPRA* MNOTE           01031400
&ZMS                 SETC  '&ZMS.&REQDATA"'                             01031500
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    01031600
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             01031700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01031800
.ZG303R              ANOP  ,                                            01031900
.*-------------------------------------------------------------------   01032000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01032100
.ZG305               ANOP  ,                                            01032200
&ZTLC                SETC 'ASYNCTOKEN'                                  01032300
                     AIF   ('&MODE(1)' NE '&ZTLC').ZG309                01032400
&XMODE               SETC  'ASYNCTOKEN'         SET KEYWORD             01032500
                     AIF   (N'&MODE LE 1).ZG305A  CK NUM                01032600
&ZMS                 SETC  '"MODE='    *KPOSA* MNOTE                    01032700
&ZMS                 SETC  '&ZMS.&MODE"'                                01032800
&ZMS                 SETC  '&ZMS "MODE"'                                01032900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          01033000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01033100
.ZG305A              ANOP  ,                                            01033200
.*------------------------------------------------------------------    01033300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01033400
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      01033500
.ZG305A0             AIF   (K'&REQECB LE 0).ZG305A1  OK                 01033600
&ZCVAL               SETC '&ZCVAL REQECB'       INCORRECT KEY USED      01033700
.ZG305A1             AIF   (K'&REQDATA LE 0).ZG305A2  OK                01033800
&ZCVAL               SETC '&ZCVAL REQDATA'      INCORRECT KEY USED      01033900
.ZG305A2             AIF   (K'&ZCVAL LE 0).ZG305A3  OK                  01034000
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        01034100
&ZMS                 SETC  '"MODE'     *KMEIA* MNOTE                    01034200
&ZMS                 SETC  '&ZMS.=&MODE"'                               01034300
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         01034400
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         01034500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01034600
.ZG305A3             ANOP  ,                                            01034700
.*----------------------------------------------------------------***   01034800
.***AG.KXVAR05 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE KEY                01034900
                     AIF   (N'&REQTOKEN LE 1).ZG307A  CK NUM            01035000
&ZMS                 SETC  '"REQTOKEN='         *KPOSA* MNOTE           01035100
&ZMS                 SETC  '&ZMS.&REQTOKEN"'                            01035200
&ZMS                 SETC  '&ZMS "REQTOKEN"'                            01035300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          01035400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01035500
.ZG307A              ANOP  ,                                            01035600
.*-------------------------------------------------------------------   01035700
.***AG.KXVAR06 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE                    01035800
&ZXREQTOKEN          SETC  'OUTPUT'    SET IN/OUTPUT                    01035900
&XREQTOKEN           SETC  '&REQTOKEN(1)'       SET XVARIABLE           01036000
                     AIF   (N'&REQTOKEN GT 1).ZG307B  MULTI PARMS       01036100
&XREQTOKEN           SETC  '&REQTOKEN'          SET XVARIABLE           01036200
.ZG307B              AIF   (K'&REQTOKEN(1) GT 0).ZG307C                 01036300
&ZXREQTOKEN          SETC  ''          RESET IN/OUTPUT                  01036400
&ZMS                 SETC  'WHEN "ASYNCTOKEN" IS SPECIFIED'  *KRQDA*    01036500
&ZMS                 SETC  '&ZMS , "REQTOKEN" KEY AND ITS'              01036600
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             01036700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01036800
.ZG307C              ANOP  ,                                            01036900
.*-------------------------------------------------------------------   01037000
.***AG.KCK02 NAME, OPT RQD OUTPUT, KEYS -GPR OUT OF RANGE               01037100
                     AIF   (K'&ZXREQTOKEN LE 0).ZG307R  NOT I/O         01037200
                     AIF   ('&XREQTOKEN'(1,1) NE '(').ZG307R            01037300
&ZCGPR               SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)               01037400
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG307P                01037500
                     AIF   (K'&ZCGPR GT 2).ZG307Q                       01037600
                     AIF   ('&ZCGPR' EQ '0').ZG307Q                     01037700
&ZCGPR               SETC  '&ZCGPR'(2,1)                                01037800
                     AIF   (T'&ZCGPR NE 'N').ZG307Q  INVALID REG NAME   01037900
.ZG307P              ANOP  ,                                            01038000
                     AIF   (T'&ZCGPR NE 'N').ZG307R  NON NUMERIC        01038100
                     AIF   ('&ZCGPR' LT '2').ZG307Q                     01038200
                     AIF   ('&ZCGPR' LE '12').ZG307R                    01038300
.ZG307Q              ANOP  ,                                            01038400
&ZMS                 SETC  '"REQTOKEN='         *KGPRA* MNOTE           01038500
&ZMS                 SETC  '&ZMS.&REQTOKEN"'                            01038600
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    01038700
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             01038800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01038900
.ZG307R              ANOP  ,                                            01039000
.*-------------------------------------------------------------------   01039100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01039200
.ZG309               ANOP  ,                                            01039300
&ZTLC                SETC 'ASYNCNORESPONSE'                             01039400
                     AIF   ('&MODE(1)' NE '&ZTLC').ZG310                01039500
&XMODE               SETC  'ASYNCNORESPONSE'    SET KEYWORD             01039600
                     AIF   (N'&MODE LE 1).ZG309A  CK NUM                01039700
&ZMS                 SETC  '"MODE='    *KPOSA* MNOTE                    01039800
&ZMS                 SETC  '&ZMS.&MODE"'                                01039900
&ZMS                 SETC  '&ZMS "MODE"'                                01040000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          01040100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01040200
.ZG309A              ANOP  ,                                            01040300
.*------------------------------------------------------------------    01040400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01040500
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      01040600
.ZG309A0             AIF   (K'&REQECB LE 0).ZG309A1  OK                 01040700
&ZCVAL               SETC '&ZCVAL REQECB'       INCORRECT KEY USED      01040800
.ZG309A1             AIF   (K'&REQDATA LE 0).ZG309A2  OK                01040900
&ZCVAL               SETC '&ZCVAL REQDATA'      INCORRECT KEY USED      01041000
.ZG309A2             AIF   (K'&REQTOKEN LE 0).ZG309A3  OK               01041100
&ZCVAL               SETC '&ZCVAL REQTOKEN'     INCORRECT KEY USED      01041200
.ZG309A3             AIF   (K'&ZCVAL LE 0).ZG309A4  OK                  01041300
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        01041400
&ZMS                 SETC  '"MODE'     *KMEIA* MNOTE                    01041500
&ZMS                 SETC  '&ZMS.=&MODE"'                               01041600
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         01041700
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         01041800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01041900
.ZG309A4             ANOP  ,                                            01042000
.*------------------------------------------------------------------    01042100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01042200
.ZG310               ANOP  ,                                            01042300
&ZXMODE              SETC  'INPUT'     SET IN/OUTPUT                    01042400
                     AIF   (K'&XMODE GT 0).ZG310E  VALID ARG            01042500
                     AIF   (T'&MODE EQ 'O').ZG310D  OMITTED             01042600
&ZASYSLNDX           SETA  0                                            01042700
.ZG310A              ANOP  ,           POSITIONAL MACRO KEY             01042800
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 01042900
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG310C            01043000
&ZTLC                SETC 'MODE'                                        01043100
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG310A   01043200
.ZG310B              ANOP  ,                                            01043300
&ZXMODE              SETC  ''          RESET IN/OUTPUT                  01043400
&ZMS                 SETC  'THE "MODE" KEY'     *KOPTA* MNOTE           01043500
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      01043600
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             01043700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01043800
                     AGO   .ZG310E                                      01043900
.ZG310C              ANOP  ,                                            01044000
&ZXMODE              SETC  ''          RESET IN/OUTPUT                  01044100
&ZMS                 SETC  '"MODE='    *KUKWA* MNOTE                    01044200
&ZMS                 SETC  '&ZMS.&MODE"'                                01044300
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    01044400
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          01044500
&ZMS                 SETC  '&ZMS "SYNCSUSPEND",'                        01044600
&ZMS                 SETC  '&ZMS "SYNCECB",'                            01044700
&ZMS                 SETC  '&ZMS "SYNCEXIT",'                           01044800
&ZMS                 SETC  '&ZMS "SYNCTOKEN",'                          01044900
&ZMS                 SETC  '&ZMS "ASYNCECB",'                           01045000
&ZMS                 SETC  '&ZMS "ASYNCEXIT",'                          01045100
&ZMS                 SETC  '&ZMS "ASYNCTOKEN",'                         01045200
&ZMS                 SETC  '&ZMS OR "ASYNCNORESPONSE".'                 01045300
                     MNOTE 8,' &ZMS '                                   01045400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01045500
                     AGO   .ZG310E                                      01045600
.ZG310D              ANOP  ,                                            01045700
&XMODE               SETC  'SYNCSUSPEND'        SET DEFAULT KEYWORD     01045800
.ZG310E              ANOP  ,                                            01045900
.*----------------------------------------------------------------***   01046000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01046100
                     AIF   (N'&ANSAREA LE 1).ZG312A  CK NUM             01046200
&ZMS                 SETC  '"ANSAREA='          *KPOSA* MNOTE           01046300
&ZMS                 SETC  '&ZMS.&ANSAREA"'                             01046400
&ZMS                 SETC  '&ZMS "ANSAREA"'                             01046500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          01046600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01046700
.ZG312A              ANOP  ,                                            01046800
.*-------------------------------------------------------------------   01046900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01047000
&ZXANSAREA           SETC  'INPUT'     SET IN/OUTPUT                    01047100
&XANSAREA            SETC  'NO_ANSAREA'                                 01047200
                     AIF   (K'&ANSAREA(1) LE 0).ZG312B  PARM            01047300
&XANSAREA            SETC  '&ANSAREA(1)'        SET XVARIABLE           01047400
                     AIF   (N'&ANSAREA GT 1).ZG312B  MULTI PARMS        01047500
&XANSAREA            SETC  '&ANSAREA'  SET XVARIABLE                    01047600
.ZG312B              ANOP  ,                                            01047700
.*-------------------------------------------------------------------   01047800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01047900
                     AIF   (K'&ZXANSAREA LE 0).ZG312R  NOT I/O          01048000
         AIF   ('&XANSAREA' EQ 'NO_ANSAREA').ZG312R                     01048100
                     AIF   ('&XANSAREA'(1,1) NE '(').ZG312R             01048200
&ZCGPR               SETC  '&XANSAREA'(2,K'&XANSAREA-2)                 01048300
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG312P                01048400
                     AIF   (K'&ZCGPR GT 2).ZG312Q                       01048500
                     AIF   ('&ZCGPR' EQ '0').ZG312Q                     01048600
&ZCGPR               SETC  '&ZCGPR'(2,1)                                01048700
                     AIF   (T'&ZCGPR NE 'N').ZG312Q  INVALID REG NAME   01048800
.ZG312P              ANOP  ,                                            01048900
                     AIF   (T'&ZCGPR NE 'N').ZG312R  NON NUMERIC        01049000
                     AIF   ('&ZCGPR' LT '2').ZG312Q                     01049100
                     AIF   ('&ZCGPR' LE '12').ZG312R                    01049200
.ZG312Q              ANOP  ,                                            01049300
&ZMS                 SETC  '"ANSAREA='          *KGPRA* MNOTE           01049400
&ZMS                 SETC  '&ZMS.&ANSAREA"'                             01049500
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    01049600
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             01049700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01049800
.ZG312R              ANOP  ,                                            01049900
.*----------------------------------------------------------------***   01050000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01050100
                     AIF   (N'&ANSLEN LE 1).ZG314A  CK NUM              01050200
&ZMS                 SETC  '"ANSLEN='  *KPOSA* MNOTE                    01050300
&ZMS                 SETC  '&ZMS.&ANSLEN"'                              01050400
&ZMS                 SETC  '&ZMS "ANSLEN"'                              01050500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          01050600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01050700
.ZG314A              ANOP  ,                                            01050800
.*-------------------------------------------------------------------   01050900
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01051000
&ZXANSLEN            SETC  'INPUT'     SET IN/OUTPUT                    01051100
&XANSLEN             SETC  '&ANSLEN(1)'         SET XVARIABLE           01051200
                     AIF   (N'&ANSLEN GT 1).ZG314B  MULTI PARMS         01051300
&XANSLEN             SETC  '&ANSLEN'   SET XVARIABLE                    01051400
.ZG314B              AIF   (K'&ANSAREA(1) GT 0).ZG314C  KEY             01051500
                     AIF   (K'&ANSLEN(1) LE 0).ZG314D  PARM             01051600
&ZMS                 SETC  '"ANSLEN'   *KDEPA* MNOTE                    01051700
&ZMS                 SETC  '&ZMS.=&ANSLEN"'                             01051800
&ZMS                 SETC  '&ZMS CAN ONLY BE SPECIFIED IF'              01051900
&ZMS                 SETC  '&ZMS '                                      01052000
&ZMS                 SETC  '&ZMS "ANSAREA"'                             01052100
                     MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                 01052200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01052300
                     AGO   .ZG314E                                      01052400
.*                                                                      01052500
.ZG314C              AIF   (K'&ANSLEN(1) GT 0).ZG314E  PARM             01052600
&ZXANSLEN            SETC  ''          RESET IN/OUTPUT                  01052700
&ZMS                 SETC  'WHEN "ANSAREA" IS SPECIFIED'  *KRQDA*       01052800
&ZMS                 SETC  '&ZMS , "ANSLEN" KEY AND ITS'                01052900
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             01053000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01053100
.ZG314D              ANOP  ,                                            01053200
&XANSLEN             SETC  'NO_ANSLEN'          SET DEFAULT             01053300
.ZG314E              ANOP  ,                                            01053400
.*-------------------------------------------------------------------   01053500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01053600
                     AIF   (K'&ZXANSLEN LE 0).ZG314R  NOT I/O           01053700
         AIF   ('&XANSLEN' EQ 'NO_ANSLEN').ZG314R                       01053800
                     AIF   ('&XANSLEN'(1,1) NE '(').ZG314R              01053900
&ZCGPR               SETC  '&XANSLEN'(2,K'&XANSLEN-2)                   01054000
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG314P                01054100
                     AIF   (K'&ZCGPR GT 2).ZG314Q                       01054200
                     AIF   ('&ZCGPR' EQ '0').ZG314Q                     01054300
&ZCGPR               SETC  '&ZCGPR'(2,1)                                01054400
                     AIF   (T'&ZCGPR NE 'N').ZG314Q  INVALID REG NAME   01054500
.ZG314P              ANOP  ,                                            01054600
                     AIF   (T'&ZCGPR NE 'N').ZG314R  NON NUMERIC        01054700
                     AIF   ('&ZCGPR' LT '2').ZG314Q                     01054800
                     AIF   ('&ZCGPR' LE '12').ZG314R                    01054900
.ZG314Q              ANOP  ,                                            01055000
&ZMS                 SETC  '"ANSLEN='  *KGPRA* MNOTE                    01055100
&ZMS                 SETC  '&ZMS.&ANSLEN"'                              01055200
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    01055300
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             01055400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01055500
.ZG314R              ANOP  ,                                            01055600
.*----------------------------------------------------------------***   01055700
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    01055800
                     AIF   (N'&RETCODE LE 1).ZG318A  CK NUM             01055900
&ZMS                 SETC  '"RETCODE='          *KPOSA* MNOTE           01056000
&ZMS                 SETC  '&ZMS.&RETCODE"'                             01056100
&ZMS                 SETC  '&ZMS "RETCODE"'                             01056200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          01056300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01056400
.ZG318A              ANOP  ,                                            01056500
.*-------------------------------------------------------------------   01056600
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        01056700
                     AIF   (K'&RETCODE(1) LE 0).ZG318C  NO PARM         01056800
&ZXRETCODE           SETC  'OUTPUT'    SET OUTPUT                       01056900
&XRETCODE            SETC  '&RETCODE(1)'        SET XVARIABLE           01057000
                     AIF   (N'&RETCODE GT 1).ZG318C                     01057100
&XRETCODE            SETC  '&RETCODE'  SET XVARIABLE                    01057200
.ZG318C              ANOP  ,                                            01057300
.*-------------------------------------------------------------------   01057400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   01057500
                     AIF   (K'&ZXRETCODE LE 0).ZG318R  NOT I/O          01057600
                     AIF   ('&XRETCODE'(1,1) NE '(').ZG318R             01057700
&ZCGPR               SETC  '&XRETCODE'(2,K'&XRETCODE-2)                 01057800
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG318P                01057900
                     AIF   (K'&ZCGPR GT 2).ZG318Q                       01058000
                     AIF   ('&ZCGPR' EQ '0').ZG318Q                     01058100
&ZCGPR               SETC  '&ZCGPR'(2,1)                                01058200
                     AIF   (T'&ZCGPR NE 'N').ZG318Q  INVALID REG NAME   01058300
.ZG318P              ANOP  ,                                            01058400
                     AIF   (T'&ZCGPR NE 'N').ZG318R  NON NUMERIC        01058500
                     AIF   ('&ZCGPR' LT '2').ZG318Q                     01058600
                     AIF   ('&ZCGPR' LE '12').ZG318R                    01058700
.ZG318Q              ANOP  ,                                            01058800
&ZMS                 SETC  '"RETCODE='          *KGPRA* MNOTE           01058900
&ZMS                 SETC  '&ZMS.&RETCODE"'                             01059000
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    01059100
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             01059200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01059300
.ZG318R              ANOP  ,                                            01059400
.*----------------------------------------------------------------***   01059500
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    01059600
                     AIF   (N'&RSNCODE LE 1).ZG321A  CK NUM             01059700
&ZMS                 SETC  '"RSNCODE='          *KPOSA* MNOTE           01059800
&ZMS                 SETC  '&ZMS.&RSNCODE"'                             01059900
&ZMS                 SETC  '&ZMS "RSNCODE"'                             01060000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          01060100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01060200
.ZG321A              ANOP  ,                                            01060300
.*-------------------------------------------------------------------   01060400
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        01060500
                     AIF   (K'&RSNCODE(1) LE 0).ZG321C  NO PARM         01060600
&ZXRSNCODE           SETC  'OUTPUT'    SET OUTPUT                       01060700
&XRSNCODE            SETC  '&RSNCODE(1)'        SET XVARIABLE           01060800
                     AIF   (N'&RSNCODE GT 1).ZG321C                     01060900
&XRSNCODE            SETC  '&RSNCODE'  SET XVARIABLE                    01061000
.ZG321C              ANOP  ,                                            01061100
.*-------------------------------------------------------------------   01061200
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   01061300
                     AIF   (K'&ZXRSNCODE LE 0).ZG321R  NOT I/O          01061400
                     AIF   ('&XRSNCODE'(1,1) NE '(').ZG321R             01061500
&ZCGPR               SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                 01061600
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG321P                01061700
                     AIF   (K'&ZCGPR GT 2).ZG321Q                       01061800
                     AIF   ('&ZCGPR' EQ '0').ZG321Q                     01061900
&ZCGPR               SETC  '&ZCGPR'(2,1)                                01062000
                     AIF   (T'&ZCGPR NE 'N').ZG321Q  INVALID REG NAME   01062100
.ZG321P              ANOP  ,                                            01062200
                     AIF   (T'&ZCGPR NE 'N').ZG321R  NON NUMERIC        01062300
                     AIF   ('&ZCGPR' LT '2').ZG321Q                     01062400
                     AIF   ('&ZCGPR' LE '12').ZG321R                    01062500
.ZG321Q              ANOP  ,                                            01062600
&ZMS                 SETC  '"RSNCODE='          *KGPRA* MNOTE           01062700
&ZMS                 SETC  '&ZMS.&RSNCODE"'                             01062800
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    01062900
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             01063000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01063100
.ZG321R              ANOP  ,                                            01063200
.******************************************************************     01063300
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        01063400
.******************************************************************     01063500
                     ACTR  10000                                        01063600
.*----------------------------------------------------------------***   01063700
.***AH.P02 EXTRA POSITIONALS                                            01063800
                     AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS         01063900
                     AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL         01064000
                     AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL     01064100
                     AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL      01064200
.ZGLISTX1            ANOP  ,                                            01064300
&ZCVAL               SETC  ''          ERROR FIELD                      01064400
&ZAWRK               SETA  0           POSITIONAL NUMBER                01064500
.ZGLIST2             ANOP  ,                                            01064600
&ZAWRK               SETA  &ZAWRK+1    NEXT POSITIONAL                  01064700
                     AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE         01064800
&ZCVAL               SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA              01064900
                     AGO   .ZGLIST2                                     01065000
.*                                                                      01065100
.ZGLIST3             ANOP  ,                                            01065200
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA           01065300
&ZMS                 SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE     01065400
&ZMS                 SETC  '&ZMS "&ZCVAL"'                              01065500
&ZMS                 SETC  '&ZMS CANNOT BE USED.'                       01065600
&ZMS                 SETC  '&ZMS NO POSITIONAL ARGUMENTS'               01065700
                     MNOTE 8,' &ZMS ARE ALLOWED.'                       01065800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      01065900
.ZGLISTX             ANOP  ,                                            01066000
&ZASYSLNDX           SETA  0                                            01066100
.*-------------------------------------------------------------------   01066200
.***AG.MF04 MF=(SLE)                                                    01066300
.ZGMFX               ANOP  ,           END OF FULL SYNTAX CHECK         01066400
.*******************************************************************    01066500
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       01066600
.*******************************************************************    01066700
                     AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED         01066800
.*******************************************************************    01066900
.***AE.01  START OF IXLCACHE MACRO CODE                                 01067000
.*******************************************************************    01067100
                     LCLC  &M0M0001                 NAME                01067200
&M0M0001             SETC  '&XLABEL'                SET NAME            01067300
                     AIF   (K'&XLABEL NE 0).XLAB2                       01067400
&M0M0001             SETC  'M00M&SYSNDX'            DEFAULT NAME        01067500
.*                                                                      01067600
.XLAB2               ANOP  ,                                            01067700
                     AIF   ('&XMF' EQ 'L').XLAB3                        01067800
&M0M0001 DS    0H                             IXLCACHE-5                01067900
.XLAB3               ANOP  ,                                            01068000
.*******************************************************************    01068100
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              01068200
.*******************************************************************    01068300
              PUSH  PRINT                                               01068400
                     AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON   01068500
                     PRINT OFF         ++ PR01                          01068600
                     AGO   .ZPRNTXX                                     01068700
.ZPRINTX             PRINT ON                                           01068800
.ZPRNTXX             ANOP  ,                                            01068900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  01069000
.**------------------------------------------------------------------** 01069100
.**  Start of user macasm code                                       ** 01069200
.**------------------------------------------------------------------** 01069300
.*                                                                      01069400
.**------------------------------------------------------------------** 01069500
.**  Start of code to set macro version number                   @05A** 01069600
.**                                                                  ** 01069700
.**  This code sets the macro version number for those keywords      ** 01069800
.**  which already existed in earlier macro versions but are used    ** 01069900
.**  for additional request types in later macro versions.           ** 01070000
.**                                                                  ** 01070100
.**------------------------------------------------------------------** 01070200
.*                                                                      01070300
         LCLA  &CACHEPLVERS                                       @05A  01070400
.*                                                                      01070500
.* Initialize CachePlVers to whatever AMG thinks PLISTVER should be     01070600
.*                                                                @POA  01070700
&CACHEPLVERS SETA &XPLISTVER                                      @POA  01070800
.*                                                                      01070900
.* If CachePlVers already >= 3, no need to look at version 3 requests   01071000
         AIF  (&CACHEPLVERS GE 3).NOTPLVER3                       @POA  01071100
.*                                                                      01071200
.* Determine whether request requires PLISTVER of 3               @POA  01071300
.*                                                                      01071400
         AIF   ('&XREQUEST'   NE 'DELETE_NAMELIST').NOTPLVERS3INL @05A  01071500
&CACHEPLVERS     SETA  3                                          @05A  01071600
               AGO   .SETPLVERS3DONE                              @05A  01071700
.NOTPLVERS3INL   ANOP ,                                           @05A  01071800
         AIF   ('&XREQUEST'   NE 'READ_DATA'      AND                  *01071900
                '&XREQUEST'   NE 'WRITE_DATA').NOTPLVERS3RW       @05A  01072000
         AIF   ('&REGUSER(1)'   EQ '').NOTPLVERS3RW               @05A  01072100
&CACHEPLVERS     SETA  3                                          @05A  01072200
               AGO   .SETPLVERS3DONE                              @05A  01072300
.NOTPLVERS3RW    ANOP ,                                           @05A  01072400
         AIF   ('&XREQUEST'   NE 'READ_COCLASS').NOTPLVERS3RCC    @05A  01072500
         AIF   ('&DIRINFOFMT(1)' EQ '').NOTPLVERS3RCC             @05A  01072600
&CACHEPLVERS     SETA  3                                          @05A  01072700
               AGO   .SETPLVERS3DONE                              @05A  01072800
.NOTPLVERS3RCC   ANOP ,                                           @05A  01072900
.*                                                                @POD  01073000
.*                                                                @POD  01073100
.SETPLVERS3DONE  ANOP ,                                           @05A  01073200
.NOTPLVER3       ANOP ,                                           @POA  01073300
.*                                                                @POA  01073400
.* If CachePlVers already >= 5, no need to look at version 5 requests   01073500
         AIF  (&CACHEPLVERS GE 5).NOTPLVER5                       @POA  01073600
.*                                                                      01073700
.* Determine whether request requires PLISTVER of 5               @POA  01073800
.*                                                                      01073900
         AIF   ('&XREQUEST' EQ 'WRITE_DATA' AND                        *01074000
                '&XWHENREG' EQ 'NO' AND                                *01074100
                '&XASSIGN' EQ 'NO').SETPLVER5                     @POA  01074200
               AGO   .NOTPLVER5                                   @POA  01074300
.SETPLVER5       ANOP ,                                           @POA  01074400
&CACHEPLVERS     SETA  5                                          @POA  01074500
.NOTPLVER5       ANOP ,                                           @POA  01074600
.*                                                                @POA  01074700
.* if the user specified a plist version less than the version    @POA  01074800
.* that was determined based on the specified keywords then       @POA  01074900
.* issue an MNOTE                                                 @POA  01075000
.*                                                                      01075100
         AIF   ('&PLISTVER(1)' EQ ''                     OR            *01075200
                '&PLISTVER(1)' EQ 'IMPLIED_VERSION'      OR            *01075300
                &XPLISTVER     GE &CACHEPLVERS).SETPLVERSUPDATE   @05A  01075400
         MNOTE 8,' PLISTVER=&PLISTVER(1), BUT PLISTVER OF &CACHEPLVERS *01075500
               IS REQUIRED.'                                      @05A  01075600
&ZMACRET SETA  8                                                  @05A  01075700
         AGO    .SETPLVERSEND                                     @05A  01075800
.SETPLVERSUPDATE ANOP ,                                           @05A  01075900
&XPLISTVER       SETA  &CACHEPLVERS                               @05A  01076000
.*                                                                      01076100
.SETPLVERSEND    ANOP ,                                           @05A  01076200
.*                                                                      01076300
.**------------------------------------------------------------------** 01076400
.**  Start of code to remove "*" defaults                        @P5A** 01076500
.**                                                                  ** 01076600
.**  This code removes "NO_keyname" values.  Keywords with these     ** 01076700
.**  default values should be treated as if they were not specified. ** 01076800
.**  Removing the values makes it look as if they were not specified ** 01076900
.**  and avoids failure of mutual exclusivity checks.                ** 01077000
.**                                                                  ** 01077100
.**  Some other default values also need to be removed.  These       ** 01077200
.**  values are removed to make the invocation look consistent       ** 01077300
.**  to the checking code.                                           ** 01077400
.**                                                                  ** 01077500
.**------------------------------------------------------------------** 01077600
.*                                                                      01077700
         AIF   ('&XANSLEN'    NE 'NO_ANSLEN').DELDEFANSLEN              01077800
&XANSLEN       SETC ''                                                  01077900
&ZXANSLEN      SETC ''                                                  01078000
.DELDEFANSLEN  ANOP ,                                                   01078100
.*                                                                      01078200
         AIF   ('&XBUFALET'   NE 'NO_BUFALET').DELDEFBUFALET            01078300
&XBUFALET      SETC ''                                                  01078400
&ZXBUFALET     SETC ''                                                  01078500
.DELDEFBUFALET ANOP ,                                                   01078600
.*                                                                      01078700
         AIF   ('&BUFFER(1)'  NE '').DELDEFBUFFER                       01078800
&XBUFFER       SETC ''                                                  01078900
&ZXBUFFER      SETC ''                                                  01079000
.DELDEFBUFFER  ANOP ,                                                   01079100
.*                                                                      01079200
         AIF   ('&XBUFINCRNUM' NE 'NO_BUFINCRNUM').DELDEFBUFINCRNUM     01079300
&XBUFINCRNUM   SETC ''                                                  01079400
&ZXBUFINCRNUM  SETC ''                                                  01079500
.DELDEFBUFINCRNUM ANOP ,                                                01079600
.*                                                                      01079700
         AIF   ('&BUFLIST(1)' NE '').DELDEFBUFLIST                      01079800
&XBUFLIST      SETC ''                                                  01079900
&ZXBUFLIST     SETC ''                                                  01080000
.DELDEFBUFLIST ANOP ,                                                   01080100
.*                                                                      01080200
         AIF   ('&XBUFNUM'    NE 'NO_BUFNUM').DELDEFBUFNUM              01080300
&XBUFNUM       SETC ''                                                  01080400
&ZXBUFNUM      SETC ''                                                  01080500
.DELDEFBUFNUM  ANOP ,                                                   01080600
.*                                                                      01080700
         AIF   ('&XCOCLASS'   NE 'NO_COCLASS').DELDEFCOCLASS       @P5A 01080800
&XCOCLASS      SETC ''                                             @P5A 01080900
&ZXCOCLASS     SETC ''                                             @P5A 01081000
.DELDEFCOCLASS ANOP ,                                              @P5A 01081100
.*                                                                      01081200
         AIF   ('&XNAME'      NE 'NO_NAME').DELDEFNAME             @P5A 01081300
&XNAME         SETC ''                                             @P5A 01081400
&ZXNAME        SETC ''                                             @P5A 01081500
.DELDEFNAME    ANOP ,                                              @P5A 01081600
.*                                                                      01081700
         AIF   ('&XOLDNAME'   NE 'NO_OLDNAME').DELDEFOLDNAME       @P5A 01081800
&XOLDNAME      SETC ''                                             @P5A 01081900
&ZXOLDNAME     SETC ''                                             @P5A 01082000
.DELDEFOLDNAME ANOP ,                                              @P5A 01082100
.*                                                                      01082200
         AIF   ('&XPROCESSID' NE 'NO_PROCESSID').DELDEFPROCESSID        01082300
&XPROCESSID    SETC ''                                                  01082400
&ZXPROCESSID   SETC ''                                                  01082500
.DELDEFPROCESSID ANOP ,                                                 01082600
.*                                                                      01082700
         AIF   ('&XRECLVCTR'  NE 'NO_RECLVCTR').DELDEFRECLVCTR     @P5A 01082800
&XRECLVCTR     SETC ''                                             @P5A 01082900
&ZXRECLVCTR    SETC ''                                             @P5A 01083000
.DELDEFRECLVCTR ANOP ,                                             @P5A 01083100
.*                                                                      01083200
         AIF   ('&XREQDATA'   NE 'NO_REQDATA').DELDEFREQDATA            01083300
&XREQDATA      SETC ''                                                  01083400
&ZXREQDATA     SETC ''                                                  01083500
.DELDEFREQDATA ANOP ,                                                   01083600
.*                                                                      01083700
         AIF   ('&XRESTOKEN'  NE 'NO_RESTOKEN').DELDEFRESTOKEN     @P5A 01083800
&XRESTOKEN     SETC ''                                             @P5A 01083900
&ZXRESTOKEN    SETC ''                                             @P5A 01084000
.DELDEFRESTOKEN ANOP ,                                             @P5A 01084100
.*                                                                      01084200
         AIF   ('&XEXTRESTOKEN'  NE 'NO_EXTRESTOKEN').DELDEFEXTRESTOKEN 01084300
.*                                                                 @L1A 01084400
&XEXTRESTOKEN     SETC ''                                          @L1A 01084500
&ZXEXTRESTOKEN    SETC ''                                          @L1A 01084600
.DELDEFEXTRESTOKEN ANOP ,                                               01084700
.*                                                                      01084800
         AIF   ('&XSTGCLASS'  NE 'NO_STGCLASS').DELDEFSTGCLASS     @P5A 01084900
&XSTGCLASS     SETC ''                                             @P5A 01085000
&ZXSTGCLASS    SETC ''                                             @P5A 01085100
.DELDEFSTGCLASS ANOP ,                                             @P5A 01085200
.*                                                                      01085300
         AIF   ('&XUSERDATA'  NE 'NO_USERDATA').DELDEFUSERDATA          01085400
&XUSERDATA     SETC ''                                                  01085500
&ZXUSERDATA    SETC ''                                                  01085600
.DELDEFUSERDATA ANOP ,                                                  01085700
.*                                                                      01085800
         AIF   ('&XVERSCOMP'  NE 'NO_VERSCOMP').DELDEFVERSCOMP     @05A 01085900
&XVERSCOMP     SETC ''                                             @05A 01086000
&ZXVERSCOMP    SETC ''                                             @05A 01086100
.DELDEFVERSCOMP ANOP ,                                             @05A 01086200
.*                                                                      01086300
         AIF   ('&XNEWVERS'  NE 'NO_NEWVERS').DELDEFNEWVERS        @05A 01086400
&XNEWVERS      SETC ''                                             @05A 01086500
&ZXNEWVERS     SETC ''                                             @05A 01086600
.DELDEFNEWVERS  ANOP ,                                             @05A 01086700
.*                                                                      01086800
.*                                                                      01086900
.**------------------------------------------------------------------** 01087000
.**  Start of code to remove default values when the key cannot      ** 01087100
.**  be specified on the request.                                    ** 01087200
.**                                                                  ** 01087300
.**  Default values need to be removed for keys corresponding to     ** 01087400
.**  maca.xvariable.value statements when the key is not applicable  ** 01087500
.**  to the current request.                                         ** 01087600
.**                                                                  ** 01087700
.**------------------------------------------------------------------** 01087800
.**------------------------------------------------------------------** 01087900
.**  Remove defaults for BufAddrType                                 ** 01088000
.**------------------------------------------------------------------** 01088100
.*                                                                      01088200
         AIF   ('&BUFADDRTYPE(1)' NE '').DEFBUFADDRTYPESPEC             01088300
.*                                                                      01088400
         AIF   ('&XBUFLIST' NE '').DEFBUFADDRTYPESKIPREMOVE             01088500
&XBUFADDRTYPE  SETC ''                                                  01088600
&ZXBUFADDRTYPE SETC ''                                                  01088700
.DEFBUFADDRTYPESKIPREMOVE ANOP ,                                        01088800
.DEFBUFADDRTYPESPEC ANOP ,                                              01088900
.*                                                                      01089000
.**------------------------------------------------------------------** 01089100
.**  Remove defaults for Pageable                                    ** 01089200
.**------------------------------------------------------------------** 01089300
.*                                                                      01089400
         AIF   ('&PAGEABLE(1)' NE '').DEFPAGEABLESPEC                   01089500
.*                                                                      01089600
         AIF   ('&XBUFFER'  NE ''  OR                                  *01089700
                '&XBUFLIST' NE '').DEFPAGEABLESKIPREMOVE                01089800
&XPAGEABLE     SETC ''                                                  01089900
&ZXPAGEABLE    SETC ''                                                  01090000
.DEFPAGEABLESKIPREMOVE ANOP ,                                           01090100
.DEFPAGEABLESPEC ANOP ,                                                 01090200
.*                                                                      01090300
.**------------------------------------------------------------------** 01090400
.**  Remove defaults for NameMask                                    ** 01090500
.**                                                                  ** 01090600
.**  NameMask should default to null for request types that do not   ** 01090700
.**  support NameMask -  Read_DirInfo, Read_CoClass, Reset_RefBit,   ** 01090800
.**  Cross_Inval, and Delete_Name are requests that allow it.        ** 01090900
.**------------------------------------------------------------------** 01091000
.*                                                                      01091100
         AIF   ('&NAMEMASK(1)' NE '').DEFNAMEMASKSPEC                   01091200
.*                                                                      01091300
         AIF   ('&XREQUEST'    EQ 'READ_DIRINFO'   OR                  *01091400
                '&XREQUEST'    EQ 'READ_COCLASS'   OR                  *01091500
                '&XREQUEST'    EQ 'RESET_REFBIT'   OR                  *01091600
                '&XREQUEST'    EQ 'DELETE_NAME'    OR                  *01091700
                '&XREQUEST'    EQ 'CROSS_INVAL').DEFNAMEMASKSKIPREM1    01091800
.*                                                                      01091900
&XNAMEMASK  SETC ''                                                     01092000
&ZXNAMEMASK SETC ''                                                     01092100
.DEFNAMEMASKSKIPREM1 ANOP ,                                             01092200
.*                                                                      01092300
         AIF   ('&XNAME'      NE ''               OR                   *01092400
                ('&XREQUEST'  NE 'READ_DIRINFO'   AND                  *01092500
                 '&XREQUEST'  NE 'READ_COCLASS'   AND                  *01092600
                 '&XREQUEST'  NE 'RESET_REFBIT')).DEFNAMEMASKSKIPREM2   01092700
.*                                                                      01092800
&XNAMEMASK  SETC ''                                                     01092900
&ZXNAMEMASK SETC ''                                                     01093000
.DEFNAMEMASKSKIPREM2 ANOP ,                                             01093100
.*                                                                      01093200
.DEFNAMEMASKSPEC ANOP ,                                                 01093300
.*                                                                      01093400
.**------------------------------------------------------------------** 01093500
.**  Remove defaults for Mode                                        ** 01093600
.**  -- Mode(SyncSuspend) may always be specified                    ** 01093700
.**------------------------------------------------------------------** 01093800
.**  Remove defaults for BufAddrSize                                 ** 01093900
.**------------------------------------------------------------------** 01094000
.*                                                                      01094100
         AIF   ('&BUFADDRSIZE(1)' NE '').DEFBUFADDRSIZESPEC        @L3A 01094200
.*                                                                      01094300
         AIF   ('&XBUFLIST' NE '').DEFBUFADDRSIZESKIPREMOVE             01094400
&XBUFADDRSIZE  SETC ''                                             @L3A 01094500
&ZXBUFADDRSIZE SETC ''                                             @L3A 01094600
.DEFBUFADDRSIZESKIPREMOVE ANOP ,                                   @L3A 01094700
.DEFBUFADDRSIZESPEC ANOP ,                                         @L3A 01094800
.*                                                                      01094900
.**------------------------------------------------------------------** 01095000
.**------------------------------------------------------------------** 01095100
.**  End of code to remove default values when the key cannot        ** 01095200
.**  be specified on the request                                     ** 01095300
.**------------------------------------------------------------------** 01095400
.*                                                                      01095500
.*                                                                      01095600
.**------------------------------------------------------------------** 01095700
.**  Start of code to validity check parameters                      ** 01095800
.**                                                                  ** 01095900
.**  This code is needed in addition to the checks which AMG         ** 01096000
.**  produces because we did not repeat keys in all places where     ** 01096100
.**  they could be used.                                             ** 01096200
.**                                                                  ** 01096300
.**  Validity checking for mutually exclusive keys, required keys,   ** 01096400
.**  and dependent keys is performed for the standard and execute    ** 01096500
.**  forms.                                                          ** 01096600
.**                                                                  ** 01096700
.**  Skip all checking if MF(L) or MF(x,y,NOCHECK) was specified.    ** 01096800
.**                                                                  ** 01096900
.**------------------------------------------------------------------** 01097000
.* Skip all validity checking if MF=L or MF specifies NOCHECK           01097100
        AIF   ('&MF(1)' EQ 'L'   OR                                    *01097200
               '&MF(3)' EQ 'NOCHECK').ENDPARMVALIDATION                 01097300
.**------------------------------------------------------------------** 01097400
.**  Validity checking for AnsArea                                   ** 01097500
.**                                                                  ** 01097600
.** AnsArea is required when Mode(SyncToken|AsyncToken) is           ** 01097700
.**   specified.  In all other cases it is optional.                 ** 01097800
.**                                                                  ** 01097900
         AIF   ('&XANSAREA' NE '' AND                                  *01098000
                '&XANSAREA' NE 'NO_ANSAREA').ANSAREASPEC                01098100
.*                                                                      01098200
.*                                                                      01098300
         AIF   ('&XMODE' NE 'SYNCTOKEN'    AND                         *01098400
                '&XMODE' NE 'ASYNCTOKEN').NOANSNOTTOKEN                 01098500
         MNOTE  8,'IXLCACHE ---> The ANSAREA key is required when MODE=*01098600
               &XMODE is specified'                                     01098700
&ZMACRET SETA  8                                                        01098800
.NOANSNOTTOKEN ANOP ,                                                   01098900
.*                                                                      01099000
.*                                                                      01099100
.ANSAREASPEC ANOP ,                                                     01099200
.**                                                                  ** 01099300
.**  End of validity checking for AnsArea                            ** 01099400
.**------------------------------------------------------------------** 01099500
.**------------------------------------------------------------------** 01099600
.**  Validity checking for Buffer and BufList                        ** 01099700
.**                                                                  ** 01099800
.**  For Cross_Inval, Delete_Name, Reset_RefBit, Read_StgStats,      ** 01099900
.**    Set_ReclVctr, and Unlock_CO_Name                              ** 01100000
.**    Buffer and BufList cannot be specified                        ** 01100100
.**                                                                  ** 01100200
.**  For Castout_Data, Unlock_Castout, Read_CoClass,                 ** 01100300
.**    Read_DirInfo, Read_CoStats, Process_RefList,                  ** 01100400
.**    and Delete_NameList                                           ** 01100500
.**    Buffer or BufList is required                                 ** 01100600
.**                                                                  ** 01100700
.**  For Reg_NameList, Buffer is required.  BufList cannot be        ** 01100800
.**  specified                                                       ** 01100900
.**                                                                  ** 01101000
.**  For Read_Data                                                   ** 01101100
.**    Buffer or BufList may optionally be specified                 ** 01101200
.**                                                                  ** 01101300
.**  For Write_Data Buffer or Buflist is required when CHANGED=YES   ** 01101400
.**    and optional when CHANGED=NO                                  ** 01101500
.**                                                                  ** 01101600
.**                                                                  ** 01101700
         AIF   ('&XREQUEST' NE 'REG_NAMELIST').NOTREGNAMELIST      @02A 01101800
         AIF   ('&XBUFFER'  NE '').BUFFERSPEC                      @02A 01101900
         MNOTE 8,'IXLCACHE ---> BUFFER is required when REQUEST=&XREQUE*01102000
               ST is specified'                                         01102100
&ZMACRET SETA  8                                                   @02A 01102200
.BUFFERSPEC ANOP ,                                                 @02A 01102300
         AIF   ('&XBUFLIST' EQ '').ENDREGNAMELIST                  @02A 01102400
         MNOTE 8,'IXLCACHE ---> The &XDATAREA key is mutually exclusive*01102500
                with REQUEST=&XREQUEST'                                 01102600
&ZMACRET SETA  8                                                   @02A 01102700
.NOTREGNAMELIST ANOP ,                                             @02A 01102800
.ENDREGNAMELIST ANOP ,                                             @02A 01102900
.*                                                                      01103000
         AIF   ('&XBUFFER'  EQ '' AND                                  *01103100
                '&XBUFLIST' EQ '').BUFFERNOTSPEC                        01103200
.*                                                                      01103300
         AIF   ('&XREQUEST' NE 'CROSS_INVAL'      AND                  *01103400
                '&XREQUEST' NE 'DELETE_NAME'      AND                  *01103500
                '&XREQUEST' NE 'RESET_REFBIT'     AND                  *01103600
                '&XREQUEST' NE 'READ_STGGSTATS'   AND                  *01103700
                '&XREQUEST' NE 'UNLOCK_CO_NAME'   AND                  *01103800
                '&XREQUEST' NE 'SET_RECLVCTR').NOBUFFERERROR001    @04C 01103900
         MNOTE 8,'IXLCACHE ---> The &XDATAREA key is mutually exclusive*01104000
                with REQUEST=&XREQUEST'                                 01104100
&ZMACRET SETA  8                                                        01104200
.NOBUFFERERROR001 ANOP ,                                                01104300
.BUFFERNOTSPEC ANOP ,                                                   01104400
.*                                                                      01104500
         AIF   ('&XBUFFER'  NE ''  OR                                  *01104600
                '&XBUFLIST' NE '').BUFORBUFLISTSPEC                     01104700
.*                                                                      01104800
         AIF   ('&XREQUEST' NE 'CASTOUT_DATA'     AND                  *01104900
                '&XREQUEST' NE 'UNLOCK_CASTOUT'   AND                  *01105000
                '&XREQUEST' NE 'READ_COCLASS'     AND                  *01105100
                '&XREQUEST' NE 'READ_DIRINFO'     AND                  *01105200
                '&XREQUEST' NE 'READ_COSTATS'     AND                  *01105300
                '&XREQUEST' NE 'DELETE_NAMELIST'  AND                  *01105400
                '&XREQUEST' NE 'PROCESS_REFLIST').NOBUFLISTNOTERROR     01105500
         MNOTE 8,'IXLCACHE ---> BUFFER or BUFLIST is required when REQU*01105600
               EST=&XREQUEST is specified'                        @05C  01105700
&ZMACRET SETA  8                                                        01105800
.NOBUFLISTNOTERROR ANOP ,                                               01105900
.*                                                                      01106000
         AIF   ('&XREQUEST' NE 'WRITE_DATA'       OR                   *01106100
                '&XCHANGED' NE 'YES').NOWRTDATANOTERROR           @04A  01106200
         MNOTE 8,'IXLCACHE ---> BUFFER or BUFLIST is required when REQU*01106300
               EST=&XREQUEST and CHANGED=YES is specified'        @04A  01106400
&ZMACRET SETA  8                                                  @04A  01106500
.NOWRTDATANOTERROR ANOP ,                                         @04A  01106600
.BUFORBUFLISTSPEC ANOP ,                                                01106700
.**                                                                  ** 01106800
.**  End of validity checking for Buffer and BufList                 ** 01106900
.**------------------------------------------------------------------** 01107000
.**------------------------------------------------------------------** 01107100
.**  Validity checking for BufNum                                    ** 01107200
.**                                                                  ** 01107300
.**  BufNum is required if BufList is specified                      ** 01107400
.**                                                                  ** 01107500
         AIF   ('&XBUFNUM' NE '').BUFNUMSPEC                            01107600
.*                                                                      01107700
         AIF   ('&XBUFLIST' EQ '').BUFNUMERROR001                       01107800
         MNOTE 8,'IXLCACHE ---> The BUFNUM key is required when BUFLIST*01107900
                is specified'                                           01108000
&ZMACRET SETA  8                                                        01108100
.BUFNUMERROR001 ANOP ,                                                  01108200
.BUFNUMSPEC ANOP ,                                                      01108300
.**                                                                  ** 01108400
.**  End of validity checking for BufNum                             ** 01108500
.**------------------------------------------------------------------** 01108600
.**------------------------------------------------------------------** 01108700
.**  Validity checking for BufIncrNum                                ** 01108800
.**                                                                  ** 01108900
.**  For Unlock_Castout, Read_CoClass, Read_DirInfo, Read_CoStats,   ** 01109000
.**    Process_RefList                                               ** 01109100
.**    BufIncrNum cannot be specified                                ** 01109200
.**                                                                  ** 01109300
.**  For Read_Data, Write_Data, Castout_Data, Delete_NameList        ** 01109400
.**    BufIncrNum is required if BufList is specified                ** 01109500
.**                                                                  ** 01109600
         AIF   ('&XBUFINCRNUM' EQ '').BUFINCRNUMNOTSPEC                 01109700
.*                                                                      01109800
         AIF   ('&XREQUEST' NE 'UNLOCK_CASTOUT'    AND                 *01109900
                '&XREQUEST' NE 'READ_COCLASS'      AND                 *01110000
                '&XREQUEST' NE 'READ_DIRINFO'      AND                 *01110100
                '&XREQUEST' NE 'READ_COSTATS'      AND                 *01110200
                '&XREQUEST' NE 'PROCESS_REFLIST').BUFINCRNUMERROR001    01110300
         MNOTE 8,'IXLCACHE ---> The BUFINCRNUM key is mutually exclusiv*01110400
               e with REQUEST=&XREQUEST'                                01110500
&ZMACRET SETA  8                                                        01110600
.BUFINCRNUMERROR001 ANOP ,                                              01110700
.BUFINCRNUMNOTSPEC ANOP ,                                               01110800
.*                                                                      01110900
         AIF   ('&XBUFINCRNUM' NE '').BUFINCRNUMSPEC                    01111000
.*                                                                      01111100
         AIF   (('&XREQUEST' NE 'READ_DATA'        AND                 *01111200
                 '&XREQUEST' NE 'WRITE_DATA'       AND                 *01111300
                 '&XREQUEST' NE 'DELETE_NAMELIST'  AND                 *01111400
                 '&XREQUEST' NE 'CASTOUT_DATA')    OR                  *01111500
                '&XBUFLIST' EQ '').BUFINCRNUMERROR002                   01111600
         MNOTE 8,'IXLCACHE ---> The BUFINCRNUM key is required with REQ*01111700
               UEST=&XREQUEST when BUFLIST is specified'          @05C  01111800
&ZMACRET SETA  8                                                        01111900
.BUFINCRNUMERROR002 ANOP ,                                              01112000
.BUFINCRNUMSPEC ANOP ,                                                  01112100
.**                                                                  ** 01112200
.**  End of validity checking for BufIncrNum                         ** 01112300
.**------------------------------------------------------------------** 01112400
.**------------------------------------------------------------------** 01112500
.**  Validity checking for AdjArea                                   ** 01112600
.**                                                                  ** 01112700
.**  For Read_Data, Write_Data, Castout_Data                         ** 01112800
.**    AdjArea is optional                                           ** 01112900
.**                                                                  ** 01113000
.**  AdjArea is mutually exclusive with all other requests           ** 01113100
.**                                                                  ** 01113200
         AIF   ('&XADJAREA' EQ 'NO_ADJAREA'       OR                   *01113300
                '&XADJAREA' EQ '').ADJAREANOTSPEC                  @P7C 01113400
.*                                                                      01113500
         AIF   ('&XREQUEST' EQ 'READ_DATA'        OR                   *01113600
                '&XREQUEST' EQ 'WRITE_DATA'       OR                   *01113700
                '&XREQUEST' EQ 'CASTOUT_DATA').ADJAREAERROR001          01113800
         MNOTE 8,'IXLCACHE ---> The ADJAREA key is mutually exclusive w*01113900
               ith REQUEST=&XREQUEST'                                   01114000
&ZMACRET SETA  8                                                        01114100
.ADJAREAERROR001 ANOP ,                                                 01114200
.ADJAREANOTSPEC ANOP ,                                                  01114300
.**                                                                  ** 01114400
.**  End of validity checking for AdjArea                            ** 01114500
.**------------------------------------------------------------------** 01114600
.**------------------------------------------------------------------** 01114700
.**  Validity checking for StgClass                                  ** 01114800
.**                                                                  ** 01114900
.**  For Read_Data, Write_Data, Read_StgStats, Process_RefList,      ** 01115000
.**    Set_ReclVctr                                                  ** 01115100
.**    StgClass is required                                          ** 01115200
.**                                                                  ** 01115300
.**  StgClass is mutually exclusive with all other requests          ** 01115400
.**                                                                  ** 01115500
         AIF   ('&XSTGCLASS' EQ '').STGCLASSNOTSPEC                     01115600
.*                                                                      01115700
         AIF   ('&XREQUEST' EQ 'READ_DATA'        OR                   *01115800
                '&XREQUEST' EQ 'WRITE_DATA'       OR                   *01115900
                '&XREQUEST' EQ 'READ_STGSTATS'    OR                   *01116000
                '&XREQUEST' EQ 'PROCESS_REFLIST'  OR                   *01116100
                '&XREQUEST' EQ 'SET_RECLVCTR').STGCLASSERROR001         01116200
         MNOTE 8,'IXLCACHE ---> The STGCLASS key is mutually exclusive *01116300
               with REQUEST=&XREQUEST'                                  01116400
&ZMACRET SETA  8                                                        01116500
.STGCLASSERROR001 ANOP ,                                                01116600
.STGCLASSNOTSPEC ANOP ,                                                 01116700
.*                                                                      01116800
         AIF   ('&XSTGCLASS' NE '').STGCLASSSPEC                        01116900
.*                                                                      01117000
         AIF   ('&XREQUEST' NE 'READ_DATA'        AND                  *01117100
                '&XREQUEST' NE 'WRITE_DATA'       AND                  *01117200
                '&XREQUEST' NE 'READ_STGSTATS'    AND                  *01117300
                '&XREQUEST' NE 'PROCESS_REFLIST'  AND                  *01117400
                '&XREQUEST' NE 'SET_RECLVCTR').STGCLASSERROR002         01117500
         MNOTE 8,'IXLCACHE ---> The STGCLASS key is required with REQUE*01117600
               ST=&XREQUEST'                                            01117700
&ZMACRET SETA  8                                                        01117800
.STGCLASSERROR002 ANOP ,                                                01117900
.STGCLASSSPEC ANOP ,                                                    01118000
.**                                                                  ** 01118100
.**  End of validity checking for StgClass                           ** 01118200
.**------------------------------------------------------------------** 01118300
.**------------------------------------------------------------------** 01118400
.**  Validity checking for CoClass                                   ** 01118500
.**                                                                  ** 01118600
.**  For Write_Data Changed(Yes), Read_CoClass                       ** 01118700
.**    CoClass is required                                           ** 01118800
.**                                                                  ** 01118900
.**  CoClass is mutually exclusive with all other requests           ** 01119000
.**                                                                  ** 01119100
         AIF   ('&XCOCLASS' EQ '').COCLASSNOTSPEC                       01119200
.*                                                                      01119300
         AIF   ('&XREQUEST' EQ 'WRITE_DATA'       OR                   *01119400
                '&XREQUEST' EQ 'READ_COCLASS').COCLASSERROR001          01119500
         MNOTE 8,'IXLCACHE ---> The COCLASS key is mutually exclusive w*01119600
               ith REQUEST=&XREQUEST'                                   01119700
&ZMACRET SETA  8                                                        01119800
.COCLASSERROR001 ANOP ,                                                 01119900
.*                                                                      01120000
         AIF   ('&XREQUEST' NE 'WRITE_DATA'       OR                   *01120100
                '&XCHANGED' EQ 'YES').COCLASSERROR002                   01120200
         MNOTE 8,'IXLCACHE ---> The COCLASS key is mutually exclusive w*01120300
               ith REQUEST=WRITE_DATA when CHANGED=YES is not specified*01120400
               '                                                        01120500
&ZMACRET SETA  8                                                        01120600
.COCLASSERROR002 ANOP ,                                                 01120700
.COCLASSNOTSPEC ANOP ,                                                  01120800
.*                                                                      01120900
         AIF   ('&XCOCLASS' NE '').COCLASSSPEC                          01121000
.*                                                                      01121100
         AIF   ('&XREQUEST' NE 'READ_COCLASS').COCLASSERROR003          01121200
         MNOTE 8,'IXLCACHE ---> The COCLASS key is required with REQUES*01121300
               T=&XREQUEST'                                             01121400
&ZMACRET SETA  8                                                        01121500
.COCLASSERROR003 ANOP ,                                                 01121600
.*                                                                      01121700
         AIF   ('&XREQUEST' NE 'WRITE_DATA'       OR                   *01121800
                '&XCHANGED' NE 'YES').COCLASSERROR004                   01121900
         MNOTE 8,'IXLCACHE ---> The COCLASS key is required with REQUES*01122000
               T=WRITE_DATA when CHANGED=YES is specified'              01122100
&ZMACRET SETA  8                                                        01122200
.COCLASSERROR004 ANOP ,                                                 01122300
.COCLASSSPEC ANOP ,                                                     01122400
.**                                                                  ** 01122500
.**  End of validity checking for CoClass                            ** 01122600
.**------------------------------------------------------------------** 01122700
.**------------------------------------------------------------------** 01122800
.**  Validity checking for VectorIndex                               ** 01122900
.**                                                                  ** 01123000
.**  For Read_Data, Write_Data WhenReg(No), or Castout_Data          ** 01123100
.**    when either RegUser(YES) or OldName is specified              ** 01123200
.**    VectorIndex is required.                                      ** 01123300
.**                                                                  ** 01123400
.**  For Write_Data WhenReg(Yes),                                    ** 01123500
.**    VectorIndex is optional                                       ** 01123600
.**                                                                  ** 01123700
.**  VectorIndex is mutually exclusive with all other requests       ** 01123800
.**                                                                  ** 01123900
         AIF   ('&XVECTORINDEX' EQ 'NO_VECTORINDEX' OR                 *01124000
                '&XVECTORINDEX' EQ '').VECTORINDEXNOTSPEC               01124100
.*                                                                      01124200
         AIF   ('&XREQUEST' EQ 'READ_DATA'        OR                   *01124300
                '&XREQUEST' EQ 'WRITE_DATA'       OR                   *01124400
                '&XREQUEST' EQ 'CASTOUT_DATA').VECTORINDEXERROR002 @02C 01124500
         MNOTE 8,'IXLCACHE ---> The VECTORINDEX key is mutually exclusi*01124600
               ve with REQUEST=&XREQUEST'                               01124700
&ZMACRET SETA  8                                                        01124800
.*                                                                4@02D 01124900
.VECTORINDEXERROR002 ANOP ,                                             01125000
.VECTORINDEXNOTSPEC ANOP ,                                        8@05D 01125100
.*                                                                      01125200
         AIF   ('&XVECTORINDEX' NE 'NO_VECTORINDEX' AND                *01125300
                '&XVECTORINDEX' NE '').VECTORINDEXSPEC                  01125400
.*                                                                      01125500
         AIF   ('&XREQUEST' NE 'READ_DATA').VECTORINDEXERROR003         01125600
         AIF   ('&XREGUSER' NE 'YES'              AND                  *01125700
                '&XOLDNAME' EQ '').VECTORINDEXERROR003             @PKC 01125800
         MNOTE 8,'IXLCACHE ---> The VECTORINDEX key is required with RE*01125900
               QUEST=&XREQUEST when either REGUSER=YES or OLDNAME is sp*01126000
               ecified'                                            @05C 01126100
&ZMACRET SETA  8                                                        01126200
.*                                                                6@05D 01126300
.VECTORINDEXERROR003 ANOP ,                                             01126400
.*                                                                      01126500
         AIF   ('&XREQUEST' NE 'WRITE_DATA'       OR                   *01126600
                '&XWHENREG' NE 'NO').VECTORINDEXERROR004                01126700
         AIF   ('&XREGUSER' NE 'YES'              AND                  *01126800
                '&XOLDNAME' EQ '').VECTORINDEXERROR004             @PKC 01126900
         MNOTE 8,'IXLCACHE ---> The VECTORINDEX key is required with RE*01127000
               QUEST=WRITE_DATA when WHENREG=NO is specified and either*01127100
                REGUSER=YES or OLDNAME is specified'               @PKC 01127200
&ZMACRET SETA  8                                                        01127300
.VECTORINDEXERROR004 ANOP ,                                             01127400
.*                                                                      01127500
         AIF   ('&XREQUEST' NE 'CASTOUT_DATA').VECTORINDEXERROR005      01127600
         AIF   ('&XREGUSER' NE 'YES'              AND                  *01127700
                '&XOLDNAME' EQ '').VECTORINDEXERROR005             @05C 01127800
         MNOTE 8,'IXLCACHE ---> The VECTORINDEX key is required with RE*01127900
               QUEST=&XREQUEST when either REGUSER=YES or OLDNAME is sp*01128000
               ecified.'                                           @05C 01128100
&ZMACRET SETA  8                                                        01128200
.VECTORINDEXERROR005 ANOP ,                                             01128300
.VECTORINDEXSPEC ANOP ,                                                 01128400
.**                                                                  ** 01128500
.**  End of validity checking for VectorIndex                        ** 01128600
.**------------------------------------------------------------------** 01128700
.**------------------------------------------------------------------** 01128800
.**  Validity checking for ResToken                                  ** 01128900
.**                                                                  ** 01129000
.**  For Cross_Inval, Delete_Name, Read_CoClass, Read_DirInfo,       ** 01129100
.**    Reset_RefBit                                                  ** 01129200
.**    ResToken is optional                                          ** 01129300
.**                                                                  ** 01129400
.**  ResToken is mutually exclusive with all other requests          ** 01129500
.**                                                                  ** 01129600
         AIF   ('&XRESTOKEN' EQ '').RESTOKENNOTSPEC                     01129700
.*                                                                      01129800
         AIF   ('&XREQUEST' EQ 'CROSS_INVAL'      OR                   *01129900
                '&XREQUEST' EQ 'DELETE_NAME'      OR                   *01130000
                '&XREQUEST' EQ 'READ_COCLASS'     OR                   *01130100
                '&XREQUEST' EQ 'READ_DIRINFO'     OR                   *01130200
                '&XREQUEST' EQ 'RESET_REFBIT').RESTOKENERROR001         01130300
         MNOTE 8,'IXLCACHE ---> The RESTOKEN key is mutually exclusive *01130400
               with REQUEST=&XREQUEST'                                  01130500
&ZMACRET SETA  8                                                        01130600
.RESTOKENERROR001 ANOP ,                                                01130700
.RESTOKENNOTSPEC ANOP ,                                                 01130800
.**                                                                  ** 01130900
.**  End of validity checking for ResToken                           ** 01131000
.**------------------------------------------------------------------** 01131100
.**------------------------------------------------------------------** 01131200
.**  Validity checking for ExtResToken                               ** 01131300
.**                                                                  ** 01131400
.**  For Cross_Inval, Delete_Name, Read_CoClass, Read_DirInfo,       ** 01131500
.**    Reset_RefBit                                                  ** 01131600
.**    ExtResToken is optional                                       ** 01131700
.**                                                                  ** 01131800
.**  ExtResToken is mutually exclusive with all other requests       ** 01131900
.**                                                                  ** 01132000
         AIF   ('&XEXTRESTOKEN' EQ '').EXTRESTOKENNOTSPEC               01132100
.*                                                                      01132200
         AIF   ('&XREQUEST' EQ 'CROSS_INVAL'      OR                   *01132300
                '&XREQUEST' EQ 'DELETE_NAME'      OR                   *01132400
                '&XREQUEST' EQ 'READ_COCLASS'     OR                   *01132500
                '&XREQUEST' EQ 'READ_DIRINFO'     OR                   *01132600
                '&XREQUEST' EQ 'RESET_REFBIT').EXTRESTOKENERROR001      01132700
         MNOTE 8,'IXLCACHE ---> The RESTOKEN key is mutually exclusive *01132800
               with REQUEST=&XREQUEST'                                  01132900
&ZMACRET SETA  8                                                        01133000
.EXTRESTOKENERROR001 ANOP ,                                             01133100
.EXTRESTOKENNOTSPEC ANOP ,                                              01133200
.**                                                                  ** 01133300
.**  End of validity checking for ResToken                           ** 01133400
.**------------------------------------------------------------------** 01133500
.**------------------------------------------------------------------** 01133600
.**  Validity checking for Name                                      ** 01133700
.**                                                                  ** 01133800
.**  For Read_Data, Write_Data, Castout_Data, Cross_Inval,           ** 01133900
.**    Delete_Name                                                   ** 01134000
.**    Name is required                                              ** 01134100
.**                                                                  ** 01134200
.**  For Read_CoClass, Read_DirInfo, Reset_RefBit                    ** 01134300
.**    Name is optional                                              ** 01134400
.**                                                                  ** 01134500
.**  For Unlock_Castout, Read_CoStats, Read_StgStats,                ** 01134600
.**    Process_RefList, Set_ReclVctr, Reg_NameList,                  ** 01134700
.**    Unlock_CO_Name, Delete_NameList                               ** 01134800
.**    Name is mutually exclusive                                    ** 01134900
.**                                                                  ** 01135000
         AIF   ('&XNAME' EQ '').NAMENOTSPEC                             01135100
.*                                                                      01135200
         AIF   ('&XREQUEST' NE 'UNLOCK_CASTOUT'   AND                  *01135300
                '&XREQUEST' NE 'READ_COSTATS'     AND                  *01135400
                '&XREQUEST' NE 'READ_STGSTATS'    AND                  *01135500
                '&XREQUEST' NE 'PROCESS_REFLIST'  AND                  *01135600
                '&XREQUEST' NE 'SET_RECLVCTR'     AND                  *01135700
                '&XREQUEST' NE 'UNLOCK_CO_NAME'   AND                  *01135800
                '&XREQUEST' NE 'DELETE_NAMELIST'  AND                  *01135900
                '&XREQUEST' NE 'REG_NAMELIST').NAMEERROR001        @05C 01136000
         MNOTE 8,'IXLCACHE ---> The NAME key is mutually exclusive with*01136100
                REQUEST=&XREQUEST'                                      01136200
&ZMACRET SETA  8                                                        01136300
.NAMEERROR001 ANOP ,                                                    01136400
.NAMENOTSPEC ANOP ,                                                     01136500
.*                                                                      01136600
         AIF   ('&XNAME' NE '').NAMESPEC                                01136700
.*                                                                      01136800
         AIF   ('&XREQUEST' NE 'READ_DATA'        AND                  *01136900
                '&XREQUEST' NE 'WRITE_DATA'       AND                  *01137000
                '&XREQUEST' NE 'CASTOUT_DATA'     AND                  *01137100
                '&XREQUEST' NE 'CROSS_INVAL'      AND                  *01137200
                '&XREQUEST' NE 'DELETE_NAME').NAMEERROR002              01137300
         MNOTE  8,'IXLCACHE ---> The NAME key is required with REQUEST=*01137400
               &XREQUEST'                                               01137500
&ZMACRET SETA  8                                                        01137600
.NAMEERROR002 ANOP ,                                                    01137700
.NAMESPEC ANOP ,                                                        01137800
.**                                                                  ** 01137900
.**  End of validity checking for Name                               ** 01138000
.**------------------------------------------------------------------** 01138100
.**------------------------------------------------------------------** 01138200
.**  Validity checking for NameMask                                  ** 01138300
.**                                                                  ** 01138400
.**  For Cross_Inval, Delete_Name, Read_CoClass, Read_DirInfo,       ** 01138500
.**    Reset_RefBit                                                  ** 01138600
.**    NameMask is optional                                          ** 01138700
.**                                                                  ** 01138800
.**  NameMask is mutually exclusive with all other requests          ** 01138900
.**                                                                  ** 01139000
         AIF   ('&XNAMEMASK' EQ '').NAMEMASKNOTSPEC                     01139100
.*                                                                      01139200
         AIF   ('&XREQUEST' EQ 'CROSS_INVAL'      OR                   *01139300
                '&XREQUEST' EQ 'DELETE_NAME'      OR                   *01139400
                '&XREQUEST' EQ 'READ_COCLASS'     OR                   *01139500
                '&XREQUEST' EQ 'READ_DIRINFO'     OR                   *01139600
                '&XREQUEST' EQ 'RESET_REFBIT').NAMEMASKERROR001         01139700
         MNOTE 8,'IXLCACHE ---> The NAMEMASK key is mutually exclusive *01139800
               with REQUEST=&XREQUEST'                                  01139900
&ZMACRET SETA  8                                                        01140000
.NAMEMASKERROR001 ANOP ,                                                01140100
.NAMEMASKNOTSPEC ANOP ,                                                 01140200
.**                                                                  ** 01140300
.**  End of validity checking for NameMask                           ** 01140400
.**------------------------------------------------------------------** 01140500
.**------------------------------------------------------------------** 01140600
.**  Validity checking for OldName                                   ** 01140700
.**                                                                  ** 01140800
.**  For Read_Data, Write_Data WhenReg(No),                          ** 01140900
.**    Castout_Data                                                  ** 01141000
.**    OldName is optional                                           ** 01141100
.**                                                                  ** 01141200
.**  OldName is mutually exclusive with all other requests           ** 01141300
.**                                                                  ** 01141400
         AIF   ('&XOLDNAME' EQ '').OLDNAMENOTSPEC                       01141500
.*                                                                      01141600
         AIF   ('&XREQUEST' EQ 'READ_DATA'        OR                   *01141700
                '&XREQUEST' EQ 'WRITE_DATA'       OR                   *01141800
                '&XREQUEST' EQ 'CASTOUT_DATA').OLDNAMEERROR001          01141900
         MNOTE 8,'IXLCACHE ---> The OLDNAME key is mutually exclusive w*01142000
               ith REQUEST=&XREQUEST'                                   01142100
&ZMACRET SETA  8                                                        01142200
.OLDNAMEERROR001 ANOP ,                                                 01142300
.*                                                                      01142400
         AIF   ('&XREQUEST' NE 'WRITE_DATA'       OR                   *01142500
                '&XWHENREG' EQ 'NO').OLDNAMEERROR002                    01142600
         MNOTE 8,'IXLCACHE ---> The OLDNAME key is mutually exclusive w*01142700
               ith REQUEST=WRITE_DATA when WHENREG=NO is not specified' 01142800
&ZMACRET SETA  8                                                        01142900
.OLDNAMEERROR002 ANOP ,                                                 01143000
.*                                                                6@05D 01143100
.OLDNAMENOTSPEC ANOP ,                                                  01143200
.**                                                                  ** 01143300
.**  End of validity checking for OldName                            ** 01143400
.**------------------------------------------------------------------** 01143500
.**------------------------------------------------------------------** 01143600
.**  Validity checking for Mode                                      ** 01143700
.**                                                                  ** 01143800
.** a) Mode(AsyncNoResponse) is may only be specified with           ** 01143900
.**    Set_ReclVctr requests                                         ** 01144000
.**                                                                  ** 01144100
         AIF   ('&XMODE' NE 'ASYNCNORESPONSE').ASYNCNORESPONSENOTSPEC   01144200
.*                                                                      01144300
         AIF   ('&XREQUEST' EQ 'SET_RECLVCTR').MODEERROR001             01144400
         MNOTE 8,'IXLCACHE ---> MODE=&XMODE is mutually exclusive with *01144500
               REQUEST=&XREQUEST'                                       01144600
&ZMACRET SETA  8                                                        01144700
.MODEERROR001 ANOP ,                                                    01144800
.ASYNCNORESPONSENOTSPEC ANOP ,                                          01144900
.**                                                                  ** 01145000
.**  End of validity checking for Mode                               ** 01145100
.**------------------------------------------------------------------** 01145200
.*                                                                      01145300
.ENDPARMVALIDATION ANOP ,                                               01145400
.*                                                                      01145500
.**------------------------------------------------------------------** 01145600
.**  End of code to validity check parameters                        ** 01145700
.**------------------------------------------------------------------** 01145800
.**------------------------------------------------------------------** 01145900
.**  End of user macasm code                                         ** 01146000
.**------------------------------------------------------------------** 01146100
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  01146200
.********************************************************************   01146300
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     01146400
.********************************************************************   01146500
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       01146600
                      LCLA  &ZOPN1         INVOCATION INDEX             01146700
                      LCLC  &ZOPL(4095)    LABEL                        01146800
                      LCLC  &ZOPO(4095)    OPERATION                    01146900
                      LCLC  &ZOPV(4095)    VALUE                        01147000
                      LCLC  &ZOPD(4095)    DESCRIPTION                  01147100
.*                                                                      01147200
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     01147300
.******************************************************************     01147400
.***AL.L10 IXLCACHE FMT=LIST MF=S|L PARAMETERS                          01147500
.******************************************************************     01147600
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     01147700
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     01147800
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     01147900
&XMFATTR              SETC  '0D'                                        01148000
.*                                                                      01148100
&ZOPN                 SETA  &ZOPN+1                                     01148200
&ZOPL(&ZOPN)          SETC  ' '                                         01148300
                      AIF   (&SYSALVL NE 0).ZALVL6A                     01148400
&ZOPO(&ZOPN)          SETC  'B'                                         01148500
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                01148600
                      AGO   .ZALVL6B                                    01148700
.ZALVL6A              ANOP                                              01148800
&ZOPO(&ZOPN)          SETC  'BRAS'                                      01148900
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              01149000
.ZALVL6B              ANOP                                              01149100
&ZOPD(&ZOPN)          SETC  '++ IXLCACHE ARG PARMS'                     01149200
.*                                                                      01149300
&ZOPN                 SETA  &ZOPN+1                                     01149400
&ZOPL(&ZOPN)          SETC  ' '                                         01149500
&ZOPO(&ZOPN)          SETC  'SPACE'                                     01149600
&ZOPV(&ZOPN)          SETC  '1'                                         01149700
&ZOPD(&ZOPN)          SETC  ' '                                         01149800
.*                                                                      01149900
.ZLMFSL2              ANOP  ,                                           01150000
.*-------------------------------------------------------------------   01150100
.***AM.L00  IXLCACHE FMT=LIST name                                      01150200
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    01150300
&ZOPN                 SETA &ZOPN+1                                      01150400
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   01150500
&ZOPO(&ZOPN)          SETC 'EQU'                                        01150600
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   01150700
&ZOPD(&ZOPN)          SETC '++ IXLCACHE NAME'                           01150800
.ZLMFSL2M             ANOP  ,                                           01150900
.*-------------------------------------------------------------------   01151000
.***AM.L01  IXLCACHE FMT=LIST PARAMETERS                                01151100
&ZOPN                 SETA &ZOPN+1                                      01151200
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   01151300
&ZOPO(&ZOPN)          SETC 'DS'                                         01151400
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   01151500
&ZOPD(&ZOPN)          SETC '++ IXLCACHE PARM LIST'                      01151600
.*-------------------------------------------------------------------   01151700
.***AM.L09  XSHL_DATA CL96                                              01151800
&ZOPN                 SETA &ZOPN+1                                      01151900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHL_DATA'                        01152000
&ZOPO(&ZOPN)          SETC 'DS'                                         01152100
&ZOPV(&ZOPN)          SETC 'CL96'                                       01152200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XSHL_DATA'                  01152300
.*-------------------------------------------------------------------   01152400
.***AM.L09  XMOB_DATA CL4                                               01152500
&ZOPN                 SETA &ZOPN+1                                      01152600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMOB_DATA'                        01152700
&ZOPO(&ZOPN)          SETC 'DS'                                         01152800
&ZOPV(&ZOPN)          SETC 'CL4'                                        01152900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XMOB_DATA'                  01153000
.*-------------------------------------------------------------------   01153100
.***AM.L09  XMCB_DATA CL68                                              01153200
&ZOPN                 SETA &ZOPN+1                                      01153300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATA'                        01153400
&ZOPO(&ZOPN)          SETC 'DS'                                         01153500
&ZOPV(&ZOPN)          SETC 'CL68'                                       01153600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XMCB_DATA'                  01153700
.*-------------------------------------------------------------------   01153800
.***AM.MLM2 SAVED LOCATION COUNTER                                      01153900
                      AIF  (&XPLISTVER GE 3).ZL4LA                      01154000
                      AIF  ('&ZENDBASEPL' NE '').ZL4LA                  01154100
&ZENDBASEPL           SETC 'YES'                                        01154200
&ZOPN                 SETA &ZOPN+1                                      01154300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           01154400
&ZOPO(&ZOPN)          SETC 'EQU'                                        01154500
&ZOPV(&ZOPN)          SETC '*'                                          01154600
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       01154700
.ZL4LA                ANOP  ,                                           01154800
.*-------------------------------------------------------------------   01154900
.***AM.LVER1                                                            01155000
                      AIF  (&XPLISTVER LT 3).ZL4L                       01155100
.*-------------------------------------------------------------------   01155200
.*-------------------------------------------------------------------   01155300
.***AM.L09  XMCB_DATA1 CL24                                             01155400
&ZOPN                 SETA &ZOPN+1                                      01155500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATA1'                       01155600
&ZOPO(&ZOPN)          SETC 'DS'                                         01155700
&ZOPV(&ZOPN)          SETC 'CL24'                                       01155800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XMCB_DATA1'                 01155900
.*-------------------------------------------------------------------   01156000
.***AM.LVER2                                                            01156100
.ZL4L                 ANOP  ,                                           01156200
.*-------------------------------------------------------------------   01156300
.*-------------------------------------------------------------------   01156400
.***AM.MLM1 SAVED LOCATION COUNTER                                      01156500
                      AIF  ('&ZENDBASEPL' NE '').ZL5LB                  01156600
&ZENDBASEPL           SETC 'YES'                                        01156700
&ZOPN                 SETA &ZOPN+1                                      01156800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           01156900
&ZOPO(&ZOPN)          SETC 'EQU'                                        01157000
&ZOPV(&ZOPN)          SETC '*'                                          01157100
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       01157200
.ZL5LB                ANOP  ,                                           01157300
.*-------------------------------------------------------------------   01157400
.***AM.PJR1 DEFINED ON XSHL_DATA                                        01157500
&ZOPN                 SETA &ZOPN+1                                      01157600
&ZOPL(&ZOPN)          SETC ' '                                          01157700
&ZOPO(&ZOPN)          SETC 'ORG'                                        01157800
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+0'                                01157900
&ZOPD(&ZOPN)          SETC ' '                                          01158000
.*-------------------------------------------------------------------   01158100
.***AM.L02 XVERSION XL1                                                 01158200
&ZOPN                 SETA &ZOPN+1                                      01158300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         01158400
&ZOPO(&ZOPN)          SETC 'DS'                                         01158500
&ZOPV(&ZOPN)          SETC 'XL1'                                        01158600
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          01158700
.*-------------------------------------------------------------------   01158800
.***AM.L09  XCMDCODE XL1                                                01158900
&ZOPN                 SETA &ZOPN+1                                      01159000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDCODE'                         01159100
&ZOPO(&ZOPN)          SETC 'DS'                                         01159200
&ZOPV(&ZOPN)          SETC 'XL1'                                        01159300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCMDCODE'                   01159400
.*-------------------------------------------------------------------   01159500
.***AM.L09  XSHLFLGS CL4                                                01159600
&ZOPN                 SETA &ZOPN+1                                      01159700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS'                         01159800
&ZOPO(&ZOPN)          SETC 'DS'                                         01159900
&ZOPV(&ZOPN)          SETC 'CL4'                                        01160000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XSHLFLGS'                   01160100
.*-------------------------------------------------------------------   01160200
.***AM.L09  XRSV0101 CL3                                                01160300
&ZOPN                 SETA &ZOPN+1                                      01160400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0101'                         01160500
&ZOPO(&ZOPN)          SETC 'DS'                                         01160600
&ZOPV(&ZOPN)          SETC 'CL3'                                        01160700
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0101'                      01160800
.*-------------------------------------------------------------------   01160900
.***AM.L09  XBUFSTGKEY BL.8                                             01161000
&ZOPN                 SETA &ZOPN+1                                      01161100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFSTGKEY'                       01161200
&ZOPO(&ZOPN)          SETC 'DS'                                         01161300
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01161400
&ZOPD(&ZOPN)          SETC '++ &ZXBUFSTGKEY  XBUFSTGKEY'                01161500
.*-------------------------------------------------------------------   01161600
.***AM.L09  XANSLEN XL2                                                 01161700
&ZOPN                 SETA &ZOPN+1                                      01161800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSLEN'                          01161900
&ZOPO(&ZOPN)          SETC 'DS'                                         01162000
&ZOPV(&ZOPN)          SETC 'XL2'                                        01162100
&ZOPD(&ZOPN)          SETC '++ &ZXANSLEN  XANSLEN'                      01162200
.*-------------------------------------------------------------------   01162300
.***AM.L09  XCONTOKEN CL16                                              01162400
&ZOPN                 SETA &ZOPN+1                                      01162500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONTOKEN'                        01162600
&ZOPO(&ZOPN)          SETC 'DS'                                         01162700
&ZOPV(&ZOPN)          SETC 'CL16'                                       01162800
&ZOPD(&ZOPN)          SETC '++ &ZXCONTOKEN  XCONTOKEN'                  01162900
.*-------------------------------------------------------------------   01163000
.***AM.L09  XDATADDR CL12                                               01163100
&ZOPN                 SETA &ZOPN+1                                      01163200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATADDR'                         01163300
&ZOPO(&ZOPN)          SETC 'DS'                                         01163400
&ZOPV(&ZOPN)          SETC 'CL12'                                       01163500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XDATADDR'                   01163600
.*-------------------------------------------------------------------   01163700
.***AM.L09  XADJADDR CL8                                                01163800
&ZOPN                 SETA &ZOPN+1                                      01163900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XADJADDR'                         01164000
&ZOPO(&ZOPN)          SETC 'DS'                                         01164100
&ZOPV(&ZOPN)          SETC 'CL8'                                        01164200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XADJADDR'                   01164300
.*-------------------------------------------------------------------   01164400
.***AM.L09  XANSADDR CL8                                                01164500
&ZOPN                 SETA &ZOPN+1                                      01164600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSADDR'                         01164700
&ZOPO(&ZOPN)          SETC 'DS'                                         01164800
&ZOPV(&ZOPN)          SETC 'CL8'                                        01164900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XANSADDR'                   01165000
.*-------------------------------------------------------------------   01165100
.***AM.L09  XREQDATA CL8                                                01165200
&ZOPN                 SETA &ZOPN+1                                      01165300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQDATA'                         01165400
&ZOPO(&ZOPN)          SETC 'DS'                                         01165500
&ZOPV(&ZOPN)          SETC 'CL8'                                        01165600
&ZOPD(&ZOPN)          SETC '++ &ZXREQDATA  XREQDATA'                    01165700
.*-------------------------------------------------------------------   01165800
.***AM.L09  XREQID CL8                                                  01165900
&ZOPN                 SETA &ZOPN+1                                      01166000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQID'                           01166100
&ZOPO(&ZOPN)          SETC 'DS'                                         01166200
&ZOPV(&ZOPN)          SETC 'CL8'                                        01166300
&ZOPD(&ZOPN)          SETC '++ &ZXREQID  XREQID'                        01166400
.*-------------------------------------------------------------------   01166500
.***AM.L09  XEXTRESTOKEN CL16                                           01166600
&ZOPN                 SETA &ZOPN+1                                      01166700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEXTRESTOKEN'                     01166800
&ZOPO(&ZOPN)          SETC 'DS'                                         01166900
&ZOPV(&ZOPN)          SETC 'CL16'                                       01167000
&ZOPD(&ZOPN)          SETC '++ &ZXEXTRESTOKEN  XEXTRESTOKEN'            01167100
.*-------------------------------------------------------------------   01167200
.***AM.L09  XRSV0103 CL8                                                01167300
&ZOPN                 SETA &ZOPN+1                                      01167400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0103'                         01167500
&ZOPO(&ZOPN)          SETC 'DS'                                         01167600
&ZOPV(&ZOPN)          SETC 'CL8'                                        01167700
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0103'                      01167800
.*-------------------------------------------------------------------   01167900
.***AM.PJR1 DEFINED ON XSHLFLGS                                         01168000
&ZOPN                 SETA &ZOPN+1                                      01168100
&ZOPL(&ZOPN)          SETC ' '                                          01168200
&ZOPO(&ZOPN)          SETC 'ORG'                                        01168300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+2'                                01168400
&ZOPD(&ZOPN)          SETC ' '                                          01168500
.*-------------------------------------------------------------------   01168600
.***AM.L03 XSHLFLGS1 BL.8                                               01168700
&ZOPN                 SETA &ZOPN+1                                      01168800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS1'                        01168900
&ZOPO(&ZOPN)          SETC 'DS'                                         01169000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01169100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01169200
.*                                                                      01169300
&ZOPN                 SETA  &ZOPN+1                                     01169400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_BUFFER'                  01169500
&ZOPO(&ZOPN)          SETC  'EQU'                                       01169600
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             01169700
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01169800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BUFFER'                       01169900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01170000
.*                                                                      01170100
&ZOPN                 SETA  &ZOPN+1                                     01170200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_BUFLIST'                 01170300
&ZOPO(&ZOPN)          SETC  'EQU'                                       01170400
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             01170500
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01170600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BUFLIST'                      01170700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01170800
.*                                                                      01170900
&ZOPN                 SETA  &ZOPN+1                                     01171000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_ADJAREA'                 01171100
&ZOPO(&ZOPN)          SETC  'EQU'                                       01171200
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             01171300
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01171400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ADJAREA'                      01171500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01171600
.*                                                                      01171700
&ZOPN                 SETA  &ZOPN+1                                     01171800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_ANSAREA'                 01171900
&ZOPO(&ZOPN)          SETC  'EQU'                                       01172000
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             01172100
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01172200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ANSAREA'                      01172300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01172400
.*                                                                      01172500
&ZOPN                 SETA  &ZOPN+1                                     01172600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPAGEABLE_NO'                    01172700
&ZOPO(&ZOPN)          SETC  'EQU'                                       01172800
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             01172900
&ZOPD(&ZOPN)          SETC  '++ XPAGEABLE.'                             01173000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           01173100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01173200
.*                                                                      01173300
&ZOPN                 SETA  &ZOPN+1                                     01173400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_BUFSTGKEY'               01173500
&ZOPO(&ZOPN)          SETC  'EQU'                                       01173600
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             01173700
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01173800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BUFSTGKEY'                    01173900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01174000
.*                                                                      01174100
&ZOPN                 SETA  &ZOPN+1                                     01174200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XBUFADDRTYPE_REAL'               01174300
&ZOPO(&ZOPN)          SETC  'EQU'                                       01174400
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             01174500
&ZOPD(&ZOPN)          SETC  '++ XBUFADDRTYPE.'                          01174600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).REAL'                         01174700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01174800
.*-------------------------------------------------------------------   01174900
.***AM.L03 XSHLFLGS2 BL.8                                               01175000
&ZOPN                 SETA &ZOPN+1                                      01175100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS2'                        01175200
&ZOPO(&ZOPN)          SETC 'DS'                                         01175300
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01175400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01175500
.*                                                                      01175600
&ZOPN                 SETA  &ZOPN+1                                     01175700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_SYNCECB'                   01175800
&ZOPO(&ZOPN)          SETC  'EQU'                                       01175900
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             01176000
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01176100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYNCECB'                      01176200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01176300
.*                                                                      01176400
&ZOPN                 SETA  &ZOPN+1                                     01176500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_SYNCEXIT'                  01176600
&ZOPO(&ZOPN)          SETC  'EQU'                                       01176700
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             01176800
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01176900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYNCEXIT'                     01177000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01177100
.*                                                                      01177200
&ZOPN                 SETA  &ZOPN+1                                     01177300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_SYNCTOKEN'                 01177400
&ZOPO(&ZOPN)          SETC  'EQU'                                       01177500
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             01177600
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01177700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYNCTOKEN'                    01177800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01177900
.*                                                                      01178000
&ZOPN                 SETA  &ZOPN+1                                     01178100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_ASYNCECB'                  01178200
&ZOPO(&ZOPN)          SETC  'EQU'                                       01178300
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             01178400
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01178500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNCECB'                     01178600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01178700
.*                                                                      01178800
&ZOPN                 SETA  &ZOPN+1                                     01178900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_ASYNCEXIT'                 01179000
&ZOPO(&ZOPN)          SETC  'EQU'                                       01179100
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             01179200
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01179300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNCEXIT'                    01179400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01179500
.*                                                                      01179600
&ZOPN                 SETA  &ZOPN+1                                     01179700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_ASYNCTOKEN'                01179800
&ZOPO(&ZOPN)          SETC  'EQU'                                       01179900
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             01180000
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01180100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNCTOKEN'                   01180200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01180300
.*                                                                      01180400
&ZOPN                 SETA  &ZOPN+1                                     01180500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_ASYNCNORESPONSE'           01180600
&ZOPO(&ZOPN)          SETC  'EQU'                                       01180700
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             01180800
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01180900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNCNORESPONSE'              01181000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01181100
.*-------------------------------------------------------------------   01181200
.***AM.L03 XSHLFLGS3 BL.8                                               01181300
&ZOPN                 SETA &ZOPN+1                                      01181400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS3'                        01181500
&ZOPO(&ZOPN)          SETC 'DS'                                         01181600
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01181700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01181800
.*                                                                      01181900
&ZOPN                 SETA  &ZOPN+1                                     01182000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREGUSER_YES'                    01182100
&ZOPO(&ZOPN)          SETC  'EQU'                                       01182200
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             01182300
&ZOPD(&ZOPN)          SETC  '++ XREGUSER.'                              01182400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          01182500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01182600
.*                                                                      01182700
&ZOPN                 SETA  &ZOPN+1                                     01182800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_VECTORINDEX'             01182900
&ZOPO(&ZOPN)          SETC  'EQU'                                       01183000
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             01183100
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01183200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).VECTORINDEX'                  01183300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01183400
.*                                                                      01183500
&ZOPN                 SETA  &ZOPN+1                                     01183600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_OLDNAME'                 01183700
&ZOPO(&ZOPN)          SETC  'EQU'                                       01183800
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             01183900
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01184000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).OLDNAME'                      01184100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01184200
.*-------------------------------------------------------------------   01184300
.***AM.L03 XSHLFLGS4 BL.8                                               01184400
&ZOPN                 SETA &ZOPN+1                                      01184500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS4'                        01184600
&ZOPO(&ZOPN)          SETC 'DS'                                         01184700
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01184800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01184900
.*                                                                      01185000
&ZOPN                 SETA  &ZOPN+1                                     01185100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_EXTRESTOKEN'             01185200
&ZOPO(&ZOPN)          SETC  'EQU'                                       01185300
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             01185400
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01185500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EXTRESTOKEN'                  01185600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01185700
.*                                                                      01185800
&ZOPN                 SETA  &ZOPN+1                                     01185900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XBUFADDRSIZE_64'                 01186000
&ZOPO(&ZOPN)          SETC  'EQU'                                       01186100
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             01186200
&ZOPD(&ZOPN)          SETC  '++ XBUFADDRSIZE.'                          01186300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).64'                           01186400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01186500
.*                                                                      01186600
&ZOPN                 SETA  &ZOPN+1                                     01186700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._RCVRYREQASYNC'                   01186800
&ZOPO(&ZOPN)          SETC  'EQU'                                       01186900
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             01187000
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               01187100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CACHE'                        01187200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01187300
.*-------------------------------------------------------------------   01187400
.***AM.PJR1 DEFINED ON XCONTOKEN                                        01187500
&ZOPN                 SETA &ZOPN+1                                      01187600
&ZOPL(&ZOPN)          SETC ' '                                          01187700
&ZOPO(&ZOPN)          SETC 'ORG'                                        01187800
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+12'                               01187900
&ZOPD(&ZOPN)          SETC ' '                                          01188000
.*-------------------------------------------------------------------   01188100
.***AM.L09  XRSV0201 CL13                                               01188200
&ZOPN                 SETA &ZOPN+1                                      01188300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0201'                         01188400
&ZOPO(&ZOPN)          SETC 'DS'                                         01188500
&ZOPV(&ZOPN)          SETC 'CL13'                                       01188600
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0201'                      01188700
.*-------------------------------------------------------------------   01188800
.***AM.L09  XCONID XL1                                                  01188900
&ZOPN                 SETA &ZOPN+1                                      01189000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONID'                           01189100
&ZOPO(&ZOPN)          SETC 'DS'                                         01189200
&ZOPV(&ZOPN)          SETC 'XL1'                                        01189300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCONID'                     01189400
.*-------------------------------------------------------------------   01189500
.***AM.L09  XRSV0202 CL2                                                01189600
&ZOPN                 SETA &ZOPN+1                                      01189700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0202'                         01189800
&ZOPO(&ZOPN)          SETC 'DS'                                         01189900
&ZOPV(&ZOPN)          SETC 'CL2'                                        01190000
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0202'                      01190100
.*-------------------------------------------------------------------   01190200
.***AM.PJR1 DEFINED ON XDATADDR                                         01190300
&ZOPN                 SETA &ZOPN+1                                      01190400
&ZOPL(&ZOPN)          SETC ' '                                          01190500
&ZOPO(&ZOPN)          SETC 'ORG'                                        01190600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+28'                               01190700
&ZOPD(&ZOPN)          SETC ' '                                          01190800
.*-------------------------------------------------------------------   01190900
.***AM.L09 ALET XBUFFER F                                               01191000
&ZOPN                 SETA &ZOPN+1                                      01191100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFFER_ALET'                     01191200
&ZOPO(&ZOPN)          SETC 'DS'                                         01191300
&ZOPV(&ZOPN)          SETC 'F'                                          01191400
&ZOPD(&ZOPN)          SETC '++ &ZXBUFFER ALET XBUFFER'                  01191500
.*-------------------------------------------------------------------   01191600
.***AM.L09  XBUFSIZE F                                                  01191700
&ZOPN                 SETA &ZOPN+1                                      01191800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFSIZE'                         01191900
&ZOPO(&ZOPN)          SETC 'DS'                                         01192000
&ZOPV(&ZOPN)          SETC 'F'                                          01192100
&ZOPD(&ZOPN)          SETC '++ &ZXBUFSIZE  XBUFSIZE'                    01192200
.*-------------------------------------------------------------------   01192300
.***AM.L09  XBUFFER A                                                   01192400
&ZOPN                 SETA &ZOPN+1                                      01192500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFFER'                          01192600
&ZOPO(&ZOPN)          SETC 'DS'                                         01192700
&ZOPV(&ZOPN)          SETC 'A'                                          01192800
&ZOPD(&ZOPN)          SETC '++ &ZXBUFFER  XBUFFER'                      01192900
.*-------------------------------------------------------------------   01193000
.***AM.PJR1 DEFINED ON XDATADDR                                         01193100
&ZOPN                 SETA &ZOPN+1                                      01193200
&ZOPL(&ZOPN)          SETC ' '                                          01193300
&ZOPO(&ZOPN)          SETC 'ORG'                                        01193400
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+28'                               01193500
&ZOPD(&ZOPN)          SETC ' '                                          01193600
.*-------------------------------------------------------------------   01193700
.***AM.L09  XBUFALET F                                                  01193800
&ZOPN                 SETA &ZOPN+1                                      01193900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFALET'                         01194000
&ZOPO(&ZOPN)          SETC 'DS'                                         01194100
&ZOPV(&ZOPN)          SETC 'F'                                          01194200
&ZOPD(&ZOPN)          SETC '++ &ZXBUFALET  XBUFALET'                    01194300
.*-------------------------------------------------------------------   01194400
.***AM.L09 ALET XBUFLIST F                                              01194500
&ZOPN                 SETA &ZOPN+1                                      01194600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFLIST_ALET'                    01194700
&ZOPO(&ZOPN)          SETC 'DS'                                         01194800
&ZOPV(&ZOPN)          SETC 'F'                                          01194900
&ZOPD(&ZOPN)          SETC '++ &ZXBUFLIST ALET XBUFLIST'                01195000
.*-------------------------------------------------------------------   01195100
.***AM.L09  XBUFLIST A                                                  01195200
&ZOPN                 SETA &ZOPN+1                                      01195300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFLIST'                         01195400
&ZOPO(&ZOPN)          SETC 'DS'                                         01195500
&ZOPV(&ZOPN)          SETC 'A'                                          01195600
&ZOPD(&ZOPN)          SETC '++ &ZXBUFLIST  XBUFLIST'                    01195700
.*-------------------------------------------------------------------   01195800
.***AM.PJR1 DEFINED ON XADJADDR                                         01195900
&ZOPN                 SETA &ZOPN+1                                      01196000
&ZOPL(&ZOPN)          SETC ' '                                          01196100
&ZOPO(&ZOPN)          SETC 'ORG'                                        01196200
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+40'                               01196300
&ZOPD(&ZOPN)          SETC ' '                                          01196400
.*-------------------------------------------------------------------   01196500
.***AM.L09 ALET XADJAREA F                                              01196600
&ZOPN                 SETA &ZOPN+1                                      01196700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XADJAREA_ALET'                    01196800
&ZOPO(&ZOPN)          SETC 'DS'                                         01196900
&ZOPV(&ZOPN)          SETC 'F'                                          01197000
&ZOPD(&ZOPN)          SETC '++ &ZXADJAREA ALET XADJAREA'                01197100
.*-------------------------------------------------------------------   01197200
.***AM.L09  XADJAREA A                                                  01197300
&ZOPN                 SETA &ZOPN+1                                      01197400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XADJAREA'                         01197500
&ZOPO(&ZOPN)          SETC 'DS'                                         01197600
&ZOPV(&ZOPN)          SETC 'A'                                          01197700
&ZOPD(&ZOPN)          SETC '++ &ZXADJAREA  XADJAREA'                    01197800
.*-------------------------------------------------------------------   01197900
.***AM.PJR1 DEFINED ON XADJADDR                                         01198000
&ZOPN                 SETA &ZOPN+1                                      01198100
&ZOPL(&ZOPN)          SETC ' '                                          01198200
&ZOPO(&ZOPN)          SETC 'ORG'                                        01198300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+40'                               01198400
&ZOPD(&ZOPN)          SETC ' '                                          01198500
.*-------------------------------------------------------------------   01198600
.***AM.L09 ALET XRECLVCTR F                                             01198700
&ZOPN                 SETA &ZOPN+1                                      01198800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRECLVCTR_ALET'                   01198900
&ZOPO(&ZOPN)          SETC 'DS'                                         01199000
&ZOPV(&ZOPN)          SETC 'F'                                          01199100
&ZOPD(&ZOPN)          SETC '++ &ZXRECLVCTR ALET XRECLVCTR'              01199200
.*-------------------------------------------------------------------   01199300
.***AM.L09  XRECLVCTR A                                                 01199400
&ZOPN                 SETA &ZOPN+1                                      01199500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRECLVCTR'                        01199600
&ZOPO(&ZOPN)          SETC 'DS'                                         01199700
&ZOPV(&ZOPN)          SETC 'A'                                          01199800
&ZOPD(&ZOPN)          SETC '++ &ZXRECLVCTR  XRECLVCTR'                  01199900
.*-------------------------------------------------------------------   01200000
.***AM.PJR1 DEFINED ON XADJADDR                                         01200100
&ZOPN                 SETA &ZOPN+1                                      01200200
&ZOPL(&ZOPN)          SETC ' '                                          01200300
&ZOPO(&ZOPN)          SETC 'ORG'                                        01200400
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+40'                               01200500
&ZOPD(&ZOPN)          SETC ' '                                          01200600
.*-------------------------------------------------------------------   01200700
.***AM.L09 ALET XSTGSTATS F                                             01200800
&ZOPN                 SETA &ZOPN+1                                      01200900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTGSTATS_ALET'                   01201000
&ZOPO(&ZOPN)          SETC 'DS'                                         01201100
&ZOPV(&ZOPN)          SETC 'F'                                          01201200
&ZOPD(&ZOPN)          SETC '++ &ZXSTGSTATS ALET XSTGSTATS'              01201300
.*-------------------------------------------------------------------   01201400
.***AM.L09  XSTGSTATS A                                                 01201500
&ZOPN                 SETA &ZOPN+1                                      01201600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTGSTATS'                        01201700
&ZOPO(&ZOPN)          SETC 'DS'                                         01201800
&ZOPV(&ZOPN)          SETC 'A'                                          01201900
&ZOPD(&ZOPN)          SETC '++ &ZXSTGSTATS  XSTGSTATS'                  01202000
.*-------------------------------------------------------------------   01202100
.***AM.PJR1 DEFINED ON XADJADDR                                         01202200
&ZOPN                 SETA &ZOPN+1                                      01202300
&ZOPL(&ZOPN)          SETC ' '                                          01202400
&ZOPO(&ZOPN)          SETC 'ORG'                                        01202500
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+40'                               01202600
&ZOPD(&ZOPN)          SETC ' '                                          01202700
.*-------------------------------------------------------------------   01202800
.***AM.L09 ALET XNSBAREA F                                              01202900
&ZOPN                 SETA &ZOPN+1                                      01203000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNSBAREA_ALET'                    01203100
&ZOPO(&ZOPN)          SETC 'DS'                                         01203200
&ZOPV(&ZOPN)          SETC 'F'                                          01203300
&ZOPD(&ZOPN)          SETC '++ &ZXNSBAREA ALET XNSBAREA'                01203400
.*-------------------------------------------------------------------   01203500
.***AM.L09  XNSBAREA A                                                  01203600
&ZOPN                 SETA &ZOPN+1                                      01203700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNSBAREA'                         01203800
&ZOPO(&ZOPN)          SETC 'DS'                                         01203900
&ZOPV(&ZOPN)          SETC 'A'                                          01204000
&ZOPD(&ZOPN)          SETC '++ &ZXNSBAREA  XNSBAREA'                    01204100
.*-------------------------------------------------------------------   01204200
.***AM.PJR1 DEFINED ON XANSADDR                                         01204300
&ZOPN                 SETA &ZOPN+1                                      01204400
&ZOPL(&ZOPN)          SETC ' '                                          01204500
&ZOPO(&ZOPN)          SETC 'ORG'                                        01204600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+48'                               01204700
&ZOPD(&ZOPN)          SETC ' '                                          01204800
.*-------------------------------------------------------------------   01204900
.***AM.L09 ALET XANSAREA F                                              01205000
&ZOPN                 SETA &ZOPN+1                                      01205100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREA_ALET'                    01205200
&ZOPO(&ZOPN)          SETC 'DS'                                         01205300
&ZOPV(&ZOPN)          SETC 'F'                                          01205400
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREA ALET XANSAREA'                01205500
.*-------------------------------------------------------------------   01205600
.***AM.L09  XANSAREA A                                                  01205700
&ZOPN                 SETA &ZOPN+1                                      01205800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREA'                         01205900
&ZOPO(&ZOPN)          SETC 'DS'                                         01206000
&ZOPV(&ZOPN)          SETC 'A'                                          01206100
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREA  XANSAREA'                    01206200
.*-------------------------------------------------------------------   01206300
.***AM.PJR1 DEFINED ON XREQDATA                                         01206400
&ZOPN                 SETA &ZOPN+1                                      01206500
&ZOPL(&ZOPN)          SETC ' '                                          01206600
&ZOPO(&ZOPN)          SETC 'ORG'                                        01206700
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+56'                               01206800
&ZOPD(&ZOPN)          SETC ' '                                          01206900
.*-------------------------------------------------------------------   01207000
.***AM.L09  XREQECB A                                                   01207100
&ZOPN                 SETA &ZOPN+1                                      01207200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQECB'                          01207300
&ZOPO(&ZOPN)          SETC 'DS'                                         01207400
&ZOPV(&ZOPN)          SETC 'A'                                          01207500
&ZOPD(&ZOPN)          SETC '++ &ZXREQECB  XREQECB'                      01207600
.*-------------------------------------------------------------------   01207700
.***AM.L09  XRSV0203 CL4                                                01207800
&ZOPN                 SETA &ZOPN+1                                      01207900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0203'                         01208000
&ZOPO(&ZOPN)          SETC 'DS'                                         01208100
&ZOPV(&ZOPN)          SETC 'CL4'                                        01208200
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0203'                      01208300
.*-------------------------------------------------------------------   01208400
.***AM.PJR1 DEFINED ON XREQDATA                                         01208500
&ZOPN                 SETA &ZOPN+1                                      01208600
&ZOPL(&ZOPN)          SETC ' '                                          01208700
&ZOPO(&ZOPN)          SETC 'ORG'                                        01208800
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+56'                               01208900
&ZOPD(&ZOPN)          SETC ' '                                          01209000
.*-------------------------------------------------------------------   01209100
.***AM.L09 ALET XREQTOKEN F                                             01209200
&ZOPN                 SETA &ZOPN+1                                      01209300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQTOKEN_ALET'                   01209400
&ZOPO(&ZOPN)          SETC 'DS'                                         01209500
&ZOPV(&ZOPN)          SETC 'F'                                          01209600
&ZOPD(&ZOPN)          SETC '++ &ZXREQTOKEN ALET XREQTOKEN'              01209700
.*-------------------------------------------------------------------   01209800
.***AM.L09  XREQTOKEN A                                                 01209900
&ZOPN                 SETA &ZOPN+1                                      01210000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQTOKEN'                        01210100
&ZOPO(&ZOPN)          SETC 'DS'                                         01210200
&ZOPV(&ZOPN)          SETC 'A'                                          01210300
&ZOPD(&ZOPN)          SETC '++ &ZXREQTOKEN  XREQTOKEN'                  01210400
.*-------------------------------------------------------------------   01210500
.***AM.PJR1 DEFINED ON XEXTRESTOKEN                                     01210600
&ZOPN                 SETA &ZOPN+1                                      01210700
&ZOPL(&ZOPN)          SETC ' '                                          01210800
&ZOPO(&ZOPN)          SETC 'ORG'                                        01210900
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+72'                               01211000
&ZOPD(&ZOPN)          SETC ' '                                          01211100
.*-------------------------------------------------------------------   01211200
.***AM.L09  XEXTRESTOKENTKN CL8                                         01211300
&ZOPN                 SETA &ZOPN+1                                      01211400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEXTRESTOKENTKN'                  01211500
&ZOPO(&ZOPN)          SETC 'DS'                                         01211600
&ZOPV(&ZOPN)          SETC 'CL8'                                        01211700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XEXTRESTOKENTKN'            01211800
.*-------------------------------------------------------------------   01211900
.***AM.L09  XEXTRESTOKENPSVN CL8                                        01212000
&ZOPN                 SETA &ZOPN+1                                      01212100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEXTRESTOKENPSVN'                 01212200
&ZOPO(&ZOPN)          SETC 'DS'                                         01212300
&ZOPV(&ZOPN)          SETC 'CL8'                                        01212400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XEXTRESTOKENPSVN'           01212500
.*-------------------------------------------------------------------   01212600
.***AM.PJR1 DEFINED ON XMOB_DATA                                        01212700
&ZOPN                 SETA &ZOPN+1                                      01212800
&ZOPL(&ZOPN)          SETC ' '                                          01212900
&ZOPO(&ZOPN)          SETC 'ORG'                                        01213000
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+96'                               01213100
&ZOPD(&ZOPN)          SETC ' '                                          01213200
.*-------------------------------------------------------------------   01213300
.***AM.L09  XCMDLEN XL2                                                 01213400
&ZOPN                 SETA &ZOPN+1                                      01213500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDLEN'                          01213600
&ZOPO(&ZOPN)          SETC 'DS'                                         01213700
&ZOPV(&ZOPN)          SETC 'XL2'                                        01213800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCMDLEN'                    01213900
.*-------------------------------------------------------------------   01214000
.***AM.L09  XBUFNUM XL1                                                 01214100
&ZOPN                 SETA &ZOPN+1                                      01214200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFNUM'                          01214300
&ZOPO(&ZOPN)          SETC 'DS'                                         01214400
&ZOPV(&ZOPN)          SETC 'XL1'                                        01214500
&ZOPD(&ZOPN)          SETC '++ &ZXBUFNUM  XBUFNUM'                      01214600
.*-------------------------------------------------------------------   01214700
.***AM.L09  XBUFINCRNUM XL1                                             01214800
&ZOPN                 SETA &ZOPN+1                                      01214900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFINCRNUM'                      01215000
&ZOPO(&ZOPN)          SETC 'DS'                                         01215100
&ZOPV(&ZOPN)          SETC 'XL1'                                        01215200
&ZOPD(&ZOPN)          SETC '++ &ZXBUFINCRNUM  XBUFINCRNUM'              01215300
.*-------------------------------------------------------------------   01215400
.***AM.PJR1 DEFINED ON XMCB_DATA                                        01215500
&ZOPN                 SETA &ZOPN+1                                      01215600
&ZOPL(&ZOPN)          SETC ' '                                          01215700
&ZOPO(&ZOPN)          SETC 'ORG'                                        01215800
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              01215900
&ZOPD(&ZOPN)          SETC ' '                                          01216000
.*-------------------------------------------------------------------   01216100
.***AM.L09  XCCA CL1                                                    01216200
&ZOPN                 SETA &ZOPN+1                                      01216300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCCA'                             01216400
&ZOPO(&ZOPN)          SETC 'DS'                                         01216500
&ZOPV(&ZOPN)          SETC 'CL1'                                        01216600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCCA'                       01216700
.*-------------------------------------------------------------------   01216800
.***AM.L09  XCCB CL1                                                    01216900
&ZOPN                 SETA &ZOPN+1                                      01217000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCCB'                             01217100
&ZOPO(&ZOPN)          SETC 'DS'                                         01217200
&ZOPV(&ZOPN)          SETC 'CL1'                                        01217300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCCB'                       01217400
.*-------------------------------------------------------------------   01217500
.***AM.L09  XRSV0501 CL2                                                01217600
&ZOPN                 SETA &ZOPN+1                                      01217700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0501'                         01217800
&ZOPO(&ZOPN)          SETC 'DS'                                         01217900
&ZOPV(&ZOPN)          SETC 'CL2'                                        01218000
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0501'                      01218100
.*-------------------------------------------------------------------   01218200
.***AM.L09  XOFF4 CL2                                                   01218300
&ZOPN                 SETA &ZOPN+1                                      01218400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOFF4'                            01218500
&ZOPO(&ZOPN)          SETC 'DS'                                         01218600
&ZOPV(&ZOPN)          SETC 'CL2'                                        01218700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XOFF4'                      01218800
.*-------------------------------------------------------------------   01218900
.***AM.L09  XOFF6 CL2                                                   01219000
&ZOPN                 SETA &ZOPN+1                                      01219100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOFF6'                            01219200
&ZOPO(&ZOPN)          SETC 'DS'                                         01219300
&ZOPV(&ZOPN)          SETC 'CL2'                                        01219400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XOFF6'                      01219500
.*-------------------------------------------------------------------   01219600
.***AM.L09  XOFF8 CL8                                                   01219700
&ZOPN                 SETA &ZOPN+1                                      01219800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOFF8'                            01219900
&ZOPO(&ZOPN)          SETC 'DS'                                         01220000
&ZOPV(&ZOPN)          SETC 'CL8'                                        01220100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XOFF8'                      01220200
.*-------------------------------------------------------------------   01220300
.***AM.L09  XCUNBAREA CL32                                              01220400
&ZOPN                 SETA &ZOPN+1                                      01220500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCUNBAREA'                        01220600
&ZOPO(&ZOPN)          SETC 'DS'                                         01220700
&ZOPV(&ZOPN)          SETC 'CL32'                                       01220800
&ZOPD(&ZOPN)          SETC '++ &ZXCUNBAREA  XCUNBAREA'                  01220900
.*-------------------------------------------------------------------   01221000
.***AM.L09  XOFF48 CL48                                                 01221100
&ZOPN                 SETA &ZOPN+1                                      01221200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOFF48'                           01221300
&ZOPO(&ZOPN)          SETC 'DS'                                         01221400
&ZOPV(&ZOPN)          SETC 'CL48'                                       01221500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XOFF48'                     01221600
.*-------------------------------------------------------------------   01221700
.***AM.PJR1 DEFINED ON XOFF4                                            01221800
&ZOPN                 SETA &ZOPN+1                                      01221900
&ZOPL(&ZOPN)          SETC ' '                                          01222000
&ZOPO(&ZOPN)          SETC 'ORG'                                        01222100
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+104'                              01222200
&ZOPD(&ZOPN)          SETC ' '                                          01222300
.*-------------------------------------------------------------------   01222400
.***AM.L09  XNAMEMASK BL.16                                             01222500
&ZOPN                 SETA &ZOPN+1                                      01222600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNAMEMASK'                        01222700
&ZOPO(&ZOPN)          SETC 'DS'                                         01222800
&ZOPV(&ZOPN)          SETC 'BL.16'                                      01222900
&ZOPD(&ZOPN)          SETC '++ &ZXNAMEMASK  XNAMEMASK'                  01223000
.*-------------------------------------------------------------------   01223100
.***AM.PJR1 DEFINED ON XOFF4                                            01223200
&ZOPN                 SETA &ZOPN+1                                      01223300
&ZOPL(&ZOPN)          SETC ' '                                          01223400
&ZOPO(&ZOPN)          SETC 'ORG'                                        01223500
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+104'                              01223600
&ZOPD(&ZOPN)          SETC ' '                                          01223700
.*-------------------------------------------------------------------   01223800
.***AM.L09  XCOCLASSB XL2                                               01223900
&ZOPN                 SETA &ZOPN+1                                      01224000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCOCLASSB'                        01224100
&ZOPO(&ZOPN)          SETC 'DS'                                         01224200
&ZOPV(&ZOPN)          SETC 'XL2'                                        01224300
&ZOPD(&ZOPN)          SETC '++ &ZXCOCLASSB  XCOCLASSB'                  01224400
.*-------------------------------------------------------------------   01224500
.***AM.PJR1 DEFINED ON XOFF4                                            01224600
&ZOPN                 SETA &ZOPN+1                                      01224700
&ZOPL(&ZOPN)          SETC ' '                                          01224800
&ZOPO(&ZOPN)          SETC 'ORG'                                        01224900
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+104'                              01225000
&ZOPD(&ZOPN)          SETC ' '                                          01225100
.*-------------------------------------------------------------------   01225200
.***AM.L09  XLCID1 CL1                                                  01225300
&ZOPN                 SETA &ZOPN+1                                      01225400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLCID1'                           01225500
&ZOPO(&ZOPN)          SETC 'DS'                                         01225600
&ZOPV(&ZOPN)          SETC 'CL1'                                        01225700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XLCID1'                     01225800
.*-------------------------------------------------------------------   01225900
.***AM.L09  XSTGCLASS XL1                                               01226000
&ZOPN                 SETA &ZOPN+1                                      01226100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTGCLASS'                        01226200
&ZOPO(&ZOPN)          SETC 'DS'                                         01226300
&ZOPV(&ZOPN)          SETC 'XL1'                                        01226400
&ZOPD(&ZOPN)          SETC '++ &ZXSTGCLASS  XSTGCLASS'                  01226500
.*-------------------------------------------------------------------   01226600
.***AM.PJR1 DEFINED ON XOFF4                                            01226700
&ZOPN                 SETA &ZOPN+1                                      01226800
&ZOPL(&ZOPN)          SETC ' '                                          01226900
&ZOPO(&ZOPN)          SETC 'ORG'                                        01227000
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+104'                              01227100
&ZOPD(&ZOPN)          SETC ' '                                          01227200
.*-------------------------------------------------------------------   01227300
.***AM.L09  XRSV0611 CL1                                                01227400
&ZOPN                 SETA &ZOPN+1                                      01227500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0611'                         01227600
&ZOPO(&ZOPN)          SETC 'DS'                                         01227700
&ZOPV(&ZOPN)          SETC 'CL1'                                        01227800
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0611'                      01227900
.*-------------------------------------------------------------------   01228000
.***AM.L09  XPROCESSID1 CL1                                             01228100
&ZOPN                 SETA &ZOPN+1                                      01228200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPROCESSID1'                      01228300
&ZOPO(&ZOPN)          SETC 'DS'                                         01228400
&ZOPV(&ZOPN)          SETC 'CL1'                                        01228500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XPROCESSID1'                01228600
.*-------------------------------------------------------------------   01228700
.***AM.PJR1 DEFINED ON XOFF4                                            01228800
&ZOPN                 SETA &ZOPN+1                                      01228900
&ZOPL(&ZOPN)          SETC ' '                                          01229000
&ZOPO(&ZOPN)          SETC 'ORG'                                        01229100
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+104'                              01229200
&ZOPD(&ZOPN)          SETC ' '                                          01229300
.*-------------------------------------------------------------------   01229400
.***AM.L09  XSTARTINDEX1 CL2                                            01229500
&ZOPN                 SETA &ZOPN+1                                      01229600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTARTINDEX1'                     01229700
&ZOPO(&ZOPN)          SETC 'DS'                                         01229800
&ZOPV(&ZOPN)          SETC 'CL2'                                        01229900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XSTARTINDEX1'               01230000
.*-------------------------------------------------------------------   01230100
.***AM.PJR1 DEFINED ON XOFF6                                            01230200
&ZOPN                 SETA &ZOPN+1                                      01230300
&ZOPL(&ZOPN)          SETC ' '                                          01230400
&ZOPO(&ZOPN)          SETC 'ORG'                                        01230500
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+106'                              01230600
&ZOPD(&ZOPN)          SETC ' '                                          01230700
.*-------------------------------------------------------------------   01230800
.***AM.L09  XCOCLASS XL2                                                01230900
&ZOPN                 SETA &ZOPN+1                                      01231000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCOCLASS'                         01231100
&ZOPO(&ZOPN)          SETC 'DS'                                         01231200
&ZOPV(&ZOPN)          SETC 'XL2'                                        01231300
&ZOPD(&ZOPN)          SETC '++ &ZXCOCLASS  XCOCLASS'                    01231400
.*-------------------------------------------------------------------   01231500
.***AM.PJR1 DEFINED ON XOFF6                                            01231600
&ZOPN                 SETA &ZOPN+1                                      01231700
&ZOPL(&ZOPN)          SETC ' '                                          01231800
&ZOPO(&ZOPN)          SETC 'ORG'                                        01231900
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+106'                              01232000
&ZOPD(&ZOPN)          SETC ' '                                          01232100
.*-------------------------------------------------------------------   01232200
.***AM.L09  XCOCLASSE XL2                                               01232300
&ZOPN                 SETA &ZOPN+1                                      01232400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCOCLASSE'                        01232500
&ZOPO(&ZOPN)          SETC 'DS'                                         01232600
&ZOPV(&ZOPN)          SETC 'XL2'                                        01232700
&ZOPD(&ZOPN)          SETC '++ &ZXCOCLASSE  XCOCLASSE'                  01232800
.*-------------------------------------------------------------------   01232900
.***AM.PJR1 DEFINED ON XOFF6                                            01233000
&ZOPN                 SETA &ZOPN+1                                      01233100
&ZOPL(&ZOPN)          SETC ' '                                          01233200
&ZOPO(&ZOPN)          SETC 'ORG'                                        01233300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+106'                              01233400
&ZOPD(&ZOPN)          SETC ' '                                          01233500
.*-------------------------------------------------------------------   01233600
.***AM.L09  XNUMNAMES XL2                                               01233700
&ZOPN                 SETA &ZOPN+1                                      01233800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNUMNAMES'                        01233900
&ZOPO(&ZOPN)          SETC 'DS'                                         01234000
&ZOPV(&ZOPN)          SETC 'XL2'                                        01234100
&ZOPD(&ZOPN)          SETC '++ &ZXNUMNAMES  XNUMNAMES'                  01234200
.*-------------------------------------------------------------------   01234300
.***AM.PJR1 DEFINED ON XOFF6                                            01234400
&ZOPN                 SETA &ZOPN+1                                      01234500
&ZOPL(&ZOPN)          SETC ' '                                          01234600
&ZOPO(&ZOPN)          SETC 'ORG'                                        01234700
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+106'                              01234800
&ZOPD(&ZOPN)          SETC ' '                                          01234900
.*-------------------------------------------------------------------   01235000
.***AM.L09  XREPEAT XL2                                                 01235100
&ZOPN                 SETA &ZOPN+1                                      01235200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREPEAT'                          01235300
&ZOPO(&ZOPN)          SETC 'DS'                                         01235400
&ZOPV(&ZOPN)          SETC 'XL2'                                        01235500
&ZOPD(&ZOPN)          SETC '++ &ZXREPEAT  XREPEAT'                      01235600
.*-------------------------------------------------------------------   01235700
.***AM.PJR1 DEFINED ON XOFF6                                            01235800
&ZOPN                 SETA &ZOPN+1                                      01235900
&ZOPL(&ZOPN)          SETC ' '                                          01236000
&ZOPO(&ZOPN)          SETC 'ORG'                                        01236100
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+106'                              01236200
&ZOPD(&ZOPN)          SETC ' '                                          01236300
.*-------------------------------------------------------------------   01236400
.***AM.L09  XLCID2 CL1                                                  01236500
&ZOPN                 SETA &ZOPN+1                                      01236600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLCID2'                           01236700
&ZOPO(&ZOPN)          SETC 'DS'                                         01236800
&ZOPV(&ZOPN)          SETC 'CL1'                                        01236900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XLCID2'                     01237000
.*-------------------------------------------------------------------   01237100
.***AM.L09  XDBS1 CL1                                                   01237200
&ZOPN                 SETA &ZOPN+1                                      01237300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDBS1'                            01237400
&ZOPO(&ZOPN)          SETC 'DS'                                         01237500
&ZOPV(&ZOPN)          SETC 'CL1'                                        01237600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XDBS1'                      01237700
.*-------------------------------------------------------------------   01237800
.***AM.PJR1 DEFINED ON XOFF6                                            01237900
&ZOPN                 SETA &ZOPN+1                                      01238000
&ZOPL(&ZOPN)          SETC ' '                                          01238100
&ZOPO(&ZOPN)          SETC 'ORG'                                        01238200
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+106'                              01238300
&ZOPD(&ZOPN)          SETC ' '                                          01238400
.*-------------------------------------------------------------------   01238500
.***AM.L09  XCMDFLAG1 BL.8                                              01238600
&ZOPN                 SETA &ZOPN+1                                      01238700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLAG1'                        01238800
&ZOPO(&ZOPN)          SETC 'DS'                                         01238900
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01239000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCMDFLAG1'                  01239100
.*-------------------------------------------------------------------   01239200
.***AM.L09  XRSV0621 CL1                                                01239300
&ZOPN                 SETA &ZOPN+1                                      01239400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0621'                         01239500
&ZOPO(&ZOPN)          SETC 'DS'                                         01239600
&ZOPV(&ZOPN)          SETC 'CL1'                                        01239700
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0621'                      01239800
.*-------------------------------------------------------------------   01239900
.***AM.PJR1 DEFINED ON XOFF6                                            01240000
&ZOPN                 SETA &ZOPN+1                                      01240100
&ZOPL(&ZOPN)          SETC ' '                                          01240200
&ZOPO(&ZOPN)          SETC 'ORG'                                        01240300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+106'                              01240400
&ZOPD(&ZOPN)          SETC ' '                                          01240500
.*-------------------------------------------------------------------   01240600
.***AM.L09  XENDINDEX1 CL2                                              01240700
&ZOPN                 SETA &ZOPN+1                                      01240800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENDINDEX1'                       01240900
&ZOPO(&ZOPN)          SETC 'DS'                                         01241000
&ZOPV(&ZOPN)          SETC 'CL2'                                        01241100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XENDINDEX1'                 01241200
.*-------------------------------------------------------------------   01241300
.***AM.PJR1 DEFINED ON XOFF6                                            01241400
&ZOPN                 SETA &ZOPN+1                                      01241500
&ZOPL(&ZOPN)          SETC ' '                                          01241600
&ZOPO(&ZOPN)          SETC 'ORG'                                        01241700
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+106'                              01241800
&ZOPD(&ZOPN)          SETC ' '                                          01241900
.*-------------------------------------------------------------------   01242000
.***AM.L09  XRSV0622 CL1                                                01242100
&ZOPN                 SETA &ZOPN+1                                      01242200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0622'                         01242300
&ZOPO(&ZOPN)          SETC 'DS'                                         01242400
&ZOPV(&ZOPN)          SETC 'CL1'                                        01242500
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0622'                      01242600
.*-------------------------------------------------------------------   01242700
.***AM.L09  XCMDFLAG4 BL.8                                              01242800
&ZOPN                 SETA &ZOPN+1                                      01242900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLAG4'                        01243000
&ZOPO(&ZOPN)          SETC 'DS'                                         01243100
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01243200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCMDFLAG4'                  01243300
.*-------------------------------------------------------------------   01243400
.***AM.PJR1 DEFINED ON XOFF8                                            01243500
&ZOPN                 SETA &ZOPN+1                                      01243600
&ZOPL(&ZOPN)          SETC ' '                                          01243700
&ZOPO(&ZOPN)          SETC 'ORG'                                        01243800
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+108'                              01243900
&ZOPD(&ZOPN)          SETC ' '                                          01244000
.*-------------------------------------------------------------------   01244100
.***AM.L09  XRESTOKEN CL8                                               01244200
&ZOPN                 SETA &ZOPN+1                                      01244300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRESTOKEN'                        01244400
&ZOPO(&ZOPN)          SETC 'DS'                                         01244500
&ZOPV(&ZOPN)          SETC 'CL8'                                        01244600
&ZOPD(&ZOPN)          SETC '++ &ZXRESTOKEN  XRESTOKEN'                  01244700
.*-------------------------------------------------------------------   01244800
.***AM.PJR1 DEFINED ON XOFF8                                            01244900
&ZOPN                 SETA &ZOPN+1                                      01245000
&ZOPL(&ZOPN)          SETC ' '                                          01245100
&ZOPO(&ZOPN)          SETC 'ORG'                                        01245200
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+108'                              01245300
&ZOPD(&ZOPN)          SETC ' '                                          01245400
.*-------------------------------------------------------------------   01245500
.***AM.L09  XUSERDATA1 CL8                                              01245600
&ZOPN                 SETA &ZOPN+1                                      01245700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUSERDATA1'                       01245800
&ZOPO(&ZOPN)          SETC 'DS'                                         01245900
&ZOPV(&ZOPN)          SETC 'CL8'                                        01246000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XUSERDATA1'                 01246100
.*-------------------------------------------------------------------   01246200
.***AM.PJR1 DEFINED ON XOFF8                                            01246300
&ZOPN                 SETA &ZOPN+1                                      01246400
&ZOPL(&ZOPN)          SETC ' '                                          01246500
&ZOPO(&ZOPN)          SETC 'ORG'                                        01246600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+108'                              01246700
&ZOPD(&ZOPN)          SETC ' '                                          01246800
.*-------------------------------------------------------------------   01246900
.***AM.L09  XFIRSTNAME XL2                                              01247000
&ZOPN                 SETA &ZOPN+1                                      01247100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFIRSTNAME'                       01247200
&ZOPO(&ZOPN)          SETC 'DS'                                         01247300
&ZOPV(&ZOPN)          SETC 'XL2'                                        01247400
&ZOPD(&ZOPN)          SETC '++ &ZXFIRSTNAME  XFIRSTNAME'                01247500
.*-------------------------------------------------------------------   01247600
.***AM.L09  XLASTNAME XL2                                               01247700
&ZOPN                 SETA &ZOPN+1                                      01247800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLASTNAME'                        01247900
&ZOPO(&ZOPN)          SETC 'DS'                                         01248000
&ZOPV(&ZOPN)          SETC 'XL2'                                        01248100
&ZOPD(&ZOPN)          SETC '++ &ZXLASTNAME  XLASTNAME'                  01248200
.*-------------------------------------------------------------------   01248300
.***AM.L09  XRSV0631 CL4                                                01248400
&ZOPN                 SETA &ZOPN+1                                      01248500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0631'                         01248600
&ZOPO(&ZOPN)          SETC 'DS'                                         01248700
&ZOPV(&ZOPN)          SETC 'CL4'                                        01248800
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0631'                      01248900
.*-------------------------------------------------------------------   01249000
.***AM.PJR1 DEFINED ON XOFF8                                            01249100
&ZOPN                 SETA &ZOPN+1                                      01249200
&ZOPL(&ZOPN)          SETC ' '                                          01249300
&ZOPO(&ZOPN)          SETC 'ORG'                                        01249400
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+108'                              01249500
&ZOPD(&ZOPN)          SETC ' '                                          01249600
.*-------------------------------------------------------------------   01249700
.***AM.L09  XRSV0632 CL1                                                01249800
&ZOPN                 SETA &ZOPN+1                                      01249900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0632'                         01250000
&ZOPO(&ZOPN)          SETC 'DS'                                         01250100
&ZOPV(&ZOPN)          SETC 'CL1'                                        01250200
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0632'                      01250300
.*-------------------------------------------------------------------   01250400
.***AM.L09  XDBS2 CL1                                                   01250500
&ZOPN                 SETA &ZOPN+1                                      01250600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDBS2'                            01250700
&ZOPO(&ZOPN)          SETC 'DS'                                         01250800
&ZOPV(&ZOPN)          SETC 'CL1'                                        01250900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XDBS2'                      01251000
.*-------------------------------------------------------------------   01251100
.***AM.L09  XRSV0633 CL6                                                01251200
&ZOPN                 SETA &ZOPN+1                                      01251300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0633'                         01251400
&ZOPO(&ZOPN)          SETC 'DS'                                         01251500
&ZOPV(&ZOPN)          SETC 'CL6'                                        01251600
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0633'                      01251700
.*-------------------------------------------------------------------   01251800
.***AM.PJR1 DEFINED ON XOFF8                                            01251900
&ZOPN                 SETA &ZOPN+1                                      01252000
&ZOPL(&ZOPN)          SETC ' '                                          01252100
&ZOPO(&ZOPN)          SETC 'ORG'                                        01252200
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+108'                              01252300
&ZOPD(&ZOPN)          SETC ' '                                          01252400
.*-------------------------------------------------------------------   01252500
.***AM.L09  XLCID3 CL1                                                  01252600
&ZOPN                 SETA &ZOPN+1                                      01252700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLCID3'                           01252800
&ZOPO(&ZOPN)          SETC 'DS'                                         01252900
&ZOPV(&ZOPN)          SETC 'CL1'                                        01253000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XLCID3'                     01253100
.*-------------------------------------------------------------------   01253200
.***AM.PJR1 DEFINED ON XOFF8                                            01253300
&ZOPN                 SETA &ZOPN+1                                      01253400
&ZOPL(&ZOPN)          SETC ' '                                          01253500
&ZOPO(&ZOPN)          SETC 'ORG'                                        01253600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+108'                              01253700
&ZOPD(&ZOPN)          SETC ' '                                          01253800
.*-------------------------------------------------------------------   01253900
.***AM.L09  XRSV0634 CL2                                                01254000
&ZOPN                 SETA &ZOPN+1                                      01254100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0634'                         01254200
&ZOPO(&ZOPN)          SETC 'DS'                                         01254300
&ZOPV(&ZOPN)          SETC 'CL2'                                        01254400
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0634'                      01254500
.*-------------------------------------------------------------------   01254600
.***AM.L09  XCMDFLAG5 BL.8                                              01254700
&ZOPN                 SETA &ZOPN+1                                      01254800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLAG5'                        01254900
&ZOPO(&ZOPN)          SETC 'DS'                                         01255000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01255100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCMDFLAG5'                  01255200
.*-------------------------------------------------------------------   01255300
.***AM.L09  XRSV0635 CL1                                                01255400
&ZOPN                 SETA &ZOPN+1                                      01255500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0635'                         01255600
&ZOPO(&ZOPN)          SETC 'DS'                                         01255700
&ZOPV(&ZOPN)          SETC 'CL1'                                        01255800
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0635'                      01255900
.*-------------------------------------------------------------------   01256000
.***AM.L09  XCMDFLAG6 BL.8                                              01256100
&ZOPN                 SETA &ZOPN+1                                      01256200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLAG6'                        01256300
&ZOPO(&ZOPN)          SETC 'DS'                                         01256400
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01256500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCMDFLAG6'                  01256600
.*-------------------------------------------------------------------   01256700
.***AM.L09  XCMDFLAG8 BL.8                                              01256800
&ZOPN                 SETA &ZOPN+1                                      01256900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLAG8'                        01257000
&ZOPO(&ZOPN)          SETC 'DS'                                         01257100
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01257200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCMDFLAG8'                  01257300
.*-------------------------------------------------------------------   01257400
.***AM.L09  XRSV0636 CL3                                                01257500
&ZOPN                 SETA &ZOPN+1                                      01257600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0636'                         01257700
&ZOPO(&ZOPN)          SETC 'DS'                                         01257800
&ZOPV(&ZOPN)          SETC 'CL3'                                        01257900
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0636'                      01258000
.*-------------------------------------------------------------------   01258100
.***AM.PJR1 DEFINED ON XOFF8                                            01258200
&ZOPN                 SETA &ZOPN+1                                      01258300
&ZOPL(&ZOPN)          SETC ' '                                          01258400
&ZOPO(&ZOPN)          SETC 'ORG'                                        01258500
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+108'                              01258600
&ZOPD(&ZOPN)          SETC ' '                                          01258700
.*-------------------------------------------------------------------   01258800
.***AM.L09  XSTARTINDEX2 CL2                                            01258900
&ZOPN                 SETA &ZOPN+1                                      01259000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTARTINDEX2'                     01259100
&ZOPO(&ZOPN)          SETC 'DS'                                         01259200
&ZOPV(&ZOPN)          SETC 'CL2'                                        01259300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XSTARTINDEX2'               01259400
.*-------------------------------------------------------------------   01259500
.***AM.L09  XENDINDEX2 CL2                                              01259600
&ZOPN                 SETA &ZOPN+1                                      01259700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENDINDEX2'                       01259800
&ZOPO(&ZOPN)          SETC 'DS'                                         01259900
&ZOPV(&ZOPN)          SETC 'CL2'                                        01260000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XENDINDEX2'                 01260100
.*-------------------------------------------------------------------   01260200
.***AM.L09  XRSV0637 CL4                                                01260300
&ZOPN                 SETA &ZOPN+1                                      01260400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0637'                         01260500
&ZOPO(&ZOPN)          SETC 'DS'                                         01260600
&ZOPV(&ZOPN)          SETC 'CL4'                                        01260700
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0637'                      01260800
.*-------------------------------------------------------------------   01260900
.***AM.PJR1 DEFINED ON XCUNBAREA                                        01261000
&ZOPN                 SETA &ZOPN+1                                      01261100
&ZOPL(&ZOPN)          SETC ' '                                          01261200
&ZOPO(&ZOPN)          SETC 'ORG'                                        01261300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+116'                              01261400
&ZOPD(&ZOPN)          SETC ' '                                          01261500
.*-------------------------------------------------------------------   01261600
.***AM.L09  XNAME CL16                                                  01261700
&ZOPN                 SETA &ZOPN+1                                      01261800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNAME'                            01261900
&ZOPO(&ZOPN)          SETC 'DS'                                         01262000
&ZOPV(&ZOPN)          SETC 'CL16'                                       01262100
&ZOPD(&ZOPN)          SETC '++ &ZXNAME  XNAME'                          01262200
.*-------------------------------------------------------------------   01262300
.***AM.L09  XOFF32 CL16                                                 01262400
&ZOPN                 SETA &ZOPN+1                                      01262500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOFF32'                           01262600
&ZOPO(&ZOPN)          SETC 'DS'                                         01262700
&ZOPV(&ZOPN)          SETC 'CL16'                                       01262800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XOFF32'                     01262900
.*-------------------------------------------------------------------   01263000
.***AM.PJR1 DEFINED ON XOFF32                                           01263100
&ZOPN                 SETA &ZOPN+1                                      01263200
&ZOPL(&ZOPN)          SETC ' '                                          01263300
&ZOPO(&ZOPN)          SETC 'ORG'                                        01263400
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+132'                              01263500
&ZOPD(&ZOPN)          SETC ' '                                          01263600
.*-------------------------------------------------------------------   01263700
.***AM.L09  XOLDNAME CL16                                               01263800
&ZOPN                 SETA &ZOPN+1                                      01263900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOLDNAME'                         01264000
&ZOPO(&ZOPN)          SETC 'DS'                                         01264100
&ZOPV(&ZOPN)          SETC 'CL16'                                       01264200
&ZOPD(&ZOPN)          SETC '++ &ZXOLDNAME  XOLDNAME'                    01264300
.*-------------------------------------------------------------------   01264400
.***AM.PJR1 DEFINED ON XOFF32                                           01264500
&ZOPN                 SETA &ZOPN+1                                      01264600
&ZOPL(&ZOPN)          SETC ' '                                          01264700
&ZOPO(&ZOPN)          SETC 'ORG'                                        01264800
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+132'                              01264900
&ZOPD(&ZOPN)          SETC ' '                                          01265000
.*-------------------------------------------------------------------   01265100
.***AM.L09  XCMDFLAG2 BL.8                                              01265200
&ZOPN                 SETA &ZOPN+1                                      01265300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLAG2'                        01265400
&ZOPO(&ZOPN)          SETC 'DS'                                         01265500
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01265600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCMDFLAG2'                  01265700
.*-------------------------------------------------------------------   01265800
.***AM.L09  XPROCESSID2 CL1                                             01265900
&ZOPN                 SETA &ZOPN+1                                      01266000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPROCESSID2'                      01266100
&ZOPO(&ZOPN)          SETC 'DS'                                         01266200
&ZOPV(&ZOPN)          SETC 'CL1'                                        01266300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XPROCESSID2'                01266400
.*-------------------------------------------------------------------   01266500
.***AM.L09  XRSV0641 CL1                                                01266600
&ZOPN                 SETA &ZOPN+1                                      01266700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0641'                         01266800
&ZOPO(&ZOPN)          SETC 'DS'                                         01266900
&ZOPV(&ZOPN)          SETC 'CL1'                                        01267000
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0641'                      01267100
.*-------------------------------------------------------------------   01267200
.***AM.L09  XDAS1 CL1                                                   01267300
&ZOPN                 SETA &ZOPN+1                                      01267400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDAS1'                            01267500
&ZOPO(&ZOPN)          SETC 'DS'                                         01267600
&ZOPV(&ZOPN)          SETC 'CL1'                                        01267700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XDAS1'                      01267800
.*-------------------------------------------------------------------   01267900
.***AM.L09  XRSV0642 CL12                                               01268000
&ZOPN                 SETA &ZOPN+1                                      01268100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0642'                         01268200
&ZOPO(&ZOPN)          SETC 'DS'                                         01268300
&ZOPV(&ZOPN)          SETC 'CL12'                                       01268400
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0642'                      01268500
.*-------------------------------------------------------------------   01268600
.***AM.PJR1 DEFINED ON XOFF32                                           01268700
&ZOPN                 SETA &ZOPN+1                                      01268800
&ZOPL(&ZOPN)          SETC ' '                                          01268900
&ZOPO(&ZOPN)          SETC 'ORG'                                        01269000
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+132'                              01269100
&ZOPD(&ZOPN)          SETC ' '                                          01269200
.*-------------------------------------------------------------------   01269300
.***AM.L09  XRSV0643 CL3                                                01269400
&ZOPN                 SETA &ZOPN+1                                      01269500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0643'                         01269600
&ZOPO(&ZOPN)          SETC 'DS'                                         01269700
&ZOPV(&ZOPN)          SETC 'CL3'                                        01269800
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0643'                      01269900
.*-------------------------------------------------------------------   01270000
.***AM.L09  XDBS3 CL1                                                   01270100
&ZOPN                 SETA &ZOPN+1                                      01270200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDBS3'                            01270300
&ZOPO(&ZOPN)          SETC 'DS'                                         01270400
&ZOPV(&ZOPN)          SETC 'CL1'                                        01270500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XDBS3'                      01270600
.*-------------------------------------------------------------------   01270700
.***AM.L09  XRSV0644 CL12                                               01270800
&ZOPN                 SETA &ZOPN+1                                      01270900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0644'                         01271000
&ZOPO(&ZOPN)          SETC 'DS'                                         01271100
&ZOPV(&ZOPN)          SETC 'CL12'                                       01271200
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0644'                      01271300
.*-------------------------------------------------------------------   01271400
.***AM.PJR1 DEFINED ON XOFF32                                           01271500
&ZOPN                 SETA &ZOPN+1                                      01271600
&ZOPL(&ZOPN)          SETC ' '                                          01271700
&ZOPO(&ZOPN)          SETC 'ORG'                                        01271800
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+132'                              01271900
&ZOPD(&ZOPN)          SETC ' '                                          01272000
.*-------------------------------------------------------------------   01272100
.***AM.L09  XRSV0645 CL4                                                01272200
&ZOPN                 SETA &ZOPN+1                                      01272300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0645'                         01272400
&ZOPO(&ZOPN)          SETC 'DS'                                         01272500
&ZOPV(&ZOPN)          SETC 'CL4'                                        01272600
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0645'                      01272700
.*-------------------------------------------------------------------   01272800
.***AM.L09  XCMDFLAG7 BL.8                                              01272900
&ZOPN                 SETA &ZOPN+1                                      01273000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLAG7'                        01273100
&ZOPO(&ZOPN)          SETC 'DS'                                         01273200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01273300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCMDFLAG7'                  01273400
.*-------------------------------------------------------------------   01273500
.***AM.L09  XRSV0646 CL11                                               01273600
&ZOPN                 SETA &ZOPN+1                                      01273700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0646'                         01273800
&ZOPO(&ZOPN)          SETC 'DS'                                         01273900
&ZOPV(&ZOPN)          SETC 'CL11'                                       01274000
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0646'                      01274100
.*-------------------------------------------------------------------   01274200
.***AM.PJR1 DEFINED ON XOFF32                                           01274300
&ZOPN                 SETA &ZOPN+1                                      01274400
&ZOPL(&ZOPN)          SETC ' '                                          01274500
&ZOPO(&ZOPN)          SETC 'ORG'                                        01274600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+132'                              01274700
&ZOPD(&ZOPN)          SETC ' '                                          01274800
.*-------------------------------------------------------------------   01274900
.***AM.L09  XVERSCOMP3 CL8                                              01275000
&ZOPN                 SETA &ZOPN+1                                      01275100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSCOMP3'                       01275200
&ZOPO(&ZOPN)          SETC 'DS'                                         01275300
&ZOPV(&ZOPN)          SETC 'CL8'                                        01275400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XVERSCOMP3'                 01275500
.*-------------------------------------------------------------------   01275600
.***AM.PJR1 DEFINED ON XOFF48                                           01275700
&ZOPN                 SETA &ZOPN+1                                      01275800
&ZOPL(&ZOPN)          SETC ' '                                          01275900
&ZOPO(&ZOPN)          SETC 'ORG'                                        01276000
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+148'                              01276100
&ZOPD(&ZOPN)          SETC ' '                                          01276200
.*-------------------------------------------------------------------   01276300
.***AM.L09  XVECTORINDEX F                                              01276400
&ZOPN                 SETA &ZOPN+1                                      01276500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVECTORINDEX'                     01276600
&ZOPO(&ZOPN)          SETC 'DS'                                         01276700
&ZOPV(&ZOPN)          SETC 'F'                                          01276800
&ZOPD(&ZOPN)          SETC '++ &ZXVECTORINDEX  XVECTORINDEX'            01276900
.*-------------------------------------------------------------------   01277000
.***AM.L09  XRSV0502 CL4                                                01277100
&ZOPN                 SETA &ZOPN+1                                      01277200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0502'                         01277300
&ZOPO(&ZOPN)          SETC 'DS'                                         01277400
&ZOPV(&ZOPN)          SETC 'CL4'                                        01277500
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0502'                      01277600
.*-------------------------------------------------------------------   01277700
.***AM.L09  XUSERDATA2 CL8                                              01277800
&ZOPN                 SETA &ZOPN+1                                      01277900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUSERDATA2'                       01278000
&ZOPO(&ZOPN)          SETC 'DS'                                         01278100
&ZOPV(&ZOPN)          SETC 'CL8'                                        01278200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XUSERDATA2'                 01278300
.*-------------------------------------------------------------------   01278400
.***AM.L09  XNEWVERS1 CL8                                               01278500
&ZOPN                 SETA &ZOPN+1                                      01278600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNEWVERS1'                        01278700
&ZOPO(&ZOPN)          SETC 'DS'                                         01278800
&ZOPV(&ZOPN)          SETC 'CL8'                                        01278900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XNEWVERS1'                  01279000
.*-------------------------------------------------------------------   01279100
.***AM.L09  XVERSCOMP2 CL8                                              01279200
&ZOPN                 SETA &ZOPN+1                                      01279300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSCOMP2'                       01279400
&ZOPO(&ZOPN)          SETC 'DS'                                         01279500
&ZOPV(&ZOPN)          SETC 'CL8'                                        01279600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XVERSCOMP2'                 01279700
.*-------------------------------------------------------------------   01279800
.***AM.L09  XNEWVERS2 CL8                                               01279900
&ZOPN                 SETA &ZOPN+1                                      01280000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNEWVERS2'                        01280100
&ZOPO(&ZOPN)          SETC 'DS'                                         01280200
&ZOPV(&ZOPN)          SETC 'CL8'                                        01280300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XNEWVERS2'                  01280400
.*-------------------------------------------------------------------   01280500
.***AM.L09  XCMDFLAG9 BL.8                                              01280600
&ZOPN                 SETA &ZOPN+1                                      01280700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLAG9'                        01280800
&ZOPO(&ZOPN)          SETC 'DS'                                         01280900
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01281000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCMDFLAG9'                  01281100
.*-------------------------------------------------------------------   01281200
.***AM.L09  XRSV0503 CL7                                                01281300
&ZOPN                 SETA &ZOPN+1                                      01281400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0503'                         01281500
&ZOPO(&ZOPN)          SETC 'DS'                                         01281600
&ZOPV(&ZOPN)          SETC 'CL7'                                        01281700
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0503'                      01281800
.*-------------------------------------------------------------------   01281900
.***AM.PJR1 DEFINED ON XUSERDATA2                                       01282000
&ZOPN                 SETA &ZOPN+1                                      01282100
&ZOPL(&ZOPN)          SETC ' '                                          01282200
&ZOPO(&ZOPN)          SETC 'ORG'                                        01282300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+156'                              01282400
&ZOPD(&ZOPN)          SETC ' '                                          01282500
.*-------------------------------------------------------------------   01282600
.***AM.L09  XVERSCOMP1 CL8                                              01282700
&ZOPN                 SETA &ZOPN+1                                      01282800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSCOMP1'                       01282900
&ZOPO(&ZOPN)          SETC 'DS'                                         01283000
&ZOPV(&ZOPN)          SETC 'CL8'                                        01283100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XVERSCOMP1'                 01283200
.*-------------------------------------------------------------------   01283300
.***AM.L09  XCMDFLAG3 BL.8                                              01283400
&ZOPN                 SETA &ZOPN+1                                      01283500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLAG3'                        01283600
&ZOPO(&ZOPN)          SETC 'DS'                                         01283700
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01283800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCMDFLAG3'                  01283900
.*-------------------------------------------------------------------   01284000
.***AM.L09  XPROCESSID3 CL1                                             01284100
&ZOPN                 SETA &ZOPN+1                                      01284200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPROCESSID3'                      01284300
&ZOPO(&ZOPN)          SETC 'DS'                                         01284400
&ZOPV(&ZOPN)          SETC 'CL1'                                        01284500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XPROCESSID3'                01284600
.*-------------------------------------------------------------------   01284700
.***AM.L09  XRSV0649 CL1                                                01284800
&ZOPN                 SETA &ZOPN+1                                      01284900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0649'                         01285000
&ZOPO(&ZOPN)          SETC 'DS'                                         01285100
&ZOPV(&ZOPN)          SETC 'CL1'                                        01285200
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0649'                      01285300
.*-------------------------------------------------------------------   01285400
.***AM.L09  XDAS2 CL1                                                   01285500
&ZOPN                 SETA &ZOPN+1                                      01285600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDAS2'                            01285700
&ZOPO(&ZOPN)          SETC 'DS'                                         01285800
&ZOPV(&ZOPN)          SETC 'CL1'                                        01285900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XDAS2'                      01286000
.*-------------------------------------------------------------------   01286100
.***AM.L09  XRSV0647 CL4                                                01286200
&ZOPN                 SETA &ZOPN+1                                      01286300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0647'                         01286400
&ZOPO(&ZOPN)          SETC 'DS'                                         01286500
&ZOPV(&ZOPN)          SETC 'CL4'                                        01286600
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0647'                      01286700
.*-------------------------------------------------------------------   01286800
.***AM.PJR1 DEFINED ON XVERSCOMP2                                       01286900
&ZOPN                 SETA &ZOPN+1                                      01287000
&ZOPL(&ZOPN)          SETC ' '                                          01287100
&ZOPO(&ZOPN)          SETC 'ORG'                                        01287200
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+172'                              01287300
&ZOPD(&ZOPN)          SETC ' '                                          01287400
.*-------------------------------------------------------------------   01287500
.***AM.L09  XCMDFLAG10 BL.8                                             01287600
&ZOPN                 SETA &ZOPN+1                                      01287700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLAG10'                       01287800
&ZOPO(&ZOPN)          SETC 'DS'                                         01287900
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01288000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCMDFLAG10'                 01288100
.*-------------------------------------------------------------------   01288200
.***AM.L09  XRSV0648 CL7                                                01288300
&ZOPN                 SETA &ZOPN+1                                      01288400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0648'                         01288500
&ZOPO(&ZOPN)          SETC 'DS'                                         01288600
&ZOPV(&ZOPN)          SETC 'CL7'                                        01288700
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0648'                      01288800
.*-------------------------------------------------------------------   01288900
.***AM.PJR1 DEFINED ON XOFF48                                           01289000
&ZOPN                 SETA &ZOPN+1                                      01289100
&ZOPL(&ZOPN)          SETC ' '                                          01289200
&ZOPO(&ZOPN)          SETC 'ORG'                                        01289300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+148'                              01289400
&ZOPD(&ZOPN)          SETC ' '                                          01289500
.*-------------------------------------------------------------------   01289600
.***AM.L09  XCMDFLAG11 BL.8                                             01289700
&ZOPN                 SETA &ZOPN+1                                      01289800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLAG11'                       01289900
&ZOPO(&ZOPN)          SETC 'DS'                                         01290000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01290100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCMDFLAG11'                 01290200
&ZOPN                 SETA &ZOPN+1                                      01290300
&ZOPL(&ZOPN)          SETC ' '                                          01290400
&ZOPO(&ZOPN)          SETC 'ORG'                                        01290500
&ZOPV(&ZOPN)          SETC '&XMFCTRL._PL_END'                           01290600
&ZOPD(&ZOPN)          SETC 'RESET LOCATION COUNTER'                     01290700
.*-------------------------------------------------------------------   01290800
.***AM.L10 END OF IXLCACHE LIST PARAMETERS                              01290900
&ZOPN                 SETA &ZOPN+1                                      01291000
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 01291100
&ZOPO(&ZOPN)          SETC 'EQU'                                        01291200
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 01291300
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         01291400
.*                                                                      01291500
&ZOPN                 SETA &ZOPN+1                                      01291600
&ZOPL(&ZOPN)          SETC ' '                                          01291700
&ZOPO(&ZOPN)          SETC 'SPACE'                                      01291800
&ZOPV(&ZOPN)          SETC '1'                                          01291900
&ZOPD(&ZOPN)          SETC ' '                                          01292000
.*-------------------------------------------------------------------   01292100
.***AL.L12 IXLCACHE FMT=LIST MF=S|L PARAMETERS                          01292200
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         01292300
.*                                                                      01292400
&ZOPN                 SETA  &ZOPN+1                                     01292500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                01292600
&ZOPO(&ZOPN)          SETC  'DC'                                        01292700
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   01292800
&ZOPD(&ZOPN)          SETC  '++ IXLCACHE ARG PARMS'                     01292900
.*                                                                      01293000
.ZLMFSLX              ANOP  ,                                           01293100
.*-------------------------------------------------------------------   01293200
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          01293300
&ZPLLEN               SETA 168                                          01293400
.*                                                                      01293500
                      AIF  (&XPLISTVER LT 3).ZLLEN2Z                    01293600
&ZPLLEN               SETA 192                                          01293700
.ZLLEN2Z              ANOP  ,                                           01293800
.*                                                                      01293900
.******************************************************************     01294000
.***AI.L01 IXLCACHE FMT=LIST FILL IN PARAMETER AREA                     01294100
.******************************************************************     01294200
                      ACTR  10000                                       01294300
&ZCVAL                SETC  'LA'           ASSUME XA MODE               01294400
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    01294500
&ZCVAL                SETC  'LAE'          XAX MODE                     01294600
.ZIMFXA               ANOP ,                                            01294700
.*                                                                      01294800
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    01294900
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         01295000
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 01295100
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                01295200
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 01295300
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                01295400
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   01295500
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    01295600
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   01295700
&ZOPN                 SETA  &ZOPN+1                                     01295800
&ZOPL(&ZOPN)          SETC  ' '                                         01295900
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01296000
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              01296100
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       01296200
                      AGO   .ZIMFNX                                     01296300
.*                                                                      01296400
.ZIMFN2               ANOP ,                                            01296500
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     01296600
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     01296700
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  01296800
&ZOPN                 SETA  &ZOPN+1                                     01296900
&ZOPL(&ZOPN)          SETC  ' '                                         01297000
&ZOPO(&ZOPN)          SETC  'LAE'                                       01297100
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  01297200
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       01297300
                      AGO   .ZIMFNX                                     01297400
.ZIMFNX1              ANOP ,                                            01297500
&ZOPN                 SETA  &ZOPN+1                                     01297600
&ZOPL(&ZOPN)          SETC  ' '                                         01297700
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01297800
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                01297900
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       01298000
.ZIMFNX               ANOP ,                                            01298100
.********************************************************************   01298200
.***AI.L02 IXLCACHE FMT=LIST INITIALIZE PARAMETER AREA                  01298300
.********************************************************************   01298400
.***AI.L03 MF=(SLE)                                                     01298500
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      01298600
.*                                                                      01298700
&ZOPN                 SETA  &ZOPN+1                                     01298800
&ZOPL(&ZOPN)          SETC  ' '                                         01298900
&ZOPO(&ZOPN)          SETC  'XC'                                        01299000
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         01299100
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             01299200
.ZIMFLX               ANOP  ,                                           01299300
.*-------------------------------------------------------------------   01299400
.***AI.LVER01                                                           01299500
                      AIF  (&XPLISTVER LT 3).ZI4Z                       01299600
.*-------------------------------------------------------------------   01299700
.***AI.LVER02                                                           01299800
.ZI4Z                 ANOP  ,                                           01299900
.*-------------------------------------------------------------------   01300000
.***AI.L04B XVERSION XL1                                                01300100
                      AIF   (&XPLISTVER EQ 0).ZIMFVZ                    01300200
&ZOPN                 SETA  &ZOPN+1                                     01300300
&ZOPL(&ZOPN)          SETC  ' '                                         01300400
&ZOPO(&ZOPN)          SETC  'MVI'                                       01300500
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           01300600
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     01300700
.ZIMFVZ               ANOP  ,                                           01300800
.*-------------------------------------------------------------------   01300900
.***AI.L18  XBUFSTGKEY XL1                                              01301000
         AIF   ('&XBUFSTGKEY' NE 'CALLERS_KEY').ZI10                    01301100
&ZXBUFSTGKEY          SETC  ''             RESET INPUT/OUTPUT           01301200
.ZI10                 ANOP  ,                                           01301300
.*-------------------------------------------------------------------   01301400
.***AI.L25  XBUFSTGKEY XL1                                              01301500
                      AIF   ('&ZXBUFSTGKEY' EQ '').ZI10E                01301600
                      AIF   ('&ZXBUFSTGKEY' EQ 'OUTPUT').ZI10E          01301700
&ZCGPR                SETC  '&XBUFSTGKEY'                               01301800
.*                                                                      01301900
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZI10B           01302000
&ZCGPR   SETC  '0('.'&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2).')'                01302100
                      AGO   .ZI10D                                      01302200
.ZI10B                ANOP  ,                                           01302300
.*                                                                      01302400
&ZC                   SETC  '&XBUFSTGKEY'(1,1)                          01302500
                      AIF   (T'&ZC NE 'N').ZI10D                        01302600
&ZC                   SETC  '&XBUFSTGKEY'                               01302700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI10D               01302800
&ZCGPR                SETC  '=BL1''&XBUFSTGKEY'''                       01302900
.*                                                                      01303000
.ZI10D                ANOP  ,                                           01303100
.*                                                                      01303200
&ZOPN                 SETA  &ZOPN+1                                     01303300
&ZOPL(&ZOPN)          SETC  ' '                                         01303400
&ZOPO(&ZOPN)          SETC  'MVC'                                       01303500
&ZOPV(&ZOPN)          SETC  '9(1,1),&ZCGPR'                             01303600
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFSTGKEY XBUFSTGKEY'                01303700
.*                                                                      01303800
.ZI10E                ANOP  ,                                           01303900
.*-------------------------------------------------------------------   01304000
.***AI.L18  XANSLEN XL2                                                 01304100
         AIF   ('&XANSLEN' NE 'NO_ANSLEN').ZI11                         01304200
&ZXANSLEN             SETC  ''             RESET INPUT/OUTPUT           01304300
.ZI11                 ANOP  ,                                           01304400
.*-------------------------------------------------------------------   01304500
.***AI.L25  XANSLEN XL2                                                 01304600
                      AIF   ('&ZXANSLEN' EQ '').ZI11E                   01304700
                      AIF   ('&ZXANSLEN' EQ 'OUTPUT').ZI11E             01304800
&ZCGPR                SETC  '&XANSLEN'                                  01304900
.*                                                                      01305000
                      AIF   ('&XANSLEN'(1,1) NE '(').ZI11B              01305100
&ZCGPR   SETC  '0('.'&XANSLEN'(2,K'&XANSLEN-2).')'                      01305200
                      AGO   .ZI11D                                      01305300
.ZI11B                ANOP  ,                                           01305400
.*                                                                      01305500
&ZC                   SETC  '&XANSLEN'(1,1)                             01305600
                      AIF   (T'&ZC NE 'N').ZI11D                        01305700
&ZC                   SETC  '&XANSLEN'                                  01305800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI11D               01305900
&ZCGPR                SETC  '=AL2(&XANSLEN)'                            01306000
.*                                                                      01306100
.ZI11D                ANOP  ,                                           01306200
.*                                                                      01306300
&ZOPN                 SETA  &ZOPN+1                                     01306400
&ZOPL(&ZOPN)          SETC  ' '                                         01306500
&ZOPO(&ZOPN)          SETC  'MVC'                                       01306600
&ZOPV(&ZOPN)          SETC  '10(2,1),&ZCGPR'                            01306700
&ZOPD(&ZOPN)          SETC  '++ &ZXANSLEN XANSLEN'                      01306800
.*                                                                      01306900
.ZI11E                ANOP  ,                                           01307000
.*-------------------------------------------------------------------   01307100
.***AI.L25  XCONTOKEN CL16                                              01307200
                      AIF   ('&ZXCONTOKEN' EQ '').ZI12E                 01307300
                      AIF   ('&ZXCONTOKEN' EQ 'OUTPUT').ZI12E           01307400
&ZCGPR                SETC  '&XCONTOKEN'                                01307500
.*                                                                      01307600
                      AIF   ('&XCONTOKEN'(1,1) NE '(').ZI12B            01307700
&ZCGPR   SETC  '0('.'&XCONTOKEN'(2,K'&XCONTOKEN-2).')'                  01307800
.ZI12B                ANOP  ,                                           01307900
.*                                                                      01308000
&ZOPN                 SETA  &ZOPN+1                                     01308100
&ZOPL(&ZOPN)          SETC  ' '                                         01308200
&ZOPO(&ZOPN)          SETC  'MVC'                                       01308300
&ZOPV(&ZOPN)          SETC  '12(16,1),&ZCGPR'                           01308400
&ZOPD(&ZOPN)          SETC  '++ &ZXCONTOKEN XCONTOKEN'                  01308500
.*                                                                      01308600
.ZI12E                ANOP  ,                                           01308700
.*-------------------------------------------------------------------   01308800
.***AI.L18  XREQDATA CL8                                                01308900
         AIF   ('&XREQDATA' NE 'NO_REQDATA').ZI16                       01309000
&ZXREQDATA            SETC  ''             RESET INPUT/OUTPUT           01309100
.ZI16                 ANOP  ,                                           01309200
.*-------------------------------------------------------------------   01309300
.***AI.L25  XREQDATA CL8                                                01309400
                      AIF   ('&ZXREQDATA' EQ '').ZI16E                  01309500
                      AIF   ('&ZXREQDATA' EQ 'OUTPUT').ZI16E            01309600
&ZCGPR                SETC  '&XREQDATA'                                 01309700
.*                                                                      01309800
                      AIF   ('&XREQDATA'(1,1) NE '(').ZI16B             01309900
&ZCGPR   SETC  '0('.'&XREQDATA'(2,K'&XREQDATA-2).')'                    01310000
.ZI16B                ANOP  ,                                           01310100
.*                                                                      01310200
&ZOPN                 SETA  &ZOPN+1                                     01310300
&ZOPL(&ZOPN)          SETC  ' '                                         01310400
&ZOPO(&ZOPN)          SETC  'MVC'                                       01310500
&ZOPV(&ZOPN)          SETC  '56(8,1),&ZCGPR'                            01310600
&ZOPD(&ZOPN)          SETC  '++ &ZXREQDATA XREQDATA'                    01310700
.*                                                                      01310800
.ZI16E                ANOP  ,                                           01310900
.*-------------------------------------------------------------------   01311000
.***AI.L18  XREQID CL8                                                  01311100
         AIF   ('&XREQID' NE 'NO_REQID').ZI17                           01311200
&ZXREQID              SETC  ''             RESET INPUT/OUTPUT           01311300
.ZI17                 ANOP  ,                                           01311400
.*-------------------------------------------------------------------   01311500
.***AI.L25  XREQID CL8                                                  01311600
                      AIF   ('&ZXREQID' EQ '').ZI17E                    01311700
                      AIF   ('&ZXREQID' EQ 'OUTPUT').ZI17E              01311800
&ZCGPR                SETC  '&XREQID'                                   01311900
.*                                                                      01312000
                      AIF   ('&XREQID'(1,1) NE '(').ZI17B               01312100
&ZCGPR   SETC  '0('.'&XREQID'(2,K'&XREQID-2).')'                        01312200
.ZI17B                ANOP  ,                                           01312300
.*                                                                      01312400
&ZOPN                 SETA  &ZOPN+1                                     01312500
&ZOPL(&ZOPN)          SETC  ' '                                         01312600
&ZOPO(&ZOPN)          SETC  'MVC'                                       01312700
&ZOPV(&ZOPN)          SETC  '64(8,1),&ZCGPR'                            01312800
&ZOPD(&ZOPN)          SETC  '++ &ZXREQID XREQID'                        01312900
.*                                                                      01313000
.ZI17E                ANOP  ,                                           01313100
.*-------------------------------------------------------------------   01313200
.***AI.L18  XEXTRESTOKEN CL16                                           01313300
         AIF   ('&XEXTRESTOKEN' NE 'NO_EXTRESTOKEN').ZI18               01313400
&ZXEXTRESTOKEN        SETC  ''             RESET INPUT/OUTPUT           01313500
.ZI18                 ANOP  ,                                           01313600
.*-------------------------------------------------------------------   01313700
.***AI.L25  XEXTRESTOKEN CL16                                           01313800
                      AIF   ('&ZXEXTRESTOKEN' EQ '').ZI18E              01313900
                      AIF   ('&ZXEXTRESTOKEN' EQ 'OUTPUT').ZI18E        01314000
&ZCGPR                SETC  '&XEXTRESTOKEN'                             01314100
.*                                                                      01314200
                      AIF   ('&XEXTRESTOKEN'(1,1) NE '(').ZI18B         01314300
&ZCGPR   SETC  '0('.'&XEXTRESTOKEN'(2,K'&XEXTRESTOKEN-2).')'            01314400
.ZI18B                ANOP  ,                                           01314500
.*                                                                      01314600
&ZOPN                 SETA  &ZOPN+1                                     01314700
&ZOPL(&ZOPN)          SETC  ' '                                         01314800
&ZOPO(&ZOPN)          SETC  'MVC'                                       01314900
&ZOPV(&ZOPN)          SETC  '72(16,1),&ZCGPR'                           01315000
&ZOPD(&ZOPN)          SETC  '++ &ZXEXTRESTOKEN XEXTRESTOKEN'            01315100
.*                                                                      01315200
.ZI18E                ANOP  ,                                           01315300
.*-------------------------------------------------------------------   01315400
.***AI.L05 XSHLFLGS1 BL1                                                01315500
&ZW                   SETC  ''                                          01315600
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01315700
.*-------------------------------------------------------------------   01315800
.***AI.L08 XSHLFLGS1 "BUFFER"                                           01315900
.***      BL1'1XXXXXXX'                                                 01316000
         AIF   ('&BUFFER' EQ '').ZI22A                                  01316100
&ZW                   SETC  '&ZW.1'                                     01316200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01316300
                      AGO   .ZI22C                                      01316400
.*                                                                      01316500
.ZI22A                ANOP  ,                                           01316600
&ZW                   SETC  '&ZW.0'                                     01316700
.ZI22C                ANOP  ,                                           01316800
.*-------------------------------------------------------------------   01316900
.***AI.L08 XSHLFLGS1 "BUFLIST"                                          01317000
.***      BL1'X1XXXXXX'                                                 01317100
         AIF   ('&BUFLIST' EQ '').ZI23A                                 01317200
&ZW                   SETC  '&ZW.1'                                     01317300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01317400
                      AGO   .ZI23C                                      01317500
.*                                                                      01317600
.ZI23A                ANOP  ,                                           01317700
&ZW                   SETC  '&ZW.0'                                     01317800
.ZI23C                ANOP  ,                                           01317900
.*-------------------------------------------------------------------   01318000
.***AI.L08 XSHLFLGS1 "ADJAREA"                                          01318100
.***      BL1'XX1XXXXX'                                                 01318200
         AIF   ('&ADJAREA' EQ '').ZI24A                                 01318300
         AIF   ('&ADJAREA' EQ 'NO_ADJAREA').ZI24A                       01318400
&ZW                   SETC  '&ZW.1'                                     01318500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01318600
                      AGO   .ZI24C                                      01318700
.*                                                                      01318800
.ZI24A                ANOP  ,                                           01318900
&ZW                   SETC  '&ZW.0'                                     01319000
.ZI24C                ANOP  ,                                           01319100
.*-------------------------------------------------------------------   01319200
.***AI.L08 XSHLFLGS1 "ANSAREA"                                          01319300
.***      BL1'XXX1XXXX'                                                 01319400
         AIF   ('&ANSAREA' EQ '').ZI25A                                 01319500
         AIF   ('&ANSAREA' EQ 'NO_ANSAREA').ZI25A                       01319600
&ZW                   SETC  '&ZW.1'                                     01319700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01319800
                      AGO   .ZI25C                                      01319900
.*                                                                      01320000
.ZI25A                ANOP  ,                                           01320100
&ZW                   SETC  '&ZW.0'                                     01320200
.ZI25C                ANOP  ,                                           01320300
.*-------------------------------------------------------------------   01320400
.***AI.L08 XSHLFLGS1 "NO"                                               01320500
.***      BL1'XXXX1XXX'                                                 01320600
         AIF   ('&XPAGEABLE' NE 'NO').ZI26A                             01320700
&ZW                   SETC  '&ZW.1'                                     01320800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01320900
                      AGO   .ZI26C                                      01321000
.*                                                                      01321100
.ZI26A                ANOP  ,                                           01321200
&ZW                   SETC  '&ZW.0'                                     01321300
.ZI26C                ANOP  ,                                           01321400
.*-------------------------------------------------------------------   01321500
.***AI.L08 XSHLFLGS1 "BUFSTGKEY"                                        01321600
.***      BL1'XXXXX1XX'                                                 01321700
         AIF   ('&BUFSTGKEY' EQ '').ZI27A                               01321800
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI27A                    01321900
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI27A                    01322000
&ZW                   SETC  '&ZW.1'                                     01322100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01322200
                      AGO   .ZI27C                                      01322300
.*                                                                      01322400
.ZI27A                ANOP  ,                                           01322500
&ZW                   SETC  '&ZW.0'                                     01322600
.ZI27C                ANOP  ,                                           01322700
.*-------------------------------------------------------------------   01322800
.***AI.L08 XSHLFLGS1 "REAL"                                             01322900
.***      BL1'XXXXXX1X'                                                 01323000
         AIF   ('&XBUFADDRTYPE' NE 'REAL').ZI28A                        01323100
&ZW                   SETC  '&ZW.10'                                    01323200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01323300
                      AGO   .ZI28C                                      01323400
.*                                                                      01323500
.ZI28A                ANOP  ,                                           01323600
&ZW                   SETC  '&ZW.00'                                    01323700
.ZI28C                ANOP  ,                                           01323800
.*-------------------------------------------------------------------   01323900
.***AI.L11 XSHLFLGS1 BL1                                                01324000
                      AIF   ('&ZCLNG' NE 'YES').ZI28E  ALL ZERO BITS    01324100
&ZOPN                 SETA  &ZOPN+1                                     01324200
&ZOPL(&ZOPN)          SETC  ' '                                         01324300
&ZOPO(&ZOPN)          SETC  'OI'                                        01324400
&ZOPV(&ZOPN)          SETC  '2(1),B''&ZW'''                             01324500
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              01324600
.ZI28E                ANOP  ,                                           01324700
.*-------------------------------------------------------------------   01324800
.***AI.L05 XSHLFLGS2 BL1                                                01324900
&ZW                   SETC  ''                                          01325000
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01325100
.*-------------------------------------------------------------------   01325200
.***AI.L08 XSHLFLGS2 "SYNCECB"                                          01325300
.***      BL1'1XXXXXXX'                                                 01325400
         AIF   ('&XMODE' NE 'SYNCECB').ZI30A                            01325500
&ZW                   SETC  '&ZW.1'                                     01325600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01325700
                      AGO   .ZI30C                                      01325800
.*                                                                      01325900
.ZI30A                ANOP  ,                                           01326000
&ZW                   SETC  '&ZW.0'                                     01326100
.ZI30C                ANOP  ,                                           01326200
.*-------------------------------------------------------------------   01326300
.***AI.L08 XSHLFLGS2 "SYNCEXIT"                                         01326400
.***      BL1'X1XXXXXX'                                                 01326500
         AIF   ('&XMODE' NE 'SYNCEXIT').ZI31A                           01326600
&ZW                   SETC  '&ZW.1'                                     01326700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01326800
                      AGO   .ZI31C                                      01326900
.*                                                                      01327000
.ZI31A                ANOP  ,                                           01327100
&ZW                   SETC  '&ZW.0'                                     01327200
.ZI31C                ANOP  ,                                           01327300
.*-------------------------------------------------------------------   01327400
.***AI.L08 XSHLFLGS2 "SYNCTOKEN"                                        01327500
.***      BL1'XX1XXXXX'                                                 01327600
         AIF   ('&XMODE' NE 'SYNCTOKEN').ZI32A                          01327700
&ZW                   SETC  '&ZW.1'                                     01327800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01327900
                      AGO   .ZI32C                                      01328000
.*                                                                      01328100
.ZI32A                ANOP  ,                                           01328200
&ZW                   SETC  '&ZW.0'                                     01328300
.ZI32C                ANOP  ,                                           01328400
.*-------------------------------------------------------------------   01328500
.***AI.L08 XSHLFLGS2 "ASYNCECB"                                         01328600
.***      BL1'XXX1XXXX'                                                 01328700
         AIF   ('&XMODE' NE 'ASYNCECB').ZI33A                           01328800
&ZW                   SETC  '&ZW.1'                                     01328900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01329000
                      AGO   .ZI33C                                      01329100
.*                                                                      01329200
.ZI33A                ANOP  ,                                           01329300
&ZW                   SETC  '&ZW.0'                                     01329400
.ZI33C                ANOP  ,                                           01329500
.*-------------------------------------------------------------------   01329600
.***AI.L08 XSHLFLGS2 "ASYNCEXIT"                                        01329700
.***      BL1'XXXX1XXX'                                                 01329800
         AIF   ('&XMODE' NE 'ASYNCEXIT').ZI34A                          01329900
&ZW                   SETC  '&ZW.1'                                     01330000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01330100
                      AGO   .ZI34C                                      01330200
.*                                                                      01330300
.ZI34A                ANOP  ,                                           01330400
&ZW                   SETC  '&ZW.0'                                     01330500
.ZI34C                ANOP  ,                                           01330600
.*-------------------------------------------------------------------   01330700
.***AI.L08 XSHLFLGS2 "ASYNCTOKEN"                                       01330800
.***      BL1'XXXXX1XX'                                                 01330900
         AIF   ('&XMODE' NE 'ASYNCTOKEN').ZI35A                         01331000
&ZW                   SETC  '&ZW.1'                                     01331100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01331200
                      AGO   .ZI35C                                      01331300
.*                                                                      01331400
.ZI35A                ANOP  ,                                           01331500
&ZW                   SETC  '&ZW.0'                                     01331600
.ZI35C                ANOP  ,                                           01331700
.*-------------------------------------------------------------------   01331800
.***AI.L08 XSHLFLGS2 "ASYNCNORESPONSE"                                  01331900
.***      BL1'XXXXXX1X'                                                 01332000
         AIF   ('&XMODE' NE 'ASYNCNORESPONSE').ZI36A                    01332100
&ZW                   SETC  '&ZW.10'                                    01332200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01332300
                      AGO   .ZI36C                                      01332400
.*                                                                      01332500
.ZI36A                ANOP  ,                                           01332600
&ZW                   SETC  '&ZW.00'                                    01332700
.ZI36C                ANOP  ,                                           01332800
.*-------------------------------------------------------------------   01332900
.***AI.L11 XSHLFLGS2 BL1                                                01333000
                      AIF   ('&ZCLNG' NE 'YES').ZI36E  ALL ZERO BITS    01333100
&ZOPN                 SETA  &ZOPN+1                                     01333200
&ZOPL(&ZOPN)          SETC  ' '                                         01333300
&ZOPO(&ZOPN)          SETC  'OI'                                        01333400
&ZOPV(&ZOPN)          SETC  '3(1),B''&ZW'''                             01333500
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              01333600
.ZI36E                ANOP  ,                                           01333700
.*-------------------------------------------------------------------   01333800
.***AI.L05 XSHLFLGS3 BL1                                                01333900
&ZW                   SETC  ''                                          01334000
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01334100
.*-------------------------------------------------------------------   01334200
.***AI.L08 XSHLFLGS3 "YES"                                              01334300
.***      BL1'1XXXXXXX'                                                 01334400
         AIF   ('&XREGUSER' NE 'YES').ZI38A                             01334500
&ZW                   SETC  '&ZW.1'                                     01334600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01334700
                      AGO   .ZI38C                                      01334800
.*                                                                      01334900
.ZI38A                ANOP  ,                                           01335000
&ZW                   SETC  '&ZW.0'                                     01335100
.ZI38C                ANOP  ,                                           01335200
.*-------------------------------------------------------------------   01335300
.***AI.L08 XSHLFLGS3 "VECTORINDEX"                                      01335400
.***      BL1'X1XXXXXX'                                                 01335500
         AIF   ('&VECTORINDEX' EQ '').ZI39A                             01335600
         AIF   ('&VECTORINDEX' EQ 'NO_VECTORINDEX').ZI39A               01335700
&ZW                   SETC  '&ZW.1'                                     01335800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01335900
                      AGO   .ZI39C                                      01336000
.*                                                                      01336100
.ZI39A                ANOP  ,                                           01336200
&ZW                   SETC  '&ZW.0'                                     01336300
.ZI39C                ANOP  ,                                           01336400
.*-------------------------------------------------------------------   01336500
.***AI.L08 XSHLFLGS3 "OLDNAME"                                          01336600
.***      BL1'XX1XXXXX'                                                 01336700
         AIF   ('&OLDNAME' EQ '').ZI40A                                 01336800
&ZW                   SETC  '&ZW.100000'                                01336900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01337000
                      AGO   .ZI40C                                      01337100
.*                                                                      01337200
.ZI40A                ANOP  ,                                           01337300
&ZW                   SETC  '&ZW.000000'                                01337400
.ZI40C                ANOP  ,                                           01337500
.*-------------------------------------------------------------------   01337600
.***AI.L11 XSHLFLGS3 BL1                                                01337700
                      AIF   ('&ZCLNG' NE 'YES').ZI40E  ALL ZERO BITS    01337800
&ZOPN                 SETA  &ZOPN+1                                     01337900
&ZOPL(&ZOPN)          SETC  ' '                                         01338000
&ZOPO(&ZOPN)          SETC  'OI'                                        01338100
&ZOPV(&ZOPN)          SETC  '4(1),B''&ZW'''                             01338200
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              01338300
.ZI40E                ANOP  ,                                           01338400
.*-------------------------------------------------------------------   01338500
.***AI.L05 XSHLFLGS4 BL1                                                01338600
&ZW                   SETC  ''                                          01338700
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01338800
.*-------------------------------------------------------------------   01338900
.***AI.L08 XSHLFLGS4 "EXTRESTOKEN"                                      01339000
.***      BL1'XX1XXXXX'                                                 01339100
         AIF   ('&EXTRESTOKEN' EQ '').ZI42A                             01339200
&ZW                   SETC  '&ZW.001'                                   01339300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01339400
                      AGO   .ZI42C                                      01339500
.*                                                                      01339600
.ZI42A                ANOP  ,                                           01339700
&ZW                   SETC  '&ZW.000'                                   01339800
.ZI42C                ANOP  ,                                           01339900
.*-------------------------------------------------------------------   01340000
.***AI.L08 XSHLFLGS4 "64"                                               01340100
.***      BL1'XXX1XXXX'                                                 01340200
         AIF   ('&XBUFADDRSIZE' NE '64').ZI43A                          01340300
&ZW                   SETC  '&ZW.1'                                     01340400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01340500
                      AGO   .ZI43C                                      01340600
.*                                                                      01340700
.ZI43A                ANOP  ,                                           01340800
&ZW                   SETC  '&ZW.0'                                     01340900
.ZI43C                ANOP  ,                                           01341000
.*-------------------------------------------------------------------   01341100
.***AI.L08 XSHLFLGS4 "CACHE"                                            01341200
.***      BL1'XXXXXXX1'                                                 01341300
&ZW                   SETC  '&ZW.0000'                                  01341400
.*-------------------------------------------------------------------   01341500
.***AI.L11 XSHLFLGS4 BL1                                                01341600
                      AIF   ('&ZCLNG' NE 'YES').ZI44E  ALL ZERO BITS    01341700
&ZOPN                 SETA  &ZOPN+1                                     01341800
&ZOPL(&ZOPN)          SETC  ' '                                         01341900
&ZOPO(&ZOPN)          SETC  'OI'                                        01342000
&ZOPV(&ZOPN)          SETC  '5(1),B''&ZW'''                             01342100
&ZOPD(&ZOPN)          SETC  '++ 344 BL1'                                01342200
.ZI44E                ANOP  ,                                           01342300
.*-------------------------------------------------------------------   01342400
.***AI.L23 ALET XBUFFER F                                               01342500
         AIF   ('&ZXBUFFER' EQ '').ZI50G                                01342600
         AIF   ('&SYSASCE' EQ 'P').ZI50G   SYSSTATE PRIMARY             01342700
&ZCLNG                SETC  '&XBUFFER'                                  01342800
         AIF   ('&XBUFFER'(1,1) EQ '(').ZI50E  IN AR                    01342900
.*                                                                      01343000
&ZCGPR                SETC  '14'                                        01343100
&ZOPN                 SETA  &ZOPN+1                                     01343200
&ZOPL(&ZOPN)          SETC  ' '                                         01343300
&ZOPO(&ZOPN)          SETC  'LAE'                                       01343400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01343500
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      01343600
                      AGO   .ZI50F                                      01343700
.*                                                                      01343800
.ZI50E                ANOP  ,                                           01343900
&ZCGPR   SETC  '&XBUFFER'(2,K'&XBUFFER-2)                               01344000
.*                                                                      01344100
.ZI50F                ANOP  ,                                           01344200
.*                                                                      01344300
&ZOPN                 SETA  &ZOPN+1                                     01344400
&ZOPL(&ZOPN)          SETC  ' '                                         01344500
&ZOPO(&ZOPN)          SETC  'STAM'                                      01344600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,28(1)'                       01344700
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      01344800
.*                                                                      01344900
.ZI50G                ANOP  ,                                           01345000
.*-------------------------------------------------------------------   01345100
.***AI.L25  XBUFSIZE F                                                  01345200
                      AIF   ('&ZXBUFSIZE' EQ '').ZI51E                  01345300
                      AIF   ('&ZXBUFSIZE' EQ 'OUTPUT').ZI51E            01345400
&ZCGPR                SETC  '&XBUFSIZE'                                 01345500
.*                                                                      01345600
                      AIF   ('&XBUFSIZE'(1,1) NE '(').ZI51B             01345700
&ZCGPR   SETC  '0('.'&XBUFSIZE'(2,K'&XBUFSIZE-2).')'                    01345800
                      AGO   .ZI51D                                      01345900
.ZI51B                ANOP  ,                                           01346000
.*                                                                      01346100
&ZC                   SETC  '&XBUFSIZE'(1,1)                            01346200
                      AIF   (T'&ZC NE 'N').ZI51D                        01346300
&ZC                   SETC  '&XBUFSIZE'                                 01346400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI51D               01346500
&ZCGPR                SETC  '=AL4(&XBUFSIZE)'                           01346600
.*                                                                      01346700
.ZI51D                ANOP  ,                                           01346800
.*                                                                      01346900
&ZOPN                 SETA  &ZOPN+1                                     01347000
&ZOPL(&ZOPN)          SETC  ' '                                         01347100
&ZOPO(&ZOPN)          SETC  'MVC'                                       01347200
&ZOPV(&ZOPN)          SETC  '32(4,1),&ZCGPR'                            01347300
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFSIZE XBUFSIZE'                    01347400
.*                                                                      01347500
.ZI51E                ANOP  ,                                           01347600
.*-------------------------------------------------------------------   01347700
.***AI.L19  XBUFFER A                                                   01347800
                      AIF   ('&ZXBUFFER' EQ '').ZI52H                   01347900
&ZCLNG                SETC  '&XBUFFER'                                  01348000
&ZCGPR                SETC  '14'                                        01348100
         AIF   ('&XBUFFER'(1,1) EQ '(').ZI52F  IN GPR                   01348200
.*                                                                      01348300
&ZOPN                 SETA  &ZOPN+1                                     01348400
&ZOPL(&ZOPN)          SETC  ' '                                         01348500
&ZOPO(&ZOPN)          SETC  'LA'                                        01348600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01348700
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      01348800
.*                                                                      01348900
                      AGO   .ZI52G                                      01349000
.*                                                                      01349100
.ZI52F                ANOP  ,                                           01349200
&ZCGPR   SETC  '&XBUFFER'(2,K'&XBUFFER-2)                               01349300
.*                                                                      01349400
.ZI52G                ANOP  ,                                           01349500
.*                                                                      01349600
&ZOPN                 SETA  &ZOPN+1                                     01349700
&ZOPL(&ZOPN)          SETC  ' '                                         01349800
&ZOPO(&ZOPN)          SETC  'ST'                                        01349900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,36(,1)'                             01350000
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      01350100
.*                                                                      01350200
.ZI52H                ANOP  ,                                           01350300
.*-------------------------------------------------------------------   01350400
.***AI.L18  XBUFALET F                                                  01350500
         AIF   ('&XBUFALET' NE 'NO_BUFALET').ZI54                       01350600
&ZXBUFALET            SETC  ''             RESET INPUT/OUTPUT           01350700
.ZI54                 ANOP  ,                                           01350800
.*-------------------------------------------------------------------   01350900
.***AI.L25  XBUFALET F                                                  01351000
                      AIF   ('&ZXBUFALET' EQ '').ZI54E                  01351100
                      AIF   ('&ZXBUFALET' EQ 'OUTPUT').ZI54E            01351200
&ZCGPR                SETC  '&XBUFALET'                                 01351300
.*                                                                      01351400
                      AIF   ('&XBUFALET'(1,1) NE '(').ZI54B             01351500
&ZCGPR   SETC  '0('.'&XBUFALET'(2,K'&XBUFALET-2).')'                    01351600
                      AGO   .ZI54D                                      01351700
.ZI54B                ANOP  ,                                           01351800
.*                                                                      01351900
&ZC                   SETC  '&XBUFALET'(1,1)                            01352000
                      AIF   (T'&ZC NE 'N').ZI54D                        01352100
&ZC                   SETC  '&XBUFALET'                                 01352200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI54D               01352300
&ZCGPR                SETC  '=AL4(&XBUFALET)'                           01352400
.*                                                                      01352500
.ZI54D                ANOP  ,                                           01352600
.*                                                                      01352700
&ZOPN                 SETA  &ZOPN+1                                     01352800
&ZOPL(&ZOPN)          SETC  ' '                                         01352900
&ZOPO(&ZOPN)          SETC  'MVC'                                       01353000
&ZOPV(&ZOPN)          SETC  '28(4,1),&ZCGPR'                            01353100
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFALET XBUFALET'                    01353200
.*                                                                      01353300
.ZI54E                ANOP  ,                                           01353400
.*-------------------------------------------------------------------   01353500
.***AI.L23 ALET XBUFLIST F                                              01353600
         AIF   ('&ZXBUFLIST' EQ '').ZI55G                               01353700
         AIF   ('&SYSASCE' EQ 'P').ZI55G   SYSSTATE PRIMARY             01353800
&ZCLNG                SETC  '&XBUFLIST'                                 01353900
         AIF   ('&XBUFLIST'(1,1) EQ '(').ZI55E  IN AR                   01354000
.*                                                                      01354100
&ZCGPR                SETC  '14'                                        01354200
&ZOPN                 SETA  &ZOPN+1                                     01354300
&ZOPL(&ZOPN)          SETC  ' '                                         01354400
&ZOPO(&ZOPN)          SETC  'LAE'                                       01354500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01354600
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    01354700
                      AGO   .ZI55F                                      01354800
.*                                                                      01354900
.ZI55E                ANOP  ,                                           01355000
&ZCGPR   SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                             01355100
.*                                                                      01355200
.ZI55F                ANOP  ,                                           01355300
.*                                                                      01355400
&ZOPN                 SETA  &ZOPN+1                                     01355500
&ZOPL(&ZOPN)          SETC  ' '                                         01355600
&ZOPO(&ZOPN)          SETC  'STAM'                                      01355700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,32(1)'                       01355800
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    01355900
.*                                                                      01356000
.ZI55G                ANOP  ,                                           01356100
.*-------------------------------------------------------------------   01356200
.***AI.L19  XBUFLIST A                                                  01356300
                      AIF   ('&ZXBUFLIST' EQ '').ZI56H                  01356400
&ZCLNG                SETC  '&XBUFLIST'                                 01356500
&ZCGPR                SETC  '14'                                        01356600
         AIF   ('&XBUFLIST'(1,1) EQ '(').ZI56F  IN GPR                  01356700
         AIF   ('&SYSASCE' NE 'P').ZI56G   SYSSTATE PRIMARY             01356800
.*                                                                      01356900
&ZOPN                 SETA  &ZOPN+1                                     01357000
&ZOPL(&ZOPN)          SETC  ' '                                         01357100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01357200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01357300
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    01357400
.*                                                                      01357500
                      AGO   .ZI56G                                      01357600
.*                                                                      01357700
.ZI56F                ANOP  ,                                           01357800
&ZCGPR   SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                             01357900
.*                                                                      01358000
.ZI56G                ANOP  ,                                           01358100
.*                                                                      01358200
&ZOPN                 SETA  &ZOPN+1                                     01358300
&ZOPL(&ZOPN)          SETC  ' '                                         01358400
&ZOPO(&ZOPN)          SETC  'ST'                                        01358500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,36(,1)'                             01358600
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    01358700
.*                                                                      01358800
.ZI56H                ANOP  ,                                           01358900
.*-------------------------------------------------------------------   01359000
.***AI.L18 ALET XADJAREA F                                              01359100
         AIF   ('&XADJAREA' NE 'NO_ADJAREA').ZI58                       01359200
&ZXADJAREA            SETC  ''             RESET INPUT/OUTPUT           01359300
.ZI58                 ANOP  ,                                           01359400
.*-------------------------------------------------------------------   01359500
.***AI.L23 ALET XADJAREA F                                              01359600
         AIF   ('&ZXADJAREA' EQ '').ZI58G                               01359700
         AIF   ('&SYSASCE' EQ 'P').ZI58G   SYSSTATE PRIMARY             01359800
&ZCLNG                SETC  '&XADJAREA'                                 01359900
         AIF   ('&XADJAREA'(1,1) EQ '(').ZI58E  IN AR                   01360000
.*                                                                      01360100
&ZCGPR                SETC  '14'                                        01360200
&ZOPN                 SETA  &ZOPN+1                                     01360300
&ZOPL(&ZOPN)          SETC  ' '                                         01360400
&ZOPO(&ZOPN)          SETC  'LAE'                                       01360500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01360600
&ZOPD(&ZOPN)          SETC  '++ &ZXADJAREA XADJAREA'                    01360700
                      AGO   .ZI58F                                      01360800
.*                                                                      01360900
.ZI58E                ANOP  ,                                           01361000
&ZCGPR   SETC  '&XADJAREA'(2,K'&XADJAREA-2)                             01361100
.*                                                                      01361200
.ZI58F                ANOP  ,                                           01361300
.*                                                                      01361400
&ZOPN                 SETA  &ZOPN+1                                     01361500
&ZOPL(&ZOPN)          SETC  ' '                                         01361600
&ZOPO(&ZOPN)          SETC  'STAM'                                      01361700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,40(1)'                       01361800
&ZOPD(&ZOPN)          SETC  '++ &ZXADJAREA XADJAREA'                    01361900
.*                                                                      01362000
.ZI58G                ANOP  ,                                           01362100
.*-------------------------------------------------------------------   01362200
.***AI.L18  XADJAREA A                                                  01362300
         AIF   ('&XADJAREA' NE 'NO_ADJAREA').ZI59                       01362400
&ZXADJAREA            SETC  ''             RESET INPUT/OUTPUT           01362500
.ZI59                 ANOP  ,                                           01362600
.*-------------------------------------------------------------------   01362700
.***AI.L19  XADJAREA A                                                  01362800
                      AIF   ('&ZXADJAREA' EQ '').ZI59H                  01362900
&ZCLNG                SETC  '&XADJAREA'                                 01363000
&ZCGPR                SETC  '14'                                        01363100
         AIF   ('&XADJAREA'(1,1) EQ '(').ZI59F  IN GPR                  01363200
         AIF   ('&SYSASCE' NE 'P').ZI59G   SYSSTATE PRIMARY             01363300
.*                                                                      01363400
&ZOPN                 SETA  &ZOPN+1                                     01363500
&ZOPL(&ZOPN)          SETC  ' '                                         01363600
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01363700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01363800
&ZOPD(&ZOPN)          SETC  '++ &ZXADJAREA XADJAREA'                    01363900
.*                                                                      01364000
                      AGO   .ZI59G                                      01364100
.*                                                                      01364200
.ZI59F                ANOP  ,                                           01364300
&ZCGPR   SETC  '&XADJAREA'(2,K'&XADJAREA-2)                             01364400
.*                                                                      01364500
.ZI59G                ANOP  ,                                           01364600
.*                                                                      01364700
&ZOPN                 SETA  &ZOPN+1                                     01364800
&ZOPL(&ZOPN)          SETC  ' '                                         01364900
&ZOPO(&ZOPN)          SETC  'ST'                                        01365000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,44(,1)'                             01365100
&ZOPD(&ZOPN)          SETC  '++ &ZXADJAREA XADJAREA'                    01365200
.*                                                                      01365300
.ZI59H                ANOP  ,                                           01365400
.*-------------------------------------------------------------------   01365500
.***AI.L18 ALET XRECLVCTR F                                             01365600
         AIF   ('&XRECLVCTR' NE 'NO_RECLVCTR').ZI61                     01365700
&ZXRECLVCTR           SETC  ''             RESET INPUT/OUTPUT           01365800
.ZI61                 ANOP  ,                                           01365900
.*-------------------------------------------------------------------   01366000
.***AI.L23 ALET XRECLVCTR F                                             01366100
         AIF   ('&ZXRECLVCTR' EQ '').ZI61G                              01366200
         AIF   ('&SYSASCE' EQ 'P').ZI61G   SYSSTATE PRIMARY             01366300
&ZCLNG                SETC  '&XRECLVCTR'                                01366400
         AIF   ('&XRECLVCTR'(1,1) EQ '(').ZI61E  IN AR                  01366500
.*                                                                      01366600
&ZCGPR                SETC  '14'                                        01366700
&ZOPN                 SETA  &ZOPN+1                                     01366800
&ZOPL(&ZOPN)          SETC  ' '                                         01366900
&ZOPO(&ZOPN)          SETC  'LAE'                                       01367000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01367100
&ZOPD(&ZOPN)          SETC  '++ &ZXRECLVCTR XRECLVCTR'                  01367200
                      AGO   .ZI61F                                      01367300
.*                                                                      01367400
.ZI61E                ANOP  ,                                           01367500
&ZCGPR   SETC  '&XRECLVCTR'(2,K'&XRECLVCTR-2)                           01367600
.*                                                                      01367700
.ZI61F                ANOP  ,                                           01367800
.*                                                                      01367900
&ZOPN                 SETA  &ZOPN+1                                     01368000
&ZOPL(&ZOPN)          SETC  ' '                                         01368100
&ZOPO(&ZOPN)          SETC  'STAM'                                      01368200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,40(1)'                       01368300
&ZOPD(&ZOPN)          SETC  '++ &ZXRECLVCTR XRECLVCTR'                  01368400
.*                                                                      01368500
.ZI61G                ANOP  ,                                           01368600
.*-------------------------------------------------------------------   01368700
.***AI.L18  XRECLVCTR A                                                 01368800
         AIF   ('&XRECLVCTR' NE 'NO_RECLVCTR').ZI62                     01368900
&ZXRECLVCTR           SETC  ''             RESET INPUT/OUTPUT           01369000
.ZI62                 ANOP  ,                                           01369100
.*-------------------------------------------------------------------   01369200
.***AI.L19  XRECLVCTR A                                                 01369300
                      AIF   ('&ZXRECLVCTR' EQ '').ZI62H                 01369400
&ZCLNG                SETC  '&XRECLVCTR'                                01369500
&ZCGPR                SETC  '14'                                        01369600
         AIF   ('&XRECLVCTR'(1,1) EQ '(').ZI62F  IN GPR                 01369700
         AIF   ('&SYSASCE' NE 'P').ZI62G   SYSSTATE PRIMARY             01369800
.*                                                                      01369900
&ZOPN                 SETA  &ZOPN+1                                     01370000
&ZOPL(&ZOPN)          SETC  ' '                                         01370100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01370200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01370300
&ZOPD(&ZOPN)          SETC  '++ &ZXRECLVCTR XRECLVCTR'                  01370400
.*                                                                      01370500
                      AGO   .ZI62G                                      01370600
.*                                                                      01370700
.ZI62F                ANOP  ,                                           01370800
&ZCGPR   SETC  '&XRECLVCTR'(2,K'&XRECLVCTR-2)                           01370900
.*                                                                      01371000
.ZI62G                ANOP  ,                                           01371100
.*                                                                      01371200
&ZOPN                 SETA  &ZOPN+1                                     01371300
&ZOPL(&ZOPN)          SETC  ' '                                         01371400
&ZOPO(&ZOPN)          SETC  'ST'                                        01371500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,44(,1)'                             01371600
&ZOPD(&ZOPN)          SETC  '++ &ZXRECLVCTR XRECLVCTR'                  01371700
.*                                                                      01371800
.ZI62H                ANOP  ,                                           01371900
.*-------------------------------------------------------------------   01372000
.***AI.L23 ALET XSTGSTATS F                                             01372100
         AIF   ('&ZXSTGSTATS' EQ '').ZI64G                              01372200
         AIF   ('&SYSASCE' EQ 'P').ZI64G   SYSSTATE PRIMARY             01372300
&ZCLNG                SETC  '&XSTGSTATS'                                01372400
         AIF   ('&XSTGSTATS'(1,1) EQ '(').ZI64E  IN AR                  01372500
.*                                                                      01372600
&ZCGPR                SETC  '14'                                        01372700
&ZOPN                 SETA  &ZOPN+1                                     01372800
&ZOPL(&ZOPN)          SETC  ' '                                         01372900
&ZOPO(&ZOPN)          SETC  'LAE'                                       01373000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01373100
&ZOPD(&ZOPN)          SETC  '++ &ZXSTGSTATS XSTGSTATS'                  01373200
                      AGO   .ZI64F                                      01373300
.*                                                                      01373400
.ZI64E                ANOP  ,                                           01373500
&ZCGPR   SETC  '&XSTGSTATS'(2,K'&XSTGSTATS-2)                           01373600
.*                                                                      01373700
.ZI64F                ANOP  ,                                           01373800
.*                                                                      01373900
&ZOPN                 SETA  &ZOPN+1                                     01374000
&ZOPL(&ZOPN)          SETC  ' '                                         01374100
&ZOPO(&ZOPN)          SETC  'STAM'                                      01374200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,40(1)'                       01374300
&ZOPD(&ZOPN)          SETC  '++ &ZXSTGSTATS XSTGSTATS'                  01374400
.*                                                                      01374500
.ZI64G                ANOP  ,                                           01374600
.*-------------------------------------------------------------------   01374700
.***AI.L19  XSTGSTATS A                                                 01374800
                      AIF   ('&ZXSTGSTATS' EQ '').ZI65H                 01374900
&ZCLNG                SETC  '&XSTGSTATS'                                01375000
&ZCGPR                SETC  '14'                                        01375100
         AIF   ('&XSTGSTATS'(1,1) EQ '(').ZI65F  IN GPR                 01375200
         AIF   ('&SYSASCE' NE 'P').ZI65G   SYSSTATE PRIMARY             01375300
.*                                                                      01375400
&ZOPN                 SETA  &ZOPN+1                                     01375500
&ZOPL(&ZOPN)          SETC  ' '                                         01375600
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01375700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01375800
&ZOPD(&ZOPN)          SETC  '++ &ZXSTGSTATS XSTGSTATS'                  01375900
.*                                                                      01376000
                      AGO   .ZI65G                                      01376100
.*                                                                      01376200
.ZI65F                ANOP  ,                                           01376300
&ZCGPR   SETC  '&XSTGSTATS'(2,K'&XSTGSTATS-2)                           01376400
.*                                                                      01376500
.ZI65G                ANOP  ,                                           01376600
.*                                                                      01376700
&ZOPN                 SETA  &ZOPN+1                                     01376800
&ZOPL(&ZOPN)          SETC  ' '                                         01376900
&ZOPO(&ZOPN)          SETC  'ST'                                        01377000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,44(,1)'                             01377100
&ZOPD(&ZOPN)          SETC  '++ &ZXSTGSTATS XSTGSTATS'                  01377200
.*                                                                      01377300
.ZI65H                ANOP  ,                                           01377400
.*-------------------------------------------------------------------   01377500
.***AI.L23 ALET XNSBAREA F                                              01377600
         AIF   ('&ZXNSBAREA' EQ '').ZI67G                               01377700
         AIF   ('&SYSASCE' EQ 'P').ZI67G   SYSSTATE PRIMARY             01377800
&ZCLNG                SETC  '&XNSBAREA'                                 01377900
         AIF   ('&XNSBAREA'(1,1) EQ '(').ZI67E  IN AR                   01378000
.*                                                                      01378100
&ZCGPR                SETC  '14'                                        01378200
&ZOPN                 SETA  &ZOPN+1                                     01378300
&ZOPL(&ZOPN)          SETC  ' '                                         01378400
&ZOPO(&ZOPN)          SETC  'LAE'                                       01378500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01378600
&ZOPD(&ZOPN)          SETC  '++ &ZXNSBAREA XNSBAREA'                    01378700
                      AGO   .ZI67F                                      01378800
.*                                                                      01378900
.ZI67E                ANOP  ,                                           01379000
&ZCGPR   SETC  '&XNSBAREA'(2,K'&XNSBAREA-2)                             01379100
.*                                                                      01379200
.ZI67F                ANOP  ,                                           01379300
.*                                                                      01379400
&ZOPN                 SETA  &ZOPN+1                                     01379500
&ZOPL(&ZOPN)          SETC  ' '                                         01379600
&ZOPO(&ZOPN)          SETC  'STAM'                                      01379700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,40(1)'                       01379800
&ZOPD(&ZOPN)          SETC  '++ &ZXNSBAREA XNSBAREA'                    01379900
.*                                                                      01380000
.ZI67G                ANOP  ,                                           01380100
.*-------------------------------------------------------------------   01380200
.***AI.L19  XNSBAREA A                                                  01380300
                      AIF   ('&ZXNSBAREA' EQ '').ZI68H                  01380400
&ZCLNG                SETC  '&XNSBAREA'                                 01380500
&ZCGPR                SETC  '14'                                        01380600
         AIF   ('&XNSBAREA'(1,1) EQ '(').ZI68F  IN GPR                  01380700
         AIF   ('&SYSASCE' NE 'P').ZI68G   SYSSTATE PRIMARY             01380800
.*                                                                      01380900
&ZOPN                 SETA  &ZOPN+1                                     01381000
&ZOPL(&ZOPN)          SETC  ' '                                         01381100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01381200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01381300
&ZOPD(&ZOPN)          SETC  '++ &ZXNSBAREA XNSBAREA'                    01381400
.*                                                                      01381500
                      AGO   .ZI68G                                      01381600
.*                                                                      01381700
.ZI68F                ANOP  ,                                           01381800
&ZCGPR   SETC  '&XNSBAREA'(2,K'&XNSBAREA-2)                             01381900
.*                                                                      01382000
.ZI68G                ANOP  ,                                           01382100
.*                                                                      01382200
&ZOPN                 SETA  &ZOPN+1                                     01382300
&ZOPL(&ZOPN)          SETC  ' '                                         01382400
&ZOPO(&ZOPN)          SETC  'ST'                                        01382500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,44(,1)'                             01382600
&ZOPD(&ZOPN)          SETC  '++ &ZXNSBAREA XNSBAREA'                    01382700
.*                                                                      01382800
.ZI68H                ANOP  ,                                           01382900
.*-------------------------------------------------------------------   01383000
.***AI.L18 ALET XANSAREA F                                              01383100
         AIF   ('&XANSAREA' NE 'NO_ANSAREA').ZI70                       01383200
&ZXANSAREA            SETC  ''             RESET INPUT/OUTPUT           01383300
.ZI70                 ANOP  ,                                           01383400
.*-------------------------------------------------------------------   01383500
.***AI.L23 ALET XANSAREA F                                              01383600
         AIF   ('&ZXANSAREA' EQ '').ZI70G                               01383700
         AIF   ('&SYSASCE' EQ 'P').ZI70G   SYSSTATE PRIMARY             01383800
&ZCLNG                SETC  '&XANSAREA'                                 01383900
         AIF   ('&XANSAREA'(1,1) EQ '(').ZI70E  IN AR                   01384000
.*                                                                      01384100
&ZCGPR                SETC  '14'                                        01384200
&ZOPN                 SETA  &ZOPN+1                                     01384300
&ZOPL(&ZOPN)          SETC  ' '                                         01384400
&ZOPO(&ZOPN)          SETC  'LAE'                                       01384500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01384600
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    01384700
                      AGO   .ZI70F                                      01384800
.*                                                                      01384900
.ZI70E                ANOP  ,                                           01385000
&ZCGPR   SETC  '&XANSAREA'(2,K'&XANSAREA-2)                             01385100
.*                                                                      01385200
.ZI70F                ANOP  ,                                           01385300
.*                                                                      01385400
&ZOPN                 SETA  &ZOPN+1                                     01385500
&ZOPL(&ZOPN)          SETC  ' '                                         01385600
&ZOPO(&ZOPN)          SETC  'STAM'                                      01385700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,48(1)'                       01385800
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    01385900
.*                                                                      01386000
.ZI70G                ANOP  ,                                           01386100
.*-------------------------------------------------------------------   01386200
.***AI.L18  XANSAREA A                                                  01386300
         AIF   ('&XANSAREA' NE 'NO_ANSAREA').ZI71                       01386400
&ZXANSAREA            SETC  ''             RESET INPUT/OUTPUT           01386500
.ZI71                 ANOP  ,                                           01386600
.*-------------------------------------------------------------------   01386700
.***AI.L19  XANSAREA A                                                  01386800
                      AIF   ('&ZXANSAREA' EQ '').ZI71H                  01386900
&ZCLNG                SETC  '&XANSAREA'                                 01387000
&ZCGPR                SETC  '14'                                        01387100
         AIF   ('&XANSAREA'(1,1) EQ '(').ZI71F  IN GPR                  01387200
         AIF   ('&SYSASCE' NE 'P').ZI71G   SYSSTATE PRIMARY             01387300
.*                                                                      01387400
&ZOPN                 SETA  &ZOPN+1                                     01387500
&ZOPL(&ZOPN)          SETC  ' '                                         01387600
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01387700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01387800
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    01387900
.*                                                                      01388000
                      AGO   .ZI71G                                      01388100
.*                                                                      01388200
.ZI71F                ANOP  ,                                           01388300
&ZCGPR   SETC  '&XANSAREA'(2,K'&XANSAREA-2)                             01388400
.*                                                                      01388500
.ZI71G                ANOP  ,                                           01388600
.*                                                                      01388700
&ZOPN                 SETA  &ZOPN+1                                     01388800
&ZOPL(&ZOPN)          SETC  ' '                                         01388900
&ZOPO(&ZOPN)          SETC  'ST'                                        01389000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,52(,1)'                             01389100
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    01389200
.*                                                                      01389300
.ZI71H                ANOP  ,                                           01389400
.*-------------------------------------------------------------------   01389500
.***AI.L25  XREQECB AL4                                                 01389600
                      AIF   ('&ZXREQECB' EQ '').ZI73E                   01389700
                      AIF   ('&ZXREQECB' EQ 'OUTPUT').ZI73E             01389800
&ZCGPR                SETC  '&XREQECB'                                  01389900
.*                                                                      01390000
                      AIF   ('&XREQECB'(1,1) NE '(').ZI73B              01390100
&ZCGPR   SETC  '0('.'&XREQECB'(2,K'&XREQECB-2).')'                      01390200
                      AGO   .ZI73D                                      01390300
.ZI73B                ANOP  ,                                           01390400
.*                                                                      01390500
&ZC                   SETC  '&XREQECB'(1,1)                             01390600
                      AIF   (T'&ZC NE 'N').ZI73D                        01390700
&ZC                   SETC  '&XREQECB'                                  01390800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI73D               01390900
&ZCGPR                SETC  '=AL4(&XREQECB)'                            01391000
.*                                                                      01391100
.ZI73D                ANOP  ,                                           01391200
.*                                                                      01391300
&ZOPN                 SETA  &ZOPN+1                                     01391400
&ZOPL(&ZOPN)          SETC  ' '                                         01391500
&ZOPO(&ZOPN)          SETC  'MVC'                                       01391600
&ZOPV(&ZOPN)          SETC  '56(4,1),&ZCGPR'                            01391700
&ZOPD(&ZOPN)          SETC  '++ &ZXREQECB XREQECB'                      01391800
.*                                                                      01391900
.ZI73E                ANOP  ,                                           01392000
.*-------------------------------------------------------------------   01392100
.***AI.L23 ALET XREQTOKEN F                                             01392200
         AIF   ('&ZXREQTOKEN' EQ '').ZI76G                              01392300
         AIF   ('&SYSASCE' EQ 'P').ZI76G   SYSSTATE PRIMARY             01392400
&ZCLNG                SETC  '&XREQTOKEN'                                01392500
         AIF   ('&XREQTOKEN'(1,1) EQ '(').ZI76E  IN AR                  01392600
.*                                                                      01392700
&ZCGPR                SETC  '14'                                        01392800
&ZOPN                 SETA  &ZOPN+1                                     01392900
&ZOPL(&ZOPN)          SETC  ' '                                         01393000
&ZOPO(&ZOPN)          SETC  'LAE'                                       01393100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01393200
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  01393300
                      AGO   .ZI76F                                      01393400
.*                                                                      01393500
.ZI76E                ANOP  ,                                           01393600
&ZCGPR   SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)                           01393700
.*                                                                      01393800
.ZI76F                ANOP  ,                                           01393900
.*                                                                      01394000
&ZOPN                 SETA  &ZOPN+1                                     01394100
&ZOPL(&ZOPN)          SETC  ' '                                         01394200
&ZOPO(&ZOPN)          SETC  'STAM'                                      01394300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,56(1)'                       01394400
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  01394500
.*                                                                      01394600
.ZI76G                ANOP  ,                                           01394700
.*-------------------------------------------------------------------   01394800
.***AI.L19  XREQTOKEN A                                                 01394900
                      AIF   ('&ZXREQTOKEN' EQ '').ZI77H                 01395000
&ZCLNG                SETC  '&XREQTOKEN'                                01395100
&ZCGPR                SETC  '14'                                        01395200
         AIF   ('&XREQTOKEN'(1,1) EQ '(').ZI77F  IN GPR                 01395300
         AIF   ('&SYSASCE' NE 'P').ZI77G   SYSSTATE PRIMARY             01395400
.*                                                                      01395500
&ZOPN                 SETA  &ZOPN+1                                     01395600
&ZOPL(&ZOPN)          SETC  ' '                                         01395700
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01395800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01395900
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  01396000
.*                                                                      01396100
                      AGO   .ZI77G                                      01396200
.*                                                                      01396300
.ZI77F                ANOP  ,                                           01396400
&ZCGPR   SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)                           01396500
.*                                                                      01396600
.ZI77G                ANOP  ,                                           01396700
.*                                                                      01396800
&ZOPN                 SETA  &ZOPN+1                                     01396900
&ZOPL(&ZOPN)          SETC  ' '                                         01397000
&ZOPO(&ZOPN)          SETC  'ST'                                        01397100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,60(,1)'                             01397200
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  01397300
.*                                                                      01397400
.ZI77H                ANOP  ,                                           01397500
.*-------------------------------------------------------------------   01397600
.***AI.L18  XBUFNUM XL1                                                 01397700
         AIF   ('&XBUFNUM' NE 'NO_BUFNUM').ZI83                         01397800
&ZXBUFNUM             SETC  ''             RESET INPUT/OUTPUT           01397900
.ZI83                 ANOP  ,                                           01398000
.*-------------------------------------------------------------------   01398100
.***AI.L25  XBUFNUM XL1                                                 01398200
                      AIF   ('&ZXBUFNUM' EQ '').ZI83E                   01398300
                      AIF   ('&ZXBUFNUM' EQ 'OUTPUT').ZI83E             01398400
&ZCGPR                SETC  '&XBUFNUM'                                  01398500
.*                                                                      01398600
                      AIF   ('&XBUFNUM'(1,1) NE '(').ZI83B              01398700
&ZCGPR   SETC  '0('.'&XBUFNUM'(2,K'&XBUFNUM-2).')'                      01398800
                      AGO   .ZI83D                                      01398900
.ZI83B                ANOP  ,                                           01399000
.*                                                                      01399100
&ZC                   SETC  '&XBUFNUM'(1,1)                             01399200
                      AIF   (T'&ZC NE 'N').ZI83D                        01399300
&ZC                   SETC  '&XBUFNUM'                                  01399400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI83D               01399500
&ZCGPR                SETC  '=AL1(&XBUFNUM)'                            01399600
.*                                                                      01399700
.ZI83D                ANOP  ,                                           01399800
.*                                                                      01399900
&ZOPN                 SETA  &ZOPN+1                                     01400000
&ZOPL(&ZOPN)          SETC  ' '                                         01400100
&ZOPO(&ZOPN)          SETC  'MVC'                                       01400200
&ZOPV(&ZOPN)          SETC  '98(1,1),&ZCGPR'                            01400300
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFNUM XBUFNUM'                      01400400
.*                                                                      01400500
.ZI83E                ANOP  ,                                           01400600
.*-------------------------------------------------------------------   01400700
.***AI.L18  XBUFINCRNUM XL1                                             01400800
         AIF   ('&XBUFINCRNUM' NE 'NO_BUFINCRNUM').ZI84                 01400900
&ZXBUFINCRNUM         SETC  ''             RESET INPUT/OUTPUT           01401000
.ZI84                 ANOP  ,                                           01401100
.*-------------------------------------------------------------------   01401200
.***AI.L25  XBUFINCRNUM XL1                                             01401300
                      AIF   ('&ZXBUFINCRNUM' EQ '').ZI84E               01401400
                      AIF   ('&ZXBUFINCRNUM' EQ 'OUTPUT').ZI84E         01401500
&ZCGPR                SETC  '&XBUFINCRNUM'                              01401600
.*                                                                      01401700
                      AIF   ('&XBUFINCRNUM'(1,1) NE '(').ZI84B          01401800
&ZCGPR   SETC  '0('.'&XBUFINCRNUM'(2,K'&XBUFINCRNUM-2).')'              01401900
                      AGO   .ZI84D                                      01402000
.ZI84B                ANOP  ,                                           01402100
.*                                                                      01402200
&ZC                   SETC  '&XBUFINCRNUM'(1,1)                         01402300
                      AIF   (T'&ZC NE 'N').ZI84D                        01402400
&ZC                   SETC  '&XBUFINCRNUM'                              01402500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI84D               01402600
&ZCGPR                SETC  '=AL1(&XBUFINCRNUM)'                        01402700
.*                                                                      01402800
.ZI84D                ANOP  ,                                           01402900
.*                                                                      01403000
&ZOPN                 SETA  &ZOPN+1                                     01403100
&ZOPL(&ZOPN)          SETC  ' '                                         01403200
&ZOPO(&ZOPN)          SETC  'MVC'                                       01403300
&ZOPV(&ZOPN)          SETC  '99(1,1),&ZCGPR'                            01403400
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFINCRNUM XBUFINCRNUM'              01403500
.*                                                                      01403600
.ZI84E                ANOP  ,                                           01403700
.*-------------------------------------------------------------------   01403800
.***AI.L25  XCUNBAREA CL32                                              01403900
                      AIF   ('&ZXCUNBAREA' EQ '').ZI92E                 01404000
                      AIF   ('&ZXCUNBAREA' EQ 'OUTPUT').ZI92E           01404100
&ZCGPR                SETC  '&XCUNBAREA'                                01404200
.*                                                                      01404300
                      AIF   ('&XCUNBAREA'(1,1) NE '(').ZI92B            01404400
&ZCGPR   SETC  '0('.'&XCUNBAREA'(2,K'&XCUNBAREA-2).')'                  01404500
.ZI92B                ANOP  ,                                           01404600
.*                                                                      01404700
&ZOPN                 SETA  &ZOPN+1                                     01404800
&ZOPL(&ZOPN)          SETC  ' '                                         01404900
&ZOPO(&ZOPN)          SETC  'MVC'                                       01405000
&ZOPV(&ZOPN)          SETC  '116(32,1),&ZCGPR'                          01405100
&ZOPD(&ZOPN)          SETC  '++ &ZXCUNBAREA XCUNBAREA'                  01405200
.*                                                                      01405300
.ZI92E                ANOP  ,                                           01405400
.*-------------------------------------------------------------------   01405500
.***AI.L25  XNAMEMASK XL2                                               01405600
                      AIF   ('&ZXNAMEMASK' EQ '').ZI95E                 01405700
                      AIF   ('&ZXNAMEMASK' EQ 'OUTPUT').ZI95E           01405800
&ZCGPR                SETC  '&XNAMEMASK'                                01405900
.*                                                                      01406000
                      AIF   ('&XNAMEMASK'(1,1) NE '(').ZI95B            01406100
&ZCGPR   SETC  '0('.'&XNAMEMASK'(2,K'&XNAMEMASK-2).')'                  01406200
                      AGO   .ZI95D                                      01406300
.ZI95B                ANOP  ,                                           01406400
.*                                                                      01406500
&ZC                   SETC  '&XNAMEMASK'(1,1)                           01406600
                      AIF   (T'&ZC NE 'N').ZI95D                        01406700
&ZC                   SETC  '&XNAMEMASK'                                01406800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI95D               01406900
&ZCGPR                SETC  '=BL2''&XNAMEMASK'''                        01407000
.*                                                                      01407100
.ZI95D                ANOP  ,                                           01407200
.*                                                                      01407300
&ZOPN                 SETA  &ZOPN+1                                     01407400
&ZOPL(&ZOPN)          SETC  ' '                                         01407500
&ZOPO(&ZOPN)          SETC  'MVC'                                       01407600
&ZOPV(&ZOPN)          SETC  '104(2,1),&ZCGPR'                           01407700
&ZOPD(&ZOPN)          SETC  '++ &ZXNAMEMASK XNAMEMASK'                  01407800
.*                                                                      01407900
.ZI95E                ANOP  ,                                           01408000
.*-------------------------------------------------------------------   01408100
.***AI.L25  XCOCLASSB XL2                                               01408200
                      AIF   ('&ZXCOCLASSB' EQ '').ZI97E                 01408300
                      AIF   ('&ZXCOCLASSB' EQ 'OUTPUT').ZI97E           01408400
&ZCGPR                SETC  '&XCOCLASSB'                                01408500
.*                                                                      01408600
                      AIF   ('&XCOCLASSB'(1,1) NE '(').ZI97B            01408700
&ZCGPR   SETC  '0('.'&XCOCLASSB'(2,K'&XCOCLASSB-2).')'                  01408800
                      AGO   .ZI97D                                      01408900
.ZI97B                ANOP  ,                                           01409000
.*                                                                      01409100
&ZC                   SETC  '&XCOCLASSB'(1,1)                           01409200
                      AIF   (T'&ZC NE 'N').ZI97D                        01409300
&ZC                   SETC  '&XCOCLASSB'                                01409400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI97D               01409500
&ZCGPR                SETC  '=AL2(&XCOCLASSB)'                          01409600
.*                                                                      01409700
.ZI97D                ANOP  ,                                           01409800
.*                                                                      01409900
&ZOPN                 SETA  &ZOPN+1                                     01410000
&ZOPL(&ZOPN)          SETC  ' '                                         01410100
&ZOPO(&ZOPN)          SETC  'MVC'                                       01410200
&ZOPV(&ZOPN)          SETC  '104(2,1),&ZCGPR'                           01410300
&ZOPD(&ZOPN)          SETC  '++ &ZXCOCLASSB XCOCLASSB'                  01410400
.*                                                                      01410500
.ZI97E                ANOP  ,                                           01410600
.*-------------------------------------------------------------------   01410700
.***AI.L18  XSTGCLASS XL1                                               01410800
         AIF   ('&XSTGCLASS' NE 'NO_STGCLASS').ZI100                    01410900
&ZXSTGCLASS           SETC  ''             RESET INPUT/OUTPUT           01411000
.ZI100                ANOP  ,                                           01411100
.*-------------------------------------------------------------------   01411200
.***AI.L25  XSTGCLASS XL1                                               01411300
                      AIF   ('&ZXSTGCLASS' EQ '').ZI100E                01411400
                      AIF   ('&ZXSTGCLASS' EQ 'OUTPUT').ZI100E          01411500
&ZCGPR                SETC  '&XSTGCLASS'                                01411600
.*                                                                      01411700
                      AIF   ('&XSTGCLASS'(1,1) NE '(').ZI100B           01411800
&ZCGPR   SETC  '0('.'&XSTGCLASS'(2,K'&XSTGCLASS-2).')'                  01411900
                      AGO   .ZI100D                                     01412000
.ZI100B               ANOP  ,                                           01412100
.*                                                                      01412200
&ZC                   SETC  '&XSTGCLASS'(1,1)                           01412300
                      AIF   (T'&ZC NE 'N').ZI100D                       01412400
&ZC                   SETC  '&XSTGCLASS'                                01412500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI100D              01412600
&ZCGPR                SETC  '=AL1(&XSTGCLASS)'                          01412700
.*                                                                      01412800
.ZI100D               ANOP  ,                                           01412900
.*                                                                      01413000
&ZOPN                 SETA  &ZOPN+1                                     01413100
&ZOPL(&ZOPN)          SETC  ' '                                         01413200
&ZOPO(&ZOPN)          SETC  'MVC'                                       01413300
&ZOPV(&ZOPN)          SETC  '105(1,1),&ZCGPR'                           01413400
&ZOPD(&ZOPN)          SETC  '++ &ZXSTGCLASS XSTGCLASS'                  01413500
.*                                                                      01413600
.ZI100E               ANOP  ,                                           01413700
.*-------------------------------------------------------------------   01413800
.***AI.L18  XCOCLASS XL2                                                01413900
         AIF   ('&XCOCLASS' NE 'NO_COCLASS').ZI107                      01414000
&ZXCOCLASS            SETC  ''             RESET INPUT/OUTPUT           01414100
.ZI107                ANOP  ,                                           01414200
.*-------------------------------------------------------------------   01414300
.***AI.L25  XCOCLASS XL2                                                01414400
                      AIF   ('&ZXCOCLASS' EQ '').ZI107E                 01414500
                      AIF   ('&ZXCOCLASS' EQ 'OUTPUT').ZI107E           01414600
&ZCGPR                SETC  '&XCOCLASS'                                 01414700
.*                                                                      01414800
                      AIF   ('&XCOCLASS'(1,1) NE '(').ZI107B            01414900
&ZCGPR   SETC  '0('.'&XCOCLASS'(2,K'&XCOCLASS-2).')'                    01415000
                      AGO   .ZI107D                                     01415100
.ZI107B               ANOP  ,                                           01415200
.*                                                                      01415300
&ZC                   SETC  '&XCOCLASS'(1,1)                            01415400
                      AIF   (T'&ZC NE 'N').ZI107D                       01415500
&ZC                   SETC  '&XCOCLASS'                                 01415600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI107D              01415700
&ZCGPR                SETC  '=AL2(&XCOCLASS)'                           01415800
.*                                                                      01415900
.ZI107D               ANOP  ,                                           01416000
.*                                                                      01416100
&ZOPN                 SETA  &ZOPN+1                                     01416200
&ZOPL(&ZOPN)          SETC  ' '                                         01416300
&ZOPO(&ZOPN)          SETC  'MVC'                                       01416400
&ZOPV(&ZOPN)          SETC  '106(2,1),&ZCGPR'                           01416500
&ZOPD(&ZOPN)          SETC  '++ &ZXCOCLASS XCOCLASS'                    01416600
.*                                                                      01416700
.ZI107E               ANOP  ,                                           01416800
.*-------------------------------------------------------------------   01416900
.***AI.L25  XCOCLASSE XL2                                               01417000
                      AIF   ('&ZXCOCLASSE' EQ '').ZI109E                01417100
                      AIF   ('&ZXCOCLASSE' EQ 'OUTPUT').ZI109E          01417200
&ZCGPR                SETC  '&XCOCLASSE'                                01417300
.*                                                                      01417400
                      AIF   ('&XCOCLASSE'(1,1) NE '(').ZI109B           01417500
&ZCGPR   SETC  '0('.'&XCOCLASSE'(2,K'&XCOCLASSE-2).')'                  01417600
                      AGO   .ZI109D                                     01417700
.ZI109B               ANOP  ,                                           01417800
.*                                                                      01417900
&ZC                   SETC  '&XCOCLASSE'(1,1)                           01418000
                      AIF   (T'&ZC NE 'N').ZI109D                       01418100
&ZC                   SETC  '&XCOCLASSE'                                01418200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI109D              01418300
&ZCGPR                SETC  '=AL2(&XCOCLASSE)'                          01418400
.*                                                                      01418500
.ZI109D               ANOP  ,                                           01418600
.*                                                                      01418700
&ZOPN                 SETA  &ZOPN+1                                     01418800
&ZOPL(&ZOPN)          SETC  ' '                                         01418900
&ZOPO(&ZOPN)          SETC  'MVC'                                       01419000
&ZOPV(&ZOPN)          SETC  '106(2,1),&ZCGPR'                           01419100
&ZOPD(&ZOPN)          SETC  '++ &ZXCOCLASSE XCOCLASSE'                  01419200
.*                                                                      01419300
.ZI109E               ANOP  ,                                           01419400
.*-------------------------------------------------------------------   01419500
.***AI.L25  XNUMNAMES XL2                                               01419600
                      AIF   ('&ZXNUMNAMES' EQ '').ZI111E                01419700
                      AIF   ('&ZXNUMNAMES' EQ 'OUTPUT').ZI111E          01419800
&ZCGPR                SETC  '&XNUMNAMES'                                01419900
.*                                                                      01420000
                      AIF   ('&XNUMNAMES'(1,1) NE '(').ZI111B           01420100
&ZCGPR   SETC  '0('.'&XNUMNAMES'(2,K'&XNUMNAMES-2).')'                  01420200
                      AGO   .ZI111D                                     01420300
.ZI111B               ANOP  ,                                           01420400
.*                                                                      01420500
&ZC                   SETC  '&XNUMNAMES'(1,1)                           01420600
                      AIF   (T'&ZC NE 'N').ZI111D                       01420700
&ZC                   SETC  '&XNUMNAMES'                                01420800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI111D              01420900
&ZCGPR                SETC  '=AL2(&XNUMNAMES)'                          01421000
.*                                                                      01421100
.ZI111D               ANOP  ,                                           01421200
.*                                                                      01421300
&ZOPN                 SETA  &ZOPN+1                                     01421400
&ZOPL(&ZOPN)          SETC  ' '                                         01421500
&ZOPO(&ZOPN)          SETC  'MVC'                                       01421600
&ZOPV(&ZOPN)          SETC  '106(2,1),&ZCGPR'                           01421700
&ZOPD(&ZOPN)          SETC  '++ &ZXNUMNAMES XNUMNAMES'                  01421800
.*                                                                      01421900
.ZI111E               ANOP  ,                                           01422000
.*-------------------------------------------------------------------   01422100
.***AI.L25  XREPEAT XL2                                                 01422200
                      AIF   ('&ZXREPEAT' EQ '').ZI113E                  01422300
                      AIF   ('&ZXREPEAT' EQ 'OUTPUT').ZI113E            01422400
&ZCGPR                SETC  '&XREPEAT'                                  01422500
.*                                                                      01422600
                      AIF   ('&XREPEAT'(1,1) NE '(').ZI113B             01422700
&ZCGPR   SETC  '0('.'&XREPEAT'(2,K'&XREPEAT-2).')'                      01422800
                      AGO   .ZI113D                                     01422900
.ZI113B               ANOP  ,                                           01423000
.*                                                                      01423100
&ZC                   SETC  '&XREPEAT'(1,1)                             01423200
                      AIF   (T'&ZC NE 'N').ZI113D                       01423300
&ZC                   SETC  '&XREPEAT'                                  01423400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI113D              01423500
&ZCGPR                SETC  '=AL2(&XREPEAT)'                            01423600
.*                                                                      01423700
.ZI113D               ANOP  ,                                           01423800
.*                                                                      01423900
&ZOPN                 SETA  &ZOPN+1                                     01424000
&ZOPL(&ZOPN)          SETC  ' '                                         01424100
&ZOPO(&ZOPN)          SETC  'MVC'                                       01424200
&ZOPV(&ZOPN)          SETC  '106(2,1),&ZCGPR'                           01424300
&ZOPD(&ZOPN)          SETC  '++ &ZXREPEAT XREPEAT'                      01424400
.*                                                                      01424500
.ZI113E               ANOP  ,                                           01424600
.*-------------------------------------------------------------------   01424700
.***AI.L18  XRESTOKEN CL8                                               01424800
         AIF   ('&XRESTOKEN' NE 'NO_RESTOKEN').ZI126                    01424900
&ZXRESTOKEN           SETC  ''             RESET INPUT/OUTPUT           01425000
.ZI126                ANOP  ,                                           01425100
.*-------------------------------------------------------------------   01425200
.***AI.L25  XRESTOKEN CL8                                               01425300
                      AIF   ('&ZXRESTOKEN' EQ '').ZI126E                01425400
                      AIF   ('&ZXRESTOKEN' EQ 'OUTPUT').ZI126E          01425500
&ZCGPR                SETC  '&XRESTOKEN'                                01425600
.*                                                                      01425700
                      AIF   ('&XRESTOKEN'(1,1) NE '(').ZI126B           01425800
&ZCGPR   SETC  '0('.'&XRESTOKEN'(2,K'&XRESTOKEN-2).')'                  01425900
.ZI126B               ANOP  ,                                           01426000
.*                                                                      01426100
&ZOPN                 SETA  &ZOPN+1                                     01426200
&ZOPL(&ZOPN)          SETC  ' '                                         01426300
&ZOPO(&ZOPN)          SETC  'MVC'                                       01426400
&ZOPV(&ZOPN)          SETC  '108(8,1),&ZCGPR'                           01426500
&ZOPD(&ZOPN)          SETC  '++ &ZXRESTOKEN XRESTOKEN'                  01426600
.*                                                                      01426700
.ZI126E               ANOP  ,                                           01426800
.*-------------------------------------------------------------------   01426900
.***AI.L25  XFIRSTNAME XL2                                              01427000
                      AIF   ('&ZXFIRSTNAME' EQ '').ZI130E               01427100
                      AIF   ('&ZXFIRSTNAME' EQ 'OUTPUT').ZI130E         01427200
&ZCGPR                SETC  '&XFIRSTNAME'                               01427300
.*                                                                      01427400
                      AIF   ('&XFIRSTNAME'(1,1) NE '(').ZI130B          01427500
&ZCGPR   SETC  '0('.'&XFIRSTNAME'(2,K'&XFIRSTNAME-2).')'                01427600
                      AGO   .ZI130D                                     01427700
.ZI130B               ANOP  ,                                           01427800
.*                                                                      01427900
&ZC                   SETC  '&XFIRSTNAME'(1,1)                          01428000
                      AIF   (T'&ZC NE 'N').ZI130D                       01428100
&ZC                   SETC  '&XFIRSTNAME'                               01428200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI130D              01428300
&ZCGPR                SETC  '=AL2(&XFIRSTNAME)'                         01428400
.*                                                                      01428500
.ZI130D               ANOP  ,                                           01428600
.*                                                                      01428700
&ZOPN                 SETA  &ZOPN+1                                     01428800
&ZOPL(&ZOPN)          SETC  ' '                                         01428900
&ZOPO(&ZOPN)          SETC  'MVC'                                       01429000
&ZOPV(&ZOPN)          SETC  '108(2,1),&ZCGPR'                           01429100
&ZOPD(&ZOPN)          SETC  '++ &ZXFIRSTNAME XFIRSTNAME'                01429200
.*                                                                      01429300
.ZI130E               ANOP  ,                                           01429400
.*-------------------------------------------------------------------   01429500
.***AI.L25  XLASTNAME XL2                                               01429600
                      AIF   ('&ZXLASTNAME' EQ '').ZI131E                01429700
                      AIF   ('&ZXLASTNAME' EQ 'OUTPUT').ZI131E          01429800
&ZCGPR                SETC  '&XLASTNAME'                                01429900
.*                                                                      01430000
                      AIF   ('&XLASTNAME'(1,1) NE '(').ZI131B           01430100
&ZCGPR   SETC  '0('.'&XLASTNAME'(2,K'&XLASTNAME-2).')'                  01430200
                      AGO   .ZI131D                                     01430300
.ZI131B               ANOP  ,                                           01430400
.*                                                                      01430500
&ZC                   SETC  '&XLASTNAME'(1,1)                           01430600
                      AIF   (T'&ZC NE 'N').ZI131D                       01430700
&ZC                   SETC  '&XLASTNAME'                                01430800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI131D              01430900
&ZCGPR                SETC  '=AL2(&XLASTNAME)'                          01431000
.*                                                                      01431100
.ZI131D               ANOP  ,                                           01431200
.*                                                                      01431300
&ZOPN                 SETA  &ZOPN+1                                     01431400
&ZOPL(&ZOPN)          SETC  ' '                                         01431500
&ZOPO(&ZOPN)          SETC  'MVC'                                       01431600
&ZOPV(&ZOPN)          SETC  '110(2,1),&ZCGPR'                           01431700
&ZOPD(&ZOPN)          SETC  '++ &ZXLASTNAME XLASTNAME'                  01431800
.*                                                                      01431900
.ZI131E               ANOP  ,                                           01432000
.*-------------------------------------------------------------------   01432100
.***AI.L18  XNAME CL16                                                  01432200
         AIF   ('&XNAME' NE 'NO_NAME').ZI151                            01432300
&ZXNAME               SETC  ''             RESET INPUT/OUTPUT           01432400
.ZI151                ANOP  ,                                           01432500
.*-------------------------------------------------------------------   01432600
.***AI.L25  XNAME CL16                                                  01432700
                      AIF   ('&ZXNAME' EQ '').ZI151E                    01432800
                      AIF   ('&ZXNAME' EQ 'OUTPUT').ZI151E              01432900
&ZCGPR                SETC  '&XNAME'                                    01433000
.*                                                                      01433100
                      AIF   ('&XNAME'(1,1) NE '(').ZI151B               01433200
&ZCGPR   SETC  '0('.'&XNAME'(2,K'&XNAME-2).')'                          01433300
.ZI151B               ANOP  ,                                           01433400
.*                                                                      01433500
&ZOPN                 SETA  &ZOPN+1                                     01433600
&ZOPL(&ZOPN)          SETC  ' '                                         01433700
&ZOPO(&ZOPN)          SETC  'MVC'                                       01433800
&ZOPV(&ZOPN)          SETC  '116(16,1),&ZCGPR'                          01433900
&ZOPD(&ZOPN)          SETC  '++ &ZXNAME XNAME'                          01434000
.*                                                                      01434100
.ZI151E               ANOP  ,                                           01434200
.*-------------------------------------------------------------------   01434300
.***AI.L18  XOLDNAME CL16                                               01434400
         AIF   ('&XOLDNAME' NE 'NO_OLDNAME').ZI154                      01434500
&ZXOLDNAME            SETC  ''             RESET INPUT/OUTPUT           01434600
.ZI154                ANOP  ,                                           01434700
.*-------------------------------------------------------------------   01434800
.***AI.L25  XOLDNAME CL16                                               01434900
                      AIF   ('&ZXOLDNAME' EQ '').ZI154E                 01435000
                      AIF   ('&ZXOLDNAME' EQ 'OUTPUT').ZI154E           01435100
&ZCGPR                SETC  '&XOLDNAME'                                 01435200
.*                                                                      01435300
                      AIF   ('&XOLDNAME'(1,1) NE '(').ZI154B            01435400
&ZCGPR   SETC  '0('.'&XOLDNAME'(2,K'&XOLDNAME-2).')'                    01435500
.ZI154B               ANOP  ,                                           01435600
.*                                                                      01435700
&ZOPN                 SETA  &ZOPN+1                                     01435800
&ZOPL(&ZOPN)          SETC  ' '                                         01435900
&ZOPO(&ZOPN)          SETC  'MVC'                                       01436000
&ZOPV(&ZOPN)          SETC  '132(16,1),&ZCGPR'                          01436100
&ZOPD(&ZOPN)          SETC  '++ &ZXOLDNAME XOLDNAME'                    01436200
.*                                                                      01436300
.ZI154E               ANOP  ,                                           01436400
.*-------------------------------------------------------------------   01436500
.***AI.L18  XVECTORINDEX F                                              01436600
         AIF   ('&XVECTORINDEX' NE 'NO_VECTORINDEX').ZI172              01436700
&ZXVECTORINDEX        SETC  ''             RESET INPUT/OUTPUT           01436800
.ZI172                ANOP  ,                                           01436900
.*-------------------------------------------------------------------   01437000
.***AI.L25  XVECTORINDEX F                                              01437100
                      AIF   ('&ZXVECTORINDEX' EQ '').ZI172E             01437200
                      AIF   ('&ZXVECTORINDEX' EQ 'OUTPUT').ZI172E       01437300
&ZCGPR                SETC  '&XVECTORINDEX'                             01437400
.*                                                                      01437500
                      AIF   ('&XVECTORINDEX'(1,1) NE '(').ZI172B        01437600
&ZCGPR   SETC  '0('.'&XVECTORINDEX'(2,K'&XVECTORINDEX-2).')'            01437700
                      AGO   .ZI172D                                     01437800
.ZI172B               ANOP  ,                                           01437900
.*                                                                      01438000
&ZC                   SETC  '&XVECTORINDEX'(1,1)                        01438100
                      AIF   (T'&ZC NE 'N').ZI172D                       01438200
&ZC                   SETC  '&XVECTORINDEX'                             01438300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI172D              01438400
&ZCGPR                SETC  '=AL4(&XVECTORINDEX)'                       01438500
.*                                                                      01438600
.ZI172D               ANOP  ,                                           01438700
.*                                                                      01438800
&ZOPN                 SETA  &ZOPN+1                                     01438900
&ZOPL(&ZOPN)          SETC  ' '                                         01439000
&ZOPO(&ZOPN)          SETC  'MVC'                                       01439100
&ZOPV(&ZOPN)          SETC  '148(4,1),&ZCGPR'                           01439200
&ZOPD(&ZOPN)          SETC  '++ &ZXVECTORINDEX XVECTORINDEX'            01439300
.*                                                                      01439400
.ZI172E               ANOP  ,                                           01439500
.*-------------------------------------------------------------------   01439600
&ZOPN1                SETA &ZOPN                                        01439700
.*******************************************************************    01439800
.***  PROCESS IXLCACHE OUTPUT PARAMETERS                                01439900
.*******************************************************************    01440000
                      ACTR  10000                                       01440100
.*******************************************************************    01440200
.***AO.X02  RETURN CODE PROCESSING                                      01440300
.*******************************************************************    01440400
                      AIF   (N'&RETCODE LE 0).ZMRETX                    01440500
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            01440600
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             01440700
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             01440800
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               01440900
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                01441000
&ZOPN                 SETA  &ZOPN+1                                     01441100
&ZOPL(&ZOPN)          SETC  ' '                                         01441200
&ZOPO(&ZOPN)          SETC  'ST'                                        01441300
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              01441400
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        01441500
                      AGO   .ZMRETX                                     01441600
.*                                                                      01441700
.ZMRET2               ANOP  ,                                           01441800
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                01441900
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                01442000
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                01442100
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  01442200
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   01442300
&ZOPN                 SETA  &ZOPN+1                                     01442400
&ZOPL(&ZOPN)          SETC  ' '                                         01442500
&ZOPO(&ZOPN)          SETC  'LR'                                        01442600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 01442700
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        01442800
.ZMRETX               ANOP  ,                                           01442900
.*******************************************************************    01443000
.***AO.X03  REASON CODE PROCESSING                                      01443100
.*******************************************************************    01443200
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    01443300
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            01443400
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              01443500
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             01443600
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              01443700
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             01443800
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                01443900
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 01444000
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                01444100
&ZOPN                 SETA  &ZOPN+1                                     01444200
&ZOPL(&ZOPN)          SETC  ' '                                         01444300
&ZOPO(&ZOPN)          SETC  'ST'                                        01444400
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               01444500
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        01444600
                      AGO   .ZMRSNX                                     01444700
.*                                                                      01444800
.ZMRSN2               ANOP  ,                                           01444900
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                01445000
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 01445100
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                01445200
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 01445300
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                01445400
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   01445500
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    01445600
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   01445700
&ZOPN                 SETA  &ZOPN+1                                     01445800
&ZOPL(&ZOPN)          SETC  ' '                                         01445900
&ZOPO(&ZOPN)          SETC  'LR'                                        01446000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  01446100
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        01446200
.ZMRSNX               ANOP  ,                                           01446300
.*******************************************************************    01446400
.***AO.X04  LABEL FOR MF=L PROCESSING                                   01446500
.*******************************************************************    01446600
.ZMFLX                ANOP  ,              MF=L PROCESSING              01446700
.*******************************************************************    01446800
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               01446900
.*******************************************************************    01447000
                      ACTR  10000                                       01447100
.*                                                                      01447200
                      LCLA  &ZLC           COLUMN POSITION              01447300
                      LCLA  &ZOPX          LIST TABLE INDEX             01447400
                      LCLC  &ZLL           LABEL                        01447500
                      LCLC  &ZLOP          OPERATION                    01447600
                      LCLC  &ZLV           VALUE                        01447700
                      LCLC  &ZLD           DESCRIPTION                  01447800
.*                                                                      01447900
&ZOPX                 SETA  1                                           01448000
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            01448100
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              01448200
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              01448300
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              01448400
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              01448500
                      AIF   (K'&ZLD LE 0).ZL5                           01448600
&ZLC                  SETA  35             COMMENT COLUMN               01448700
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    01448800
&ZLC                  SETA  33             COMMMENT COLUMN              01448900
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   01449000
&ZLV                  SETC  '&ZLV'.' '                                  01449100
                      AGO   .ZL3                                        01449200
.*                                                                      01449300
.ZL4                  ANOP  ,                                           01449400
&ZLV                  SETC  '&ZLV'.' '                                  01449500
.ZL5                  ANOP  ,                                           01449600
&ZLV                  SETC  '&ZLV'.'&ZLD'                               01449700
.*                                                                      01449800
&ZLL     &ZLOP &ZLV                                                     01449900
.*                                                                      01450000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               01450100
                      AGO   .ZL2           CONTINUE LOOPING             01450200
.*                                                                      01450300
.ZLX                  ANOP  ,                                           01450400
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                01450500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  01450600
.**------------------------------------------------------------------** 01450700
.**  Start of user maclasm code                                      ** 01450800
.**------------------------------------------------------------------** 01450900
.*                                                                      01451000
.**  Only generate code if no errors have been found                 ** 01451100
.*                                                                      01451200
         AIF   (&ZMACRET NE 0).ENDGENLINKAGE                            01451300
.*                                                                      01451400
.**------------------------------------------------------------------** 01451500
.**  Declares for macro constants                                    ** 01451600
.**------------------------------------------------------------------** 01451700
.*                                                                      01451800
.**  Command codes                                                   ** 01451900
.*                                                                      01452000
               LCLC  &KCACHECMDRAR                                      01452100
               LCLC  &KCACHECMDRFCO                                     01452200
               LCLC  &KCACHECMDRD                                       01452300
               LCLC  &KCACHECMDRCC                                      01452400
               LCLC  &KCACHECMDRCCI                                     01452500
               LCLC  &KCACHECMDWWR                                      01452600
               LCLC  &KCACHECMDWAR                                      01452700
               LCLC  &KCACHECMDPRL                                      01452800
               LCLC  &KCACHECMDUCL                                      01452900
               LCLC  &KCACHECMDIN                                       01453000
               LCLC  &KCACHECMDICC                                      01453100
               LCLC  &KCACHECMDSRV                                      01453200
               LCLC  &KCACHECMDRSCI                                     01453300
               LCLC  &KCACHECMDRNL                                 @02A 01453400
               LCLC  &KCACHECMDUCLE                                @04A 01453500
               LCLC  &KCACHECMDINL                                 @05A 01453600
.*                                                                      01453700
&KCACHECMDRAR  SETC  '0'                                                01453800
&KCACHECMDRFCO SETC  '4'                                                01453900
&KCACHECMDRD   SETC  '8'                                                01454000
&KCACHECMDRCC  SETC  '12'                                               01454100
&KCACHECMDRCCI SETC  '16'                                               01454200
&KCACHECMDWWR  SETC  '20'                                               01454300
&KCACHECMDWAR  SETC  '24'                                               01454400
&KCACHECMDPRL  SETC  '28'                                               01454500
&KCACHECMDUCL  SETC  '32'                                               01454600
&KCACHECMDIN   SETC  '36'                                               01454700
&KCACHECMDICC  SETC  '40'                                               01454800
&KCACHECMDSRV  SETC  '44'                                               01454900
&KCACHECMDRSCI SETC  '48'                                               01455000
&KCACHECMDRNL  SETC  '52'                                          @02A 01455100
&KCACHECMDUCLE SETC  '56'                                          @04A 01455200
&KCACHECMDINL  SETC  '60'                                          @05A 01455300
.*                                                                      01455400
.*                                                                      01455500
.**  Cache command type                                              ** 01455600
.*                                                                      01455700
               LCLC  &KCACHECMDTYPE                                     01455800
&KCACHECMDTYPE SETC  'X''04'''                                          01455900
.*                                                                      01456000
.*                                                                      01456100
.**  Command opcodes                                                 ** 01456200
.*                                                                      01456300
               LCLC  &KCACHEOPRAR                                       01456400
               LCLC  &KCACHEOPRFCO                                      01456500
               LCLC  &KCACHEOPRD                                        01456600
               LCLC  &KCACHEOPRCC                                       01456700
               LCLC  &KCACHEOPRCCI                                      01456800
               LCLC  &KCACHEOPWWR                                       01456900
               LCLC  &KCACHEOPWAR                                       01457000
               LCLC  &KCACHEOPPRL                                       01457100
               LCLC  &KCACHEOPUCL                                       01457200
               LCLC  &KCACHEOPIN                                        01457300
               LCLC  &KCACHEOPICC                                       01457400
               LCLC  &KCACHEOPSRV                                       01457500
               LCLC  &KCACHEOPRSCI                                      01457600
               LCLC  &KCACHEOPRNL                                  @02A 01457700
               LCLC  &KCACHEOPUCLE                                 @04A 01457800
               LCLC  &KCACHEOPINL                                  @05A 01457900
.*                                                                      01458000
&KCACHEOPRAR   SETC  'X''00'''                                          01458100
&KCACHEOPRFCO  SETC  'X''01'''                                          01458200
&KCACHEOPRD    SETC  'X''02'''                                          01458300
&KCACHEOPRCC   SETC  'X''03'''                                          01458400
&KCACHEOPRCCI  SETC  'X''04'''                                          01458500
&KCACHEOPWWR   SETC  'X''85'''                                          01458600
&KCACHEOPWAR   SETC  'X''86'''                                          01458700
&KCACHEOPPRL   SETC  'X''87'''                                          01458800
&KCACHEOPUCL   SETC  'X''88'''                                          01458900
&KCACHEOPIN    SETC  'X''09'''                                          01459000
&KCACHEOPICC   SETC  'X''0A'''                                          01459100
&KCACHEOPSRV   SETC  'X''0B'''                                          01459200
&KCACHEOPRSCI  SETC  'X''0C'''                                          01459300
&KCACHEOPRNL   SETC  'X''93'''                                     @02A 01459400
&KCACHEOPUCLE  SETC  'X''14'''                                     @04A 01459500
&KCACHEOPINL   SETC  'X''95'''                                     @05A 01459600
.*                                                                      01459700
.*                                                                      01459800
.**  Command lengths                                                 ** 01459900
.*                                                                      01460000
               LCLC  &KCACHERARLEN                                      01460100
               LCLC  &KCACHERFCOLEN                                     01460200
               LCLC  &KCACHERDLEN                                       01460300
               LCLC  &KCACHERCCLEN                                      01460400
               LCLC  &KCACHERCCILEN                                     01460500
               LCLC  &KCACHEWWRLEN                                      01460600
               LCLC  &KCACHEWARLEN                                      01460700
               LCLC  &KCACHEWRITEALEN                                   01460800
               LCLC  &KCACHEPRLLEN                                      01460900
               LCLC  &KCACHEUCLLEN                                      01461000
               LCLC  &KCACHEINLEN                                       01461100
               LCLC  &KCACHEICCLEN                                      01461200
               LCLC  &KCACHESRVLEN                                      01461300
               LCLC  &KCACHERSCILEN                                     01461400
               LCLC  &KCACHERNLLEN                                 @02A 01461500
               LCLC  &KCACHEUCLELEN                                @04A 01461600
               LCLC  &KCACHEINLLEN                                 @05A 01461700
.*                                                                      01461800
&KCACHERARLEN        SETC  '68'                                         01461900
&KCACHERFCOLEN       SETC  '68'                                         01462000
&KCACHERDLEN         SETC  '48'                                         01462100
&KCACHERCCLEN        SETC  '56'                                    @05C 01462200
&KCACHERCCILEN       SETC  '28'                                         01462300
&KCACHEWWRLEN        SETC  '92'                                    @05C 01462400
&KCACHEWARLEN        SETC  '108'                                   @05C 01462500
&KCACHEWRITEALEN     SETC  '256'                                        01462600
&KCACHEPRLLEN        SETC  '24'                                         01462700
&KCACHEUCLLEN        SETC  '28'                                         01462800
&KCACHEINLEN         SETC  '68'                                    @05C 01462900
&KCACHEICCLEN        SETC  '48'                                         01463000
&KCACHESRVLEN        SETC  '152'                                        01463100
&KCACHERSCILEN       SETC  '24'                                         01463200
&KCACHERNLLEN        SETC  '28'                                    @02A 01463300
&KCACHEUCLELEN       SETC  '64'                                    @04A 01463400
&KCACHEINLLEN        SETC  '32'                                    @05A 01463500
.*                                                                      01463600
.*                                                                      01463700
.**  Parameter list offsets                                          ** 01463800
.*                                                                      01463900
.*  Offsets of parameter list sections                                  01464000
.*                                                                      01464100
                   LCLA  &PLOFF_XSHL_DATA                               01464200
                   LCLA  &PLOFF_XMOB_DATA                               01464300
                   LCLA  &PLOFF_XMCB_DATA                               01464400
.*                                                                      01464500
&PLOFF_XSHL_DATA   SETA  0                                              01464600
&PLOFF_XMOB_DATA   SETA  96                                             01464700
&PLOFF_XMCB_DATA   SETA  100                                            01464800
.*                                                                      01464900
.*  Offsets within the shell data section                               01465000
.*                                                                      01465100
                     LCLA  &PLOFF_XCMDCODE                              01465200
                     LCLA  &PLOFF_XSHLFLGS2                             01465300
                     LCLA  &PLOFF_XCONID                                01465400
                     LCLA  &PLOFF_XBUFSIZE                              01465500
                     LCLA  &PLOFF_XANSAREA_ALET                         01465600
                     LCLA  &PLOFF_XANSAREA                              01465700
                     LCLA  &PLOFF_XEXTRESTOKENTKN                  @L1A 01465800
.*                                                                      01465900
&PLOFF_XCMDCODE      SETA  &PLOFF_XSHL_DATA+1                           01466000
&PLOFF_XSHLFLGS2     SETA  &PLOFF_XSHL_DATA+3                           01466100
&PLOFF_XCONID        SETA  &PLOFF_XSHL_DATA+25                          01466200
&PLOFF_XBUFSIZE      SETA  &PLOFF_XSHL_DATA+32                     @PBC 01466300
&PLOFF_XANSAREA_ALET SETA  &PLOFF_XSHL_DATA+48                          01466400
&PLOFF_XANSAREA      SETA  &PLOFF_XSHL_DATA+52                          01466500
&PLOFF_XEXTRESTOKENTKN  SETA  &PLOFF_XSHL_DATA+72                  @L1A 01466600
.*                                                                      01466700
.*  Offsets within the MOB section                                      01466800
.*                                                                      01466900
                   LCLA  &PLOFF_XCMDLEN                                 01467000
                   LCLA  &PLOFF_XBUFNUM                                 01467100
                   LCLA  &PLOFF_XBUFINCRNUM                             01467200
.*                                                                      01467300
&PLOFF_XCMDLEN     SETA  &PLOFF_XMOB_DATA+0                             01467400
&PLOFF_XBUFNUM     SETA  &PLOFF_XMOB_DATA+2                             01467500
&PLOFF_XBUFINCRNUM SETA  &PLOFF_XMOB_DATA+3                             01467600
.*                                                                      01467700
.*  Offsets within the MCB section                                      01467800
.*                                                                      01467900
                   LCLA  &PLOFF_XCCA                                    01468000
                   LCLA  &PLOFF_XCCB                                    01468100
                   LCLA  &PLOFF_XLCID1                                  01468200
                   LCLA  &PLOFF_XPROCESSID1                             01468300
                   LCLA  &PLOFF_XCMDFLAG1                               01468400
                   LCLA  &PLOFF_XLCID2                                  01468500
                   LCLA  &PLOFF_XDBS1                                   01468600
                   LCLA  &PLOFF_XUSERDATA1                              01468700
                   LCLA  &PLOFF_XDBS2                                   01468800
                   LCLA  &PLOFF_XCMDFLAG2                               01468900
                   LCLA  &PLOFF_XPROCESSID2                             01469000
                   LCLA  &PLOFF_XDAS1                                   01469100
                   LCLA  &PLOFF_XDBS3                                   01469200
                   LCLA  &PLOFF_XUSERDATA2                              01469300
                   LCLA  &PLOFF_XCMDFLAG3                               01469400
                   LCLA  &PLOFF_XPROCESSID3                             01469500
                   LCLA  &PLOFF_XRESTOKEN                          @L1A 01469600
                   LCLA  &PLOFF_XDAS2                                   01469700
                   LCLA  &PLOFF_XLCID3                             @02A 01469800
                   LCLA  &PLOFF_XVERSCOMP1                         @05A 01469900
                   LCLA  &PLOFF_XVERSCOMP2                         @05A 01470000
                   LCLA  &PLOFF_XVERSCOMP3                         @05A 01470100
                   LCLA  &PLOFF_XNEWVERS1                          @05A 01470200
                   LCLA  &PLOFF_XNEWVERS2                          @05A 01470300
                   LCLA  &PLOFF_XSTARTINDEX1                       @05A 01470400
                   LCLA  &PLOFF_XSTARTINDEX2                       @05A 01470500
                   LCLA  &PLOFF_XENDINDEX1                         @05A 01470600
                   LCLA  &PLOFF_XENDINDEX2                         @05A 01470700
                   LCLA  &PLOFF_XCMDFLAG4                          @05A 01470800
                   LCLA  &PLOFF_XCMDFLAG5                          @05A 01470900
                   LCLA  &PLOFF_XCMDFLAG6                          @05A 01471000
                   LCLA  &PLOFF_XCMDFLAG7                          @05A 01471100
                   LCLA  &PLOFF_XCMDFLAG8                          @05A 01471200
                   LCLA  &PLOFF_XCMDFLAG9                          @05A 01471300
                   LCLA  &PLOFF_XCMDFLAG10                         @05A 01471400
                   LCLA  &PLOFF_XCMDFLAG11                         @05A 01471500
.*                                                                      01471600
&PLOFF_XCCA        SETA  &PLOFF_XMCB_DATA+0                             01471700
&PLOFF_XCCB        SETA  &PLOFF_XMCB_DATA+1                             01471800
&PLOFF_XLCID1      SETA  &PLOFF_XMCB_DATA+4                             01471900
&PLOFF_XPROCESSID1 SETA  &PLOFF_XMCB_DATA+5                             01472000
&PLOFF_XCMDFLAG1   SETA  &PLOFF_XMCB_DATA+6                             01472100
&PLOFF_XLCID2      SETA  &PLOFF_XMCB_DATA+6                             01472200
&PLOFF_XDBS1       SETA  &PLOFF_XMCB_DATA+7                             01472300
&PLOFF_XUSERDATA1  SETA  &PLOFF_XMCB_DATA+8                             01472400
&PLOFF_XLCID3      SETA  &PLOFF_XMCB_DATA+8                        @02A 01472500
&PLOFF_XDBS2       SETA  &PLOFF_XMCB_DATA+9                             01472600
&PLOFF_XCMDFLAG2   SETA  &PLOFF_XMCB_DATA+32                            01472700
&PLOFF_XPROCESSID2 SETA  &PLOFF_XMCB_DATA+33                            01472800
&PLOFF_XDAS1       SETA  &PLOFF_XMCB_DATA+35                            01472900
&PLOFF_XDBS3       SETA  &PLOFF_XMCB_DATA+35                            01473000
&PLOFF_XUSERDATA2  SETA  &PLOFF_XMCB_DATA+56                            01473100
&PLOFF_XCMDFLAG3   SETA  &PLOFF_XMCB_DATA+64                            01473200
&PLOFF_XPROCESSID3 SETA  &PLOFF_XMCB_DATA+64                            01473300
&PLOFF_XRESTOKEN   SETA  &PLOFF_XMCB_DATA+64                       @L1A 01473400
&PLOFF_XDAS2       SETA  &PLOFF_XMCB_DATA+67                            01473500
&PLOFF_XVERSCOMP1  SETA  &PLOFF_XMCB_DATA+56                       @05A 01473600
&PLOFF_XVERSCOMP2  SETA  &PLOFF_XMCB_DATA+72                       @05A 01473700
&PLOFF_XVERSCOMP3  SETA  &PLOFF_XMCB_DATA+32                       @05A 01473800
&PLOFF_XNEWVERS1   SETA  &PLOFF_XMCB_DATA+64                       @05A 01473900
&PLOFF_XNEWVERS2   SETA  &PLOFF_XMCB_DATA+80                       @05A 01474000
&PLOFF_XSTARTINDEX1 SETA  &PLOFF_XMCB_DATA+4                       @05A 01474100
&PLOFF_XSTARTINDEX2 SETA  &PLOFF_XMCB_DATA+8                       @05A 01474200
&PLOFF_XENDINDEX1  SETA  &PLOFF_XMCB_DATA+6                        @05A 01474300
&PLOFF_XENDINDEX2  SETA  &PLOFF_XMCB_DATA+10                       @05A 01474400
&PLOFF_XCMDFLAG4   SETA  &PLOFF_XMCB_DATA+7                        @05A 01474500
&PLOFF_XCMDFLAG5   SETA  &PLOFF_XMCB_DATA+10                       @05A 01474600
&PLOFF_XCMDFLAG6   SETA  &PLOFF_XMCB_DATA+12                       @05A 01474700
&PLOFF_XCMDFLAG7   SETA  &PLOFF_XMCB_DATA+36                       @05A 01474800
&PLOFF_XCMDFLAG8   SETA  &PLOFF_XMCB_DATA+13                       @05A 01474900
&PLOFF_XCMDFLAG9   SETA  &PLOFF_XMCB_DATA+88                       @PMC 01475000
&PLOFF_XCMDFLAG10  SETA  &PLOFF_XMCB_DATA+72                       @05A 01475100
&PLOFF_XCMDFLAG11  SETA  &PLOFF_XMCB_DATA+48                       @05A 01475200
.*                                                                      01475300
.**  Answer area offsets                                             ** 01475400
.*                                                                      01475500
                   LCLC  &AAOFF_LEVEL                                   01475600
                   LCLC  &AAOFF_OFFSET                                  01475700
                   LCLC  &AAOFF_LENGTH                                  01475800
                   LCLC  &AAOFF_RETCODE                                 01475900
                   LCLC  &AAOFF_RSNCODE                                 01476000
.*                                                                      01476100
&AAOFF_LEVEL       SETC  '0'                                            01476200
&AAOFF_OFFSET      SETC  '4'                                            01476300
&AAOFF_LENGTH      SETC  '8'                                            01476400
&AAOFF_RETCODE     SETC  '12'                                           01476500
&AAOFF_RSNCODE     SETC  '16'                                           01476600
.*                                                                      01476700
.**  Answer area values                                              ** 01476800
.*                                                                      01476900
                   LCLC  &AAVAL_LEVEL                                   01477000
                   LCLC  &AAVAL_OFFSET                                  01477100
                   LCLC  &AAVAL_LENGTH                                  01477200
                   LCLC  &AAVAL_RETCODE                                 01477300
                   LCLC  &AAVAL_RSNCODE                                 01477400
.*                                                                      01477500
&AAVAL_LEVEL       SETC  '0'                                            01477600
&AAVAL_OFFSET      SETC  '12'                                           01477700
&AAVAL_LENGTH      SETC  '8'                                            01477800
&AAVAL_RETCODE     SETC  '12'                                           01477900
&AAVAL_RSNCODE     SETC  'X''0C13'''                                    01478000
.*                                                                      01478100
.*                                                                      01478200
.**------------------------------------------------------------------** 01478300
.**  Declares for macro variables                                    ** 01478400
.**                                                                  ** 01478500
.**  The following AMG-declared variables are also used in this      ** 01478600
.**  section:                                                        ** 01478700
.**                                                                  ** 01478800
.**    AMG "x" and "zx" variables corresponding to interface keys    ** 01478900
.**    ZCGPR                                                         ** 01479000
.**    ZCLNG                                                         ** 01479100
.**    ZCVAL                                                         ** 01479200
.**    ZMACRET                                                       ** 01479300
.**    ZNDX                                                          ** 01479400
.**    ZPLLEN                                                        ** 01479500
.**    ZPRM                                                          ** 01479600
.**    ZPRMLINE                                                      ** 01479700
.**    ZPRMNUM                                                       ** 01479800
.**    ZW                                                            ** 01479900
.**                                                                  ** 01480000
.**------------------------------------------------------------------** 01480100
.*                                                                      01480200
               LCLC  &CACHECMD                                          01480300
               LCLC  &CACHEOPCODE                                       01480400
               LCLC  &CACHECMDLEN                                       01480500
.*                                                                      01480600
.*                                                                      01480700
.**------------------------------------------------------------------** 01480800
.**  Start of code to fill in the parameter list                     ** 01480900
.**------------------------------------------------------------------** 01481000
.*                                                                      01481100
.**------------------------------------------------------------------** 01481200
.**  Initialize the answer area                                      ** 01481300
.**------------------------------------------------------------------** 01481400
.*                                                                      01481500
               AIF   ('&XANSAREA' EQ 'NO_ANSAREA'     OR               *01481600
                      '&XANSAREA' EQ '').SKIPINITANSAREA                01481700
               AIF   ('&SYSASCE'  EQ 'P').SKIPINITANSALET               01481800
         L     14,&PLOFF_XANSAREA_ALET.(,1)                             01481900
         SAR   14,14                                                    01482000
.SKIPINITANSALET ANOP ,                                                 01482100
         L     14,&PLOFF_XANSAREA.(,1)                                  01482200
         LA    15,&AAVAL_LEVEL.                                         01482300
         ST    15,&AAOFF_LEVEL.(,14)                                    01482400
         LA    15,&AAVAL_OFFSET.                                        01482500
         ST    15,&AAOFF_OFFSET.(,14)                                   01482600
         LA    15,&AAVAL_LENGTH.                                        01482700
         ST    15,&AAOFF_LENGTH.(,14)                                   01482800
         LA    15,&AAVAL_RETCODE.                                       01482900
         ST    15,&AAOFF_RETCODE.(,14)                                  01483000
         LA    15,&AAVAL_RSNCODE.                                       01483100
         ST    15,&AAOFF_RSNCODE.(,14)                                  01483200
.SKIPINITANSAREA ANOP ,                                                 01483300
.*                                                                3@02D 01483400
.*                                                                      01483500
.**------------------------------------------------------------------** 01483600
.**  Find the command code, opcode, and length                       ** 01483700
.**                                                                  ** 01483800
.**  The length is set to the maximum length required for the        ** 01483900
.**  specified command.  The command code and opcode are set from    ** 01484000
.**  the combination of keys specified on the invocation.            ** 01484100
.**                                                                  ** 01484200
.**------------------------------------------------------------------** 01484300
.*                                                                      01484400
               AIF   ('&XREQUEST' NE 'READ_DATA').CMDNOTRAR             01484500
.*                                                                      01484600
&CACHECMD      SETC  '&KCACHECMDRAR'                                    01484700
&CACHEOPCODE   SETC  '&KCACHEOPRAR'                                     01484800
&CACHECMDLEN   SETC  '&KCACHERARLEN'                                    01484900
               AGO   .CMDENDSELECT                                      01485000
.*                                                                      01485100
.CMDNOTRAR ANOP ,                                                       01485200
.*                                                                      01485300
               AIF   ('&XREQUEST' NE 'CASTOUT_DATA').CMDNOTRFCO         01485400
.*                                                                      01485500
&CACHECMD      SETC  '&KCACHECMDRFCO'                                   01485600
&CACHEOPCODE   SETC  '&KCACHEOPRFCO'                                    01485700
&CACHECMDLEN   SETC  '&KCACHERFCOLEN'                                   01485800
               AGO   .CMDENDSELECT                                      01485900
.*                                                                      01486000
.CMDNOTRFCO ANOP ,                                                      01486100
.*                                                                      01486200
               AIF   ('&XREQUEST' NE 'READ_DIRINFO'  AND               *01486300
                      '&XREQUEST' NE 'RESET_REFBIT').CMDNOTRD           01486400
.*                                                                      01486500
&CACHECMD      SETC  '&KCACHECMDRD'                                     01486600
&CACHEOPCODE   SETC  '&KCACHEOPRD'                                      01486700
&CACHECMDLEN   SETC  '&KCACHERDLEN'                                     01486800
               AGO   .CMDENDSELECT                                      01486900
.*                                                                      01487000
.CMDNOTRD ANOP ,                                                        01487100
.*                                                                      01487200
               AIF   ('&XREQUEST' NE 'READ_COCLASS').CMDNOTRCC          01487300
.*                                                                      01487400
&CACHECMD      SETC  '&KCACHECMDRCC'                                    01487500
&CACHEOPCODE   SETC  '&KCACHEOPRCC'                                     01487600
&CACHECMDLEN   SETC  '&KCACHERCCLEN'                                    01487700
               AGO   .CMDENDSELECT                                      01487800
.*                                                                      01487900
.CMDNOTRCC ANOP ,                                                       01488000
.*                                                                      01488100
               AIF   ('&XREQUEST' NE 'READ_COSTATS').CMDNOTRCCI         01488200
.*                                                                      01488300
&CACHECMD      SETC  '&KCACHECMDRCCI'                                   01488400
&CACHEOPCODE   SETC  '&KCACHEOPRCCI'                                    01488500
&CACHECMDLEN   SETC  '&KCACHERCCILEN'                                   01488600
               AGO   .CMDENDSELECT                                      01488700
.*                                                                      01488800
.CMDNOTRCCI ANOP ,                                                      01488900
.*                                                                      01489000
               AIF   ('&XREQUEST' NE 'WRITE_DATA').CMDNOTWRITE          01489100
.*                                                                      01489200
               AIF   ('&XWHENREG' NE 'YES').CMDWRITEWAR                 01489300
.*                                                                      01489400
&CACHECMD      SETC  '&KCACHECMDWWR'                                    01489500
&CACHEOPCODE   SETC  '&KCACHEOPWWR'                                     01489600
&CACHECMDLEN   SETC  '&KCACHEWWRLEN'                                    01489700
               AGO   .CMDWRITEADJCHK                                    01489800
.*                                                                      01489900
.CMDWRITEWAR ANOP ,                                                     01490000
.*                                                                      01490100
&CACHECMD      SETC  '&KCACHECMDWAR'                                    01490200
&CACHEOPCODE   SETC  '&KCACHEOPWAR'                                     01490300
&CACHECMDLEN   SETC  '&KCACHEWARLEN'                                    01490400
.*                                                                      01490500
.CMDWRITEADJCHK ANOP ,                                                  01490600
.*                                                                      01490700
               AIF   ('&XADJAREA' EQ 'NO_ADJAREA'    OR                *01490800
                      '&XADJAREA' EQ '').CMDWRITEEND               @P7C 01490900
.*                                                                      01491000
&CACHECMDLEN   SETC  '&KCACHEWRITEALEN'                                 01491100
.*                                                                      01491200
.CMDWRITEEND ANOP ,                                                     01491300
.*                                                                      01491400
               AGO   .CMDENDSELECT                                      01491500
.*                                                                      01491600
.CMDNOTWRITE ANOP ,                                                     01491700
.*                                                                      01491800
               AIF   ('&XREQUEST' NE 'PROCESS_REFLIST').CMDNOTPRL       01491900
.*                                                                      01492000
&CACHECMD      SETC  '&KCACHECMDPRL'                                    01492100
&CACHEOPCODE   SETC  '&KCACHEOPPRL'                                     01492200
&CACHECMDLEN   SETC  '&KCACHEPRLLEN'                                    01492300
               AGO   .CMDENDSELECT                                      01492400
.*                                                                      01492500
.CMDNOTPRL ANOP ,                                                       01492600
.*                                                                      01492700
               AIF   ('&XREQUEST' NE 'UNLOCK_CASTOUT').CMDNOTUCL        01492800
.*                                                                      01492900
&CACHECMD      SETC  '&KCACHECMDUCL'                                    01493000
&CACHEOPCODE   SETC  '&KCACHEOPUCL'                                     01493100
&CACHECMDLEN   SETC  '&KCACHEUCLLEN'                                    01493200
               AGO   .CMDENDSELECT                                      01493300
.*                                                                      01493400
.CMDNOTUCL ANOP ,                                                       01493500
.*                                                                      01493600
               AIF   ('&XREQUEST' NE 'DELETE_NAME').CMDNOTIN            01493700
.*                                                                      01493800
&CACHECMD      SETC  '&KCACHECMDIN'                                     01493900
&CACHEOPCODE   SETC  '&KCACHEOPIN'                                      01494000
&CACHECMDLEN   SETC  '&KCACHEINLEN'                                     01494100
               AGO   .CMDENDSELECT                                      01494200
.*                                                                      01494300
.CMDNOTIN ANOP ,                                                        01494400
.*                                                                      01494500
               AIF   ('&XREQUEST' NE 'CROSS_INVAL').CMDNOTICC           01494600
.*                                                                      01494700
&CACHECMD      SETC  '&KCACHECMDICC'                                    01494800
&CACHEOPCODE   SETC  '&KCACHEOPICC'                                     01494900
&CACHECMDLEN   SETC  '&KCACHEICCLEN'                                    01495000
               AGO   .CMDENDSELECT                                      01495100
.*                                                                      01495200
.CMDNOTICC ANOP ,                                                       01495300
.*                                                                      01495400
               AIF   ('&XREQUEST' NE 'SET_RECLVCTR').CMDNOTSRV          01495500
.*                                                                      01495600
&CACHECMD      SETC  '&KCACHECMDSRV'                                    01495700
&CACHEOPCODE   SETC  '&KCACHEOPSRV'                                     01495800
&CACHECMDLEN   SETC  '&KCACHESRVLEN'                                    01495900
               AGO   .CMDENDSELECT                                      01496000
.*                                                                      01496100
.CMDNOTSRV ANOP ,                                                       01496200
.*                                                                      01496300
               AIF   ('&XREQUEST' NE 'READ_STGSTATS').CMDNOTRSCI        01496400
.*                                                                      01496500
&CACHECMD      SETC  '&KCACHECMDRSCI'                                   01496600
&CACHEOPCODE   SETC  '&KCACHEOPRSCI'                                    01496700
&CACHECMDLEN   SETC  '&KCACHERSCILEN'                                   01496800
               AGO   .CMDENDSELECT                                      01496900
.*                                                                      01497000
.CMDNOTRSCI ANOP ,                                                      01497100
.*                                                                      01497200
               AIF   ('&XREQUEST' NE 'REG_NAMELIST').CMDNOTRNL     @02A 01497300
.*                                                                      01497400
&CACHECMD      SETC  '&KCACHECMDRNL'                               @02A 01497500
&CACHEOPCODE   SETC  '&KCACHEOPRNL'                                @02A 01497600
&CACHECMDLEN   SETC  '&KCACHERNLLEN'                               @02A 01497700
               AGO   .CMDENDSELECT                                 @02A 01497800
.*                                                                      01497900
.CMDNOTRNL ANOP ,                                                  @02A 01498000
.*                                                                      01498100
     AIF   ('&XREQUEST' NE 'UNLOCK_CO_NAME').CMDNOTUCLE            @04A 01498200
.*                                                                      01498300
&CACHECMD      SETC  '&KCACHECMDUCLE'                              @04A 01498400
&CACHEOPCODE   SETC  '&KCACHEOPUCLE'                               @04A 01498500
&CACHECMDLEN   SETC  '&KCACHEUCLELEN'                              @04A 01498600
               AGO   .CMDENDSELECT                                 @04A 01498700
.*                                                                      01498800
.CMDNOTUCLE ANOP ,                                                 @04A 01498900
.*                                                                      01499000
     AIF   ('&XREQUEST' NE 'DELETE_NAMELIST').CMDNOTINL            @05A 01499100
.*                                                                      01499200
&CACHECMD      SETC  '&KCACHECMDINL'                               @05A 01499300
&CACHEOPCODE   SETC  '&KCACHEOPINL'                                @05A 01499400
&CACHECMDLEN   SETC  '&KCACHEINLLEN'                               @05A 01499500
               AGO   .CMDENDSELECT                                 @05A 01499600
.*                                                                      01499700
.CMDNOTINL  ANOP ,                                                 @05A 01499800
.*                                                                      01499900
.CMDENDSELECT ANOP ,                                                    01500000
.*                                                                      01500100
.*                                                                      01500200
.**------------------------------------------------------------------** 01500300
.**  Fill in shell layer parameter fields                            ** 01500400
.**------------------------------------------------------------------** 01500500
.*                                                                      01500600
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01500700
.**  Set the command code                                            ** 01500800
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01500900
.*                                                                      01501000
.*   _xCmdCode                                                          01501100
         MVI   &PLOFF_XCMDCODE.(1),&CACHECMD                            01501200
.*                                                                      01501300
.*                                                                      01501400
.**------------------------------------------------------------------** 01501500
.**  Fill in MOB parameter fields                                    ** 01501600
.**------------------------------------------------------------------** 01501700
.*                                                                      01501800
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01501900
.**  Set the command data length                                     ** 01502000
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01502100
.*                                                                      01502200
         LA    14,&CACHECMDLEN                                          01502300
.*                                                                      01502400
.*   _xCmdLen                                                           01502500
         STH   14,&PLOFF_XCMDLEN.(,1)                                   01502600
.*                                                                      01502700
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01502800
.**  Set the BufNum value                                            ** 01502900
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01503000
.*                                                                      01503100
         AIF   ('&XBUFFER' EQ '').SKIPSETBUFNUM1                   @P9A 01503200
.*                                                                      01503300
         AIF   ('&XREQUEST' NE 'UNLOCK_CASTOUT'   AND                  *01503400
                '&XREQUEST' NE 'READ_COCLASS'     AND                  *01503500
                '&XREQUEST' NE 'READ_DIRINFO'     AND                  *01503600
                '&XREQUEST' NE 'READ_COSTATS'     AND                  *01503700
                '&XREQUEST' NE 'PROCESS_REFLIST').SKIPSETBUFNUM2   @P9A 01503800
.*                                                                      01503900
.*   _xBufNum                                                           01504000
         L     14,&PLOFF_XBUFSIZE.(0,1)                            @P9A 01504100
         SRL   14,12                                               @P9A 01504200
         STC   14,&PLOFF_XBUFNUM.(0,1)                             @P9A 01504300
.*                                                                      01504400
.SKIPSETBUFNUM2 ANOP ,                                             @P9A 01504500
.SKIPSETBUFNUM1 ANOP ,                                             @P9A 01504600
.*                                                                      01504700
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01504800
.**  Set the BufIncrNum value                                        ** 01504900
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01505000
.*                                                                      01505100
         AIF   ('&XREQUEST' NE 'UNLOCK_CASTOUT'   AND                  *01505200
                '&XREQUEST' NE 'READ_COCLASS'     AND                  *01505300
                '&XREQUEST' NE 'READ_DIRINFO'     AND                  *01505400
                '&XREQUEST' NE 'READ_COSTATS'     AND                  *01505500
                '&XREQUEST' NE 'PROCESS_REFLIST').SKIPSETBUFINUM   @P9C 01505600
.*                                                                      01505700
.*   _xBufIncrNum                                                       01505800
         MVI   &PLOFF_XBUFINCRNUM.(1),16                                01505900
.*                                                                      01506000
.SKIPSETBUFINUM ANOP ,                                             @P9C 01506100
.*                                                                      01506200
.*                                                                      01506300
.**------------------------------------------------------------------** 01506400
.**  Fill in MCB parameter fields                                    ** 01506500
.**------------------------------------------------------------------** 01506600
.*                                                                      01506700
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01506800
.**  Set the command opcode                                          ** 01506900
.**  - The command opcode is stored in two pieces to allow the       ** 01507000
.**    MVI instruction to be used for efficiency.                    ** 01507100
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01507200
.*                                                                      01507300
.*   _xCcA                                                              01507400
         MVI   &PLOFF_XCCA.(1),&KCACHECMDTYPE                           01507500
.*                                                                      01507600
.*   _xCcB                                                              01507700
         MVI   &PLOFF_XCCB.(1),&CACHEOPCODE                             01507800
.*                                                                      01507900
.*                                                                      01508000
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01508100
.**  Set DAS values                                                  ** 01508200
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01508300
         AIF   ('&XREQUEST' NE 'WRITE_DATA').SKIPSETDAS                 01508400
.*                                                                      01508500
.* Handle the ElemNum specification.                                    01508600
.* There are four ways it can be specified:                             01508700
.*  1) ELEMNUM=(reg)       --> "reg" contains the address of the value  01508800
.*  2) ELEMNUM=offset(reg) --> explicit basing specification            01508900
.*  3) ELEMNUM=name        --> variable name                            01509000
.*  4) ELEMNUM=value       --> hard-coded value                         01509100
.*                                                                      01509200
&ZLOP    SETC  'MVC'                                               @PHA 01509300
&ZLV     SETC  '(1,1)'                                             @PHA 01509400
         AIF   ('&XELEMNUM'(1,1) NE '(').PLELEMNUMNOTREG           @PHA 01509500
&ZCGPR   SETC  '0('.'&XELEMNUM'(2,K'&XELEMNUM-2).')'               @PHA 01509600
         AGO   .PLENDELEMNUMSETUP                                  @PHA 01509700
.PLELEMNUMNOTREG ANOP ,                                            @PHA 01509800
&ZCGPR   SETC  '&XELEMNUM'                                         @PHA 01509900
&ZC      SETC  '&XELEMNUM'(1,1)                                    @PHA 01510000
         AIF   (T'&ZC NE 'N').PLENDELEMNUMSETUP                    @PHA 01510100
&ZC      SETC  '&XELEMNUM'                                         @PHA 01510200
         AIF   ('&ZC'(K'&ZC,1) EQ ')').PLENDELEMNUMSETUP           @PHA 01510300
&ZLOP    SETC  'MVI'                                               @PHA 01510400
&ZLV     SETC  '(1)'                                               @PHA 01510500
.PLENDELEMNUMSETUP ANOP ,                                          @PHA 01510600
.*                                                                      01510700
         AIF   ('&XWHENREG' NE 'YES').SETDASWAR                         01510800
         &ZLOP   &PLOFF_XDAS1.&ZLV.,&ZCGPR                         @PHC 01510900
         AGO   .ENDSETDAS                                               01511000
.SETDASWAR  ANOP ,                                                      01511100
         &ZLOP   &PLOFF_XDAS2.&ZLV.,&ZCGPR                         @PHC 01511200
.ENDSETDAS  ANOP ,                                                      01511300
.SKIPSETDAS ANOP ,                                                      01511400
.*                                                                      01511500
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01511600
.**  Set DBS values                                                  ** 01511700
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01511800
         AIF   ('&XREQUEST' NE 'READ_DIRINFO').SKIPSETDBS1              01511900
         MVC   &PLOFF_XDBS1.(1,1),&PLOFF_XBUFNUM.(1)                    01512000
.SKIPSETDBS1   ANOP ,                                                   01512100
         AIF   ('&XREQUEST' NE 'READ_COSTATS').SKIPSETDBS2              01512200
         MVC   &PLOFF_XDBS2.(1,1),&PLOFF_XBUFNUM.(1)                    01512300
.SKIPSETDBS2   ANOP ,                                                   01512400
         AIF   ('&XREQUEST' NE 'READ_COCLASS').SKIPSETDBS3              01512500
         MVC   &PLOFF_XDBS3.(1,1),&PLOFF_XBUFNUM.(1)                    01512600
.SKIPSETDBS3   ANOP ,                                                   01512700
.*                                                                      01512800
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01512900
.**  Set LCID values                                                 ** 01513000
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01513100
         AIF   ('&XREQUEST' NE 'READ_DATA'       AND                   *01513200
                '&XREQUEST' NE 'CASTOUT_DATA'    AND                   *01513300
                '&XREQUEST' NE 'WRITE_DATA'      AND                   *01513400
                '&XREQUEST' NE 'PROCESS_REFLIST' AND                   *01513500
                '&XREQUEST' NE 'UNLOCK_CO_NAME'  AND                   *01513600
                '&XREQUEST' NE 'UNLOCK_CASTOUT').SKIPSETLCID1      @04C 01513700
         MVC   &PLOFF_XLCID1.(1,1),&PLOFF_XCONID.(1)                    01513800
.SKIPSETLCID1  ANOP ,                                                   01513900
         AIF   ('&XREQUEST' NE 'CROSS_INVAL').SKIPSETLCID2              01514000
         MVC   &PLOFF_XLCID2.(1,1),&PLOFF_XCONID.(1)                    01514100
.SKIPSETLCID2  ANOP ,                                                   01514200
         AIF   ('&XREQUEST' NE 'REG_NAMELIST').SKIPSETLCID3        @02A 01514300
         MVC   &PLOFF_XLCID3.(1,1),&PLOFF_XCONID.(1)               @02A 01514400
.SKIPSETLCID3  ANOP ,                                              @02A 01514500
.*                                                                      01514600
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01514700
.**  Set restart token from extended restart token                @L1A* 01514800
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01514900
         AIF   ('&XREQUEST' NE 'READ_DIRINFO'    AND                   *01515000
                '&XREQUEST' NE 'READ_COCLASS'    AND                   *01515100
                '&XREQUEST' NE 'CROSS_INVAL'     AND                   *01515200
                '&XREQUEST' NE 'DELETE_NAME'     AND                   *01515300
                '&XREQUEST' NE 'RESET_REFBIT').SKIPSETEXTRES1      @L1A 01515400
         AIF   ('&XEXTRESTOKEN' EQ '').SKIPSETEXTRES1              @L1A 01515500
.*   _xRestoken, _xExtRestokenTkn                                       01515600
         MVC   &PLOFF_XRESTOKEN.(8,1),&PLOFF_XEXTRESTOKENTKN.(1)   @L1A 01515700
.SKIPSETEXTRES1 ANOP ,                                             @L1A 01515800
.*                                                                      01515900
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01516000
.**  Set user data values                                            ** 01516100
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01516200
         AIF   ('&XUSERDATA' EQ '').SKIPSETUSERDATA                     01516300
         AIF   ('XWHENREG'   NE 'YES').SKIPSETUSERDATA1                 01516400
         AIF   ('&XUSERDATA'(1,1) EQ '(').USERDATA1REG             @PQA 01516500
         MVC   &PLOFF_XUSERDATA1.(8,1),&XUSERDATA                       01516600
         AGO   .ENDSETUSERDATA                                          01516700
.USERDATA1REG     ANOP ,                                           @PRA 01516800
         MVC   &PLOFF_XUSERDATA1.(8,1),0&XUSERDATA                 @PRC 01516900
         AGO   .ENDSETUSERDATA                                     @PQA 01517000
.SKIPSETUSERDATA1 ANOP ,                                                01517100
         AIF   ('&XUSERDATA'(1,1) EQ '(').USERDATA2REG             @PQA 01517200
         MVC   &PLOFF_XUSERDATA2.(8,1),&XUSERDATA                       01517300
         AGO   .ENDSETUSERDATA                                     @PQA 01517400
.USERDATA2REG     ANOP ,                                           @PRA 01517500
         MVC   &PLOFF_XUSERDATA2.(8,1),0&XUSERDATA                 @PRC 01517600
.ENDSETUSERDATA   ANOP ,                                                01517700
.SKIPSETUSERDATA  ANOP ,                                                01517800
.*                                                                      01517900
.*                                                                      01518000
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01518100
.**  Set CmdFlag1 values                                             ** 01518200
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01518300
.*                                                                      01518400
&ZW      SETC  ''                                                       01518500
&ZCLNG   SETC  ''                                                       01518600
.*                                                                      01518700
         AIF   ('&XREQUEST' NE 'READ_DATA').SKIPCF1AREAD                01518800
         AIF   ('&XASSIGN' NE 'YES').SETCF1AREADASSIGNNO                01518900
&ZW      SETC  '&ZW.1'                                                  01519000
&ZCLNG   SETC  'YES'                                                    01519100
         AGO   .ENDSETCF1AREAD                                          01519200
.SETCF1AREADASSIGNNO ANOP ,                                             01519300
&ZW      SETC  '&ZW.0'                                                  01519400
.ENDSETCF1AREAD ANOP ,                                                  01519500
         AGO   .ENDSETCMDFLAG1A                                         01519600
.*                                                                      01519700
.SKIPCF1AREAD ANOP ,                                                    01519800
         AIF   ('&XREQUEST' NE 'CASTOUT_DATA').SKIPCF1ACASTOUT          01519900
         AIF   ('&XREGUSER' NE 'YES').SETCF1ACOREGUSERNO                01520000
&ZW      SETC  '&ZW.1'                                                  01520100
&ZCLNG   SETC  'YES'                                                    01520200
         AGO   .ENDSETCF1ACASTOUT                                       01520300
.SETCF1ACOREGUSERNO ANOP ,                                              01520400
&ZW      SETC  '&ZW.0'                                                  01520500
.ENDSETCF1ACASTOUT ANOP ,                                               01520600
         AGO   .ENDSETCMDFLAG1A                                         01520700
.*                                                                      01520800
.SKIPCF1ACASTOUT ANOP ,                                            @P7C 01520900
         AIF   ('&XREQUEST' NE 'READ_DIRINFO'     AND                  *01521000
                '&XREQUEST' NE 'RESET_REFBIT').SKIPCF1ARD               01521100
         AIF   ('&XCRITERIA' NE 'CHANGED').SETCF1ARDUNCHANGED           01521200
&ZW      SETC  '&ZW.1'                                                  01521300
&ZCLNG   SETC  'YES'                                                    01521400
         AGO   .ENDSETCF1ARD                                            01521500
.SETCF1ARDUNCHANGED ANOP ,                                              01521600
&ZW      SETC  '&ZW.0'                                                  01521700
.ENDSETCF1ARD ANOP ,                                                    01521800
         AGO   .ENDSETCMDFLAG1A                                         01521900
.*                                                                      01522000
.SKIPCF1ARD ANOP ,                                                      01522100
&ZW      SETC  '&ZW.0'                                                  01522200
.ENDSETCMDFLAG1A ANOP ,                                                 01522300
.*                                                                      01522400
         AIF   ('&XREQUEST' NE 'READ_DATA'        AND                  *01522500
                '&XREQUEST' NE 'CASTOUT_DATA').SKIPCF1BREAD             01522600
         AIF   ('&XOLDNAME' EQ '').SETCF1BREADOLDNM                     01522700
&ZW      SETC  '&ZW.1'                                                  01522800
&ZCLNG   SETC  'YES'                                                    01522900
         AGO   .ENDSETCF1BREAD                                          01523000
.SETCF1BREADOLDNM ANOP ,                                                01523100
&ZW      SETC  '&ZW.0'                                                  01523200
.ENDSETCF1BREAD ANOP ,                                                  01523300
.*                                                                @04D  01523400
         AIF   ('&XREQUEST' NE 'READ_DATA').SKIPCF1CREAD          @04A  01523500
         AIF   ('&XRETURNDATA' NE 'NO').SETCF1CRETURNDATA         @04A  01523600
&ZW      SETC  '&ZW.1'                                            @04A  01523700
&ZCLNG   SETC  'YES'                                              @04A  01523800
         AGO   .ENDSETCMDFLAG1C                                   @04A  01523900
.SETCF1CRETURNDATA ANOP ,                                         @04A  01524000
&ZW      SETC  '&ZW.0'                                            @04A  01524100
         AGO   .ENDSETCMDFLAG1C                                   @04A  01524200
.*                                                                      01524300
.SKIPCF1CREAD ANOP ,                                              @04A  01524400
&ZW      SETC  '&ZW.0'                                                  01524500
         AGO   .ENDSETCMDFLAG1C                                   @05C  01524600
.SKIPCF1BREAD ANOP ,                                                    01524700
         AIF   ('&XREQUEST' NE 'READ_DIRINFO').SKIPCF1BRD               01524800
         AIF   ('&XDIRINFOFMT' EQ 'NAMELIST').SETCF1BRDDIR              01524900
&ZW      SETC  '&ZW.01'                                           @01C  01525000
&ZCLNG   SETC  'YES'                                                    01525100
         AGO   .ENDSETCF1BRD                                            01525200
.SETCF1BRDDIR ANOP ,                                                    01525300
&ZW      SETC  '&ZW.10'                                           @01C  01525400
&ZCLNG   SETC  'YES'                                                    01525500
.ENDSETCF1BRD ANOP ,                                                    01525600
         AGO   .ENDSETCMDFLAG1B                                         01525700
.*                                                                      01525800
.SKIPCF1BRD ANOP ,                                                      01525900
         AIF   ('&XREQUEST' NE 'RESET_REFBIT').SKIPCF1BRESET            01526000
&ZW      SETC  '&ZW.11'                                                 01526100
&ZCLNG   SETC  'YES'                                                    01526200
         AGO   .ENDSETCMDFLAG1B                                         01526300
.*                                                                      01526400
.SKIPCF1BRESET ANOP ,                                                   01526500
&ZW      SETC  '&ZW.00'                                                 01526600
.ENDSETCMDFLAG1B ANOP ,                                                 01526700
.ENDSETCMDFLAG1C ANOP ,                                           @04A  01526800
.*                                                                      01526900
         AIF   ('&XREQUEST' NE 'READ_DATA').SKIPCF1DREAD          @05A  01527000
         AIF   ('&XREGUSER' NE 'NO').SKIPCF1DSREG                 @05A  01527100
&ZW      SETC  '&ZW.1'                                            @05A  01527200
&ZCLNG   SETC  'YES'                                              @05A  01527300
         AGO   .ENDSETCMDFLAG1D                                   @05A  01527400
.SKIPCF1DSREG ANOP ,                                              @05A  01527500
.SKIPCF1DREAD ANOP ,                                              @05A  01527600
&ZW      SETC  '&ZW.0'                                            @05A  01527700
.*                                                                      01527800
.ENDSETCMDFLAG1D ANOP ,                                           @05A  01527900
&ZW      SETC  '&ZW.0000'                                         @PKC  01528000
&ZW      SETC  'B''&ZW.'''                                              01528100
         AIF   ('&ZCLNG' NE 'YES').PLNOCMDFLGS1                         01528200
.*   _xCmdFlag1                                                         01528300
         OI    &PLOFF_XCMDFLAG1.(1),&ZW                                 01528400
.PLNOCMDFLGS1 ANOP ,                                                    01528500
.*                                                                      01528600
.*                                                                      01528700
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01528800
.**  Set parity value when the default was not taken                 ** 01528900
.**                                                                  ** 01529000
.**  Note that the parity is in the same byte as the                 ** 01529100
.**  CmdFlag2/3.  Because of this the parity bits should be stored   ** 01529200
.**  before the other bits in the flag byte are set.                 ** 01529300
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01529400
.*                                                                      01529500
         AIF   ('&XCHANGED' NE 'YES'            OR                     *01529600
                '&XPARITY' EQ '00110000'        OR                     *01529700
                '&XPARITY' EQ '00010000'        OR                     *01529800
                '&XPARITY' EQ '00000000').SKIPSETPARITY            @PHC 01529900
.*                                                                      01530000
.* Handle the Parity specification.                                     01530100
.* There are five ways it can be specified:                             01530200
.*  1) PARITY=(reg)       --> "reg" contains the address of the value   01530300
.*  2) PARITY=offset(reg) --> explicit basing specification             01530400
.*  3) PARITY=name        --> variable name                             01530500
.*  4) PARITY=value       --> hard-coded (assumed decimal) value        01530600
.*  5) PARITY=value       --> hard-coded binary value (handled lower)   01530700
.*                                                                      01530800
&ZLOP    SETC  'MVC'                                               @PHA 01530900
&ZLV     SETC  '(1,1)'                                             @PHA 01531000
         AIF   ('&XPARITY'(1,1) NE '(').PLPARITYNOTREG             @PHA 01531100
&ZCGPR   SETC  '0('.'&XPARITY'(2,K'&XPARITY-2).')'                 @PHA 01531200
         AGO   .PLENDPARITYSETUP                                   @PHA 01531300
.PLPARITYNOTREG ANOP ,                                             @PHA 01531400
&ZCGPR   SETC  '&XPARITY'                                          @PHA 01531500
&ZC      SETC  '&XPARITY'(1,1)                                     @PHA 01531600
         AIF   (T'&ZC NE 'N').PLENDPARITYSETUP                     @PHA 01531700
&ZC      SETC  '&XPARITY'                                          @PHA 01531800
         AIF   ('&ZC'(K'&ZC,1) EQ ')').PLENDPARITYSETUP            @PHA 01531900
&ZLOP    SETC  'MVI'                                               @PHA 01532000
&ZLV     SETC  '(1)'                                               @PHA 01532100
.PLENDPARITYSETUP ANOP ,                                           @PHA 01532200
.*                                                                      01532300
         AIF   ('&XWHENREG' NE 'YES').SETPARITY3                        01532400
         &ZLOP.   &PLOFF_XCMDFLAG2.&ZLV.,&ZCGPR                    @PHC 01532500
         NI    &PLOFF_XCMDFLAG2.(1),B'00110000'                         01532600
         AGO   .ENDSETPARITY                                            01532700
.SETPARITY3 ANOP ,                                                      01532800
         &ZLOP.   &PLOFF_XCMDFLAG3.&ZLV.,&ZCGPR                    @PHC 01532900
         NI    &PLOFF_XCMDFLAG3.(1),B'00110000'                         01533000
.ENDSETPARITY ANOP ,                                                    01533100
.SKIPSETPARITY ANOP ,                                                   01533200
.*                                                                      01533300
.*                                                                      01533400
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01533500
.**  Set CmdFlag2/3 values                                           ** 01533600
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01533700
.*                                                                      01533800
&ZW      SETC  ''                                                       01533900
&ZCLNG   SETC  ''                                                       01534000
.*                                                                      01534100
         AIF   ('&XREQUEST' NE 'WRITE_DATA').SKIPCF23WRITE              01534200
.*                                                                      01534300
         AIF   ('&XCHANGED' NE 'YES').CF23CHANGEDNO                     01534400
&ZW      SETC  '&ZW.1'                                                  01534500
&ZCLNG   SETC  'YES'                                                    01534600
         AGO   .CF23ENDCHANGED                                          01534700
.CF23CHANGEDNO ANOP ,                                                   01534800
&ZW      SETC  '&ZW.0'                                                  01534900
.CF23ENDCHANGED ANOP ,                                                  01535000
.*                                                                      01535100
         AIF   ('&XWHENREG' NE 'YES').CF23WHENREGNO                @02A 01535200
         AIF   ('&XVECTORINDEX' EQ '' OR                               *01535300
                '&XVECTORINDEX' EQ 'NO_VECTORINDEX').CF23NOVECTORINDEX  01535400
.*                                                                 @02A 01535500
&ZW      SETC  '&ZW.1'                                             @02A 01535600
&ZCLNG   SETC  'YES'                                               @02A 01535700
         AGO   .CF23ENDVECTORINDEX                                 @02A 01535800
.CF23NOVECTORINDEX ANOP ,                                          @02A 01535900
&ZW      SETC  '&ZW.0'                                             @02A 01536000
         AGO   .CF23ENDVECTORINDEX                                 @02A 01536100
.*                                                                 @02A 01536200
.CF23WHENREGNO ANOP ,                                              @02A 01536300
         AIF   ('&XOLDNAME' EQ '').CF23NOOLDNAME                        01536400
&ZW      SETC  '&ZW.1'                                                  01536500
&ZCLNG   SETC  'YES'                                                    01536600
         AGO   .CF23ENDOLDNAME                                          01536700
.CF23NOOLDNAME ANOP ,                                                   01536800
&ZW      SETC  '&ZW.0'                                                  01536900
.CF23ENDOLDNAME ANOP ,                                                  01537000
.*                                                                      01537100
.CF23ENDVECTORINDEX ANOP ,                                         @02A 01537200
.*                                                                      01537300
         AIF   ('&XCHANGED' NE 'YES').CF23SKIPPARITY               @PHC 01537400
         AIF    ('&XPARITY' NE '00110000').CF23SKIPPARITY11        @PHA 01537500
&ZW      SETC  '&ZW.11'                                                 01537600
&ZCLNG   SETC  'YES'                                                    01537700
         AGO   .CF23ENDPARITY                                           01537800
.CF23SKIPPARITY11 ANOP ,                                           @PHA 01537900
         AIF    ('&XPARITY' NE '00010000').CF23SKIPPARITY          @PHA 01538000
&ZW      SETC  '&ZW.01'                                            @PHA 01538100
&ZCLNG   SETC  'YES'                                               @PHA 01538200
         AGO   .CF23ENDPARITY                                      @PHA 01538300
.CF23SKIPPARITY ANOP ,                                                  01538400
&ZW      SETC  '&ZW.00'                                                 01538500
.CF23ENDPARITY ANOP ,                                                   01538600
.*                                                                      01538700
         AIF   ('&XGETCOLOCK' NE 'YES').CF23NOGETCOLCK             @D3A 01538800
&ZW      SETC  '&ZW.1'                                             @D3A 01538900
&ZCLNG   SETC  'YES'                                               @D3A 01539000
         AGO   .CF23ENDGETCOLCK                                    @D3A 01539100
.CF23NOGETCOLCK ANOP ,                                             @D3A 01539200
&ZW      SETC  '&ZW.0'                                             @D3A 01539300
.CF23ENDGETCOLCK ANOP ,                                            @D3A 01539400
.*                                                                      01539500
         AIF   ('&XCROSSINVAL' NE 'YES').CF23NOCROSSINVAL          @D3A 01539600
&ZW      SETC  '&ZW.1'                                             @D3A 01539700
&ZCLNG   SETC  'YES'                                               @D3A 01539800
         AGO   .CF23ENDCROSSINVAL                                  @D3A 01539900
.CF23NOCROSSINVAL ANOP ,                                           @D3A 01540000
&ZW      SETC  '&ZW.0'                                             @D3A 01540100
.CF23ENDCROSSINVAL ANOP ,                                          @D3A 01540200
.*                                                                      01540300
         AGO   .ENDCF23REQ                                              01540400
.SKIPCF23WRITE ANOP ,                                                   01540500
&ZW      SETC  '&ZW.000000'                                        @D3C 01540600
.ENDCF23REQ ANOP ,                                                      01540700
.*                                                                      01540800
&ZW      SETC  '&ZW.00'                                            @D3C 01540900
&ZW      SETC  'B''&ZW.'''                                              01541000
         AIF   ('&ZCLNG' NE 'YES').PLNOCMDFLGS23                        01541100
         AIF   ('&XWHENREG' NE 'YES').STORECF23WAR                      01541200
.*   _xCmdFlag2                                                         01541300
         OI    &PLOFF_XCMDFLAG2.(1),&ZW                                 01541400
         AGO   .ENDSTORECF23                                            01541500
.STORECF23WAR   ANOP ,                                                  01541600
.*   _xCmdFlag3                                                         01541700
         OI    &PLOFF_XCMDFLAG3.(1),&ZW                                 01541800
.ENDSTORECF23  ANOP ,                                                   01541900
.PLNOCMDFLGS23 ANOP ,                                                   01542000
.*                                                                      01542100
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01542200
.**  Set CmdFlag4/6 values                                      @05A ** 01542300
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01542400
.*                                                                      01542500
&ZW      SETC  ''                                                  @05A 01542600
&ZCLNG   SETC  ''                                                  @05A 01542700
.*                                                                      01542800
         AIF   ('&XREQUEST' NE 'DELETE_NAME'     AND                   *01542900
                '&XREQUEST' NE 'DELETE_NAMELIST').PLNOCMDFLGS46    @05A 01543000
         AIF   ('&XDELETETYPE' NE 'ANYDATA').CF46NOTANYDATA        @05A 01543100
&ZW      SETC  '&ZW.11'                                            @05A 01543200
&ZCLNG   SETC  'YES'                                               @05A 01543300
         AGO   .CF46ITYPDONE                                       @05A 01543400
.CF46NOTANYDATA   ANOP ,                                           @05A 01543500
         AIF   ('&XDELETETYPE' NE 'CHDATA').CF46NOTCHDATA          @05A 01543600
&ZW      SETC  '&ZW.10'                                            @05A 01543700
&ZCLNG   SETC  'YES'                                               @05A 01543800
         AGO   .CF46ITYPDONE                                       @05A 01543900
.CF46NOTCHDATA    ANOP ,                                           @05A 01544000
         AIF   ('&XDELETETYPE' NE 'UNCHDATA').CF46NOTUNCHDATA      @05A 01544100
&ZW      SETC  '&ZW.01'                                            @05A 01544200
&ZCLNG   SETC  'YES'                                               @05A 01544300
         AGO   .CF46ITYPDONE                                       @05A 01544400
.CF46NOTUNCHDATA  ANOP ,                                           @05A 01544500
&ZW      SETC  '&ZW.00'                                            @05A 01544600
.CF46ITYPDONE     ANOP ,                                           @05A 01544700
         AIF   ('&XREQUEST' NE 'DELETE_NAMELIST' OR                    *01544800
                '&XERRORACTION' NE 'TERMINATE').CF46NOTTERM        @05A 01544900
&ZW      SETC  '&ZW.1'                                             @05A 01545000
&ZCLNG   SETC  'YES'                                               @05A 01545100
         AGO   .CF46HICDONE                                        @05A 01545200
.CF46NOTTERM      ANOP ,                                           @05A 01545300
&ZW      SETC  '&ZW.0'                                             @05A 01545400
.CF46HICDONE      ANOP ,                                           @05A 01545500
&ZW      SETC  '&ZW.00000'                                         @05A 01545600
&ZW      SETC  'B''&ZW.'''                                         @05A 01545700
         AIF   ('&ZCLNG' NE 'YES').PLNOCMDFLGS46                   @05A 01545800
         AIF   ('&XREQUEST' NE 'DELETE_NAME').CF46WRITEINL         @05A 01545900
.*   _xCmdFlag4                                                    @05A 01546000
         OI    &PLOFF_XCMDFLAG4.(1),&ZW                            @05A 01546100
         AGO   .CF46WRITTEN                                        @05A 01546200
.CF46WRITEINL     ANOP ,                                           @05A 01546300
.*   _xCmdFlag6                                                    @05A 01546400
         OI    &PLOFF_XCMDFLAG6.(1),&ZW                            @05A 01546500
.CF46WRITTEN   ANOP ,                                              @05A 01546600
.PLNOCMDFLGS46 ANOP ,                                              @05A 01546700
.*                                                                      01546800
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01546900
.**  Set CmdFlag5 values                                        @05A ** 01547000
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01547100
.*                                                                      01547200
&ZW      SETC  ''                                                  @05A 01547300
&ZCLNG   SETC  ''                                                  @05A 01547400
.*                                                                      01547500
         AIF   ('&XREQUEST' NE 'READ_COSTATS').PLNOCMDFLG5         @05A 01547600
         AIF   ('&XCOSTATSFMT' NE 'COSTATSLIST').CF5NOSTATS        @05A 01547700
&ZW      SETC  '&ZW.1'                                             @05A 01547800
&ZCLNG   SETC  'YES'                                               @05A 01547900
         AGO   .CF5FMTDONE                                         @05A 01548000
.CF5NOSTATS      ANOP ,                                            @05A 01548100
&ZW      SETC  '&ZW.0'                                             @05A 01548200
.CF5FMTDONE       ANOP ,                                           @05A 01548300
&ZW      SETC  '&ZW.0000000'                                       @05A 01548400
&ZW      SETC  'B''&ZW.'''                                         @05A 01548500
         AIF   ('&ZCLNG' NE 'YES').PLNOCMDFLG5                     @05A 01548600
.*   _xCmdFlag5                                                    @05A 01548700
         OI    &PLOFF_XCMDFLAG5.(1),&ZW                            @05A 01548800
.PLNOCMDFLG5   ANOP ,                                              @05A 01548900
.*                                                                      01549000
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01549100
.**  Set CmdFlag7 values                                        @05A ** 01549200
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01549300
.*                                                                      01549400
&ZW      SETC  ''                                                  @05A 01549500
&ZCLNG   SETC  ''                                                  @05A 01549600
.*                                                                      01549700
         AIF   ('&XREQUEST' NE 'READ_COCLASS').PLNOCMDFLG7         @05A 01549800
         AIF   ('&XDIRINFOFMT' NE 'DIRENTRYLIST').CF7NODEIB        @05A 01549900
&ZW      SETC  '&ZW.1'                                             @05A 01550000
&ZCLNG   SETC  'YES'                                               @05A 01550100
         AGO   .CF7FMTDONE                                         @05A 01550200
.CF7NODEIB        ANOP ,                                           @05A 01550300
&ZW      SETC  '&ZW.0'                                             @05A 01550400
.CF7FMTDONE       ANOP ,                                           @05A 01550500
&ZW      SETC  '&ZW.0000000'                                       @05A 01550600
&ZW      SETC  'B''&ZW.'''                                         @05A 01550700
         AIF   ('&ZCLNG' NE 'YES').PLNOCMDFLG7                     @05A 01550800
.*   _xCmdFlag7                                                    @05A 01550900
         OI    &PLOFF_XCMDFLAG7.(1),&ZW                            @05A 01551000
.PLNOCMDFLG7   ANOP ,                                              @05A 01551100
.*                                                                      01551200
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01551300
.**  Set CmdFlag8/9/10/11 values                                @05A ** 01551400
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01551500
.*                                                                      01551600
&ZW      SETC  ''                                                  @05A 01551700
&ZCLNG   SETC  ''                                                  @05A 01551800
.*                                                                      01551900
         AIF   ('&XREQUEST' NE 'DELETE_NAME'          AND              *01552000
                '&XREQUEST' NE 'DELETE_NAMELIST'      AND              *01552100
                '&XREQUEST' NE 'WRITE_DATA').PLNOCMDFLG8           @05A 01552200
.*                                                                 @POA 01552300
         AIF   ('&XREQUEST' EQ 'WRITE_DATA' AND                        *01552400
                '&XWHENREG' EQ 'NO' AND                                *01552500
                '&XASSIGN' EQ 'NO').CF9ASSIGNNO                    @POA 01552600
&ZW      SETC  '&ZW.0'                                             @05A 01552700
         AGO   .CF9ENDASSIGN                                       @POA 01552800
.CF9ASSIGNNO ANOP ,                                                @POA 01552900
&ZW      SETC  '&ZW.1'                                             @POA 01553000
&ZCLNG   SETC  'YES'                                               @POA 01553100
.CF9ENDASSIGN ANOP ,                                               @POA 01553200
.*                                                                 @POA 01553300
         AIF   ('&XREQUEST' NE 'WRITE_DATA'           OR               *01553400
                '&XWHENREG' NE 'NO').CF8NOSREG                     @PLC 01553500
         AIF   ('&REGUSER' NE 'NO').CF8NOSREG                      @05A 01553600
&ZW      SETC  '&ZW.1'                                             @05A 01553700
&ZCLNG   SETC  'YES'                                               @05A 01553800
         AGO   .CF8YESSREG                                         @05A 01553900
.CF8NOSREG        ANOP ,                                           @05A 01554000
&ZW      SETC  '&ZW.0'                                             @05A 01554100
.CF8YESSREG       ANOP ,                                           @05A 01554200
&ZW      SETC  '&ZW.00'                                            @05A 01554300
         AIF   ('&XVERSCOMPTYPE' NE 'LESSOREQUAL').CF8NOVERSCOMTP  @05A 01554400
&ZW      SETC  '&ZW.1'                                             @05A 01554500
&ZCLNG   SETC  'YES'                                               @05A 01554600
         AGO   .CF8YESVERSCOMTP                                    @05A 01554700
.CF8NOVERSCOMTP   ANOP ,                                           @05A 01554800
&ZW      SETC  '&ZW.0'                                             @05A 01554900
.CF8YESVERSCOMTP  ANOP ,                                           @05A 01555000
         AIF   ('&XREQUEST' NE 'DELETE_NAMELIST').CF8NOINLVERSCOMP @05A 01555100
         AIF   ('&XVERSCOMPTYPE' NE 'NONE').CF8SETINLVERSCOMP      @05A 01555200
&ZW      SETC  '&ZW.0'                                             @05A 01555300
         AGO   .CF8NOVERSCOMP                                      @05A 01555400
.CF8SETINLVERSCOMP  ANOP ,                                         @05A 01555500
&ZW      SETC  '&ZW.1'                                             @05A 01555600
&ZCLNG   SETC  'YES'                                               @05A 01555700
         AGO   .CF8NOVERSCOMP                                      @05A 01555800
.CF8NOINLVERSCOMP   ANOP ,                                         @05A 01555900
         AIF   ('&XVERSCOMP' EQ '').CF8YESVERSCOMP                 @05A 01556000
&ZW      SETC  '&ZW.1'                                             @05A 01556100
&ZCLNG   SETC  'YES'                                               @05A 01556200
         AGO   .CF8NOVERSCOMP                                      @05A 01556300
.CF8YESVERSCOMP    ANOP ,                                          @05A 01556400
&ZW      SETC  '&ZW.0'                                             @05A 01556500
.CF8NOVERSCOMP    ANOP ,                                           @05A 01556600
         AIF   ('&XVERSUPDATE' NE 'SET').CF8NOTSET                 @05A 01556700
&ZW      SETC  '&ZW.11'                                            @05A 01556800
&ZCLNG   SETC  'YES'                                               @05A 01556900
         AGO   .CF8UPDTDONE                                        @05A 01557000
.CF8NOTSET        ANOP ,                                           @05A 01557100
         AIF   ('&XVERSUPDATE' NE 'DEC').CF8NOTDEC                 @05A 01557200
&ZW      SETC  '&ZW.01'                                            @05A 01557300
&ZCLNG   SETC  'YES'                                               @05A 01557400
         AGO   .CF8UPDTDONE                                        @05A 01557500
.CF8NOTDEC        ANOP ,                                           @05A 01557600
         AIF   ('&XVERSUPDATE' NE 'INC').CF8NOTINC                 @05A 01557700
&ZW      SETC  '&ZW.10'                                            @05A 01557800
&ZCLNG   SETC  'YES'                                               @05A 01557900
         AGO   .CF8UPDTDONE                                        @05A 01558000
.CF8NOTINC        ANOP ,                                           @05A 01558100
&ZW      SETC  '&ZW.00'                                            @05A 01558200
.CF8UPDTDONE      ANOP ,                                           @05A 01558300
&ZW      SETC  'B''&ZW.'''                                         @05A 01558400
         AIF   ('&ZCLNG' NE 'YES').PLNOCMDFLG8                     @05A 01558500
         AIF   ('&XREQUEST' NE 'DELETE_NAME').CF8NOTIN             @05A 01558600
.*   _xCmdFlag11                                                   @05A 01558700
         OI    &PLOFF_XCMDFLAG11.(1),&ZW                           @05A 01558800
         AGO   .CF8FINISH                                          @05A 01558900
.CF8NOTIN      ANOP ,                                              @05A 01559000
         AIF   ('&XREQUEST' NE 'DELETE_NAMELIST').CF8NOTINL        @05A 01559100
.*   _xCmdFlag8                                                    @05A 01559200
         OI    &PLOFF_XCMDFLAG8.(1),&ZW                            @05A 01559300
         AGO   .CF8FINISH                                          @05A 01559400
.CF8NOTINL     ANOP ,                                              @05A 01559500
         AIF   ('&XWHENREG' NE 'YES').CF8NOTWWR                    @05A 01559600
.*   _xCmdFlag10                                                   @05A 01559700
         OI    &PLOFF_XCMDFLAG10.(1),&ZW                           @05A 01559800
         AGO   .CF8FINISH                                          @05A 01559900
.CF8NOTWWR     ANOP ,                                              @05A 01560000
.*   _xCmdFlag9                                                    @05A 01560100
         OI    &PLOFF_XCMDFLAG9.(1),&ZW                            @05A 01560200
.CF8FINISH     ANOP ,                                              @05A 01560300
.PLNOCMDFLG8   ANOP ,                                              @05A 01560400
.*                                                                      01560500
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01560600
.**  Set VersComp  values                                       @05A ** 01560700
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01560800
         AIF   ('&XVERSCOMP' EQ '').SKIPSETVERSCOMP                @05A 01560900
         AIF   ('&XREQUEST'   NE 'WRITE_DATA').SKIPSETVERSCOMP2    @05A 01561000
         AIF   ('&XWHENREG'   NE 'YES').SKIPSETVERSCOMP1           @05A 01561100
         AIF   ('&XVERSCOMP'(1,1) EQ '(').VERSCOMP1REG             @PQA 01561200
         MVC   &PLOFF_XVERSCOMP1.(8,1),&XVERSCOMP                  @05A 01561300
         AGO   .ENDSETVERSCOMP                                     @05A 01561400
.VERSCOMP1REG     ANOP ,                                           @PRA 01561500
         MVC   &PLOFF_XVERSCOMP1.(8,1),0&XVERSCOMP                 @PRC 01561600
         AGO   .ENDSETVERSCOMP                                     @PQA 01561700
.SKIPSETVERSCOMP1 ANOP ,                                           @05A 01561800
         AIF   ('&XVERSCOMP'(1,1) EQ '(').VERSCOMP2REG             @PQA 01561900
         MVC   &PLOFF_XVERSCOMP2.(8,1),&XVERSCOMP                  @05A 01562000
         AGO   .ENDSETVERSCOMP                                     @05A 01562100
.VERSCOMP2REG     ANOP ,                                           @PRA 01562200
         MVC   &PLOFF_XVERSCOMP2.(8,1),0&XVERSCOMP                 @PRC 01562300
         AGO   .ENDSETVERSCOMP                                     @PQA 01562400
.SKIPSETVERSCOMP2 ANOP ,                                           @05A 01562500
         AIF   ('&XREQUEST'   NE 'DELETE_NAME').SKIPSETVERSCOMP    @05A 01562600
         MVC   &PLOFF_XVERSCOMP3.(8,1),&XVERSCOMP                  @05A 01562700
.ENDSETVERSCOMP   ANOP ,                                           @05A 01562800
.SKIPSETVERSCOMP  ANOP ,                                           @05A 01562900
.*                                                                      01563000
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01563100
.**  NewVers       values                                       @05A ** 01563200
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01563300
         AIF   ('&XNEWVERS' EQ '').SKIPSETNEWVERS                  @05A 01563400
         AIF   ('&XREQUEST'   NE 'WRITE_DATA').SKIPSETNEWVERS      @05A 01563500
         AIF   ('&XWHENREG'   NE 'YES').SKIPSETNEWVERS1            @05A 01563600
         AIF   ('&XNEWVERS'(1,1) EQ '(').NEWVERS1REG               @PQA 01563700
         MVC   &PLOFF_XNEWVERS1.(2,1),&XNEWVERS                    @05A 01563800
         AGO   .ENDSETNEWVERS                                      @05A 01563900
.NEWVERS1REG      ANOP ,                                           @PRA 01564000
         MVC   &PLOFF_XNEWVERS1.(8,1),0&XNEWVERS                   @PRC 01564100
         AGO   .ENDSETNEWVERS                                      @PQA 01564200
.SKIPSETNEWVERS1  ANOP ,                                           @05A 01564300
         AIF   ('&XNEWVERS'(1,1) EQ '(').NEWVERS2REG               @PQA 01564400
         MVC   &PLOFF_XNEWVERS2.(8,1),&XNEWVERS                    @05A 01564500
         AGO   .ENDSETNEWVERS                                      @PQA 01564600
.NEWVERS2REG      ANOP ,                                           @PRA 01564700
         MVC   &PLOFF_XNEWVERS2.(8,1),0&XNEWVERS                   @PRC 01564800
.ENDSETNEWVERS    ANOP ,                                           @05A 01564900
.SKIPSETNEWVERS   ANOP ,                                           @05A 01565000
.*                                                                      01565100
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01565200
.**  StartIndex values                                          @05A ** 01565300
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01565400
         AIF   ('&XSTARTINDEX' EQ '').SKIPSETSTARTINDEX            @PKC 01565500
         AIF   ('&XREQUEST'   NE 'REG_NAMELIST').SKIPSETSTARTINDEX1     01565600
         AIF   ('&XSTARTINDEX'(1,1) EQ '(').STARTINDEX1Z           @PLA 01565700
         MVC   &PLOFF_XSTARTINDEX1.(2,1),&XSTARTINDEX              @05A 01565800
         AGO   .ENDSETSTARTINDEX                                   @05A 01565900
.STARTINDEX1Z        ANOP ,                                        @PLA 01566000
         MVC   &PLOFF_XSTARTINDEX1.(2,1),0&XSTARTINDEX             @PLA 01566100
         AGO   .ENDSETSTARTINDEX                                   @PLA 01566200
.SKIPSETSTARTINDEX1  ANOP ,                                        @05A 01566300
         AIF   ('&XREQUEST'   NE 'DELETE_NAMELIST').SKIPSETSTARTINDEX   01566400
         AIF   ('&XSTARTINDEX'(1,1) EQ '(').STARTINDEX2Z           @PLA 01566500
         MVC   &PLOFF_XSTARTINDEX2.(2,1),&XSTARTINDEX              @05A 01566600
         AGO   .ENDSETSTARTINDEX                                   @PLA 01566700
.STARTINDEX2Z        ANOP ,                                        @PLA 01566800
         MVC   &PLOFF_XSTARTINDEX2.(2,1),0&XSTARTINDEX             @PLA 01566900
.ENDSETSTARTINDEX    ANOP ,                                        @05A 01567000
.SKIPSETSTARTINDEX   ANOP ,                                        @05A 01567100
.*                                                                      01567200
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01567300
.**  EndIndex   values                                          @05A ** 01567400
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01567500
         AIF   ('&XENDINDEX' EQ '').SKIPSETENDINDEX                @PKC 01567600
         AIF   ('&XREQUEST'   NE 'REG_NAMELIST').SKIPSETENDINDEX1  @05A 01567700
         AIF   ('&XENDINDEX'(1,1) EQ '(').ENDINDEX1Z               @PLA 01567800
         MVC   &PLOFF_XENDINDEX1.(2,1),&XENDINDEX                  @05A 01567900
         AGO   .ENDSETENDINDEX                                     @05A 01568000
.ENDINDEX1Z          ANOP ,                                        @PLA 01568100
         MVC   &PLOFF_XENDINDEX1.(2,1),0&XENDINDEX                 @PLA 01568200
         AGO   .ENDSETENDINDEX                                     @PLA 01568300
.SKIPSETENDINDEX1  ANOP ,                                          @05A 01568400
         AIF   ('&XREQUEST'   NE 'DELETE_NAMELIST').SKIPSETENDINDEX     01568500
         AIF   ('&XENDINDEX'(1,1) EQ '(').ENDINDEX2Z               @PLA 01568600
         MVC   &PLOFF_XENDINDEX2.(2,1),&XENDINDEX                  @05A 01568700
         AGO   .ENDSETENDINDEX                                     @06C 01568800
.ENDINDEX2Z          ANOP ,                                        @PLA 01568900
         MVC   &PLOFF_XENDINDEX2.(2,1),0&XENDINDEX                 @PLA 01569000
.ENDSETENDINDEX    ANOP ,                                          @05A 01569100
.SKIPSETENDINDEX   ANOP ,                                          @05A 01569200
.*                                                                      01569300
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01569400
.**  Set process ID values                                           ** 01569500
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01569600
.*                                                                      01569700
         AIF   ('&XPROCESSID' EQ ''              OR                    *01569800
                '&XPROCESSID' EQ 'NO_PROCESSID').PLNOPROCESSID     @D3A 01569900
.*                                                                      01570000
.* Handle the ProcessId specification.                                  01570100
.* There are four ways it can be specified:                             01570200
.*  1) PROCESSID=(reg)       --> "reg" contains the addr of the value   01570300
.*  2) PROCESSID=offset(reg) --> explicit basing specification          01570400
.*  3) PROCESSID=name        --> variable name                          01570500
.*  4) PROCESSID=value       --> hard-coded value                       01570600
.*                                                                      01570700
         AIF   ('&XPROCESSID'(1,1) NE '(').PLPROCIDNOTREG          @D3A 01570800
&ZCGPR   SETC  '0('.'&XPROCESSID'(2,K'&XPROCESSID-2).')'           @D3A 01570900
         AGO   .PLENDPROCIDSETUP                                   @D3A 01571000
.PLPROCIDNOTREG ANOP ,                                             @D3A 01571100
&ZCGPR   SETC  '&XPROCESSID'                                       @D3A 01571200
&ZC      SETC  '&XPROCESSID'(1,1)                                  @D3A 01571300
         AIF   (T'&ZC NE 'N').PLENDPROCIDSETUP                     @D3A 01571400
&ZC      SETC  '&XPROCESSID'                                       @D3A 01571500
         AIF   ('&ZC'(K'&ZC,1) EQ ')').PLENDPROCIDSETUP            @D3A 01571600
&ZCGPR   SETC  '=FL1''&XPROCESSID'''                               @D3A 01571700
.PLENDPROCIDSETUP ANOP ,                                           @D3A 01571800
.*                                                                      01571900
         AIF   ('&XREQUEST' NE 'CASTOUT_DATA'    AND                   *01572000
                '&XREQUEST' NE 'UNLOCK_CASTOUT'  AND                   *01572100
                '&XREQUEST' NE 'UNLOCK_CO_NAME').PLPROCIDNOTCD     @04C 01572200
         MVC   &PLOFF_XPROCESSID1.(1,1),&ZCGPR                     @D3A 01572300
         AGO   .ENDSTOREPROCID                                     @D3A 01572400
.*                                                                      01572500
.PLPROCIDNOTCD ANOP ,                                              @D3A 01572600
         AIF   ('&XREQUEST' NE 'WRITE_DATA'      OR                    *01572700
                '&XWHENREG' NE 'YES').PLPROCIDWRN                  @D3A 01572800
         MVC   &PLOFF_XPROCESSID2.(1,1),&ZCGPR                     @D3A 01572900
         AGO   .ENDSTOREPROCID                                     @D3A 01573000
.*                                                                      01573100
.PLPROCIDWRN   ANOP ,                                              @D3A 01573200
         MVC   &PLOFF_XPROCESSID3.(1,1),&ZCGPR                     @D3A 01573300
.*                                                                      01573400
.ENDSTOREPROCID ANOP ,                                             @D3A 01573500
.PLNOPROCESSID ANOP ,                                              @D3A 01573600
.*                                                                      01573700
.*                                                                      01573800
.**------------------------------------------------------------------** 01573900
.**  End of code to fill in the parameter list                       ** 01574000
.**------------------------------------------------------------------** 01574100
.*                                                                      01574200
.*                                                                      01574300
.**------------------------------------------------------------------** 01574400
.**  Ensure AR1 is 0 for primary callers                             ** 01574500
.**------------------------------------------------------------------** 01574600
.*                                                                      01574700
.**  This code is necessary because the entry linkage of the called  ** 01574800
.**  routine needs to reference fields in the parameter list while   ** 01574900
.**  executing in AR mode without knowing the mode of the caller.    ** 01575000
.*                                                                      01575100
         AIF   ('&SYSASCE' NE 'P').CALLSKIPSETAR1  Check for AR mode    01575200
         LAE   1,0(1,0)                 Make sure AR1 is cleared        01575300
.CALLSKIPSETAR1 ANOP ,                                                  01575400
.*                                                                      01575500
.*                                                                      01575600
.**------------------------------------------------------------------** 01575700
.**  Generate the linkage to the cache routine                       ** 01575800
.**------------------------------------------------------------------** 01575900
.*                                                                      01576000
.**  Note that in the following instructions the index register is   ** 01576100
.**  used instead of the base register so that ALET translation is   ** 01576200
.**  not performed and the code works the same in both primary and   ** 01576300
.**  AR mode.                                                        ** 01576400
.*                                                                      01576500
         L     15,16(0,0)               Get CVT address            @D1C 01576600
         L     15,140(15,0)             Get ECVT address           @D1C 01576700
         L     15,256(15,0)             Get XRAT address           @D1C 01576800
         L     15,44(15,0)              Cache mainline routine     @D1C 01576900
         BALR  14,15                    Branch to routine          @D1C 01577000
.*                                                                      01577100
.*                                                                      01577200
.ENDGENLINKAGE ANOP ,                                                   01577300
.*                                                                      01577400
.**------------------------------------------------------------------** 01577500
.**  End of user maclasm code                                        ** 01577600
.**------------------------------------------------------------------** 01577700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  01577800
.ZLINKX               ANOP  ,                                           01577900
.*******************************************************************    01578000
.***AP.X01  FORMAT GENERATED CODE                                       01578100
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            01578200
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              01578300
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              01578400
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              01578500
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              01578600
                      AIF   (K'&ZLD LE 0).ZL51                          01578700
&ZLC                  SETA  35             COMMENT COLUMN               01578800
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   01578900
&ZLC                  SETA  33             COMMENT COLUMN               01579000
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  01579100
&ZLV                  SETC  '&ZLV'.' '                                  01579200
                      AGO   .ZL31                                       01579300
.*                                                                      01579400
.ZL41                 ANOP  ,                                           01579500
&ZLV                  SETC  '&ZLV'.' '                                  01579600
.ZL51                 ANOP  ,                                           01579700
&ZLV                  SETC  '&ZLV'.'&ZLD'                               01579800
.*                                                                      01579900
&ZLL     &ZLOP &ZLV                                                     01580000
.*                                                                      01580100
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               01580200
                      AGO   .ZL21          CONTINUE LOOPING             01580300
.*                                                                      01580400
.ZLX1                 ANOP  ,                                           01580500
.*******************************************************************    01580600
.***AP.X02  END OF IXLCACHE MACRO                                       01580700
&ZIXLCACHE            SETC  'YES'          SET IXLCACHE USED            01580800
         POP   PRINT                                                    01580900
*                                            IXLCACHE-5                 01581000
         SPACE 1                                                        01581100
.ZLX2                 ANOP  ,                                           01581200
         MEND                                                           01581300
**********************************************************************/ 01581400
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  01581500
*%IXLCACHE: MACRO KEYS(REQUEST,ASSIGN,REGUSER,RETURNDATA,WHENREG,       01581600
*                 VERSCOMP,VERSCOMPTYPE,VERSUPDATE,NEWVERS,CHANGED,     01581700
*                 CROSSINVAL,GETCOLOCK,PROCESSID,PARITY,USERDATA,       01581800
*                 ELEMNUM,STARTINDEX,ENDINDEX,NSBAREA,FIRSTNAME,        01581900
*                 LASTNAME,CUNBAREA,DELETETYPE,ERRORACTION,DIRINFOFMT,  01582000
*                 CRITERIA,COCLASSB,COCLASSE,COSTATSFMT,STGSTATS,       01582100
*                 NUMNAMES,REPEAT,RECLVCTR,CONTOKEN,REQID,NAME,         01582200
*                 NAMEMASK,OLDNAME,BUFLIST,BUFADDRTYPE,PAGEABLE,        01582300
*                 BUFSTGKEY,BUFALET,BUFADDRSIZE,BUFNUM,BUFINCRNUM,      01582400
*                 BUFFER,BUFSIZE,ADJAREA,STGCLASS,COCLASS,VECTORINDEX,  01582500
*                 RESTOKEN,EXTRESTOKEN,MODE,REQECB,REQDATA,REQTOKEN,    01582600
*                 ANSAREA,ANSLEN,RETCODE,RSNCODE,PLISTVER,MF);          01582700
*  ANS('?'||MACLABEL||' '||'IXLCACHP '||MACLIST||                       01582800
*         ' '||MACKEYS||';') COL(MACLMAR);                              01582900
*%END IXLCACHE;                                                         01583000
