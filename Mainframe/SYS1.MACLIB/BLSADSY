*/**  START OF SPECIFICATIONS FOR BLSADSY ****************************/ 00050000
*/*                                                                  */ 00100000
*/* $MAC(BLSADSY) COMP(SC132) PROD(HBB3310):                         */ 00150000
*/*                                                                  */ 00250000
*/* MACRO NAME = BLSADSY                                             */ 00260000
*/*                                                                  */ 00270000
*/* DESCRIPTIVE NAME = Add symptom service parameter list            */ 00280000
*/*                                                                  */ 00290000
*/* COPYRIGHT =                                                      */ 00325000
*/*   5685-001                                                       */ 00360000
*/*   THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                    */ 00395000
*/*   (C) COPYRIGHT IBM CORP. 1986, 1988                             */ 00430000
*/*   LICENSED MATERIALS - PROPERTY OF IBM                           */ 00465000
*/*                                                                  */ 00500000
*/* FUNCTION = This parameter list is used by IPCS exits to provide  */ 00550000
*/*            additional symptoms to the dump header record.        */ 00600000
*/*                                                                  */ 00650000
*/*   OPERATION = Create a mapping for BLSADSY                       */ 00700000
*/*                                                                  */ 00800000
*/*    METHOD OF ACCESS                                              */ 00850000
*/*                                                                  */ 01550000
*/*     PLS = The macro can expand in a LIST or SUBLIST format.      */ 01600000
*/*                                                                  */ 01650000
*/*       Set macro variable EHBENDCHAR to comma or semicolon.       */ 01700000
*/*       Defaults to semicolon for LIST form and must be set        */ 01750000
*/*       for the SUBLIST form.  For example:                        */ 01800000
*/*                                                                  */ 01850000
*/*         %DCL EHBENDCHAR EXTERNAL CHAR                            */ 01900000
*/*         %EHBENDCHAR=','                                          */ 01950000
*/*                                                                  */ 02000000
*/*                                                                  */ 02050000
*/*      LIST FORM    = ?BLSADSY MF(LIST,PREFIX,STORCLASS)           */ 02100000
*/*                                                                  */ 02150000
*/*      SUBLIST FORM = ?BLSADSY  MF(SUBLIST,PREFIX,STORCLASS,LEVEL) */ 02200000
*/*                                                                  */ 02250000
*/*        MF                                                        */ 02300000
*/*       PARM  Meaning                                              */ 02350000
*/*       ----  ---------------------------------------------------  */ 02400000
*/*                                                                  */ 02450000
*/*        1    LIST or L for LIST form                              */ 02500000
*/*             SUBLIST or S for SUBLIST form                        */ 02550000
*/*                                                                  */ 02600000
*/*        2    PREFIX is from 1 to 4 alpha-numeric starting with    */ 02650000
*/*             an alpha character. e.g. 'ADSY'                      */ 02700000
*/*                                                                  */ 02750000
*/*        3    STORAGE CLASS and initialization attribute           */ 02800000
*/*             COMPLETE keyword will cause initial values to        */ 02850000
*/*             be generated.  Default storage class with COMPLETE   */ 02900000
*/*             is STATIC LOCAL.  Can specify BASED, DEFINED ...     */ 02950000
*/*                                                                  */ 03000000
*/*        4    Structure level number to start with.  This can      */ 03050000
*/*             only be specified on the SUBLIST form.               */ 03100000
*/*                                                                  */ 03150000
*/*    ASM = The assembler format takes the form                     */ 03200000
*/*                                                                  */ 03250000
*/*          LABEL  BLSADSY DSECT=YES                                */ 03300000
*/*                               NO                                 */ 03350000
*/*                                                                  */ 03400000
*/*          The LABEL is used as the prefix for all the             */ 03450000
*/*          field names.  The label cannot exceed 4 characters.     */ 03500000
*/*          For example code 'ADSY   BLSADSY DSECT=YES'             */ 03550000
*/*                                                                  */ 03600000
*/*          DSECT=YES will cause a DSECT to be generated.           */ 03650000
*/*                    The initial values will be ignored.           */ 03700000
*/*                                                                  */ 03750000
*/*          DSECT=NO  will cause a set of initialized DCs           */ 03800000
*/*                    to be generated.                              */ 03850000
*/*                                                                  */ 03900000
*/* NOTES =                                                          */ 03950000
*/*   DEPENDENCIES = This macro requires external macro variables    */ 04000000
*/*                  be declared in one of the two following ways:   */ 04050000
*/*                                                                  */ 04100000
*/*                  1. Use the BLSRPROC macro to generate the       */ 04150000
*/*                     PROC statement and macro declares.           */ 04200000
*/*                                                                  */ 04250000
*/*                  2. Use the BLSRMAC0 macro to generate only      */ 04300000
*/*                     the declares.                                */ 04350000
*/*                                                                  */ 04400000
*/*   CHARACTER CODE DEPENDENCIES = None                             */ 04450000
*/*   RESTRICTIONS = None                                            */ 04500000
*/*   REGISTER CONVENTIONS = None                                    */ 04550000
*/* ---------------------------------------------------------------- */ 04600000
*/*                                                                  */ 04625000
*/* CHANGE ACTIVITY =                                                */ 04650000
*/*                                                                  */ 04700000
*/*   Products =                                                     */ 04750000
*/* $L0= SRVADSYM,JBB2220,85007,PDG7: Add Symptom Service support    */ 04800000
*/* $L1= SRVADSYM,JBB2220,85007,PDG7: Same as L0, copied code        */ 04850000
*/* $L2= IPCSENH,HBB3310,86158,PDE1: Suppress assembler macro in     */ 04855500
*/*      PLAS source listing                                         */ 04861000
*/*                                                                  */ 04862800
*/*   Design changes =                                               */ 04864600
*/* $D1= DCR0122,JBB2220,85084,PDG7: Support suppression of add      */ 04866600
*/*      symptom service for SVC dumps                               */ 04883200
*/*                                                                  */ 04900000
*/*   PTMs =                                                         */ 04925000
*/* $P1= PA20624,JBB2220,85283,PD31: Supply a default length for     */ 04950000
*/*      the assembler structure when DSECT=NO is specified.         */ 04975000
*/* $P2= PA20784,JBB2220,85353,PDG7: Provide blurb only once per     */ 04983300
*/*      assembly                                                    */ 04991600
*/*                                                                  */ 05000000
*/*   Maintenance = none                                             */ 05050000
*/*                                                                  */ 05100000
*/** END OF SPECIFICATIONS FOR BLSADSY *******************************/ 05150000
*                                                                       05200000
*   %IF TRUTH ^= TRUTH %THEN        /* Skip assembler macro      @L2P*/ 05250000
*     %DO;                          /* Skip assembler macro      @L2P*/ 05300000
*/* Treat assembler macro as PLAS full-width remark ******************* 05350000
         MACRO                                                          05400000
&P       BLSADSY &DSECT=YES                                        @L1P 05450000
         GBLB    &EADSY           Blurb produced once in assembly  @L1P 05500000
         IEZBITS ,                Define symbolic bits             @L1P 05550000
         AIF   ('&DSECT' EQ 'NO').L010 No DSECT statement          @L1P 05600000
&P       DSECT ,                  IPCS add symptom parameter list       05650000
         AGO   .L020              Define structure of record       @L1P 05700000
.L010    ANOP  ,                  No DSECT statement               @L1P 05750000
         DS    0D                 Align on doubleword boundary     @P1C 05783300
&P       DS    0CL64              IPCS add symptom parameter list  @P1A 05816600
.L020    ANOP  ,                  Define structure of record       @L1P 05850000
&P.000   DS    0C                 Begin BLSADSY                #MD86158 05887500
         AIF   (&EADSY).L030      One blurb is enough              @L1P 05925000
&EADSY   SETB  1                  Blurb produced once in assembly  @P2A 05962500
*-----------------------------------------------------------------      06000000
* An add symptom (ADSY) parameter list contains the address and         06050000
* length of a symptom to be placed in the symptom record portion        06100000
* of the dump header record.                                            06150000
*-----------------------------------------------------------------      06200000
.L030    ANOP  ,                  Blurb produced once in assembly  @L1P 06250000
&P.ID    DS    0CL5               Add symptom parameter identifier      06300000
&P.IDC   DC    CL4'ADSY'          ADSY acronym                          06400000
&P.IDL   DC    CL1'1'             ADSY level indicator                  06450000
&P.FLGS  DS    0BL3               Processing flags                 @D1P 06466600
&P.FL1   DC    BL1'0'             First byte of flags              @D1A 06479100
&P.NOSV  EQU   BIT0               Do not add symptom on a SVC dump @D1A 06491600
         DC    BL2'0'             Reserved                         @D1A 06504100
&P.MODN  DC    CL8'        '      Name of module requesting the        *06516600
                                  service                          @L1P 06533200
&P.MP    DC    A(0)               Pointer to a buffer containing a     *06550000
                                  symptom string                        06600000
&P.ML    DC    F'0'               Length of the symptom string          06650000
&P.MP2   DC    A(0)               Pointer to a buffer containing a     *06670000
                                  symptom string for pairing            06690000
&P.ML2   DC    F'0'               Length of the symptom string to be   *06710000
                                  paired                                06730000
&P.RV2   DC    XL32'00'           Reserved                         @L1C 06750000
&P.999   DS    0C                 End BLSADSY                  #MD86158 06770000
         MEND  ,                  End assembler macro BLSADSY        */ 06800000
*                                                                       07100000
*       %END;                       /* Skip assembler macro      @L2P*/ 07110800
*%BLSADSY:                          /* Add symptom parm list     @L1P*/ 07121600
*       MACRO KEYS(MF);             /*                           @L1P*/ 07132400
*/* -----------------------------------------------------------------*/ 07143200
*/* Define Macro-Variables                                           */ 07154000
*/* -----------------------------------------------------------------*/ 07164800
*                                                                       07175600
*       DECLARE                     /* External macro variables      */ 07186400
*         ELSRADSY CHARACTER EXTERNAL, /* BLSADSY global data    @L1P*/ 07197200
*         EHBENDCHAR CHARACTER EXTERNAL, /* Final punctuation    @L1P*/ 07208000
*         EHBBLRPENDESS CHARACTER EXTERNAL, /* Deferred macro           07218800
*                                      requests                  @L1P*/ 07229600
*         EHBLVL1  CHARACTER EXTERNAL, /* First level number     @L1P*/ 07240400
*         EHBLVL2  CHARACTER EXTERNAL, /* Second level number    @L1P*/ 07251200
*         EHBLVL3  CHARACTER EXTERNAL, /* Third level number     @L1P*/ 07262000
*         EHBLVL4  CHARACTER EXTERNAL, /* Fourth level number    @D1P*/ 07272800
*         EHBMF1   CHARACTER EXTERNAL, /* Macro form             @L1P*/ 07283600
*         EHBMF2   CHARACTER EXTERNAL, /* Prefix characters      @L1P*/ 07294400
*         EHBMF3   CHARACTER EXTERNAL, /* Scope/storage class    @L1P*/ 07305200
*         EHBMF3A  CHARACTER EXTERNAL, /* Complete initialization       07316000
*                                      flag                      @L1P*/ 07326800
*         BLSRENDDECLARE CHARACTER EXTERNAL, /* Deferred declarations   07337600
*                                                                @L1P*/ 07350000
*         EHBCOL1  FIXED EXTERNAL,  /* First indentation column  @L1P*/ 07360500
*         EHBCOL2  FIXED EXTERNAL,  /* Second indentation column @L1P*/ 07371000
*         EHBCOL3  FIXED EXTERNAL,  /* Third indentation column  @L1P*/ 07381500
*         EHBCOL4  FIXED EXTERNAL,  /* Fourth indentation column @D1P*/ 07392000
*         EHBCSECT CHARACTER EXTERNAL, /* CSECT name             @L1P*/ 07402500
*         EHBRC    FIXED EXTERNAL;  /* Macro return code         @L1P*/ 07413000
*       DEACTIVATE ELSRADSY,BLSRENDDECLARE; /* Prevent accidents @L1P*/ 07423500
*       DECLARE                     /* Internal macro variables      */ 07434000
*         CENDCHAR CHARACTER INTERNAL, /* Final punctuation      @L1P*/ 07444500
*         CLVL2    CHARACTER INTERNAL, /* Second level number    @L1P*/ 07455000
*         CLVL3    CHARACTER INTERNAL, /* Third level number     @L1P*/ 07465500
*         CLVL4    CHARACTER INTERNAL, /* Fourth level number    @D1P*/ 07476000
*         CMF1     CHARACTER INTERNAL, /* Macro form             @L1P*/ 07486500
*         CMF2     CHARACTER INTERNAL, /* Prefix characters      @L1P*/ 07497000
*         CMF3A    CHARACTER INTERNAL, /* Complete initialization       07507500
*                                      flag                      @L1P*/ 07518000
*         CQCOMPLETE CHARACTER INTERNAL, /* Literal              @L1P*/ 07528500
*         CQINITIAL CHARACTER INTERNAL, /* Literal               @L1P*/ 07539000
*         FCOL2    FIXED INTERNAL,  /* Second indentation column @L1P*/ 07549500
*         FCOL3    FIXED INTERNAL,  /* Third indentation column  @L1P*/ 07560000
*         FCOL4    FIXED INTERNAL,  /* Fourth indentation column @D1P*/ 07570500
*         FRC      FIXED INTERNAL,  /* Macro return code         @L1P*/ 07581000
*         F1       FIXED INTERNAL;  /* Utility variable          @L1P*/ 07591500
*       DEACTIVATE CENDCHAR,CLVL2,CLVL3,CLVL4,CMF1,CMF2,CMF3A,          07602000
*           CQCOMPLETE,CQINITIAL,FCOL2,FCOL3,FCOL4,FRC,F1; /* Prevent   07612500
*                                      accidents                 @D1C*/ 07623000
*       CQINITIAL = ' INITIAL(';    /* Literal                   @L1P*/ 07633500
*       CQCOMPLETE = 'COMPLETE';    /* Literal                   @L1P*/ 07644000
*       ANSWER('?'||MACLABEL||'BLRMF('||MF||') FORMS(L,S);'); /* @L1P*/ 07654500
*       CENDCHAR = EHBENDCHAR;      /* Final punctuation         @L1P*/ 07665000
*       EHBENDCHAR = ',';           /* Final punctuation         @L1P*/ 07675500
*       CLVL2 = EHBLVL2;            /* Second level number       @L1P*/ 07686000
*       CLVL3 = EHBLVL3;            /* Third level number        @L1P*/ 07696500
*       CLVL4 = EHBLVL4;            /* Fourth level number       @D1P*/ 07707000
*       CMF1 = EHBMF1;              /* Macro form                @L1P*/ 07717500
*       CMF2 = EHBMF2;              /* Prefix characters         @L1P*/ 07728000
*       CMF3A = EHBMF3A;            /* Complete initialization flag     07738500
*                                                                @L1P*/ 07750000
*       FCOL2 = EHBCOL2;            /* Second indentation column @L1P*/ 07763700
*       FCOL3 = EHBCOL3;            /* Third indentation column  @L1P*/ 07777400
*       FCOL4 = EHBCOL4;            /* Fourth indentation column @D1P*/ 07791100
*       FRC = EHBRC;                /* Macro return code         @L1P*/ 07804800
*       BLSRENDDECLARE = BLSRENDDECLARE || CMF2 ||                      07818500
*           'ADSY CHAR(5) CONSTANT(''ADSY1''),' ||                      07832200
*           '/*ADSY identifier constant used to fill in ADSYID.*/';     07845900
*       IF CMF1 = 'LIST' THEN       /* List form                 @L1P*/ 07859600
*         ANSWER('DECLARE/*BLSADSY #MD86158*/') COLUMN(5); /*    @P1C*/ 07873300
*       ANSWER(EHBLVL1||CMF2||' BOUNDARY(WORD)'||EHBMF3||',/*BLSADSY'|| 07887000
*           MACLIST||' '||MACKEYS||'*/') COLUMN(EHBCOL1);               07900700
*       IF CMF1 = 'LIST' THEN       /* List form                 @L1P*/ 07914400
*         IF INDEX(ELSRADSY,',BLURB') = 0 THEN /* Produce blurb  @L1P*/ 07928100
*           DO;                     /* Multiple answers for comment  */ 07941800
*             ANSWER('/* '||REPEAT('=',63)||' */ /* An add symptom '||  07955500
*'(ADSY) parameter list contains the address and    */ '||              07969200
*'/* length of a symptom to be placed in the symptom record '||'portion 07982900
*  */ /* of the dump header record.                                     07996600
*  */ /* '||REPEAT('=',63)||' */') COLUMN(2); /*                 @L1P*/ 08010300
*             ELSRADSY = ELSRADSY || ',BLURB'; /* Blurb produced     */ 08024000
*           END;                    /* Multiple answers for comment  */ 08037700
*       ANSWER(CLVL2||CMF2||'ID CHAR(5)') COLUMN(FCOL2); /*      @L1P*/ 08051400
*       IF CMF3A = CQCOMPLETE THEN  /*                           @L1P*/ 08065100
*         ANSWER(CQINITIAL||'''ADSY1'')');                              08078800
*       ANSWER(',/*Add symptom parameter list identifier*/');           08092500
*       ANSWER(CLVL3||CMF2||'IDC CHARACTER(4),/*ADSY acronym*/') COLUMN 08106200
*           (FCOL3);                                                    08119900
*       ANSWER(CLVL3||CMF2||'IDL CHARACTER(1),/*ADSY level indicator*/' 08133600
*           ) COLUMN(FCOL3);                                            08147300
*       ANSWER(CLVL2||CMF2||'FLGS BIT(24),/*Processing flags*/') COLUMN 08161000
*           (FCOL3);                /*                           @D1P*/ 08174700
*       ANSWER(CLVL3||CMF2||'FL1 BIT(8)') COLUMN(FCOL3);                08188400
*       IF CMF3A = CQCOMPLETE THEN  /* Initialization required?  @D1P*/ 08202100
*         ANSWER(CQINITIAL||'''00''X)'); /*                      @D1P*/ 08215800
*       ANSWER(',/*First flag byte*/'); /*                       @D1P*/ 08229500
*       ANSWER(CLVL4||CMF2||                                            08243200
*           'NOSV BIT(1),/*Do not add symptom on a SVC dump*/') COLUMN( 08256900
*           FCOL4);                 /*                           @D1C*/ 08270600
*       ANSWER(CLVL4||'* BIT(7),/*Reserved*/') COLUMN(FCOL4);           08284300
*       ANSWER(CLVL3||'* BIT(16)') COLUMN(FCOL3);                       08298000
*       IF CMF3A = CQCOMPLETE THEN  /* Initialization required?  @D1P*/ 08311700
*         ANSWER(CQINITIAL||'''00''X)'); /*                      @D1P*/ 08325400
*       ANSWER(',/*Reserved*/');    /*                           @D1P*/ 08339100
*       ANSWER(CLVL2||CMF2||'MODN CHAR(8)') COLUMN(FCOL2); /*    @L1P*/ 08352800
*       IF CMF3A = CQCOMPLETE THEN  /*                           @L1P*/ 08366500
*         IF LENGTH(EHBCSECT) >= 8 THEN /* CSECT name defined by        08380200
*                                      BLRPROC                   @L1P*/ 08393900
*           ANSWER(CQINITIAL||QUOTE(EHBCSECT(1:8))||')'); /*     @L1P*/ 08407600
*         ELSE                      /* No token specified        @L1P*/ 08421300
*           ANSWER(CQINITIAL||'''        '')'); /* Default is blanks    08435000
*                                                                @L1P*/ 08450000
*       ANSWER(',/*Name of module requesting the service*/'); /* @L1P*/ 08485100
*       ANSWER(CLVL2||CMF2||'MP POINTER(31)') COLUMN(FCOL2);            08520200
*       IF CMF3A = CQCOMPLETE THEN  /*                           @L1P*/ 08555300
*         ANSWER(CQINITIAL||'ZZZZNULL)'); /*                     @L1P*/ 08590400
*       ANSWER(',/*Pointer to a buffer containing a symptom string*/'); 08625500
*       ANSWER(CLVL2||CMF2||'ML UNSIGNED BINARY(32)') COLUMN(FCOL2);    08660600
*       IF CMF3A = CQCOMPLETE THEN  /*                           @L1P*/ 08695700
*         ANSWER(CQINITIAL||'ZZZZNULL)'); /*                     @L1P*/ 08730800
*       ANSWER(',/*Length of the symptom string*/');                    08765900
*       ANSWER(CLVL2||CMF2||'MP2 POINTER(31)') COLUMN(FCOL2);           08801000
*       IF CMF3A = CQCOMPLETE THEN  /*                           @L1P*/ 08836100
*         ANSWER(CQINITIAL||'ZZZZNULL)'); /*                     @L1P*/ 08871200
*       ANSWER(',/*Pointer to 2nd buffer for symptom string pairing */' 08906300
*           );                                                          08941400
*       ANSWER(CLVL2||CMF2||'ML2 UNSIGNED BINARY(32)') COLUMN(FCOL2);   08976500
*       IF CMF3A = CQCOMPLETE THEN  /*                           @L1P*/ 09011600
*         ANSWER(CQINITIAL||'ZZZZNULL)'); /*                     @L1P*/ 09046700
*       ANSWER(',/*Length of the 2nd symptom string*/');                09081800
*       ANSWER(CLVL2||'* BIT(256)') COLUMN(FCOL2); /*            @L1C*/ 09116900
*       IF CMF3A = CQCOMPLETE THEN  /*                           @L1P*/ 09152000
*         ANSWER(CQINITIAL||'''00''X)'); /*                      @L1P*/ 09187100
*       ANSWER(',/*Reserved*/');    /*                           @L1P*/ 09222200
*       ANSWER(CLVL2||CMF2||'999 CHARACTER(0)'||CENDCHAR||              09257300
*           '/*BLSADSY #MD86158*/') COLUMN(FCOL2); /*            @P1C*/ 09292400
*       IF CENDCHAR = ';' THEN      /*                           @L1P*/ 09327500
*         ANSWER('?BLSR002;');      /* Process deferred declarations    09362600
*                                                                @L1P*/ 09400000
*       ANSWER('?BLR003(BLSADSY,'||CHAR(EHBRC)||');'); /*        @L1P*/ 09450000
*       RETURN CODE(FRC);           /*                           @L1P*/ 09500000
*       %END BLSADSY;                                                   09550000
