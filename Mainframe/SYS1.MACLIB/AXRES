*  /* START OF SPECIFICATIONS ***************************************** 00050000
*                                                                     * 00100000
*01*  MODULE-NAME = AXRES                                             * 00150000
*                                                                     * 00200000
*01*  MACDATE = 93.170                                                * 00250000
*                                                                     * 00280000
*01*  DESCRIPTIVE-NAME = AUTHORIZATION INDEX RESERVE MACRO            * 00310000
*                                                                     * 00340000
*01*  COPYRIGHT =                                                     * 00375000
*            5655-068                                                 * 00410000
*            THIS MODULE IS "RESTRICTED MATERIALS OF IBM"             * 00445000
*            (C)COPYRIGHT IBM CORP. 1980, 1993                        * 00480000
*            LICENSED MATERIALS - PROPERTY OF IBM                     * 00515000
*                                                                     * 00550000
*01*  STATUS = HBB5510                                            @P1C* 00583300
*                                                                     * 00616600
*                                                                     * 00650000
*01*  FUNCTION = INTERFACE TO THE AXRES SERVICE                       * 00700000
*                                                                     * 00750000
*01*  MODULE-TYPE = MACRO                                             * 00800000
*                                                                     * 00850000
*01*  PROCESSOR = ASSEMBLER,PL/S-III (BILINGUAL)              @ZM50111* 00900000
*                                                                     * 00930000
*01*  MACROS = IHBERMAC                                               * 00960000
*                                                                     * 00990000
*01*  CHANGE ACTIVITY =       NEW FOR OS/VS2 JBB1226.                 * 01020000
*                             UPDATE BOTH BAL AND PL/S MACDATE        * 01035000
*                             WHENEVER THIS MACRO IS CHANGED.         * 01050000
*                             THE S/D CODE IS @G387PXX.               * 01080000
*             VS50111 - (PL/S) FORCE RC=12 ON NULL AXLIST(1)  @ZM50111* 01110000
*             PBB0031 - (PL/S) PTR NOTATION CHECKS INVALID.   @ZMB0031* 01154900
*           $P1=PIG1968,HBB5510,930616,PDXB: Savearea                 * 01177400
*                                                                     * 01200000
*01*  MNOTES = IHB001 AXLIST OPERAND REQUIRED, NOT SPECIFIED          * 01250000
*              IHB002 INVALID AXLIST OPERAND - ___                    * 01300000
*              IHB027 EXCESSIVE POSITIONAL PARAMETERS SPECIFIED       * 01350000
*                                                                     * 01400000
*01*  PL/S MSGS = AS FOLLOWS:                                         * 01450000
*     AHA0013 AXLIST(1) (LIST ADDR) IS REQUIRED BUT IS NOT SPECIFIED. * 01500000
*             NO TEXT IS GENERATED.                                   * 01550000
*     AHA0013 AXLIST IS REQUIRED BUT IS NOT SPECIFIED.                * 01600000
*             NO TEXT IS GENERATED.                                   * 01630000
*     AHA0033 AXLIST - '_' - HAS TOO MANY ARGUMENTS.                  * 01700000
*             NO TEXT IS GENERATED.                                   * 01750000
*     AHA0053 THE MACLIST '_' IS NOT ALLOWED. NO TEXT IS GENERATED.   * 01800000
*                                                                     * 01850000
*A000000-999999                                                @G387PXX 01900000
***** END OF SPECIFICATIONS ******************************************* 02000000
         MACRO                                                          02050000
&LABL    AXRES &AXLIST=,   REQUIRED RX OR REG FORM LIST ADDR   (INPUT) X02100000
               &RELATED=   OPTIONAL VALUE FOR DOCUMENTATION             02150000
.********************************************************************** 02250000
.*       DECLARE ARITHMETIC VARIABLES                                 * 02300000
.********************************************************************** 02350000
         LCLA  &A          GENERAL USAGE LOCAL ARITH. VAR.              02400000
.********************************************************************** 02450000
.*       DECLARE BIT VARIABLES                                        * 02500000
.********************************************************************** 02550000
         LCLB  &AXL0       SPECIAL REGISTER 0 NOTATION WAS SPECIFIED    02600000
.*                         FOR THE 'AXLIST' PARAMETER.                  02650000
.********************************************************************** 02700000
.*       DECLARE CHARACTER VARIABLES                                  * 02750000
.********************************************************************** 02800000
         LCLC  &LT1        LOAD TYPE 1 - THIS VARIABLE WILL BE:         02850000
.*                              'R' IF AXLIST IS A REG TYPE ADDR        02900000
.*                           OR 'A' IF AXLIST IS AN RX TYPE ADDR        02950000
         LCLC  &AXLV       HOLDS VALUE OF AXLIST FOR USE IN LA/R INST.  03000000
         LCLC  &OPERAND    HOLDS OPERAND STRINGS FOR MNOTES             03050000
         LCLC  &OPVAL      HOLDS OPERAND VALUES FOR MNOTES              03100000
.********************************************************************** 03150000
.*       PUT OUT BAL MACDATE COMMENT LINE REGARDLESS OF ERRORS.       * 03200000
.********************************************************************** 03250000
*              MACDATE = 80.122                                         03300000
.********************************************************************** 03400000
.*       INITIALIZE BIT VARIABLES                                     * 03450000
.********************************************************************** 03500000
&AXL0    SETB  0           INDICATE NOT SPECIAL REG 0 INPUT PARM        03550000
.********************************************************************** 03650000
.*       CHECK FOR EXTRANEOUS POSITIONAL PARMS                        * 03700000
.********************************************************************** 03750000
         AIF   (N'&SYSLIST NE 0).ERR027                                 03800000
.********************************************************************** 03850000
.*       VALIDATE AXLIST PARAMETER IF PRESENT                         * 03900000
.********************************************************************** 03950000
&OPERAND SETC  'AXLIST'                 SET FOR POSSIBLE ERROR MSGS     04000000
&OPVAL   SETC  '&AXLIST'                SET FOR POSSIBLE ERROR MSGS     04050000
         AIF   (T'&AXLIST EQ 'O').ERR001 CK FOR REQ'D OPTION MISSING    04100000
.*   DETERMINE WHETHER AXLIST ADDRESS IS RX OR REG TYPE                 04150000
         AIF   ('&AXLIST'(1,1) EQ '(').OK11   BRANCH IF REG TYPE        04200000
&AXLV    SETC  '&AXLIST'                SET VALUE FOR USE IN LOAD INST. 04250000
&LT1     SETC  'A'                      SET TO 'LA' FOR RX TYPE ADDR    04300000
         AGO   .OK99                    GO GENERATE INTERFACE CODE      04350000
.OK11    ANOP                                                           04400000
&LT1     SETC  'R'                      SET TO 'LR' FOR REG TYPE ADDR   04450000
&AXLV    SETC  '&AXLIST(1)'             EXTRACT REGISTER NAME           04500000
         AIF   (N'&AXLIST NE 1).ERR002  BR IF INVALID REG FORM          04550000
         AIF   ('&AXLV' NE '0').OK99    BR IF NOT SPECIAL REG 0         04600000
&AXL0    SETB  1                        INDICATE SPECIAL REG 0 USED     04650000
.********************************************************************** 04700000
.*       GENERATE INTERFACE CODE                                      * 04750000
.********************************************************************** 04800000
.OK99    ANOP                                                           04850000
&LABL    DC    0H'0'                .AXRES XM SERVICE PC                04900000
         STM   14,12,12(13)         .SAVE CALLER'S REGS                 04920000
         AIF   (&AXL0 EQ 1).OK99B       SKIP REG0 LOAD IF SPECIAL REG   04950000
.*                                      NOTATION WAS SPECIFIED          05000000
         L&LT1 0,&AXLV              .SET REG0 TO ADDR OF AXLIST         05050000
.OK99B   ANOP                                                           05100000
         SLR   1,1                  .PARM REG 1 MUST BE ZERO            05150000
         ESAR  2                    .EXTRACT SASID                      05166600
         ST    2,16(,13)            .SAVE SASID IN REG 15 SLOT          05183200
         L     2,16(0,0)            .GET ADDR OF CVT                    05200000
         L     2,772(,2)            .GET ADDR OF SYSTEM FUNCTION TABLE  05240000
         L     2,24(,2)             .GET LX/EX FOR AXRES                05280000
         PC    0(2)                 .PC TO AXRES SERVICE                05320000
         L     2,16(,13)            .EXTRACT SAVED SASID                05346600
         SSAR  2                    .RESTORE SASID                      05373200
         LM    2,12,28(13)          .RESTORE REGS 2-12                  05400000
         L     14,12(,13)           .RESTORE REG 14                     05450000
         MEXIT                                                          05500000
.********************************************************************** 05550000
.*       PROCESS ERROR CONDITIONS                                     * 05600000
.********************************************************************** 05650000
.ERR001  ANOP SEV 12 MNOTE -- IHB001 &OPERAND REQ''D - NOT SPECIFIED    05700000
         IHBERMAC 1017,&OPERAND                                         05750000
         MEXIT                                                          05800000
.ERR002  ANOP SEV 12 MNOTE -- IHB002 - INVALID &OPERAND OPERAND &OPVAL  05850000
         IHBERMAC 1001,&OPERAND,&OPVAL                                  05900000
         MEXIT                                                          05950000
.ERR027  ANOP SEV 12 MNOTE -- IHB027 - EXCESSIVE POSITIONAL PARAMETERS  06000000
         IHBERMAC 238                                                   06050000
         MEND                                                           06100000
* */                                                                    06150000
*@EJECT;                                                                06200000
*%AXRES:                                                                06250000
*        MACRO KEYS(AXLIST,RELATED);                                    06300000
*/********************************************************************/ 06350000
*/*                DEFINE EXTERNAL MACRO VARIABLES                   */ 06400000
*/********************************************************************/ 06450000
* DECLARE                                                               06500000
*   EHAREGS   CHARACTER EXT, /* CONTAINS DECLARED REGISTER NUMBERS.  */ 06550000
*   EHAMAPS   CHARACTER EXT; /* CONTAINS REQUESTS FOR MAPPINGS.      */ 06600000
*/********************************************************************/ 06650000
*/*                DEFINE INTERNAL MACRO VARIABLES                   */ 06700000
*/********************************************************************/ 06750000
* DECLARE CC       FIXED;    /* STARTING COLUMN FOR PL/S COMMENTS    */ 06770000
* DECLARE IVDOCMT  CHAR;     /* COMMENT FOR DO AND END LINES.        */ 06800000
* DECLARE IVINDNT2 FIXED;    /* STARTING COLUMN FOR ALL ANSWER TEXT  */ 07150000
*                            /*   EXCEPT DO AND END STATEMENTS.      */ 07200000
* DECLARE IVLP1    FIXED;    /* LEFT  PAREN COL FOR PTR FORM AXLIST  */ 07250000
* DECLARE IVRC     FIXED;    /* RETURN CODE TO DETERMINE IF TEXT WILL*/ 07300000
*                            /* BE GENERATED.                        */ 07350000
* DECLARE IVRP1    FIXED;    /* RIGHT PAREN COL FOR PTR FORM AXLIST  */ 07400000
*/********************************************************************/ 07450000
*/*                INITIALIZE INTERNAL MACRO VARIABLES                  07500000
*/********************************************************************/ 07550000
* CC         = MACRMAR-35;   /* COMMENTS COLUMN (DEFAULT= 72-35 = 37)*/ 07570000
* IVDOCMT    = ' AXRES';                                                07600000
*                            /* START OF DO-END COMMENT--NO KEYS YET */ 07650000
* IVINDNT2   = MACCOL + 2;   /* SET INDENTATION MARGIN.              */ 07900000
* IVLP1      = INDEX(AXLIST(1),'('); /* GET POSITION OF LEFT PAREN   */ 07950000
*                            /* NOTE: A NON-ZERO VALUE FOR IVLP1     */ 08000000
*                            /* INDICATES A POINTER FORM ADDRESS.    */ 08050000
* IVRC       = 0;            /* SET CODE TO GENERATE TEXT            */ 08100000
* IF IVLP1=1 THEN            /* IF POINTER NOTATION          @ZMB0031*/ 08150000
*   DO;                      /* POINTER NOTATION.            @ZMB0031*/ 08158300
*     IVRP1=LENGTH(AXLIST(1));  /* GET LAST CHAR OF SUBLIST  @ZMB0031*/ 08166600
*     IF AXLIST(1,IVRP1:IVRP1)^=')' THEN /* IF NOT A RIGHT              08174900
*                                           PAREN            @ZMB0031*/ 08183200
*       IVRP1=IVLP1;         /* FORCE 'NOT-SPECIFIED' ERROR  @ZMB0031*/ 08191500
*   END;                     /* POINTER NOTATION.            @ZMB0031*/ 08199800
* ELSE                       /* NOT POINTER NOTATION.        @ZMB0031*/ 08208100
*   DO;                      /* NOT POINTER NOTATION.        @ZMB0031*/ 08216400
*     IVLP1=0;               /* NOT POINTER NOTATION.        @ZMB0031*/ 08224700
*     IVRP1=0;               /* NOT POINTER NOTATION.        @ZMB0031*/ 08233000
*   END;                     /* NOT POINTER NOTATION.        @ZMB0031*/ 08241300
*/********************************************************************/ 08250000
*/*                CHECK FOR MACLIST                                 */ 08300000
*/********************************************************************/ 08350000
*                                                                       08400000
* IF MACLIST ^= ''           /* MACLIST SUPPLIED?                    */ 08450000
*   THEN DO;                 /* YES -                                */ 08500000
*     IVRC = 12;             /*       PREVENT TEXT GENERATION        */ 08550000
*     ANS MSG('AHA0053 THE MACLIST '||QUOTE(MACLIST)||                  08600000
*             ' IS NOT ALLOWED. NO TEXT IS GENERATED.');                08650000
*                            /*       INDICATE MACLIST IN DO-COMMENT.*/ 08700000
*     IVDOCMT = IVDOCMT||' '||MACLIST;                                  08750000
*   END;                     /* END - MACLIST SPECIFIED.             */ 08800000
*/********************************************************************/ 08850000
*/*                PROCESS AXLIST KEYWORD                            */ 08900000
*/********************************************************************/ 08950000
* IF AXLIST ^= ''            /* AXLIST SPECIFIED?                    */ 09050000
*   THEN DO;                 /* YES - ADD KEYWD TO COMMENT           */ 09100000
*     IVDOCMT = IVDOCMT||' AXLIST'||AXLIST;                             09150000
*     IF AXLIST(1) ^= '' &   /* WAS ARGUMENT SPECIFIED?      @ZM50111*/ 09300000
*       ((IVLP1=0 & IVRP1=0)|/* AND NOT POINTER FORM         @ZM50111*/ 09310000
*       (IVLP1+1 <= IVRP1-1))/* AND NOT = '()' ?             @ZM50111*/ 09330000
*       THEN DO;             /* YES - AXLIST(1) SPECIFIED            */ 09350000
*         IF NUMBER(AXLIST) > 1 /* TOO MANY AXLIST ARGS?             */ 09400000
*           THEN DO;         /* YES - ISSUE AHA0033                  */ 09450000
*             ANS MSG('AHA0033 AXLIST - '||AXLIST||                     09500000
*                      ' - HAS TOO MANY ARGUMENTS. '||                  09550000
*                      'NO TEXT IS GENERATED.');                        09600000
*             IVRC = 12;     /* KILL TEXT GENERATION                 */ 09650000
*           END;             /* NUMBER(AXLIST) > 1                   */ 09700000
*       END;                 /* AXLIST(1) SPECIFIED                  */ 10250000
*       ELSE DO;             /* NO ARGUMENT-ISSUE AHA0013            */ 10300000
*         ANS MSG('AHA0013 AXLIST(1) (LIST ADDR) IS REQUIRED '||        10350000
*                 'BUT IS NOT SPECIFIED. NO TEXT IS GENERATED.');       10400000
*         IVRC = 12;         /* KILL TEXT GENERATION                 */ 10450000
*       END;                 /* NO AXLIST ARGUMENT                   */ 10500000
*   END;                     /* AXLIST KEYWORD SPECIFIED             */ 10550000
*   ELSE DO;                 /* AXLIST NOT SPECIFIED                 */ 10600000
*     ANS MSG('AHA0013 AXLIST IS REQUIRED '||                           10650000
*             'BUT IS NOT SPECIFIED. NO TEXT IS GENERATED.');           10700000
*     IVRC = 12;             /* KILL TEXT GENERATION                 */ 10750000
*   END;                     /* AXLIST NOT SPECIFIED                 */ 10800000
*/********************************************************************/ 10850000
*/*                PROCESS 'RELATED' KEYWORD                         */ 10900000
*/********************************************************************/ 10950000
* IF RELATED ^= ''           /* IF RELATED WAS SPECIFIED             */ 11000000
*   THEN                     /* ADD KEYWORD TO DO COMMENT            */ 11050000
*     IVDOCMT=IVDOCMT||' RELATED'||RELATED;                             11100000
*/********************************************************************/ 11650000
*/*   INDICATE EPILOG IS TO PRODUCE STANDARD SAVEAREA MAPPING.       */ 11700000
*/********************************************************************/ 11750000
* IF INDEX(EHAMAPS,'SA@')=0   /* IF SA@ MAPPING NOT PREVIOUSLY       */ 11800000
*   THEN                      /* REQUESTED THEN INDICATE REQUEST     */ 11850000
*     EHAMAPS = EHAMAPS||'SA@,'; /* NOTE: COMMAS SEPERATE REQUESTS   */ 11900000
*/********************************************************************/ 12050000
*/*   INDICATE EPILOG IS TO PROVIDE ACCESS TO XM SERVICES.           */ 12100000
*/********************************************************************/ 12150000
* IF INDEX(EHAMAPS,'XM@')=0   /* IF XM SERVICES NOT PREVIOUSLY       */ 12200000
*   THEN                      /* REQUESTED THEN INDICATE REQUEST     */ 12250000
*     EHAMAPS = EHAMAPS||'XM@,'; /* NOTE: COMMAS SEPERATE REQUESTS   */ 12300000
*/********************************************************************/ 12350000
*/*                PUT OUT LABELS (IF ANY)                           */ 12390000
*/********************************************************************/ 12430000
* IF MACLABEL ^= ''          /* ANY LABELS SPECIFIED?                */ 12470000
*   THEN                     /* YES - PUT THEM OUT.                  */ 12510000
*     ANS(MACLABEL) COL(MACLMAR);                                       12550000
*/********************************************************************/ 12590000
*/*     PUT OUT DO STATEMENT                                         */ 12630000
*/********************************************************************/ 12670000
* IVDOCMT=IVDOCMT||' MACDATE(80.122) '; /* ADD MACDATE TO COMMENT    */ 12710000
*                            /*       GENERATE THE DO STATEMENT.     */ 12750000
*   ANS('DO; '||COMMENT(IVDOCMT)) COL(MACCOL);                          12790000
*/********************************************************************/ 12830000
*/*                DETERMINE IF TEXT SHOULD BE PRODUCED              */ 12870000
*/********************************************************************/ 12910000
* IF IVRC > 4                /* ANY SEVERE ERRORS?                   */ 12950000
*   THEN                     /* YES -                                */ 12990000
*     GOTO LHA09000;         /*       EXIT - NO TEXT PRODUCED.       */ 13030000
*/********************************************************************/ 13070000
*/*                DEFINE REGISTER NAMES                             */ 13110000
*/********************************************************************/ 13150000
* IF INDEX(EHAREGS,'00P')=0  /* REGISTER 0 PREVIOUSLY DEFINED?       */ 13350000
*   THEN                     /* NO  -                                */ 13400000
*     EHAREGS=EHAREGS||'00P';/*       DEFINE IT.                     */ 13450000
* IF INDEX(EHAREGS,'01P')=0  /* REGISTER 1 PREVIOUSLY DEFINED?       */ 13500000
*   THEN                     /* NO  -                                */ 13550000
*     EHAREGS=EHAREGS||'01P';/*       DEFINE IT.                     */ 13600000
* IF INDEX(EHAREGS,'02P')=0  /* REGISTER 2 PREVIOUSLY DEFINED?       */ 13650000
*   THEN                     /* NO  -                                */ 13700000
*     EHAREGS=EHAREGS||'02P';/*       DEFINE IT.                     */ 13750000
* IF INDEX(EHAREGS,'12P')=0  /* REGISTER 12 PREVIOUSLY DEFINED?      */ 13800000
*   THEN                     /* NO  -                                */ 13850000
*     EHAREGS=EHAREGS||'12P';/*       DEFINE IT.                     */ 13900000
* IF INDEX(EHAREGS,'13P')=0  /* REGISTER 13 PREVIOUSLY DEFINED?      */ 13950000
*   THEN                     /* NO  -                                */ 14000000
*     EHAREGS=EHAREGS||'13P';/*       DEFINE IT.                     */ 14050000
* IF INDEX(EHAREGS,'14P')=0  /* REGISTER 14 PREVIOUSLY DEFINED?      */ 14100000
*   THEN                     /* NO  -                                */ 14150000
*     EHAREGS=EHAREGS||'14P';/*       DEFINE IT.                     */ 14200000
* IF INDEX(EHAREGS,'15F')=0  /* FIXED REG 15 PREVIOUSLY DEFINED?     */ 14250000
*   THEN                     /* NO  -                                */ 14300000
*     EHAREGS=EHAREGS||'15F';/*       DEFINE IT.                     */ 14350000
*/********************************************************************/ 14400000
*/*                GENERATE LINKAGE TO AXRES SERVICE                 */ 14450000
*/********************************************************************/ 14500000
* ANS('RESPECIFY')                                COL(IVINDNT2);        14650000
* ANS('(GPR00P,')                                 COL(IVINDNT2+1);      14700000
* ANS('GPR01P,')                                  COL(IVINDNT2+2);      14750000
* ANS('GPR02P,')                                  COL(IVINDNT2+2);      14800000
* ANS('GPR13P,')                                  COL(IVINDNT2+2);      14840000
* ANS('GPR14P,')                                  COL(IVINDNT2+2);      14880000
* ANS('GPR15F) RESTRICTED;')                      COL(IVINDNT2+2);      14920000
* ANS('STM(GPR14P,GPR12P,SA@G1412);')             COL(IVINDNT2);        14960000
* ANS(COMMENT(' SAVE CALLER''S REGS            ')) COL(CC);             15000000
* IF IVLP1 ^= 1              /* IF NOT POINTER FORM ADDRESS  @ZMB0031*/ 15040000
*   THEN DO;                                                            15080000
*     ANS('GPR00P=ADDR('||AXLIST(1)||');')             COL(IVINDNT2);   15120000
*     ANS(COMMENT(' AXLIST ADDRESS TO PARM REG 0  '))  COL(CC);         15160000
*   END;                                                                15200000
*   ELSE DO;                                                            15240000
*     ANS('GPR00P='||AXLIST(1,IVLP1+1:IVRP1-1)||';')   COL(IVINDNT2);   15280000
*     ANS(COMMENT(' AXLIST ADDRESS TO PARM REG 0  '))  COL(CC);         15320000
*   END;                                                                15360000
* ANS('GPR01P=0;')                                COL(IVINDNT2);        15400000
* ANS(COMMENT(' PARM REG 1 MUST BE ZERO       ')) COL(CC);              15440000
* ANS('ESAR(SA@GPR15);')                          COL(IVINDNT2);        15453300
* ANS(COMMENT('SAVE SASID                     ')) COL(CC);              15466600
* ANS('GPR02P=XM@(7);')                           COL(IVINDNT2);        15480000
* ANS(COMMENT(' GET LX/EX FOR AXRES FROM SFT  ')) COL(CC);              15520000
* ANS('GEN (DS 0H);') COL(IVINDNT2);  /* MAKE PL/AS USE SAVEAREA @P1A*/ 15540000
* ANS('PC(GPR02P);')                              COL(IVINDNT2);        15560000
* ANS(COMMENT(' PC TO AXRES SERVICE           ')) COL(CC);              15600000
* ANS('SSAR(SA@GPR15);')                          COL(IVINDNT2);        15613300
* ANS(COMMENT('RESTORE SASID                  ')) COL(CC);              15626600
* ANS('LM(GPR02P,GPR12P,SA@G0212);')              COL(IVINDNT2);        15640000
* ANS(COMMENT(' RESTORE REGS 2-12             ')) COL(CC);              15680000
* ANS('GPR14P=SA@GPR14;')                         COL(IVINDNT2);        15720000
* ANS(COMMENT(' RESTORE REG 14                ')) COL(CC);              15760000
* ANS('RESPECIFY')                                COL(IVINDNT2);        15800000
* ANS('(GPR00P,')                                 COL(IVINDNT2+1);      15840000
* ANS('GPR01P,')                                  COL(IVINDNT2+2);      15880000
* ANS('GPR02P,')                                  COL(IVINDNT2+2);      15920000
* ANS('GPR13P,')                                  COL(IVINDNT2+2);      16150000
* ANS('GPR14P,')                                  COL(IVINDNT2+2);      16200000
* ANS('GPR15F) UNRESTRICTED;')                    COL(IVINDNT2+2);      16250000
*/********************************************************************/ 16300000
*/*                CLOSE OUT DO GROUP AND RETURN                     */ 16350000
*/********************************************************************/ 16400000
*LHA09000:                   /* CLOSE OUT DO GROUP.                  */ 16450000
* ANS('END; ') COL(MACCOL);                                             16500000
* RETURN CODE(IVRC);                                                    16550000
*/********************************************************************/ 16750000
*/*                END OF AXRES MACRO                                */ 16800000
*/********************************************************************/ 16850000
* % END AXRES;                                                          16900013
