*%/*                                                                    00050000
         MACRO                                                          00100000
&NAME    SVCUPDTE &SVC,&FUNC,&TYPE=,&EP=,&LOCKS=,&NPRMPT=,&MF=,        -00150000
               &APF=,&AR=,&EPNAME=,&RELATED=,&ESR=,&USEECVT=NO     @L4C 00200000
.********************************************************************** 00250000
.*  START OF SPECIFICATIONS ***                                       * 00300000
.*                                                                    * 00550000
.*01* MACRO-NAME = SVCUPDTE                                           * 00600000
.*                                                                    * 00650000
.*01* DYNAMIC SVC TABLE ENTRY UPDATE MACRO                            * 00668900
.*                                                                    * 00687800
.*01* COPYRIGHT =                                                 @L3C* 00706700
.*                                                                    * 00725600
.*        LICENSED MATERIALS - PROPERTY OF IBM                        * 00744500
.*        THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                 * 00763400
.*        5647-A01 (C) COPYRIGHT IBM CORP. 1981, 2000                 * 00782300
.*                                                                    * 00801200
.*01* STATUS = HBB7703                                            @L3C* 00808700
.*                                                                    * 00816200
.*01* EXTERNAL CLASSIFICATION: PI                                     * 00823700
.*01* END OF EXTERNAL CLASSIFICATION:                                 * 00831200
.*                                                                    * 00839000
.*01* FUNCTION -                                                      * 00857900
.*      GENERATE LINKAGE AND/OR PARAMETER LIST FOR SVC TABLE UPDATE   * 00876800
.*      SERVICE (IEAVESTU)                                            * 00895700
.*                                                                    * 00914600
.*01* OPERATION-                                                      * 00933500
.*      THE INDIVIDUAL PARAMETERS ARE CHECKED AS APPROPRIATE TO THE   * 00952400
.*         TYPE OF MF PARAMETER USED                                  * 00971300
.*      IF THERE ARE NO FATAL ERRORS THEN THE APPROPRIATE CODE IS     * 00990200
.*         GENERATED                                                  * 01009100
.*                                                                    * 01028000
.*01* DEPENDENCIES-                                                   * 01046900
.*      THE FOLLOWING MACROS MUST BE INCLUDED IN THE SOURCE PROGRAM   * 01065800
.*      CVT    - TO MAP THE FIELD CVTNUCLU                            * 01084700
.*      EPILOG - TO DECLARE REGISTER VARIABLES (PLS ONLY)             * 01103600
.*      IHAPSA - TO SUPPLY CVT BASE                                   * 01122500
.*      IHAECVT - FOR ECVTESTU (OS/390 R6 ONLY)                       * 01131900
.*      NUCLKUP- TO FIND THE SVC UPDATE SERVICE ENTRY POINT (IEAVESTU)* 01141400
.*                                                                    * 01160300
.*      THE PARAMETER LIST MUST BE WRITABLE TO UPDATE THE SVC ENTRY   * 01179200
.*      POINT FIELD FOR THE EXECUTE FORM                              * 01198100
.*                                                                    * 01217000
.*01* CHANGE-ACTIVITY=                                                * 01220100
.*                                                                    * 01223200
.*  OY11662 - GENERATE A VERSION 2 PARAMETER LIST ONLY WHEN EXTRACT   * 01224100
.*            OR EPNAME ARE SPECIFIED. OTHERWISE, GENERATE A          * 01225000
.*            VERSION 1 PARAMETER LIST.                       @YA11662* 01225900
.*                                                                    * 01226800
.*  $L1=IOGEN    JBB2220   840813  PD16FH: IOGEN RESTRUCTURE          * 01227800
.*  $L2=PLAS     JBB2220   840813  PD16FH: PLAS CHANGES               * 01230100
.*  $P1=PA20113  JBB2220   850211  PD16FH: ACCEPT ATTRIBUTE OPTION ON * 01230900
.*                                         PLAS LIST FORM             * 01231700
.*  $P2=PA20140  JBB2220   850417  PD16FH: FIX MNOTES                 * 01232100
.*  $P3=PA20437  JBB2220   851014  PD16FH: AUTOMATIC ATTRIBUTE SUPPORT* 01232300
.*  $P4=PA20544  JBB2220   851014  PD16FH: CLEANUP/IMPROVE MNOTES     * 01232400
.*  $P5=PA21193  JBB2220   860903  PD16FH: DELETE LINE THAT RESETS    * 01233200
.*                                         FUNCTION FROM "EXTRACT"    * 01234000
.*  $L3=AR       HBB3310   850925  PD16FH: ACCESS REGISTERS           * 01234400
.*  OY34751 - ADD EQUAL SIGN (=) TO RELATED PARAMATER SO THAT @YA34751* 01234500
.*            IT IS AN ACCEPTABLE PARAMETER.                  @YA34751* 01234600
.*  $L4=64BITSUP HBB7703 981204 PD00XB: ESAME                         * 01234700
.*  $P6=PXDXXXX  HBB7703 990525 PD00XB: DELETE STATIC MF=L            * 01235100
.*                                                                    * 01235500
.*02* INPUT -                                                         * 01235900
.*       APF      AUTHORIZATION CODE FOR THE SVC                      * 01254800
.*       AR       SVC MAY BE ISSUED IN ACCESS REGISTER MODE       @L3A* 01264200
.*       EP       POINTER DEFINED ENTRY POINT ADDRESS                 * 01273700
.*       FUNC     IS THE OPERATION TO PERFORM                         * 01292600
.*       LOCKS    LOCKS TO BE OBTAINED FOR SVC                        * 01311500
.*                   TYPE 1 LOCKS DEFAULT TO                          * 01330400
.*                      HAVING THE LOCAL LOCK                         * 01350000
.*                   TYPE 3 + 4 MAY NOT HAVE ANY GLOBAL               * 01383300
.*                      SPIN LOCKS                                @L1C* 01416600
.*                   TYPE 6 MAY NOT HAVE LOCKS                        * 01450000
.*                                                                    * 01460900
.*       MF       TYPE OF SVCUPDTE MACRO                              * 01471800
.*                  MF=(E,ADDR) EXECUTABLE                            * 01482700
.*                    =L        PARAMETER LIST                        * 01493600
.*                     STANDARD COMBINED LIST AND EXECUTABLE FORM     * 01504500
.*       NPRMPT   NON-PREEMPTIVE SVC                                  * 01515400
.*       RELATED  USER COMMENT                                        * 01526300
.*       SVC      IS THE SVC NUMBER WHOSE TABLE ENTRY IS TO BE        * 01537200
.*                MODIFIED                                            * 01548100
.*       TYPE     SVC TYPE                                            * 01559000
.*                                                                    * 01569900
.*    TOKEN            VALUE RANGE                                    * 01580800
.*    -----            -----------                                    * 01591700
.*     APF              YES,NO                                        * 01602600
.*     AR               YES,NO                                    @L3A* 01608000
.*     EP               POINTER-DEFINED ENTRY POINT ADDRESS       @L1C* 01613500
.*     FUNC          REPLACE,DELETE,EXTRACT,EXTRACTANY            @L4C* 01624400
.*     LOCKS    (LOCAL,DISP,SRM,CMS,SALLOC)                   @ZMC3226* 01635300
.*     NPRMPT           YES,NO                                        * 01646200
.*     SVC              0-255                                         * 01657100
.*     TYPE             1-6                                           * 01668000
.*     EPNAME           1-8 CHARACTER NAME                        @L1A* 01673400
.*                                                                    * 01678900
.*    TOKEN          MF=E            MF=L         MF=STANDARD         * 01689800
.*    -----          ----            ----         -----------         * 01700700
.*     APF           ERROR            OK              OK              * 01711600
.*     AR            ERROR            OK              OK          @L3A* 01717000
.*     EP OR EPNAME   OK**            OK**         MANDATORY+     @L1C* 01722500
.*     FUNC          ERROR         MANDATORY       MANDATORY          * 01733400
.*     LOCKS         ERROR            OK              OK              * 01744300
.*     NPRMPT        ERROR            OK              OK              * 01755200
.*     RELATED      OPTIONAL       OPTIONAL         OPTIONAL          * 01766100
.*     SVC            OK*             OK*          MANDATORY          * 01777000
.*     TYPE          ERROR         MANDATORY       MANDATORY          * 01787900
.*                                                                    * 01798800
.*             + - TYPE 5 SVC ARE NOT ALLOWED TO HAVE AN ENTRY POINT  * 01809700
.*                                                                    * 01853300
.*             * - EITHER THE MF=L OR THE MF=E VERSION MUST SUPPLY    * 01856000
.*                 THIS PARAMETER OR ELSE THE REQUEST WILL BE REJECTED* 01858700
.*                 BY IEAVESTU                                        * 01861400
.*                                                                    * 01864200
.*             **- EITHER THE MF=L OR THE MF=E VERSION MUST SUPPLY ONE* 01865500
.*                 OF THESE PARAMETERS OR THE REQUEST WILL BE REJECTED* 01866800
.*                 BY IEAVESTU                                    @L1A* 01868100
.*                                                                    * 01869600
.*             NOTE - IF 'EXTRACT' IS SPECIFIED, THE SVC NUMBER MUST  * 01870300
.*                 NOT BE SUPPLIED. STANDARD 'EXTRACT' REQUESTS MUST  * 01871000
.*                 BE CODED AS IN THE FOLLOWING EXAMPLE:              * 01871700
.*                                                                    * 01872400
.*                 SVCUPDTE ,EXTRACT,EP=MYSVC                         * 01873100
.*                                                                    * 01873800
.*02* OUTPUT -                                                        * 01875100
.*                                                                    * 01886000
.*   MF = L     - IEAVESTU PARAMETER LIST                             * 01900000
.*        E     - LINKAGE CODE TO INVOKE IEAVESTU WITH GIVEN          * 01950000
.*                PARAMETER LIST                                      * 02000000
.*        ''    - LINKAGE AND PARAMETER LIST                          * 02050000
.*                                                                    * 02058300
.*01* COMPONENT = SC1C5 (SUPERVISOR CONTROL)                      @L1A* 02066600
.*                                                                    * 02083200
.*01* DISTRIBUTION LIBRARY = AMACLIB                              @L1A* 02088800
.*                                                                    * 02094400
.*A000000-999999                                              @G860P36* 02100000
.*** END OF SPECIFICATIONS                                            * 02150000
.********************************************************************** 03000000
         ACTR    100               LIMIT LOOPING TO 100 ITERATIONS      03050000
.*                                                                      03100000
.*                                                                      03150000
.*        THE FOLLOWING DECLARES MACRO VARIABLES-                       03200000
.*            ARITHMETIC VARIABLES ARE AUTOMATICALLY SET TO ZERO        03250000
.*            CHARACTER  VARIABLES ARE SET TO THE NULL STRING           03300000
.*                                                                      03350000
         LCLA &REQLOCK,&INDEX1,&INDEX2,&TEMP,&SVCNUM,&FUNCNUM,&TYPENUM,-03450000
               &APFNUM,&NPNUM,&NCMS,&NDISP,&NLOCAL,&NSRM,&NSALLOC,&NNP,-03500000
               &NAPF,&SVCFLAG,&SVCOFF,&DELETE,&REPLACE,&EXTRACT    @L1C 03550000
         LCLA  &ARNUM,&NAR                                         @L3A 03600000
         LCLA  &ESRNUM,&ESROFF,&ESRFLAG                            @L4A 03616600
         LCLA  &EXTRACTANY                                         @L4A 03633300
.*                                                                      03650000
.*            APFNUM               APF CODE                             03654700
.*            ARNUM                AR CODE                         @L3A 03657000
.*            DELETE               FUNCTION CODE VALUE FOR DELETE       03659400
.*            EXTRACT              FUNCTION CODE VALUE FOR EXTRACT @L1A 03661700
.*            EXTRACTANY        FUNCTION CODE VALUE FOR EXTRACTANY @L4A 03662900
.*            FUNCNUM              FUNCTION NUMBER                      03664100
.*            INDEX1               GENERAL INDEX                        03668800
.*            INDEX2               GENERAL INDEX                        03673500
.*            NAPF                 VALUE OF THE APF BIT IN SVC ENTRY    03678200
.*            NAR                  VALUE OF AR BIT IN SVC ENTRY    @L3A 03680500
.*            NCMS                 VALUE OF THE CMS BIT IN SVC ENTRY    03682900
.*            NDISP                VALUE OF THE DISP BIT IN SVC ENTRY   03687600
.*            NLOCAL               VALUE OF THE LOCAL BIT IN SVC ENTRY  03692300
.*            NNP                  VALUE OF THE NON-PREMPT BIT          03697000
.*            NSRM                 VALUE OF THE SRM BIT IN SVC @ZMC3226 03700100
.*                                 ENTRY                       @ZMC3226 03703200
.*            NSALLOC              VALUE OF THE SALLOC BIT IN SVC ENTRY 03706400
.*            REPLACE              REPLACE FUNCTION CODE VALUE          03711100
.*            SVCOFF               OFFSET OF THE SVC NUMBER IN PARM     03715800
.*            ESROFF               OFFSET OF EXTENDED SVC # IN PARM     03718100
.*            NPNUM                NON-PREEMPTIBILITY CODE              03720500
.*            REQLOCK              LOCKS BYTE                           03725200
.*            SVCNUM               SVC NUMBER                           03729900
.*            ESRNUM               EXTENDED SVC PARAMETER          @L4A 03732200
.*            SVCFLAG              SVC NUMBER SUPPLIED INDICATOR        03734600
.*            ESRFLAG              ESR NUMBER SUPPLIED INDICATOR   @L4A 03736900
.*            TEMP                 TEMPORARY                            03739300
.*            TYPENUM              SVC TYPE NUMBER                      03744000
.*                                                                      03750000
         LCLC &VERSION,&CHARS,&ACHAR,&BADENT,&LAB1,&LAB2,&LAB3,&EPOFF   03800000
         LCLC &EPNOFF                                              @L1C 03850000
         LCLC &EPCHAR                                              @L1A 03866600
         LCLC &EPMSG                                               @L1A 03883200
         LCLC &INCONS      STRING FOR INCONSISTENT OPERANDS        @P4A 03887400
         LCLC &INSPEC(10)  ARRAY OF KEYWORD ATTRIBUTES             @L3C 03891600
         LCLC &BADSPEC(10) ARRAY OF KEYWORD NAMES FOR MESSAGE      @L3C 03895800
         LCLC  &EXTSVC                                             @L4A 03897900
.*                                                                      03900000
.*            ACHAR                SINGLE CHARACTER TEMPORARY           03914200
.*            BADENT               SET TO 'YES' INDICATES FATAL ERROR   03928400
.*            CHARS                MULTIPLE CHARACTER TEMPORARY         03942600
.*            EPCHAR               TEMP VARIABLE: EP OR EPNAME     @L1A 03947300
.*            EPMSG                TEMP VARIABLE: ENTRY-POINT MSG  @L1A 03952000
.*            EPOFF                OFFSET OF ENTRY POINT IN PARM LIST   03956800
.*            EPNOFF               OFFSET OF EPNAME IN PARM LIST   @L1A 03963900
.*            MACDATE              DATE MACRO LAST MODIFIED             03971000
.*            VERSION              SVCUPDTE VERSION NUMBER              03985200
.*            EXTSVC               KNOWN TO BE EXTENDED                 03992600
.*                                                                      04000000
.********************************************************************** 04007100
.*                                                                    * 04014200
.*                   INITIALIZE FOR PROCESSING                        * 04021300
.*                                                                    * 04028400
.********************************************************************** 04035500
*        MACDATE=06/23/99                                               04042600
&BADENT  SETC  'NO'                   NO ERROR DETECTED YET             04049700
&EPOFF   SETC    '4'                  OFFSET OF THE ENTRY POINT IN LIST 04063900
&EPNOFF  SETC    '12'                 OFFSET OF THE EPNAME IN LIST @L1A 04067400
&LAB1    SETC  'IHA'.'&SYSNDX'.'A'    FIRST  GENERATED LABEL            04071000
&LAB2    SETC  'IHA'.'&SYSNDX'.'B'    SECOND GENERATED LABEL            04078100
&LAB3    SETC  'IHA'.'&SYSNDX'.'C'    THIRD  GENERATED LABEL            04085200
&NAPF    SETA    8                    VALUE OF THE APF BIT IN SVC ENTRY 04092300
&NAR     SETA    4                    VALUE OF AR BIT IN SVC ENTRY @L3A 04095800
&NCMS    SETA   64                    VALUE OF THE CMS                  04099400
&NDISP   SETA    8                    VALUE OF THE DISP                 04106500
&NLOCAL  SETA  128                    VALUE OF THE LOCAL                04113600
&NNP     SETA    2                    VALUE OF THE NON-PREMPT           04120700
&NSRM    SETA   32                    VALUE OF THE SRM         @ZMC3226 04127800
&NSALLOC SETA   16                    VALUE OF THE SALLOC               04134900
&REPLACE SETA    1                    REPLACE FUNCTION CODE             04142000
&DELETE  SETA    2                    DELETE FUNCTION CODE         @L1M 04144300
&EXTRACT SETA    3                    EXTRACT FUNCTION CODE        @L1A 04146600
.*ALL FUNCTIONS OTHER THAN EXTRACT/EXTRACTANY MUST HAVE LOWER FUNCTION  04147200
.*NUMBERS THAN EXTRACT, SINCE WE TEST FOR ">="                          04147800
&EXTRACTANY SETA 4                    EXTRACTANY CODE              @L4A 04148400
&SVCOFF  SETA    3                    OFFSET OF THE SVC NUMBER IN       04149100
.*                                    THE PARAMETER LIST                04156200
&ESROFF SETA     11                   OFFSET OF THE SVC EXTENSION  @L4A 04158500
.*                                    IN THE PARAMETER LIST             04160800
&VERSION SETC   '1'                   INITIALIZE TO VERSION 1  @YA11662 04163300
.********************************************************************** 04170400
.*                                                                    * 04177500
.*                   VALIDATE MF PARAMETER                            * 04184600
.*                                                                    * 04191700
.********************************************************************** 04198800
         AIF   (T'&MF EQ 'O' OR                                        -04205900
               '&MF(1)' EQ 'E' AND N'&MF EQ 2 OR                       -04213000
               '&MF' EQ 'L' AND N'&MF EQ 1).L0020                  @L1C 04220100
.*       MSG: "INVALID MF OPERAND SPECIFIED- "                          04227200
         IHBERMAC 1001,MF,&MF                                           04234300
&BADENT  SETC  'YES'                  FATAL ERROR DETECTED              04241400
.L0020   ANOP                                                      @L1C 04250000
         AIF   ('&MF(1)' NE 'E').L0040                             @L1C 04275000
.*                                                                      04300000
.*       IS THIS AN EXECUTE FORM OF THE MACRO?                          04350000
.*          YES: MAKE SURE THERE WERE NO UNNECESSARY PARAMETERS         04400000
.*                                                                      04450000
&INSPEC(1)  SETC T'&TYPE                                           @P4A 04481200
&BADSPEC(1) SETC 'TYPE'                                            @P4A 04512400
&INSPEC(2)  SETC T'&LOCKS                                          @P4A 04543600
&BADSPEC(2) SETC 'LOCKS'                                           @P4A 04574800
&INSPEC(3)  SETC T'&NPRMPT                                         @P4A 04606000
&BADSPEC(3) SETC 'NPRMPT'                                          @P4A 04637200
&INSPEC(4)  SETC T'&APF                                            @P4A 04668400
&BADSPEC(4) SETC 'APF'                                             @P4A 04699600
&INSPEC(5)  SETC T'&AR                                             @L3A 04710000
&BADSPEC(5) SETC 'AR'                                              @L3A 04720400
.*                                                                      04730800
.* FIRST TEST IF REPLACE, DELETE, OR EXTRACT SPECIFIED                  04731200
.*                                                                      04731600
&INCONS  SETC  ''              CLEAR ERROR STRING                  @P4A 04732000
         AIF  (T'&FUNC EQ 'O').L0022    IF A FUNCTION SPECIFIED    @P4A 04732400
&INCONS  SETC '&FUNC'                   THEN MOVE TO ERROR MESSAGE @P4A 04732800
.L0022   ANOP                                                           04733200
.*                                                                      04733600
.* LOOP THROUGH INPUT DATA IN ARRAY AND FORMAT MESSAGE STRING           04734000
.*                                                                      04734400
&INDEX1  SETA 0                                                         04734800
.L0025   ANOP                                                      @L1C 04735200
&INDEX1  SETA (&INDEX1+1)                    BUMP LOOP             @P4A 04735600
         AIF  (&INDEX1 GT 5).L0034                                 @L3C 04736000
.*                                                                      04736400
.*       TEST FOR A KEYWORD SPECIFICATION                               04736800
.*         BY CHECKING ARRAY ENTRY NOT EQUAL TO "OMITTED"               04737200
.*                                                                      04737600
         AIF   ('&INSPEC(&INDEX1)' EQ 'O').L0032  TEST KEY         @P4A 04738000
.*    INCONSISTENT KEYWORD DETECTED -- PUT KEY INTO ERROR MESSAGE       04738400
         AIF   ('&INCONS' EQ '').L0030       IF NOT 1ST ERROR      @P4A 04738800
&INCONS  SETC  '&INCONS'.','.'&BADSPEC(&INDEX1)'  THEN ADD KEY     @P4A 04739200
         AGO   .L0032                                                   04739600
.L0030   ANOP                                                           04740000
&INCONS  SETC  '&BADSPEC(&INDEX1)'           ELSE ASSIGN 1ST KEY   @P4A 04740400
.L0032   ANOP                                                           04740800
         AGO   .L0025                        LOOP TILL DONE        @P4A 04741200
.*                                                                      04741600
.*       END OF TEST LOOP - PRINT MNOTE IF NECESSARY                    04742000
.*                                                                      04742400
.L0034   ANOP                                                           04742800
         AIF   ('&INCONS' EQ '').L0040                                  04743200
.*                                                                      04743600
.*       MSG: "XX,YY,ZZ OPERAND INCONSISTENT-IGNORED."                  04744000
         IHBERMAC 147,&INCONS                                           04744400
.L0040   ANOP                                                      @P4C 04744800
.*                                                                      04745200
.*  SCREEN 'EXTRACT' REQUESTS                                      @L1A 04746200
.*                                                                      04761600
         AIF   ('&FUNC' EQ 'EXTRACT').L0300A      YES: BRANCH      @L1A 04766700
         AIF   ('&FUNC' EQ 'EXTRACTANY').L0300B   YES: BRANCH      @L4A 04771800
.*                                                                      04777000
.*  CHECK FOR EXTRACT REQUEST WITH SVC PARAMETER CODED WRONG       @L1A 04784700
.*                                                                      04792400
&FUNCNUM SETA   &EXTRACT                                           @L4A 04793300
         AIF   ('&SVC' EQ 'EXTRACT').L0050A       YES: BRANCH      @L1A 04794200
&FUNCNUM SETA   &EXTRACTANY                                        @L4A 04795100
         AIF   ('&SVC' NE 'EXTRACTANY').L0050     NO: BRANCH       @L4A 04796000
.L0050A  ANOP                                                      @L4A 04796900
.*       MSG: "EXTRACT PARAMETER SPECIFIED IN WRONG POSITION."          04798100
       MNOTE 12,'EXTRACT PARAMETER SPECIFIED IN WRONG POSITION.'   @P2C 04800000
&BADENT  SETC  'YES'                      FATAL ERROR DETECTED     @L1A 04801900
         AGO   .L0440                                                   04803800
.L0050   ANOP                                                      @L1C 04805700
.********************************************************************** 04808300
.*                                                                    * 04816600
.*                   VALIDATE SVC PARAMETER                           * 04824900
.*                                                                    * 04833200
.********************************************************************** 04841500
.*                                                                      04850000
.*       IF THE SVC NUMBER IS NOT VALID INDICATE ERROR                  05050000
.*                                                                      05100000
.*            MF     OMITTED   REGISTER   SELF-DEFINING TERM DECIMAL#   05150000
.*            --     --------  --------   ------------------ --------   05200000
.*         STANDARD   ERROR       OK               OK          OK       05250000
.*            L         OK       ERROR             OK          OK       05300000
.*            E         OK        OK              ERROR       ERROR     05350000
.*                                                                      05800000
.*       IS THERE A SUB-PARAMETER LIST FOR THE SVC PARAMETER?           05801800
         AIF   (N'&SVC GT 1).L0140                  YES: ERROR     @L4M 05803600
.*                                                                      05805400
.*       IS THE SVC NUMBER SUPPLIED?                                    05807200
         AIF   (T'&SVC  NE 'O').L0060               YES: CONTINUE  @L1C 05809000
.*       THE SVC NUMBER IS OMITTED                                      05810800
&SVCFLAG SETA  1                                    REMEMBER FACT       05812600
.*       IS IT ANY CASE OTHER THAN THE MF STANDARD CASE?                05814400
         AIF   (T'&MF   NE 'O').L0200               YES: VALID     @L1C 05816200
.*       MSG: "SVC OPERAND REQUIRED, NOT SPECIFIED"                     05818000
         IHBERMAC 1006,SVC                          NO:  INVALID        05819800
&BADENT  SETC  'YES'                                                    05821600
         AGO   .L0200                                              @L1C 05823400
.*                                                                      05825200
.*       IF THIS THE REGISTER FORM OF THE SVC PARAMETER?                05827000
.L0060   AIF   ('&SVC'(1,1) NE '(').L0080      NO: TRY OTHER CASES @L1C 05828800
.*       THIS IS THE REGISTER FORM - IS IT THE RIGHT MF TYPE?           05830600
         AIF   ('&MF' NE 'L').L0200A                YES: NOT MF=L  @L4C 05832400
         AGO   .L0140                               NO:  ERROR     @L1C 05834200
.*                                                                      05836000
.*       CHECK TO SEE IF THIS IS A SELF-DEFINING TERM                   05837800
.*                                                                      05839600
.L0080   AIF   ('&SVC'(1,1) GE '0' AND '&SVC'(1,1) LE '9').L0100   @L1C 05841400
         AIF   ('&SVC'(1,1) LT 'A' OR  '&SVC'(1,1) GT 'Z').L0140   @L1C 05842300
         AIF   ('&MF(1)' EQ 'E').L0140           MF=E CASE INVALID @L1C 05843200
         AGO   .L0200A                                             @L4C 05845000
.*                                                                      05846800
.*       CHECK TO SEE IF THE SVC NUMBER IS NUMERICALLY VALID            05848600
.*                                                                      05850400
.L0100   AIF   ('&MF(1)' EQ 'E').L0140    NUMBER INVALID FOR MF=E  @L1C 05852200
&INDEX1  SETA  1                          START WITH FIRST CHARACTER    05854000
&CHARS   SETC  '&SVC(1)'                  TEMPORARY STRING         @L4C 05855800
.L0120   AIF   (K'&CHARS GT 3).L0140      TOO MANY DIGITS?         @L4C 05857600
&ACHAR   SETC  '&CHARS'(&INDEX1,1)        GET A CHARACTER FROM STRING   05859400
         AIF   ('&ACHAR' LT '0' OR '&ACHAR' GT '9').L0140  DECIMAL? @L1 05861200
&INDEX1  SETA  &INDEX1+1                  YES: INDICATE NEXT CHARACTER  05863000
         AIF   (&INDEX1 LE K'&CHARS).L0120 ALL CHARACTERS DONE?    @L1C 05864800
&SVCNUM  SETA  &CHARS                     YES: CONVERT TO NUMBER   @L4C 05866600
         AIF   (&SVCNUM GE 0 AND &SVCNUM LE 255).L0160  TOO BIG?   @L1C 05868400
.*       MSG: "INVALID SVC OPERAND SPECIFIED- "                         05870200
.L0140   IHBERMAC 1001,SVC,&SVC           YES: TELL USER           @L1C 05872000
&BADENT  SETC  'YES'                      FATAL ERROR DETECTED          05873800
         AGO   .L0200A                                             @L4C 05873900
.L0160   ANOP                                                      @L1C 05874100
.*                                                                      05874400
.*       CHECK TO SEE IF THE SVC NUMBER IS                         @L1A 05874700
.*       RESERVED FOR AN ESR TABLE                                      05875000
.*                                                                      05875300
         AIF   (&SVCNUM EQ 109).L0180                              @L1A 05875600
         AIF   (&SVCNUM EQ 116).L0180                              @L1A 05875900
         AIF   (&SVCNUM EQ 122).L0180                              @L1A 05876200
         AIF   (&SVCNUM EQ 137).L0180                              @L1A 05876500
         AIF   ('&ESR' EQ '').L0200       ESR PARAMETER: OK        @L4A 05876600
         MNOTE 12,'SVC &SVC UPDATE NOT VALID WITH ESR PARAMETER.'  @L4A 05876700
&BADENT  SETC  'YES'                      FATAL ERROR DETECTED     @L1A 05876800
         AGO   .L0200                                              @L1A 05876900
.L0180   ANOP                                                           05877100
&EXTSVC  SETC  'YES'                      EXTENDED SVC             @L4A 05877200
.L0200A  ANOP                                                      @L4A 05877300
         AIF   ('&ESR' NE '').L0199       ESR PARAMETER: OK        @L4M 05877400
         AIF   ('&EXTSVC' NE 'YES').L0199A ESR PARAMETER: OK       @L4A 05877500
         MNOTE 12,'SVC &SVC UPDATE REQUIRES ESR PARAMETER.'        @L4A 05877600
&BADENT  SETC  'YES'                      FATAL ERROR DETECTED     @L1A 05877700
         AGO   .L0200                                              @L4A 05877800
.L0199   ANOP                                                      @L4A 05877900
.L0199A  ANOP                                                      @L4A 05878000
.*                                                                      05878100
         AIF   ('&ESR' EQ '').L0200        NOT EXTENDED SVC        @L4A 05878200
&ESRFLAG SETA  2                                    REMEMBER FACT  @L4A 05878300
.*       IF THIS THE REGISTER FORM OF THE SVC PARAMETER?                05878400
.L0060A  AIF   ('&ESR'(1,1) NE '(').L0080A     NO: TRY OTHER CASES @L4A 05878500
.*       THIS IS THE REGISTER FORM - IS IT THE RIGHT MF TYPE?           05878600
         AIF   ('&MF' NE 'L').L0200                 YES: NOT MF=L  @L4A 05878700
         AGO   .L0140A                                             @L4C 05878800
.*                                                                      05878900
.*       CHECK TO SEE IF THIS IS A SELF-DEFINING TERM                   05879000
.*                                                                      05879100
.L0080A  AIF  ('&ESR'(1,1) GE '0' AND '&ESR'(1,1) LE '9').L0100A   @L4C 05879200
         AIF   ('&ESR'(1,1) LT 'A' OR '&ESR'(1,1) GT 'Z').L0140A   @L4A 05879300
         AIF   ('&MF(1)' EQ 'E').L0140A          MF=E CASE INVALID @L4A 05879400
         AGO   .L0200                                              @L4A 05879500
.*                                                                      05879600
.*       CHECK TO SEE IF THE SVC NUMBER IS NUMERICALLY VALID            05879700
.*                                                                      05879800
.L0100A  AIF   ('&MF(1)' EQ 'E').L0140A   NUMBER INVALID FOR MF=E  @L4A 05879900
&INDEX1  SETA  1                          START WITH FIRST CHARACTER    05880000
&CHARS   SETC  '&ESR(1)'                  TEMPORARY STRING         @L4A 05880100
.L0120A  AIF   (K'&CHARS GT 3).L0140A     TOO MANY DIGITS?         @L4A 05880200
&ACHAR   SETC  '&CHARS'(&INDEX1,1)        GET A CHARACTER FROM STRING   05880300
         AIF  ('&ACHAR' LT '0' OR '&ACHAR' GT '9').L0140A DECIMAL? @L4A 05880400
&INDEX1  SETA  &INDEX1+1                  YES: INDICATE NEXT CHAR  @L4A 05880500
         AIF   (&INDEX1 LE K'&CHARS).L0120A ALL CHARACTERS DONE?   @L4A 05880600
&ESRNUM SETA   &CHARS                     YES: CONVERT TO NUMBER   @L4A 05880700
         AIF   (&ESRNUM GE 0 AND &ESRNUM LE 255).L0160A TOO BIG?   @L4A 05880800
.*       MSG: "INVALID ESR OPERAND SPECIFIED- "                         05880900
.L0140A  IHBERMAC 1001,ESR,&ESR           YES: TELL USER           @L1C 05881000
&BADENT  SETC  'YES'                      FATAL ERROR DETECTED          05881100
         AGO   .L0200                                              @L4A 05881200
.L0160A  ANOP                                                      @L1C 05881300
.L0200   ANOP                                                      @L1A 05881400
         AIF   ('&MF(1)' EQ 'E').L0440    IF MF=E SKIP             @L1A 05881500
.********************************************************************** 05881600
.*                                                                    * 05881700
.*                   VALIDATE FUNCTION PARAMETER                      * 05882800
.*                                                                    * 05884600
.********************************************************************** 05886400
         AIF    ('&FUNC' NE 'REPLACE').L0220                       @L1C 05888200
&FUNCNUM SETA   &REPLACE                                                05890000
         AGO    .L0340                                             @L1C 05891800
.*                                                                      05893600
.*         IF ITS A 'DELETE' THEN ENSURE NO EXTRA PARAMETERS            05900000
.*                                                                      05950000
.L0220   AIF    ('&FUNC' NE 'DELETE').L0240                        @L1C 06000000
&FUNCNUM SETA   &DELETE                                                 06050000
&INSPEC(1)  SETC T'&TYPE                                           @P4A 06060900
&BADSPEC(1) SETC 'TYPE'                                            @P4A 06071800
&INSPEC(2)  SETC T'&LOCKS                                          @P4A 06082700
&BADSPEC(2) SETC 'LOCKS'                                           @P4A 06093600
&INSPEC(3)  SETC T'&NPRMPT                                         @P4A 06104500
&BADSPEC(3) SETC 'NPRMPT'                                          @P4A 06115400
&INSPEC(4)  SETC T'&APF                                            @P4A 06126300
&BADSPEC(4) SETC 'APF'                                             @P4A 06137200
&INSPEC(5)  SETC T'&EP                                             @P4A 06148100
&BADSPEC(5) SETC 'EP'                                              @P4A 06159000
&INSPEC(6)  SETC T'&EPNAME                                         @P4A 06169900
&BADSPEC(6) SETC 'EPNAME'                                          @P4A 06180800
&INSPEC(7)  SETC T'&AR                                             @L3A 06184400
&BADSPEC(7) SETC 'AR'                                              @L3A 06188000
.*                                                                      06191700
.* LOOP THROUGH INPUT DATA IN ARRAY AND FORMAT MESSAGE STRING           06202600
.*                                                                      06213500
&INDEX1  SETA 0                INITIALIZE LOOP COUNTER             @P4A 06224400
&INCONS  SETC  ''              CLEAR ERROR STRING                  @P4A 06235300
.L0224   ANOP                                                      @P4A 06246200
&INDEX1  SETA (&INDEX1+1)                    BUMP LOOP             @P4A 06257100
         AIF  (&INDEX1 GT 7).L0236                                      06268000
.*                                                                      06278900
.*       TEST FOR A KEYWORD SPECIFICATION                               06289800
.*         BY CHECKING ARRAY ENTRY NOT EQUAL TO "OMITTED"               06300700
.*                                                                      06311600
         AIF   ('&INSPEC(&INDEX1)' EQ 'O').L0232  TEST KEY         @P4A 06322500
.*    INCONSISTENT KEYWORD DETECTED -- PUT KEY INTO ERROR MESSAGE       06333400
         AIF   ('&INCONS' EQ '').L0228       IF NOT 1ST ERROR      @P4A 06344300
&INCONS  SETC  '&INCONS'.','.'&BADSPEC(&INDEX1)'  THEN ADD KEY     @P4A 06355200
         AGO   .L0232                                                   06366100
.L0228   ANOP                                                           06377000
&INCONS  SETC  '&BADSPEC(&INDEX1)'           ELSE ASSIGN 1ST KEY   @P4A 06387900
.L0232   ANOP                                                           06398800
         AGO   .L0224                        LOOP TILL DONE        @P4A 06409700
.*                                                                      06420600
.*       END OF TEST LOOP - PRINT MNOTE IF NECESSARY                    06431500
.*                                                                      06442400
.L0236   ANOP                                                           06453300
         AIF   ('&INCONS' EQ '').L0960                                  06464200
.*                                                                      06475100
.*       MSG: "XX,YY,ZZ OPERAND INCONSISTENT-IGNORED."                  06486000
         IHBERMAC 147,&INCONS                                           06496900
         AGO   .L0960                                                   06507800
.L0240   ANOP                                                      @L1C 06520000
&BADENT  SETC  'YES'                 FATAL ERROR DETECTED               06540000
         AIF   (T'&FUNC EQ 'O').L0260                              @L1C 06560000
.*       MSG: "INVALID FUNCTION OPERAND SPECIFIED- "                    06580000
         IHBERMAC 1001,FUNCTION-CODE,&FUNC                              06600000
         AGO   .L0340                                              @L1C 06620000
.L0260   ANOP                                                      @L1C 06640000
.*       MSG: "FUNCTION-CODE OPERAND REQUIRED, NOT SPECIFIED"           06660000
.L0280   IHBERMAC 1006,FUNCTION-CODE                               @L1C 06662000
         AGO   .L0340                                              @L1A 06664000
.L0300A  ANOP                                                      @L4A 06664200
&FUNCNUM SETA   &EXTRACT                                           @L4A 06664400
         AGO    .L0300                                             @L4A 06664600
.L0300B  ANOP                                                      @L4A 06664800
&FUNCNUM SETA   &EXTRACTANY                                        @L4A 06665000
         AGO    .L0300                                             @L4A 06665200
.L0300   ANOP                                                      @L1A 06666000
.*                                                                      06668000
.*         FOR AN 'EXTRACT' ENSURE NO EXTRA PARAMETERS             @L1A 06670000
.*                                                                      06672000
&VERSION SETC   '2'       EXTRACT IS A VERSION 2 SPECIFICATION @YA11662 06675200
&SVCFLAG SETA  1                                                   @L1A 06676500
&ESRFLAG SETA  0                                                   @L4A 06677700
         AIF    (T'&SVC EQ 'O').L0320               SVC SPECIFIED? @L1A 06679000
.*       MSG: "SVCNUM AND EXTRACT OPTIONS ARE MUTUALLY EXCLUSIVE"       06684000
       MNOTE 12,'SVCNUM AND EXTRACT OPTIONS ARE MUTUALLY EXCLUSIVE.'    06686000
&BADENT  SETC  'YES'                      FATAL ERROR DETECTED     @L1A 06688000
.L0320   ANOP                                                           06692000
         AIF    (T'&ESR EQ 'O').L0321               ESR SPECIFIED? @L4A 06692100
.*       MSG: "ESR AND EXTRACT OPTIONS ARE MUTUALLY EXCLUSIVE"          06692200
       MNOTE 12,'ESR AND EXTRACT OPTIONS ARE MUTUALLY EXCLUSIVE.'  @L4A 06692300
&BADENT  SETC  'YES'                      FATAL ERROR DETECTED     @L4A 06692400
.L0321   ANOP                                                      @L4A 06692500
&INSPEC(1)  SETC T'&TYPE                                           @P4A 06692600
&BADSPEC(1) SETC 'TYPE'                                            @P4A 06692700
&INSPEC(2)  SETC T'&LOCKS                                          @P4A 06692800
&BADSPEC(2) SETC 'LOCKS'                                           @P4A 06692900
&INSPEC(3)  SETC T'&NPRMPT                                         @P4A 06693000
&BADSPEC(3) SETC 'NPRMPT'                                          @P4A 06693100
&INSPEC(4)  SETC T'&APF                                            @P4A 06693200
&BADSPEC(4) SETC 'APF'                                             @P4A 06693300
&INSPEC(5)  SETC T'&AR                                             @L3A 06693400
&BADSPEC(5) SETC 'AR'                                              @L3A 06693500
.*                                                                      06693600
.* LOOP THROUGH INPUT DATA IN ARRAY AND FORMAT MESSAGE STRING           06693700
.*                                                                      06693800
&INDEX1  SETA 0                INITIALIZE LOOP COUNTER             @P4A 06693900
&INCONS  SETC  ''              CLEAR ERROR STRING                  @P4A 06694000
.L0324   ANOP                                                      @P4A 06694100
&INDEX1  SETA (&INDEX1+1)                    BUMP LOOP             @P4A 06694200
         AIF  (&INDEX1 GT 5).L0336                                      06694300
.*                                                                      06694400
.*       TEST FOR A KEYWORD SPECIFICATION                               06694500
.*         BY CHECKING ARRAY ENTRY NOT EQUAL TO "OMITTED"               06694600
.*                                                                      06694700
         AIF   ('&INSPEC(&INDEX1)' EQ 'O').L0332  TEST KEY         @P4A 06694800
.*    INCONSISTENT KEYWORD DETECTED -- PUT KEY INTO ERROR MESSAGE       06694900
         AIF   ('&INCONS' EQ '').L0328       IF NOT 1ST ERROR      @P4A 06695000
&INCONS  SETC  '&INCONS'.','.'&BADSPEC(&INDEX1)'  THEN ADD KEY     @P4A 06695100
         AGO   .L0332                                                   06695200
.L0328   ANOP                                                           06695300
&INCONS  SETC  '&BADSPEC(&INDEX1)'           ELSE ASSIGN 1ST KEY   @P4A 06695400
.L0332   ANOP                                                           06695500
         AGO   .L0324                        LOOP TILL DONE        @P4A 06695600
.*                                                                      06695700
.*       END OF TEST LOOP - PRINT MNOTE IF NECESSARY                    06695800
.*                                                                      06695900
.L0336   ANOP                                                           06696000
         AIF   ('&INCONS' EQ '').L0440                                  06696100
.*                                                                      06696200
.*       MSG: "XX,YY,ZZ OPERAND INCONSISTENT-IGNORED."                  06696300
         IHBERMAC 147,&INCONS                                           06696400
         AGO   .L0440                                              @L1A 06698000
.********************************************************************** 06700000
.*                                                                    * 06720000
.*                   VALIDATE SVC TYPE PARAMETER                      * 06740000
.*                                                                    * 06760000
.********************************************************************** 06780000
.L0340   ANOP                                                      @L1C 06802800
         AIF   ('&TYPE' EQ '1' OR '&TYPE' EQ '2' OR                    -06825600
               '&TYPE' EQ '3' OR '&TYPE' EQ '4' OR                     -06848400
               '&TYPE' EQ '5' OR '&TYPE' EQ '6').L0380             @L1C 06871200
&BADENT  SETC  'YES'                 FATAL ERROR DETECTED          @L1A 06894000
         AIF   (T'&TYPE EQ 'O').L0360      PARAMETER OMITTED?      @L1A 06916800
.*       MSG: "INVALID TYPE OPERAND SPECIFIED- "                        06940000
         IHBERMAC 1001,TYPE,&TYPE          NO: JUST IN ERROR            06970000
         AGO   .L0440                                              @L1C 07000000
.L0360   ANOP                              YES: PARAMETER OMITTED  @L1C 07010000
.*       MSG: "TYPE OPERAND REQUIRED, NOT SPECIFIED"                    07020000
         IHBERMAC 1006,TYPE                                             07030000
         AGO   .L0440                                              @L1C 07040000
.L0380   ANOP                                                      @L1C 07050000
&TYPENUM SETA  &TYPE                                                    07100000
.L0400   ANOP                                                      @L1C 07150000
.*                                                                      07200000
.*       IF ITS A TYPE 5 SVC DON'T ALLOW AN ENTRY POINT TO BE SPECIFIED 07250000
.*                                                                      07300000
         AIF   (&TYPENUM NE 5).L0440                               @L1C 07350000
         AIF   (T'&EP EQ 'O' AND T'&EPNAME EQ 'O').L0580           @L1C 07400000
       MNOTE 12,'TYPE=5 AND EPNAME OPTIONS ARE MUTUALLY EXCLUSIVE' @P2C 07450000
&BADENT  SETC  'YES'                 FATAL ERROR DETECTED               07500000
         AGO   .L0580                                              @L1C 07546200
.L0440   ANOP                                                      @L1A 07592400
.********************************************************************** 07608300
.*                                                                    * 07616600
.*                   VALIDATE ENTRY POINT PARAMETER                   * 07624900
.*                   'EP' OR 'EPNAME'                              @L1C 07629000
.*                                                                    * 07633200
.********************************************************************** 07641500
.*                                                                      07650000
.*       CHECK ENTRY POINT -                                            07700000
.*                                                                      07850000
.*       MF        LABEL     REGISTER  OMITTED                          07900000
.*       --        -----     --------  --------                         07950000
.*        E        ERROR        OK        OK                            08000000
.*        L         OK        ERROR       OK                            08050000
.*   STANDARD       OK          OK      ERROR                           08100000
.*                                                                      08250000
.*                                                                      08251200
.*                                                                      08254800
.*       NEITHER "EP" OR "EPNAME" OPTIONS SPECIFIED?               @L1A 08257200
.*                                                                      08259600
         AIF   (T'&EP NE 'O' OR T'&EPNAME NE 'O').L0460  NO: OK    @L1A 08260100
         AIF   ('&MF' EQ 'L' OR '&MF(1)' EQ 'E').L0580   MF=L/E OK @L1A 08260600
&BADENT  SETC  'YES'                              OTHERWISE: FATAL @L1A 08261100
.*       MSG: "ENTRY-POINT OPERAND REQUIRED, NOT SPECIFIED"        @L1A 08261600
         IHBERMAC 1006,ENTRY-POINT                                 @L1A 08262100
         AGO   .L0580                        GO TO LOCK PROCESSING @L1A 08262600
.L0460   ANOP                                                      @L1A 08263100
.*                                                                      08263600
.*       BOTH "EP" AND "EPNAME" OPTIONS SPECIFIED?                 @L1A 08264100
.*                                                                      08264600
         AIF   (T'&EP EQ 'O' OR T'&EPNAME EQ 'O').L0480  NO: OK    @L1A 08265100
&BADENT  SETC  'YES'                                    YES: FATAL @L1A 08265600
.*     MSG: "BOTH "EP" AND "EPNAME" SPECIFIED. "                   @L1A 08266100
     MNOTE 12,'*** BOTH "EP" AND "EPNAME" SPECIFIED. '             @L1A 08266600
         AGO   .L0580                        GO TO LOCK PROCESSING @L1A 08267100
.L0480   ANOP                                                      @L1A 08267600
.*                                                                      08268100
.*       DETERMINE WHICH ENTRY POINT OPTION WAS USED               @L1A 08268600
.*                                                                      08269100
         AIF   (T'&EP EQ 'O').L0500                    EP OPTION?  @L1A 08269600
&EPCHAR  SETC  '&EP'                     INITIALIZE MACRO VARIABLE @L1A 08270100
&EPMSG   SETC  'EP'                      INITIALIZE MSG VARIABLE   @L1A 08270600
.*       ARE THERE ANY SUB-PARAMETERS?                             @L1A 08271100
         AIF   (N'&EP GT 1).L0560                   YES: ERROR     @L1A 08271600
         AGO   .L0520                                              @L1A 08272100
.L0500   ANOP                                                      @L1A 08272600
&EPCHAR  SETC  '&EPNAME'                 INITIALIZE MACRO VARIABLE @L1A 08273100
&EPMSG   SETC  'EPNAME'                  INITIALIZE MSG VARIABLE   @L1A 08273600
&VERSION SETC  '2'         EPNAME IS A VERSION 2 SPECIFICATION @YA11662 08273800
.*       ARE THERE ANY SUB-PARAMETERS?                             @L1A 08274100
         AIF   (N'&EPNAME GT 1).L0560               YES: ERROR     @L1A 08274600
.L0520   ANOP                                                      @L1A 08275100
.*                                                                      08275600
.*       BREAK OUT PROCESSING DEPENDING ON MF TYPE                 @L1A 08276100
.*                                                                      08276600
         AIF   (T'&MF EQ 'O').L0580                  STANDARD CASE @L1A 08277100
         AIF   ('&MF' EQ 'L').L0540                  LIST CASE     @L1A 08277600
.*                                                                      08278100
.*       HANDLE THE MF=E CASES                                     @L1A 08278600
.*                                                                      08279100
         AIF   ('&EPCHAR'(1,1) EQ '(' ).L0580                      @L1A 08279600
         AGO   .L0560    ANYTHING OTHER THAN REGISTER FORM INVALID @L1A 08280100
.L0540   ANOP                                                      @L1A 08280600
.*                                                                      08281100
.*       HANDLE THE MF=L CASES                                     @L1A 08281600
.*                                                                      08282100
         AIF   ('&EPCHAR'(1,1) NE '(').L0580                       @L1A 08282600
.*                                           REGISTER FORM INVALID @L1A 08283100
.L0560   ANOP                                                      @L1A 08283600
.*                                                                      08284100
.*       ISSUE MNOTE FOR INVALID ENTRY-POINT OPERAND               @L1A 08284600
.*                                                                      08285100
&BADENT  SETC  'YES'                       FATAL ERROR DETECTED?   @L1A 08285600
.*       MSG: "INVALID (EP,EPNAME) OPERAND SPECIFIED-XXX"          @L1A 08286100
         IHBERMAC 1001,&EPMSG,&EPCHAR                              @L1A 08286600
.L0580   ANOP                                                      @L1A 08287100
         AIF   ('&MF(1)' EQ 'E').L0960                             @L1A 08287600
.********************************************************************** 08289600
.*                                                                    * 08290800
.*               VALIDATE LOCKS PARAMETERS                            * 08298900
.*                                                                    * 08299100
.********************************************************************** 08299300
.*                                                                      08299500
.*       CHECK FOR VALID, NON-DUPLICATE LOCKS                           08300000
.*             - TYPE 1 DEFAULTS TO HAVING THE LOCAL LOCK               08350000
.*             - TYPE 3 + 4 MAY NOT HOLD ANY GLOBAL SPIN LOCK      @L1C 08400000
.*             - TYPE 6 MAY NOT HOLD ANY LOCK                           08450000
.*                                                                      08500000
         AIF   (&FUNCNUM GE &EXTRACT).L0960  EXTRACT CHECKING DONE @L1A 08537500
         AIF   (T'&LOCKS EQ 'O').L0840                             @L1C 08575000
         AIF   (&TYPENUM NE  6 ).L0600                             @L1A 08612500
         MNOTE 12,'*** A TYPE 6 SVC MAY NOT HAVE ANY LOCKS'             08650000
&BADENT  SETC  'YES'                 FATAL ERROR DETECTED               08700000
         AGO   .L0880                                              @L1C 08750000
.*                                                                      08800000
.*       IS THIS A DUPLICATE LOCK?                                      08850000
.*                                                                      08900000
.L0600   ANOP                                                      @L1C 08950000
&INDEX1  SETA   1                                                       09000000
.L0620   AIF    (&INDEX1 GT N'&LOCKS).L0840   PROCESSED ALL LOCKS? @L1C 09050000
&INDEX2  SETA   &INDEX1+1                  NO: PROCESS NEXT             09100000
.L0640   AIF    (&INDEX2 GT N'&LOCKS).L0680   LAST LOCK IN LIST?   @L1C 09150000
         AIF    ('&LOCKS(&INDEX1)'  NE '&LOCKS(&INDEX2)').L0660    @L1C 09250000
.*                                             NO: IS IT A DUPLICATE?   09275000
         MNOTE 12,'*** DUPLICATE LOCK-- &LOCKS(&INDEX1)'                09300000
&BADENT  SETC  'YES'                       FATAL ERROR DETECTED         09350000
         AGO   .L0820                                              @L1C 09400000
.L0660   ANOP                                                      @L1C 09450000
&INDEX2  SETA  &INDEX2+1                   NEXT LOCK IN LIST            09500000
         AGO   .L0640                                              @L1C 09550000
.L0680   ANOP                                                      @L1C 09600000
.*                                                                      09650000
.*       MAP THE LOCK NAME INTO ITS NUMERIC REPRESENTATION              09700000
.*                                                                      09750000
&TEMP    SETA  0                                                        09800000
         AIF   ('&LOCKS(&INDEX1)' NE 'LOCAL').L0700                @L1C 09850000
&TEMP    SETA  &NLOCAL                                                  09900000
.L0700   AIF   ('&LOCKS(&INDEX1)' NE 'CMS').L0720                  @L1C 09950000
&TEMP    SETA  &NCMS                                                    10000000
.L0720   AIF   ('&LOCKS(&INDEX1)' NE 'SRM').L0740                  @L1C 10050000
&TEMP    SETA  &NSRM                                           @ZMC3226 10100000
.L0740   AIF   ('&LOCKS(&INDEX1)' NE 'SALLOC').L0760               @L1C 10150000
&TEMP    SETA  &NSALLOC                                                 10200000
.L0760   AIF   ('&LOCKS(&INDEX1)' NE 'DISP').L0780                 @L1C 10250000
&TEMP    SETA  &NDISP                                                   10426000
.L0780   AIF   (&TEMP NE 0).L0800             VALID LOCK FOUND?    @L1C 10471200
.*       MSG: "INVALID LOCK OPERAND SPECIFIED- "                        10516400
         IHBERMAC 1001,LOCK,&LOCKS(&INDEX1)   NO: INVALID LOCK          10560800
&BADENT  SETC  'YES'                  FATAL ERROR DETECTED              10605200
.L0800   ANOP                                                      @L1C 10650000
&REQLOCK SETA  &REQLOCK+&TEMP         ADD LOCK TO LOCKS VALUE           10700000
.* CHECK FOR TYPE 3 OR TYPE 4 SVC REQUESTING A GLOBAL SPIN LOCK    @L1A 10712500
         AIF   (&TYPENUM NE 3 AND &TYPENUM NE 4).L0820   TYPE 3/4? @L1A 10725000
         AIF   (&TEMP NE &NSRM AND &TEMP NE &NSALLOC                   -10737500
               AND &TEMP NE &NDISP).L0820              SPIN LOCK?  @L1A 10750000
   MNOTE 12,'TYPE 3/4 SVC CANNOT GET SPIN (&LOCKS(&INDEX1)) LOCK.' @L1A 10762500
&BADENT  SETC  'YES'                  FATAL ERROR DETECTED         @L1A 10775000
.L0820   ANOP                                                      @L1A 10787500
&INDEX1  SETA  &INDEX1+1              ITERATE IN LOOP                   10800000
         AGO   .L0620                                              @L1C 10850000
.*                                                                      10900000
.*       DEFAULT THE LOCAL LOCK FOR TYPE 1 SVC                          10950000
.*                                                                      11000000
.L0840   AIF   (&TYPENUM NE 1).L0880  TYPE 1 SVC?                  @L1C 11050000
&TEMP    SETA  &REQLOCK/&NLOCAL/2*2   ZERO THE LOCAL BIT DOWN           11100000
&TEMP    SETA  &REQLOCK/&NLOCAL-&TEMP ISOLATE THE LOCAL BIT             11150000
         AIF   (&TEMP NE 0).L0880    LOCAL LOCK ALREADY SPECIFIED? @L1C 11200000
&REQLOCK SETA  &REQLOCK+&NLOCAL       NO: DEFAULT IT                    11250000
.********************************************************************** 11450000
.*                                                                    * 11500000
.*               VALIDATE APF PARAMETER                               * 11550000
.*                                                                    * 11600000
.********************************************************************** 11650000
.L0880   ANOP                                                      @L1C 11750000
         AIF   (T'&APF EQ 'O' OR '&APF' EQ 'NO').L0920             @L1C 11800000
         AIF   ('&APF' EQ 'YES').L0900                             @L1C 11850000
.*       MSG: "APF KEYWORD MUST BE YES OR NO. "                         11887500
         MNOTE 12,'APF KEYWORD MUST BE YES OR NO.'                 @P4C 11925000
&BADENT  SETC  'YES'                    FATAL ERROR DETECTED            11962500
         AGO   .L0920                                              @L1C 12000000
.L0900   ANOP                                                      @L1C 12050000
&APFNUM  SETA  &NAPF                                                    12100000
.********************************************************************** 12183300
.*                                                                    * 12216600
.*               VALIDATE AR PARAMETER                                * 12218600
.*                                                                    * 12220600
.********************************************************************** 12222600
.L0920   ANOP                                                      @L3A 12224600
         AIF   (T'&AR EQ 'O' OR '&AR' EQ 'NO').L0930               @L3A 12226600
         AIF   ('&AR' EQ 'YES').L0925                              @L3A 12228600
.*       MSG: "AR KEYWORD VALUE MUST BE YES OR NO."                     12230600
         MNOTE 12,'AR KEYWORD VALUE MUST BE YES OR NO.'            @L3A 12232600
&BADENT  SETC  'YES'                    FATAL ERROR DETECTED            12234600
         AGO   .L0930                                              @L3A 12236600
.L0925   ANOP                                                      @L3A 12238600
&ARNUM   SETA  &NAR  SET VALUE SO AR BIT=1 IN ATTRIBUTE BYTE       @L3A 12240600
.L0930   ANOP                                                      @L3A 12242600
.********************************************************************** 12244600
.*                                                                    * 12246600
.*               VALIDATE NON-PREEMPTIBILITY PARAMETER                * 12249900
.*                                                                    * 12283200
.********************************************************************** 12316500
         AIF   (T'&NPRMPT EQ 'O' OR '&NPRMPT' EQ 'NO').L0960       @L1C 12350000
         AIF   ('&NPRMPT' EQ 'YES').L0940                          @L1C 12400000
.*       MSG: "NPRMPT KEYWORD MUST BE YES OR NO."                       12437500
         MNOTE 12,'NPRMPT KEYWORD MUST BE YES OR NO.'              @P4C 12475000
&BADENT  SETC  'YES'                    FATAL ERROR DETECTED            12512500
.L0940   ANOP                                                      @L1C 12550000
&NPNUM   SETA  &NNP                                                     12600000
.********************************************************************** 12650000
.*                                                                    * 13000000
.*               VALIDATE USEECVT PARAMETER                           * 13004100
.*                                                                    * 13008200
.********************************************************************** 13012300
         AIF   (T'&USEECVT EQ 'O' OR '&USEECVT' EQ 'NO').L0941     @L4A 13016400
         AIF   ('&USEECVT' EQ 'YES').L0941                         @L4A 13020500
.*       MSG: "USEECVT KEYWORD MUST BE YES OR NO."                 @L4A 13024600
         MNOTE 12,'USEECVT KEYWORD MUST BE YES OR NO.'             @L4A 13028700
&BADENT  SETC  'YES'                    FATAL ERROR DETECTED       @L4A 13032800
.L0941   ANOP                                                      @L4A 13036900
.********************************************************************** 13041000
.*                                                                    * 13045100
.*               ARE THE PARAMETERS VALID?                            * 13050000
.*                                                                    * 13100000
.********************************************************************** 13150000
.L0960   AIF   ('&BADENT' NE 'YES').L0980                          @L1C 13200000
         MNOTE 12,'*** ERROR(S) CAUSED MACRO EXPANSION TERMINATION'     13250000
         AIF   (T'&NAME   EQ 'O').L1380                            @L1C 13300000
&NAME    DS    0H                                                       13350000
         AGO   .L1380                                              @L1C 13385700
.********************************************************************** 13421400
.*                                                                    * 13457100
.* GENERATE CODE TO FIND THE SVCUPDTE SERVICE IF THIS IS NOT MF=L     * 13492800
.*                                                                    * 13528500
.********************************************************************** 13564200
.L0980   AIF   ('&MF' EQ 'L').L1040                                @L1C 13600000
         AIF   ('&USEECVT' NE 'NO').ECVT1                          @L4A 13625000
&NAME    NUCLKUP BYNAME,NAME='IEAVESTU',ADDR=(0) GET IEAVESTU ENTRY     13650000
         LTR   15,15                   SUCCESSFUL?                      13700000
         BNZ   &LAB2                   NO: GO SET RETURN CODE           13750000
         LR    15,0                    YES: PICK UP ROUTINE'S ADDRESS   13800000
         AGO   .ECVT1A                                             @L4A 13814200
.ECVT1   ANOP                                                      @L4A 13828400
&NAME    L     15,16(0,0)              GET CVT                          13842600
         L     15,CVTECVT-CVTMAP(15,0) GET ECVT ADDRESS                 13856800
         L     15,ECVTESTU-ECVT(15,0)  GET ECVTESTU                     13871000
.ECVT1A  ANOP                                                      @L4A 13885500
.********************************************************************** 13900000
.*                                                                    * 13950000
.*       GENERATE CODE TO LOAD R1 WITH PARAMETER LIST IF NOT MF=L     * 14000000
.*                                                                    * 14050000
.********************************************************************** 14100000
.*                                                                      14700000
.*       IF THIS IS THE EXECUTE FORM - USE THE GIVEN PARAMETER LIST     14750000
.*                                                                      14800000
         AIF   ('&MF(1)' NE 'E').L1020  IF THIS ISN'T MF=E         @L1C 14822200
         AIF   ('&MF(2)'(1,1) EQ '(').L1000  NO: REGISTER FORM?    @L1C 14844400
.*                                      NO: LABEL FORM                  14866600
         LA    1,&MF(2)                PARAMETER LIST ADDRESS           14888800
         AGO   .L1280                                              @L1C 14911000
.L1000   ANOP                        HANDLE THE MF=E REGISTER CASE @L1C 14933200
         LA    1,0(0,&MF(2))           PARAMETER LIST ADDRESS           14955400
         AGO   .L1280                                              @L1C 14977600
.*                                                                      15000000
.*       IF THIS IS STANDARD FORM - THE PARAMETER LIST FOLLOWS          15050000
.*                                                                      15100000
.L1020   AIF   (T'&MF NE 'O').L1040                                @L1C 15150000
         CNOP  0,4                     ENSURE ALIGNMENT FOR STD FORM    15156200
         BAS   1,&LAB1                 SET POINTER TO PARAMETER LIST    15162400
.********************************************************************** 15168600
.*                                                                    * 15174800
.*       GENERATE PARAMETER LIST IF THIS IS NOT MF=E                  * 15181000
.*                                                                    * 15187200
.********************************************************************** 15193400
.L1040   AIF   ('&MF' NE 'L').L1060                                @L1C 15199600
&NAME    DS    0F                      FORCE WORD ALIGNMENT             15205800
         AIF   ('&USEECVT' EQ 'NO').L1060                          @L4A 15207800
         IHBERMAC 147,USEECVT          USEECVT BAD WITH MF=L       @L4A 15209800
.L1060   ANOP                                                      @L1C 15212000
         DC    AL1(&VERSION)           SVCUPDTE VERSION NUMBER          15218200
         DC    AL1(&FUNCNUM)           FUNCTION TO PERFORM              15224400
         DC    AL1(&SVCFLAG+&ESRFLAG)  SVC FLAG, ESR FLAG               15230600
*                                          0 - SVC NUMBER SUPPLIED      15236800
*                                          1 - SVC NUMBER NOT GIVEN     15243000
*                                          0 - ESR NUMBER NOT GIVEN     15245300
*                                          2 - ESR NUMBER SUPPLIED      15247600
.*                                                                      15250000
.*       IF THIS IS AN EXTRACT FUNCTION ZERO THE SVC NUMBER        @L1A 15253700
.*       FIELD IN THE PARAMETER LIST                                    15257400
.*                                                                      15261100
         AIF   (&FUNCNUM LT &EXTRACT).L1080                        @L4C 15264800
         DC    AL1(0)              SVC NUMBER NOT USED FOR EXTRACT      15268500
         AGO   .L1140                                              @L1A 15272200
.L1080   ANOP                                                      @L1A 15275900
.*                                                                      15279600
.*       IF NO SVC PARAMETER SUPPLIED OR THE REGISTER FORM WAS USED     15283300
.*       THEN USE ZERO IN THE PARAMETER LIST FOR THE SVC PARAMETER      15316600
.*                                                                      15350000
         AIF   (T'&SVC EQ 'O').L1100                               @L1C 15393700
         AIF   ('&SVC'(1,1) EQ '(').L1100                          @L1C 15437400
         DC    AL1(&SVC(1))            SVC TO MODIFY                    15481100
         AGO   .L1120                                              @L1C 15524800
.L1100   ANOP                                                      @L1C 15568500
         DC    AL1(0)                  SVC NUMBER TO FILL IN LATER      15612200
.L1120   ANOP                                                      @L1C 15655900
.*                                                                      15700000
.*       IF THIS IS A DELETE FUNCTION THE REST OF THE LIST IS ZEROES    15750000
.*                                                                      15800000
         AIF   (&FUNCNUM NE &DELETE).L1140                         @L1C 15850000
         AIF   ('&ESR' EQ '').L1139A                               @P6A 15856200
         AIF   ('&ESR'(1,1) EQ '(').L1139A                         @P6A 15862400
         DC    7X'0'                   DUMMY ENTRY                 @P6A 15868600
         DC    AL1(&ESR(1))            EXTENDED SVC ROUTING CODE   @P6A 15874800
         DC    8X'0'                   DUMMY ENTRY                 @P6A 15881000
         AGO   .L1280                                              @P6A 15887200
.L1139A  ANOP                                                      @P6A 15893400
         DC    16X'0'                  DUMMY ENTRY                      15900000
         AGO   .L1280                                              @L1C 15950000
.*                                                                      16000000
.*       IF A ENTRY POINT IS NOT SUPPLIED OR REGISTER FORM IS USED      16050000
.*       THEN USE ZERO AS THE ENTRY POINT                               16100000
.*                                                                      16150000
.L1140   AIF   (T'&EP EQ 'O').L1160                                @L1C 16200000
         AIF   ('&EP'(1,1) EQ '(').L1160                           @L1C 16250000
         DC    AL4(&EP)                ENTRY POINT OF NEW SVC ROUTINE   16300000
         AGO   .L1200                                              @L1C 16550000
.L1160   AIF   (&TYPENUM EQ 5).L1180   TYPE 5 SVC?                 @L1C 16600000
         DC    AL4(1)                  ENTRY POINT NOT SPECIFIED        16650000
         AGO   .L1200                                              @L1C 16666600
.L1180   ANOP                                                      @L1C 16674900
         DC    AL4(0)                  ENTRY POINT NOT SPECIFIED        16683200
.L1200   ANOP                                                      @L1C 16688300
.*                                                                      16693400
.*       IF THIS IS AN EXTRACT FUNCTION ZERO THE TYPE AND ATTRIBUTE     16698500
.*       FIELDS IN THE PARAMETER LIST                              @L1A 16703600
.*                                                                      16708700
         AIF   (&FUNCNUM LT &EXTRACT).L1220                        @L4C 16713800
         DC    AL1(0)                                                   16718900
         DC    AL1(0)                                                   16724000
         DC    AL1(0)                                                   16729100
         DC    AL1(0)                    RESERVED                       16734200
         AGO   .L1240                                              @L1A 16739300
.L1220   ANOP                                                      @L1A 16744400
         DC    AL1(&TYPENUM)           SVC TYPE                         16750000
&TEMP    SETA  &APFNUM+&ARNUM+&NPNUM   GENERATE ATTRIBUTE CONSTANT @L3A 16800000
         DC    AL1(&TEMP)              SVC ATTRIBUTE BITS               16850000
         DC    AL1(&REQLOCK)           SVC LOCKS                        16900000
         AIF   ('&ESR' EQ '').L1240A                               @L4A 16908200
         AIF   ('&ESR'(1,1) EQ '(').L1240                          @L4A 16916400
         DC    AL1(&ESR(1))            EXTENDED SVC ROUTING CODE   @L4A 16924600
         AGO   .L1240                                              @L4A 16932800
.L1240A  ANOP                                                      @L4A 16941000
         DC    AL1(0)                  EXTENDED SVC ROUTING CODE        16949300
.L1240   ANOP                                                      @L1C 16957600
.*                                                                      16965200
.*       IF AN EPNAME IS NOT SUPPLIED OR REGISTER FORM IS USED     @L1A 16972800
.*       THEN ZERO EPNAME FIELD IN PARAMETER LIST                       16980400
.*                                                                      16988000
         AIF   (T'&EPNAME EQ 'O').L1260                            @L1A 16995600
         AIF   ('&EPNAME'(1,1) EQ '(').L1260                       @L1A 17003200
         DC    CL8'&EPNAME'            EPNAME OF NEW SVC ROUTINE        17010800
         AGO   .L1280                                              @L1A 17018400
.L1260   ANOP                                                      @L1A 17026000
         DC    8X'00'                  EPNAME NOT SPECIFIED             17033600
.L1280   AIF   ('&MF' EQ 'L').L1380                                @L1A 17041200
.********************************************************************** 17050000
.*                                                                    * 17100000
.*       GENERATE CODE TO DYNAMICALLY INSERT EP VALUE INTO            * 17150000
.*       THE PARAMETER LIST FOR MF=E AND STANDARD                     * 17200000
.*                                                                    * 17250000
.********************************************************************** 17300000
.L1300   ANOP                                                      @L1C 17350000
&LAB1    DS    0H                                                       17362900
         AIF   (&FUNCNUM EQ &DELETE).L1340        END DELETE PROC  @L1A 17372500
         AIF   (T'&EP    EQ 'O').L1320    ENTRY POINT INCLUDED?    @L1C 17382100
         AIF   (T'&MF EQ 'O' AND '&EP'(1,1) NE '(').L1340          @L1C 17391700
         ST    &EP(1),&EPOFF.(0,1)     STORE ADDRESS IN PARAMETER LIST  17401600
         AGO   .L1340                  GO PROCESS SVC NUMBER       @L1A 17408000
.********************************************************************** 17414500
.*                                                                    * 17427400
.*       GENERATE CODE TO DYNAMICALLY INSERT EPNAME VALUE INTO    @L1A* 17428500
.*       THE PARAMETER LIST FOR MF=E AND STANDARD                     * 17429600
.*                                                                    * 17430700
.********************************************************************** 17431800
.L1320   ANOP                                                      @L1A 17432900
         AIF   (T'&EPNAME EQ 'O').L1340     EPNAME INCLUDED?       @L1A 17434000
         AIF   (T'&MF EQ 'O' AND '&EPNAME'(1,1) NE '(').L1340  REG @L1A 17435100
         MVC   &EPNOFF.(8,1),0(&EPNAME(1))  MOVE EPNAME INTO LIST       17436200
.********************************************************************** 17437300
.*                                                                    * 17438400
.*       GENERATE CODE TO DYNAMICALLY INSERT SVC VALUES INTO          * 17440300
.*       THE PARAMETER LIST FOR MF=E AND STANDARD                     * 17453200
.*                                                                    * 17466100
.********************************************************************** 17479000
.L1340   ANOP                                                      @L1C 17491900
         AIF   (T'&SVC EQ 'O').L1360     SVC SUPPLIED?             @L1C 17504800
         AIF   ('&SVC'(1,1) NE '(').L1360  YES: REGISTER FORM?     @L1C 17517700
.* THE OLD CODE USED A STH TO DO BOTH RESETTING THE FLAG AND SAVING     17521300
.* THE SVC NUMBER. BUT NOW WITH ESR BEING SUPPORTED, WE CANNOT          17524900
.* AFFORD TO ZERO THE ENTIRE FLAG BYTE, AS IT MIGHT HAVE ADDITIONAL     17528500
.* INFORMATION.                                                    @L4A 17532200
         NI    &SVCOFF-1(1),X'FE'      RESET SVC FLAG              @L4A 17535900
         STC   &SVC(1),&SVCOFF.(0,1)   STORE SVC#                  @L4C 17539600
.L1360   ANOP                                                      @L1C 17543500
         AIF   ('&ESR' EQ '').L1360A       EXTENDED SVC?           @L4A 17545600
         AIF   ('&ESR'(1,1) NE '(').L1360A YES: REGISTER FORM?     @L4A 17547700
         OI    &SVCOFF-1(1),X'02'      SET ESR-SUPPLIED            @L4A 17549800
         STC   &ESR(1),&ESROFF.(0,1)   SET EXTENDED SVC ROUTCODE   @L4A 17551900
.L1360A  ANOP                                                      @L4A 17554000
.********************************************************************** 17556400
.*                                                                    * 17569300
.*       GENERATE CODE TO CALL IEAVESTU                               * 17582200
.*                                                                    * 17595100
.********************************************************************** 17608000
         LA    13,0(0,13)              STRIP HIGH ORDER BITS            17620900
         BASSM 14,15                   CALL UPDATE ROUTINE              17633800
         AIF   ('&USEECVT' NE 'NO').ECVT2                          @L4A 17640200
         B     &LAB3                   SKIP NEXT INSTRUCTION            17646700
&LAB2    LA    15,28                   UPDATE SERVICE NOT IN NUCLEUS    17659600
&LAB3    DS    0H                                                       17672500
.ECVT2   ANOP                                                      @L4A 17678900
.L1380   ANOP                                                      @L1C 17685400
         MEND                                                           17700000
*%/*                                                                    17725000
* */                                                                    17750000
* SVCUPDTE: MACRO                                                       17800000
*        KEYS(TYPE,EP,LOCKS,NPRMPT,MF,RELATED,APF,AR,EPNAME             17850000
*            ,ESR,USEECVT);                                   /* @L4C*/ 17900000
*/*                                                                  */ 18150000
*/*       THE FOLLOWING DECLARES MACRO VARIABLES-                    */ 20700000
*/*           ARITHMETIC VARIABLES ARE AUTOMATICALLY SET TO ZERO     */ 20750000
*/*           CHARACTER  VARIABLES ARE SET TO THE NULL STRING        */ 20800000
*/*                                                                  */ 20850000
*        DCL (APFNUM,           /* APF CODE                          */ 20900000
*             ARNUM,            /* VAR TO HOLD AR BIT VALUE      @L3A*/ 20925000
*             DELETE,           /* FUNCTION NUMBER FOR DELETE REQUEST*/ 20950000
*             EXTRACT,          /* FUNCTION NUMBER FOR EXTRACT   @L1A*/ 20975000
*             EXTRACTANY,       /* FUNCTION NUM FOR EXTRACTANY   @L4C*/ 20987500
*             FUNCNUM,          /* FUNCTION NUMBER                   */ 21000000
*             FLAGOFF,          /* PARM LIST POSITION: SVCFLAG   @L1A*/ 21025000
*             INDEX1,           /* GENERAL INDEX                     */ 21050000
*             INDEX2,           /* GENERAL INDEX                     */ 21100000
*             LOCERR,           /* LOCAL ERROR INDICATOR             */ 21109000
*             NAPF,             /* VALUE OF THE APF BIT IN SVC ENTRY */ 21118000
*             NAR,              /* VALUE OF AR BIT IN SVC ENTRY  @L3A*/ 21122500
*             NCMS,             /* VALUE OF THE CMS                  */ 21127000
*             NDISP,            /* VALUE OF THE DISP                 */ 21136000
*             NLOCAL,           /* VALUE OF THE LOCAL                */ 21145000
*             NNP,              /* VALUE OF THE NP                   */ 21154000
*             NSRM,             /* VALUE OF THE SRM          @ZMC3226*/ 21163000
*             NSALLOC,          /* VALUE OF THE SALLOC               */ 21172000
*             NPNUM,            /* NON-PREEMPTIBILITY CODE           */ 21181000
*             REPLACE,          /* FUNCTION NUMBER FOR REPLACE       */ 21190000
*             REPLACEEPA,       /* FUNCTION NUM FOR REPLACEEPA   @LXA*/ 21195000
*             REQLOCK,          /* LOCKS BYTE                        */ 21200000
*             RETCODE,          /* MACRO EXPANSION RETURN CODE       */ 21225000
*             SVCNUM,           /* SVC NUMBER                        */ 21250000
*             ESRNUM,           /* EXTENDED SVC ROUTING CODE     @L4A*/ 21262500
*             SVCOFF,           /* POSITION OF THE SVC IN PARM LIST  */ 21275000
*             ESROFF,           /* SVC EXTENSION IN PLIST        @L4A*/ 21287500
*             TEMP,             /* TEMPORARY                         */ 21300000
*             TYPENUM) FIXED;   /* SVC TYPE NUMBER                   */ 21350000
*        DCL (ACHAR,            /* SINGLE CHARACTER   TEMPORARY      */ 21400000
*             BADENT,           /* SET TO 'YES' INDICATES FATAL ERROR*/ 21425000
*             CHARS,            /* MULTIPLE CHARACTER TEMPORARY      */ 21450000
*             EPOFF,            /* POSITION OF EP IN THE PARM LIST   */ 21460000
*             EPNOFF,           /* PARM LIST POSITION: EPNAME    @L1A*/ 21465000
*             MACDATE,          /* DATE MACRO LAST MODIFIED          */ 21470000
*             MFTYPE,           /* MF TYPE REQUESTED                 */ 21480000
*             VERSION) CHAR;    /* SVCUPDTE VERSION NUMBER           */ 21500000
*                                                                       21502000
* DCL        (SVCFLAG           /* INDICATES IF SVC PARAMETER GIVEN  */ 21502500
*            ,ESRFLAG           /* INDICATES IF ESR GIVEN        @L4A*/ 21503000
*            ) FIXED;                                                   21503500
*                                                                       21504000
*   DCL (INCONS,           /* STRING FOR INCONSISTANT OPERANDS   @P4A*/ 21506000
*       INSPEC(10),        /* ARRAY OF KEYWORD ATTRIBUTES        @L3C*/ 21508000
*       BADSPEC(10)) CHAR; /* ARRAY OF KEYWORD NAMES FOR MESSAGE @L3C*/ 21510000
*                                                                       21512000
*                                                                       21514000
*        DCL  EHAREGS CHAR EXT; /* EPILOG REGISTER DCL VARIABLE      */ 21516600
*/********************************************************************/ 21533200
*/*                                                                  */ 21550000
*/*      SET DEFAULTS                                                */ 21600000
*/*                                                                  */ 21650000
*/********************************************************************/ 21675000
*        BADENT = 'NO';         /* NO ERROR DETECTED YET             */ 21700000
*        DELETE = 2;            /* DELETE REQUESTED                  */ 21706200
*        EPOFF  = '5';          /* POSITION OF EP IN PARAMETER LIST  */ 21712400
*        EPNOFF = '12';         /* POSITION OF EPNAME IN LIST    @L1A*/ 21715500
*        EXTRACT= 3;            /* EXTRACT REQUESTED             @L1A*/ 21718600
*/*ALL FUNCTIONS OTHER THAN EXTRACT/EXTRACTANY MUST HAVE LOWER FUNCTION 21719300
*NUMBERS THAN EXTRACT, SINCE WE TEST FOR ">="                        */ 21720000
*        EXTRACTANY=4;          /* EXTRACTANY                    @L4A*/ 21720800
*        MACDATE= '06/23/99';   /* LAST MODIFIED ON          @YA11662*/ 21722800
*        NAPF   = 8;            /* VALUE OF APF BIT IN SVC ENTRY     */ 21724800
*        NAR    = 4;            /* VALUE OF AR BIT IN SVC ENTRY  @L3A*/ 21727900
*        NCMS   = 64;           /* VALUE OF CMS                      */ 21731000
*        NDISP  = 8;            /* VALUE OF DISP                     */ 21737200
*        NLOCAL = 128;          /* VALUE OF LOCAL                    */ 21743400
*        NNP    = 2;            /* VALUE OF NON-PREEMPT              */ 21749600
*        NSRM   = 32;           /* VALUE OF SRM              @ZMC3226*/ 21755800
*        NSALLOC= 16;           /* VALUE OF SALLOC                   */ 21762000
*        REPLACE= 1;            /* REPLACE REQUESTED                 */ 21768200
*        REPLACEEPA = 5;        /* REPLACEEPA REQUESTED          @LXA*/ 21769700
*        RETCODE= 0;            /* INITIALIZE RETURN CODE        @L1A*/ 21771300
*        SVCFLAG= 0;            /* NO SVC PARAMETER ENCOUNTERED  @L4C*/ 21774400
*        ESRFLAG= 0;            /* NO ESR                        @L4A*/ 21777500
*        SVCOFF = 4;            /* POSITION OF SVC IN PARAMETER LIST */ 21780600
*        ESROFF = 12;           /* POSITION OF ESR IN PLIST      @L4A*/ 21782100
*        FLAGOFF= 17;           /* BIT POSITION OF SVC FLAG      @L2A*/ 21783700
*        VERSION= '1';          /* INITIALIZE TO VERSION 1   @YA11662*/ 21786800
*/********************************************************************/ 21793000
*/*                                                                  */ 21800000
*/*      MAKE THE INVOKING MACRO A COMMENT IN THE SOURCE CODE        */ 21850000
*/*                                                                  */ 21900000
*/********************************************************************/ 21925000
*        ANS('/* ' || MACLABEL || ' ' || MACNAME || ' '                 21950000
*            || MACLIST  || ' ' || MACKEYS || ' MACDATE('               22000000
*            || MACDATE  ||') */')                                      22050000
*            COL(10) SKIP(2);                                           22100000
*   /*  SETUP REPLACE, DELETE, OR EXTRACT FOR EXTRA            */       22102000
*   /*  EXTRA OPERAND MESSAGE                                  */       22104000
*   /*                                                         */       22106000
*              IF MACLIST(2) = 'REPLACE'                                22108000
*                 THEN DO;  /* CHECK FUNCTION= REPLACE     @P4A*/       22110000
*                      INSPEC(1)  = 'REPLACE' ;                         22112000
*                      BADSPEC(1) = '''REPLACE''' ;                     22114000
*                      END;                                             22116000
*              ELSE IF MACLIST(2) = 'REPLACEEPA'        /* @LXA*/       22116300
*                 THEN DO;  /* CHECK FUNCTION= REPLACEEPA  @LXA*/       22116600
*                      INSPEC(1)  = 'REPLACEEPA' ;      /* @LXA*/       22116900
*                      BADSPEC(1) = '''REPLACEEPA''' ;  /* @LXA*/       22117200
*                      END;                             /* @LXA*/       22117500
*              ELSE IF MACLIST(2) = 'DELETE'                            22118000
*                 THEN DO;  /* CHECK FUNCTION= DELETE      @P4A*/       22120000
*                      INSPEC(1)  = 'DELETE'  ;                         22122000
*                      BADSPEC(1) = '''DELETE''' ;                      22124000
*                      END;                                             22126000
*              ELSE IF MACLIST(2) = 'EXTRACT'                           22128000
*                 THEN DO;  /* CHECK FUNCTION= EXTRACT     @P4A*/       22130000
*                      INSPEC(1)  = 'EXTRACT' ;                         22132000
*                      BADSPEC(1) = '''EXTRACT''' ;                     22134000
*                      END;                                             22134300
*              ELSE IF MACLIST(2) = 'EXTRACTANY'                        22134600
*                 THEN DO;  /* CHECK FUNCTION= EXTRACTANY  @L4A*/       22134900
*                      INSPEC(1)  = 'EXTRACTANY' ;                      22135200
*                      BADSPEC(1) = '''EXTRACTANY''' ;                  22135500
*                      END;                                             22136000
*              ELSE                                                     22138000
*                 DO;       /* CHECK FUNCTION= EXTRACT     @P4A*/       22140000
*                      INSPEC(1)  = '' ;                                22142000
*                      BADSPEC(1) = '' ;                                22144000
*                      END;                                             22146000
*/********************************************************************/ 22150000
*/*                                                                  */ 22200000
*/*      DOES THIS INVOCATION HAVE A VALID MF PARAMETER?             */ 22250000
*/*                                                                  */ 22300000
*/********************************************************************/ 22325000
*        IF    MF ^= ''                               /* DEFAULTED?  */ 22350000
*          &   (MF(1) ^= 'E' |  NUMBER(MF) ^=2)   /* NOT EXECUTE?    */ 22363600
*          &   (MF(1) ^= 'L' |  NUMBER(MF) >3)    /* NOT LIST?   @P1C*/ 22377200
*             THEN DO;                                /* YES: ERROR  */ 22390800
*                BADENT = 'YES';        /* FATAL ERROR DETECTED     */  22404400
*                SVCFLAG = 1;           /* INDICATE NO SVC PARAM.    */ 22454400
*                      ANS MSG('AHA0073 INVALID VALUE FOR' ||           22567600
*                              ' KEYWORD MF - ' ||MF) NORESCAN;         22577800
*                      ANS  ('@SPACE;');                 /*      @P4A*/ 22588000
*                      ANS ('/* AHA0073 INVALID VALUE FOR' ||           22594800
*                           ' KEYWORD MF - ' ||MF                       22608400
*                           || ' */') COL(10) SKIP;                     22622000
*            END;                                                       22650000
*/********************************************************************/ 22675000
*/*                                                                  */ 22700000
*/*      IS THIS AN EXECUTE FORM OF THE MACRO?                       */ 22750000
*/*         YES: MAKE SURE THERE WERE NO EXTRA PARAMETERS            */ 22800000
*/*                                                                  */ 22850000
*/********************************************************************/ 22875000
*        IF MF(1) = 'E' THEN             /* EXECUTE FORM?            */ 22900000
*           DO;                          /* YES:                     */ 22950000
*              MFTYPE = 'E';             /* SET MF TYPE              */ 22993300
* /* INSPEC(1) AND BADSPEC(1) SET TO "REPLACE","DELETE" OR "EXTRACT  */ 23009900
*              INSPEC(2)  =  TYPE      ;                                23026500
*              BADSPEC(2) =  'TYPE'    ;                                23043100
*              INSPEC(3)  =  LOCKS     ;                                23059700
*              BADSPEC(3) =  'LOCKS'   ;                                23076300
*              INSPEC(4)  =  NPRMPT    ;                                23092900
*              BADSPEC(4) =  'NPRMPT'  ;                                23109500
*              INSPEC(5)  =  APF       ;                                23126100
*              BADSPEC(5) =  'APF'     ;                                23142700
*              INSPEC(6)  =  AR        ;           /*      @L3A*/       23148200
*              BADSPEC(6) =  'AR'      ;           /*      @L3A*/       23153700
*              INCONS='';           /* CLEAR ERROR STRING      */       23159300
*   /*                                                         */       23175900
*   /*  LOOP THROUGH INPUT DATA IN ARRAY AND FORMAT MESSAGE    */       23192500
*   /*                                                         */       23209100
*              DO INDEX1 = 1 TO 6;  /* VERIFICATION LOOP   @P4A*/       23225700
*                 CHARS = INSPEC(INDEX1);                               23242300
*                 IF CHARS ^= ''                                        23258900
*                    THEN DO;  /* ERROR DETECTED               */       23275500
*                      IF INCONS = ''                                   23292100
*                         THEN INCONS = BADSPEC(INDEX1);                23308700
*                         ELSE INCONS = INCONS || ',' ||                23325300
*                              BADSPEC(INDEX1);                         23341900
*                      END;                                             23358500
*              END;                                                     23375100
*              IF INCONS ^= '' THEN                                     23391700
*                 DO;          /* IF EXTRA KEY(S)          @P4A*/       23408300
*                     RETCODE = 4; /*SET LOW LEVEL RETURN CODE */       23424900
*                 ANS MSG(' ' || INCONS ||                              23441500
*                       ' OPERAND(S) INCONSISTENT WITH ' ||             23458100
*                       'EXECUTE FORM -- IGNORED. ') NORESCAN;          23474700
*                 ANS  ('@SPACE;');                                     23491300
*                 ANS  ('/* ' || INCONS ||                              23507900
*                       ' OPERAND(S) INCONSISTENT WITH ' ||             23524500
*                       'EXECUTE FORM -- IGNORED. */')                  23541100
*                        COL(10) SKIP;                                  23557700
*                 END;                                                  23574300
*           END;                         /* CHECK FOR EXTRA             23590900
*                                           OPERANDS ON EXECUTE  @P4C*/ 23607500
*/********************************************************************/ 23625000
*/*                                                                  */ 23650000
*/*                  SCREEN "EXTRACT" REQUESTS                   @L1A*/ 23656500
*/*                                                                  */ 23663000
*/********************************************************************/ 23669500
*        IF MACLIST(1)  = 'EXTRACT'     /* EXTRACT REQUEST?             23672700
*                                          WITH SVC PARAMETER           23675900
*                                          CODED WRONG?          @L1A*/ 23679100
*           THEN DO;                    /* BAD EXTRACT           @L1A*/ 23679500
*              EXTRNAME = 'EXTRACT';    /*                       @L4A*/ 23679700
*              FUNCNUM = EXTRACT;       /* SET FUNCTION CODE     @L1A*/ 23679900
*                        BADENT = 'YES';                      /* @L1A*/ 23680300
*                        ANS MSG('***  ''EXTRACT'' '                    23680700
*                    || 'PARAMETER SPECIFIED IN WRONG POSITION. ')      23681000
*                            NORESCAN;                        /* @P2C*/ 23681300
*                        ANS  ('@SPACE;');               /*      @P4A*/ 23681700
*                        ANS ('/* ***  ''EXTRACT'' '                    23681900
*                    || 'PARAMETER SPECIFIED IN WRONG POSITION. */')    23682300
*                                COL(10) SKIP;               /*  @P2C*/ 23682700
*           GOTO EPCHEK;                /* SKIP CHECKING OF             23683100
*                                          OTHER PARAMETERS      @L1A*/ 23683500
*           END;                        /* END BAD EXTRACT       @L1A*/ 23683900
*        IF ((NUMBER(MACLIST) = 2)                                      23684300
*           & (MACLIST(2) = 'EXTRACT')) /* EXTRACT REQUEST              23685500
*                                          CODED CORRECTLY?      @L1A*/ 23688700
*           THEN DO;                    /* VERIFY EXTRACT        @L1A*/ 23691900
*              EXTRNAME = 'EXTRACT';    /*                       @L4A*/ 23693700
*              FUNCNUM = EXTRACT;       /* SET FUNCTION CODE     @L1A*/ 23695500
*              VERSION = '2';       /* EXTRACT IS A VERSION 2           23697600
*                                      SPECIFICATION         @YA11662*/ 23699700
*              IF MACLIST(1) ^= ''      /* EXTRACT WITH SVCNUM?  @L1A*/ 23702000
*                THEN DO;                                               23708500
*                        BADENT = 'YES';                      /* @L1A*/ 23715000
*                        ANS MSG('***  ''SVCNUM'' AND ''EXTRACT'''      23721500
*                              || ' OPTIONS ARE MUTUALLY EXCLUSIVE')    23725800
*                            NORESCAN;                        /* @L1A*/ 23730100
*                        ANS  ('@SPACE;');               /*      @P4A*/ 23734400
*                        ANS ('/* ***  ''SVCNUM'' AND ''EXTRACT'''      23736600
*                              || ' OPTIONS ARE MUTUALLY EXCLUSIVE */') 23741000
*                                COL(10) SKIP;                          23747500
*                     END;              /* END-EXTRACT W/SVCNUM  @L1A*/ 23754000
*              IF ESR ^= ''             /* EXTRACT WITH ESR?     @L4A*/ 23760600
*                THEN DO;               /*                       @L4A*/ 23760700
*                        BADENT = 'YES';                      /* @L4A*/ 23760800
*                        ANS MSG('***  ''ESR'' AND ''EXTRACT'''         23760900
*                              || ' OPTIONS ARE MUTUALLY EXCLUSIVE')    23761000
*                            NORESCAN;                        /* @L4A*/ 23761100
*                        ANS  ('@SPACE;');               /*      @L4A*/ 23761200
*                        ANS ('/* ***  ''ESR'' AND ''EXTRACT'''         23761300
*                              || ' OPTIONS ARE MUTUALLY EXCLUSIVE */') 23761400
*                                COL(10) SKIP;                          23761500
*                     END;              /* END-EXTRACT W/ESR     @L4A*/ 23761600
*           GOTO INCONSCHK;             /* SKIP CHECKING OF             23761700
*                                          OTHER PARAMETERS      @L4C*/ 23761800
*           END;                        /* VERIFY EXTRACT        @L1A*/ 23761900
*/********************************************************************/ 23762000
*/*                                                                  */ 23762100
*/*                  SCREEN "EXTRACTANY" REQUESTS                @L1A*/ 23762200
*/*                                                                  */ 23762300
*/********************************************************************/ 23762400
*        IF MACLIST(1)  = 'EXTRACTANY'  /* EXTRACTANY REQUEST?          23762500
*                                          WITH SVC PARAMETER           23762600
*                                          CODED WRONG?          @L4A*/ 23762700
*           THEN DO;                    /* BAD EXTRACTANY        @L4A*/ 23762800
*              EXTRNAME = 'EXTRACTANY'; /*                       @L4A*/ 23762900
*              FUNCNUM = EXTRACTANY;    /* SET FUNCTION CODE     @L4A*/ 23763000
*                        BADENT = 'YES';                      /* @L4A*/ 23763100
*                        ANS MSG('***  ''EXTRACTANY'' '                 23763200
*                    || 'PARAMETER SPECIFIED IN WRONG POSITION. ')      23763300
*                            NORESCAN;                        /* @L4C*/ 23763400
*                        ANS  ('@SPACE;');               /*      @L4A*/ 23763500
*                        ANS ('/* ***  ''EXTRACTANY'' '                 23763600
*                    || 'PARAMETER SPECIFIED IN WRONG POSITION. */')    23763700
*                                COL(10) SKIP;               /*  @L4C*/ 23763800
*           GOTO EPCHEK;                /* SKIP CHECKING OF             23763900
*                                          OTHER PARAMETERS      @L4A*/ 23764000
*           END;                        /* END BAD EXTRACTANY    @L4A*/ 23764100
*        IF ((NUMBER(MACLIST) = 2)                                      23764200
*           & (MACLIST(2) = 'EXTRACTANY')) /* EXTRACTANY REQUEST        23764300
*                                          CODED CORRECTLY?      @L4A*/ 23764400
*           THEN DO;                    /* VERIFY EXTRACTANY     @L4A*/ 23764500
*              FUNCNUM = EXTRACTANY;    /* SET FUNCTION CODE     @L4A*/ 23764600
*              EXTRNAME = 'EXTRACTANY'; /*                       @L4A*/ 23764700
*              VERSION = '2';       /* EXTRACTANY IS A VERSION 2        23764800
*                                      SPECIFICATION             @L4A*/ 23764900
*              IF MACLIST(1) ^= ''      /* EXTRACTANY WITH              23765000
*                                                       SVCNUM?  @L4A*/ 23765100
*                THEN DO;                                               23765200
*                        BADENT = 'YES';                      /* @L4A*/ 23765300
*                        ANS MSG('***  ''SVCNUM'' AND ''EXTRACTANY'''   23765400
*                              || ' OPTIONS ARE MUTUALLY EXCLUSIVE')    23765500
*                            NORESCAN;                        /* @L4A*/ 23765600
*                        ANS  ('@SPACE;');               /*      @L4A*/ 23765700
*                        ANS ('/* ***  ''SVCNUM'' AND ''EXTRACTANY'''   23765800
*                              || ' OPTIONS ARE MUTUALLY EXCLUSIVE */') 23765900
*                                COL(10) SKIP;                          23766000
*                     END;              /* END-EXTRACTANY               23766100
*                                                      W/SVCNUM  @L4A*/ 23766200
*              IF ESR ^= ''             /* EXTRACT WITH ESR?     @L4A*/ 23766300
*                THEN DO;               /*                       @L4A*/ 23766400
*                        BADENT = 'YES';                      /* @L4A*/ 23766500
*                        ANS MSG('***  ''ESR'' AND ''EXTRACTANY'''      23766600
*                              || ' OPTIONS ARE MUTUALLY EXCLUSIVE')    23766700
*                            NORESCAN;                        /* @L4A*/ 23766800
*                        ANS  ('@SPACE;');               /*      @L4A*/ 23766900
*                        ANS ('/* ***  ''ESR'' AND ''EXTRACT'''         23767000
*                              || ' OPTIONS ARE MUTUALLY EXCLUSIVE */') 23767100
*                                COL(10) SKIP;                          23767200
*                     END;              /* END-EXTRACT W/ESR     @L4A*/ 23767300
*           END;                        /* VERIFY EXTRACTANY     @L4A*/ 23767400
* INCONSCHK:;                           /*                       @L4A*/ 23767500
*           IF FUNCNUM = EXTRACT         /* EXTRACT?             @L4A*/ 23767600
*            | FUNCNUM = EXTRACTANY THEN /* EXTRACT(ANY)?        @L4A*/ 23767700
*           DO;                         /* EXTRACT(ANY)          @L4A*/ 23767800
*/********************************************************************/ 23767900
*/*  MAKE SURE NO EXTRA PARAMETERS WERE SPECIFIED ON EXTRACT REQUEST */ 23768000
*/*         YES: MAKE SURE THERE WERE NO EXTRA PARAMETERS            */ 23768100
*/********************************************************************/ 23768500
*              INSPEC(2)  =  TYPE      ;                                23770500
*              BADSPEC(2) =  'TYPE'    ;                                23772500
*              INSPEC(3)  =  LOCKS     ;                                23774500
*              BADSPEC(3) =  'LOCKS'   ;                                23776500
*              INSPEC(4)  =  NPRMPT    ;                                23778500
*              BADSPEC(4) =  'NPRMPT'  ;                                23780500
*              INSPEC(5)  =  APF       ;                                23782500
*              BADSPEC(5) =  'APF'     ;                                23784500
*              INSPEC(6)  =  AR        ;           /*      @L3A*/       23785100
*              BADSPEC(6) =  'AR'      ;           /*      @L3A*/       23785700
*              INCONS='';           /* CLEAR ERROR STRING      */       23786500
*   /*                                                         */       23788500
*   /*  LOOP THROUGH INPUT DATA IN ARRAY AND FORMAT MESSAGE    */       23790500
*   /*                                                         */       23792500
*              DO INDEX1 = 2 TO 6;  /* VERIFICATION LOOP   @P4A*/       23794500
*                 CHARS = INSPEC(INDEX1);                               23796500
*                 IF CHARS ^= ''                                        23798500
*                    THEN DO;  /* ERROR DETECTED               */       23800500
*                      IF INCONS = ''                                   23802500
*                         THEN INCONS = BADSPEC(INDEX1);                23804500
*                         ELSE INCONS = INCONS || ',' ||                23806500
*                              BADSPEC(INDEX1);                         23808500
*                      END;                                             23810500
*              END;                                                     23812500
*              IF INCONS ^= '' THEN                                     23814500
*                 DO;          /* IF EXTRA KEY(S)          @P4A*/       23816500
*                     RETCODE = 4; /*SET LOW LEVEL RETURN CODE */       23818500
*                 ANS MSG(' ' || INCONS ||                              23820500
*                       ' OPERAND(S) INCONSISTENT WITH ' ||             23822500
*                       ''''||EXTRNAME||''' FUNCTION -- IGNORED. ')     23823800
*                       NORESCAN;                                       23825100
*                 ANS  ('@SPACE;');                                     23826500
*                 ANS  ('/* ' || INCONS ||                              23828500
*                       ' OPERAND(S) INCONSISTENT WITH ' ||             23830500
*                       ''''||EXTRNAME||''' FUNCTION -- IGNORED. */')   23832500
*                        COL(10) SKIP;                                  23834500
*                 END;                                                  23836500
*           GOTO EPCHEK;                /* SKIP CHECKING OF             23841300
*                                          OTHER PARAMETERS      @L1A*/ 23846100
*           END;                        /* END EXTRACT(ANY)             23850000
*                                                      CHECKING  @L1A*/ 23853900
*/********************************************************************/ 23858000
*/*                                                                  */ 23864500
*/*                  VALIDATE THE SVC PARAMETER                      */ 23874000
*/*                                                                  */ 23890100
*/********************************************************************/ 23906200
*/*                                                                  */ 23922300
*/* IF THE SVC NUMBER IS NOT VALID INDICATE ERROR                    */ 23938400
*/*                                                                  */ 23954500
*/*    MF     OMITTED   REGISTER  SELF-DEFINING TERM  DECIMAL #      */ 23970600
*/*    --     -------- ---------  ------------------  ---------      */ 23986700
*/*     E        OK       OK             ERROR          ERROR        */ 24002800
*/*     L        OK      ERROR            OK              OK         */ 24018900
*/* STANDARD    ERROR     OK              OK              OK         */ 24035000
*/*                                                                  */ 24051100
*        CHARS = MACLIST(1);            /* COPY SVC PARAMETER        */ 24083300
*        LOCERR = 0;                    /* NO ERROR IN SVC PARAMETER */ 24099400
*        IF NUMBER(MACLIST(1)) > 1      /* TOO MANY PARAMETERS?      */ 24115500
*         THEN LOCERR = 1;              /* YES: MARK AS ERROR        */ 24131600
*/*                                                                  */ 24147700
*/*       TEST FOR THE SVC OMITTED CASE                              */ 24163800
*/*                                                                  */ 24179900
*         ELSE IF MACLIST(1)  = ''      /* SVC PARAMETER OMITTED?    */ 24196000
*          THEN DO;                     /* YES:                      */ 24212100
*           SVCFLAG = 1;                /* INDICATE NO SVC PARAM.    */ 24228200
*           IF MF = ''                  /* MF STANDARD SUB-CASE?     */ 24244300
*            THEN DO;                   /* YES: ILLEGAL              */ 24260400
*             BADENT = 'YES';           /* FATAL ERROR DETECTED      */ 24276500
*             ANS MSG('AHA0013 SVC NUMBER IS REQUIRED BUT IS NOT ' ||   24292600
*                     'SUPPLIED.  NO TEXT IS GENERATED.')               24300600
*                       NORESCAN;                                       24308600
*             ANS  ('@SPACE;');                          /*      @P4A*/ 24316700
*             ANS ('/* AHA0013 SVC NUMBER IS REQUIRED BUT IS NOT ' ||   24324800
*                  'SUPPLIED.  NO TEXT IS GENERATED. */') COL(10) SKIP; 24340900
*            END;                       /* MF STANDARD SUB-CASE      */ 24357000
*          END;                         /*                           */ 24373100
*/*                                                                  */ 24389200
*/*        HANDLE THE SVC REGISTER CASE                              */ 24405300
*/*                                                                  */ 24421400
*          ELSE IF CHARS(1:1) = '(' /* NO: REGISTER PARAMETER?   @L4C*/ 24437500
*           THEN IF MF(1) = 'L'         /* YES: MF=L SUB-CASE?   @L1C*/ 24453600
*            THEN LOCERR       =  1;    /* YES: MARK AS ERROR        */ 24469700
*            ELSE;                      /* NO:  PARAMETER VALID      */ 24485800
*/*                                                                  */ 24501900
*/*         HANDLE THE SVC DECIMAL NUMBER CASE                       */ 24518000
*/*                                                                  */ 24534100
*           ELSE IF CHARS(1:1) >= '0' /* DECIMAL DIGIT           @L4C*/ 24550200
*                 & CHARS(1:1) <= '9'                                   24566300
*            THEN IF LENGTH(CHARS) >  3  /* YES: TOO BIG?        @L4C*/ 24582400
*                  | MF(1)         = 'E' /*      EXECUTE FORM?       */ 24598500
*              THEN   LOCERR        = 1; /* YES: MARK AS ERROR       */ 24614600
*              ELSE DO;                  /* VALIDATE NUMBER          */ 24630700
*               DO INDEX1= 1 TO LENGTH(CHARS); /* FOR ALL CHARACTERS */ 24646800
*                ACHAR = CHARS(INDEX1:INDEX1); /* GET A CHARACTER    */ 24662900
*                IF     ACHAR <  '0'           /* IS IT A DIGIT?     */ 24679000
*                   |   ACHAR >  '9'                                    24695100
*                   THEN LOCERR = 1;           /* NO: INVALID SVC    */ 24711200
*               END;                                                    24727300
*               IF LOCERR  = 0           /* CHARACTERS VALID?        */ 24743400
*                THEN DO;                /* YES: CHECK NUMBER        */ 24759500
*                 SVCNUM = FIXED(CHARS); /* CONVERT TO NUMBER        */ 24775600
*                  IF SVCNUM > 255        /* TOO LARGE?              */ 24791700
*                   THEN LOCERR = 1;      /* YES: MARK AS ERROR      */ 24807800
*                 END;                    /* CHARACTER VALID?        */ 24823900
*              END;                       /* DECIMAL NUMBER OK?      */ 24840000
*/*                                                                  */ 24856100
*/*         HANDLE THE SVC SELF-DEFINING TERM CASE                   */ 24872200
*/*                                                                  */ 24888300
*            ELSE IF MF(1) = 'E'               /* MF=E SUB-CASE?     */ 24904400
*                  | ((CHARS(1:1) < 'A'        /* NOT ALPHA      @L4C*/ 24920500
*                    | CHARS(1:1) > 'Z')       /* CHARACTER      @L4C*/ 24936600
*                    & CHARS(1:1) ^= '''') /* NOT QUOTE          @L4C*/ 24952700
*             THEN LOCERR = 1;                 /* YES: ERROR         */ 24968800
*/*                                                                  */ 24984900
*/*         SVC PARAMETER IN ERROR?                                  */ 25001000
*/*                                                                  */ 25017100
*        IF LOCERR = 1                    /* SVC PARAMETER VALID?    */ 25033200
*         THEN DO;                        /* NO: INFORM USER         */ 25049300
*          BADENT = 'YES';                /* FATAL ERROR DETECTED    */ 25065400
*          ANS MSG('AHA0073 INVALID VALUE FOR ''SVC'' - ' ||            25081500
*                  MACLIST(1))                                          25089500
*                       NORESCAN;                                       25097500
*          ANS  ('@SPACE;');                             /*      @P4A*/ 25105600
*          ANS ('/* AHA0073 INVALID VALUE FOR ''SVC'' - ' ||            25113700
*               MACLIST(1) || ' */') COL(10) SKIP;                      25129800
*         END;                                                          25145900
*         ELSE DO;                        /*      CHECK FOR ESR  @L1A*/ 25170000
*          IF  SVCNUM = 109                                             25194200
*            | SVCNUM = 116                                             25210300
*            | SVCNUM = 122                                             25226400
*            | SVCNUM = 137 THEN                                        25242500
*              DO;                        /* ESR                 @L1A*/ 25255100
*             IF ESR = '' THEN            /* NO ESR?             @L4A*/ 25267700
*             DO;                         /* NO ESR              @L4A*/ 25280300
*               BADENT = 'YES';                               /* @L1A*/ 25292900
*               ANS MSG('UPDATE OF SVC ' || MACLIST(1) ||               25305500
*                       ' REQUIRES ESR PARAMETER.')                     25313900
*                       NORESCAN;                                       25322300
*               ANS   ('@SPACE;');                       /*      @L4A*/ 25330700
*               ANS ('/* UPDATE OF SVC ' || MACLIST(1) ||               25343300
*                       ' REQUIRES ESR PARAMETER.')                     25355900
*                       COL(10) SKIP;     /*                     @L4A*/ 25368500
*             END;                        /* NO ESR              @L4A*/ 25381100
*              END;                       /* END-ESR             @L1A*/ 25393700
*           ELSE;                         /* NOT ESR             @L4A*/ 25406600
*         END;                            /* END-CHECK FOR ESR   @L1A*/ 25419600
*/********************************************************************/ 25419800
*/*                                                                  */ 25420000
*/*                  VALIDATE THE ESR PARAMETER                      */ 25420200
*/*                                                                  */ 25420400
*/********************************************************************/ 25420600
*        LOCERR = 0;                    /* NO ERROR IN ESR PARAMETER */ 25420800
*        IF ESR ^= '' THEN              /* HAVE ESR?             @L4A*/ 25421000
*        DO;                                                  /* @L4A*/ 25421200
*         CHARS = ESR(1);               /* COPY ESR PARAMETER    @L4A*/ 25421400
*        END;                                                 /* @L4A*/ 25421600
*        IF ESR ^= '' THEN              /*                       @L4A*/ 25421800
*        DO;                            /* EXTENDED SVC          @L4A*/ 25422000
*/*                                                                  */ 25422200
*/*       TEST FOR THE ESR OMITTED CASE                              */ 25422400
*/*                                                                  */ 25422600
*         IF CHARS = ''                /* ESR OMITTED?           @L4C*/ 25422800
*           & SVCFLAG ^= 1 THEN        /* BUT SVC NOT OMITTED/   @L4C*/ 25423000
*          DO;                          /* YES:                      */ 25423200
*             BADENT = 'YES';           /* FATAL ERROR DETECTED      */ 25423400
*    ANS MSG('AHA0013 EXTENDED SVC ROUTING CODE IS REQUIRED BUT IS ' || 25423600
*                 'NOT SUPPLIED.  NO TEXT IS GENERATED.')               25423800
*                       NORESCAN;                                       25424000
*             ANS  ('@SPACE;');                          /*      @L4A*/ 25424200
*    ANS ('/* AHA0013 EXTENDED SVC ROUTING CODE IS REQUIRED BUT IS ' || 25424400
*              'NOT SUPPLIED.  NO TEXT IS GENERATED. */') COL(10) SKIP  25424600
*                     ;                                  /*      @L4A*/ 25424800
*          END;                         /*                           */ 25425000
*/*                                                                  */ 25425200
*/*        HANDLE THE ESR REGISTER CASE                              */ 25425400
*/*                                                                  */ 25425600
*          ELSE IF CHARS(1:1) = '(' /* NO: REGISTER PARAMETER?       */ 25425800
*           THEN IF MF(1) = 'L'         /* YES: MF=L SUB-CASE?   @L1C*/ 25426000
*            THEN LOCERR       =  1;    /* YES: MARK AS ERROR        */ 25426200
*            ELSE;                      /* NO:  PARAMETER VALID      */ 25426400
*/*                                                                  */ 25426600
*/*         HANDLE THE ESR DECIMAL NUMBER CASE                       */ 25426800
*/*                                                                  */ 25427000
*           ELSE IF CHARS(1:1) >= '0' /* DECIMAL DIGIT               */ 25427200
*                 & CHARS(1:1) <= '9'                                   25427400
*            THEN IF LENGTH(CHARS) >  3  /* YES: TOO BIG?            */ 25427600
*                  | MF(1)         = 'E' /*      EXECUTE FORM?       */ 25427800
*              THEN   LOCERR        = 1; /* YES: MARK AS ERROR       */ 25428000
*              ELSE DO;                  /* VALIDATE NUMBER          */ 25428200
*               DO INDEX1= 1 TO LENGTH(CHARS); /* FOR ALL CHARACTERS */ 25428400
*                ACHAR = CHARS(INDEX1:INDEX1); /* GET A CHARACTER    */ 25428600
*                IF     ACHAR <  '0'           /* IS IT A DIGIT?     */ 25428800
*                   |   ACHAR >  '9'                                    25429000
*                   THEN LOCERR = 1;           /* NO: INVALID ESR    */ 25429200
*               END;                                                    25429400
*               IF LOCERR  = 0           /* CHARACTERS VALID?        */ 25429600
*                THEN DO;                /* YES: CHECK NUMBER        */ 25429800
*                 ESRNUM = FIXED(CHARS); /* CONVERT TO NUMBER    @L4A*/ 25430000
*                  IF ESRNUM > 255        /* TOO LARGE?          @L4A*/ 25430200
*                   THEN LOCERR = 1;      /* YES: MARK AS ERROR      */ 25430400
*                 END;                    /* CHARACTER VALID?        */ 25430600
*              END;                       /* DECIMAL NUMBER OK?      */ 25430800
*/*                                                                  */ 25431000
*/*         HANDLE THE ESR SELF-DEFINING TERM CASE                   */ 25431200
*/*                                                                  */ 25431400
*            ELSE IF MF(1) = 'E'               /* MF=E SUB-CASE?     */ 25431600
*                  | ((CHARS(1:1) < 'A'        /* NOT ALPHA          */ 25431800
*                    | CHARS(1:1) > 'Z')       /* CHARACTER          */ 25432000
*                    & CHARS(1:1) ^= '''') /* NOT QUOTE              */ 25432200
*             THEN LOCERR = 1;                 /* YES: ERROR         */ 25432400
*/*                                                                  */ 25432600
*/*         ESR PARAMETER IN ERROR?                                  */ 25432800
*/*                                                                  */ 25433000
*        IF LOCERR = 1                    /* ESR PARAMETER VALID?    */ 25433200
*         THEN DO;                        /* NO: INFORM USER         */ 25433400
*          BADENT = 'YES';                /* FATAL ERROR DETECTED    */ 25433600
*          ANS MSG('AHA0073 INVALID VALUE FOR ''ESR'' - ' ||            25433800
*                  ESR(1)) NORESCAN;                                    25434000
*          ANS  ('@SPACE;');                             /*      @P4A*/ 25434200
*          ANS ('/* AHA0073 INVALID VALUE FOR ''ESR'' - ' ||            25434400
*               ESR(1) || ' */') COL(10) SKIP;                          25434600
*         END;                                                          25434800
*        ELSE                           /* VALID ESR PARAMETER   @L4A*/ 25435000
*           ESRFLAG = 2;                /* INDICATE ESR PARAM    @L4A*/ 25435200
*        END;                           /* EXTENDED SVC          @L4A*/ 25435400
*/********************************************************************/ 25435700
*/*                                                                  */ 25451800
*/*      CHECK FUNCTION CODE EXCEPT WHEN MF=E                        */ 25467900
*/*                                                                  */ 25484000
*/********************************************************************/ 25500100
*    IF MFTYPE ^= 'E'                          /* MF=E?              */ 25516200
*      THEN DO;                                /* NO: CHECK PARAMETER*/ 25532300
*        IF MACLIST(2) = 'REPLACE'             /* REPLACE FUNCTION?  */ 25548400
*           THEN FUNCNUM = REPLACE;            /* YES: SET CODE      */ 25564500
*        ELSE                                  /* NOT REPLACE    @LXA*/ 25572500
*        IF MACLIST(2) = 'REPLACEEPA'          /* REPLACEEPA?    @LXA*/ 25580500
*           THEN FUNCNUM = REPLACEEPA;         /* YES: SET CODE  @LXA*/ 25588500
*           ELSE IF MACLIST(2) = 'DELETE' THEN /* DELETE FUNCTION?   */ 25596500
*              DO;                             /* YES:               */ 25604500
*                 FUNCNUM = DELETE;            /* SET FUNCTION CODE  */ 25612800
* /* INSPEC(1) AND BADSPEC(1) SET TO "REPLACE","DELETE" OR "EXTRACT  */ 25618700
*              INSPEC(2)  =  TYPE      ;                                25624600
*              BADSPEC(2) =  'TYPE'    ;                                25630500
*              INSPEC(3)  =  LOCKS     ;                                25636400
*              BADSPEC(3) =  'LOCKS'   ;                                25642300
*              INSPEC(4)  =  NPRMPT    ;                                25648200
*              BADSPEC(4) =  'NPRMPT'  ;                                25654100
*              INSPEC(5)  =  APF       ;                                25660000
*              BADSPEC(5) =  'APF'     ;                                25665900
*              INSPEC(6)  =  EP        ;                                25671800
*              BADSPEC(6) =  'EP'      ;                                25677700
*              INSPEC(7)  =  EPNAME    ;                                25683600
*              BADSPEC(7) =  'EPNAME'  ;                                25689500
*              INSPEC(8)  =  AR        ;           /*      @L3A*/       25691400
*              BADSPEC(8) =  'AR'      ;           /*      @L3A*/       25693300
*              INCONS='';           /* CLEAR ERROR STRING      */       25695400
*   /*                                                         */       25701300
*   /*  LOOP THROUGH INPUT DATA IN ARRAY AND FORMAT MESSAGE    */       25707200
*   /*                                                         */       25713100
*              DO INDEX1 = 2 TO 8;  /* VERIFICATION LOOP   @P4A*/       25719000
*                 CHARS = INSPEC(INDEX1);                               25724900
*                 IF CHARS ^= ''                                        25730800
*                    THEN                                               25734700
*                    DO;       /* ERROR DETECTED               */       25738600
*                      IF INCONS = ''                                   25742600
*                         THEN INCONS = BADSPEC(INDEX1);                25748500
*                         ELSE INCONS = INCONS || ',' ||                25754400
*                              BADSPEC(INDEX1);                         25760300
*                    END;                                               25766200
*              END;                                                     25772100
*              IF INCONS ^= '' THEN                                     25778000
*              DO;          /* IF EXTRA KEY(S)          @P4A*/          25783900
*                 RETCODE = 4; /*SET LOW LEVEL RETURN CODE */           25789800
*                 ANS MSG(' ' || INCONS ||                              25795700
*                       ' OPERAND(S) INCONSISTENT WITH ' ||             25801600
*                       '''DELETE'' FUNCTION -- IGNORED. ')             25805500
*                       NORESCAN;                                       25809400
*                 ANS  ('@SPACE;');                                     25813400
*                 ANS  ('/* ' || INCONS ||                              25819300
*                       ' OPERAND(S) INCONSISTENT WITH ' ||             25825200
*                       '''DELETE'' FUNCTION -- IGNORED. */')           25831100
*                        COL(10) SKIP;                                  25837000
*              END;         /* IF EXTRA KEY(S)          @P4A*/          25858000
*              END;                            /* DELETE             */ 25879000
*              ELSE DO;                        /* BAD FUNCTION PARM  */ 25900000
*                 BADENT = 'YES';            /* FATAL ERROR DETECTED */ 25910800
*                 IF MACLIST(2) = ''           /* PARAMETER OMITTED?*/  25921600
*                    THEN DO;                  /* YES: ISSUE MSG     */ 25932400
*                     ANS MSG('AHA0013 FUNCTION IS REQUIRED' ||         25943200
*                             ' BUT IS NOT SUPPLIED.'   ||              25954000
*                             '  NO TEXT IS GENERATED.')                25959400
*                       NORESCAN;                                       25964800
*                     ANS  ('@SPACE;');                  /*      @P4A*/ 25970200
*                     ANS ('/* AHA0013 FUNCTION IS REQUIRED' ||         25975600
*                             ' BUT IS NOT SUPPLIED.'   ||              25986400
*                             '  NO TEXT IS GENERATED. */')             25997200
*                             COL(10) SKIP;                             26008000
*                    END;                      /* OMITTED PARAMETER  */ 26018800
*                    ELSE DO;                  /* NO: INVALID PARM.  */ 26029600
*                       ANS MSG('AHA0073 INVALID VALUE FOR ' ||         26040400
*                               '''FUNCTION'' - ' ||                    26051200
*                               MACLIST(2)) NORESCAN;                   26059300
*                       ANS  ('@SPACE;');                /*      @P4A*/ 26067400
*                       ANS ('/* AHA0073 INVALID VALUE FOR ' ||         26072800
*                               '''FUNCTION'' - ' ||                    26083600
*                               MACLIST(2) || ' */') COL(10) SKIP       26090800
*                               NORESCAN;                               26098000
*                    END;                      /* INVALID PARAMETER  */ 26105200
*              END;                            /* BAD FUNCTION PARM  */ 26116000
*      END;                                    /* FUNCTION TESTING   */ 26126800
*/********************************************************************/ 26137600
*/*                                                                  */ 26150000
*/*      CHECK TYPE IF THIS IS NOT MF=E OR A DELETE CASE             */ 26200000
*/*                                                                  */ 26250000
*/********************************************************************/ 26260000
*    IF MFTYPE  ^= 'E'                  /* IS THIS MF=E?             */ 26270000
*     & FUNCNUM ^= DELETE               /* IS THIS A DELETE?         */ 26280000
*     & FUNCNUM ^= REPLACEEPA           /* IS THIS REPLACEEPA?   @LXA*/ 26285000
*       THEN DO;                        /* NO: PROCESS PARAMETER     */ 26290000
*        IF     TYPE ^= '(1)'                                           26300000
*           &   TYPE ^= '(2)'                                           26350000
*           &   TYPE ^= '(3)'                                           26400000
*           &   TYPE ^= '(4)'                                           26450000
*           &   TYPE ^= '(5)'                                           26500000
*           &   TYPE ^= '(6)' THEN                                      26550000
*             DO;                       /* YES: ITS INVALID          */ 26600000
*                BADENT = 'YES';        /* FATAL ERROR DETECTED      */ 26612500
*                IF TYPE   = ''         /* PARAMETER OMITTED?        */ 26625000
*                   THEN DO;            /* YES: ISSUE MSG            */ 26637500
*                     ANS MSG('AHA0013 TYPE IS REQUIRED' ||             26650000
*                             ' BUT IS NOT SUPPLIED.'   ||              26662500
*                             '  NO TEXT IS GENERATED.')                26668700
*                       NORESCAN;                                       26674900
*                     ANS  ('@SPACE;');                  /*      @P4A*/ 26681200
*                     ANS ('/* AHA0013 TYPE IS REQUIRED' ||             26687500
*                          ' BUT IS NOT SUPPLIED.'   ||                 26700000
*                          ' NO TEXT IS GENERATED. */') SKIP COL(10);   26712500
*                   END;                      /* OMITTED PARAMETER */   26725000
*                   ELSE DO;            /* NO: INVALID PARAMETER     */ 26737500
*                       ANS MSG('AHA0073 INVALID VALUE FOR ' ||         26750000
*                               'TYPE - ' ||                            26762500
*                               TYPE) NORESCAN;                         26771800
*                       ANS  ('@SPACE;');                /*      @P4A*/ 26781200
*                       ANS ('/* AHA0073 INVALID VALUE FOR ' ||         26787500
*                               '''TYPE'' - ' ||                        26800000
*                               TYPE || ' */') COL(10) SKIP;            26812500
*                   END;                                                26825000
*             END;                      /* ILLEGAL TYPE PARAMETER    */ 26837500
*             ELSE TYPENUM = FIXED(TYPE(1)); /* CONVERT TO NUMBER    */ 26850000
*       END;                            /* MAY HAVE A TYPE PARAMETER */ 26875000
*/*                                                                  */ 26900000
*/*   IF ITS A TYPE 5 SVC DON'T ALLOW AN ENTRY POINT TO BE SPECIFIED */ 26950000
*/*                                                                  */ 27000000
*        IF TYPENUM  = 5                /* TYPE 5 SVC?               */ 27042800
*         & (EP ^= '' | EPNAME ^= '')   /* ENTRY POINT SPECIFIED @L1C*/ 27085600
*           THEN DO;              /* ERROR SPECIFICATION         @L1A*/ 27128400
*                 ANS MSG('AHA0023 ''TYPE''=5 AND ''EPNAME'''           27171200
*                         || ' OPTIONS ARE MUTUALLY EXCLUSIVE. '        27214000
*                         || 'NO TEXT IS GENERATED. ')                  27235400
*                       NORESCAN;                                       27256800
*                 ANS  ('@SPACE;');                      /*      @P4A*/ 27278200
*                 ANS (' /* AHA0023 ''TYPE''=5 AND ''EPNAME'''          27299600
*                         || ' OPTIONS ARE MUTUALLY EXCLUSIVE. '        27342400
*                         || 'NO TEXT IS GENERATED. */')      /* @P2C*/ 27385200
*                      SKIP COL(10);                                    27428000
*                 BADENT = 'YES'; /* FATAL ERROR DETECTED        @L1C*/ 27460100
*              END;               /* ERROR SPECIFICATION         @L1C*/ 27492200
* EPCHEK: ;                       /* CHECK ENTRY POINT           @L1A*/ 27524300
*/********************************************************************/ 27556400
*/*                                                                  */ 27600000
*/*              VALIDATE ENTRY POINT PARAMETER                      */ 27650000
*/*              'EP' OR 'EPNAME'                                @L1C*/ 27700000
*/*                                                                  */ 28100000
*/********************************************************************/ 28101500
*/*                                                                  */ 28103000
*/*      CHECK ENTRY POINT -                                         */ 28103500
*/*                                                                  */ 28104000
*/*      MF        LABEL     REGISTER  OMITTED                       */ 28104500
*/*      --        -----     --------  --------                      */ 28106000
*/*  STANDARD       OK          OK      ERROR                        */ 28107500
*/*       L         OK        ERROR       OK                         */ 28109000
*/*       E        ERROR        OK        OK                         */ 28110500
*/*                                                                  */ 28112000
*            LOCERR = 0;                    /* EP PARAMETER IS VALID */ 28113500
*            IF TYPENUM ^= 5                /* NOT A TYPE 5 SVC?     */ 28115000
*             & FUNCNUM ^= DELETE           /* NOT A DELETE REQUEST? */ 28116500
*             THEN DO;                 /* YES: ENTRY-POINT CHECK @L1C*/ 28116600
*                IF EP = '' & EPNAME = ''   /* NEITHER EP NOR EPNAME    28116700
*                                              SPECIFIED?        @L1A*/ 28116800
*                   THEN DO;                /* YES: ISSUE MSG        */ 28116900
*                     IF MF = ''                                        28117000
*                        THEN DO;           /* STANDARD CASE     @L1A*/ 28117100
*                BADENT = 'YES';            /* FATAL ERROR       @L1A*/ 28117200
*                ANS MSG('AHA0013 ENTRY-POINT OPERAND IS REQUIRED' ||   28117300
*                        ' BUT IS NOT SUPPLIED.'   ||                   28117400
*                        '  NO TEXT IS GENERATED.')                     28117500
*                       NORESCAN;                                       28117600
*                ANS  ('@SPACE;');                       /*      @P4A*/ 28117700
*                ANS ('/* AHA0013 ENTRY-POINT OPERAND IS REQUIRED' ||   28117800
*                     ' BUT IS NOT SUPPLIED.'   ||                      28117900
*                     ' NO TEXT IS GENERATED. */')                      28118000
*                       COL(10) SKIP;                        /*  @L1A*/ 28118100
*                        END;               /* END-STANDARD CASE     */ 28118200
*                     ELSE;                                  /*  @L1A*/ 28118300
*                   END;                    /* OMITTED PARAMETER     */ 28118400
*              ELSE IF EP ^= '' & EPNAME ^= ''                          28118500
*                THEN DO;                   /* BOTH EP/EPNAME    @L1A*/ 28118600
*                       BADENT = 'YES';     /* FATAL ERROR       @L1A*/ 28118700
*                       ANS MSG('BOTH ''EP'' AND ''EPNAME'''            28118800
*                         || ' SPECIFIED.' ||                           28118900
*                        '  NO TEXT IS GENERATED.')                     28119000
*                       NORESCAN;                                       28119100
*                       ANS  ('@SPACE;');                /*      @P4A*/ 28119200
*                       ANS ('/* BOTH ''EP'' AND ''EPNAME'''            28119300
*                         || ' SPECIFIED.' ||                           28119400
*                     ' NO TEXT IS GENERATED. */')            /* @L1A*/ 28119500
*                              COL(10) SKIP;                            28119600
*                  END;                     /* END- BOTH         @L1A*/ 28119700
*/********************************************************************/ 28119800
*/*                                                                  */ 28119900
*/*              PROCESS "EP" OPTION                             @L1A*/ 28120000
*/*                                                                  */ 28120100
*/********************************************************************/ 28120200
*              ELSE IF (EP ^= '')           /* EP SPECIFIED?     @L1A*/ 28120300
*              THEN DO;                     /* EP CHECK          @L1A*/ 28120400
*              IF NUMBER(EP) > 1            /* TOO MANY PARAMETERS?  */ 28120500
*               | EP(1,1:1) >= '0'          /* VERIFY VALID          */ 28120600
*               & EP(1,1:1) <= '9'          /* ALPHANUMERIC NAME @L1C*/ 28120700
*               THEN LOCERR  = 1;           /* YES: MARK AS ERROR    */ 28121000
*/*                                                                  */ 28122500
*/*              CHECK THE MF = L CASES                              */ 28134500
*/*                                                                  */ 28136000
*                ELSE IF MF(1)= 'L'         /* NO:  MF=L CASE?   @L1C*/ 28137500
*                 THEN IF EP ^= ''          /* YES: EP SUPPLIED?     */ 28139000
*                  THEN IF EP(1,1:1) = '('  /* YES: REGISTER CASE    */ 28140500
*                   THEN LOCERR = 1;        /*      IS ILLEGAL       */ 28142000
*                   ELSE;                   /* NO:  REST OF MF=L OK  */ 28143500
*                  ELSE;                    /* NO:  EP NOT SUPPLIED  */ 28145000
*/*                                                                  */ 28146500
*/*               CHECK THE MF = E CASES                             */ 28148000
*/*                                                                  */ 28149500
*                 ELSE IF MF(1)= 'E'        /* NO:  MF=E CASE?       */ 28151000
*                  THEN IF EP(1,1:1)  ^= '('/* YES: NOT REGISTER CASE*/ 28152500
*                   THEN LOCERR = 1;        /* YES: INVALID          */ 28155500
*              IF LOCERR = 1                /* EP INVALID?           */ 28157000
*               THEN DO;                    /* YES: INFORM USER      */ 28158500
*                BADENT = 'YES';            /* FATAL ERROR DETECTED  */ 28160000
*                     ANS MSG('AHA0073 INVALID ' ||                     28169000
*                             '''EP'' - ' ||                            28178000
*                             'OPERAND SPECIFIED -'||                   28178900
*                             EP ||                                     28179800
*                        '  NO TEXT IS GENERATED.')                     28180200
*                       NORESCAN;                                       28180600
*                     ANS  ('@SPACE;');                  /*      @P4A*/ 28181100
*                     ANS ('/* AHA0073 INVALID ' ||                     28181600
*                             '''EP'' - ' ||                            28182500
*                             'OPERAND SPECIFIED -'||                   28183400
*                             EP ||                                     28184300
*                        '  NO TEXT IS GENERATED.' ||                   28185200
*                        ' */') COL(10) SKIP;                /*  @L1A*/ 28186100
*               END;                        /* ILLEGAL PARAMETER     */ 28187000
*             END;                          /* END EP CHECK      @L1C*/ 28188500
*/********************************************************************/ 28190000
*/*                                                                  */ 28191500
*/*              PROCESS "EPNAME" OPTION                         @L1A*/ 28191600
*/*                                                                  */ 28191700
*/********************************************************************/ 28191800
*              ELSE DO;                     /* EPNAME CHECK      @L1A*/ 28191900
*              VERSION = '2';       /* EPNAME IS A VERSION 2            28192000
*                                      SPECIFICATION         @YA11662*/ 28192100
*              IF NUMBER(EPNAME) > 1     /* TOO MANY PARAMETERS? @L1A*/ 28192200
*               THEN LOCERR  = 1;          /* YES: MARK AS ERROR @L1A*/ 28192300
*/*                                                                  */ 28192400
*/*              CHECK THE MF = L CASES                          @L1A*/ 28192500
*/*                                                                  */ 28192600
*                IF MF(1)= 'L'              /* MF=L CASE?        @L1A*/ 28192700
*                  THEN IF EPNAME(1,1:1) = '(' /* YES:                  28192800
*                                              REGISTER CASE            28192900
*                                              IS ILLEGAL        @L1A*/ 28193000
*                   THEN LOCERR = 1;                                    28193100
*                   ELSE;                 /* NO: REST OF MF=L OK @L1A*/ 28193200
*/*                                                                  */ 28193300
*/*               CHECK THE MF = E CASES                         @L1A*/ 28193400
*/*                                                                  */ 28193500
*                ELSE IF MF(1) = 'E'        /* MF=E CASE?        @L1A*/ 28193600
*                  THEN IF EPNAME(1,1:1) ^= '('  /* YES:                28193700
*                                              NOT REGISTER?     @L1A*/ 28193800
*                   THEN LOCERR = 1;        /* YES: INVALID      @L1A*/ 28193900
*              IF LOCERR = 1                /* EPNAME INVALID?   @L1A*/ 28194000
*               THEN DO;                    /* YES: INFORM USER  @L1A*/ 28194100
*                BADENT = 'YES';            /* FATAL ERROR DETECTED  */ 28194200
*                     ANS MSG('AHA0073 INVALID ' ||                     28194300
*                             '''EPNAME'' - ' ||                        28194400
*                             'OPERAND SPECIFIED -'||                   28194500
*                             EPNAME ||                                 28194600
*                        '  NO TEXT IS GENERATED.')                     28194700
*                       NORESCAN;                                       28194800
*                     ANS  ('@SPACE;');                  /*      @P4A*/ 28194900
*                     ANS ('/* AHA0073 INVALID ' ||                     28195000
*                             '''EPNAME'' - ' ||                        28195200
*                             'OPERAND SPECIFIED -'||                   28195400
*                             EPNAME ||                                 28195600
*                        '  NO TEXT IS GENERATED.' ||                   28195800
*                        ' */') COL(10) SKIP;                /*  @L1A*/ 28196000
*               END;                        /* ILLEGAL PARAMETER     */ 28196200
*             END;                          /* END EPNAME CHECK  @L1A*/ 28196400
*/********************************************************************/ 28196600
*            END;                           /* END-                     28196800
*                                              ENTRY-POINT CHECK     */ 28197000
*/********************************************************************/ 28197200
*/*                                                                  */ 28197400
*/*      CHECK FOR VALID, NON-DUPLICATE LOCKS                        */ 28197600
*/*                                                                  */ 28197800
*/********************************************************************/ 28198000
*/*            - TYPE 1 DEFAULTS TO HAVING THE LOCAL LOCK            */ 28200000
*/*            - TYPE 3 + 4 MAY NOT HOLD ANY GLOBAL SPIN LOCK    @L1C*/ 28250000
*/*            - TYPE 6 MAY NOT HOLD ANY LOCK                        */ 28300000
*/*                                                                  */ 28350000
*        IF FUNCNUM  >= EXTRACT &                                       28354100
*           FUNCNUM  <= EXTRACTANY THEN   /*                     @LXA*/ 28358200
*           GOTO GEN;                     /* EXTRACT CHECKING DONE      28362400
*                                                                @L4C*/ 28368700
*        IF LOCKS   ^= ''                 /* ANY LOCKS SPECIFIED?    */ 28375000
*         & MFTYPE  ^= 'E'                /* NOT MF=E?               */ 28400000
*         & FUNCNUM ^= DELETE THEN        /* NOT A DELETE REQUEST?   */ 28425000
*           IF TYPENUM = 6 THEN           /* YES: IS THIS A TYPE 6?  */ 28450000
*              DO;                        /* YES: THATS ILLEGAL      */ 28500000
*                 ANS MSG('AHA0023 ''LOCKS'' INVALID WITH ''TYPE'''     28521400
*                         || ' 6 SVC. NO TEXT IS GENERATED')            28532100
*                       NORESCAN;                                       28542800
*                 ANS  ('@SPACE;');                      /*      @P4A*/ 28553500
*                 ANS ('/* AHA0023 ''LOCKS'' INVALID WITH ''TYPE'''     28564200
*                      || ' 6 SVC. NO TEXT IS GENERATED */')            28585600
*                      COL(10) SKIP;                                    28607000
*                 BADENT = 'YES';         /* FATAL ERROR DETECTED    */ 28628400
*              END;                                                     28650000
*              ELSE DO;                   /* NOT A TYPE 6            */ 28700000
*/*                                                                  */ 28800000
*/*               IS THIS A DUPLICATE LOCK?                          */ 28850000
*/*                                                                  */ 28900000
*                 LOCERR = 0;                         /* LOCK OK     */ 28933300
*                 DO INDEX1 = 1 TO NUMBER(LOCKS);     /* CHECK EACH     28966600
*                                                         LOCK PASSED*/ 29000000
*                    INDEX2 = INDEX1 + 1;             /* AGAINST     */ 29050000
*                    DO WHILE INDEX2 <= NUMBER(LOCKS);/* OTHERS GIVEN*/ 29100000
*                       IF LOCKS(INDEX1)= LOCKS(INDEX2) THEN /* SAME?*/ 29150000
*                          DO;                               /* ERROR*/ 29200000
*                             ANS MSG('*** DUPLICATE LOCKS --- ' ||     29231200
*                                      LOCKS(INDEX1))                   29246800
*                       NORESCAN;                                       29262400
*                             ANS  ('@SPACE;');          /*      @P4A*/ 29278000
*                             ANS ('/* *** DUPLICATE LOCKS --- ' ||     29293600
*                                   LOCKS(INDEX1) || ' */')             29324800
*                                   COL(10) SKIP;                       29356000
*                             BADENT = 'YES';                /* ERROR*/ 29387200
*                             LOCERR = 1;             /* NOTE ERROR  */ 29418400
*                          END;                                         29450000
*                       INDEX2 = INDEX2 + 1;              /* ITERATE */ 29500000
*                    END;                                               29550000
*/*                                                                  */ 29600000
*/*                  MAP THE LOCK NAME INTO ITS NUMERICS             */ 29650000
*/*                                                                  */ 29700000
*                    IF LOCERR = 0 THEN DO;                             29745000
*                     TEMP = 0;                       /* LOCK VALUE  */ 29790000
*                     IF LOCKS(INDEX1)= 'LOCAL' THEN                    29835000
*                       TEMP = NLOCAL;                                  29880000
*                       ELSE IF LOCKS(INDEX1)= 'CMS' THEN               29925000
*                          TEMP = NCMS;                                 29970000
*                          ELSE IF LOCKS(INDEX1)= 'SRM' THEN            30015000
*                             TEMP = NSRM;    /*            @ZMC3226*/  30060000
*                             ELSE IF LOCKS(INDEX1)= 'SALLOC' THEN      30105000
*                                TEMP = NSALLOC;              /* @L1C*/ 30155000
*                                ELSE IF LOCKS(INDEX1)= 'DISP' THEN     30650000
*                                   TEMP = NDISP;                       30700000
*                                   ELSE DO;    /* ERROR DETECTED    */ 30750000
*                                      ANS MSG('AHA0073 INVALID '  ||   30770000
*                                              'VALUE FOR '  ||         30790000
*                                              '''LOCK'' - ' ||         30810000
*                                              LOCKS(INDEX1))           30820000
*                       NORESCAN;                                       30830000
*                                      ANS  ('@SPACE;');   /*    @P4A*/ 30840000
*                                      ANS ('/* AHA0073 INVALID '  ||   30850000
*                                           'VALUE FOR '  ||            30870000
*                                           '''LOCK'' - ' ||            30890000
*                                           LOCKS(INDEX1) || ' */')     30910000
*                                           SKIP COL(10);               30930000
*                                      BADENT = 'YES'; /* FATAL ERROR*/ 30950000
*                                   END;                                31000000
*                    REQLOCK = REQLOCK + TEMP; /* ADD LOCK TO OTHERS */ 31050000
*                    IF TYPENUM = 3                                     31051200
*                     | TYPENUM = 4 THEN  /* LPA-RESIDENT SVC?   @L1A*/ 31052400
*                        DO;              /* YES: CHECK FOR             31053600
*                                            ILLEGAL SPIN LOCK   @L1A*/ 31054800
*                            IF TEMP=NSRM                               31056000
*                             | TEMP=NSALLOC                            31057200
*                             | TEMP=NDISP /* GLOBAL SPIN LOCK?  @L1A*/ 31058400
*                             THEN DO;     /* YES: ERROR         @L1A*/ 31059600
*                                    ANS MSG('''TYPE'' 3/4'             31060800
*                                     || ' CANNOT GET SPIN ('           31062000
*                                     || LOCKS(INDEX1)                  31063200
*                                     || ') LOCK. '                     31064400
*                                     || ' NO TEXT IS'                  31065600
*                                     || ' GENERATED.')                 31066200
*                       NORESCAN;                                       31066800
*                                    ANS  ('@SPACE;');     /*    @P4A*/ 31067400
*                                    ANS ('/* ''TYPE'' 3/4'             31068000
*                                     || ' CANNOT GET SPIN ('           31069200
*                                     || LOCKS(INDEX1)                  31070400
*                                     || ') LOCK. '                     31071600
*                                     || ' NO TEXT IS'                  31072800
*                                     || ' GENERATED. */')              31074000
*                                          COL(10) SKIP;     /*  @L1A*/ 31075200
*                                         BADENT = 'YES';   /* ERROR */ 31076400
*                             END;         /* END-ERROR          @L1A*/ 31077600
*                           END;           /* END-CHECK FOR             31078800
*                                            ILLEGAL SPIN LOCK   @L1A*/ 31080000
*                   END;                                                31083300
*                 END;                                                  31116600
*              END;                                                     31150000
*/*                                                                  */ 31200000
*/*      DEFAULT THE LOCAL LOCK FOR TYPE 1 SVC                       */ 31250000
*/*                                                                  */ 31300000
*        TEMP = REQLOCK/NLOCAL/2*2;      /* CLEAR BITS IN LOCK BYTE     31311500
*                                           FROM LOCAL BIT DOWN      */ 31323000
*        TEMP = REQLOCK/NLOCAL-TEMP;     /* SUBTRACT ABOVE RESULT       31334500
*                                           FROM THE RESULT OF CLEARING 31346000
*                                           BITS BELOW LOCAL BIT        31357500
*                                           LEAVING THE LOCAL BIT    */ 31369000
*        IF TYPENUM        = 1                    /* TYPE 1 SVC?     */ 31380500
*         & TEMP           = 0                    /* DON'T HAVE IT?  */ 31392000
*         & MFTYPE        ^= 'E'                  /* NOT MF=E?       */ 31403500
*         & FUNCNUM       ^= DELETE               /* NOT DELETE?     */ 31415000
*           THEN REQLOCK = REQLOCK + NLOCAL;      /* NO: ADD IT      */ 31426500
*/********************************************************************/ 31438000
*/*                                                                  */ 31450000
*/*      CHECK APF PARAMETER -- DEFAULT IS NO                        */ 31950000
*/*                                                                  */ 32000000
*/********************************************************************/ 32021400
*        IF APF = ''                        /* APF PARAMETER NULL?   */ 32042800
*         | APF  = '(NO)'                   /* APF PARAMETER NO?     */ 32064200
*         | MFTYPE = 'E'                    /* MF TYPE IS E?         */ 32085600
*         | FUNCNUM = DELETE                /* FUNCTION DELETE?      */ 32107000
*          THEN APFNUM = 0;                /* YES: SET APF TO "NO"   */ 32128400
*           ELSE IF APF =  '(YES)'          /* NO: SET APF TO "YES"? */ 32150000
*             THEN APFNUM = NAPF;          /* YES: SET APF TO "YES" */  32200000
*              ELSE DO;                     /* NO: ERROR             */ 32250000
*                 ANS MSG('AHA0073 ''APF''' ||                          32275000
*                   ' KEYWORD MUST BE ''YES'' OR ''NO''. ')             32291600
*                       NORESCAN;                                       32308200
*                 ANS  ('@SPACE;');                        /*    @P4A*/ 32325000
*                 ANS ('/* AHA0073 ''APF''' ||                          32350000
*                   ' KEYWORD MUST BE ''YES'' OR ''NO''. */')           32375000
*                   COL(10) SKIP;                                       32400000
*                 BADENT = 'YES';           /* FATAL ERROR DETECTED  */ 32425000
*              END;                                                     32450000
*/********************************************************************/ 32475000
*/*                                                                  */ 32500000
*/*      CHECK AR PARAMETER -- DEFAULT IS NO                         */ 32502300
*/*                                                                  */ 32504600
*/********************************************************************/ 32506900
*        IF AR = ''                     /*  AR PARAMETER NULL?   @L3A*/ 32509200
*         | AR  = '(NO)'                /*  AR PARAMETER NO?     @L3A*/ 32511500
*         | MFTYPE = 'E'                /*  MF TYPE IS E?        @L3A*/ 32513800
*         | FUNCNUM = DELETE            /*  FUNCTION DELETE?     @L3A*/ 32516100
*          THEN ARNUM = 0;              /*  YES: SET AR TO "NO"  @L3A*/ 32518400
*           ELSE IF AR =  '(YES)'       /*  NO: SET AR TO "YES"? @L3A*/ 32520700
*             THEN ARNUM = NAR;         /*  YES: SET AR TO "YES" @L3A*/ 32523000
*              ELSE DO;                 /*  NO: ERROR            @L3A*/ 32525300
*                 ANS MSG('AHA0073 ''AR'' KEYWORD VALUE '               32527600
*                         || 'MUST BE ''YES'' OR ''NO''. ')             32529100
*                       NORESCAN;                                       32530600
*                 ANS  ('@SPACE;');                        /*    @L3A*/ 32532200
*                 ANS ('/* AHA0073 ''AR'' KEYWORD VALUE '               32534500
*                 || 'MUST BE ''YES'' OR ''NO''. */') COL(10) SKIP;     32536800
*                 BADENT = 'YES';       /*  FATAL ERROR DETECTED @L3A*/ 32539100
*              END;                                                     32541400
*/********************************************************************/ 32543700
*/*                                                                  */ 32546000
*/*      CHECK NON-PREEMPTIBILITY PARAMETER -- DEFAULT IS NO         */ 32550000
*/*                                                                  */ 32600000
*/********************************************************************/ 32616600
*        IF NPRMPT = ''                     /* NP PARAMETER NULL?    */ 32633200
*         | NPRMPT = '(NO)'                 /* NP PARAMETER NO?      */ 32649800
*         | MFTYPE = 'E'                    /* MF TYPE IS E?         */ 32666400
*         | FUNCNUM = DELETE                /* FUNCTION DELETE?      */ 32683000
*           THEN NPNUM = 0;                      /* YES:             */ 32700000
*           ELSE IF NPRMPT = '(YES)'             /* NO: SET TO "YES"?*/ 32750000
*              THEN NPNUM = NNP;                 /* YES              */ 32800000
*              ELSE DO;                          /* NO: ERROR        */ 32850000
*                 ANS MSG('AHA0073 ''NPRMPT''' ||                       32875000
*                   ' KEYWORD MUST BE ''YES'' OR ''NO''. ')             32891600
*                       NORESCAN;                                       32908200
*                 ANS  ('@SPACE;');                        /*    @P4A*/ 32925000
*                 ANS ('/* AHA0073 ''NPRMPT''' ||                       32950000
*                   ' KEYWORD MUST BE ''YES'' OR ''NO''. */')           32975000
*                   COL(10) SKIP;                                       33000000
*                 BADENT = 'YES';           /* FATAL ERROR DETECTED  */ 33025000
*              END;                                                     33050000
* GEN: ;                                         /* VALIDITY-CHECKING   33058300
*                                                   COMPLETE     @L1A*/ 33066600
*/********************************************************************/ 33075000
*/*                                                                  */ 33100000
*/*                  VALIDATE THE USEECVT PARAMETER                  */ 33100300
*/*                                                                  */ 33100600
*/********************************************************************/ 33100900
*        IF USEECVT ^= '' THEN      /*                           @L4A*/ 33101200
*          IF USEECVT(1) ^= 'NO' &  /*                           @L4A*/ 33101500
*             USEECVT(1) ^= 'YES' THEN  /*                       @L4A*/ 33101800
*          DO;                      /* BAD USEECVT               @L4A*/ 33102100
*            BADENT = 'YES';        /* BAD USEECVT               @L4A*/ 33102400
*                 ANS MSG('AHA0073 ''USEECVT''' ||                      33102700
*                   ' KEYWORD MUST BE ''YES'' OR ''NO''. ')             33102900
*                       NORESCAN;                                       33103100
*                 ANS  ('@SPACE;');                        /*    @L4A*/ 33103300
*                 ANS ('/* AHA0073 ''USEECVT''' ||                      33103600
*                   ' KEYWORD MUST BE ''YES'' OR ''NO''. */')           33103900
*                   COL(10) SKIP;                             /* @L4A*/ 33104200
*          END;                     /* BAD USEECVT               @L4A*/ 33104500
*/********************************************************************/ 33104800
*/*                                                                  */ 33105100
*/*      IF THERE IS A LABEL ON THE MACRO - INSERT IT HERE           */ 33106200
*/*                                                                  */ 33112400
*/********************************************************************/ 33118600
*        IF MACLABEL ^= '' THEN                  /* ANY LABEL?       */ 33124800
*              ANS(MACLABEL) COL(2);             /* YES: DISPLAY IT  */ 33131000
*/********************************************************************/ 33137200
*/*                                                                  */ 33143400
*/*      IS THIS A GOOD SVCUPDTE?                                    */ 33150000
*/*                                                                  */ 33200000
*/********************************************************************/ 33250000
*        IF BADENT =  'YES'        /* INVALID SVC ENTRY?             */ 33300000
*           THEN DO;               /* YES: EXIT MACRO                */ 33350000
*             ANS MSG('*** ERROR(S) CAUSED MACRO ' ||                   33400000
*                     'EXPANSION TERMINATION')                          33425000
*                       NORESCAN;                                       33450000
*             ANS  ('@SPACE;');                            /*    @P4A*/ 33475000
*             ANS ('/* *** ERROR(S) CAUSED MACRO ' ||                   33500000
*                     'EXPANSION TERMINATION */') SKIP COL(10);         33550000
*             @SPACE 2 M;                                               33600000
*            RETURN CODE(12);                                           33650000
*           END;                                                        33700000
*/********************************************************************/ 33725000
*/*                                                                  */ 33750000
*/*      IF THIS IS NOT A LIST FORM - GENERATE THE CALL TO THE       */ 34200000
*/*      NUCLEUS LOOKUP SERVICE TO FIND THE SVC TABLE UPDATE SERVICE */ 34250000
*/*                                                                  */ 34300000
*/********************************************************************/ 34325000
*        IF MF(1) ^= 'L' THEN                                           34350000
*           DO;                                      /*          @L1C*/ 34400000
*              ANS('DO;  /* SVCUPDTE MACRO EXPANSION */') COL(MACCOL);  34450000
*/*            SUPPLY INFORMATION TO EPILOG MACRO                    */ 34500000
*              IF INDEX(EHAREGS,'00F')=0                                34550000
*                 THEN EHAREGS = EHAREGS || '00F';                      34600000
*              IF INDEX(EHAREGS,'01P')=0                                34650000
*                 THEN EHAREGS = EHAREGS || '01P';    /*         @L2C*/ 34700000
*              IF INDEX(EHAREGS,'13P')=0                                34750000
*                 THEN EHAREGS = EHAREGS || '13P';    /*         @L2C*/ 34800000
*              IF INDEX(EHAREGS,'14F')=0                                34850000
*                 THEN EHAREGS = EHAREGS || '14F';                      34900000
*              IF INDEX(EHAREGS,'15F')=0                                34950000
*                 THEN EHAREGS = EHAREGS || '15F';                      35000000
*              IF USEECVT = '' THEN                   /*         @L4A*/ 35005500
*              DO;                                    /*         @L4A*/ 35011000
*              ANS('?NUCLKUP (BYNAME) NAME(''IEAVESTU'')' ||            35016600
*                  ' ADDR(GPR00F);') SKIP COL(MACCOL+2);                35033200
*              ANS('RFY (GPR00F,GPR01P,GPR13P,GPR14F,GPR15F)'           35050000
*                 || ' RESTRICTED;')                                    35100000
*                 SKIP COL(MACCOL+2);                         /* @L2C*/ 35150000
*              ANS('  /* RESTRICT REGISTERS */');                       35200000
*              ANS('  /* GET ADDRESS OF SVCUPDTE SERVICE */');          35350000
*              ANS('IF GPR15F = 0') SKIP COL(MACCOL+2);                 35400000
*              ANS('  /* SUCCESSFUL? */') NORESCAN;                     35450000
*              ANS('THEN DO;')   COL(MACCOL+4) SKIP;                    35500000
*              ANS('  /* YES: PROCEED */');                             35550000
*              ANS('GPR15F=GPR00F;')                                    35600000
*                 SKIP COL(MACCOL+6);                                   35650000
*              ANS('  /* GET ROUTINE''S ADDRESS */')  NORESCAN;         35700000
*              END;                                   /*         @L4A*/ 35750000
*              ELSE DO;               /* USEECVT                 @L4A*/ 35800000
*                ANS('RFY (GPR01P,GPR15F) RSTD;')                       35850000
*                 SKIP COL(MACCOL+6); /*                         @L4A*/ 35900000
*                ANS('GPR15F = ECVTESTU;')                              35950000
*                 SKIP COL(MACCOL+6); /*                         @L4A*/ 36000000
*              END;                   /* USEECVT                 @L4A*/ 36050000
*           END;                                                        36200000
*/********************************************************************/ 36225000
*/*                                                                  */ 36250000
*/*            IF THIS IS THE EXECUTE FORM -                         */ 36300000
*/*               USE THE GIVEN PARAMETER LIST                       */ 36350000
*/*                                                                  */ 36400000
*/********************************************************************/ 36421400
*        IF MF(1) = 'E'                  /* MF = E FORM BEING USED?  */ 36442800
*           THEN DO;                     /* YES: WHICH TYPE?         */ 36464200
*              IF MF(2,1:1) = '('        /* REGISTER FORM?           */ 36485600
*                 THEN DO;               /* YES: GENERATE LINKAGE    */ 36507000
*                    ANS('GPR01P='  || MF(2,1) || ';')                  36528400
*                       SKIP COL(MACCOL+6);                  /*  @L2C*/ 36549800
*                 END;                                                  36571200
*                 ELSE DO;               /* NO:  USE LABEL FORM      */ 36592600
*                    ANS('GPR01P=ADDR('  || MF(2) || ');')              36614000
*                       SKIP COL(MACCOL+6);                  /*  @L2C*/ 36635400
*                 END;                                                  36656800
*              ANS('  /* PARAMETER LIST ADDRESS */');                   36678200
*           END;                                                        36700000
*/********************************************************************/ 36725000
*/*                                                                  */ 36750000
*/*      LOAD POINTER TO PARAMETER LIST IN STANDARD CASE             */ 36800000
*/*                                                                  */ 36850000
*/********************************************************************/ 36875000
*        IF MF =  ''                                                    36900000
*           THEN DO;                                                    36950000
*              ANS('GPR01P=ADDR(IHA' || MACINDEX || 'A);')              37000000
*                 SKIP COL(MACCOL+6);                                   37050000
*              ANS('  /* SET POINTER TO PARAMETER LIST */');            37100000
*           END;                                                        37200000
*/********************************************************************/ 37225000
*/*                                                                  */ 37250000
*/*      PRODUCE THE SVC TABLE UPDATE PARAMETER LIST IF APPROPRIATE  */ 37300000
*/*                                                                  */ 37350000
*/********************************************************************/ 37400000
*    IF MF(1) ^= 'E'                                                    37450000
*      THEN DO;                                                         37500000
*         IF MF(1)  = 'L'                                               37520500
*         THEN DO;                     /* LIST FORM              @P1C*/ 37524800
*              IF USEECVT ^= '' THEN                          /* @L4A*/ 37525100
*                 DO;          /* IF USEECVT                     @L4A*/ 37525400
*                     RETCODE = 4; /*SET LOW LEVEL RETURN CODE   @L4A*/ 37525700
*                 ANS MSG(' USEECVT' ||                                 37526000
*                       ' OPERAND INCONSISTENT WITH ' ||                37526300
*                       '''MF(L)'' -- IGNORED. ')                       37526500
*                       NORESCAN;                                       37526700
*                 ANS  ('@SPACE;');                           /* @L4A*/ 37526900
*                 ANS  ('/* USEECVT' ||                                 37527200
*                       ' OPERAND INCONSISTENT WITH ' ||                37527500
*                       '''MF(L)'' -- IGNORED. */')                     37527800
*                        COL(10) SKIP;                        /* @L4A*/ 37528200
*                 END;                                        /* @L4A*/ 37528600
*            IF MF(2) ^= ''                                             37529100
*            THEN DO;                  /* SUPPLIED NAME          @P1C*/ 37533400
*               IF MF(3) ^= ''                                          37537700
*               THEN DO;               /* SUPPLIED ATTRIBUTES    @P1C*/ 37542000
*                      ANS('DCL 1 '|| MF(2) || ' ' || MF(3)             37546300
*                          || ' BDY(WORD),')                            37550600
*                         SKIP COL(MACCOL+6);                           37554900
*               END;                  /* END SUPPLIED ATTRIBUTES @P1C*/ 37576400
*               ELSE DO;               /*  DEFAULT ATTRIBUTES    @P1C*/ 37580700
*                      ANS('DCL 1 '|| MF(2) || ' STATIC '               37585000
*                          || ' BDY(WORD),')                            37589300
*                         SKIP COL(MACCOL+6);                           37593600
*               END;                   /* END DEFAULT ATTRIBUTES @P1C*/ 37615100
*            END;                      /* END SUPPLIED NAME      @P1C*/ 37619400
*            ELSE DO;                  /* DEFAULT NAME           @P1C*/ 37623700
*               IF MF(3) ^= ''                                          37628000
*               THEN DO;               /* SUPPLIED ATTRIBUTES    @P1C*/ 37632300
*                      ANS('DCL 1 IHA' || MACINDEX                      37636600
*                          || 'A ' || MF(3) || ' BDY(WORD),')           37640900
*                         SKIP COL(MACCOL+6);                           37645200
*               END;                  /* END SUPPLIED ATTRIBUTES @P1C*/ 37666700
*               ELSE DO;               /*  DEFAULT ATTRIBUTES    @P1C*/ 37671000
*                      ANS('DCL 1 IHA' || MACINDEX                      37675300
*                          || 'A ' || ' STATIC' || ' BDY(WORD),')       37679600
*                         SKIP COL(MACCOL+6);                           37683900
*               END;                   /* END DEFAULT ATTRIBUTES @P1C*/ 37705400
*            END;                      /* END DEFAULT NAME       @P1C*/ 37709700
*         END;                         /* END LIST FORM          @P1A*/ 37714000
*         ELSE DO;                     /* STANDARD LIST          @P1C*/ 37718300
*              ANS('DCL 1 IHA' || MACINDEX                              37727500
*                 || 'A STATIC BDY(WORD),')                             37736700
*                 SKIP COL(MACCOL+6);                                   37746000
*         END;                         /* END-STANDARD LIST      @P1C*/ 37828000
*/*                                                                  */ 37850000
*/*      GENERATE SVCUPDTE VERSION NUMBER                            */ 37851600
*/*                                                                  */ 37853200
*/*                                                                  */ 37853300
*/*      GENERATE SVCUPDTE VERSION NUMBER                            */ 37853400
*/*                                                                  */ 37853500
*   IF (MF(3)^='') & (MF(3)^='STATIC')                                  37853600
*   THEN DO;                         /* AUTOMATIC STORAGE?       @P3A*/ 37853700
*        ANS('    3 * BIT(8),')                                         37853800
*           SKIP COL(MACCOL+8);                                         37853900
*        ANS('  /* SVCUPDTE VERSION NUMBER */');                        37854000
*        END;                        /* END AUTOMATIC STORAGE    @P3A*/ 37854100
*   ELSE DO;                         /* STATIC STORAGE           @P3A*/ 37854200
*        ANS('    3 * BIT(8) INIT(' || VERSION || '),')                 37854800
*           SKIP COL(MACCOL+8);                                         37856400
*        ANS('  /* SVCUPDTE VERSION NUMBER */');                        37858000
*        END;                        /* END STATIC STORAGE       @P3A*/ 37858800
*/*                                                                  */ 37859600
*/*      GENERATE FUNCTION TO PERFORM                                */ 37861200
*/*                                                                  */ 37862800
*   IF (MF(3)^='') & (MF(3)^='STATIC')                                  37862900
*   THEN DO;                         /* AUTOMATIC STORAGE?       @P3A*/ 37863000
*        ANS('    3 * BIT(8),')                                         37863100
*           SKIP COL(MACCOL+8);                                         37863200
*        ANS('  /* FUNCTION TO PERFORM --- ' || MACLIST(2)              37863300
*            || ' */');                                                 37863400
*        END;                        /* END AUTOMATIC STORAGE    @P3A*/ 37863500
*   ELSE DO;                         /* STATIC STORAGE           @P3A*/ 37863600
*        ANS('    3 * BIT(8) INIT(' || CHAR(FUNCNUM) || '),')           37864400
*           SKIP COL(MACCOL+8);                                         37866000
*        ANS('  /* FUNCTION TO PERFORM --- ' || MACLIST(2)              37867600
*            || ' */');                                                 37869200
*        END;                        /* END STATIC STORAGE       @P3A*/ 37870000
*/*                                                                  */ 37870800
*/*      PROCESS EXTRACT REQUEST                                 @L1A*/ 37870900
*/*                                                                  */ 37871000
*        IF FUNCNUM >= EXTRACT       /* EXTRACT CASE?            @L4C*/ 37871100
*         & FUNCNUM <= EXTRACTANY THEN  /* EXTRACT ESR?          @LXC*/ 37871200
*           DO;                      /* YES: ZERO SVC            @L1A*/ 37871300
*           IF (MF(3)^='') & (MF(3)^='STATIC')                          37871400
*           THEN DO;                 /* AUTOMATIC STORAGE?       @P3A*/ 37871500
*        ANS('    3 * BIT(8),')                                         37871600
*            COL(MACCOL+8) SKIP;                                        37871700
*        ANS('  /* SVC AND ESR FLAGS */');                              37871800
*                ANS('    3 * BIT(8),')                                 37871900
*                SKIP COL(MACCOL+8);                          /* @L1A*/ 37872000
*        ANS('  /* SVC# NOT USED BY '||EXTRNAME||' */');                37872100
*             END;                   /* END AUTOMATIC STORAGE    @P3A*/ 37872200
*           ELSE DO;                 /* STATIC STORAGE           @P3A*/ 37872300
*        ANS('    3 * BIT(8) INIT(1),')                                 37872400
*            COL(MACCOL+8) SKIP;                                        37872500
*        ANS('  /* SVC AND ESR FLAGS */');                              37872600
*                ANS('    3 * BIT(8) INIT(''0''B),')                    37872700
*                SKIP COL(MACCOL+8);                          /* @L1A*/ 37872800
*        ANS('  /* SVC# NOT USED BY '||EXTRNAME||' */');                37872900
*             END;                   /* END STATIC STORAGE       @P3A*/ 37873000
*             END;                   /* END-ZERO SVC             @L1A*/ 37873100
*        ELSE DO;                    /* INIT SVC                 @L1A*/ 37873200
*/*                                                                  */ 37873300
*/*      GENERATE SVCFLAG BYTE                                       */ 37873400
*/*                                                                  */ 37874000
*   IF (MF(3)^='') & (MF(3)^='STATIC')                                  37874200
*   THEN DO;                         /* AUTOMATIC STORAGE?       @P3A*/ 37874400
*        ANS('    3 * BIT(8),')                                         37874600
*            COL(MACCOL+8) SKIP;                                        37874800
*        ANS('  /* SVC/ESRFLAG: VALUE OF 1 OR 3 => NO SVC# */');        37875000
*        END;                       /* END AUTOMATIC STORAGE     @P3A*/ 37875200
*   ELSE DO;                         /* STATIC STORAGE           @P3A*/ 37875400
*        ANS('    3 * BIT(8) INIT(' ||                                  37876200
*                     CHAR(SVCFLAG+ESRFLAG) || '),')                    37877000
*            COL(MACCOL+8) SKIP;                /*               @L4C*/ 37877800
*        ANS('  /* SVC/ESRFLAG: VALUE OF 1 OR 3 => NO SVC# */');        37878600
*        END;                       /* END STATIC STORAGE        @P3A*/ 37879600
*/*                                                                  */ 37880400
*/*      GENERATE SVC NUMBER IF NECESSARY                            */ 37882000
*/*                                                                  */ 37883600
*   IF (MF(3)^='') & (MF(3)^='STATIC')                                  37884100
*   THEN DO;                         /* AUTOMATIC STORAGE?       @P3A*/ 37884600
*        IF MACLIST(1)     = ''                                         37885200
*         | MACLIST(1,1:1) = '('                                        37886800
*           THEN ANS('    3 * BIT(8),')                                 37886900
*                SKIP COL(MACCOL+8);                                    37887000
*           ELSE ANS('    3 * BIT(8),')                                 37887100
*                SKIP COL(MACCOL+8);                                    37887200
*        ANS('  /* SVC TO MODIFY  */');                                 37887300
*        END;                        /* END AUTOMATIC STORAGE    @P3A*/ 37887400
*   ELSE DO;                         /* STATIC STORAGE           @P3A*/ 37887500
*        IF MACLIST(1)     = ''                                         37887600
*         | MACLIST(1,1:1) = '('                                        37887700
*           THEN ANS('    3 * BIT(8) INIT(0),')                         37888400
*                SKIP COL(MACCOL+8);                                    37890000
*           ELSE ANS('    3 * BIT(8) INIT(' || MACLIST(1) || '),')      37891600
*                SKIP COL(MACCOL+8);                                    37893200
*        ANS('  /* SVC TO MODIFY  */');                                 37894200
*        END;                        /* END STATIC STORAGE       @P3A*/ 37894700
*        END;                        /* END-INIT SVC             @L1A*/ 37895200
*/********************************************************************/ 37896400
*/*                                                                  */ 37898000
*/*      IF THIS IS A DELETE FUNCTION THE REST OF THE LIST IS ZEROES */ 37900000
*/*                                                                  */ 37950000
*/********************************************************************/ 37979100
*    IF FUNCNUM  = DELETE                                               38008200
*       THEN DO;                                                        38037300
*          IF (MF(3)^='') & (MF(3)^='STATIC')                           38038100
*          THEN DO;                  /* AUTOMATIC STORAGE?       @P3A*/ 38038900
*          ANS('    3 * BIT(64),') SKIP COL(MACCOL+8);                  38039700
*          ANS('  /* RESERVED */');                                     38040500
*          ANS('    3 * BIT(64);') SKIP COL(MACCOL+8);                  38041300
*          ANS('  /* RESERVED */');                                     38042100
*          ANS('  /* ' || MACLABEL || ' ' || MACNAME || ' '             38042900
*              || MACLIST  || ' ' || MACKEYS || ' MACDATE('             38043700
*              || MACDATE  ||') */');                                   38044500
*          END;                      /* END AUTOMATIC FUNCTION   @P3A*/ 38045300
*          ELSE DO;                  /* STATIC STORAGE           @P3A*/ 38046100
*            IF ESR = ''             /*                          @P6A*/ 38046300
*             | ESR(1,1:1) = '(' THEN  /*                        @P6A*/ 38046500
*            DO;                     /* NO ESR                   @P6A*/ 38046700
*          ANS('    3 * BIT(64) INIT(''0''B),') SKIP COL(MACCOL+8);     38047000
*          ANS('  /* RESERVED */');                                     38056700
*            END;                    /* NO ESR                   @P6A*/ 38057700
*            ELSE DO;                /* ESR                      @P6A*/ 38058700
*          ANS('    3 * BIT(56) INIT(''0''B),') SKIP COL(MACCOL+8);     38059700
*          ANS('  /* RESERVED */');                                     38060700
*          ANS('    3 * FIXED(8) INIT(' || ESR(1) || '),'               38061700
*                                             ) SKIP COL(MACCOL+8);     38062700
*          ANS('  /* ESR CODE */');                                     38063700
*            END;                    /* ESR                      @P6A*/ 38064700
*          ANS('    3 * BIT(64) INIT(''0''B);') SKIP COL(MACCOL+8);     38066400
*          ANS('  /* RESERVED */');                                     38095500
*          ANS('  /* ' || MACLABEL || ' ' || MACNAME || ' '             38124600
*              || MACLIST  || ' ' || MACKEYS || ' MACDATE('             38153700
*              || MACDATE  ||') */');                                   38182800
*          END;                      /* END STATIC STORAGE       @P3A*/ 38197300
*       END;                                                            38211900
*       ELSE DO;                                                        38241000
*/********************************************************************/ 38270100
*/*                                                                  */ 38300000
*/*      FILL IN ENTRY POINT INFORMATION                             */ 38350000
*/*                                                                  */ 38400000
*/********************************************************************/ 38425000
*        IF (MF(3)^='') & (MF(3)^='STATIC')                             38428500
*        THEN DO;                    /* AUTOMATIC STORAGE        @P3A*/ 38432000
*              ANS('    3 * PTR(31),') COL(MACCOL+8) SKIP;              38435500
*              ANS('  /* ENTRY POINT ADDRESS */');                      38439000
*        END;                        /* END AUTOMATIC STORAGE    @P3A*/ 38442500
*        ELSE DO;                    /* STATIC STORAGE           @P3A*/ 38446000
*        ANS('    3 * PTR(31)') COL(MACCOL+8) SKIP;                     38450000
*        IF (EP = ''   |   MF(1) = 'E' | EP(1,1:1) = '(')               38466600
*           THEN DO;                                                    38500000
*              IF TYPENUM = 5                                           38525000
*                 THEN ANS(' INIT(0),');                                38550000
*                 ELSE ANS(' INIT(1),');                                38575000
*              ANS('  /* ENTRY POINT NOT SPECIFIED */');                38600000
*           END;                                                        38650000
*           ELSE DO;                                                    39100000
*              ANS(' INIT(ADDR(' || EP(1) || ')),');                    39150000
*              ANS('  /* ENTRY POINT ADDRESS */');                      39200000
*           END;                                                        39250000
*           END;                     /* END STATIC STORAGE       @P3A*/ 39275000
*/********************************************************************/ 39300000
*/*                                                                  */ 39750000
*/*      IF THIS IS AN EXTRACT FUNCTION ATTRIBUTE FIELDS ARE ZERO    */ 39750100
*/*                                                              @L1A*/ 39750200
*/********************************************************************/ 39750300
*    IF FUNCNUM  >= EXTRACT                               /*     @L4C*/ 39750400
*     & FUNCNUM  <= EXTRACTANY                            /*     @LXA*/ 39750500
*       THEN DO;                                          /*     @L1A*/ 39750600
*          IF (MF(3)^='') & (MF(3)^='STATIC')                           39750700
*          THEN DO;                  /* AUTOMATIC STORAGE?       @P3A*/ 39750800
*          ANS('    3 * BIT(32),') SKIP COL(MACCOL+8);                  39750900
*          ANS(' /* RESERVED */');                                      39751000
*          END;                     /* END AUTOMATIC STORAGE     @P3A*/ 39751100
*          ELSE DO;                  /* STATIC STORAGE           @P3A*/ 39751200
*          ANS('    3 * BIT(32) INIT(''0''B),') SKIP COL(MACCOL+8);     39751300
*          ANS(' /* RESERVED */');                                      39751400
*          END;                     /* END STATIC STORAGE        @P3A*/ 39751500
*       END;                                                            39751600
*       ELSE DO;                     /* REPLACE CASE             @L1A*/ 39751700
*/********************************************************************/ 39751800
*/*                                                                  */ 39751900
*/*      GENERATE THE REST OF THE REPLACE PARAMETER LIST             */ 39752000
*/*                                                                  */ 39752100
*/* AUTOMATIC STORAGE                                            @P3A*/ 39752200
*/*                                                                  */ 39752400
*   IF (MF(3)^='') & (MF(3)^='STATIC')                                  39752500
*   THEN DO;                         /* AUTOMATIC STORAGE?       @P3A*/ 39752600
*        ANS('    3 * BIT(8),')                                         39752700
*              SKIP COL(MACCOL+8);                                      39752800
*        ANS('  /* SVC TYPE */');                                       39752900
*        ANS('    3 * BIT(8),')                                         39753000
*           SKIP COL(MACCOL+8);                                         39753100
*        ANS('  /* SVC ATTRIBUTE BITS */');                             39753200
*        ANS('    3 * BIT(8),' )                                        39753300
*           SKIP COL(MACCOL+8);                                         39753400
*        ANS('  /* SVC LOCKS */');                                      39753500
*        ANS('    3 * BIT(8),') COL(MACCOL+8) SKIP;                     39753600
*        ANS(' /* EXTENDED SVC ROUTING CODE */');                       39753700
*        END;                        /* END AUTOMATIC STORAGE    @P3A*/ 39753800
*/********************************************************************/ 39753900
*/* STATIC STORAGE                                               @P3A*/ 39754000
*/*                                                                  */ 39754100
*/*      GENERATE THE TYPE PARAMETER                                 */ 39754200
*/*                                                                  */ 39754300
*   ELSE DO;                         /* STATIC STORAGE           @P3A*/ 39754400
*        ANS('    3 * BIT(8) INIT(' || CHAR(TYPENUM) || '),')           39754500
*              SKIP COL(MACCOL+8);                                      39754800
*        ANS('  /* SVC TYPE */');                                       39755400
*/*                                                                  */ 39756000
*/*      GENERATE THE ATTRIBUTE BITS                                 */ 39756600
*/*                                                                  */ 39757200
*        TEMP = APFNUM + ARNUM + NPNUM;                       /* @L3C*/ 39757800
*        ANS('    3 * BIT(8) INIT(' || CHAR(TEMP) || '),')              39758400
*           SKIP COL(MACCOL+8);                                         39759000
*        ANS('  /* SVC ATTRIBUTE BITS */');                             39759600
*/*                                                                  */ 39760200
*/*      GENERATE THE LOCKS BITS                                     */ 39760800
*/*                                                                  */ 39761400
*        ANS('    3 * BIT(8) INIT(' || CHAR(REQLOCK) || '),' )          39762000
*           SKIP COL(MACCOL+8);                                         39762600
*        ANS('  /* SVC LOCKS */');                                      39763200
*/*                                                                  */ 39763300
*/*      GENERATE EXTENDED SVC ROUTING CODE IF NECESSARY             */ 39763400
*/*                                                                  */ 39763500
*        IF ESR = '' |                                     /*    @L4A*/ 39763600
*           ESR(1,1:1) = '('                               /*    @L4A*/ 39763700
*           THEN ANS('    3 * BIT(8) INIT(0),'                          39763800
*          ||'  /* EXTENDED SVC ROUTING CODE */'                        39763900
*              ) SKIP COL(MACCOL+8);                       /*    @L4A*/ 39764000
*           ELSE ANS('    3 * BIT(8) INIT(' || ESR(1) || '),'           39764100
*          ||'  /* EXTENDED SVC ROUTING CODE */'                        39764200
*              ) SKIP COL(MACCOL+8);                       /*    @L4A*/ 39764300
*        END;                        /* END STATIC STORAGE       @P3A*/ 39764400
*        END;                        /* END-REPLACE CASE             */ 39764500
*/********************************************************************/ 39764600
*/*                                                                  */ 39764700
*/*      FILL IN EPNAME INFORMATION                              @L1A*/ 39764800
*/*                                                                  */ 39764900
*/********************************************************************/ 39765000
*        IF (MF(3)^='') & (MF(3)^='STATIC')                             39765100
*        THEN DO;                    /* AUTOMATIC STORAGE        @P3A*/ 39765200
*              ANS('    3 * CHAR( 8);') COL(MACCOL+8) SKIP;             39765300
*              ANS('  /* EPNAME  */') ;                                 39765400
*              END;                  /* END AUTOMATIC STORAGE    @P3A*/ 39765500
*        ELSE DO;                    /* STATIC STORAGE           @P3A*/ 39765600
*        IF (EPNAME = '' | EPNAME(1,1:1) = '(')                         39765700
*           THEN DO;                                          /* @L1A*/ 39765800
*              ANS('    3 * BIT(64)') COL(MACCOL+8) SKIP;               39765900
*              ANS(' INIT(''0''B);');                                   39766000
*              ANS('  /* EPNAME NOT SPECIFIED */') ;                    39766100
*           END;                                                        39766200
*           ELSE DO;                                          /* @L1A*/ 39766300
*              ANS('    3 * CHAR( 8)') COL(MACCOL+8) SKIP;              39766400
*              ANS(' INIT(''' || EPNAME(1) || ''');');                  39766500
*              ANS('  /* EPNAME  */') ;                                 39766600
*           END;                                                        39766700
*           END;                     /* END STATIC STORAGE       @P3A*/ 39766800
*        ANS('  /* ' || MACLABEL || ' ' || MACNAME || ' '               39766900
*            || MACLIST  || ' ' || MACKEYS || ' MACDATE('               39767000
*            || MACDATE  ||') */');                                     39767100
*      END;                                                             39767200
*    END;                                                               39767300
*/********************************************************************/ 39767400
*/*                                                                  */ 39768000
*/*      GENERATE CODE TO INSERT PARAMETERS INTO THE PARAMETER LIST  */ 39768600
*/*      IF NECESSARY                                                */ 39769200
*/*                                                                  */ 39769800
*/********************************************************************/ 39770400
*      IF MF(1) ^= 'L'               /* NOT MF=L?                @L1C*/ 39771000
*        THEN DO;                    /* YES: R1 CURRENTLY POINTS TO     39771600
*                                            THE PARAMETER LIST      */ 39772200
*/*                                                                  */ 39772800
*/*        INSERT ENTRY POINT INTO PARAMETER LIST IF REQUIRED        */ 39773400
*/*                                                                  */ 39774000
*          IF EP       ^= ''         /*      ENTRY POINT NOT NULL?   */ 39774600
*           & EP(1,1:1) = '('        /*      REGISTER FORM PARAMETER?*/ 39775200
*           THEN DO;                 /* YES: GENERATE UPDATE CODE    */ 39775800
*              ANS('DCL IHA' || MACINDEX || 'B PTR(31) BASED(GPR01P)'|| 39776400
*                  ' POS(' || EPOFF || ');')                            39776800
*                    SKIP COL(MACCOL+8);                      /* @L2C*/ 39777200
*              ANS('  /* BASED VARIABLE FOR STORING ENTRY POINT */');   39777600
*              ANS('IHA' || MACINDEX || 'B=' || EP(1,1) || ';')         39778200
*                  SKIP COL(MACCOL+8);                                  39778800
*              ANS('  /* STORE ENTRY POINT IN PARAMETER LIST */');      39779400
*           END;                                                        39780000
*/*                                                                  */ 39780600
*/*        INSERT EPNAME INTO PARAMETER LIST IF REQUIRED         @L1A*/ 39780700
*/*                                                                  */ 39780800
*          IF EPNAME   ^= ''         /*      EPNAME SPECIFIED?   @L1A*/ 39780900
*           & EPNAME(1,1:1) = '('    /*      REGISTER FORM?      @L1A*/ 39781000
*           THEN DO;                 /* YES: GENERATE UPDATE CODE    */ 39781100
*              ANS('DCL IHA' || MACINDEX || 'E CHAR( 8)'||              39781200
*                  ' BASED(GPR01P)'||                                   39781300
*                  ' POS(' || EPNOFF || ');')                           39781400
*                    SKIP COL(MACCOL+8);                      /* @L1C*/ 39781500
*              ANS('  /* BASED VARIABLE FOR STORING EPNAME      */');   39781600
*              ANS('IHA' || MACINDEX || 'E=' ||                         39781700
*                  EPNAME(1,1) || '->I256C;')                           39781800
*                  SKIP COL(MACCOL+8);                                  39781900
*              ANS('  /* STORE EPNAME IN PARAMETER LIST      */');      39782000
*           END;                     /*                          @L1A*/ 39782100
*/*                                                                  */ 39782200
*/*        INSERT SVC NUMBER INTO PARAMETER LIST IF REQUIRED         */ 39782300
*/*                                                                  */ 39782400
*          IF MACLIST(1) ^= '' & MACLIST(1,1:1) = '('                   39782500
*            THEN DO;                  /*RESET SVC FLAG          @L1C*/ 39783000
*              ANS('DCL IHA' || MACINDEX || 'C BIT(8) BASED(GPR01P)'||  39783600
*                ' POS(' || CHAR(FLAGOFF) ||                            39784200
*                ');') SKIP COL(MACCOL+8);                    /* @L2C*/ 39784800
*              ANS('  /* BASED VARIABLE FOR STORING SVC FLAG */');      39785400
*              ANS('DCL IHA' || MACINDEX || 'D FIXED(8)'||              39785800
*                ' BASED(GPR01P)'||                                     39786200
*                ' POS(' || CHAR(SVCOFF) ||                             39786600
*                ');') SKIP COL(MACCOL+8);                    /* @L2C*/ 39787200
*              ANS('  /* BASED VARIABLE FOR STORING SVC NUMBER */');    39787800
*              ANS('IHA' || MACINDEX || 'C(8)=''0''B;')                 39788400
*                  SKIP COL(MACCOL+8);                     /*    @L4C*/ 39789000
*              ANS('  /* CLEAR SVC FLAG IN PARAMETER LIST */');         39789600
*              ANS('IHA' || MACINDEX || 'D=' || MACLIST(1,1) || ';')    39790200
*                  SKIP COL(MACCOL+8);                                  39790800
*              ANS('  /* STORE SVC NUMBER IN PARAMETER LIST */');       39791400
*            END;                                                       39792000
*          IF ESR ^= '' & ESR(1,1:1) = '('                    /* @L4A*/ 39792300
*            THEN DO;                  /*                        @L4A*/ 39792600
*              ANS('DCL IHA' || MACINDEX || 'E1 BIT(8) BASED(GPR01P)'|| 39792900
*                ' POS(' || CHAR(FLAGOFF) ||                            39793200
*                ');' ||                                                39793500
*                  '  /* BASED VARIABLE FOR STORING ESR FLAG */'        39793800
*                    ) SKIP COL(MACCOL+8);                    /* @L4A*/ 39794100
*              ANS('DCL IHA' || MACINDEX || 'E FIXED(8)'||              39794400
*                ' BASED(GPR01P)'||                                     39794700
*                ' POS(' || CHAR(ESROFF) ||                             39795000
*                ');'                                                   39795300
*              ||  '  /* BASED VARIABLE FOR STORING SVC NUMBER */'      39795600
*                    ) SKIP COL(MACCOL+8);                    /* @L4A*/ 39795900
*              ANS('IHA' || MACINDEX || 'E1(7)=''1''B;' ||              39796200
*                  '  /* SET ESR FLAG IN PARAMETER LIST */'             39796500
*                  ) SKIP COL(MACCOL+8);                      /* @L4A*/ 39796800
*              ANS('IHA' || MACINDEX || 'E=' || ESR(1,1) || ';'         39797100
*                ||'  /* STORE ESR CODE IN PARAMETER LIST */'           39797400
*                ) SKIP COL(MACCOL+8);                        /* @L4A*/ 39797700
*            END;                                                       39798000
*/********************************************************************/ 39798300
*/*                                                                  */ 39798600
*/*      GENERATE THE CALL TO THE UPDATE SERVICE IF NOT LIST FORM    */ 39800000
*/*                                                                  */ 39850000
*/********************************************************************/ 39888800
*          ANS('GEN(BASSM GPR14F,GPR15F)') COL(MACCOL+6) SKIP;          39927600
*          ANS(' SETS(GPR14F) REFS(GPR15F);') COL(MACCOL+6) SKIP;       39966400
*          ANS('  /* CALL UPDATE ROUTINE */');                          40005200
*          IF USEECVT = '' THEN                /*                @L4A*/ 40018100
*          DO;                                 /*                @L4A*/ 40031000
*          ANS('END;') COL(MACCOL+4) SKIP;                              40044000
*          ANS('ELSE GPR15F =28;') COL(MACCOL+4) SKIP;                  40082800
*          ANS('  /* UPDATE SERVICE NOT IN NUCLEUS */');                40121600
*          ANS('RFY (GPR00F,GPR01P,GPR13P,GPR14F,GPR15F)' ||            40160400
*              ' UNRESTRICTED;')                                        40199200
*              SKIP COL(MACCOL+2);                                      40238000
*          ANS('  /* FREE THE REGISTERS */');                           40276800
*          END;                                /*                @L4A*/ 40283200
*          ELSE DO;                            /* USEECVT        @L4A*/ 40289600
*             ANS('RFY (GPR01P,GPR15F) UNRSTD;')                        40296000
*                 SKIP COL(MACCOL+6); /*                         @L4A*/ 40302500
*          END;                                /* USEECVT        @L4A*/ 40309000
*          ANS('END;') COL(MACCOL) SKIP;                                40315600
*    IF MF(1) = 'E'                                                     40325300
*      THEN DO;   /* IF EXECUTE FORM - MAKE THE MACRO                   40335000
*                    INVOCATION A COMMENT AT END OF TEXT         @P4A*/ 40344700
*          ANS('/* ' || MACLABEL || ' ' || MACNAME || ' '               40354400
*              || MACLIST  || ' ' || MACKEYS || ' MACDATE('             40393200
*              || MACDATE  ||') */');                                   40432000
*          END;                                         /*       @P4A*/ 40451400
*        END;                                                           40470800
*        RETURN CODE(RETCODE);                                          40509600
*%       END SVCUPDTE;                                                  40550000
