         MACRO                                                          00050000
&NAME   MSGDISP  &SERVICE,&DEBUG,                                      C00100000
               &DCB=,&TXT=,&MF=,&UCB=,&SER=,&LABEL=,                   C00150000
               &DISP=,&MSER=,&MLABEL=,&UCBL=,&TXT2=,                   C00200000
               &VOL=,&FLASH=,&FORCE=,&WAIT=,&TEST=,                    c00237500
               &INDEX=,&MEDIATYPE=                                 @02c 00294990
.* ******************************************************************** 00314980
.*$MAC(MSGDISP) : MESSAGE DISPLAY MACRO                               * 00350000
.*                                                                    * 00359990
.*                                                                    * 00387500
.* FUNCTION - ESTABLISH PROTOCOLS TO REQUEST MSGDISP SERVICE          * 00425000
.*                                                                    * 00462500
.********************************************************************** 00500000
.*  PROPRIETARY V3 STATEMENT                                          * 00537500
.*  LICENSED MATERIALS - PROPERTY OF IBM                              * 00575000
.*  "RESTRICTED MATERIALS OF IBM"                                     * 00612500
.*  5695-DF1                                                          * 00650000
.*  (C) COPYRIGHT 1983,1984  IBM CORP.                                * 00687500
.*  END PROPRIETARY V3 STATEMENT                                      * 00725000
.********************************************************************** 00762500
.*                                                                    * 00800000
.* STATUS =  DFSMS 1.6.0                                          @L1C* 00837790
.*                                                                    * 00838080
.* The MEDIATYPE keyword is being added for MTL, supported        @02a* 00838370
.* invocations of the keyword will be by coding the explicit      @02a* 00838660
.* unquoted literal or by passing the address of a one byte       @02a* 00838950
.* area containing the value.  In addition this form of           @02a* 00839240
.* invocation will be extended to the INDEX keyword.              @02a* 00839530
.*                                                                @02a* 00839820
.* Additional changes made with this support will be to add       @02a* 00840110
.* explicit indicators for RX format and 'unquoted literal'       @02a* 00840400
.* specifications.                                                @02a* 00840690
.*                                                                @02a* 00840980
.* An unquoted literal is one that takes on the explicit value    @02a* 00841270
.* that is specified in the macro invocation.  An example of      @02a* 00841560
.* that is the YES/NO specification that can used with the        @02a* 00841850
.* TEST, WAIT, and INDEX keywords.  In other words the macro      @02a* 00842140
.* invocation looks like:                                         @02a* 00842430
.*                                                                @02a* 00842720
.*         MSGDISP MOUNT,SER='ABC',UCB=(2),TEST=YES,...           @02a* 00843010
.*                                                                @02a* 00843300
.* In this example, YES is an unquoted literal, where 'ABC' on    @02a* 00843590
.* the SER keyword is a quoted literal, referred to as LITERAL    @02a* 00843880
.* in this macro.                                                 @02a* 00844170
.*                                                                @02a* 00844460
.* The logic in the macro, heretofore, has been that explicit     @02a* 00844750
.* checks for NULL, LITERAL, ADCON, REG (2-12), REG01 (0 and 1)   @02a* 00845040
.* are made and bits set if that specific format is detected.     @02a* 00845330
.* If none of the flags are on, it is assumed that the format     @02a* 00845620
.* is RX, though no bit is set to indicate this.  This, of        @02a* 00845910
.* course, applies to the unquoted literal specification.  One    @02a* 00846200
.* ramification of the use of the unquoted literal is that it     @02a* 00846490
.* is mutually exclusive of the RX format.                        @02a* 00846780
.*                                                                      00847070
.* The format of the parameter list built and passed to           @02a* 00847360
.* IGX00030 is also changing in a way incompatible with           @02a* 00847650
.* previous versions of the SVC, which means that a compilation   @02a* 00847940
.* using this version of the macro will not work with old         @02a* 00848230
.* versions of IGX00030.  The formats of the parameter lists      @02a* 00848520
.* are compared below:                                            @02a* 00848810
.*                                                                @02a* 00849100
.*                                                                @02a* 00849390
.*     Old format:                                                @02a* 00849680
.*                                                                @02a* 00849970
.*     +--------------------------------------------------+       @02a* 00850260
.*  +0 |Service type|IOSLVL from |CART from   |   LAB     | +0    @02a* 00850550
.*     |MOUNT, RDY, |       FORCE|     VOL,   |    &      |       @02a* 00850840
.*     |VERIFY,...  |Flags:      |FLASH from  |   MLAB    |       @02a* 00851130
.*     |            |Force,      |      FLASH |           |       @02a* 00851420
.*     |            |NoWait,     |            |           |       @02a* 00851710
.*     |            |1 UCB vs    |            |           |       @02a* 00852000
.*     |            |  UCBL,     |            |           |       @02a* 00852290
.*     |            |Don't Index |            |           |       @02a* 00852580
.*     +--------------------------------------------------+       @02a* 00852870
.*  +4 |              Pointer to TXT1 field               | +4    @02a* 00853160
.*     +--------------------------------------------------+       @02a* 00853450
.*  +8 |              Pointer to TXT2 field               | +8    @02a* 00853740
.*     +--------------------------------------------------+       @02a* 00854030
.*  +C |              Pointer to DCB/UCB                  | +12   @02a* 00854320
.*     +--------------------------------------------------+       @02a* 00854610
.*  +10| Beginning of literals for normal/list forms      | +16   @02a* 00854900
.*     +--------------------------------------------------+       @02a* 00855190
.*                                                                @02a* 00855480
.*                                                                @02a* 00855770
.*     New format:                                                @02a* 00856060
.*                                                                @02a* 00856350
.*     +--------------------------------------------------+       @02a* 00856640
.*  +0 |            |IOSLVL from |CART from   |    LAB    | +0    @02a* 00856930
.*     |    x'FF'   |       FORCE|     VOL,   |     &     |       @02a* 00857220
.*     |            |Flags:      |FLASH from  |    MLAB   |       @02a* 00857510
.*     | Indicates  | Force,     |      FLASH |           |       @02a* 00857800
.*     | new format | NoWait,    |            |           |       @02a* 00858090
.*     | plist      | 1 UCB vs   |            |           |       @02a* 00858380
.*     |            |   UCBL,    |            |           |       @02a* 00858670
.*     |            | Don't Index|            |           |       @02a* 00858960
.*     +--------------------------------------------------+       @02a* 00859250
.*  +4 |              Pointer to TXT1 field               | +4    @02a* 00859540
.*     +--------------------------------------------------+       @02a* 00859830
.*  +8 |              Pointer to TXT2 field               | +8    @02a* 00860120
.*     +--------------------------------------------------+       @02a* 00860410
.*  +C |              Pointer to DCB/UCB                  | +12   @02a* 00860700
.*     +--------------------------------------------------+       @02a* 00860990
.*  +10|Service type|New keywords|  Reserved  | Reserved  | +16   @02a* 00861280
.*     |MOUNT, RDY, |flags ind.  |            |           |       @02a* 00861570
.*     |VERIFY,...  |those that  |            |           |       @02a* 00861860
.*     |(previously |need pointer|            |           |       @02a* 00862150
.*     | at +0)     |in this     |            |           |       @02a* 00862440
.*     |            |plist.      |            |           |       @02a* 00862730
.*     |            |Currently:  |            |           |       @02a* 00863020
.*     |            |INDEX &     |            |           |       @02a* 00863310
.*     |            |MEDIATYPE   |            |           |       @02a* 00863600
.*     +--------------------------------------------------+       @02a* 00863890
.*  +14|              Pointer to Index field              | +20   @02a* 00864180
.*     +--------------------------------------------------+       @02a* 00864470
.*  +18|              Pointer to Mediatype field          | +24   @02a* 00864760
.*     +--------------------------------------------------+       @02a* 00865050
.*  +1C| Beginning of literals for normal/list forms      | +28   @02a* 00865340
.*     +--------------------------------------------------+       @02a* 00865630
.*                                                                @02a* 00865920
.*                                                                @02a* 00866210
.* Changes include:                                               @02a* 00866500
.*                                                                @02a* 00866790
.* - Explicit setting of an RX format indicator if supported,     @02a* 00867080
.*   If the RX format is detected, a check will be done to        @02a* 00867370
.*   ensure that the format is supported.  If not supported a     @02a* 00867660
.*   check to determine if the unquoted literal format is         @02a* 00867950
.*   supported.  If supported, an explicit flag indicator will    @02a* 00868240
.*   be set, if not supported, an error will be indicated.        @02a* 00868530
.*                                                                @02a* 00868820
.* - Determination of support of an indicated format and          @02a* 00869110
.*   flagging with an error if not supported.                     @02a* 00869400
.*                                                                    * 00869690
.* - Added a DEBUG feature to cause generation of MNOTE           @02a* 00869980
.*   debugging messages.                                          @02a* 00870270
.*                                                                    * 00870560
.*                                                                    * 00875000
.* CHANGE ACTIVITY =                                                  * 00912500
.*$H0=3480,HDQ1102,T81XXXX,STLJK:                                     * 00950000
.*$H1=3480,HDQ1102,KCD0149,STLHWB:                                    * 00987500
.*$H2=3480,JDP1111,,STLPKH:                                           * 01025000
.*$01=OZ98089,HDP2210,,088GEC: FIX SER=ADDRESS,MSER=LITERAL   @ZA98089* 01062500
.*$L1=UCBVSCR,HDZ11C0,SJPLLRU: UCB ABOVE THE LINE                 @L1A* 01100000
.*$H3=OW38736,HDZ11E0,SJPLLRU: BLYTHE2, ADD INDEX KEYWORD         @H3A* 01137500
.*$02=OW45271,HDZ11F0,SJPLLRU: MTL, New keyword MEDIATYPE             * 01147490
.*                             update INDEX keyword processing    @02A* 01157480
.*$03=OW47283,HDZ11F0,SJPLLRU: Change &LITIX -> &RXFMTIX for CHKRX    * 01161470
.*                             processing for DISP keyword, and       * 01165460
.*                             allow REG format for FORCE         @03A* 01169450
.*$04=OW47424,HDZ11E0,SJPLGSJ: CAUSES 0C4 WHEN CALLED FOR FORCE   @04A* 01171440
.*$05=OW48717,HDZ11E0,SJPLRDB: NOWAIT flag set for WAIT=YES.      @05A* 01171730
.*                             Instruction "IC 0,1(1)" causes IC  @05A* 01172020
.*                             into R0 from location 1 because R1 @05A* 01172310
.*                             does not contain parmlist address. @05A* 01172600
.*                             Location 1 contains the load PSW,  @05A* 01172890
.*                             including a bit that causes the    @05A* 01173180
.*                             NOWAIT flag to be set. Changed the @05A* 01173470
.*                             instruction to "IC 0,1+PARMPTR".   @05A* 01173760
.*$06=OW.....,HDZ11E0,SJPLRDB: Loop while processing TXT2 literal.@06A* 01174350
.********************************************************************** 01175000
.*                                                                    * 01212500
.**************************-*PSEUDOCODE*-****************************** 01250000
.*                                                                    * 01300000
.*MSGDISP :                                                           * 01350000
.* PROC .                                                             * 01400000
.* SET ATTRIBUTE BIT ARRAYS .                                         * 01450000
.* IF FUNCTION REQUESTED NOT VALID THEN                               * 01500000
.*   DO .                                                             * 01550000
.*     ISSUE ERROR MESSAGE CODE 12 .                                  * 01600000
.*     EXIT .                                                         * 01650000
.*   END .                                                            * 01700000
.* PROC ERROR CHECKING.                                               * 01750000
.*    /*THESE FUNCTIONS USE POSITIONAL OPRAND NUMBER TWO    */        * 01800000
.*    /*TO INVOKE CHECKING SERVICES WHICH ARE RESTRICTED TO */        * 01850000
.*    /* RECURSIVE INNER MACRO CALLS.                       */        * 01900000
.*    VERIFY NO KEYWORDS ARE SPECIFIED WHICH ARE                      * 01950000
.*       INCOMPATIBLE WITH THE  SERVICE REQUESTED .                   * 02000000
.*    VERIFY REQUIRED KEYWORDS FOR THIS SERVICE ARE SPECIFIED .       * 02050000
.*    VERIFY NO MUTUALLY  EXCLISIVE KEYWORDS ARE SPECIFIED .          * 02100000
.* END END OF ERROR CHECKING PROC.                                    * 02150000
.* CASE SELECT ACTION ON MF = OPRAND .                                * 02200000
.*   SUBCASE MF = E , EXECUTE FORM .                                  * 02250000
.*     EXAMINE EACH KEYWORD AND BUILD CODE TO SET PARAMETER LIST .    * 02300000
.*     BUILD SVC CALL AT LABEL 'SVCTEST' .                            * 02350000
.*   ENDSUB .                                                         * 02400000
.*   SUBCASE MF = '' , NORMAL FORM .                                  * 02450000
.*     EXPAND CODE TO SET REG1 TO ADDRESS OF PARAMETER LIST .         * 02500000
.*     PASS THROUGH LIST FORM SECTION TO BUILD PARAMETER LIST .       * 02550000
.*     EXPAND CODE FOR SVC CALL .                                     * 02600000
.*   ENDSUB .                                                         * 02650000
.*   SUBCASE MF = L , LIST FORM .                                     * 02700000
.*     EXPAND LIST USING SAME SECTION AS NORMAL FORM .                * 02750000
.*   ENDSUB .                                                         * 02800000
.* ENDCASE .                                                          * 02850000
.* END MSGDISP .                                                      * 02900000
.*************************-END-PSEUDOCODE-****************************/ 02950000
.*                                                                   *  03050000
.*********************************************************************  03075000
.*            LOCAL WORK SYMBOLS                                    *   03109990
.*********************************************************************  03119980
.*                                                                      03129970
         LCLC       &LABEL1,&WORK1,&WORK2,&FLAGS,&FUNCTON         @02c  03139960
         LCLC       &F0,&F1,&F2,&F3,&F4,&FH,&FT,&FS               @H2C  03149950
         LCLC       &LITVALINDEX             Extracted literal val@02a  03159940
         LCLA       &LENGTH,&KNT,&J                               @02A  03169930
         LCLB       &DEBUGON                                      @02a  03179920
.*                                                                      03189910
.*********************************************************************  03200000
.* The following arrays, referred to as the 'F' arrays, reflect      *  03200090
.* what was specified on the call to this macro.  The bit positions  *  03200180
.* correspond to the format specified on the call.  Both these       *  03200270
.* arrays and the FMT arrays use the same positional indices.  The   *  03200360
.* indices are defined by the &LITIX, &NULLIX, &REGIX, etc. defined  *  03200450
.* later.  Those indices are:                                        *  03200540
.*                                                                   *  03200630
.*            BIT 1 = 1 KEYWORD IS NULL                              *  03200720
.*            BIT 2 = 1 KEYWORD IS A LITERAL (quoted)                *  03200810
.*            BIT 3 = 1 KEYWORD IS A REG                             *  03200900
.*            BIT 4 = 1 KEYWORD IS REG 1 OR 0                        *  03200990
.*            BIT 5 = 1 KEYWORD IS AN ADCON                          *  03201080
.*            BIT 6 = 1 RX FORMAT                                @02c*  03201170
.*            BIT 7 = 1 UNQUOTED LITERAL                         @02c*  03201260
.*********************************************************************  03201350
         GBLB  &DCBF(7),&TXTF(7),&UCBF(7),&INDEXF(7)               @02c 03201440
         GBLB  &SERF(7),&LABELF(7),&DISPF(7),&MSERF(7)             @02c 03201530
         GBLB  &MLABELF(7),&UCBLF(7),&TXT2F(7),&WAITF(7)           @02c 03201620
         GBLB  &VOLF(7),&MFE(7),&FLASHF(7),&FORCEF(7),&TESTF(7)    @02c 03201710
         GBLB  &MEDTF(7)                                           @02a 03201800
.*                                                                      03201890
.*       *---------------------------------------------------*          03201980
.*       * Declare and set the index values used with the    *          03202070
.*       * 'F' arrays                                        *          03202160
.*       *---------------------------------------------------*          03202250
         GBLA    &NULLIX,&LITIX,&REGIX,&REG01IX,&ADCONIX,&RXFMTIX  @02c 03202340
         GBLA    &UNQUOTEIX,&HIGHIX                                @02a 03202430
.*                                                                      03202520
&NULLIX    SETA  1                                                      03202610
&LITIX     SETA  2                                                      03202700
&REGIX     SETA  3                                                      03202790
&REG01IX   SETA  4                                                      03202880
&ADCONIX   SETA  5                                                      03202970
&RXFMTIX   SETA  6                                                      03203060
&UNQUOTEIX SETA  7                                                      03203150
&HIGHIX    SETA  &UNQUOTEIX                 Set to highest index   @02a 03203240
.*                                                                      03203330
.*********************************************************************  03203420
.* Set up arrays with name of function and a bit map of the          *  03203510
.* keywords that are valid with that function.  This array is used   *  03203600
.* to detect keywords that are invalid for the service requested.    *  03203690
.*                                                                   *  03203780
.*                     MAP = 0 do not check                          *  03203870
.*                     MAP = 1 check for null                        *  03203960
.*                                                                   *  03204050
.* If a check is made and the value is not null issue an error       *  03204140
.* MNOTE, because the keyword is not valid with the service          *  03204230
.* requested.  The positions in the map variable are:                *  03204320
.*                                                                   *  03204410
.*  POSITION  KEYWORD   POSITION  KEYWORD   POSITION  KEYWORD        *  03204500
.*     1      DCB           8     MSER         15     FORCE          *  03204590
.*     2       ?            9     MLABEL       16     WAIT           *  03204680
.*     3      MF           10     UCBL         17     TEST           *  03204770
.*     4      UCB          11     TXT          18     INDEX          *  03204860
.*     5      SER          12     TXT2         19     MEDIATYPE      *  03204950
.*     6      LABEL        13     VOL                                *  03205040
.*     7      DISP         14     FLASH                              *  03205130
.*********************************************************************  03205220
         LCLC     &SVCR(7),&MAP(7),&M                                   03205310
&SVCR(1) SETC    'RDY'                                                  03205400
&MAP(1)  SETC    '0101111111011111111'                             @02C 03205490
&SVCR(2) SETC    'MOUNT'                                                03205580
&MAP(2)  SETC    '1100001111111100000'                             @02C 03205670
&SVCR(3) SETC    'VERIFY'                                               03205760
&MAP(3)  SETC    '1000001111111100011'                             @02C 03205850
&SVCR(4) SETC    'DEMOUNT'                                              03205940
&MAP(4)  SETC    '1100010001111100000'                             @02C 03206030
&SVCR(5) SETC    'RESET'                                                03206120
&MAP(5)  SETC    '1100111110111100011'                             @02C 03206210
&SVCR(6) SETC    'GEN'                                                  03206300
&MAP(6)  SETC    '1100111111000000011'                             @02C 03206390
.*                                                                      03206480
.*********************************************************************  03206570
.* This array definition added with MTL changes.                 @02a*  03206660
.*                                                                   *  03206750
.* Set up arrays with name of the keywords and their valid formats.  *  03206840
.* A 1 in the format position for a given keyword indicates that     *  03206930
.* the format is valid for that keyword.  A 0 indicates the format   *  03207020
.* is not valid for that keyword.                                    *  03207110
.*                                                                   *  03207200
.* Exceptions have to be treated separately.  The only current       *  03207290
.* exception is that register 1, REG01, cannot be specified for the  *  03207380
.* address in MF=(E,addr) on the GEN function.                       *  03207470
.*                                                                   *  03207560
.* Errors will be noted via an MNOTE 12.                             *  03207650
.*                                                                   *  03207740
.* The positions in the format array, FMT must be kept the same as   *  03207830
.* their positions in the DCBF, WAITF, etc arrays, ie, the           *  03207920
.* positions use the same index variables, &LITIX, &NULLIX, etc.     *  03208010
.*                                                                   *  03208100
.*  POSITION  KEYWORD                                                *  03208190
.*     1      NULL (CHKFMT never called when NULL on)                *  03208280
.*     2      LITERAL                                                *  03208370
.*     3      REG (2-12)                                             *  03208460
.*     4      REG01 (0, 1)                                           *  03208550
.*     5      ADCON                                                  *  03208640
.*     6      RXFMT                                                  *  03208730
.*     7      UNQUOTE (unquoted literal)                             *  03208820
.*                                                                   *  03208910
.* In addition, each keyword has an index variable set to the        *  03209000
.* corresponding index value in the KYWD array as do each of the     *  03209090
.* format bits in the FMT array.  If any of these indices change so  *  03209180
.* must the related index variables.                                 *  03209270
.*************************************************************** @02a*  03209360
         GBLC    &KYWD(19),&FMT(19)                                     03209450
.*                                                                      03209540
.*       *---------------------------------------------------*          03209630
.*       * Set the KYWD and FMT array values                 *          03209720
.*       *---------------------------------------------------*          03209810
&KYWD(1)    SETC 'DCB'                                                  03209900
&FMT(1)     SETC '1010110'                                              03209990
&KYWD(2)    SETC 'DISP'                                                 03210080
&FMT(2)     SETC '1110110'                                              03210170
&KYWD(3)    SETC 'FLASH'                                                03210260
&FMT(3)     SETC '1000001'                                              03210350
&KYWD(4)    SETC 'FORCE'                                                03210440
&FMT(4)     SETC '1011001'                                        @03c  03210530
&KYWD(5)    SETC 'INDEX'                                                03210620
&FMT(5)     SETC '1110101'                                              03210710
&KYWD(6)    SETC 'LABEL'                                                03210800
&FMT(6)     SETC '1110110'                                              03210890
&KYWD(7)    SETC 'MEDIATYPE'                                            03210980
&FMT(7)     SETC '1110110'                                              03211070
&KYWD(8)    SETC 'MF'                                                   03211160
&FMT(8)     SETC '1011010'                                              03211250
&KYWD(9)    SETC 'MLABEL'                                               03211340
&FMT(9)     SETC '1110110'                                              03211430
&KYWD(10)   SETC 'MSER'                                                 03211520
&FMT(10)    SETC '1110110'                                              03211610
&KYWD(11)   SETC 'SER'                                                  03211700
&FMT(11)    SETC '1110110'                                              03211790
&KYWD(12)   SETC 'TEST'                                                 03211880
&FMT(12)    SETC '1000001'                                              03211970
&KYWD(13)   SETC 'TXT'                                                  03212060
&FMT(13)    SETC '1110110'                                              03212150
&KYWD(14)   SETC 'TXT2'                                                 03212240
&FMT(14)    SETC '1110110'                                              03212330
&KYWD(15)   SETC 'UCB'                                                  03212420
&FMT(15)    SETC '1010000'                                              03212510
&KYWD(16)   SETC 'UCBL'                                                 03212600
&FMT(16)    SETC '1011110'                                              03212690
&KYWD(17)   SETC 'VOL'                                                  03212780
&FMT(17)    SETC '1000001'                                              03212870
&KYWD(18)   SETC 'WAIT'                                                 03212960
&FMT(18)    SETC '1000001'                                              03213050
.*                                                                      03213140
.*       *---------------------------------------------------*          03213230
.*       * Declare and set the index values used with the    *          03213320
.*       * KYWD and FMT arrays.                              *          03213410
.*       *---------------------------------------------------*          03213500
         GBLA    &DCBIX, &DISPIX,&FLASHIX,&FORCEIX,&INDEXIX             03213590
         GBLA    &LABELIX,&MEDTIX,&MFIX,&MLABELIX,&MSERIX,&SERIX        03213680
         GBLA    &TESTIX,&TXTIX,&TXT2IX,&UCBIX,&UCBLIX,&VOLIX           03213770
         GBLA    &WAITIX                                                03213860
.*                                                                      03213950
&DCBIX     SETA  1                                                      03214040
&DISPIX    SETA  2                                                      03214130
&FLASHIX   SETA  3                                                      03214220
&FORCEIX   SETA  4                                                      03214310
&INDEXIX   SETA  5                                                      03214400
&LABELIX   SETA  6                                                      03214490
&MEDTIX    SETA  7                                                      03214580
&MFIX      SETA  8                                                      03214670
&MLABELIX  SETA  9                                                      03214760
&MSERIX    SETA  10                                                     03214850
&SERIX     SETA  11                                                     03214940
&TESTIX    SETA  12                                                     03215030
&TXTIX     SETA  13                                                     03215120
&TXT2IX    SETA  14                                                     03215210
&UCBIX     SETA  15                                                     03215300
&UCBLIX    SETA  16                                                     03215390
&VOLIX     SETA  17                                                     03215480
&WAITIX    SETA  18                                                     03215570
.*                                                                      03215660
.*********************************************************************  03215750
.* The following variables define the hex bit setting in the new     *  03215840
.* 'Keywords Used' flag byte now built at offset x'11' into the      *  03215930
.* parameter list passed to the SVC.  These flags will be on if the  *  03216020
.* keyword was specified, and a pointer in the plist to the value    *  03216110
.* specified for the keyword is required.  If a pointer is           *  03216200
.* indicated to exist, then all previous pointer fields will, of     *  03216290
.* necessity, also exist, whether they were specified or not.        *  03216380
.* However, their flag bits will only be on if there is a pointer    *  03216470
.* to the relevant value in the parameter list.                      *  03216560
.*                                                                   *  03216650
.* Everytime a new keyword that requires a new pointer field in the  *  03216740
.* parameter list is introduced, this list of offset variables must  *  03216830
.* be updated as must the generation of the fields themselves.       *  03216920
.*                                                                   *  03217010
.* The indicator that we have this new format of the parameter list  *  03217100
.* is an x'FF' in byte 0 of the plist.                               *  03217190
.*                                                                   *  03217280
.* Currently supported keywords are INDEX (which can now accept the  *  03217370
.* quoted literal, register, and adcon forms of invocation, in       *  03217460
.* addition to the unquoted literal form that was previously         *  03217550
.* supported), and MEDIATYPE.                                        *  03217640
.*                                                                   *  03217730
.*            BIT 1 = 1 pointer to INDEX value is non-zero           *  03217820
.*            BIT 2 = 1 pointer to MEDIATYPE value is non-zero       *  03217910
.*            BIT 3 - 8 Reserved                                     *  03218000
.*********************************************************************  03218090
         LCLC  &KWDINDEXBIT,&KWDMEDTBIT                            @02c 03218180
.*                                                                      03218270
&KWDINDEXBIT SETC 'X'.''''.'80'.''''                                    03218360
&KWDMEDTBIT  SETC 'X'.''''.'40'.''''                                    03218450
.*                                                                      03218540
.*                                                                      03218630
.*********************************************************************  03218720
.* The following variables define the offset into the parameter list *  03218810
.* for the various fields.  This is done to avoid having to code the *  03218900
.* explicit numeric offsets, and it makes it easier to move fields   *  03218990
.* around, if necessary (THOUGH STRONGLY DENOUNCED!!!).  The offsets *  03219080
.* comply with the picture below. SHOULD THIS CHANGE, UPDATE THIS    *  03219170
.* PICTURE AND THE ONE IN THE PROLOGUE!!!!                           *  03219260
.*                                                                   *  03219350
.*     +--------------------------------------------------+          *  03219440
.*  +0 |            |IOSLVL from |CART from   |    LAB    |          *  03219530
.*     |    x'FF'   |       FORCE|     VOL,   |     &     |          *  03219620
.*     |            |Flags:      |FLASH from  |    MLAB   |          *  03219710
.*     | Indicates  | Force,     |      FLASH |           |          *  03219800
.*     | new format | NoWait,    |            |           |          *  03219890
.*     | plist      | 1 UCB vs   |            |           |          *  03219980
.*     |            |   UCBL,    |            |           |          *  03220070
.*     |            | Don't Index|            |           |          *  03220160
.*     +--------------------------------------------------+          *  03220250
.*  +4 |                                                  |          *  03220340
.*     |              Pointer to TXT1 field               |          *  03220430
.*     |                                                  |          *  03220520
.*     +--------------------------------------------------+          *  03220610
.*  +8 |                                                  |          *  03220700
.*     |              Pointer to TXT2 field               |          *  03220790
.*     |                                                  |          *  03220880
.*     +--------------------------------------------------+          *  03220970
.*  +C |                                                  |          *  03221060
.*     |              Pointer to DCB/UCB                  |          *  03221150
.*     |                                                  |          *  03221240
.*     +--------------------------------------------------+          *  03221330
.*  +10|Service type|New keywords|  Reserved  | Reserved  |          *  03221420
.*     |MOUNT, RDY, |flags ind.  |            |           |          *  03221510
.*     |VERIFY,...  |those that  |            |           |          *  03221600
.*     |(previously |need pointer|            |           |          *  03221690
.*     | at +0)     |in this     |            |           |          *  03221780
.*     |            |plist.      |            |           |          *  03221870
.*     |            |Currently:  |            |           |          *  03221960
.*     |            |INDEX &     |            |           |          *  03222050
.*     |            |MEDIATYPE   |            |           |          *  03222140
.*     +--------------------------------------------------+          *  03222230
.*  +14|                                                  |          *  03222320
.*     |              Pointer to Index field              |          *  03222410
.*     |                                                  |          *  03222500
.*     +--------------------------------------------------+          *  03222590
.*  +14|                                                  |          *  03222680
.*     |              Pointer to Mediatype field          |          *  03222770
.*     |                                                  |          *  03222860
.*     +--------------------------------------------------+          *  03222950
.*                                                                   *  03223040
.*********************************************************************  03223130
         GBLA  &TYPOFF,&LVLOFF,&CRTOFF,&LABOFF,&TX1OFF,&TX2OFF,    @02a 03223220
         GBLA  &UCBOFF,&NTPOFF,&KWDOFF,&IXOFF,&MTPOFF              @02a 03223310
         GBLA  &FIRSTLITOFF,&CURLITOFF                             @02a 03223400
                                                                        03223490
.*                                                                      03223580
&TYPOFF      SETA   0                                              @02a 03223670
&LVLOFF      SETA   1                                              @02a 03223760
&CRTOFF      SETA   2                                              @02a 03223850
&LABOFF      SETA   3                                              @02a 03223940
&TX1OFF      SETA   4                                              @02a 03224030
&TX2OFF      SETA   8                                              @02a 03224120
&UCBOFF      SETA  12                                              @02a 03224210
&NTPOFF      SETA  16                                              @02a 03224300
&KWDOFF      SETA  17                                              @02a 03224390
&IXOFF       SETA  20                                              @02a 03224480
&MTPOFF      SETA  24                                              @02a 03224570
&FIRSTLITOFF SETA  28                                              @02a 03224660
&CURLITOFF   SETA  28                                              @02a 03224750
.*                                                                      03224840
.*###################################################################*  03224930
.*###################################################################*  03225020
.*#                                                                 #*  03225110
.*#                 CHECK FOR INNER MACRO CALLS                     #*  03225200
.*#                                                                 #*  03225290
.*# Moving the calls here allows variables to be initialized above. #*  03225380
.*#                                                                 #*  03225470
.*###################################################################*  03225560
.*###################################################################*  03225650
       AIF ('&SYSLIST(2,1)' EQ 'CHKREG').REGCHK                         03250000
       AIF ('&SYSLIST(2,1)' EQ 'CHKRX').RXCHK                           03300000
       AIF ('&SYSLIST(2,1)' EQ 'CHKSTR').CHRST                          03350000
       AIF ('&SYSLIST(2,1)' EQ 'CHKLEN').LENCHK                         03400000
       AIF ('&SYSLIST(2,1)' EQ 'CHKFMT').FMTCHK                         03479990
.*                                                                      03509980
.*       *---------------------------------------------------*          03539970
.*       * Set the DEBUG option here and put out an          *          03569960
.*       * informational if it was specified.                *          03599950
.*       *---------------------------------------------------*     @02a 03629940
&DEBUGON SETB 0                             Assume DEBUG not specified  03659930
         AIF (T'&DEBUG  EQ 'O').NODEBUGSET                              03689920
&DEBUGON SETB 1                                                         03719910
.*                                                                      03749900
.NODEBUGSET ANOP                                                   @02a 03779890
.*                                                                      03809880
         AIF (&DEBUGON EQ 0).NODEBUG                               @02a 03839870
         MNOTE *,'DEBUG was specified, debugging MNOTE messages'   @02a 03869860
         MNOTE *,'                     will be issued'                  03899850
.NODEBUG ANOP                                                      @02a 03929840
.*                                                                      03959830
.*###################################################################*  03989820
.*###################################################################*  04019810
.*#                                                                 #*  04049800
.*#           SET BIT ARRAYS TO ATTRIBUTES OF KEY WORDS             #*  04079790
.*#                                                                 #*  04109780
.*###################################################################*  04139770
.*###################################################################*  04169760
.*                                                                      04199750
.*       *---------------------------------------------------*          04229740
.*       * Zero all the F arrays                             *          04259730
.*       *---------------------------------------------------*          04289720
&J        SETA   1                          Init loop counter           04319710
.CLRLOOP  ANOP                              Loop point                  04349700
&DCBF(&J)    SETB   0                                                   04379690
&TXTF(&J)    SETB   0                                                   04409680
&UCBF(&J)    SETB   0                                                   04439670
&INDEXF(&J)  SETB   0                                                   04469660
&SERF(&J)    SETB   0                                                   04499650
&LABELF(&J)  SETB   0                                                   04529640
&DISPF(&J)   SETB   0                                                   04559630
&MSERF(&J)   SETB   0                                                   04589620
&MLABELF(&J) SETB   0                                                   04619610
&UCBLF(&J)   SETB   0                                                   04649600
&TXT2F(&J)   SETB   0                                                   04679590
&WAITF(&J)   SETB   0                                                   04709580
&VOLF(&J)    SETB   0                                                   04739570
&MFE(&J)     SETB   0                                                   04769560
&FLASHF(&J)  SETB   0                                                   04799550
&FORCEF(&J)  SETB   0                                                   04829540
&TESTF(&J)   SETB   0                                                   04859530
&MEDTF(&J)   SETB   0                                                   04889520
&J        SETA   &J+1                       Increment                   04919510
          AIF (&J LE &HIGHIX).CLRLOOP       Curr. only 7 entries        04949500
.*                                                                      04979490
.*       *---------------------------------------------------*          05009480
.*       *---------------------------------------------------*          05039470
.*       *                   DCB KEYWORD                     *          05069460
.*       *                                                   *          05099450
.*       * Initialize the array to zeroes                    *          05129440
.*       *---------------------------------------------------*          05159430
.*       *---------------------------------------------------*          05189420
.*                                                                      05219410
&DCBF(&NULLIX) SETB   1                                                 05249400
              AIF     (T'&DCB  EQ 'O').EDCB    .*IF NULL SKIP           05300000
&DCBF(&NULLIX) SETB   0                   .*RESET NULL IF NOT           05350000
&LENGTH       SETA    K'&DCB            .*SET LENGTH OF KEYWORD         05400000
.*                                                                      05479990
.*       *---------------------------------------------------*          05509980
.*       * TEST FOR LITERAL AND SET FLAG BIT IN KEYWORD ARRAY*          05539970
.*       *---------------------------------------------------*          05569960
&DCBF(&LITIX) SETB ('&DCB'(1,1) EQ '''' AND                            C05599950
               '&DCB'(&LENGTH,1) EQ '''')       IN QUOTES SET FLAG      05650000
.*                                                                      05729990
.*       *---------------------------------------------------*          05759980
.*       * TEST FOR REG AND SET FLAG BIT IN KEYWORD ARRAY    *          05789970
.*       *---------------------------------------------------*          05819960
&DCBF(&REGIX) SETB  ('&DCB(1)' NE '&DCB')                               05849950
.*                                                                      05879940
.*       *---------------------------------------------------*          05909930
.*       * TEST FOR REG01 AND SET FLAG BIT IN KEYWORD ARRAY  *          05939920
.*       *---------------------------------------------------*          05969910
&DCBF(&REG01IX) SETB (&DCBF(&REGIX) EQ 1 AND                           C05999900
               ('&DCB(1)' EQ '0' OR '&DCB(1)' EQ '1'))                  06100000
.*                                                                      06179990
.*       *---------------------------------------------------*          06209980
.*       * TEST FOR ADCON AND SET FLAG BIT IN KEYWORD ARRAY  *          06239970
.*       *---------------------------------------------------*          06269960
&DCBF(&ADCONIX) SETB ('&DCB'(1,2)  EQ 'A(' AND                         C06299950
               '&DCB'(&LENGTH,1) EQ ')')                                06350000
.*                                                                      06350990
.*       *---------------------------------------------------*          06351980
.*       * If it's none of the above, it must be RX format   *          06352970
.*       *---------------------------------------------------*     @02a 06353960
         AIF  (&DCBF(&LITIX) EQ 1 OR                                   C06354950
               &DCBF(&REGIX) EQ 1 OR                                   C06355940
               &DCBF(&ADCONIX) EQ 1).CKDCB                         @02c 06356930
&DCBF(&RXFMTIX) SETB 1                      Indicate RX format     @02a 06357920
.*                                                                      06358910
.*       *---------------------------------------------------*          06359900
.*       * If RXFMT is indicated determine if it's supported *          06360890
.*       * If it is supported, leave it on.  If it isn't     *          06361880
.*       * change it to unquoted literal.  A subsequent call *          06362870
.*       * to CHKFMT will determine if the this or any other *          06363860
.*       * format indicators are valid.                      *          06364850
.*       *---------------------------------------------------*     @02a 06365840
         AIF (&DCBF(&RXFMTIX) NE 1).CKDCB  Br if not RXFMT         @02a 06366830
.*                                                                      06367820
         AIF ('&FMT(&DCBIX)'(&RXFMTIX,1) EQ '1').CKDCB             @02a 06368810
&DCBF(&RXFMTIX)    SETB 0                   Reset RX format ind.   @02a 06369800
&DCBF(&UNQUOTEIX) SETB 1                    Indicate unquote fmt   @02a 06370790
.*                                                                      06371780
.CKDCB   ANOP                                                      @02a 06372770
.*       *---------------------------------------------------*          06373760
.*       * Get ready to call CHKFMT inner macro to validate  *          06374750
.*       * that the specified format of the keyword operand  *          06375740
.*       * is supported.  But first issue debug messages if  *          06376730
.*       * requested by DEBUG.                               *          06377720
.*       *---------------------------------------------------*          06378710
         AIF (&DEBUGON EQ 0).NODEBUGDCB1                           @02a 06379700
         MNOTE *,' '                                                    06380690
         MNOTE *,'Calling CHKFMT for DCB keyword. DCBF flags are:'      06381680
         MNOTE *,'        NULL             = &DCBF(&NULLIX)'            06382670
         MNOTE *,'        QUOTED LITERAL   = &DCBF(&LITIX)'             06383660
         MNOTE *,'        REG (2-12)       = &DCBF(&REGIX)'             06384650
         MNOTE *,'        REG (0|1)        = &DCBF(&REG01IX)'           06385640
         MNOTE *,'        ADCON            = &DCBF(&ADCONIX)'           06386630
         MNOTE *,'        RX FORMAT        = &DCBF(&RXFMTIX)'           06387620
         MNOTE *,'        UNQUOTED LITERAL = &DCBF(&UNQUOTEIX)'         06388610
.*                                                                      06389600
.NODEBUGDCB1  ANOP                                                 @02a 06390590
         MSGDISP ,(CHKFMT,DCB,&DEBUGON)                            @02a 06391580
.*                                                                      06392570
.EDCB         ANOP                                                      06400000
.*                                                                      07149990
.*       *---------------------------------------------------*          07849980
.*       *---------------------------------------------------*          08549970
.*       *                  DISP KEYWORD                     *          09249960
.*       *---------------------------------------------------*          09949950
.*       *---------------------------------------------------*          10649940
&DISPF(&NULLIX) SETB  1                                                 11349930
              AIF     (T'&DISP  EQ 'O').EDISP .*IF NULL SKIP            12050000
&DISPF(&NULLIX) SETB  0                   .*RESET NULL IF NOT           12100000
&LENGTH       SETA    K'&DISP           .*SET LENGTH OF KEYWORD         12150000
.*                                                                      12229990
.*       *---------------------------------------------------*          12259980
.*       * TEST FOR LITERAL AND SET FLAG BIT IN KEYWORD ARRAY*          12289970
.*       *---------------------------------------------------*          12319960
&DISPF(&LITIX) SETB ('&DISP'(1,1) EQ '''' AND                          C12349950
               '&DISP'(&LENGTH,1) EQ '''')      IN QUOTES SET FLAG      12400000
.*                                                                      12479990
.*       *---------------------------------------------------*          12509980
.*       * TEST FOR REG AND SET FLAG BIT IN KEYWORD ARRAY    *          12539970
.*       *---------------------------------------------------*          12569960
&DISPF(&REGIX) SETB ('&DISP(1)' NE '&DISP')                             12599950
.*                                                                      12629940
.*       *---------------------------------------------------*          12659930
.*       * TEST FOR REG01 AND SET FLAG BIT IN KEYWORD ARRAY  *          12689920
.*       *---------------------------------------------------*          12719910
&DISPF(&REG01IX) SETB (&DISPF(&REGIX) EQ 1 AND                         C12749900
               ('&DISP(1)' EQ '0' OR '&DISP(1)' EQ '1'))                12850000
.*                                                                      12929990
.*       *---------------------------------------------------*          12959980
.*       * TEST FOR ADCON AND SET FLAG BIT IN KEYWORD ARRAY  *          12989970
.*       *---------------------------------------------------*          13019960
&DISPF(&ADCONIX) SETB ('&DISP'(1,2) EQ 'A(' AND                        C13049950
               '&DISP'(&LENGTH,1) EQ ')')                               13100000
.*                                                                      13100990
.*       *---------------------------------------------------*          13101980
.*       * If it's none of the above, it must be RX format   *          13102970
.*       *---------------------------------------------------*     @02a 13103960
         AIF  (&DISPF(&LITIX) EQ 1 OR                                  C13104950
               &DISPF(&REGIX) EQ 1 OR                                  C13105940
               &DISPF(&ADCONIX) EQ 1).CKDISP                            13106930
&DISPF(&RXFMTIX) SETB 1                     Indicate RX format     @02a 13107920
.*                                                                      13108910
.*       *---------------------------------------------------*          13109900
.*       * If RXFMT is indicated determine if it's supported *          13110890
.*       * If it is supported, leave it on.  If it isn't     *          13111880
.*       * change it to unquoted literal.  A subsequent call *          13112870
.*       * to CHKFMT will determine if the this or any other *          13113860
.*       * format indicators are valid.                      *          13114850
.*       *---------------------------------------------------*     @02a 13115840
         AIF (&DISPF(&RXFMTIX) NE 1).CKDISP Br if not RXFMT        @02a 13116830
.*                                                                      13117820
         AIF ('&FMT(&DISPIX)'(&RXFMTIX,1) EQ '1').CKDISP           @02a 13118810
&DISPF(&RXFMTIX) SETB 0                     Reset RX format ind.   @02a 13119800
&DISPF(&UNQUOTEIX) SETB 1                   Indicate unquote fmt   @02a 13120790
.*                                                                      13121780
.CKDISP ANOP                                                       @02a 13122770
.*       *---------------------------------------------------*          13123760
.*       * Get ready to call CHKFMT inner macro to validate  *          13124750
.*       * that the specified format of the keyword operand  *          13125740
.*       * is supported.  But first issue debug messages if  *          13126730
.*       * requested by DEBUG.                               *          13127720
.*       *---------------------------------------------------*          13128710
         AIF (&DEBUGON EQ 0).NODEBUGDISP1                          @02a 13129700
         MNOTE *,' '                                                    13130690
         MNOTE *,'Calling CHKFMT for DISP keyword. DISPF flags are:'    13131680
         MNOTE *,'        NULL             = &DISPF(&NULLIX)'           13132670
         MNOTE *,'        QUOTED LITERAL   = &DISPF(&LITIX)'            13133660
         MNOTE *,'        REG (2-12)       = &DISPF(&REGIX)'            13134650
         MNOTE *,'        REG (0|1)        = &DISPF(&REG01IX)'          13135640
         MNOTE *,'        ADCON            = &DISPF(&ADCONIX)'          13136630
         MNOTE *,'        RX FORMAT        = &DISPF(&RXFMTIX)'          13137620
         MNOTE *,'        UNQUOTED LITERAL = &DISPF(&UNQUOTEIX)'        13138610
.*                                                                      13139600
.NODEBUGDISP1 ANOP                                                 @02a 13140590
         MSGDISP ,(CHKFMT,DISP,&DEBUGON)                           @02a 13141580
.*                                                                      13142570
.EDISP        ANOP                                                      13150000
.*                                                                      13999990
.*       *---------------------------------------------------*          14799980
.*       *---------------------------------------------------*          15599970
.*       *                 FLASH KEYWORD                     *          16399960
.*       *---------------------------------------------------*          17199950
.*       *---------------------------------------------------*          17999940
&FLASHF(&NULLIX) SETB 1                                                 18799930
              AIF     (T'&FLASH  EQ 'O').EFLASH .*IF NULL SKIP          20150000
&FLASHF(&NULLIX) SETB 0                   .*RESET NULL IF NOT           20200000
&LENGTH       SETA    K'&FLASH          .*SET LENGTH OF KEYWORD         20250000
.*                                                                      20329990
.*       *---------------------------------------------------*          20359980
.*       * TEST FOR LITERAL AND SET FLAG BIT IN KEYWORD ARRAY*          20389970
.*       *---------------------------------------------------*          20419960
&FLASHF(&LITIX) SETB ('&FLASH'(1,1) EQ '''' AND                        C20449950
               '&FLASH'(&LENGTH,1) EQ '''')     IN QUOTES SET FLAG      20500000
.*                                                                      20579990
.*       *---------------------------------------------------*          20609980
.*       * TEST FOR REG AND SET FLAG BIT IN KEYWORD ARRAY    *          20639970
.*       *---------------------------------------------------*          20669960
&FLASHF(&REGIX) SETB ('&FLASH(1)' NE '&FLASH')                          20699950
.*                                                                      20729940
.*       *---------------------------------------------------*          20759930
.*       * TEST FOR REG01 AND SET FLAG BIT IN KEYWORD ARRAY  *          20789920
.*       *---------------------------------------------------*          20819910
&FLASHF(&REG01IX) SETB (&FLASHF(&REGIX) EQ 1 AND                       C20849900
               ('&FLASH(1)' EQ '0' OR '&FLASH(1)' EQ '1'))              20950000
.*                                                                      21029990
.*       *---------------------------------------------------*          21059980
.*       * TEST FOR ADCON AND SET FLAG BIT IN KEYWORD ARRAY  *          21089970
.*       *---------------------------------------------------*          21119960
&FLASHF(&ADCONIX) SETB ('&FLASH'(1,2) EQ 'A(' AND                      C21149950
               '&FLASH'(&LENGTH,1) EQ ')')                              21200000
.*                                                                      21200990
.*       *---------------------------------------------------*          21201980
.*       * If it's none of the above, it must be RX format   *          21202970
.*       *---------------------------------------------------*     @02a 21203960
         AIF  (&FLASHF(&LITIX) EQ 1 OR                                 C21204950
               &FLASHF(&REGIX) EQ 1 OR                                 C21205940
               &FLASHF(&ADCONIX) EQ 1).CKFLASH                          21206930
&FLASHF(&RXFMTIX) SETB 1                    Indicate RX format     @02a 21207920
.*                                                                      21208910
.*       *---------------------------------------------------*          21209900
.*       * If RXFMT is indicated determine if it's supported *          21210890
.*       * If it is supported, leave it on.  If it isn't     *          21211880
.*       * change it to unquoted literal.  A subsequent call *          21212870
.*       * to CHKFMT will determine if the this or any other *          21213860
.*       * format indicators are valid.                      *          21214850
.*       *---------------------------------------------------*     @02a 21215840
         AIF (&FLASHF(&RXFMTIX) NE 1).CKFLASH Br if not RXFMT      @02a 21216830
.*                                                                      21217820
         AIF ('&FMT(&FLASHIX)'(&RXFMTIX,1) EQ '1').CKFLASH         @02a 21218810
&FLASHF(&RXFMTIX) SETB 0                    Reset RX format ind.   @02a 21219800
&FLASHF(&UNQUOTEIX) SETB 1                  Indicate unquote fmt   @02a 21220790
.*                                                                      21221780
.CKFLASH ANOP                                                      @02a 21222770
.*       *---------------------------------------------------*          21223760
.*       * Get ready to call CHKFMT inner macro to validate  *          21224750
.*       * that the specified format of the keyword operand  *          21225740
.*       * is supported.  But first issue debug messages if  *          21226730
.*       * requested by DEBUG.                               *          21227720
.*       *---------------------------------------------------*          21228710
         AIF (&DEBUGON EQ 0).NODEBUGFLASH1                         @02a 21229700
         MNOTE *,' '                                                    21230690
         MNOTE *,'Calling CHKFMT for FLASH keyword. FLASHF flags are:'  21231680
         MNOTE *,'        NULL             = &FLASHF(&NULLIX)'          21232670
         MNOTE *,'        QUOTED LITERAL   = &FLASHF(&LITIX)'           21233660
         MNOTE *,'        REG (2-12)       = &FLASHF(&REGIX)'           21234650
         MNOTE *,'        REG (0|1)        = &FLASHF(&REG01IX)'         21235640
         MNOTE *,'        ADCON            = &FLASHF(&ADCONIX)'         21236630
         MNOTE *,'        RX FORMAT        = &FLASHF(&RXFMTIX)'         21237620
         MNOTE *,'        UNQUOTED LITERAL = &FLASHF(&UNQUOTEIX)'       21238610
.*                                                                      21239600
.NODEBUGFLASH1 ANOP                                                @02a 21240590
         MSGDISP ,(CHKFMT,FLASH,&DEBUGON)                          @02a 21241580
.*                                                                      21242570
.EFLASH       ANOP                                                      21250000
.*                                                                      21319990
.*       *---------------------------------------------------*          21339980
.*       *---------------------------------------------------*          21359970
.*       *                 FORCE KEYWORD                     *          21379960
.*       *---------------------------------------------------*          21399950
.*       *---------------------------------------------------*          21419940
&FORCEF(&NULLIX) SETB 1                                                 21439930
              AIF     (T'&FORCE  EQ 'O').EFORCE .*IF NULL SKIP          21500000
&FORCEF(&NULLIX) SETB 0                   .*RESET NULL IF NOT           21550000
&LENGTH       SETA    K'&FORCE          .*SET LENGTH OF KEYWORD         21600000
.*                                                                      21679990
.*       *---------------------------------------------------*          21709980
.*       * TEST FOR LITERAL AND SET FLAG BIT IN KEYWORD ARRAY*          21739970
.*       *---------------------------------------------------*          21769960
&FORCEF(&LITIX) SETB ('&FORCE'(1,1) EQ '''' AND                        C21799950
               '&FORCE'(&LENGTH,1) EQ '''')     IN QUOTES SET FLAG      21850000
.*                                                                      21929990
.*       *---------------------------------------------------*          21959980
.*       * TEST FOR REG AND SET FLAG BIT IN KEYWORD ARRAY    *          21989970
.*       *---------------------------------------------------*          22019960
&FORCEF(&REGIX) SETB ('&FORCE(1)' NE '&FORCE')                          22049950
.*                                                                      22079940
.*       *---------------------------------------------------*          22109930
.*       * TEST FOR REG01 AND SET FLAG BIT IN KEYWORD ARRAY  *          22139920
.*       *---------------------------------------------------*          22169910
&FORCEF(&REG01IX) SETB (&FORCEF(&REGIX) EQ 1 AND                       C22199900
               ('&FORCE(1)' EQ '0' OR '&FORCE(1)' EQ '1'))              22300000
.*                                                                      22379990
.*       *---------------------------------------------------*          22409980
.*       * TEST FOR ADCON AND SET FLAG BIT IN KEYWORD ARRAY  *          22439970
.*       *---------------------------------------------------*          22469960
&FORCEF(&ADCONIX) SETB ('&FORCE'(1,2) EQ 'A(' AND                      C22499950
               '&FORCE'(&LENGTH,1) EQ ')')                              22550000
.*                                                                      22550990
.*       *---------------------------------------------------*          22551980
.*       * If it's none of the above, it must be RX format   *          22552970
.*       *---------------------------------------------------*     @02a 22553960
         AIF  (&FORCEF(&LITIX) EQ 1 OR                                 C22554950
               &FORCEF(&REGIX) EQ 1 OR                                 C22555940
               &FORCEF(&ADCONIX) EQ 1).CKFORCE                          22556930
&FORCEF(&RXFMTIX) SETB 1                    Indicate RX format     @02a 22557920
.*                                                                      22558910
.*       *---------------------------------------------------*          22559900
.*       * If RXFMT is indicated determine if it's supported *          22560890
.*       * If it is supported, leave it on.  If it isn't     *          22561880
.*       * change it to unquoted literal.  A subsequent call *          22562870
.*       * to CHKFMT will determine if the this or any other *          22563860
.*       * format indicators are valid.                      *          22564850
.*       *---------------------------------------------------*     @02a 22565840
         AIF (&FORCEF(&RXFMTIX) NE 1).CKFORCE Br if not RXFMT      @02a 22566830
.*                                                                      22567820
         AIF ('&FMT(&FORCEIX)'(&RXFMTIX,1) EQ '1').CKFORCE         @02a 22568810
&FORCEF(&RXFMTIX) SETB 0                    Reset RX format ind.   @02a 22569800
&FORCEF(&UNQUOTEIX) SETB 1                  Indicate unquote fmt   @02a 22570790
.*                                                                      22571780
.CKFORCE ANOP                                                      @02a 22572770
.*       *---------------------------------------------------*          22573760
.*       * Get ready to call CHKFMT inner macro to validate  *          22574750
.*       * that the specified format of the keyword operand  *          22575740
.*       * is supported.  But first issue debug messages if  *          22576730
.*       * requested by DEBUG.                               *          22577720
.*       *---------------------------------------------------*          22578710
         AIF (&DEBUGON EQ 0).NODEBUGFORCE1                         @02a 22579700
         MNOTE *,' '                                                    22580690
         MNOTE *,'Calling CHKFMT for FORCE keyword. FORCEF flags are:'  22581680
         MNOTE *,'        NULL             = &FORCEF(&NULLIX)'          22582670
         MNOTE *,'        QUOTED LITERAL   = &FORCEF(&LITIX)'           22583660
         MNOTE *,'        REG (2-12)       = &FORCEF(&REGIX)'           22584650
         MNOTE *,'        REG (0|1)        = &FORCEF(&REG01IX)'         22585640
         MNOTE *,'        ADCON            = &FORCEF(&ADCONIX)'         22586630
         MNOTE *,'        RX FORMAT        = &FORCEF(&RXFMTIX)'         22587620
         MNOTE *,'        UNQUOTED LITERAL = &FORCEF(&UNQUOTEIX)'       22588610
.*                                                                      22589600
.NODEBUGFORCE1 ANOP                                                @02a 22590590
         MSGDISP ,(CHKFMT,FORCE,&DEBUGON)                          @02a 22591580
.*                                                                      22592570
.EFORCE       ANOP                                                      22600000
.*                                                                      22651990
.*       *---------------------------------------------------*          22653980
.*       *---------------------------------------------------*          22655970
.*       *                 INDEX KEYWORD                     *          22657960
.*       *---------------------------------------------------*          22659950
.*       *---------------------------------------------------*          22661940
&INDEXF(&NULLIX) SETB 1                      Assume null          @02a  22663930
              AIF  (T'&INDEX  EQ 'O').EINDEX If NULL (omitted)    @02a  22665920
&INDEXF(&NULLIX) SETB 0                      Reset NULL, since not@02a  22667910
&LENGTH       SETA K'&INDEX                  Set keyword length   @02a  22669900
.*                                                                      22671890
.*       *---------------------------------------------------*          22673880
.*       * TEST FOR LITERAL AND SET FLAG BIT IN KEYWORD ARRAY*          22675870
.*       *---------------------------------------------------*          22677860
&INDEXF(&LITIX) SETB ('&INDEX'(1,1) EQ '''' AND                        C22679850
               '&INDEX'(&LENGTH,1) EQ '''') Quoted value           @02a 22681840
.*                                                                      22683830
.*       *---------------------------------------------------*          22685820
.*       *  Test for REG and set flag bit in keyword array   *          22687810
.*       *                                                   *          22689800
.*       *  In the test below '&INDEX(1)' is equal to the    *          22691790
.*       *  entire string following the equal sign specified *          22693780
.*       *  in the MSGDISP invocation. '&INDEX' is the       *          22695770
.*       *  string inside of any parentheses that may have   *          22697760
.*       *  been specified or the entire string if there are *          22699750
.*       *  no parentheses.                                  *          22701740
.*       *---------------------------------------------------*          22703730
&INDEXF(&REGIX) SETB ('&INDEX(1)' NE '&INDEX')                     @02a 22705720
.*                                                                      22707710
.*       *---------------------------------------------------*          22709700
.*       * TEST FOR REG01 AND SET FLAG BIT IN KEYWORD ARRAY  *          22711690
.*       *---------------------------------------------------*          22713680
&INDEXF(&REG01IX) SETB (&INDEXF(&REGIX) EQ 1 AND                       C22715670
               ('&INDEX(1)' EQ '0' OR '&INDEX(1)' EQ '1'))         @02a 22717660
.*                                                                      22719650
.*       *---------------------------------------------------*          22721640
.*       * TEST FOR ADCON AND SET FLAG BIT IN KEYWORD ARRAY  *          22723630
.*       *---------------------------------------------------*          22725620
&INDEXF(&ADCONIX) SETB ('&INDEX'(1,2) EQ 'A(' AND                      C22727610
               '&INDEX'(&LENGTH,1) EQ ')')                         @02a 22729600
.*                                                                      22731590
.*       *---------------------------------------------------*          22733580
.*       * If it's none of the above, it must be RX format   *          22735570
.*       *---------------------------------------------------*     @02a 22737560
         AIF  (&INDEXF(&LITIX) EQ 1 OR                                 C22739550
               &INDEXF(&REGIX) EQ 1 OR                                 C22741540
               &INDEXF(&ADCONIX) EQ 1).CKINDEX                          22743530
&INDEXF(&RXFMTIX) SETB 1                    Indicate RX format     @02a 22745520
.*                                                                      22747510
.*       *---------------------------------------------------*          22749500
.*       * If RXFMT is indicated determine if it's supported *          22751490
.*       * If it is supported, leave it on.  If it isn't     *          22753480
.*       * change it to unquoted literal.  A subsequent call *          22755470
.*       * to CHKFMT will determine if the this or any other *          22757460
.*       * format indicators are valid.                      *          22759450
.*       *---------------------------------------------------*     @02a 22761440
         AIF (&INDEXF(&RXFMTIX) NE 1).CKINDEX     Br if not RXFMT  @02a 22763430
.*                                                                      22765420
         AIF ('&FMT(&INDEXIX)'(&RXFMTIX,1) EQ '1').CKINDEX         @02a 22767410
&INDEXF(&RXFMTIX)  SETB 0                   Reset RX format ind.   @02a 22769400
&INDEXF(&UNQUOTEIX) SETB 1                  Indicate unquote fmt   @02a 22771390
.*                                                                      22773380
.CKINDEX ANOP                                                      @02a 22775370
.*       *---------------------------------------------------*          22777360
.*       * Get ready to call CHKFMT inner macro to validate  *          22779350
.*       * that the specified format of the keyword operand  *          22781340
.*       * is supported.  But first issue debug messages if  *          22783330
.*       * requested by DEBUG.                               *          22785320
.*       *---------------------------------------------------*          22787310
         AIF (&DEBUGON EQ 0).NODEBUGINDEX1                         @02a 22789300
         MNOTE *,' '                                                    22791290
         MNOTE *,'Calling CHKFMT for INDEX keyword. INDEXF flags are:'  22793280
         MNOTE *,'        NULL             = &INDEXF(&NULLIX)'          22795270
         MNOTE *,'        QUOTED LITERAL   = &INDEXF(&LITIX)'           22797260
         MNOTE *,'        REG (2-12)       = &INDEXF(&REGIX)'           22799250
         MNOTE *,'        REG (0|1)        = &INDEXF(&REG01IX)'         22801240
         MNOTE *,'        ADCON            = &INDEXF(&ADCONIX)'         22803230
         MNOTE *,'        RX FORMAT        = &INDEXF(&RXFMTIX)'         22805220
         MNOTE *,'        UNQUOTED LITERAL = &INDEXF(&UNQUOTEIX)'       22807210
.*                                                                      22809200
.NODEBUGINDEX1 ANOP                                                @02a 22811190
         MSGDISP ,(CHKFMT,INDEX,&DEBUGON)                          @02a 22813180
.*                                                                      22815170
.EINDEX       ANOP                                                      22817160
.*                                                                      22819150
.*       *---------------------------------------------------*          22821140
.*       *---------------------------------------------------*          22823130
.*       *                 LABEL KEYWORD                     *          22825120
.*       *---------------------------------------------------*          22827110
.*       *---------------------------------------------------*          22829100
&LABELF(&NULLIX) SETB 1                                                 22831090
              AIF     (T'&LABEL  EQ 'O').ELABEL .*IF NULL SKIP          22833080
&LABELF(&NULLIX) SETB 0                   .*RESET NULL IF NOT           22835070
&LENGTH       SETA    K'&LABEL          .*SET LENGTH OF KEYWORD         22837060
.*                                                                      22839050
.*       *---------------------------------------------------*          22841040
.*       * TEST FOR LITERAL AND SET FLAG BIT IN KEYWORD ARRAY*          22843030
.*       *---------------------------------------------------*          22845020
&LABELF(&LITIX) SETB ('&LABEL'(1,1) EQ '''' AND                        C22847010
               '&LABEL'(&LENGTH,1) EQ '''')     IN QUOTES SET FLAG      22849000
.*                                                                      22850990
.*       *---------------------------------------------------*          22852980
.*       * TEST FOR REG AND SET FLAG BIT IN KEYWORD ARRAY    *          22854970
.*       *---------------------------------------------------*          22856960
&LABELF(&REGIX) SETB ('&LABEL(1)' NE '&LABEL')                          22858950
.*                                                                      22860940
.*       *---------------------------------------------------*          22862930
.*       * TEST FOR REG01 AND SET FLAG BIT IN KEYWORD ARRAY  *          22864920
.*       *---------------------------------------------------*          22866910
&LABELF(&REG01IX) SETB (&LABELF(&REGIX) EQ 1 AND                       C22868900
               ('&LABEL(1)' EQ '0' OR '&LABEL(1)' EQ '1'))              22870890
.*                                                                      22872880
.*       *---------------------------------------------------*          22874870
.*       * TEST FOR ADCON AND SET FLAG BIT IN KEYWORD ARRAY  *          22876860
.*       *---------------------------------------------------*          22878850
&LABELF(&ADCONIX) SETB ('&LABEL'(1,2) EQ 'A(' AND                      C22880840
               '&LABEL'(&LENGTH,1) EQ ')')                              22882830
.*                                                                      22884820
.*       *---------------------------------------------------*          22886810
.*       * If it's none of the above, it must be RX format   *          22888800
.*       *---------------------------------------------------*     @02a 22890790
         AIF  (&LABELF(&LITIX) EQ 1 OR                                 C22892780
               &LABELF(&REGIX) EQ 1 OR                                 C22894770
               &LABELF(&ADCONIX) EQ 1).CKLABEL                          22896760
&LABELF(&RXFMTIX) SETB 1                    Indicate RX format     @02a 22898750
.*                                                                      22900740
.*       *---------------------------------------------------*          22902730
.*       * If RXFMT is indicated determine if it's supported *          22904720
.*       * If it is supported, leave it on.  If it isn't     *          22906710
.*       * change it to unquoted literal.  A subsequent call *          22908700
.*       * to CHKFMT will determine if the this or any other *          22910690
.*       * format indicators are valid.                      *          22912680
.*       *---------------------------------------------------*     @02a 22914670
         AIF (&LABELF(&RXFMTIX) NE 1).CKLABEL Br if not RXFMT      @02a 22916660
.*                                                                      22918650
         AIF ('&FMT(&LABELIX)'(&RXFMTIX,1) EQ '1').CKLABEL         @02a 22920640
&LABELF(&RXFMTIX) SETB 0                    Reset RX format ind.   @02a 22922630
&LABELF(&UNQUOTEIX) SETB 1                  Indicate unquote fmt   @02a 22924620
.*                                                                      22926610
.CKLABEL ANOP                                                      @02a 22928600
.*       *---------------------------------------------------*          22930590
.*       * Get ready to call CHKFMT inner macro to validate  *          22932580
.*       * that the specified format of the keyword operand  *          22934570
.*       * is supported.  But first issue debug messages if  *          22936560
.*       * requested by DEBUG.                               *          22938550
.*       *---------------------------------------------------*          22940540
         AIF (&DEBUGON EQ 0).NODEBUGLABEL1                         @02a 22942530
         MNOTE *,' '                                                    22944520
         MNOTE *,'Calling CHKFMT for LABEL keyword. LABELF flags are:'  22946510
         MNOTE *,'        NULL             = &LABELF(&NULLIX)'          22948500
         MNOTE *,'        QUOTED LITERAL   = &LABELF(&LITIX)'           22950490
         MNOTE *,'        REG (2-12)       = &LABELF(&REGIX)'           22952480
         MNOTE *,'        REG (0|1)        = &LABELF(&REG01IX)'         22954470
         MNOTE *,'        ADCON            = &LABELF(&ADCONIX)'         22956460
         MNOTE *,'        RX FORMAT        = &LABELF(&RXFMTIX)'         22958450
         MNOTE *,'        UNQUOTED LITERAL = &LABELF(&UNQUOTEIX)'       22960440
.*                                                                      22962430
.NODEBUGLABEL1 ANOP                                                @02a 22964420
         MSGDISP ,(CHKFMT,LABEL,&DEBUGON)                          @02a 22966410
.*                                                                      22968400
.*       *---------------------------------------------------*          22970390
.*       * There is an exception to the support of the ADCON *          22972380
.*       * form for the LABEL keyword when used with the     *          22974370
.*       * LIST form of the macro.  This is because the      *          22976360
.*       * field into which the value is put is one byte     *          22978350
.*       * long.  Rather than get some sort of execution     *          22980340
.*       * time error, catch it here.  Same goes for MLABEL. *          22982330
.*       *---------------------------------------------------*          22984320
.*                                                                      22986310
         AIF (&LABELF(&ADCONIX) EQ 1 AND '&MF(1)' EQ 'L').LBLADERR @02a 22988300
         AGO .ELABEL                                               @02a 22990290
.*                                                                      22992280
.LBLADERR ANOP                                                     @02a 22994270
         MNOTE 12,'ADCON WITH LABEL NOT VALID WITH LIST FORM OF MACRO'  22996260
.*                                                                      22998250
.ELABEL       ANOP                                                      23000240
.*                                                                      23002230
.*       *---------------------------------------------------*          23004220
.*       *---------------------------------------------------*          23006210
.*       *               MEDIATYPE KEYWORD                   *          23008200
.*       *---------------------------------------------------*          23010190
.*       *---------------------------------------------------*          23012180
&MEDTF(&NULLIX) SETB 1                      Assume null            @02a 23014170
              AIF  (T'&MEDIATYPE  EQ 'O').EMEDT If NULL (omitted)  @02a 23016160
&MEDTF(&NULLIX) SETB 0                      Reset NULL, since not  @02a 23018150
&LENGTH       SETA K'&MEDIATYPE             Set keyword length     @02a 23020140
.*                                                                      23022130
.*       *---------------------------------------------------*          23024120
.*       * TEST FOR LITERAL AND SET FLAG BIT IN KEYWORD ARRAY*          23026110
.*       *---------------------------------------------------*          23028100
&MEDTF(&LITIX) SETB ('&MEDIATYPE'(1,1) EQ '''' AND                     C23030090
               '&MEDIATYPE'(&LENGTH,1) EQ '''') Quoted value       @02a 23032080
.*                                                                      23034070
.*       *---------------------------------------------------*          23036060
.*       *  Test for REG and set flag bit in keyword array   *          23038050
.*       *                                                   *          23040040
.*       *  In the test below '&INDEX(1)' is equal to the    *          23042030
.*       *  entire string following the equal sign specified *          23044020
.*       *  in the MSGDISP invocation. '&INDEX' is the       *          23046010
.*       *  string inside of any parentheses that may have   *          23048000
.*       *  been specified or the entire string if there are *          23049990
.*       *  no parentheses.                                  *          23051980
.*       *---------------------------------------------------*          23053970
&MEDTF(&REGIX) SETB ('&MEDIATYPE(1)' NE '&MEDIATYPE')              @02a 23055960
.*                                                                      23057950
.*       *---------------------------------------------------*          23059940
.*       * TEST FOR REG01 AND SET FLAG BIT IN KEYWORD ARRAY  *          23061930
.*       *---------------------------------------------------*          23063920
&MEDTF(&REG01IX) SETB (&MEDTF(&REGIX) EQ 1 AND                         C23065910
               ('&MEDIATYPE(1)' EQ '0' OR '&MEDIATYPE(1)' EQ '1')) @02a 23067900
.*                                                                      23069890
.*       *---------------------------------------------------*          23071880
.*       * TEST FOR ADCON AND SET FLAG BIT IN KEYWORD ARRAY  *          23073870
.*       *---------------------------------------------------*          23075860
&MEDTF(&ADCONIX) SETB ('&MEDIATYPE'(1,2) EQ 'A(' AND                   C23077850
               '&MEDIATYPE'(&LENGTH,1) EQ ')')                     @02a 23079840
.*                                                                      23081830
.*       *---------------------------------------------------*          23083820
.*       * If it's none of the above, it must be RX format   *          23085810
.*       *---------------------------------------------------*     @02a 23087800
         AIF  (&MEDTF(&LITIX) EQ 1 OR                                  C23089790
               &MEDTF(&REGIX) EQ 1 OR                                  C23091780
               &MEDTF(&ADCONIX) EQ 1).CKMEDT                            23093770
&MEDTF(&RXFMTIX) SETB 1                     Indicate RX format     @02a 23095760
.*                                                                      23097750
.*       *---------------------------------------------------*          23099740
.*       * If RXFMT is indicated determine if it's supported *          23101730
.*       * If it is supported, leave it on.  If it isn't     *          23103720
.*       * change it to unquoted literal.  A subsequent call *          23105710
.*       * to CHKFMT will determine if the this or any other *          23107700
.*       * format indicators are valid.                      *          23109690
.*       *---------------------------------------------------*     @02a 23111680
         AIF (&MEDTF(&RXFMTIX) NE 1).CKMEDT Br if not RXFMT        @02a 23113670
.*                                                                      23115660
         AIF ('&FMT(&MEDTIX)'(&RXFMTIX,1) EQ '1').CKMEDT           @02a 23117650
&MEDTF(&RXFMTIX)   SETB 0                   Reset RX format ind.   @02a 23119640
&MEDTF(&UNQUOTEIX) SETB 1                   Indicate unquote fmt   @02a 23121630
.*                                                                      23123620
.CKMEDT ANOP                                                       @02a 23125610
.*       *---------------------------------------------------*          23127600
.*       * Get ready to call CHKFMT inner macro to validate  *          23129590
.*       * that the specified format of the keyword operand  *          23131580
.*       * is supported.  But first issue debug messages if  *          23133570
.*       * requested by DEBUG.                               *          23135560
.*       *---------------------------------------------------*          23137550
         AIF (&DEBUGON EQ 0).NODEBUGMEDT1                          @02a 23139540
         MNOTE *,' '                                                    23141530
         MNOTE *,'Calling CHKFMT for MEDT keyword. MEDTF flags are:'    23143520
         MNOTE *,'        NULL             = &MEDTF(&NULLIX)'           23145510
         MNOTE *,'        QUOTED LITERAL   = &MEDTF(&LITIX)'            23147500
         MNOTE *,'        REG (2-12)       = &MEDTF(&REGIX)'            23149490
         MNOTE *,'        REG (0|1)        = &MEDTF(&REG01IX)'          23151480
         MNOTE *,'        ADCON            = &MEDTF(&ADCONIX)'          23153470
         MNOTE *,'        RX FORMAT        = &MEDTF(&RXFMTIX)'          23155460
         MNOTE *,'        UNQUOTED LITERAL = &MEDTF(&UNQUOTEIX)'        23157450
.*                                                                      23159440
.NODEBUGMEDT1 ANOP                                                 @02a 23161430
         MSGDISP ,(CHKFMT,MEDT,&DEBUGON)                           @02a 23163420
.*                                                                      23165410
.EMEDT        ANOP                                                      23167400
.*                                                                      23169390
.*       *---------------------------------------------------*          23171380
.*       *---------------------------------------------------*          23173370
.*       *                    MF KEYWORD                     *          23175360
.*       *---------------------------------------------------*          23177350
.*       *---------------------------------------------------*          23179340
&MFE(&NULLIX) SETB 1                                                    23181330
              AIF     (T'&MF(2)  EQ 'O').MFEND   .*IF NULL SKIP         23183320
&MFE(&NULLIX) SETB 0                      .*RESET NULL IF NOT           23185310
&LENGTH       SETA    K'&MF(2)          .*SET LENGTH OF KEYWORD         23187300
.*                                                                      23189290
.*       *---------------------------------------------------*          23191280
.*       * TEST FOR LITERAL AND SET FLAG BIT IN KEYWORD ARRAY*          23193270
.*       *---------------------------------------------------*          23195260
&MFE(&LITIX) SETB ('&MF(2)'(1,1) EQ '''' AND                           C23197250
               '&MF(2)'(&LENGTH,1) EQ '''')     IN QUOTES SET FLAG      23199240
.*                                                                      23201230
.*       *---------------------------------------------------*          23203220
.*       * TEST FOR REG AND SET FLAG BIT IN KEYWORD ARRAY    *          23205210
.*       *---------------------------------------------------*          23207200
&MFE(&REGIX) SETB ('&MF(2)'(1,1) EQ '(' AND                            C23209190
               '&MF(2)'(K'&MF(2),1) EQ  ')')                            23211180
.*                                                                      23213170
.*       *---------------------------------------------------*          23215160
.*       * TEST FOR REG01 AND SET FLAG BIT IN KEYWORD ARRAY  *          23217150
.*       *---------------------------------------------------*          23219140
&MFE(&REG01IX) SETB (&MFE(&REGIX) EQ 1 AND                             C23221130
               ('&MF(2)' EQ '(0)' OR '&MF(2)' EQ '(1)'))                23223120
.*                                                                      23225110
.*       *---------------------------------------------------*          23227100
.*       * TEST FOR ADCON AND SET FLAG BIT IN KEYWORD ARRAY  *          23229090
.*       *---------------------------------------------------*          23231080
&MFE(&ADCONIX) SETB ('&MF(2)'(1,2) EQ 'A(' AND                         C23233070
               '&MF(2)'(&LENGTH,1) EQ ')')                              23235060
.*                                                                      23237050
.*       *---------------------------------------------------*          23239040
.*       * If it's none of the above, it must be RX format   *          23241030
.*       *---------------------------------------------------*     @02a 23243020
         AIF  (&MFE(&LITIX) EQ 1 OR                                    C23245010
               &MFE(&REGIX) EQ 1 OR                                    C23247000
               &MFE(&ADCONIX) EQ 1).CKMFE                               23248990
&MFE(&RXFMTIX) SETB 1                       Indicate RX format     @02a 23250980
.*                                                                      23252970
.*       *---------------------------------------------------*          23254960
.*       * If RXFMT is indicated determine if it's supported *          23256950
.*       * If it is supported, leave it on.  If it isn't     *          23258940
.*       * change it to unquoted literal.  A subsequent call *          23260930
.*       * to CHKFMT will determine if the this or any other *          23262920
.*       * format indicators are valid.                      *          23264910
.*       *---------------------------------------------------*     @02a 23266900
         AIF (&MFE(&RXFMTIX) NE 1).CKMFE Br if not RXFMT           @02a 23268890
.*                                                                      23270880
         AIF ('&FMT(&MFIX)'(&RXFMTIX,1) EQ '1').CKMFE              @02a 23272870
&MFE(&RXFMTIX)     SETB 0                   Reset RX format ind.   @02a 23274860
&MFE(&UNQUOTEIX) SETB 1                     Indicate unquote fmt   @02a 23276850
.*                                                                      23278840
.CKMFE ANOP                                                        @02a 23280830
.*       *---------------------------------------------------*          23282820
.*       * Get ready to call CHKFMT inner macro to validate  *          23284810
.*       * that the specified format of the keyword operand  *          23286800
.*       * is supported.  But first issue debug messages if  *          23288790
.*       * requested by DEBUG.                               *          23290780
.*       *---------------------------------------------------*          23292770
         AIF (&DEBUGON EQ 0).NODEBUGMF1                            @02a 23294760
         MNOTE *,' '                                                    23296750
         MNOTE *,'Calling CHKFMT for MF keyword. MFE flags are:'        23298740
         MNOTE *,'        NULL             = &MFE(&NULLIX)'             23300730
         MNOTE *,'        QUOTED LITERAL   = &MFE(&LITIX)'              23302720
         MNOTE *,'        REG (2-12)       = &MFE(&REGIX)'              23304710
         MNOTE *,'        REG (0|1)        = &MFE(&REG01IX)'            23306700
         MNOTE *,'        ADCON            = &MFE(&ADCONIX)'            23308690
         MNOTE *,'        RX FORMAT        = &MFE(&RXFMTIX)'            23310680
         MNOTE *,'        UNQUOTED LITERAL = &MFE(&UNQUOTEIX)'          23312670
.*                                                                      23314660
.NODEBUGMF1 ANOP                                                   @02a 23316650
         MSGDISP ,(CHKFMT,MF,&DEBUGON)                             @02a 23318640
.*                                                                      23320630
.MFEND     ANOP                                                         23322620
        AIF (&MFE(&REGIX) EQ 0).NCHKMF                                  23324610
        MSGDISP  ,(CHKREG,MF,&MFE(&REG01IX),&MF(2),0,1,1),&MF           23326600
.NCHKMF ANOP                                                            23328590
.*                                                                      23330580
.*       *---------------------------------------------------*          23332570
.*       *---------------------------------------------------*          23334560
.*       *                MLABEL KEYWORD                     *          23336550
.*       *---------------------------------------------------*          23338540
.*       *---------------------------------------------------*          23340530
&MLABELF(&NULLIX) SETB 1                                                23342520
              AIF     (T'&MLABEL  EQ 'O').EMLABEL .*IF NULL SKIP        23344510
&MLABELF(&NULLIX) SETB 0                  .*RESET NULL IF NOT           23346500
&LENGTH       SETA    K'&MLABEL         .*SET LENGTH OF KEYWORD         23348490
.*                                                                      23350480
.*       *---------------------------------------------------*          23352470
.*       * TEST FOR LITERAL AND SET FLAG BIT IN KEYWORD ARRAY*          23354460
.*       *---------------------------------------------------*          23356450
&MLABELF(&LITIX) SETB ('&MLABEL'(1,1) EQ '''' AND                      C23358440
               '&MLABEL'(&LENGTH,1) EQ '''')    IN QUOTES SET FLAG      23360430
.*                                                                      23362420
.*       *---------------------------------------------------*          23364410
.*       * TEST FOR REG AND SET FLAG BIT IN KEYWORD ARRAY    *          23366400
.*       *---------------------------------------------------*          23368390
&MLABELF(&REGIX) SETB ('&MLABEL(1)' NE '&MLABEL')                       23370380
.*                                                                      23372370
.*       *---------------------------------------------------*          23374360
.*       * TEST FOR REG01 AND SET FLAG BIT IN KEYWORD ARRAY  *          23376350
.*       *---------------------------------------------------*          23378340
&MLABELF(&REG01IX) SETB (&MLABELF(&REGIX) EQ 1 AND                     C23380330
               ('&MLABEL(1)' EQ '0' OR '&MLABEL(1)' EQ '1'))            23382320
.*                                                                      23384310
.*       *---------------------------------------------------*          23386300
.*       * TEST FOR ADCON AND SET FLAG BIT IN KEYWORD ARRAY  *          23388290
.*       *---------------------------------------------------*          23390280
&MLABELF(&ADCONIX) SETB ('&MLABEL'(1,2) EQ 'A(' AND                    C23392270
               '&MLABEL'(&LENGTH,1) EQ ')')                             23394260
.*                                                                      23396250
.*       *---------------------------------------------------*          23398240
.*       * If it's none of the above, it must be RX format   *          23400230
.*       *---------------------------------------------------*     @02a 23402220
         AIF  (&MLABELF(&LITIX) EQ 1 OR                                C23404210
               &MLABELF(&REGIX) EQ 1 OR                                C23406200
               &MLABELF(&ADCONIX) EQ 1).CKMLABEL                   @02a 23408190
&MLABELF(&RXFMTIX) SETB 1                   Indicate RX format     @02a 23410180
.*                                                                      23412170
.*       *---------------------------------------------------*          23414160
.*       * If RXFMT is indicated determine if it's supported *          23416150
.*       * If it is supported, leave it on.  If it isn't     *          23418140
.*       * change it to unquoted literal.  A subsequent call *          23420130
.*       * to CHKFMT will determine if the this or any other *          23422120
.*       * format indicators are valid.                      *          23424110
.*       *---------------------------------------------------*     @02a 23426100
         AIF (&MLABELF(&RXFMTIX) NE 1).CKMLABEL Br if not RXFMT    @02a 23428090
.*                                                                      23430080
         AIF ('&FMT(&MLABELIX)'(&RXFMTIX,1) EQ '1').CKMLABEL       @02a 23432070
&MLABELF(&RXFMTIX) SETB 0                   Reset RX format ind.   @02a 23434060
&MLABELF(&UNQUOTEIX) SETB 1                 Indicate unquote fmt   @02a 23436050
.*                                                                      23438040
.CKMLABEL ANOP                                                     @02a 23440030
.*       *---------------------------------------------------*          23442020
.*       * Get ready to call CHKFMT inner macro to validate  *          23444010
.*       * that the specified format of the keyword operand  *          23446000
.*       * is supported.  But first issue debug messages if  *          23447990
.*       * requested by DEBUG.                               *          23449980
.*       *---------------------------------------------------*          23451970
         AIF (&DEBUGON EQ 0).NODEBUGMLABEL1                        @02a 23453960
         MNOTE *,' '                                                    23455950
         MNOTE *,'Calling CHKFMT for MLABEL keyword. MLABELF flags are' 23457940
         MNOTE *,'        NULL             = &MLABELF(&NULLIX)'         23459930
         MNOTE *,'        QUOTED LITERAL   = &MLABELF(&LITIX)'          23461920
         MNOTE *,'        REG (2-12)       = &MLABELF(&REGIX)'          23463910
         MNOTE *,'        REG (0|1)        = &MLABELF(&REG01IX)'        23465900
         MNOTE *,'        ADCON            = &MLABELF(&ADCONIX)'        23467890
         MNOTE *,'        RX FORMAT        = &MLABELF(&RXFMTIX)'        23469880
         MNOTE *,'        UNQUOTED LITERAL = &MLABELF(&UNQUOTEIX)'      23471870
.*                                                                      23473860
.NODEBUGMLABEL1 ANOP                                               @02a 23475850
         MSGDISP ,(CHKFMT,MLABEL,&DEBUGON)                         @02a 23477840
.*                                                                      23479830
.*       *---------------------------------------------------*          23481820
.*       * There is an exception to the support of the ADCON *          23483810
.*       * form for the MLABEL keyword when used with the    *          23485800
.*       * LIST form of the macro.  This is because the      *          23487790
.*       * field into which the value is put is one byte     *          23489780
.*       * long.  Rather than get some sort of execution     *          23491770
.*       * time error, catch it here.  Same goes for LABEL.  *          23493760
.*       *---------------------------------------------------*          23495750
.*                                                                      23497740
         AIF (&MLABELF(&ADCONIX) EQ 1 AND '&MF(1)' EQ 'L').MLBLADERR    23499730
         AGO .EMLABEL                                              @02a 23501720
.*                                                                      23503710
.MLBLADERR ANOP                                                    @02a 23505700
         MNOTE 12,'ADCON WITH MLABEL NOT VALID WITH LIST FORM OF MACRO' 23507690
.*                                                                      23509680
.EMLABEL      ANOP                                                      23511670
.*                                                                      23513660
.*       *---------------------------------------------------*          23515650
.*       *---------------------------------------------------*          23517640
.*       *                  MSER KEYWORD                     *          23519630
.*       *---------------------------------------------------*          23521620
.*       *---------------------------------------------------*          23523610
&MSERF(&NULLIX) SETB  1                                                 23525600
              AIF     (T'&MSER  EQ 'O').EMSER .*IF NULL SKIP            23527590
&MSERF(&NULLIX) SETB  0                   .*RESET NULL IF NOT           23529580
&LENGTH       SETA    K'&MSER           .*SET LENGTH OF KEYWORD         23531570
.*                                                                      23533560
.*       *---------------------------------------------------*          23535550
.*       * TEST FOR LITERAL AND SET FLAG BIT IN KEYWORD ARRAY*          23537540
.*       *---------------------------------------------------*          23539530
&MSERF(&LITIX) SETB ('&MSER'(1,1) EQ '''' AND                          C23541520
               '&MSER'(&LENGTH,1) EQ '''')      IN QUOTES SET FLAG      23543510
.*                                                                      23545500
.*       *---------------------------------------------------*          23547490
.*       * TEST FOR REG AND SET FLAG BIT IN KEYWORD ARRAY    *          23549480
.*       *---------------------------------------------------*          23551470
&MSERF(&REGIX) SETB ('&MSER(1)' NE '&MSER')                             23553460
.*                                                                      23555450
.*       *---------------------------------------------------*          23557440
.*       * TEST FOR REG01 AND SET FLAG BIT IN KEYWORD ARRAY  *          23559430
.*       *---------------------------------------------------*          23561420
&MSERF(&REG01IX) SETB (&MSERF(&REGIX) EQ 1 AND                         C23563410
               ('&MSER(1)' EQ '0' OR '&MSER(1)' EQ '1'))                23565400
.*                                                                      23567390
.*       *---------------------------------------------------*          23569380
.*       * TEST FOR ADCON AND SET FLAG BIT IN KEYWORD ARRAY  *          23571370
.*       *---------------------------------------------------*          23573360
&MSERF(&ADCONIX) SETB ('&MSER'(1,2) EQ 'A(' AND                        C23575350
               '&MSER'(&LENGTH,1) EQ ')')                               23577340
.*                                                                      23579330
.*       *---------------------------------------------------*          23581320
.*       * If it's none of the above, it must be RX format   *          23583310
.*       *---------------------------------------------------*     @02a 23585300
         AIF  (&MSERF(&LITIX) EQ 1 OR                                  C23587290
               &MSERF(&REGIX) EQ 1 OR                                  C23589280
               &MSERF(&ADCONIX) EQ 1).CKMSER                            23591270
&MSERF(&RXFMTIX) SETB 1                     Indicate RX format     @02a 23593260
.*                                                                      23595250
.*       *---------------------------------------------------*          23597240
.*       * If RXFMT is indicated determine if it's supported *          23599230
.*       * If it is supported, leave it on.  If it isn't     *          23601220
.*       * change it to unquoted literal.  A subsequent call *          23603210
.*       * to CHKFMT will determine if the this or any other *          23605200
.*       * format indicators are valid.                      *          23607190
.*       *---------------------------------------------------*     @02a 23609180
         AIF (&MSERF(&RXFMTIX) NE 1).CKMSER Br if not RXFMT        @02a 23611170
.*                                                                      23613160
         AIF ('&FMT(&MSERIX)'(&RXFMTIX,1) EQ '1').CKMSER           @02a 23615150
&MSERF(&RXFMTIX) SETB 0                     Reset RX format ind.   @02a 23617140
&MSERF(&UNQUOTEIX) SETB 1                   Indicate unquote fmt   @02a 23619130
.*                                                                      23621120
.CKMSER ANOP                                                       @02a 23623110
.*       *---------------------------------------------------*          23625100
.*       * Get ready to call CHKFMT inner macro to validate  *          23627090
.*       * that the specified format of the keyword operand  *          23629080
.*       * is supported.  But first issue debug messages if  *          23631070
.*       * requested by DEBUG.                               *          23633060
.*       *---------------------------------------------------*          23635050
         AIF (&DEBUGON EQ 0).NODEBUGMSER1                          @02a 23637040
         MNOTE *,' '                                                    23639030
         MNOTE *,'Calling CHKFMT for MSER keyword. MSERF flags are:'    23641020
         MNOTE *,'        NULL             = &MSERF(&NULLIX)'           23643010
         MNOTE *,'        QUOTED LITERAL   = &MSERF(&LITIX)'            23645000
         MNOTE *,'        REG (2-12)       = &MSERF(&REGIX)'            23646990
         MNOTE *,'        REG (0|1)        = &MSERF(&REG01IX)'          23648980
         MNOTE *,'        ADCON            = &MSERF(&ADCONIX)'          23650970
         MNOTE *,'        RX FORMAT        = &MSERF(&RXFMTIX)'          23652960
         MNOTE *,'        UNQUOTED LITERAL = &MSERF(&UNQUOTEIX)'        23654950
.*                                                                      23656940
.NODEBUGMSER1 ANOP                                                 @02a 23658930
         MSGDISP ,(CHKFMT,MSER,&DEBUGON)                           @02a 23660920
.*                                                                      23662910
.EMSER        ANOP                                                      23664900
.*                                                                      23666890
.*       *---------------------------------------------------*          23668880
.*       *---------------------------------------------------*          23670870
.*       *                   SER KEYWORD                     *          23672860
.*       *---------------------------------------------------*          23674850
.*       *---------------------------------------------------*          23676840
&SERF(&NULLIX) SETB   1                                                 23678830
               AIF     (T'&SER  EQ 'O').ESER    .*IF NULL SKIP          23680820
&SERF(&NULLIX) SETB   0                   .*RESET NULL IF NOT           23682810
&LENGTH        SETA    K'&SER            .*SET LENGTH OF KEYWORD        23684800
.*                                                                      23686790
.*       *---------------------------------------------------*          23688780
.*       * TEST FOR LITERAL AND SET FLAG BIT IN KEYWORD ARRAY*          23690770
.*       *---------------------------------------------------*          23692760
&SERF(&LITIX) SETB ('&SER'(1,1) EQ '''' AND                            C23694750
               '&SER'(&LENGTH,1) EQ '''')       IN QUOTES SET FLAG      23696740
.*                                                                      23698730
.*       *---------------------------------------------------*          23700720
.*       * TEST FOR REG AND SET FLAG BIT IN KEYWORD ARRAY    *          23702710
.*       *---------------------------------------------------*          23704700
&SERF(&REGIX) SETB  ('&SER(1)' NE '&SER')                               23706690
.*                                                                      23708680
.*       *---------------------------------------------------*          23710670
.*       * TEST FOR REG01 AND SET FLAG BIT IN KEYWORD ARRAY  *          23712660
.*       *---------------------------------------------------*          23714650
&SERF(&REG01IX) SETB (&SERF(&REGIX) EQ 1 AND                           C23716640
               ('&SER(1)' EQ '0' OR '&SER(1)' EQ '1'))                  23718630
.*                                                                      23720620
.*       *---------------------------------------------------*          23722610
.*       * TEST FOR ADCON AND SET FLAG BIT IN KEYWORD ARRAY  *          23724600
.*       *---------------------------------------------------*          23726590
&SERF(&ADCONIX) SETB ('&SER'(1,2) EQ 'A(' AND                          C23728580
               '&SER'(&LENGTH,1) EQ ')')                                23730570
.*                                                                      23732560
.*       *---------------------------------------------------*          23734550
.*       * If it's none of the above, it must be RX format   *          23736540
.*       *---------------------------------------------------*     @02a 23738530
         AIF  (&SERF(&LITIX) EQ 1 OR                                   C23740520
               &SERF(&REGIX) EQ 1 OR                                   C23742510
               &SERF(&ADCONIX) EQ 1).CKSER                              23744500
&SERF(&RXFMTIX) SETB 1                      Indicate RX format     @02a 23746490
.*                                                                      23748480
.*       *---------------------------------------------------*          23750470
.*       * If RXFMT is indicated determine if it's supported *          23752460
.*       * If it is supported, leave it on.  If it isn't     *          23754450
.*       * change it to unquoted literal.  A subsequent call *          23756440
.*       * to CHKFMT will determine if the this or any other *          23758430
.*       * format indicators are valid.                      *          23760420
.*       *---------------------------------------------------*     @02a 23762410
         AIF (&SERF(&RXFMTIX) NE 1).CKSER  Br if not RXFMT         @02a 23764400
.*                                                                      23766390
         AIF ('&FMT(&SERIX)'(&RXFMTIX,1) EQ '1').CKSER             @02a 23768380
&SERF(&RXFMTIX)   SETB 0                    Reset RX format ind.   @02a 23770370
&SERF(&UNQUOTEIX) SETB 1                    Indicate unquote fmt   @02a 23772360
.*                                                                      23774350
.CKSER   ANOP                                                      @02a 23776340
.*       *---------------------------------------------------*          23778330
.*       * Get ready to call CHKFMT inner macro to validate  *          23780320
.*       * that the specified format of the keyword operand  *          23782310
.*       * is supported.  But first issue debug messages if  *          23784300
.*       * requested by DEBUG.                               *          23786290
.*       *---------------------------------------------------*          23788280
         AIF (&DEBUGON EQ 0).NODEBUGSER1                           @02a 23790270
         MNOTE *,' '                                                    23792260
         MNOTE *,'Calling CHKFMT for SER keyword. SERF flags are:'      23794250
         MNOTE *,'        NULL             = &SERF(&NULLIX)'            23796240
         MNOTE *,'        QUOTED LITERAL   = &SERF(&LITIX)'             23798230
         MNOTE *,'        REG (2-12)       = &SERF(&REGIX)'             23800220
         MNOTE *,'        REG (0|1)        = &SERF(&REG01IX)'           23802210
         MNOTE *,'        ADCON            = &SERF(&ADCONIX)'           23804200
         MNOTE *,'        RX FORMAT        = &SERF(&RXFMTIX)'           23806190
         MNOTE *,'        UNQUOTED LITERAL = &SERF(&UNQUOTEIX)'         23808180
.*                                                                      23810170
.NODEBUGSER1 ANOP                                                  @02a 23812160
         MSGDISP ,(CHKFMT,SER,&DEBUGON)                            @02a 23814150
.*                                                                      23816140
.ESER         ANOP                                                      23818130
.*                                                                      23820120
.*       *---------------------------------------------------*          23822110
.*       *---------------------------------------------------*          23824100
.*       *                  TEST KEYWORD                     *          23826090
.*       *---------------------------------------------------*          23828080
.*       *---------------------------------------------------*          23830070
&TESTF(&NULLIX) SETB  1                                                 23832060
              AIF     (T'&TEST  EQ 'O').ETEST .*IF NULL SKIP            24250000
&TESTF(&NULLIX) SETB  0                   .*RESET NULL IF NOT           24300000
&LENGTH       SETA    K'&TEST           .*SET LENGTH OF KEYWORD         24350000
.*                                                                      24429990
.*       *---------------------------------------------------*          24459980
.*       * TEST FOR LITERAL AND SET FLAG BIT IN KEYWORD ARRAY*          24489970
.*       *---------------------------------------------------*          24519960
&TESTF(&LITIX) SETB ('&TEST'(1,1) EQ '''' AND                          C24549950
               '&TEST'(&LENGTH,1) EQ '''')      IN QUOTES SET FLAG      24600000
.*                                                                      24679990
.*       *---------------------------------------------------*          24709980
.*       * TEST FOR REG AND SET FLAG BIT IN KEYWORD ARRAY    *          24739970
.*       *---------------------------------------------------*          24769960
&TESTF(&REGIX) SETB ('&TEST(1)' NE '&TEST')                             24799950
.*                                                                      24829940
.*       *---------------------------------------------------*          24859930
.*       * TEST FOR REG01 AND SET FLAG BIT IN KEYWORD ARRAY  *          24889920
.*       *---------------------------------------------------*          24919910
&TESTF(&REG01IX) SETB (&TESTF(&REGIX) EQ 1 AND                         C24949900
               ('&TEST(1)' EQ '0' OR '&TEST(1)' EQ '1'))                25050000
.*                                                                      25129990
.*       *---------------------------------------------------*          25159980
.*       * TEST FOR ADCON AND SET FLAG BIT IN KEYWORD ARRAY  *          25189970
.*       *---------------------------------------------------*          25219960
&TESTF(&ADCONIX) SETB ('&TEST'(1,2) EQ 'A(' AND                        C25249950
               '&TEST'(&LENGTH,1) EQ ')')                               25300000
.*                                                                      25300990
.*       *---------------------------------------------------*          25301980
.*       * If it's none of the above, it must be RX format   *          25302970
.*       *---------------------------------------------------*     @02a 25303960
         AIF  (&TESTF(&LITIX) EQ 1 OR                                  C25304950
               &TESTF(&REGIX) EQ 1 OR                                  C25305940
               &TESTF(&ADCONIX) EQ 1).CKTEST                            25306930
&TESTF(&RXFMTIX) SETB 1                     Indicate RX format     @02a 25307920
.*                                                                      25308910
.*       *---------------------------------------------------*          25309900
.*       * If RXFMT is indicated determine if it's supported *          25310890
.*       * If it is supported, leave it on.  If it isn't     *          25311880
.*       * change it to unquoted literal.  A subsequent call *          25312870
.*       * to CHKFMT will determine if the this or any other *          25313860
.*       * format indicators are valid.                      *          25314850
.*       *---------------------------------------------------*     @02a 25315840
         AIF (&TESTF(&RXFMTIX) NE 1).CKTEST Br if not RXFMT        @02a 25316830
.*                                                                      25317820
         AIF ('&FMT(&TESTIX)'(&RXFMTIX,1) EQ '1').CKTEST           @02a 25318810
&TESTF(&RXFMTIX)   SETB 0                   Reset RX format ind.   @02a 25319800
&TESTF(&UNQUOTEIX) SETB 1                   Indicate unquote fmt   @02a 25320790
.*                                                                      25321780
.CKTEST  ANOP                                                      @02a 25322770
.*       *---------------------------------------------------*          25323760
.*       * Get ready to call CHKFMT inner macro to validate  *          25324750
.*       * that the specified format of the keyword operand  *          25325740
.*       * is supported.  But first issue debug messages if  *          25326730
.*       * requested by DEBUG.                               *          25327720
.*       *---------------------------------------------------*          25328710
         AIF (&DEBUGON EQ 0).NODEBUGTEST1                          @02a 25329700
         MNOTE *,' '                                                    25330690
         MNOTE *,'Calling CHKFMT for TEST keyword. TESTF flags are:'    25331680
         MNOTE *,'        NULL             = &TESTF(&NULLIX)'           25332670
         MNOTE *,'        QUOTED LITERAL   = &TESTF(&LITIX)'            25333660
         MNOTE *,'        REG (2-12)       = &TESTF(&REGIX)'            25334650
         MNOTE *,'        REG (0|1)        = &TESTF(&REG01IX)'          25335640
         MNOTE *,'        ADCON            = &TESTF(&ADCONIX)'          25336630
         MNOTE *,'        RX FORMAT        = &TESTF(&RXFMTIX)'          25337620
         MNOTE *,'        UNQUOTED LITERAL = &TESTF(&UNQUOTEIX)'        25338610
.*                                                                      25339600
.NODEBUGTEST1 ANOP                                                 @02a 25340590
         MSGDISP ,(CHKFMT,TEST,&DEBUGON)                           @02a 25341580
.*                                                                      25342570
.ETEST        ANOP                                                      25350000
.*                                                                      25366600
.*       *---------------------------------------------------*          25367590
.*       *---------------------------------------------------*          25368580
.*       *                   TXT KEYWORD                     *          25369570
.*       *---------------------------------------------------*          25370560
.*       *---------------------------------------------------*          25371550
&TXTF(&NULLIX) SETB   1                                                 25372540
               AIF     (T'&TXT  EQ 'O').ETXT    .*IF NULL SKIP          25373530
&TXTF(&NULLIX) SETB   0                   .*RESET NULL IF NOT           25374520
&LENGTH        SETA    K'&TXT            .*SET LENGTH OF KEYWORD        25375510
.*                                                                      25383200
.*       *---------------------------------------------------*          25402990
.*       * TEST FOR LITERAL AND SET FLAG BIT IN KEYWORD ARRAY*          25405980
.*       *---------------------------------------------------*          25408970
&TXTF(&LITIX) SETB ('&TXT'(1,1) EQ '''' AND                            C25411960
               '&TXT'(&LENGTH,1) EQ '''')       IN QUOTES SET FLAG      25414950
.*                                                                      25420800
.*       *---------------------------------------------------*          25426390
.*       * TEST FOR REG AND SET FLAG BIT IN KEYWORD ARRAY    *          25429380
.*       *---------------------------------------------------*          25432370
&TXTF(&REGIX) SETB  ('&TXT(1)' NE '&TXT')                               25435360
.*                                                                      25439000
.*       *---------------------------------------------------*          25441990
.*       * TEST FOR REG01 AND SET FLAG BIT IN KEYWORD ARRAY  *          25442380
.*       *---------------------------------------------------*          25442770
&TXTF(&REG01IX) SETB (&TXTF(&REGIX) EQ 1 AND                           C25443160
               ('&TXT(1)' EQ '0' OR '&TXT(1)' EQ '1'))                  25443550
.*                                                                      25444200
.*       *---------------------------------------------------*          25444590
.*       * TEST FOR ADCON AND SET FLAG BIT IN KEYWORD ARRAY  *          25444980
.*       *---------------------------------------------------*          25445370
&TXTF(&ADCONIX) SETB ('&TXT'(1,2)  EQ 'A(' AND                         C25445760
               '&TXT'(&LENGTH,1) EQ ')')                                25446150
.*                                                                      25446800
.*       *---------------------------------------------------*          25454990
.*       * If it's none of the above, it must be RX format   *          25459980
.*       *---------------------------------------------------*     @02a 25464970
         AIF  (&TXTF(&LITIX) EQ 1 OR                                   C25469960
               &TXTF(&REGIX) EQ 1 OR                                   C25474950
               &TXTF(&ADCONIX) EQ 1).CKTXT                              25479940
&TXTF(&RXFMTIX) SETB 1                      Indicate RX format     @02a 25484930
.*                                                                      25489920
.*       *---------------------------------------------------*          25494910
.*       * If RXFMT is indicated determine if it's supported *          25499900
.*       * If it is supported, leave it on.  If it isn't     *          25504890
.*       * change it to unquoted literal.  A subsequent call *          25509880
.*       * to CHKFMT will determine if the this or any other *          25514870
.*       * format indicators are valid.                      *          25519860
.*       *---------------------------------------------------*     @02a 25524850
         AIF (&TXTF(&RXFMTIX) NE 1).CKTXT  Br if not RXFMT         @02a 25529840
.*                                                                      25534830
         AIF ('&FMT(&TXTIX)'(&RXFMTIX,1) EQ '1').CKTXT             @02a 25539820
&TXTF(&RXFMTIX)   SETB 0                    Reset RX format ind.   @02a 25544810
&TXTF(&UNQUOTEIX) SETB 1                    Indicate unquote fmt   @02a 25549800
.*                                                                      25554790
.CKTXT   ANOP                                                      @02a 25559780
.*       *---------------------------------------------------*          25564770
.*       * Get ready to call CHKFMT inner macro to validate  *          25569760
.*       * that the specified format of the keyword operand  *          25574750
.*       * is supported.  But first issue debug messages if  *          25579740
.*       * requested by DEBUG.                               *          25584730
.*       *---------------------------------------------------*          25589720
         AIF (&DEBUGON EQ 0).NODEBUGTXT1                           @02a 25594710
         MNOTE *,' '                                                    25599700
         MNOTE *,'Calling CHKFMT for TXT keyword. TXTF flags are:'      25604690
         MNOTE *,'        NULL             = &TXTF(&NULLIX)'            25609680
         MNOTE *,'        QUOTED LITERAL   = &TXTF(&LITIX)'             25614670
         MNOTE *,'        REG (2-12)       = &TXTF(&REGIX)'             25619660
         MNOTE *,'        REG (0|1)        = &TXTF(&REG01IX)'           25624650
         MNOTE *,'        ADCON            = &TXTF(&ADCONIX)'           25629640
         MNOTE *,'        RX FORMAT        = &TXTF(&RXFMTIX)'           25634630
         MNOTE *,'        UNQUOTED LITERAL = &TXTF(&UNQUOTEIX)'         25639620
.*                                                                      25644610
.NODEBUGTXT1 ANOP                                                  @02a 25649600
         MSGDISP ,(CHKFMT,TXT,&DEBUGON)                            @02a 25654590
.*                                                                      25659580
.ETXT         ANOP                                                      25664570
.*                                                                      25669560
.*       *---------------------------------------------------*          25674550
.*       *---------------------------------------------------*          25679540
.*       *                  TXT2 KEYWORD                     *          25684530
.*       *---------------------------------------------------*          25689520
.*       *---------------------------------------------------*          25694510
&TXT2F(&NULLIX) SETB  1                                                 25699500
              AIF     (T'&TXT2  EQ 'O').ETXT2 .*IF NULL SKIP            25704490
&TXT2F(&NULLIX) SETB  0                   .*RESET NULL IF NOT           25709480
&LENGTH       SETA    K'&TXT2           .*SET LENGTH OF KEYWORD         25714470
.*                                                                      25719460
.*       *---------------------------------------------------*          25724450
.*       * TEST FOR LITERAL AND SET FLAG BIT IN KEYWORD ARRAY*          25729440
.*       *---------------------------------------------------*          25734430
&TXT2F(&LITIX) SETB ('&TXT2'(1,1) EQ '''' AND                          C25739420
               '&TXT2'(&LENGTH,1) EQ '''')      IN QUOTES SET FLAG      25744410
.*                                                                      25749400
.*       *---------------------------------------------------*          25754390
.*       * TEST FOR REG AND SET FLAG BIT IN KEYWORD ARRAY    *          25759380
.*       *---------------------------------------------------*          25764370
&TXT2F(&REGIX) SETB ('&TXT2(1)' NE '&TXT2')                             25769360
.*                                                                      25774350
.*       *---------------------------------------------------*          25779340
.*       * TEST FOR REG01 AND SET FLAG BIT IN KEYWORD ARRAY  *          25784330
.*       *---------------------------------------------------*          25789320
&TXT2F(&REG01IX) SETB (&TXT2F(&REGIX) EQ 1 AND                         C25794310
               ('&TXT2(1)' EQ '0' OR '&TXT2(1)' EQ '1'))                25799300
.*                                                                      25804290
.*       *---------------------------------------------------*          25809280
.*       * TEST FOR ADCON AND SET FLAG BIT IN KEYWORD ARRAY  *          25814270
.*       *---------------------------------------------------*          25819260
&TXT2F(&ADCONIX) SETB ('&TXT2'(1,2) EQ 'A(' AND                        C25824250
               '&TXT2'(&LENGTH,1) EQ ')')                               25829240
.*                                                                      25834230
.*       *---------------------------------------------------*          25839220
.*       * If it's none of the above, it must be RX format   *          25844210
.*       *---------------------------------------------------*     @02a 25849200
         AIF  (&TXT2F(&LITIX) EQ 1 OR                                  C25854190
               &TXT2F(&REGIX) EQ 1 OR                                  C25859180
               &TXT2F(&ADCONIX) EQ 1).CKTXT2                            25864170
&TXT2F(&RXFMTIX) SETB 1                     Indicate RX format     @02a 25869160
.*                                                                      25874150
.*       *---------------------------------------------------*          25879140
.*       * If RXFMT is indicated determine if it's supported *          25884130
.*       * If it is supported, leave it on.  If it isn't     *          25889120
.*       * change it to unquoted literal.  A subsequent call *          25894110
.*       * to CHKFMT will determine if the this or any other *          25899100
.*       * format indicators are valid.                      *          25904090
.*       *---------------------------------------------------*     @02a 25909080
         AIF (&TXT2F(&RXFMTIX) NE 1).CKTXT2 Br if not RXFMT        @02a 25914070
.*                                                                      25919060
         AIF ('&FMT(&TXT2IX)'(&RXFMTIX,1) EQ '1').CKTXT2           @02a 25924050
&TXT2F(&RXFMTIX) SETB 0                     Reset RX format ind.   @02a 25929040
&TXT2F(&UNQUOTEIX) SETB 1                   Indicate unquote fmt   @02a 25934030
.*                                                                      25939020
.CKTXT2 ANOP                                                       @02a 25944010
.*       *---------------------------------------------------*          25949000
.*       * Get ready to call CHKFMT inner macro to validate  *          25953990
.*       * that the specified format of the keyword operand  *          25958980
.*       * is supported.  But first issue debug messages if  *          25963970
.*       * requested by DEBUG.                               *          25968960
.*       *---------------------------------------------------*          25973950
         AIF (&DEBUGON EQ 0).NODEBUGTXT21                          @02a 25978940
         MNOTE *,' '                                                    25983930
         MNOTE *,'Calling CHKFMT for TXT2 keyword. TXT2F flags are:'    25988920
         MNOTE *,'        NULL             = &TXT2F(&NULLIX)'           25993910
         MNOTE *,'        QUOTED LITERAL   = &TXT2F(&LITIX)'            25998900
         MNOTE *,'        REG (2-12)       = &TXT2F(&REGIX)'            26003890
         MNOTE *,'        REG (0|1)        = &TXT2F(&REG01IX)'          26008880
         MNOTE *,'        ADCON            = &TXT2F(&ADCONIX)'          26013870
         MNOTE *,'        RX FORMAT        = &TXT2F(&RXFMTIX)'          26018860
         MNOTE *,'        UNQUOTED LITERAL = &TXT2F(&UNQUOTEIX)'        26023850
.*                                                                      26028840
.NODEBUGTXT21 ANOP                                                 @02a 26033830
         MSGDISP ,(CHKFMT,TXT2,&DEBUGON)                           @02a 26038820
.*                                                                      26043810
.ETXT2        ANOP                                                      26048800
.*                                                                      26053790
.*       *---------------------------------------------------*          26058780
.*       *---------------------------------------------------*          26063770
.*       *                   UCB KEYWORD                     *          26068760
.*       *---------------------------------------------------*          26073750
.*       *---------------------------------------------------*          26078740
&UCBF(&NULLIX) SETB   1                                                 26083730
              AIF     (T'&UCB  EQ 'O').EUCB    .*IF NULL SKIP           26088720
&UCBF(&NULLIX) SETB   0                   .*RESET NULL IF NOT           26093710
&LENGTH       SETA    K'&UCB            .*SET LENGTH OF KEYWORD         26098700
.*                                                                      26103690
.*       *---------------------------------------------------*          26108680
.*       * TEST FOR LITERAL AND SET FLAG BIT IN KEYWORD ARRAY*          26113670
.*       *---------------------------------------------------*          26118660
&UCBF(&LITIX) SETB ('&UCB'(1,1) EQ '''' AND                            C26123650
               '&UCB'(&LENGTH,1) EQ '''')       IN QUOTES SET FLAG      26128640
.*                                                                      26133630
.*       *---------------------------------------------------*          26138620
.*       * TEST FOR REG AND SET FLAG BIT IN KEYWORD ARRAY    *          26143610
.*       *---------------------------------------------------*          26148600
&UCBF(&REGIX) SETB  ('&UCB(1)' NE '&UCB')                               26153590
.*                                                                      26158580
.*       *---------------------------------------------------*          26163570
.*       * TEST FOR REG01 AND SET FLAG BIT IN KEYWORD ARRAY  *          26168560
.*       *---------------------------------------------------*          26173550
&UCBF(&REG01IX) SETB (&UCBF(&REGIX) EQ 1 AND                           C26178540
               ('&UCB(1)' EQ '0' OR '&UCB(1)' EQ '1'))                  26183530
.*                                                                      26188520
.*       *---------------------------------------------------*          26193510
.*       * TEST FOR ADCON AND SET FLAG BIT IN KEYWORD ARRAY  *          26198500
.*       *---------------------------------------------------*          26203490
&UCBF(&ADCONIX) SETB ('&UCB'(1,2) EQ 'A(' AND                          C26208480
               '&UCB'(&LENGTH,1) EQ ')')                                26213470
.*                                                                      26218460
.*       *---------------------------------------------------*          26223450
.*       * If it's none of the above, it must be RX format   *          26228440
.*       *---------------------------------------------------*     @02a 26233430
         AIF  (&UCBF(&LITIX) EQ 1 OR                                   C26238420
               &UCBF(&REGIX) EQ 1 OR                                   C26243410
               &UCBF(&ADCONIX) EQ 1).CKUCB                              26248400
&UCBF(&RXFMTIX) SETB 1                      Indicate RX format     @02a 26253390
.*                                                                      26258380
.*       *---------------------------------------------------*          26263370
.*       * If RXFMT is indicated determine if it's supported *          26268360
.*       * If it is supported, leave it on.  If it isn't     *          26273350
.*       * change it to unquoted literal.  A subsequent call *          26278340
.*       * to CHKFMT will determine if the this or any other *          26283330
.*       * format indicators are valid.                      *          26288320
.*       *---------------------------------------------------*     @02a 26293310
         AIF (&UCBF(&RXFMTIX) NE 1).CKUCB  Br if not RXFMT         @02a 26298300
.*                                                                      26303290
         AIF ('&FMT(&UCBIX)'(&RXFMTIX,1) EQ '1').CKUCB             @02a 26308280
&UCBF(&RXFMTIX)   SETB 0                    Reset RX format ind.   @02a 26313270
&UCBF(&UNQUOTEIX) SETB 1                    Indicate unquote fmt   @02a 26318260
.*                                                                      26323250
.CKUCB   ANOP                                                      @02a 26328240
.*       *---------------------------------------------------*          26333230
.*       * Get ready to call CHKFMT inner macro to validate  *          26338220
.*       * that the specified format of the keyword operand  *          26343210
.*       * is supported.  But first issue debug messages if  *          26348200
.*       * requested by DEBUG.                               *          26353190
.*       *---------------------------------------------------*          26358180
         AIF (&DEBUGON EQ 0).NODEBUGUCB1                           @02a 26363170
         MNOTE *,' '                                                    26368160
         MNOTE *,'Calling CHKFMT for UCB keyword. UCBF flags are:'      26373150
         MNOTE *,'        NULL             = &UCBF(&NULLIX)'            26378140
         MNOTE *,'        QUOTED LITERAL   = &UCBF(&LITIX)'             26383130
         MNOTE *,'        REG (2-12)       = &UCBF(&REGIX)'             26388120
         MNOTE *,'        REG (0|1)        = &UCBF(&REG01IX)'           26393110
         MNOTE *,'        ADCON            = &UCBF(&ADCONIX)'           26398100
         MNOTE *,'        RX FORMAT        = &UCBF(&RXFMTIX)'           26403090
         MNOTE *,'        UNQUOTED LITERAL = &UCBF(&UNQUOTEIX)'         26408080
.*                                                                      26413070
.NODEBUGUCB1 ANOP                                                  @02a 26418060
         MSGDISP ,(CHKFMT,UCB,&DEBUGON)                            @02a 26423050
.*                                                                      26428040
.EUCB         ANOP                                                      26433030
.*                                                                      26438020
.*       *---------------------------------------------------*          26443010
.*       *---------------------------------------------------*          26448000
.*       *                  UCBL KEYWORD                     *          26452990
.*       *---------------------------------------------------*          26457980
.*       *---------------------------------------------------*          26462970
&UCBLF(&NULLIX) SETB  1                                                 26467960
              AIF     (T'&UCBL  EQ 'O').EUCBL .*IF NULL SKIP            26472950
&UCBLF(&NULLIX) SETB  0                   .*RESET NULL IF NOT           26477940
&LENGTH       SETA    K'&UCBL           .*SET LENGTH OF KEYWORD         26482930
.*                                                                      26487920
.*       *---------------------------------------------------*          26492910
.*       * TEST FOR LITERAL AND SET FLAG BIT IN KEYWORD ARRAY*          26497900
.*       *---------------------------------------------------*          26502890
&UCBLF(&LITIX) SETB ('&UCBL'(1,1) EQ '''' AND                          C26507880
               '&UCBL'(&LENGTH,1) EQ '''')      IN QUOTES SET FLAG      26512870
.*                                                                      26517860
.*       *---------------------------------------------------*          26522850
.*       * TEST FOR REG AND SET FLAG BIT IN KEYWORD ARRAY    *          26527840
.*       *---------------------------------------------------*          26532830
&UCBLF(&REGIX) SETB ('&UCBL(1)' NE '&UCBL')                             26537820
.*                                                                      26542810
.*       *---------------------------------------------------*          26547800
.*       * TEST FOR REG01 AND SET FLAG BIT IN KEYWORD ARRAY  *          26552790
.*       *---------------------------------------------------*          26557780
&UCBLF(&REG01IX) SETB (&UCBLF(&REGIX) EQ 1 AND                         C26562770
               ('&UCBL(1)' EQ '0' OR '&UCBL(1)' EQ '1'))                26567760
.*                                                                      26572750
.*       *---------------------------------------------------*          26577740
.*       * TEST FOR ADCON AND SET FLAG BIT IN KEYWORD ARRAY  *          26582730
.*       *---------------------------------------------------*          26587720
&UCBLF(&ADCONIX) SETB ('&UCBL'(1,2) EQ 'A(' AND                        C26592710
               '&UCBL'(&LENGTH,1) EQ ')')                               26597700
.*                                                                      26602690
.*       *---------------------------------------------------*          26607680
.*       * If it's none of the above, it must be RX format   *          26612670
.*       *---------------------------------------------------*     @02a 26617660
         AIF  (&UCBLF(&LITIX) EQ 1 OR                                  C26622650
               &UCBLF(&REGIX) EQ 1 OR                                  C26627640
               &UCBLF(&ADCONIX) EQ 1).CKUCBL                            26632630
&UCBLF(&RXFMTIX) SETB 1                     Indicate RX format     @02a 26637620
.*                                                                      26642610
.*       *---------------------------------------------------*          26647600
.*       * If RXFMT is indicated determine if it's supported *          26652590
.*       * If it is supported, leave it on.  If it isn't     *          26657580
.*       * change it to unquoted literal.  A subsequent call *          26662570
.*       * to CHKFMT will determine if the this or any other *          26667560
.*       * format indicators are valid.                      *          26672550
.*       *---------------------------------------------------*     @02a 26677540
         AIF (&UCBLF(&RXFMTIX) NE 1).CKUCBL Br if not RXFMT        @02a 26682530
.*                                                                      26687520
         AIF ('&FMT(&UCBLIX)'(&RXFMTIX,1) EQ '1').CKUCBL           @02a 26692510
&UCBLF(&RXFMTIX) SETB 0                     Reset RX format ind.   @02a 26697500
&UCBLF(&UNQUOTEIX) SETB 1                   Indicate unquote fmt   @02a 26702490
.*                                                                      26707480
.CKUCBL ANOP                                                       @02a 26712470
.*       *---------------------------------------------------*          26717460
.*       * Get ready to call CHKFMT inner macro to validate  *          26722450
.*       * that the specified format of the keyword operand  *          26727440
.*       * is supported.  But first issue debug messages if  *          26732430
.*       * requested by DEBUG.                               *          26737420
.*       *---------------------------------------------------*          26742410
         AIF (&DEBUGON EQ 0).NODEBUGUCBL1                          @02a 26747400
         MNOTE *,' '                                                    26752390
         MNOTE *,'Calling CHKFMT for UCBL keyword. UCBLF flags are:'    26757380
         MNOTE *,'        NULL             = &UCBLF(&NULLIX)'           26762370
         MNOTE *,'        QUOTED LITERAL   = &UCBLF(&LITIX)'            26767360
         MNOTE *,'        REG (2-12)       = &UCBLF(&REGIX)'            26772350
         MNOTE *,'        REG (0|1)        = &UCBLF(&REG01IX)'          26777340
         MNOTE *,'        ADCON            = &UCBLF(&ADCONIX)'          26782330
         MNOTE *,'        RX FORMAT        = &UCBLF(&RXFMTIX)'          26787320
         MNOTE *,'        UNQUOTED LITERAL = &UCBLF(&UNQUOTEIX)'        26792310
.*                                                                      26797300
.NODEBUGUCBL1 ANOP                                                 @02a 26802290
         MSGDISP ,(CHKFMT,UCBL,&DEBUGON)                           @02a 26807280
.*                                                                      26812270
.EUCBL        ANOP                                                      26817260
.*                                                                      26822250
.*       *---------------------------------------------------*          26827240
.*       *---------------------------------------------------*          26832230
.*       *                   VOL KEYWORD                     *          26837220
.*       *---------------------------------------------------*          26842210
.*       *---------------------------------------------------*          26847200
&VOLF(&NULLIX) SETB 1                                                   26852190
              AIF     (T'&VOL  EQ 'O').EVOL .*IF NULL SKIP              26857180
&VOLF(&NULLIX) SETB 0                     .*RESET NULL IF NOT           26862170
&LENGTH       SETA    K'&VOL            .*SET LENGTH OF KEYWORD         26867160
.*                                                                      26872150
.*       *---------------------------------------------------*          26877140
.*       * TEST FOR LITERAL AND SET FLAG BIT IN KEYWORD ARRAY*          26882130
.*       *---------------------------------------------------*          26887120
&VOLF(&LITIX) SETB ('&VOL'(1,1) EQ '''' AND                            C26892110
               '&VOL'(&LENGTH,1) EQ '''')       IN QUOTES SET FLAG      26897100
.*                                                                      26902090
.*       *---------------------------------------------------*          26907080
.*       * TEST FOR REG AND SET FLAG BIT IN KEYWORD ARRAY    *          26912070
.*       *---------------------------------------------------*          26917060
&VOLF(&REGIX) SETB ('&VOL(1)' NE '&VOL')                                26922050
.*                                                                      26927040
.*       *---------------------------------------------------*          26932030
.*       * TEST FOR REG01 AND SET FLAG BIT IN KEYWORD ARRAY  *          26937020
.*       *---------------------------------------------------*          26942010
&VOLF(&REG01IX) SETB (&VOLF(&REGIX) EQ 1 AND                           C26947000
               ('&VOL(1)' EQ '0' OR '&VOL(1)' EQ '1'))                  26951990
.*                                                                      26956980
.*       *---------------------------------------------------*          26961970
.*       * TEST FOR ADCON AND SET FLAG BIT IN KEYWORD ARRAY  *          26966960
.*       *---------------------------------------------------*          26971950
&VOLF(&ADCONIX) SETB ('&VOL'(1,2) EQ 'A(' AND                          C26976940
               '&VOL'(&LENGTH,1) EQ ')')                                26981930
.*                                                                      26986920
.*       *---------------------------------------------------*          26991910
.*       * If it's none of the above, it must be RX format   *          26996900
.*       *---------------------------------------------------*     @02a 27001890
         AIF  (&VOLF(&LITIX) EQ 1 OR                                   C27006880
               &VOLF(&REGIX) EQ 1 OR                                   C27011870
               &VOLF(&ADCONIX) EQ 1).CKVOL                              27016860
&VOLF(&RXFMTIX) SETB 1                      Indicate RX format     @02a 27021850
.*                                                                      27026840
.*       *---------------------------------------------------*          27031830
.*       * If RXFMT is indicated determine if it's supported *          27036820
.*       * If it is supported, leave it on.  If it isn't     *          27041810
.*       * change it to unquoted literal.  A subsequent call *          27046800
.*       * to CHKFMT will determine if the this or any other *          27051790
.*       * format indicators are valid.                      *          27056780
.*       *---------------------------------------------------*     @02a 27061770
         AIF (&VOLF(&RXFMTIX) NE 1).CKVOL Br if not RXFMT          @02a 27066760
.*                                                                      27071750
         AIF ('&FMT(&VOLIX)'(&RXFMTIX,1) EQ '1').CKVOL             @02a 27076740
&VOLF(&RXFMTIX) SETB 0                      Reset RX format ind.   @02a 27081730
&VOLF(&UNQUOTEIX) SETB 1                    Indicate unquote fmt   @02a 27086720
.*                                                                      27091710
.CKVOL ANOP                                                        @02a 27096700
.*       *---------------------------------------------------*          27101690
.*       * Get ready to call CHKFMT inner macro to validate  *          27106680
.*       * that the specified format of the keyword operand  *          27111670
.*       * is supported.  But first issue debug messages if  *          27116660
.*       * requested by DEBUG.                               *          27121650
.*       *---------------------------------------------------*          27126640
         AIF (&DEBUGON EQ 0).NODEBUGVOL1                           @02a 27131630
         MNOTE *,' '                                                    27136620
         MNOTE *,'Calling CHKFMT for VOL keyword. VOLF flags are:'      27141610
         MNOTE *,'        NULL             = &VOLF(&NULLIX)'            27146600
         MNOTE *,'        QUOTED LITERAL   = &VOLF(&LITIX)'             27151590
         MNOTE *,'        REG (2-12)       = &VOLF(&REGIX)'             27156580
         MNOTE *,'        REG (0|1)        = &VOLF(&REG01IX)'           27161570
         MNOTE *,'        ADCON            = &VOLF(&ADCONIX)'           27166560
         MNOTE *,'        RX FORMAT        = &VOLF(&RXFMTIX)'           27171550
         MNOTE *,'        UNQUOTED LITERAL = &VOLF(&UNQUOTEIX)'         27176540
.*                                                                      27181530
.NODEBUGVOL1 ANOP                                                  @02a 27186520
         MSGDISP ,(CHKFMT,VOL,&DEBUGON)                            @02a 27191510
.*                                                                      27196500
.EVOL        ANOP                                                       27201490
.*                                                                      27206480
.*       *---------------------------------------------------*          27211470
.*       *---------------------------------------------------*          27216460
.*       *                  WAIT KEYWORD                     *          27221450
.*       *---------------------------------------------------*          27226440
.*       *---------------------------------------------------*          27231430
&WAITF(&NULLIX) SETB 1                                                  27236420
         AIF     (T'&WAIT  EQ 'O').EWAIT    .*IF NULL SKIP              27241410
&WAITF(&NULLIX) SETB 0                      .*RESET NULL IF NOT         27246400
&LENGTH         SETA    K'&WAIT             .*SET LENGTH OF KEYWORD     27251390
.*                                                                      27256380
.*       *---------------------------------------------------*          27261370
.*       * TEST FOR LITERAL AND SET FLAG BIT IN KEYWORD ARRAY*          27266360
.*       *---------------------------------------------------*          27271350
&WAITF(&LITIX) SETB ('&WAIT'(1,1) EQ '''' AND                          C27276340
               '&WAIT'(&LENGTH,1) EQ '''')  In quotes set flag          27281330
.*                                                                      27286320
.*       *---------------------------------------------------*          27291310
.*       * TEST FOR REG AND SET FLAG BIT IN KEYWORD ARRAY    *          27296300
.*       *---------------------------------------------------*          27301290
&WAITF(&REGIX) SETB ('&WAIT(1)' NE '&WAIT')                             27306280
.*                                                                      27311270
.*       *---------------------------------------------------*          27316260
.*       * TEST FOR REG01 AND SET FLAG BIT IN KEYWORD ARRAY  *          27321250
.*       *---------------------------------------------------*          27326240
&WAITF(&REG01IX) SETB (&WAITF(&REGIX) EQ 1 AND                         C27331230
               ('&WAIT(1)' EQ '0' OR '&WAIT(1)' EQ '1'))                27336220
.*                                                                      27341210
.*       *---------------------------------------------------*          27346200
.*       * TEST FOR ADCON AND SET FLAG BIT IN KEYWORD ARRAY  *          27351190
.*       *---------------------------------------------------*          27356180
&WAITF(&ADCONIX) SETB ('&WAIT'(1,2) EQ 'A(' AND                        C27361170
               '&WAIT'(&LENGTH,1) EQ ')')                               27366160
.*                                                                      27371150
.*       *---------------------------------------------------*          27376140
.*       * If it's none of the above, it must be RX format   *          27381130
.*       *---------------------------------------------------*     @02a 27386120
         AIF  (&WAITF(&LITIX) EQ 1 OR                                  C27391110
               &WAITF(&REGIX) EQ 1 OR                                  C27396100
               &WAITF(&ADCONIX) EQ 1).CKWAIT                       @02c 27401090
&WAITF(&RXFMTIX) SETB 1                     Indicate RX format     @02a 27406080
.*                                                                      27411070
.*       *---------------------------------------------------*          27416060
.*       * If RXFMT is indicated determine if it's supported *          27421050
.*       * If it is supported, leave it on.  If it isn't     *          27426040
.*       * change it to unquoted literal.  A subsequent call *          27431030
.*       * to CHKFMT will determine if the this or any other *          27436020
.*       * format indicators are valid.                      *          27441010
.*       *---------------------------------------------------*     @02a 27446000
         AIF (&WAITF(&RXFMTIX) NE 1).CKWAIT Br if not RXFMT        @02a 27450990
.*                                                                      27455980
         AIF ('&FMT(&WAITIX)'(&RXFMTIX,1) EQ '1').CKWAIT           @02a 27460970
&WAITF(&RXFMTIX)   SETB 0                   Reset RX format ind.   @02a 27465960
&WAITF(&UNQUOTEIX) SETB 1                   Indicate unquote fmt   @02a 27470950
.*                                                                      27475940
.CKWAIT  ANOP                                                      @02a 27480930
.*       *---------------------------------------------------*          27485920
.*       * Get ready to call CHKFMT inner macro to validate  *          27490910
.*       * that the specified format of the keyword operand  *          27495900
.*       * is supported.  But first issue debug messages if  *          27500890
.*       * requested by DEBUG.                               *          27505880
.*       *---------------------------------------------------*          27510870
         AIF (&DEBUGON EQ 0).NODEBUGWAIT1                          @02a 27515860
         MNOTE *,' '                                                    27520850
         MNOTE *,'Calling CHKFMT for WAIT keyword. WAITF flags are:'    27525840
         MNOTE *,'        NULL             = &WAITF(&NULLIX)'           27530830
         MNOTE *,'        QUOTED LITERAL   = &WAITF(&LITIX)'            27535820
         MNOTE *,'        REG (2-12)       = &WAITF(&REGIX)'            27540810
         MNOTE *,'        REG (0|1)        = &WAITF(&REG01IX)'          27545800
         MNOTE *,'        ADCON            = &WAITF(&ADCONIX)'          27550790
         MNOTE *,'        RX FORMAT        = &WAITF(&RXFMTIX)'          27555780
         MNOTE *,'        UNQUOTED LITERAL = &WAITF(&UNQUOTEIX)'        27560770
.*                                                                      27565760
.NODEBUGWAIT1 ANOP                                                 @02a 27570750
         MSGDISP ,(CHKFMT,WAIT,&DEBUGON)                           @02a 27575740
.*                                                                      27580730
.EWAIT        ANOP                                                      27585720
.*                                                                      27590710
.*###################################################################*  27595700
.*###################################################################*  27600690
.*#                                                                 #*  27605680
.*#            VERIFY FUNCTION REQUEST IS VALID                     #*  27610670
.*#                                                                 #*  27615660
.*###################################################################*  27620650
.*###################################################################*  27625640
        AIF (N'&SYSLIST EQ 1).KONTOK                                    27630630
.*                                                                      27635620
.*       *---------------------------------------------------*          27640610
.*       * Debug has been added as a positional parameter,   *          27645600
.*       * so 2 is now valid, but it has to be DEBUG.  If    *          27650590
.*       * DEBUG was specified, &DEBUGON will be on.         *          27655580
.*       *---------------------------------------------------*     @02a 27660570
        AIF (N'&SYSLIST EQ 2 AND &DEBUGON EQ 1).KONTOK             @02a 27665560
.*                                                                      27670550
        AIF (N'&SYSLIST EQ 0 AND '&MF(1)' EQ 'L').FUNOKW                27675540
        AIF (N'&SYSLIST EQ 0 AND '&MF(1)' EQ 'E').FUNOKW                27680530
        AGO     .BADFUN                                                 27685520
.KONTOK ANOP                                                            27850000
&FUNCTON  SETC  '&SERVICE(1)'                                      @H1A 27900000
       AIF ('&SERVICE(1)' NE 'DISMOUNT').KONTOK2                   @H1A 27950000
&FUNCTON  SETC   'DEMOUNT'                                         @H1A 28000000
.KONTOK2  ANOP                                                     @H1A 28050000
       AIF ('&FUNCTON' EQ 'RDY').FUNOK                             @H1C 28100000
       AIF ('&FUNCTON' EQ 'MOUNT').FUNOK                           @H1C 28150000
       AIF ('&FUNCTON' EQ 'VERIFY').FUNOK                          @H1C 28200000
       AIF ('&FUNCTON' EQ 'DEMOUNT').FUNOK                         @H1C 28250000
       AIF ('&FUNCTON' EQ 'RESET').FUNOK                           @H1C 28300000
       AIF ('&FUNCTON' EQ 'GEN').FUNOK                             @H1C 28350000
.BADFUN   ANOP                                                          28400000
       MNOTE   12,'MSGDISP SERVICE REQUESTED IS INVALID OR MISSING'     28450000
       AGO  .FUNOK                                                      28500000
.*                                                                      28569990
.*###################################################################*  28589980
.*###################################################################*  28609970
.*#                                                                 #*  28629960
.*#        BUILD  LABEL STATEMENT AND CHECK OUT ALL KEY WORD        #*  28649950
.*#                                                                 #*  28669940
.*###################################################################*  28689930
.*###################################################################*  28709920
.FUNOKW  ANOP                                                           28800000
       MNOTE    *,'       MSGDISP SERVICE REQUESTED IS NULL'            28850000
         AGO  .FUNOKX                                                   28900000
.FUNOK   ANOP                                                           28950000
       MNOTE    *,'       MSGDISP SERVICE REQUESTED IS &SYSLIST(1)'     29000000
.FUNOKX  ANOP                                                           29050000
        AGO  .KEYCHK                        GO CHECK OUT KEYWORDS       29129990
.KEYCMP  ANOP                               KEYWORD CHECK OUT COMPLETE  29159980
       AIF ('&MF' EQ 'L' OR '&MF(1)' EQ 'E' OR '&MF' EQ '').MFOK        29200000
       MNOTE  12,'MF=&MF INVALID, NORMAL FORM ASSUMED'                  29250000
.MFOK  ANOP                                                             29300000
         AIF ('&MF(1)' EQ 'L').BLDLST                           @H2C    29350000
         AIF ('&MF(1)' NE 'E').NORMF .* IF NOT EXEC ASSUME NORMAL       29600000
.*                                      FORM                            29650000
         AIF ('&NAME' EQ '').EFORM2                             @H2C    29670490
&NAME    DC    0H'0'                                               @H2C 29678480
.EFORM2  ANOP                                                   @H2C    29687500
.*                                                                      29719990
.*###################################################################*  29739980
.*###################################################################*  29759970
.*#                                                                 #*  29779960
.*#        BUILD  CHARACTER STRING FOR USE AS PLIST ADDRESS         #*  29799950
.*#        FOR EXEC FORM  CODE                                      #*  29819940
.*#                                                                 #*  29839930
.*###################################################################*  29859920
.*###################################################################*  29879910
          LCLC    &PLADD                                                29950000
      AIF  (&MFE(&REGIX) NE 1 AND &MFE(&REG01IX) NE 1).NOTREG    @H2C   30000000
&PLADD   SETC  '0'.'&MF(2)'                                             30100000
         AGO   .ENSETUP                                                 30150000
.NOTREG  ANOP                                                           30200000
      AIF  ('&MF(2)' NE '').MFRX                                 @H2A   30212500
         MNOTE   12,'PARAMETER LIST ADDRESS NOT GIVEN FOR MF=E'  @H2A   30225000
.MFRX    ANOP                                                    @H2A   30237500
&PLADD   SETC  '&MF(2)'     .* SET UP RX ADDR                           30250000
.ENSETUP ANOP                                                           30450000
.*                                                                      30519990
.*###################################################################*  30539980
.*###################################################################*  30559970
.*#                                                                 #*  30579960
.*#    EXAMINE EACH KEYWORD AND BUILD CODE TO MODIFY THE            #*  30599950
.*#    PARAMETER LIST SET SERVICE TYPE FIELD IF SPECIFIED           #*  30619940
.*#    SET SERVICE TYPE FIELD IF SPECIFIED                          #*  30639930
.*#                                                                 #*  30659920
.*###################################################################*  30679910
.*###################################################################*  30699900
.*                                                                      30719890
.*       *---------------------------------------------------*          30739880
.*       * The new form of the parameter list is indicated   *          30759870
.*       * by an x'FF' in the first byte of the plist, the   *          30779860
.*       * same place that used to be the service type code. *          30799850
.*       * The old type code has been moved to +x'10' into   *          30819840
.*       * the plist.                                        *          30839830
.*       *---------------------------------------------------*     @02a 30859820
         MVI   &PLADD,X'FF'           INDICATE NEW FORM OF PLIST   @02A 30879810
.*                                                                      30899800
.*       *---------------------------------------------------*          30919790
.*       *         NO SERVICE TYPE                           *          30939780
.*       *---------------------------------------------------*          30959770
         AIF  (T'&FUNCTON  EQ 'O').SK1                                  31100000
.*                                                                      31179990
.*       *---------------------------------------------------*          31209980
.*       *       SERVICE TYPE MOUNT                          *          31239970
.*       *---------------------------------------------------*          31269960
         AIF ('&FUNCTON' NE 'MOUNT').NOTMUNT                            31300000
         MVI   &NTPOFF+&PLADD,X'03'   MOUNT SERVICE                @H2C 31350000
         AGO   .SK1                                                     31400000
.NOTMUNT ANOP                                                           31450000
.*                                                                      31529990
.*       *---------------------------------------------------*          31559980
.*       *       SERVICE TYPE RDY                            *          31589970
.*       *---------------------------------------------------*          31619960
         AIF ('&FUNCTON' NE 'RDY').NOTRDY                               31650000
         MVI   &NTPOFF+&PLADD,X'01'   READY SERVICE                @H2C 31700000
         AGO   .SK1                                                     31750000
.NOTRDY  ANOP                                                           31800000
.*                                                                      31879990
.*       *---------------------------------------------------*          31909980
.*       *       SERVICE TYPE VERIFY                         *          31939970
.*       *---------------------------------------------------*          31969960
         AIF ('&FUNCTON' NE 'VERIFY').NOTVEFY                           32000000
         MVI   &NTPOFF+&PLADD,X'04'   VERIFY SERVICE               @H2C 32050000
         AGO   .SK1                                                     32100000
.NOTVEFY ANOP                                                           32150000
.*                                                                      32229990
.*       *---------------------------------------------------*          32259980
.*       *       SERVICE TYPE RESET                          *          32289970
.*       *---------------------------------------------------*          32319960
         AIF ('&FUNCTON' NE 'RESET').NOTREST                            32350000
         MVI   &NTPOFF+&PLADD,X'06'   RESET SERVICE                @H2C 32400000
         AGO   .SK1                                                     32450000
.NOTREST ANOP                                                           32500000
.*                                                                      32579990
.*       *---------------------------------------------------*          32609980
.*       *       SERVICE TYPE GEN                            *          32639970
.*       *---------------------------------------------------*          32669960
         AIF ('&FUNCTON' NE 'GEN').NOTGEN                               32700000
         MVI   &NTPOFF+&PLADD,X'07'   GEN SERVICE                  @H2C 32750000
         AGO   .SK1                                                     32800000
.NOTGEN  ANOP                                                           32850000
.*                                                                      32929990
.*       *---------------------------------------------------*          32959980
.*       *       SERVICE TYPE DEMOUNT                        *          32989970
.*       *---------------------------------------------------*          33019960
         AIF ('&FUNCTON' NE 'DEMOUNT').SK1                        @H2C  33050000
         AIF (&DISPF(&NULLIX) EQ 1 OR &DISPF(&LITIX) EQ 1).NLLST        33129990
         AIF (&DISPF(&REGIX) EQ 1).EDREG                                33159980
         AIF (&DISPF(&ADCONIX) EQ 1).EDADC                              33189970
         AGO  .EDRX                                                     33250000
.NLLST   ANOP                                                           33300000
&WORK1   SETC   'X''C4'''                                               33350000
         AIF ('&DISP' NE '''K''').NKEEP                                 33400000
&WORK1   SETC  'X''D2'''                                                33450000
         AGO  .STFUN                                                    33500000
.NKEEP   ANOP                                                           33550000
         AIF ('&DISP' NE '''R''').STFUN                                 33600000
&WORK1   SETC   'X''D9'''                                               33650000
.STFUN   ANOP                                                           33700000
         MVI   &NTPOFF+&PLADD,&WORK1  DEMOUNT SERVICE              @H2C 33750000
         AGO   .SK1                                                     33800000
.EDREG   ANOP                                                           33850000
         IC    15,0&DISP              GET DISPOSITION              @H2C 33900000
         STC   15,&NTPOFF+&PLADD      STORE INTO PARM LIST         @H2C 33950000
         AGO    .SK1                                                    34000000
.EDRX    ANOP                                                           34050000
         IC    15,&DISP               GET DISPOSITION              @H2C 34100000
         STC   15,&NTPOFF+&PLADD      STORE INTO PARM LIST         @H2C 34150000
         AGO    .SK1                                                    34200000
.EDADC   ANOP                                                           34250000
         L     15,=&DISP              GET DISPOSITION              @H2C 34300000
         IC    15,0(15)                                                 34350000
         STC   15,&NTPOFF+&PLADD      STORE INTO PARM LIST         @H2C 34400000
.SK1 ANOP                                                               34450000
.*                                                                      34509990
.*       *---------------------------------------------------*          34519980
.*       *---------------------------------------------------*          34529970
.*       *                   FORCE KEYWORD                   *          34539960
.*       *                                                   *          34549950
.*       * Make sure the IOSLVL/FLAGS byte is zeroes.        *          34559940
.*       *---------------------------------------------------*          34569930
.*       *---------------------------------------------------*          34579920
         MVI   &LVLOFF+&PLADD,X'00'   CLEAR IOSLVL/FLAGS BYTE      @02A 34589910
.*                                                                 @02a 34599900
&FS      SETC  'X''00'''                                           @H2A 34612400
         AIF ('&FORCE' EQ '').FEND                                 @H2A 34629580
         AIF (&FORCEF(&REGIX) NE 1).FNREG                          @H2A 34633570
.*                                                                      34639570
         LR    15,&FORCE(1)           GET FORCE VALUE              @H2A 34649600
         SLL   15,4                   SHIFT INPUT TO HIGH NIBBLE   @H2A 34662000
         IC    0,&LVLOFF+&PLADD       PICK UP FLAGS                @05a 34681180
         OR    15,0                   COMBINE THE TWO              @04A 34683170
         STC   15,&LVLOFF+&PLADD      PUT BACK TO PARM LIST        @04A 34685160
.*                                                                      34688180
         AGO  .FEND2                                               @02c 34697170
.FNREG   ANOP                                                      @H2A 34709500
          AIF ('&FORCE' NE 'FDEV' AND '&FORCE' NE '9').NL9         @H2A 34729300
&FS      SETC  'X''90'''              IOSLEVEL FDEV                @H2A 34739200
         AGO  .FEND                                                @H2A 34749400
.NL9      AIF ('&FORCE' NE 'SCHRCVY' AND '&FORCE' NE '8').NL8      @H2A 34766000
&FS      SETC  'X''80'''              IOSLEVEL SCHRCVY             @H2A 34782600
         AGO  .FEND                                                @H2A 34799200
.NL8      AIF ('&FORCE' NE 'CHPRCVY' AND '&FORCE' NE '7').NL7      @H2A 34815800
&FS      SETC  'X''70'''              IOSLEVEL CHPRCVY             @H2A 34832400
         AGO  .FEND                                                @H2A 34849000
.NL7      AIF ('&FORCE' NE 'UNCRSV' AND '&FORCE' NE '6').NL6       @H2A 34865600
&FS      SETC  'X''60'''              IOSLEVEL UNCRSV              @H2A 34882200
         AGO  .FEND                                                @H2A 34898800
.NL6      AIF ('&FORCE' NE 'DYNPATH' AND '&FORCE' NE '5').NL5      @H2A 34915400
&FS      SETC  'X''50'''              IOSLEVEL DYNPATH             @H2A 34932000
         AGO  .FEND                                                @H2A 34948600
.NL5      AIF ('&FORCE' NE 'DDR' AND '&FORCE' NE '4').NL4          @H2A 34965200
&FS      SETC  'X''40'''              IOSLEVEL DDR                 @H2A 34981800
         AGO  .FEND                                                @H2A 34998400
.NL4      AIF ('&FORCE' NE 'DAVV' AND '&FORCE' NE '3').NL3         @H2A 35015000
&FS      SETC  'X''30'''              IOSLEVEL DAVV                @H2A 35031600
         AGO  .FEND                                                @H2A 35048200
.NL3      AIF ('&FORCE' NE 'QUIESCE' AND '&FORCE' NE '2').NL2      @H2A 35050100
&FS      SETC  'X''20'''              IOSLEVEL QUIESCE             @H2A 35052000
         AGO  .FEND                                                @H2A 35053900
.NL2      AIF ('&FORCE' NE 'NORMAL' AND '&FORCE' NE '1'                C35055800
               AND '&FORCE' NE 'NO').NL1                           @H2A 35057700
&FS      SETC  'X''10'''              IOSLEVEL NORMAL              @H2A 35059600
         AGO  .FEND                                                @H2A 35061500
.NL1      AIF ('&FORCE' NE 'YES').FEND                             @H2A 35063400
&FS      SETC  'X''90'''              IOSLEVEL FORCE               @H2A 35065300
.FEND    ANOP                                                      @H2A 35081400
.*                                                                      35119990
         OI    &LVLOFF+&PLADD,&FS     SET IOSLVL                   @02A 35139980
.*                                                                      35159970
.FEND2   ANOP                                                      @02a 35179960
.*                                                                      35199950
.*       *---------------------------------------------------*          35219940
.*       *---------------------------------------------------*          35239930
.*       *                    WAIT KEYWORD                   *          35259920
.*       *                                                   *          35279910
.*       * The 'DONT WAIT' bit is reset right now as a       *          35299900
.*       * result of the OI just above for the FORCE keyword *          35319890
.*       * so we only need to do something for WAIT if       *          35339880
.*       * NO was specified for the WAIT keyword.            *          35359870
.*       *---------------------------------------------------*          35379860
.*       *---------------------------------------------------*          35399850
         AIF ('&WAIT' NE 'NO').WAIT9I                              @02C 35419840
         OI    &LVLOFF+&PLADD,X'04'   SET DON'T WAIT               @02A 35439830
.WAIT9I  ANOP                                                      @H2C 35500000
.*                                                                      35550000
.*       *---------------------------------------------------*          35551990
.*       *---------------------------------------------------*          35553980
.*       *                  INDEX KEYWORD                    *          35555970
.*       *                                                   *          35557960
.*       * The default for index is yes, because that's how  *          35559950
.*       * it has always been treated previously.            *          35561940
.*       *                                                   *          35563930
.*       * Unfortunately, this is reverse logic in that      *          35565920
.*       * INDEX=NO is indicated by setting the don't index  *          35567910
.*       * bit on.                                           *          35569900
.*       *                                                   *          35571890
.*       * The logic here will be to zero the index value    *          35573880
.*       * pointer field at +x'14' into the plist if there   *          35575870
.*       * is no pointer to be put into the plist.  This     *          35577860
.*       * pointer is used when the REG or ADCON form are    *          35579850
.*       * used.                                             *          35581840
.*       *                                                   *          35583830
.*       * If the REG or ADCON forms are used the don't      *          35585820
.*       * index bit will remain reset, the new pointer      *          35587810
.*       * will be updated with the address of the INDEX     *          35589800
.*       * value,and the new 'Keywords Used' bits will be    *          35591790
.*       * set in the plist at offset x'11'.                 *          35593780
.*       *---------------------------------------------------*     @02c 35595770
         AIF   (&INDEXF(&NULLIX) EQ 1).INDEXX   Index not spec'd   @02a 35597760
.*                                                                      35600000
.*       *---------------------------------------------------*          35753990
.*       * If quoted or unquoted literal used, we can set    *          35757980
.*       * the bit in the plist.                             *          35761970
.*       *---------------------------------------------------*     @02a 35765960
         AIF (&INDEXF(&LITIX) EQ 0 AND                                 C35769950
               &INDEXF(&UNQUOTEIX) EQ 0).INDEXA                    @02a 35773940
.*                                                                      35778600
         AIF   ('&LITVALINDEX' EQ 'NO').SETDONTINDEXFLAG           @02a 35781790
         AGO   .INDEXX                                             @02A 35782780
.*                                                                      35785200
.SETDONTINDEXFLAG  ANOP                                            @02a 35785260
         OI    &LVLOFF+&PLADD,X'01'   SET DON'T INDEX BIT ON       @02A 35785320
         AGO   .INDEXX                                             @02a 35785380
.*                                                                      35785440
.INDEXA ANOP                                                            35785500
.*       *---------------------------------------------------*          35785560
.*       * Check for ADCON form                              *          35785620
.*       *---------------------------------------------------*     @02a 35785680
         AIF (&INDEXF(&ADCONIX) NE 1).INDEXB    Br if not ADCON    @02a 35785740
&WORK1   SETC  '15,='.'&INDEX'                                     @02a 35785800
         L     &WORK1                 ADDR OF INDEX (ADCON) VALUE  @02A 35785860
         ST    15,&IXOFF+&PLADD       STORE INTO PLIST             @02A 35785920
         AGO   .INDEXC                                             @02a 35785980
.*                                                                      35786040
.INDEXB ANOP                                                            35786100
.*       *---------------------------------------------------*          35786160
.*       * Check for REG form                                *          35786220
.*       *---------------------------------------------------*     @02a 35786280
         AIF  (&INDEXF(&REGIX) NE 1).INDEXZ     Br if not REG form @02a 35786340
         ST    &INDEX(1),&IXOFF+&PLADD REGISTER INDEX PTR TO PLIST @02A 35786400
.*                                                                      35786460
.INDEXC ANOP                                                            35786520
         OI    &KWDOFF+&PLADD,&KWDINDEXBIT  IND INDEX PTR AVAILABLE     35786580
         AGO   .INDEXZ                                             @02a 35786640
.*                                                                      35786700
.INDEXX  ANOP                                                      @02a 35786760
         LA    15,0                   PREPARE TO 0 INDEX PTR       @02A 35786820
         ST    15,&IXOFF+&PLADD       ZERO INDEX PTR IN PLIST      @02A 35786880
.*                                                                      35787400
.INDEXZ  ANOP                                                      @H3A 35789600
.*                                                                      35791800
.*       *---------------------------------------------------*          35803990
.*       *---------------------------------------------------*          35813980
.*       *                 MEDIATYPE KEYWORD                 *          35823970
.*       *---------------------------------------------------*     @02c 35833960
.*       *---------------------------------------------------*     @02c 35843950
         AIF (&MEDTF(&NULLIX) EQ 1).MEDTX       MEDTP not spec'd   @02a 35853940
         AIF (&MEDTF(&LITIX) EQ 0).MEDTA                                35863930
.*                                                                      35876600
         LA    15,=C&MEDIATYPE        ADDR OF LITERAL MEDT VALUE   @02A 35892990
         ST    15,&MTPOFF+&PLADD      INTO MEDT PTR FIELD          @02A 35895980
         AGO   .MEDTD                                              @02A 35898970
.*                                                                      35903300
.MEDTA ANOP                                                             35921590
.*       *---------------------------------------------------*          35926580
.*       * Check for ADCON form                              *          35931570
.*       *---------------------------------------------------*     @02a 35936560
         AIF (&MEDTF(&ADCONIX) EQ 0).MEDTB      Br if not ADCON    @02a 35941550
&WORK1   SETC  '15,='.'&MEDIATYPE'                                 @02a 35946540
         L     &WORK1                 ADDR OF MEDT ADCON VALUE     @02A 35951530
         ST    15,&MTPOFF+&PLADD      STORE INTO PLIST             @02A 35956520
         AGO   .MEDTD                                              @02a 35961510
.*                                                                      35975000
.MEDTB ANOP                                                             35990990
.*       *---------------------------------------------------*          35991980
.*       * Check for RX form                                 *          35992970
.*       *---------------------------------------------------*     @02a 35993960
         AIF (&MEDTF(&RXFMTIX) EQ 0).MEDTC      Br if not ADCON    @02a 35994950
         LA    15,&MEDIATYPE          ADDR OF MEDT RX VARIABLE     @02A 35995940
         ST    15,&MTPOFF+&PLADD      STORE INTO PLIST             @02A 35996930
         AGO   .MEDTD                                              @02a 35997920
.*                                                                      36000000
.MEDTC ANOP                                                             36010990
.*       *---------------------------------------------------*          36011980
.*       * Check for REG form                                *          36012970
.*       *---------------------------------------------------*     @02a 36013960
         AIF  (&MEDTF(&REGIX) NE 1).MEDTZ       Br if not REG form @02a 36014950
         ST    &MEDIATYPE(1),&MTPOFF+&PLADD  ST REG VL INTO PLIST  @02A 36015940
.*                                                                      36020000
.MEDTD   ANOP                                                      @H3A 36033990
         OI    &KWDOFF+&PLADD,&KWDMEDTBIT  IND MEDTYP PTR AVAILABLE     36037980
         AGO  .MEDTZ                                               @02a 36041970
.*                                                                      36047500
.MEDTX   ANOP                                                      @H3A 36065890
         LA    15,0                   PREPARE TO 0 PLIST MEDT PTR  @02A 36066780
         ST    15,&MTPOFF+&PLADD      ZERO PLIST MEDT POINTER      @02A 36067670
.*                                                                      36068560
.MEDTZ   ANOP                                                      @H3A 36069450
.*                                                                      36070340
.*       *---------------------------------------------------*          36071230
.*       *---------------------------------------------------*          36072120
.*       *                     UCB KEYWORD                   *          36073010
.*       *---------------------------------------------------*          36073900
.*       *---------------------------------------------------*          36074790
         AIF   (&UCBF(&NULLIX) EQ 1).SKK1                          @02C 36075680
.*                                                                      36076570
         AIF   ('&FUNCTON' NE 'RESET').STOREUCBADDR                @02a 36077460
         OI    &LVLOFF+&PLADD,X'02'   IND RESET USING SINGLE UCB   @H2C 36078350
.*                                                                      36079240
.STOREUCBADDR  ANOP                                                @02a 36080130
&WORK1   SETC  '&UCB'(2,K'&UCB-2)',&UCBOFF+&PLADD'                      36081020
.*                                                                      36082500
         ST    &WORK1                 STORE UCB PTR INTO PARM LIST @H2C 36100000
.*                                                                      36150000
.SKK1    ANOP                                                           36250000
.*                                                                      36319990
.*       *---------------------------------------------------*          36339980
.*       *---------------------------------------------------*          36359970
.*       *                     SER KEYWORD                   *          36379960
.*       *---------------------------------------------------*          36399950
.*       *---------------------------------------------------*          36419940
         AIF (&SERF(&NULLIX) EQ 1).SK3                                  36439930
         AIF (&SERF(&ADCONIX) NE 1).SK4                                 36459920
&WORK1   SETC  '15,='.'&SER'                                            36550000
         L     &WORK1                 GET VOL-SER ADDRESS          @H2C 36600000
         ST    15,&TX1OFF+&PLADD      STORE INTO PARM LIST         @H2C 36650000
        AGO   .SK3                                                      36700000
.SK4    ANOP                                                            36750000
        AIF  (&SERF(&LITIX) NE 1).SK4A                                  36800000
&WORK1  SETC  '15,=C'.'&SER'                                            36850000
         LA    &WORK1                 GET VOL-SER ADDRESS          @H2C 36900000
         ST    15,&TX1OFF+&PLADD      STORE INTO PARM LIST         @H2C 36950000
         AGO  .SK3                                                      37000000
.SK4A    ANOP                                                           37050000
         AIF  (&SERF(&REGIX) NE 1).SK4B                                 37129990
         ST    &SER(1),&TX1OFF+&PLADD STORE VOL-SER ADDRESS        @H2C 37159980
        AGO    .SK3                                                     37200000
.SK4B   ANOP                                                            37250000
         LA    15,&SER                GET VOL-SER ADDRESS          @H2C 37300000
         ST    15,&TX1OFF+&PLADD      STORE INTO PARM LIST         @H2C 37350000
.SK3     ANOP                                                           37400000
.*                                                                      37469990
.*       *---------------------------------------------------*          37489980
.*       *---------------------------------------------------*          37509970
.*       *                     TXT KEYWORD                   *          37529960
.*       *---------------------------------------------------*          37549950
.*       *---------------------------------------------------*          37569940
         AIF (&TXTF(&NULLIX) EQ 1).TXT3                                 37589930
         AIF (&TXTF(&ADCONIX) NE 1).TXT4                                37609920
&WORK1   SETC  '15,='.'&TXT'                                            37700000
         L     &WORK1                 GET TEXT ADDRESS             @H2C 37750000
         ST    15,&TX1OFF+&PLADD      STORE INTO PARM LIST         @H2C 37800000
        AGO   .TXT3                                                     37850000
.TXT4   ANOP                                                            37900000
        AIF  (&TXTF(&LITIX) NE 1).TXT4A                                 37950000
&WORK1  SETC  '15,=C'.'&TXT'                                            38000000
         LA    &WORK1                 GET TEXT ADDRESS             @H2C 38050000
         ST    15,&TX1OFF+&PLADD      STORE INTO PARM LIST         @H2C 38100000
         AGO  .TXT3                                                     38150000
.TXT4A   ANOP                                                           38200000
        AIF   (&TXTF(&REGIX) NE 1).TXT4B                                38279990
         ST    &TXT(1),&TX1OFF+&PLADD STORE TEXT ADDRESS INTO PARM @H2C 38309980
        AGO    .TXT3                                                    38350000
.TXT4B  ANOP                                                            38400000
         LA    15,&TXT                GET TEXT ADDRESS             @H2C 38450000
         ST    15,&TX1OFF+&PLADD      STORE INTO PARM LIST         @H2C 38500000
.TXT3    ANOP                                                           38550000
.*                                                                      38639990
.*       *---------------------------------------------------*          38679980
.*       *---------------------------------------------------*          38719970
.*       *                    UCBL KEYWORD                   *          38759960
.*       *---------------------------------------------------*          38799950
.*       *---------------------------------------------------*          38839940
         AIF (&UCBLF(&NULLIX) EQ 1).CBL3                                38879930
         NI   &LVLOFF+&PLADD,X'FF'-X'02' UCB LIST PASSED           @H2C 38919920
         AIF (&UCBLF(&ADCONIX) NE 1).CBL4                               38959910
&WORK1   SETC  '15,='.'&UCBL'                                           39000000
         L     &WORK1                 GET UCB LIST ADDRESS         @H2C 39050000
         ST    15,&UCBOFF+&PLADD      STORE INTO PARM LIST         @H2C 39100000
        AGO   .CBL3                                                     39150000
.CBL4    ANOP                                                           39200000
        AIF   (&UCBLF(&REGIX) NE 1).CBL4B                               39279990
         ST    &UCBL(1),&UCBOFF+&PLADD STORE UCB LIST INTO PARM    @H2C 39309980
        AGO    .CBL3                                                    39350000
.CBL4B  ANOP                                                            39400000
         LA    15,&UCBL               GET UCB LIST ADDRESS         @H2C 39450000
         ST    15,&UCBOFF&PLADD       STORE INTO PARM LIST         @H2C 39500000
.CBL3    ANOP                                                           39550000
.*                                                                      39619990
.*       *---------------------------------------------------*          39639980
.*       *---------------------------------------------------*          39659970
.*       *                    MSER KEYWORD                   *          39679960
.*       *---------------------------------------------------*          39699950
.*       *---------------------------------------------------*          39719940
         AIF (&MSERF(&NULLIX) EQ 1).MSER3                               39739930
         AIF (&MSERF(&ADCONIX) NE 1).MSER4                              39759920
&WORK1   SETC  '15,='.'&MSER'                                           39850000
         L     &WORK1                 GET MOUNT VOL-SER ADDRESS    @H2C 39900000
         ST    15,&TX2OFF+&PLADD      STORE INTO PARM LIST         @H2C 39950000
        AGO   .MSER3                                                    40000000
.MSER4  ANOP                                                            40050000
        AIF  (&MSERF(&LITIX) NE 1).MSER4A                               40100000
&WORK1  SETC  '15,=C'.'&MSER'                                           40150000
         LA    &WORK1                 GET MOUNT VOL-SER ADDRESS    @H2C 40200000
         ST    15,&TX2OFF+&PLADD      STORE INTO PARM LIST         @H2C 40250000
         AGO  .MSER3                                                    40300000
.MSER4A  ANOP                                                           40350000
        AIF   (&MSERF(&REGIX) NE 1).MSER4B                              40429990
         ST    &MSER(1),&TX2OFF+&PLADD STORE MOUNT VOL-SER ADDRESS @H2C 40459980
        AGO    .MSER3                                                   40500000
.MSER4B ANOP                                                            40550000
         LA    15,&MSER               GET MOUNT VOL-SER ADDRESS    @H2C 40600000
         ST    15,&TX2OFF+&PLADD      STORE INTO PARM LIST         @H2C 40650000
.MSER3   ANOP                                                           40700000
.*                                                                      40779990
.*       *---------------------------------------------------*          40809980
.*       *---------------------------------------------------*          40839970
.*       *                   LABEL KEYWORD                   *          40869960
.*       *---------------------------------------------------*          40899950
.*       *---------------------------------------------------*          40929940
        AIF   (&LABELF(&NULLIX) EQ 1).SK5                               40959930
        AIF   (&LABELF(&LITIX) EQ 0).SK6                                40989920
         MVI   &LABOFF+&PLADD,C&LABEL STORE LABEL INTO PARM LIST   @H2C 41019910
        AGO  .SK5                                                       41050000
.SK6    ANOP                                                            41100000
        AIF   (&LABELF(&ADCONIX) NE 1).SK7                              41150000
         L     15,=&LABEL             GET LABEL                    @H2C 41200000
         IC    15,0(15)                                                 41250000
         STC   15,&LABOFF+&PLADD      STORE INTO PARM LIST         @H2C 41300000
        AGO  .SK5                                                       41350000
.SK7    ANOP                                                            41400000
        AIF   (&LABELF(&REGIX) NE 1).SK7A                               41450000
         IC    15,0&LABEL             GET LABEL                    @H2C 41500000
         STC   15,&LABOFF+&PLADD      STORE INTO PARM LIST         @H2C 41550000
        AGO    .SK5                                                     41600000
.SK7A   ANOP                                                            41650000
         IC    15,&LABEL              GET LABEL                    @H2C 41700000
         STC   15,&LABOFF+&PLADD      STORE INTO PARM LIST         @H2C 41750000
.SK5     ANOP                                                           41800000
.*                                                                      41869990
.*       *---------------------------------------------------*          41889980
.*       *---------------------------------------------------*          41909970
.*       *                  MLABEL KEYWORD                   *          41929960
.*       *---------------------------------------------------*          41949950
.*       *---------------------------------------------------*          41969940
        AIF   (&MLABELF(&NULLIX) EQ 1).MBEL5                            41989930
        AIF   (&MLABELF(&LITIX) NE 1).MBEL6                             42009920
.MBEL6A ANOP                                                            42100000
         MVI   &LABOFF+&PLADD,C&MLABEL STORE MOUNT LABEL INTO PARM @H2C 42150000
        AGO  .MBEL5                                                     42200000
.MBEL6  ANOP                                                            42250000
        AIF   (&MLABELF(&ADCONIX) NE 1).MBEL7                           42300000
         L     15,=&MLABEL            GET MOUNT LABEL              @H2C 42350000
         IC    15,0(15)                                                 42400000
         STC   15,&LABOFF+&PLADD      STORE INTO PARM LIST         @H2C 42450000
        AGO  .MBEL5                                                     42500000
.MBEL7  ANOP                                                            42550000
        AIF   (&MLABELF(&REGIX) NE 1).MBEL7A                            42629990
        IC     15,0&MLABEL            GET MOUNT LABEL              @H2C 42659980
        STC    15,&LABOFF+&PLADD      STORE INTO PARM LIST         @H2C 42689970
        AGO  .MBEL5                                                @H2A 42719960
.MBEL7A ANOP                                                            42750000
         IC    15,&MLABEL             GET MOUNT LABEL              @H2A 42829990
         STC   15,&LABOFF+&PLADD      STORE INTO PARM LIST         @H2A 42859980
.MBEL5   ANOP                                                           42900000
.*                                                                      42979990
.*       *---------------------------------------------------*          43009980
.*       *---------------------------------------------------*          43039970
.*       *                     DCB KEYWORD                   *          43069960
.*       *---------------------------------------------------*          43099950
.*       *---------------------------------------------------*          43129940
          AIF (&DCBF(&NULLIX) EQ 1).TSK10                               43159930
          AIF (&DCBF(&ADCONIX) NE 1).TSK11                              43189920
         L     15,=&DCB               GET DCB ADDRESS              @H2C 43219910
         ST    15,&UCBOFF+&PLADD      STORE INTO PARM LIST         @H2C 43249900
         AGO   .TSK10                                                   43300000
.TSK11   ANOP                                                           43350000
         AIF (&DCBF(&REGIX) NE 1 ).TSK12                                43429990
         ST    &DCB(1),&UCBOFF+&PLADD STORE DCB ADDRESS INTO PARM @H2C  43459980
         AGO   .TSK10                                                   43500000
.TSK12   ANOP                                                           43550000
         LA    15,&DCB                GET DCB ADDRESS              @H2C 43629990
         ST    15,&UCBOFF+&PLADD      STORE INTO PARM LIST         @H2C 43659980
.TSK10    ANOP                                                          43700000
.*                                                                      43769990
.*       *---------------------------------------------------*          43789980
.*       *---------------------------------------------------*          43809970
.*       *                    TXT2 KEYWORD                   *          43829960
.*       *---------------------------------------------------*          43849950
.*       *---------------------------------------------------*          43869940
          AIF (&TXT2F(&NULLIX) EQ 1).FDY13                              43889930
          AIF (&TXT2F(&ADCONIX) NE 1).FDY14                             43909920
         L     15,=&TXT2              GET TEXT2 ADDRESS            @H2C 44000000
         ST    15,&TX2OFF+&PLADD      STORE INTO PARM LIST         @H2C 44050000
         AGO   .FDY13                                                   44100000
.FDY14   ANOP                                                           44150000
         AIF (&TXT2F(&REGIX) NE 1 ).FDY15                               44200000
         LR    15,&TXT2(1)            GET TEXT2 ADDRESS            @H2C 44250000
         ST    15,&TX2OFF+&PLADD      STORE INTO PARM LIST         @H2C 44300000
         AGO   .FDY13                                                   44350000
.FDY15   ANOP                                                           44400000
         AIF (&TXT2F(&LITIX) NE 1).TFDY15                               44450000
         LA    15,=C&TXT2             GET TEXT2 ADDRESS            @H2C 44500000
         ST    15,&TX2OFF+&PLADD      STORE INTO PARM LIST         @H2C 44550000
         AGO   .FDY13                                                   44600000
.TFDY15  ANOP                                                           44650000
         LA    15,&TXT2               GET TEXT2 ADDRESS            @H2C 44700000
         ST    15,&TX2OFF+&PLADD      STORE INTO PARM LIST         @H2C 44750000
.FDY13    ANOP                                                          44800000
.*                                                                      44879990
.*       *---------------------------------------------------*          44909980
.*       *---------------------------------------------------*          44939970
.*       *                SET UP VOL AND FLASH               *          44969960
.*       *---------------------------------------------------*          44999950
.*       *---------------------------------------------------*          45029940
&WORK1   SETC   'X''0'                                                  45100000
&WORK2   SETC   '0'''                                                   45150000
         AIF  ('&FUNCTON' NE 'GEN' AND '&FUNCTON' NE '').VCF16          45200000
         AIF  (&VOLF(&NULLIX) EQ 1 AND                                 C45279990
               &FLASHF(&NULLIX) EQ 1).VCF16                             45309980
          AIF ('&VOL' NE 'REMOVE').VCF12                                45350000
&WORK1    SETC  'X''1'                                                  45400000
          AGO   .FLASHX                                                 45450000
.VCF12    ANOP                                                          45500000
          AIF ('&VOL' NE 'INSERT').VCF13                                45550000
&WORK1    SETC  'X''2'                                                  45600000
          AGO   .FLASHX                                                 45650000
.VCF13    ANOP                                                          45700000
          AIF  ('&VOL' NE 'SWAP').FLASHX                                45750000
&WORK1    SETC   'X''3'                                                 45800000
&WORK2    SETC   '3'''                                                  45850000
          AGO   .VCF105                                                 45900000
.FLASHX   ANOP                                                          45950000
          AIF ('&FLASH' EQ 'BLINK' OR &FLASHF(&NULLIX) EQ 1).VCF10      46000000
          AIF ('&FLASH' NE 'STEADY').VCF14                              46050000
&WORK2    SETC   '1'''                                                  46100000
          AGO   .VCF10                                                  46150000
.VCF14    ANOP                                                          46200000
          AIF  ('&FLASH' NE 'STEADY2').VCF15                            46250000
&WORK2    SETC  '2'''                                                   46300000
          AGO    .VCF10                                                 46350000
.VCF15    ANOP                                                          46400000
          AIF   ('&FLASH' NE 'ALT').VCF17                               46450000
&WORK2    SETC   '3'''                                                  46500000
          AGO    .VCF10                                                 46550000
.VCF17    ANOP                                                          46600000
          AIF   ('&FLASH' NE 'BLINK2').VCF10                            46650000
&WORK2    SETC    '4'''                                                 46700000
.VCF10    ANOP                                                          46750000
          AIF (&VOLF(&NULLIX) EQ 1 OR   &FLASHF(&NULLIX) EQ 1).VCF26    46800000
.VCF105   ANOP                                                          46850000
         MVI   &CRTOFF+&PLADD,&WORK1&WORK2 VOL AND FLASH           @H2C 46900000
         AGO   .VCF16                                                   46950000
.VCF26    ANOP                                                          47000000
          AIF  (&FLASHF(&NULLIX) NE 0).VCF27                            47079990
         NI    &CRTOFF+&PLADD,X'F0'   VOL AND FLASH                @H2C 47109980
          AIF ('&WORK2' EQ '0''').VCF16                                 47150000
         OI    &CRTOFF+&PLADD,&WORK1&WORK2 VOL AND FLASH           @H2C 47200000
         AGO  .VCF16                                                    47250000
.VCF27    ANOP                                                          47300000
         NI    &CRTOFF+&PLADD,X'0F'   VOL AND FLASH                @H2C 47350000
          AIF ('&WORK1' EQ 'X''0').VCF16                                47400000
         OI    &CRTOFF+&PLADD,&WORK1&WORK2 VOL AND FLASH           @H2C 47450000
.VCF16    ANOP                                                          47500000
.*                                                                      47579990
.*       *---------------------------------------------------*          47609980
.*       *  AT THIS LABEL ALL KEYWORD PROCESSING IS DONE FOR *          47639970
.*       *  AN MF=E EXPANISON                                *          47669960
.*       *---------------------------------------------------*          47699950
.EEXPMFE  ANOP                                                          47750000
.*                                                                      47849990
.*       *---------------------------------------------------*          47899980
.*       *    DOES REG HAVE TO BE SET TO PLIST ADDRESS       *          47949970
.*       *---------------------------------------------------*          47999960
          AIF  (&MFE(&REG01IX) EQ 1).SK8                                48049950
         LA    1,&PLADD               LOAD PARM REG TO REG1        @H2C 48099940
.SK8      ANOP                                                          48150000
          AGO   .SVCTEST    .* GO EXPAND CODE FOR SVC CALL              48200000
.*                                                                      48259990
.*###################################################################*  48269980
.*###################################################################*  48279970
.*#                                                                 #*  48289960
.**                  EXPAND CODE FOR NORMAL FORM                    #*  48299950
.*#                                                                 #*  48309940
.*###################################################################*  48319930
.*###################################################################*  48329920
.*       *---------------------------------------------------*          48339910
.*       *           BUILD THE PARAMETER LIST                *          48349900
.*       *                                                   *          48359890
.*       * Analyze service request and set appropriate code  *          48369880
.*       *---------------------------------------------------*          48379870
.NORMF   ANOP                                                           48500000
.*                                                                 @02a 48559990
.*                                                                 @02a 48569980
&NAME    CNOP  0,4                                                 @H2C 48579970
&LABEL1  SETC 'IGX&SYSNDX'                                              48589960
         BAL   1,IGX&SYSNDX                                             48600000
.*                                                                      48849990
.BLDLST    ANOP                                                         49050000
          AIF ('&MF(1)' NE 'L').DLDLST2                            @H2C 49152490
&NAME    DC    0F'0'                                               @H2C 49242480
.*                                                                      49332470
.DLDLST2  ANOP                                                     @H2C 49422460
.*                                                                      49512450
.*       *---------------------------------------------------*          49602440
.*       * The new form of the parameter list is indicated   *          49692430
.*       * by an x'FF' in the first byte of the plist, the   *          49782420
.*       * same place that used to be the service type code. *          49872410
.*       * The old type code has been moved to +x'10' into   *          49962400
.*       * the plist.                                        *          50052390
.*       *---------------------------------------------------*     @02a 50142380
         DC    X'FF'             NEW FORM OF PARAMETER LIST        @02A 50232370
.*                                                                      50322360
.*       *---------------------------------------------------*          50412350
.*       *  SET UP IOSLEVEL AND BIT FLAGS                    *          50502340
.*       *---------------------------------------------------*     @02C 50592330
&FH      SETC      'B'''                                                50750000
&F0      SETC      '0000'                   IOSLEVEL               @02c 50849990
&F1      SETC      '0'                      QUIESCE                @02c 50909980
&F2      SETC      '0'                      NO WAIT                @02c 50969970
&F3      SETC      '0'                      NOT UCB LIST           @02c 51029960
&F4      SETC      '0'                      DON'T INDEX            @02a 51089950
&FT      SETC      ''''                                                 51200000
.*                                                                      51259990
.*       *---------------------------------------------------*          51269980
.*       *---------------------------------------------------*          51279970
.*       *  CHECK IOSLEVEL OF CALLER  (FORCE PARAMETER)      *          51289960
.*       *---------------------------------------------------*          51299950
.*       *---------------------------------------------------*          51309940
          AIF (&FORCEF(&REGIX) EQ 1).FENDN                      @H2C    51319930
          AIF (&FORCEF(&NULLIX) EQ 1).FENDN                     @H2C    51329920
          AIF ('&FORCE' NE 'FDEV' AND '&FORCE' NE '9').NL9N     @H2C    51369800
&F0      SETC  '1001'                                           @H2C    51376400
         AGO  .FENDN                                            @H2A    51383000
.NL9N     AIF ('&FORCE' NE 'SCHRCVY' AND '&FORCE' NE '8').NL8N  @H2A    51389600
&F0      SETC  '1000'                                           @H2C    51396200
         AGO  .FENDN                                            @H2A    51402800
.NL8N     AIF ('&FORCE' NE 'CHPRCVY' AND '&FORCE' NE '7').NL7N  @H2A    51409400
&F0      SETC  '0111'                                           @H2C    51416000
         AGO  .FENDN                                            @H2A    51422600
.NL7N     AIF ('&FORCE' NE 'UNCRSV' AND '&FORCE' NE '6').NL6N   @H2A    51429200
&F0      SETC  '0110'                                           @H2C    51435800
         AGO  .FENDN                                            @H2A    51442400
.NL6N     AIF ('&FORCE' NE 'DYNPATH' AND '&FORCE' NE '5').NL5N  @H2A    51449000
&F0      SETC  '0101'                                           @H2C    51455600
         AGO  .FENDN                                            @H2A    51462200
.NL5N     AIF ('&FORCE' NE 'DDR' AND '&FORCE' NE '4').NL4N      @H2A    51468800
&F0      SETC  '0100'                                           @H2C    51475400
         AGO  .FENDN                                            @H2A    51482000
.NL4N     AIF ('&FORCE' NE 'DAVV' AND '&FORCE' NE '3').NL3N     @H2A    51488600
&F0      SETC  '0011'                                           @H2C    51495200
         AGO  .FENDN                                            @H2A    51501800
.NL3N     AIF ('&FORCE' NE 'QUIESCE' AND '&FORCE' NE '2').NL2N  @H2A    51508400
&F0      SETC  '0010'                                           @H2C    51515000
         AGO  .FENDN                                            @H2A    51521600
.NL2N     AIF ('&FORCE' NE 'NORMAL' AND '&FORCE' NE '1'                C51524400
               AND '&FORCE' NE 'NO').NLYN                       @H2A    51527200
&F0      SETC  '0001'                                           @H2C    51530000
         AGO  .FENDN                                            @H2A    51532800
.NLYN     AIF ('&FORCE' NE 'YES').FENDN                         @H2A    51535600
&F0      SETC  '1001'                                           @H2C    51538400
.FENDN   ANOP                                                   @H2A    51541400
.*                                                                      51579990
.*       *---------------------------------------------------*          51609980
.*       *  SET WAIT  FLAG                                   *          51639970
.*       *---------------------------------------------------*          51669960
         AIF ('&WAIT' NE 'NO').NOWAITT                                  51700000
&F2      SETC  '1'                                              @H2C    51750000
.NOWAITT ANOP                                                           51800000
.*                                                                      51879990
.*       *---------------------------------------------------*          51909980
.*       *  Set RESET is using single UCB instead of a list  *          51939970
.*       *---------------------------------------------------*          51969960
         AIF ('&FUNCTON' NE 'RESET').LSK1R                              52000000
         AIF (&UCBF(&NULLIX) EQ 1).LSK1R                                52050000
&F3      SETC  '1'                                              @H2C    52100000
.LSK1R   ANOP                                                           52150000
.*                                                                      52202990
.*       *---------------------------------------------------*          52205980
.*       *  Process INDEX value                              *          52208970
.*       *                                                   *     @02a 52211960
.*       * If quoted nor unquoted literal used, we can set   *          52214950
.*       * the bit in the plist.                             *          52217940
.*       *---------------------------------------------------*     @02a 52220930
         AIF  (&INDEXF(&NULLIX) EQ 1 OR                                C52223920
               (&INDEXF(&LITIX) EQ 0 AND                               C52226910
                &INDEXF(&UNQUOTEIX) EQ 0)).DONTSETINDEX            @02a 52229900
.*                                                                      52232890
.*       *---------------------------------------------------*          52235880
.*       *  Need the total length of the value               *          52238870
.*       *---------------------------------------------------*     @02a 52241860
&LENGTH  SETA  K'&INDEX                     Total length of value  @02a 52244850
.*                                                                      52247840
.*       *---------------------------------------------------*          52250830
.*       * If a quoted literal, pick up the value less the   *          52253820
.*       * quotes.                                           *          52256810
.*       *---------------------------------------------------*     @02a 52259800
         AIF   (&INDEXF(&LITIX) EQ 0).NOTLITINDEX                  @02a 52262790
.*                                                                      52265780
&LENGTH  SETA  &LENGTH-2                    Less 2 quotes          @02a 52268770
&LITVALINDEX  SETC  '&INDEX'(2,&LENGTH)     Get the value          @02a 52271760
.*                                                                      52274750
         AGO  .SETLITINDEX                                         @02a 52277740
.*                                                                      52280730
.NOTLITINDEX ANOP                                                  @02a 52283720
&LITVALINDEX SETC '&INDEX'                  Get the value          @02a 52286710
.*                                                                      52289700
.SETLITINDEX ANOP                                                  @02a 52292690
.*                                                                      52295680
         AIF   ('&LITVALINDEX' NE 'NO').DONTSETINDEX               @02a 52298670
&F4      SETC      '1'                      Don't index            @02a 52301660
.*                                                                      52304650
.DONTSETINDEX  ANOP                                                @02a 52307640
.*       *---------------------------------------------------*          52310630
.*       *  EXPAND THE FLAGS                                 *          52313620
.*       *---------------------------------------------------*          52316610
&FLAGS   SETC '&FH&F0&F1&F2&F3&F4&FT'                           @H2C    52350000
         DC    &FLAGS            IOSLEVEL AND FLAGS                @H2C 52499990
.*                                                                      52599980
.*       *---------------------------------------------------*          52699970
.*       *---------------------------------------------------*          52799960
.*       * IF SERVICE IS GEN OR NOTHING SETUP VOL AND FLASH  *          52899950
.*       *---------------------------------------------------*          52999940
.*       *---------------------------------------------------*          53099930
&WORK1   SETC   'X''0'                                                  53200000
&WORK2   SETC   '0'''                                                   53250000
.NOTRDV   ANOP                                                          53300000
 AIF ('&FUNCTON' NE 'GEN' AND '&FUNCTON' NE '').LSK10                   53350000
          AIF ('&VOL' NE 'REMOVE').LSK12                                53400000
&WORK1    SETC  'X''1'                                                  53450000
          AGO   .FLASH1                                                 53500000
.LSK12    ANOP                                                          53550000
          AIF ('&VOL' NE 'INSERT').LSK13                                53600000
&WORK1    SETC  'X''2'                                                  53650000
          AGO   .FLASH1                                                 53700000
.LSK13    ANOP                                                          53750000
          AIF  ('&VOL' NE 'SWAP').FLASH1                                53800000
&WORK1    SETC   'X''3'                                                 53850000
&WORK2    SETC   '3'''                                                  53900000
          AGO   .LSK10                                                  53950000
.FLASH1   ANOP                                                          54000000
          AIF ('&FLASH' EQ 'BLINK' OR &FLASHF(&NULLIX) EQ 1).LSK10      54050000
          AIF ('&FLASH' NE 'STEADY').LSK14                              54100000
&WORK2    SETC   '1'''                                                  54150000
          AGO   .LSK10                                                  54200000
.LSK14    ANOP                                                          54250000
          AIF  ('&FLASH' NE 'STEADY2').LSK15                            54300000
&WORK2    SETC  '2'''                                                   54350000
          AGO    .LSK10                                                 54400000
.LSK15    ANOP                                                          54450000
          AIF   ('&FLASH' NE 'ALT').LSK69                               54500000
&WORK2    SETC   '3'''                                                  54550000
          AGO   .LSK10                                                  54600000
.LSK69    ANOP                                                          54650000
          AIF    ('&FLASH' NE 'BLINK2').LSK10                           54700000
&WORK2    SETC   '4'''                                                  54750000
.LSK10    ANOP                                                          54800000
         DC    &WORK1&WORK2      VOL/FLASH                              54850000
.*                                                                      54919990
.*       *---------------------------------------------------*          54939980
.*       *---------------------------------------------------*          54959970
.*       *              SET LABEL/MLABEL FIELD               *          54979960
.*       *---------------------------------------------------*          54999950
.*       *---------------------------------------------------*          55019940
&WORK1    SETC   'X''00'''                                              55050000
   AIF ('&FUNCTON' NE 'MOUNT' AND '&FUNCTON' NE 'VERIFY' AND           C55100000
               '&FUNCTON' NE 'DEMOUNT').LSK16                     @H2C  55150000
.*                                                                      55229990
.*       *---------------------------------------------------*          55259980
.*       * Check for LITERAL, ADCON, and REG specificiations *          55289970
.*       * Anything else is a question mark.                 *          55319960
.*       *---------------------------------------------------*          55349950
         AIF (&LABELF(&NULLIX) EQ 1    AND                             C55379940
               &MLABELF(&NULLIX) EQ 1).LSK16                       @02a 55409930
.*                                                                      55439920
         AIF  (&LABELF(&LITIX)    EQ 1 OR                              C55469910
               &MLABELF(&LITIX)   EQ 1).LBLLITSPECD                @02a 55499900
.*                                                                      55529890
         AIF  (&LABELF(&ADCONIX)  EQ 1 OR                              C55559880
               &MLABELF(&ADCONIX) EQ 1 OR                              C55589870
               &LABELF(&REGIX)    EQ 1 OR                              C55619860
               &MLABELF(&REGIX)   EQ 1).LSK16                      @02a 55649850
.*                                                                      55679840
         AGO .SETQUESTION                                          @02a 55709830
.*                                                                      55739820
.*       *---------------------------------------------------*          55769810
.*       * Process LITERAL specificiation.  Start w/LABEL    *          55799800
.*       *---------------------------------------------------*          55829790
.LBLLITSPECD ANOP                                                  @02a 55859780
         AIF ('&LABEL' EQ ''' ''').LSK16                           @02a 55889770
         AIF ('&LABEL' EQ '''S''').SETLBLS                         @02a 55919760
         AIF ('&LABEL' EQ '''N''').SETLBLN                         @02a 55949750
         AIF ('&LABEL' EQ '''A''').SETLBLA                         @02a 55979740
         AIF ('&LABEL' EQ '''X''').SETLBLX                         @02a 56009730
.*                                                                      56039720
.SETQUESTION  ANOP                                                 @02a 56069710
&WORK1   SETC     'C''?'''                                         @02a 56099700
         AGO    .LSK16                                             @02a 56129690
.*                                                                      56159680
.SETLBLS ANOP                                                      @02a 56189670
&WORK1   SETC    'C''S'''                                          @02a 56219660
         AGO    .LSK16                                             @02a 56249650
.*                                                                      56279640
.SETLBLN ANOP                                                      @02a 56309630
&WORK1   SETC    'C''N'''                                          @02a 56339620
         AGO    .LSK16                                             @02a 56369610
.*                                                                      56399600
.SETLBLA ANOP                                                           56429590
&WORK1   SETC    'C''A'''                                          @02a 56459580
         AGO    .LSK16                                             @02a 56489570
.*                                                                 @02a 56519560
.SETLBLX ANOP                                                           56549550
&WORK1   SETC    'C''X'''                                          @02a 56579540
         AGO    .LSK16                                             @02a 56609530
.*                                                                      56639520
.LSK16    ANOP                                                          56750000
.*                                                                      56769990
         DC    &WORK1            LABEL                                  56800000
.*                                                                      56879990
.*       *---------------------------------------------------*          56909980
.*       *---------------------------------------------------*          56939970
.*       *     SET ADDRESS OF SER OR TXT DATA IN PLIST       *          56969960
.*       *---------------------------------------------------*          56999950
.*       *---------------------------------------------------*          57029940
&WORK1    SETC   'A(0)'                                                 57100000
.*                                                                      57159990
.*       *---------------------------------------------------*          57169980
.*       * Check for ADCON form with SER                     *          57179970
.*       *---------------------------------------------------*          57189960
         AIF  (&SERF(&ADCONIX) EQ 0).TXTADCON                      @02c 57199950
&WORK1   SETC  '&SER'                                                   57209940
         AGO   .SETTXT                                                  57219930
.*                                                                      57229920
.*       *---------------------------------------------------*          57239910
.*       * Check for ADCON with the TXT keyword.             *          57249900
.*       *---------------------------------------------------*          57259890
.TXTADCON   ANOP                                                   @02c 57269880
         AIF  (&TXTF(&ADCONIX) EQ 0).SERLIT                        @02c 57279870
&WORK1   SETC  '&TXT'                                                   57289860
         AGO   .SETTXT                                                  57299850
.*                                                                      57309840
.*       *---------------------------------------------------*          57319830
.*       * See if LITERAL form was used.                     *          57329820
.*       *---------------------------------------------------*          57339810
.SERLIT ANOP                                                       @02a 57349800
         AIF  (&SERF(&LITIX) EQ 0 AND                                  C57359790
               &TXTF(&LITIX) EQ 0).SETTXT                          @02a 57369780
.*                                                                      57379770
.*       *---------------------------------------------------*          57389760
.*       * Calculate and set the offset to the literal       *          57399750
.*       * definition.                                       *          57409740
.*       *---------------------------------------------------*          57419730
&LENGTH     SETA  &CURLITOFF-&TX1OFF                               @02a 57429720
&WORK1      SETC  'A(*+&LENGTH)'                                        57439710
.*                                                                      57449700
.*       *---------------------------------------------------*          57459690
.*       * Calculate what to increment CURLITOFF to.         *          57469680
.*       *---------------------------------------------------*     @02a 57479670
         AIF ('&FUNCTON' NE 'GEN' AND '&FUNCTON' NE '').INCRBY6    @02a 57489660
&CURLITOFF  SETA  &CURLITOFF+8                                     @02a 57499650
         AGO  .SETTXT                                              @02a 57509640
.*                                                                      57519630
.INCRBY6 ANOP                                                      @02a 57529620
&CURLITOFF  SETA  &CURLITOFF+6                                     @02a 57539610
.*                                                                      57549600
.SETTXT     ANOP                                                        57559590
         DC    &WORK1            TXT/SER                                57950000
.*                                                                      58029990
.*       *---------------------------------------------------*          58059980
.*       *---------------------------------------------------*          58089970
.*       *     Set address of MSER or TXT2 data in plist     *          58119960
.*       *---------------------------------------------------*          58149950
.*       *---------------------------------------------------*          58179940
&WORK1    SETC   'A(0)'                                                 58250000
.*                                                                      58319990
.*       *---------------------------------------------------*          58339980
.*       * Check for ADCON form with MSER                    *          58359970
.*       *---------------------------------------------------*          58379960
         AIF  (&MSERF(&ADCONIX) EQ 0).TXT2ADCON                    @02c 58399950
&WORK1   SETC  '&MSER'                                                  58419940
         AGO   .SETTXT2                                                 58439930
.*                                                                      58459920
.*       *---------------------------------------------------*          58479910
.*       * Check for ADCON with the TXT2 keyword.            *          58499900
.*       *---------------------------------------------------*          58519890
.TXT2ADCON  ANOP                                                   @02c 58539880
         AIF  (&TXT2F(&ADCONIX) EQ 0).MSERLIT                      @02c 58559870
&WORK1   SETC  '&TXT2'                                                  58579860
         AGO   .SETTXT2                                                 58599850
.*                                                                      58619840
.*       *---------------------------------------------------*          58639830
.*       * See if LITERAL form was used.                     *          58659820
.*       *---------------------------------------------------*          58679810
.MSERLIT ANOP                                                      @02a 58699800
         AIF  (&MSERF(&LITIX) EQ 0 AND                                 C58719790
               &TXT2F(&LITIX) EQ 0).SETTXT2                        @02a 58739780
.*                                                                      58759770
.*       *---------------------------------------------------*          58779760
.*       * Calculate and set the offset to the literal       *          58799750
.*       * definition.                                       *          58819740
.*       *---------------------------------------------------*          58839730
&LENGTH  SETA  &CURLITOFF-&TX2OFF                                  @02a 58859720
&WORK1   SETC  'A(*+&LENGTH)'                                           58879710
.*                                                                      58899700
.*       *---------------------------------------------------*          58919690
.*       * Calculate what to increment CURLITOFF to.         *          58939680
.*       *---------------------------------------------------*     @02a 58959670
         AIF ('&FUNCTON' NE 'GEN' AND '&FUNCTON' NE '').INCRBY62   @02a 58979660
&CURLITOFF  SETA  &CURLITOFF+8                                     @02a 58999650
         AGO  .SETTXT2                                             @02a 59019640
.*                                                                      59039630
.INCRBY62  ANOP                                                    @02a 59059620
&CURLITOFF  SETA  &CURLITOFF+6                                     @02a 59079610
.*                                                                      59099600
.*                                                                      59119590
.SETTXT2 ANOP                                                           59450000
         DC    &WORK1            TXT2/MSER                              59500000
.*                                                                      59579990
.*       *---------------------------------------------------*          59609980
.*       *---------------------------------------------------*          59639970
.*       *          SET VALUE FOR DCB UCB OR UCBL            *          59669960
.*       *---------------------------------------------------*          59699950
.*       *---------------------------------------------------*          59729940
&WORK1    SETC  'A(0)'                                                  59800000
          AIF (&DCBF(&ADCONIX) EQ 0).PL04                               59850000
&WORK1    SETC '&DCB'                                                   59900000
          AGO  .SETDU                                                   59950000
.PL04     ANOP                                                          60000000
        AIF  (&UCBLF(&ADCONIX) EQ 0).SETDU                              60050000
&WORK1   SETC '&UCBL'                                                   60100000
.SETDU    ANOP                                                          60150000
         DC    &WORK1            DCB/UCB/UCBL                           60200000
.*                                                                      60254990
.*       *---------------------------------------------------*          60259980
.*       *---------------------------------------------------*          60264970
.*       * Now update the 'Service Type' byte now at +x'10'  *          60269960
.*       * into the plist.                                   *          60274950
.*       *---------------------------------------------------*          60279940
.*       *---------------------------------------------------*          60284930
          AIF ('&FUNCTON' EQ 'MOUNT').SETTYPMOUNT                  @02a 60289920
          AIF ('&FUNCTON' EQ 'VERIFY').SETTYPVERIFY                @02a 60294910
          AIF ('&FUNCTON' EQ 'RDY').SETTYPRDY                      @02a 60299900
          AIF ('&FUNCTON' EQ 'RESET').SETTYPRESET                  @02a 60304890
          AIF ('&FUNCTON' EQ 'GEN').SETTYPGEN                      @02a 60309880
          AIF ('&FUNCTON' EQ 'DEMOUNT').SETTYPDEMOUNT              @02a 60314870
.*                                                                      60319860
.*       *---------------------------------------------------*          60324850
.*       * None of the above so leave it zero.               *          60329840
.*       *---------------------------------------------------*          60334830
&WORK1   SETC  'X''00'''                                           @02a 60339820
         AGO   .SETTYP                                             @02a 60344810
.*                                                                      60349800
.*       *---------------------------------------------------*          60354790
.*       * Mount                                             *          60359780
.*       *---------------------------------------------------*     @02a 60364770
.SETTYPMOUNT  ANOP                                                 @02a 60369760
&WORK1   SETC   'X''03'''                                               60374750
         AGO   .SETTYP                                             @02a 60379740
.*                                                                      60384730
.*       *---------------------------------------------------*          60389720
.*       * Verify                                            *          60394710
.*       *---------------------------------------------------*     @02a 60399700
.SETTYPVERIFY ANOP                                                 @02a 60404690
&WORK1   SETC   'X''04'''                                               60409680
         AGO   .SETTYP                                             @02a 60414670
.*                                                                      60419660
.*       *---------------------------------------------------*          60424650
.*       * Rdy                                               *          60429640
.*       *---------------------------------------------------*     @02a 60434630
.SETTYPRDY  ANOP                                                   @02a 60439620
&WORK1   SETC   'X''01'''                                               60444610
         AGO   .SETTYP                                             @02a 60449600
.*                                                                      60454590
.*       *---------------------------------------------------*          60459580
.*       * Reset                                             *          60464570
.*       *---------------------------------------------------*     @02a 60469560
.SETTYPRESET  ANOP                                                 @02a 60474550
&WORK1   SETC    'X''06'''                                              60479540
         AGO   .SETTYP                                             @02a 60484530
.*                                                                      60489520
.*       *---------------------------------------------------*          60494510
.*       * Gen                                               *          60499500
.*       *---------------------------------------------------*     @02a 60504490
.SETTYPGEN    ANOP                                                 @02a 60509480
&WORK1   SETC    'X''07'''                                              60514470
         AGO   .SETTYP                                             @02a 60519460
.*                                                                      60524450
.*       *---------------------------------------------------*          60529440
.*       * Demount                                           *          60534430
.*       *---------------------------------------------------*     @02a 60539420
.SETTYPDEMOUNT ANOP                                                @02a 60544410
&WORK1   SETC     'X''C4'''                 Set default of 'D'     @02a 60549400
         AIF (&DISPF(&LITIX) EQ 0).SETTYP   If not literal branch  @02a 60554390
.*                                                                      60559380
         AIF ('&DISP' NE '''K''').CK4R      Br if not K            @02a 60564370
&WORK1   SETC     'X''D2'''                 Set to K               @02a 60569360
         AGO .SETTYP                                               @02a 60574350
.*                                                                      60579340
.CK4R    ANOP                                                      @02a 60584330
         AIF ('&DISP' NE '''R''').SETTYP    Branch if not 'R'      @02a 60589320
&WORK1   SETC 'X''D9'''                     Set to 'R'             @02a 60594310
.*                                                                      60599300
.SETTYP  ANOP                                                           60604290
         DC    &WORK1            SERVICE REQUESTED                      60609280
.*                                                                      60614270
.*       *---------------------------------------------------*          60619260
.*       *---------------------------------------------------*          60624250
.*       * Set 'Keyword Used and Has a Pointer' bits at      *          60629240
.*       * offset x'11' into the plist.                      *          60634230
.*       *---------------------------------------------------*          60639220
.*       *---------------------------------------------------*          60644210
&J       SETA  0                            Initialize flag var    @H2A 60649200
.*                                                                      60654190
.*       *---------------------------------------------------*          60659180
.*       * START with the INDEX keyword.                     *          60664170
.*       *---------------------------------------------------*     @02a 60669160
         AIF  (&INDEXF(&NULLIX)    EQ 1 OR                             C60674150
               &INDEXF(&LITIX)     EQ 1 OR                             C60679140
               &INDEXF(&UNQUOTEIX) EQ 1).NOINDEXPTR                @02a 60684130
&J       SETA  &J+128                                              @02a 60689120
.*                                                                      60694110
.NOINDEXPTR  ANOP                                                  @02a 60699100
.*                                                                      60704090
.*       *---------------------------------------------------*          60709080
.*       * Now the MEDIATYPE keyword.                        *          60714070
.*       *---------------------------------------------------*     @02a 60719060
         AIF   (&MEDTF(&NULLIX) EQ 1).NOMEDTPTR                    @02a 60724050
&J       SETA  &J+64                                               @02a 60729040
.*                                                                      60734030
.NOMEDTPTR   ANOP                                                  @02a 60739020
.*                                                                      60744010
         DC    AL1(&J)           KEYWORDS W/POINTERS BITS          @02A 60749000
.*                                                                      60753990
.*       *---------------------------------------------------*          60758980
.*       *---------------------------------------------------*          60763970
.*       * Reserved bytes                                    *          60768960
.*       *---------------------------------------------------*          60773950
.*       *---------------------------------------------------*          60778940
&FS      SETC  'X''0000'''                  Initialize flag var    @02a 60783930
         DC    &FS               2 RESERVED BYTES                  @02A 60788920
.*                                                                      60793910
.*       *---------------------------------------------------*          60798900
.*       *---------------------------------------------------*          60803890
.*       * Setup INDEX pointer.                              *          60808880
.*       *---------------------------------------------------*          60813870
.*       *---------------------------------------------------*          60818860
&WORK1    SETC   'A(0)'                                            @02c 60823850
.*                                                                      60828840
.*       *---------------------------------------------------*          60833830
.*       * Check for ADCON form with INDEX                   *          60838820
.*       *---------------------------------------------------*          60843810
         AIF  (&INDEXF(&ADCONIX) EQ 0).SETINDEXADCON               @02c 60848800
&WORK1   SETC  '&INDEX'                                           @02c  60853790
.*                                                                      60858780
.SETINDEXADCON ANOP                                                @02a 60863770
         DC    &WORK1            INDEX POINTER                     @02a 60868760
.*                                                                      60873750
.*       *---------------------------------------------------*          60878740
.*       *---------------------------------------------------*          60883730
.*       * Setup MEDIATYPE pointer                           *          60888720
.*       *---------------------------------------------------*          60893710
.*       *---------------------------------------------------*          60898700
&WORK1    SETC  'A(0)'                                             @02a 60903690
          AIF (&MEDTF(&ADCONIX) EQ 0).MEDTLIT                      @02a 60908680
&WORK1    SETC '&MEDIATYPE'                                       @02a  60913670
          AGO  .SETMEDTADCON                                       @02a 60918660
.*                                                                      60923650
.MEDTLIT  ANOP                                                     @02a 60928640
.*       *---------------------------------------------------*          60933630
.*       * See if LITERAL form was used.                     *          60938620
.*       *---------------------------------------------------*     @02c 60943610
         AIF  (&MEDTF(&LITIX) EQ 0).SETMEDTADCON                   @02a 60948600
.*                                                                      60953590
.*       *---------------------------------------------------*          60958580
.*       * Calculate and set the offset to the literal       *          60963570
.*       * definition.                                       *          60968560
.*       *---------------------------------------------------*          60973550
&LENGTH     SETA  &CURLITOFF-&MTPOFF                               @02a 60978540
&WORK1      SETC  'A(*+&LENGTH)'                                   @02c 60983530
.*                                                                      60988520
.*       *---------------------------------------------------*          60993510
.*       * The only valid MEDIATYPE values are single digit  *          60998500
.*       * so increment for the next keyword if there is one *          61003490
.*       *---------------------------------------------------*          61008480
&CURLITOFF  SETA  &CURLITOFF+1                                     @02a 61013470
.*                                                                      61018460
.SETMEDTADCON ANOP                                                 @02a 61023450
         DC    &WORK1            MEDIATYPE POINTER                 @02a 61028440
.*                                                                      61033430
.*       *---------------------------------------------------*          61038420
.*       *---------------------------------------------------*          61043410
.*       * Setup LITERALS if they were specified.            *          61048400
.*       *---------------------------------------------------*          61053390
.*       *---------------------------------------------------*          61058380
.*                                                                      61063370
.*       *---------------------------------------------------*          61068360
.*       * Start with SER/TXT keywords.                      *          61073350
.*       *---------------------------------------------------*          61078340
         AIF (&SERF(&LITIX) EQ 0 AND &TXTF(&LITIX) EQ 0).CK4MSERLIT     61083330
         AIF (&SERF(&LITIX) EQ 0).CK4TXTLIT                        @02a 61088320
.*                                                                      61093310
.*       *---------------------------------------------------*          61098300
.*       * We have a SER literal.  Check for 8 characters    *          61103290
.*       * allowed, else it's 6.                             *          61108280
.*       *---------------------------------------------------*          61113270
         AIF ('&FUNCTON' NE 'GEN' AND '&FUNCTON' NE '').SERLITNGEN @02a 61118260
         DC    CL8&SER                      SER LITERAL VALUE      @02a 61123250
         AGO  .CK4MSERLIT                                          @02a 61128240
.*                                                                      61133230
.SERLITNGEN ANOP                                                   @02a 61138220
         DC    CL6&SER                      SER LITERAL VALUE      @02a 61143210
         AGO  .CK4MSERLIT                                          @02a 61148200
.*                                                                      61153190
.CK4TXTLIT ANOP                                                    @02a 61158180
.*                                                                      61163170
         AIF (&TXTF(&LITIX) EQ 0).CK4MSERLIT                       @02a 61168160
.*                                                                      61173150
.*       *---------------------------------------------------*          61178140
.*       * We have a TXT literal.  Check for 8 characters    *          61183130
.*       * allowed, else it's 6.                             *          61188120
.*       *---------------------------------------------------*          61193110
         AIF ('&FUNCTON' NE 'GEN' AND '&FUNCTON' NE '').TXTLITNGEN @02a 61198100
         DC    CL8&TXT                      TXT LITERAL VALUE      @02a 61203090
         AGO  .CK4MSERLIT                                          @02a 61208080
.*                                                                      61213070
.TXTLITNGEN ANOP                                                   @02a 61218060
         DC    CL6&TXT                      TXT LITERAL VALUE      @02a 61223050
.*                                                                      61228040
.CK4MSERLIT  ANOP                                                  @02a 61233030
.*                                                                      61238020
.*       *---------------------------------------------------*          61243010
.*       * Start with MSER/TXT2 keywords.                    *          61248000
.*       *---------------------------------------------------*          61252990
         AIF (&MSERF(&LITIX) EQ 0 AND &TXT2F(&LITIX) EQ 0).CK4MEDTLIT   61257980
         AIF (&SERF(&LITIX) EQ 0).CK4TXT2LIT                       @02a 61262970
.*                                                                      61267960
.*       *---------------------------------------------------*          61272950
.*       * We have a MSER literal. Check for 8 characters    *          61277940
.*       * allowed, else it's 6.                             *          61282930
.*       *---------------------------------------------------*          61287920
         AIF ('&FUNCTON' NE 'GEN' AND '&FUNCTON' NE '').MSERLITNGEN     61292910
         DC    CL8&MSER                     MSER LITERAL VALUE     @02a 61297900
         AGO  .CK4MEDTLIT                                          @02a 61302890
.*                                                                      61307880
.MSERLITNGEN ANOP                                                  @02a 61312870
         DC    CL6&MSER                     MSER LITERAL VALUE     @02a 61317860
         AGO  .CK4MEDTLIT                                          @02a 61322850
.*                                                                      61327840
.CK4TXT2LIT ANOP                                                   @02a 61332830
.*                                                                      61337820
         AIF (&TXT2F(&LITIX) EQ 0).CK4MEDTLIT                      @02a 61342810
.*                                                                      61347800
.*       *---------------------------------------------------*          61352790
.*       * We have a TXT2 literal.  Check for 8 characters   *          61357780
.*       * allowed, else it's 6.                             *          61362770
.*       *---------------------------------------------------*          61367760
         AIF ('&FUNCTON' NE 'GEN' AND '&FUNCTON' NE '').TXT2LITNGEN     61372750
         DC    CL8&TXT2                     TXT2 LITERAL VALUE     @02a 61377740
         AGO  .CK4MEDTLIT                                          @06c 61382730
.*                                                                      61387720
.TXT2LITNGEN ANOP                                                  @02a 61392710
         DC    CL6&TXT2                     TXT2 LITERAL VALUE     @02a 61397700
.*                                                                      61402690
.CK4MEDTLIT  ANOP                                                  @02a 61407680
.*       *---------------------------------------------------*          61412670
.*       * Now process the any MEDIATYPE literal.            *          61417660
.*       *---------------------------------------------------*          61422650
         AIF (&MEDTF(&LITIX) EQ 0).CK4NXTKWD                       @02a 61427640
.*                                                                      61432630
.*       *---------------------------------------------------*          61437620
.*       * We have a MEDIATYPE literal.                      *          61442610
.*       *---------------------------------------------------*          61447600
         DC    CL1&MEDIATYPE                MEDIATYPE LITERAL VAL  @02a 61452590
.*                                                                      61457580
.CK4NXTKWD  ANOP                                                   @02a 61462570
.*                                                                      61467560
        AIF   ('&MF(1)' EQ 'L').SVCTEST                                 61500000
.*                                                                      61579990
.*###################################################################*  61609980
.*###################################################################*  61639970
.*#                                                                 #*  61669960
.*#      EXPAND CODE FOR NORMAL FORM KEYWORDS WHICH ARE             #*  61699950
.*#      VALID ONLY AT EXECUTION TIME                               #*  61729940
.*#                                                                 #*  61759930
.*###################################################################*  61789920
.*###################################################################*  61819910
&LABEL1  DS    0H                                                       61900000
.*                                                                      62029990
.*********************************************************************  62127000
.*        SET DEMOUNT IF DISP IS RX OR ADCON                     @H2C*  62132500
.*********************************************************************  62138000
.DISM    AIF ('&FUNCTON' NE 'DEMOUNT').SERVOK                      @H2C 62143500
         AIF (&DISPF(&NULLIX) EQ 1 OR &DISPF(&LITIX) EQ 1).SERVOK       62179990
         AIF (&DISPF(&ADCONIX) NE 1).ZZSK1                              62209980
         L     15,=&DISP              GET DISPOSITION              @H2C 62250000
         MVC   0(1,16),0(15)          STORE INTO PARM LIST         @H2C 62300000
         AGO    .SERVOK                                                 62350000
.ZZSK1    ANOP                                                          62400000
         AIF (&DISPF(&REGIX) NE 1).ZZSK2                                62479990
         MVC   0(1,16),0&DISP        STORE DISPOSITION INTO PARM  @H2C  62509980
         AGO    .SERVOK                                                 62550000
.ZZSK2    ANOP                                                          62600000
         MVC   0(1,16),&DISP          STORE DISPOSITION INTO PARM  @H2C 62650000
.SERVOK   ANOP                                                          62700000
.*********************************************************************  62750000
.*                                                                   *  62800000
.*                   TXT KEYWORD                                     *  62850000
.*                                                                   *  62900000
.*********************************************************************  62950000
         AIF (&TXTF(&NULLIX) EQ 1).NTXT02                               63039990
         AIF (&TXTF(&REGIX) NE 1 ).NTXT01                               63079980
         AIF (&TXTF(&REG01IX) EQ 1).NTXT01                              63119970
         ST    &TXT(1),4(1)           STORE TEXT ADDRESS INTO PARM @H2C 63159960
         AGO    .NTXT02                                                 63200000
.NTXT01  ANOP                                                           63250000
         AIF  (&TXTF(&LITIX) EQ 1 OR &TXTF(&ADCONIX) EQ 1).NTXT02       63300000
         LA    15,&TXT                GET TEXT ADDRESS             @H2C 63350000
         ST    15,4(1)                STORE INTO PARM LIST         @H2C 63400000
.NTXT02  ANOP                                                           63450000
.*********************************************************************  63500000
.*                                                                   *  63550000
.*                   SER KEYWORD                                     *  63600000
.*                                                                   *  63650000
.*********************************************************************  63700000
         AIF (&SERF(&NULLIX) EQ 1).NSER02                               63789990
         AIF (&SERF(&REGIX) NE 1 ).NSER01                               63829980
         AIF (&SERF(&REG01IX) EQ 1).NSER01                              63869970
         ST    &SER(1),4(1)           STORE VOL-SER INTO PARM LIST @H2C 63909960
         AGO    .NSER02                                                 63950000
.NSER01  ANOP                                                           64000000
         AIF  (&SERF(&LITIX) EQ 1 OR &SERF(&ADCONIX) EQ 1).NSER02       64050000
         LA    15,&SER                GET VOL-SER ADDRESS          @H2C 64100000
         ST    15,4(1)                STORE INTO PARM LIST         @H2C 64150000
.NSER02  ANOP                                                           64200000
.*********************************************************************  64250000
.*                                                                   *  64300000
.*                   MLABEL KEYWORD                                  *  64350000
.*                                                                   *  64400000
.*********************************************************************  64450000
         AIF   (&MLABELF(&NULLIX) EQ 1 ).LBNRX2                         64529990
         AIF   (&MLABELF(&LITIX) EQ 1 ).LBNRX2                          64559980
         AIF  (&MLABELF(&ADCONIX) NE 1 ).LBNRX3                         64589970
         L     15,=&MLABEL            GET MOUNT LABEL              @H2C 64650000
         IC    15,0(15)                                                 64700000
         STC   15,3(1)                STORE INTO PARM LIST         @H2C 64750000
         AGO   .LBNRX2                                                  64800000
.LBNRX3  ANOP                                                           64850000
         AIF   (&MLABELF(&REGIX) NE 1 ).LBNRX2Z                         64900000
         IC    15,0&MLABEL            GET MOUNT LABEL              @H2C 64950000
         STC   15,3(1)                STORE INTO PARM LIST         @H2C 65000000
         AGO   .LBNRX2                                                  65050000
.LBNRX2Z ANOP                                                           65100000
         IC    15,&MLABEL             GET MOUNT LABEL              @H2C 65150000
         STC   15,3(1)                STORE INTO PARM LIST         @H2C 65200000
.LBNRX2  ANOP                                                           65250000
.*********************************************************************  65300000
.*                                                                   *  65350000
.*                   LABEL KEYWORD                                   *  65400000
.*                                                                   *  65450000
.*********************************************************************  65500000
         AIF   (&LABELF(&LITIX) EQ 1 ).LBNRX1                           65579990
         AIF   (&LABELF(&NULLIX) EQ 1 ).LBNRX1                          65609980
         AIF  (&LABELF(&ADCONIX) NE 1 ).LBNRX4                          65639970
         L     15,=&LABEL             GET LABEL                    @H2C 65700000
         IC    15,0(15)                                                 65750000
         STC   15,3(1)                STORE INTO PARM LIST         @H2C 65800000
         AGO   .LBNRX1                                                  65850000
.LBNRX4  ANOP                                                           65900000
         AIF   (&LABELF(&REGIX) NE 1 ).LBNRX1Z                          65950000
         IC    15,0&LABEL             GET LABEL                    @H2C 66000000
         STC   15,3(1)                STORE INTO PARM LIST         @H2C 66050000
         AGO   .LBNRX1                                                  66100000
.LBNRX1Z ANOP                                                           66150000
         IC    15,&LABEL              GET LABEL                    @H2C 66200000
         STC   15,3(1)                STORE INTO PARM LIST         @H2C 66250000
.LBNRX1  ANOP                                                           66300000
.*********************************************************************  66350000
.*                                                                   *  66400000
.*                   MSER KEYWORD                                    *  66450000
.*                                                                   *  66500000
.*********************************************************************  66550000
         AIF (&MSERF(&NULLIX) EQ 1).NMSER02                             66629990
         AIF (&MSERF(&REGIX) NE 1 ).NMSER01                             66659980
         AIF (&MSERF(&REG01IX) EQ 1).NMSER01                            66689970
         ST    &MSER(1),8(1)          STORE MOUNT VOL-SER INTO PARM@H2C 66750000
         AGO    .NMSER02                                                66800000
.NMSER01 ANOP                                                           66850000
         AIF  (&MSERF(&LITIX) EQ 1 OR &MSERF(&ADCONIX) EQ 1).NMSER02    66900000
         LA    15,&MSER               GET MOUNT VOL-SER            @H2C 66950000
         ST    15,8(1)                STORE INTO PARM LIST         @H2C 67000000
.NMSER02 ANOP                                                           67050000
.*********************************************************************  67100000
.*                                                                   *  67150000
.*                   TXT2 KEYWORD                                    *  67200000
.*                                                                   *  67250000
.*********************************************************************  67300000
         AIF (&TXT2F(&NULLIX) EQ 1).NTXT202                             67379990
         AIF (&TXT2F(&REGIX) NE 1 ).NTXT201                             67409980
         AIF (&TXT2F(&REG01IX) EQ 1).NTXT201                            67439970
         ST    &TXT2(1),8(1)          STORE TEXT2 ADDRS INTO PARM  @H2C 67500000
         AGO    .NTXT202                                                67550000
.NTXT201 ANOP                                                           67600000
         AIF  (&TXT2F(&LITIX) EQ 1 OR &TXT2F(&ADCONIX) EQ 1).NTXT202    67650000
         LA    15,&TXT2               GET TEXT2 ADDRESS            @H2C 67700000
         ST    15,8(1)                STORE INTO PARM LIST         @H2C 67750000
.NTXT202 ANOP                                                           67800000
.*********************************************************************  67850000
.*                                                                   *  67900000
.*                   DCB KEYWORD                                     *  67950000
.*                                                                   *  68000000
.*********************************************************************  68050000
         AIF (&DCBF(&NULLIX) EQ 1).NDCB02                               68129990
         AIF (&DCBF(&REGIX) NE 1 ).NDCB01                               68159980
         AIF (&DCBF(&REG01IX) EQ 1).NDCB01                              68189970
         ST    &DCB(1),12(1)          STORE DCB ADDRESS INTO PARM  @H2C 68250000
         AGO    .NDCB02                                                 68300000
.NDCB01 ANOP                                                            68350000
         AIF  (&DCBF(&ADCONIX) EQ 1).NDCB02                             68400000
         LA    15,&DCB                GET DCB ADDRESS              @H2C 68450000
         ST    15,12(1)               STORE INTO PARM LIST         @H2C 68500000
.NDCB02 ANOP                                                            68550000
.*********************************************************************  68600000
.*                                                                   *  68650000
.*                   UCBL KEYWORD                                    *  68700000
.*                                                                   *  68750000
.*********************************************************************  68800000
         AIF (&UCBLF(&NULLIX) EQ 1).NUCBL02                             68879990
         AIF (&UCBLF(&REGIX) NE 1 ).NUCBL01                             68909980
         ST    &UCBL(1),12(1)         STORE UCB LIST ADDRESS       @H2C 68939970
         AGO    .NUCBL02                                                69000000
.NUCBL01 ANOP                                                           69050000
         AIF  (&UCBLF(&LITIX) EQ 1 OR &UCBLF(&ADCONIX) EQ 1).NUCBL02    69129990
         LA    15,&UCBL               GET UCB LIST ADDRESS         @H2C 69159980
         ST    15,12(1)               STORE INTO PARM LIST         @H2C 69189970
.NUCBL02 ANOP                                                           69250000
.*********************************************************************  69300000
.*                                                                   *  69350000
.*                   UCB KEYWORD                                     *  69400000
.*                                                                   *  69450000
.*********************************************************************  69500000
         AIF (&UCBF(&NULLIX) EQ 1).NUCB02                               69579990
         AIF (&UCBF(&REGIX) NE 1 ).NUCB01                               69609980
         ST    &UCB(1),12(1)          STORE UCB ADDRESS INTO PARM  @H2C 69650000
         AGO    .NUCB02                                                 69700000
.NUCB01 ANOP                                                            69750000
         AIF  (&UCBF(&LITIX) EQ 1 OR    &UCBF(&ADCONIX) EQ 1).NUCB02    69800000
         LA    15,&UCB                GET UCB ADDRESS              @H2C 69850000
         ST    15,12(1)               STORE INTO PARM              @H2C 69900000
.NUCB02 ANOP                                                            69950000
.*                                                                      69950990
.*       *---------------------------------------------------*          69951980
.*       *                  INDEX keyword                    *          69952970
.*       *---------------------------------------------------*     @02a 69953960
         AIF  (&INDEXF(&NULLIX) EQ 1 OR                                C69954950
               &INDEXF(&LITIX) EQ 1 ).NOINDEXTODO                  @02a 69955940
.*                                                                      69956930
         AIF  (&INDEXF(&REGIX) EQ 1 ).INDEXREGTODO                 @02a 69957920
         AIF  (&INDEXF(&RXFMTIX) EQ 1 ).INDEXRXFMTTODO             @02a 69958910
         AGO  .NOINDEXTODO                                         @02a 69959900
.*                                                                      69960890
.INDEXREGTODO  ANOP                                                @02A 69961880
         ST    &INDEX(1),20(1)        STORE INTO PARM LIST         @02A 69962870
         AGO  .NOINDEXTODO                                         @02a 69963860
.*                                                                      69964850
.INDEXRXFMTTODO  ANOP                                              @02A 69965840
         LA    15,&INDEX              GET INDEX                    @H2C 69966830
         ST    15,20(1)               STORE INTO PARM LIST         @H2C 69967820
.*                                                                      69968810
.NOINDEXTODO  ANOP                                                 @02a 69969800
.*                                                                      69970790
.*                                                                      69971780
.*       *---------------------------------------------------*          69972770
.*       *                  MEDIATYPE keyword                *          69973760
.*       *---------------------------------------------------*     @02a 69974750
         AIF  (&MEDTF(&NULLIX) EQ 1 OR                                 C69975740
               &MEDTF(&LITIX) EQ 1 ).NOMEDTTODO                    @02a 69976730
.*                                                                      69977720
         AIF  (&MEDTF(&REGIX) EQ 1 ).MEDTREGTODO                   @02a 69978710
         AIF  (&MEDTF(&RXFMTIX) EQ 1 ).MEDTRXFMTTODO               @02a 69979700
         AGO  .NOMEDTTODO                                          @02a 69980690
.*                                                                      69981680
.MEDTREGTODO   ANOP                                                @02A 69982670
         ST    &MEDIATYPE(1),24(1)    STORE MEDTYP PTR INTO PLIST  @02A 69983660
         AGO  .NOMEDTTODO                                          @02a 69984650
.*                                                                      69985640
.MEDTRXFMTTODO  ANOP                                               @02A 69986630
         LA    15,&MEDIATYPE          GET ADDR OF MEDTYP VARIABLE  @H2C 69987620
         ST    15,24(1)               STORE INTO PARM LIST         @H2C 69988610
.*                                                                      69989600
.NOMEDTTODO   ANOP                                                 @02a 69990590
.*                                                                      69991580
.*********************************************************************  70000000
.*                                                                   *  70050000
.*      ADD REG 15 SET AND SVC CALL CODE IF NOT LIST FORM            *  70100000
.*                                                                   *  70150000
.*********************************************************************  70200000
.SVCTEST ANOP                                                           70250000
         AIF  ('&MF(1)' EQ 'L').NOSVC      .* IF MF=L SKIP SVC          70300000
         AIF  ('&TEST' NE 'YES').NOTESTZ   .* IS TEST CODE REQUIRED     70350000
         L     15,12(0,1)                   GET POINTER TO UCB     @L1C 70372790
         TM    23(15),X'01'                 ABOVE THE LINE UCB?    @L1A 70382780
         BO    *+16                         BR IF YES              @L1A 70392770
         L     15,20(,15)                   PTR TO COMMON EXTEN    @L1A 70402760
         N     15,=X'00FFFFFF'              24BIT PTR RESET HI BYT @L1A 70412750
         B     *+20                         BR TO PERFORM TEST     @L1A 70422740
*        TARGET OF FIRST BRANCH                                    @L1A 70439600
         LR    0,15                         SAVE IN REG 0          @L1A 70462390
         L     15,20(,15)                   GET PTR TO COMMON XTN  @L1A 70472380
         N     15,=X'00000FFE'              ISOLATE PAGE OFFSET    @L1A 70482370
         N     0,=X'FFFFF000'               ISOL PG INFO OF UCB @  @L1A 70492360
         OR    15,0                         CREATE 31 BIT ADDRESS  @L1A 70502350
*        TARGET OF SECOND BRANCH                                   @L1A 70516400
         TM    UCBFL6-UCBCMEXT(15),X'40'    DEVICE HAVE A POD?     @L1C 70549190
         LA    15,4                         SET UP RETURN CODE     @L1M 70569180
         BNO   *+12              IF NOT SKIP SVC                        70600000
.NOTESTZ ANOP                                                           70650000
         SR    0,0                          ZERO REG 0                  70729990
         LA    15,30                        SET ROUTE  CODE             70759980
         SVC   109                                                      70800000
.NOSVC   ANOP                                                           70850000
         MEXIT                                                          70900000
.KEYCHK  ANOP                                                           70950000
.*                                                                      70953990
.*###################################################################*  70957980
.*###################################################################*  70961970
.*#                                                                 #*  70965960
.*#    CHECK OUT EACH KEYWORD THAT IS DEFINED TO HAVE ONE OF A SET  #*  70969950
.*#    OF SPECIFIC VALUES                                           #*  70973940
.*#                                                                 #*  70977930
.*###################################################################*  70981920
.*###################################################################*  70985910
.*                                                                      70989900
.*********************************************************************  71000000
.* The DCB keyword supports neither the quoted nor unquoted formats, *  71069990
.* so don't even call CHKSTR for the DCB keyword, remove call        *  71089980
.************************************************************** 3@02d*  71109970
.*                                                                      71129960
.*********************************************************************  71150000
.* The only relevant format for checking DISP here is the quoted     *  71399990
.* literal format.                                                   *  71599980
.*************************************************************** @02c*  71799970
       AIF (&DISPF(&LITIX) EQ 0).VLCKDISP                               71999960
       MSGDISP ,(CHKSTR,DISP,,&DISP),('D','K','R')                      72400000
.VLCKDISP ANOP                                                          72459990
.*                                                                      72469980
.*********************************************************************  72500000
.* The only relevant format for checking FLASH here is the unquoted  *  72559990
.* literal format.                                                   *  72569980
.*********************************************************************  72600000
       AIF (&FLASHF(&UNQUOTEIX) EQ 0).VLCKFLASH                    @02c 72631990
       MSGDISP ,(CHKSTR,FLASH,,&FLASH),                                C72633980
               (STEADY,STEADY2,BLINK,BLINK2,ALT)                        72635970
.VLCKFLASH ANOP                                                         72637960
.*                                                                      72639950
.*********************************************************************  72641940
.* The only relevant format for checking FORCE here is the unquoted  *  72643930
.* literal format.                                                   *  72645920
.*********************************************************************  72647910
       AIF (&FORCEF(&UNQUOTEIX) EQ 0).VLCKFORCE                         72649900
       MSGDISP  ,(CHKSTR,FORCE,,&FORCE),(NORMAL,QUIESCE,DAVV,          C72660000
               DDR,DYNPATH,UNCRSV,CHPRCVY,CHRCVY,FDEV,YES,NO,          C72690000
               1,2,3,4,5,6,7,8,9)                                  @H2C 72739990
.VLCKFORCE ANOP                                                         72759980
.*                                                                      72779970
.*********************************************************************  72800000
.* The INDEX keyword supports both the quoted and unquoted literal   *  72850990
.* formats, so have to extract the string so CHKSTR can check        *  72851980
.* against a single set of values.                                   *  72852970
.***************************************************************** @02a 72853960
       AIF (&INDEXF(&LITIX) EQ 0 AND                                   C72854950
               &INDEXF(&UNQUOTEIX) EQ 0).VLCKINDEXEXIT                  72855940
.*                                                                      72856930
.*       *---------------------------------------------------*          72857920
.*       *  Need the total length of the value               *          72858910
.*       *---------------------------------------------------*     @02a 72859900
&LENGTH  SETA  K'&INDEX                     Total length of value  @02a 72860890
.*                                                                      72861880
.*       *---------------------------------------------------*          72862870
.*       * If a quoted literal, pick up the value less the   *          72863860
.*       * quotes.                                           *          72864850
.*       *---------------------------------------------------*     @02a 72865840
         AIF   (&INDEXF(&LITIX) EQ 0).VLCKINDEXRX                  @02a 72866830
.*                                                                      72867820
&LENGTH  SETA  &LENGTH-2                    Less 2 quotes          @02a 72868810
&LITVALINDEX  SETC  '&INDEX'(2,&LENGTH)     Get the value          @02a 72869800
.*                                                                      72870790
         AGO  .VLCKINDEX                                           @02a 72871780
.*                                                                      72872770
.VLCKINDEXRX ANOP                                                  @02a 72873760
&LITVALINDEX SETC '&INDEX'                  Get the value          @02a 72874750
.*                                                                      72875740
.VLCKINDEX ANOP                                                    @02a 72876730
         MSGDISP ,(CHKSTR,INDEX,,&LITVALINDEX),(YES,NO)            @02c 72877720
.*                                                                      72878710
.VLCKINDEXEXIT ANOP                                                @02a 72879700
.*                                                                      72880690
.*********************************************************************  72900000
.* The only relevant format for checking LABEL here is the quoted    *  72959990
.* literal format.                                                   *  72969980
.*************************************************************** @02c*  72979970
       AIF (&LABELF(&LITIX) EQ 0).VLCKLABEL                             72989960
       MSGDISP ,(CHKSTR,LABEL,,&LABEL),('S','A','N','X')                72999950
.VLCKLABEL ANOP                                                         73009940
.*                                                                      73019930
.*********************************************************************  73100000
.* The only relevant format for checking MEDIATYPE LABEL here is     *  73151990
.* the quoted literal format.                                        *  73153980
.*************************************************************** @02a*  73155970
       AIF (&MEDTF(&LITIX) EQ 0).VLCKMEDIATYPEEXIT                 @02a 73157960
.*                                                                      73159950
.*       *---------------------------------------------------*          73161940
.*       *  Need the length of the string                    *          73163930
.*       *---------------------------------------------------*     @02a 73165920
&LENGTH  SETA  K'&MEDIATYPE                 Total length of value  @02a 73167910
&LENGTH  SETA  &LENGTH-2                    Less 2 quotes          @02a 73169900
.*                                                                      73171890
         MSGDISP ,(CHKLEN,MEDIATYPE,&LENGTH,&MEDTF(&LITIX),1)      @02a 73173880
         MSGDISP ,(CHKSTR,MEDIATYPE,,&MEDIATYPE),                      C73175870
               ('1','2','3','4','5','6','7','8','9','A','B','C',       C73177860
               'D','E','F')                                             73179850
.*                                                                      73181840
.VLCKMEDIATYPEEXIT ANOP                                            @02a 73183830
.*                                                                      73185820
.*********************************************************************  73200000
.* MF isn't checked here.                                            *  73250990
.***************************************************************** @02a 73251980
.*                                                                      73252970
.*********************************************************************  73253960
.* The only relevant format for checking MLABEL here is the quoted   *  73254950
.* literal format.                                                   *  73255940
.*************************************************************** @02c*  73256930
       AIF (&MLABELF(&LITIX) EQ 0).VLCKMLABEL                           73257920
       MSGDISP ,(CHKSTR,MLABEL,,&MLABEL),('S','A','N','X')              73258910
.VLCKMLABEL ANOP                                                        73259900
.*                                                                      73260890
.*********************************************************************  73261880
.* Although we don't check the value of the MSER operand, we do want *  73262870
.* to ensure it's length is 6 or less.                               *  73263860
.*************************************************************** @02c*  73264850
       AIF (&MSERF(&LITIX) EQ 0).VLCKMSER                               73265840
&LENGTH   SETA   K'&MSER                                                73266830
&LENGTH   SETA   &LENGTH-2                                              73267820
        MSGDISP  ,(CHKLEN,MSER,&LENGTH,&MSERF(&LITIX),6)                73268810
.VLCKMSER  ANOP                                                    @02a 73269800
.*                                                                      73270790
.*********************************************************************  73271780
.* Although we don't check the value of the SER operand, we do want  *  73272770
.* to ensure it's length is 6 or less.                               *  73273760
.*************************************************************** @02c*  73274750
       AIF (&SERF(&LITIX) EQ 0).VLCKSER                                 73275740
&LENGTH   SETA   K'&SER                                                 73276730
&LENGTH   SETA   &LENGTH-2                                              73277720
        MSGDISP  ,(CHKLEN,SER,&LENGTH,&SERF(&LITIX),6)                  73278710
.VLCKSER  ANOP                                                     @02a 73279700
.*                                                                      73280690
.*********************************************************************  73281680
.* The only relevant format for checking TEST here is the unquoted   *  73282670
.* literal format.                                                   *  73283660
.*********************************************************************  73284650
       AIF (&TESTF(&UNQUOTEIX) EQ 0).VLCKTEST                           73285640
       MSGDISP ,(CHKSTR,TEST,,&TEST),(YES,NO)                           73300000
.VLCKTEST ANOP                                                          73359990
.*                                                                      73369980
.*********************************************************************  73400000
.* Although we don't check the value of the TXT operand, we do want  *  73452990
.* to ensure it's length is 6 for RDY or 8 or less for GEN           *  73455980
.*************************************************************** @02c*  73458970
         AIF (&TXTF(&LITIX) EQ 0).VLCKTXT                               73461960
         AIF   ('&FUNCTON' NE 'RDY').TXTGEN                             73464950
&LENGTH   SETA   K'&TXT                                                 73467940
&LENGTH   SETA   &LENGTH-2                                              73470930
        MSGDISP  ,(CHKLEN,TXT,&LENGTH,&TXTF(&LITIX),6)                  73473920
         AGO  .VLCKTXT                                                  73476910
.TXTGEN   ANOP                                                          73479900
&LENGTH   SETA   K'&TXT                                                 73482890
&LENGTH   SETA   &LENGTH-2                                              73485880
        MSGDISP  ,(CHKLEN,TXT,&LENGTH,&TXTF(&LITIX),8)                  73488870
.VLCKTXT  ANOP                                                          73491860
.*                                                                      73494850
.*********************************************************************  73500000
.* Although we don't check the value of the TXT2 operand, we do want *  73569990
.* to ensure it's length is 6 for RDY or 8 or less for GEN           *  73589980
.*************************************************************** @02c*  73609970
         AIF (&TXT2F(&LITIX) EQ 0).VLCKTXT2                             73629960
&LENGTH   SETA   K'&TXT2                                                73649950
&LENGTH   SETA   &LENGTH-2                                              73669940
        MSGDISP  ,(CHKLEN,TXT2,&LENGTH,&TXT2F(&LITIX),8)                73689930
.VLCKTXT2 ANOP                                                          73709920
.*                                                                      73729910
.*********************************************************************  73750000
.* The UCB nor UCBL keywords support neither the quoted nor unquoted *  73809990
.* formats, so don't even call CHKSTR                                *  73819980
.************************************************************* 12@02d*  73829970
.*                                                                      73839960
.*********************************************************************  73850000
.* The only relevant format for checking VOL here is the unquoted    *  73909990
.* literal format.                                                   *  73919980
.*********************************************************************  73929970
       AIF (&VOLF(&UNQUOTEIX) EQ 0).VLCKVOL                             73939960
       MSGDISP ,(CHKSTR,VOL,,&VOL),                                    C73950000
               (STATIC,INSERT,REMOVE,SWAP)                              74000000
.VLCKVOL ANOP                                                           74069990
.*                                                                      74096200
.*********************************************************************  74100000
.* The only relevant format for checking WAIT here is the unquoted   *  74134990
.* literal format.                                                   *  74144980
.***************************************************************** @02a 74154970
         AIF (&WAITF(&UNQUOTEIX) EQ 0).VLCKWAIT                         74164960
         MSGDISP ,(CHKSTR,WAIT,,&WAIT),(YES,NO)                         74174950
.VLCKWAIT ANOP                                                     @02a 74184940
.*                                                                      74194930
.*###################################################################*  74204920
.*###################################################################*  74214910
.*#                                                                 #*  74224900
.*#    CHECK OUT EACH KEYWORD THAT HAS AN RX VALUE SPECIFIED AS     #*  74234890
.*#    ITS VALUE.                                                   #*  74244880
.*#                                                                 #*  74254870
.*###################################################################*  74264860
.*###################################################################*  74274850
.*                                                                      74284840
.*********************************************************************  74300000
.*                      DCB KEYWORD                                  *  74350000
.*********************************************************************  74400000
        AIF (&DCBF(&RXFMTIX) EQ 0).NOTRXDCB                        @02C 74499990
        MSGDISP  ,(CHKRX,DCB,&MF,&DCB,1)                                74550000
.NOTRXDCB ANOP                                                          74999990
.*                                                                      75399980
.*********************************************************************  75800000
.*                      DISP KEYWORD                                 *  75850000
.*********************************************************************  75900000
        AIF (&DISPF(&RXFMTIX) EQ 0).NOTRXDISP                     @03C  75999990
        MSGDISP  ,(CHKRX,DISP,&MF,&DISP,1)                              76050000
.NOTRXDISP  ANOP                                                        76109990
.*                                                                      76119980
.*********************************************************************  76150000
.*                      Index Keyword                            @02a*  76200000
.*********************************************************************  76250000
        AIF (&INDEXF(&RXFMTIX) EQ 0).NOTRXINDEX                         76999990
        MSGDISP  ,(CHKRX,INDEX,&MF,&INDEX,1)                            77699980
.NOTRXINDEX  ANOP                                                       78399970
.*                                                                      79099960
.*********************************************************************  79800000
.*                      LABEL KEYWORD                                *  79850000
.*********************************************************************  79900000
        AIF (&LABELF(&RXFMTIX) EQ 0).NOTRXLABEL                         79979990
        MSGDISP  ,(CHKRX,LABEL,&MF,&LABEL,1)                            80009980
.NOTRXLABEL  ANOP                                                       80039970
.*********************************************************************  80100000
.*                      MEDIATYPE Keyword                        @02a*  80150000
.*********************************************************************  80200000
        AIF (&MEDTF(&RXFMTIX) EQ 0).NOTRXMEDIATYPE                      80339990
        MSGDISP  ,(CHKRX,MEDIATYPE,&MF,&MEDIATYPE,1)                    80429980
.NOTRXMEDIATYPE  ANOP                                                   80519970
.*                                                                      80609960
.*********************************************************************  80700000
.*                      MLABEL KEYWORD                               *  80750000
.*********************************************************************  80800000
        AIF (&MLABELF(&RXFMTIX) EQ 0).NOTRXMLABEL                       80879990
        MSGDISP  ,(CHKRX,MLABEL,&MF,&MLABEL,1)                          80909980
.NOTRXMLABEL  ANOP                                                      80939970
.*********************************************************************  81000000
.*                      MSER KEYWORD                                 *  81050000
.*********************************************************************  81100000
        AIF (&MSERF(&RXFMTIX) EQ 0).NOTRXMSER                           81159990
        MSGDISP  ,(CHKRX,MSER,&MF,&MSER,1)                              81169980
.NOTRXMSER  ANOP                                                        81179970
.*                                                                      81189960
.*********************************************************************  81199950
.*                      SER   KEYWORD                                *  81209940
.*********************************************************************  81219930
        AIF (&SERF(&RXFMTIX) EQ 0).NOTRXSER                             81229920
        MSGDISP  ,(CHKRX,SER,&MF,&SER,1)                                81239910
.NOTRXSER  ANOP                                                         81249900
.*                                                                      81259890
.*********************************************************************  81300000
.*                      TXT KEYWORD                                  *  81350000
.*********************************************************************  81400000
        AIF (&TXTF(&RXFMTIX) EQ 0).NOTRXTXT                             81479990
        MSGDISP  ,(CHKRX,TXT,&MF,&TXT,1)                                81509980
.NOTRXTXT  ANOP                                                         81539970
.*                                                                      81569960
.*********************************************************************  81600000
.*                      TXT2 KEYWORD                                 *  81650000
.*********************************************************************  81700000
        AIF (&TXT2F(&RXFMTIX) EQ 0).NOTRXTXT2                           81779990
        MSGDISP  ,(CHKRX,TXT2,&MF,&TXT2,1)                              81809980
.NOTRXTXT2  ANOP                                                        81839970
.*                                                                      81869960
.*********************************************************************  81900000
.*                      UCBL KEYWORD                                 *  82049990
.*********************************************************************  82200000
        AIF (&UCBLF(&RXFMTIX) EQ 0).NOTRXUCBL                           82299990
        MSGDISP  ,(CHKRX,UCBL,&MF,&UCBL,1)                              82349980
.NOTRXUCBL  ANOP                                                        82399970
.*                                                                      82449960
.*###################################################################*  82499950
.*###################################################################*  82549940
.*#                                                                 #*  82599930
.*#    CHECK OUT EACH KEYWORD THAT HAS A REG SPECIFIED AS IT'S      #*  82649920
.*#    VALUE.                                                       #*  82699910
.*#                                                                 #*  82749900
.*###################################################################*  82799890
.*###################################################################*  82849880
.*                                                                 @02a 82899870
.*********************************************************************  82950000
.*                      DCB KEYWORD                                  *  83069990
.*********************************************************************  83150000
        AIF (&DCBF(&REGIX) EQ 0).NCHK1R                                 83150490
        MSGDISP  ,(CHKREG,DCB,&DCBF(&REG01IX),&DCB,0,0,1),&MF           83150980
.NCHK1R ANOP                                                            83151470
.*                                                                      83151960
.*********************************************************************  83152450
.*                      DISP KEYWORD                                 *  83152940
.*********************************************************************  83153430
        AIF (&DISPF(&REGIX) EQ 0).NCHK6R                                83153920
        MSGDISP  ,(CHKREG,DISP,&DISPF(&REG01IX),&DISP,0,0,1),&MF        83154410
.NCHK6R ANOP                                                            83154900
.*                                                                      83155390
.*********************************************************************  83155880
.*                      INDEX KEYWORD                                *  83156370
.*********************************************************************  83156860
        AIF (&INDEXF(&REGIX) EQ 0).NCHKFS                               83157350
        MSGDISP  ,(CHKREG,INDEX,&INDEXF(&REG01IX),&INDEX,0,0,1),&MF     83157840
.NCHKFS ANOP                                                            83158330
.*                                                                      83158820
.*********************************************************************  83159310
.*                      LABEL KEYWORD                                *  83159800
.*********************************************************************  83160290
        AIF (&LABELF(&REGIX) EQ 0).NCHK5R                               83160780
        MSGDISP  ,(CHKREG,LABEL,&LABELF(&REG01IX),&LABEL,0,0,1),&MF     83161270
.NCHK5R ANOP                                                            83161760
.*                                                                      83162250
.*********************************************************************  83162740
.*                      MEDIATYPE KEYWORD                            *  83163230
.*********************************************************************  83163720
        AIF (&MEDTF(&REGIX) EQ 0).NCHKFT                                83164210
        MSGDISP  ,(CHKREG,MEDIATYPE,                                   C83164700
               &MEDTF(&REG01IX),&MEDIATYPE,0,0,1),&MF                   83165190
.NCHKFT ANOP                                                            83165680
.*                                                                      83166170
.*********************************************************************  83166660
.*                      MLABEL KEYWORD                               *  83167150
.*********************************************************************  83167640
        AIF (&MLABELF(&REGIX) EQ 0).NCHK8R                              83168130
        MSGDISP  ,(CHKREG,MLABEL,&MLABELF(&REG01IX),&MLABEL,0,0,1),&MF  83168620
.NCHK8R ANOP                                                            83169110
.*                                                                      83169600
.*********************************************************************  83170090
.*                      MSER KEYWORD                                 *  83170580
.*********************************************************************  83171070
        AIF (&MSERF(&REGIX) EQ 0).NCHK7R                                83171560
        MSGDISP  ,(CHKREG,MSER,&MSERF(&REG01IX),&MSER,0,0,1),&MF        83172050
.NCHK7R ANOP                                                            83172540
.*                                                                      83173030
.*********************************************************************  83173520
.*                      SER KEYWORD                                  *  83174010
.*********************************************************************  83174500
        AIF (&SERF(&REGIX) EQ 0).NCHK4R                                 83174990
        MSGDISP  ,(CHKREG,SER,&SERF(&REG01IX),&SER,0,0,1),&MF           83175480
.NCHK4R ANOP                                                            83175970
.*                                                                      83176460
.*********************************************************************  83176950
.*                      TXT KEYWORD                                  *  83177440
.*********************************************************************  83177930
        AIF (&TXTF(&REGIX) EQ 0).NCHKER                                 83178420
        MSGDISP  ,(CHKREG,TXT,&TXTF(&REG01IX),&TXT,0,0,1),&MF           83178910
.NCHKER ANOP                                                            83179400
.*                                                                      83179890
.*********************************************************************  83180380
.*                      TXT2 KEYWORD                                 *  83180870
.*********************************************************************  83181360
        AIF (&TXT2F(&REGIX) EQ 0).NCHKFR                                83181850
        MSGDISP  ,(CHKREG,TXT2,&TXT2F(&REG01IX),&TXT2,0,0,1),&MF        83182340
.NCHKFR ANOP                                                            83182830
.*                                                                      83183320
.*********************************************************************  83183810
.*                      UCBL KEYWORD                                 *  83184300
.*********************************************************************  83184790
        AIF (&UCBLF(&REGIX) EQ 0).NCHK9R                                83185280
        MSGDISP  ,(CHKREG,UCBL,&UCBLF(&REG01IX),&UCBL,1,0,1),&MF        83185770
.NCHK9R ANOP                                                            83186260
.*                                                                      83186750
.*###################################################################*  83187240
.*###################################################################*  83187730
.*#                                                                 #*  83188220
.*#  CHECK OUT KEY WORDS THAT REQUIRE SPECIFIC SERVICE REQUESTS     #*  83188710
.*#                                                                 #*  83189200
.*###################################################################*  83189690
.*###################################################################*  83190180
.*                                                                      83190670
.*********************************************************************  83200000
.*              DISP KEYWORD                                         *  83250000
.*         FLAG AN ERROR IF DISP IS SPECIFIED AND NO SERVICE REQUEST *  83300000
.*********************************************************************  83350000
      AIF (&DISPF(&NULLIX) EQ 1).NCHKX                                  83400000
      AIF  ('&FUNCTON' NE '').NCHKX                                     83450000
&M    SETC     '''DISP IS AN INVALID KEYWORD FOR A NULL'                83500000
&M    SETC    '&M'.' SERVICE REQ.'''                                    83550000
      MNOTE 12,&M                                                       83600000
.NCHKX  ANOP                                                            83650000
.*                                                                      83669990
.*********************************************************************  83700000
.*                                                                   *  83750000
.*     FIRST FIND OUT WHICH SERVICE REQUEST IS BEING PROCESSED       *  83800000
.*                                                                   *  83850000
.*********************************************************************  83900000
&KNT    SETA   1                                                        83950000
.LOOP1  ANOP                                                            84000000
        AIF ('&SVCR(&KNT)' EQ '&FUNCTON').HIT                           84050000
&KNT    SETA   &KNT+1                                                   84129990
        AIF (&KNT LE 6).LOOP1                                           84159980
        AGO  .NULLSVR                                                   84200000
.HIT    ANOP                                                            84259990
.*                                                                      84269980
.*********************************************************************  84300000
.*                                                                   *  84350000
.*      NOW CHECK EACH KEYWORD THAT SHOULD BE NULL FOR NULL          *  84400000
.*                                                                   *  84450000
.*                      DCB KEYWORD                                  *  84650000
.*********************************************************************  84700000
        AIF ('&MAP(&KNT)'(1,1)  EQ '0').NCHK1                           84750000
        AIF (&DCBF(&NULLIX) EQ 1).NCHK1                                 84809990
.*                                                                      84819980
&M    SETC     '''DCB IS AN INVALID KEYWORD FOR '.'&FUNCTON'            84850000
&M    SETC    '&M'.' SERVICE REQ.'''                                    84900000
      MNOTE 12,&M                                                       84950000
.*                                                                      84969990
.NCHK1 ANOP                                                             85000000
.*                                                                      85949990
.*********************************************************************  86850000
.*                      DISP KEYWORD                                 *  86900000
.*********************************************************************  86950000
        AIF ('&MAP(&KNT)'(7,1)  EQ '0').NCHK7                           87000000
        AIF (&DISPF(&NULLIX) EQ 1).NCHK7                                87059990
.*                                                                      87069980
&M    SETC     '''DISP IS AN INVALID KEYWORD FOR '.'&FUNCTON'           87100000
&M    SETC    '&M'.' SERVICE REQ.'''                                    87150000
      MNOTE 12,&M                                                       87200000
.*                                                                      87219990
.NCHK7 ANOP                                                             87250000
.*                                                                      88299990
.*********************************************************************  90000000
.*                      FLASH KEYWORD                                *  90050000
.*********************************************************************  90100000
        AIF ('&MAP(&KNT)'(14,1)  EQ '0').NCHK14                         90150000
        AIF (&FLASHF(&NULLIX) EQ 1).NCHK14                              90209990
.*                                                                      90219980
&M    SETC     '''FLASH IS AN INVALID KEYWORD FOR '.'&FUNCTON'          90250000
&M    SETC    '&M'.' SERVICE REQ.'''                                    90300000
      MNOTE 12,&M                                                       90350000
.*                                                                      90369990
.NCHK14 ANOP                                                            90400000
.*                                                                      90419990
.*********************************************************************  90450000
.*                      FORCE KEYWORD                                *  90500000
.*********************************************************************  90550000
        AIF ('&MAP(&KNT)'(15,1)  EQ '0').NCHK15                         90600000
        AIF ('&FORCE' EQ '').NCHK15                                     90650000
.*                                                                      90669990
&M    SETC     '''FORCE IS AN INVALID KEYWORD FOR '.'&FUNCTON'          90700000
&M    SETC    '&M'.' SERVICE REQ.'''                                    90750000
      MNOTE 12,&M                                                       90800000
.*                                                                      90819990
.NCHK15 ANOP                                                            90850000
.*                                                                      90869990
.*********************************************************************  90900000
.*                      INDEX KEYWORD                                *  91149990
.*********************************************************************  91349980
.*                                                                      91764000
         AIF   ('&MAP(&KNT)'(18,1)  EQ '0').NCHK18                      91767500
         AIF   ('&INDEX' EQ '').NCHK18                                  91771000
.*                                                                      91774500
&M       SETC  '''INDEX IS AN INVALID KEYWORD FOR '.'&FUNCTON'          91778000
&M       SETC  '&M'.' SERVICE REQ.'''                                   91781500
.*                                                                      91785000
         MNOTE 12,&M                                                    91788500
.*                                                                      91792000
.NCHK18  ANOP                                                           91795500
.*                                                                      91797490
.*********************************************************************  91800000
.*                      LABEL KEYWORD                                *  91800290
.*********************************************************************  91800580
        AIF ('&MAP(&KNT)'(6,1)  EQ '0').NCHK6                           91800870
        AIF (&LABELF(&NULLIX) EQ 1).NCHK6                               91801160
.*                                                                      91801450
&M    SETC     '''LABEL IS AN INVALID KEYWORD FOR '.'&FUNCTON'          91801740
&M    SETC    '&M'.' SERVICE REQ.'''                                    91802030
      MNOTE 12,&M                                                       91802320
.*                                                                      91802610
.NCHK6 ANOP                                                             91802900
.*                                                                      91803190
.*********************************************************************  91803480
.*                      MEDIATYPE KEYWORD                            *  91803770
.*********************************************************************  91804060
.*                                                                      91804350
         AIF   ('&MAP(&KNT)'(19,1)  EQ '0').NCHK19                      91804640
         AIF   ('&MEDIATYPE' EQ '').NCHK19                              91804930
.*                                                                      91805220
&M       SETC  '''MEDIATYPE IS AN INVALID KEYWORD FOR '.'&FUNCTON'      91805510
&M       SETC  '&M'.' SERVICE REQ.'''                                   91805800
.*                                                                      91806090
         MNOTE 12,&M                                                    91806380
.*                                                                      91806670
.NCHK19  ANOP                                                           91806960
.*                                                                      91807250
.*********************************************************************  91807540
.*                      MF KEYWORD                                   *  91807830
.*********************************************************************  91808120
        AIF ('&MAP(&KNT)'(3,1)  EQ '0').NCHK3                           91808410
        AIF (&MFE(&NULLIX) EQ 1).NCHK3                                  91808700
.*                                                                      91808990
&M    SETC     '''MF IS AN INVALID KEYWORD FOR '.'&FUNCTON'             91809280
&M    SETC    '&M'.' SERVICE REQ.'''                                    91809570
      MNOTE 12,&M                                                       91809860
.*                                                                      91810150
.NCHK3 ANOP                                                             91810440
.*                                                                      91810730
.*********************************************************************  91811020
.*                      MLABEL KEYWORD                               *  91811310
.*********************************************************************  91811600
        AIF ('&MAP(&KNT)'(9,1)  EQ '0').NCHK9                           91811890
        AIF (&MLABELF(&NULLIX) EQ 1).NCHK9                              91812180
.*                                                                      91812470
&M    SETC     '''MLABEL IS AN INVALID KEYWORD FOR '.'&FUNCTON'         91812760
&M    SETC    '&M'.' SERVICE REQ.'''                                    91813050
      MNOTE 12,&M                                                       91813340
.*                                                                      91813630
.NCHK9 ANOP                                                             91813920
.*                                                                      91814210
.*********************************************************************  91814500
.*                      MSER KEYWORD                                 *  91814790
.*********************************************************************  91815080
        AIF ('&MAP(&KNT)'(8,1)  EQ '0').NCHK8                           91815370
        AIF (&MSERF(&NULLIX) EQ 1).NCHK8                                91815660
.*                                                                      91815950
&M    SETC     '''MSER IS AN INVALID KEYWORD FOR '.'&FUNCTON'           91816240
&M    SETC    '&M'.' SERVICE REQ.'''                                    91816530
      MNOTE 12,&M                                                       91816820
.*                                                                      91817110
.NCHK8 ANOP                                                             91817400
.*                                                                      91817690
.*********************************************************************  91817980
.*                      SER KEYWORD                                  *  91818270
.*********************************************************************  91818560
        AIF ('&MAP(&KNT)'(5,1)  EQ '0').NCHK5                           91818850
        AIF (&SERF(&NULLIX) EQ 1).NCHK5                                 91819140
.*                                                                      91819430
&M    SETC     '''SER IS AN INVALID KEYWORD FOR '.'&FUNCTON'            91819720
&M    SETC    '&M'.' SERVICE REQ.'''                                    91820010
      MNOTE 12,&M                                                       91820300
.*                                                                      91820590
.NCHK5 ANOP                                                             91820880
.*                                                                      91821170
.*********************************************************************  91821460
.*                      TEST KEYWORD                                 *  91821750
.*********************************************************************  91822040
        AIF ('&MAP(&KNT)'(17,1)  EQ '0').NCHK17                         91822330
        AIF ('&TEST' EQ '').NCHK17                                      91822620
.*                                                                      91822910
&M    SETC     '''TEST IS AN INVALID KEYWORD FOR '.'&FUNCTON'           91823200
&M    SETC    '&M'.' SERVICE REQ.'''                                    91823490
      MNOTE 12,&M                                                       91823780
.*                                                                      91824070
.NCHK17 ANOP                                                            91824360
.*                                                                      91824650
.*********************************************************************  91824940
.*                      TXT KEYWORD                                  *  91825230
.*********************************************************************  91825520
        AIF ('&MAP(&KNT)'(11,1)  EQ '0').NCHK11                         91825810
        AIF (&TXTF(&NULLIX) EQ 1).NCHK11                                91826100
.*                                                                      91826390
&M    SETC     '''TXT IS AN INVALID KEYWORD FOR '.'&FUNCTON'            91826680
&M    SETC    '&M'.' SERVICE REQ.'''                                    91826970
      MNOTE 12,&M                                                       91827260
.*                                                                      91827550
.NCHK11 ANOP                                                            91827840
.*                                                                      91828130
.*********************************************************************  91828420
.*                      TXT2 KEYWORD                                 *  91828710
.*********************************************************************  91829000
        AIF ('&MAP(&KNT)'(12,1)  EQ '0').NCHK12                         91829290
        AIF (&TXT2F(&NULLIX) EQ 1).NCHK12                               91829580
.*                                                                      91829870
&M    SETC     '''TXT2 IS AN INVALID KEYWORD FOR '.'&FUNCTON'           91830160
&M    SETC    '&M'.' SERVICE REQ.'''                                    91830450
      MNOTE 12,&M                                                       91830740
.*                                                                      91831030
.NCHK12 ANOP                                                            91831320
.*                                                                      91831610
.*********************************************************************  91831900
.*                      UCB KEYWORD                                  *  91832190
.*********************************************************************  91832480
        AIF ('&MAP(&KNT)'(4,1)  EQ '0').NCHK4                           91832770
        AIF (&UCBF(&NULLIX) EQ 1).NCHK4                                 91833060
.*                                                                      91833350
&M    SETC     '''UCB IS AN INVALID KEYWORD FOR '.'&FUNCTON'            91833640
&M    SETC    '&M'.' SERVICE REQ.'''                                    91833930
      MNOTE 12,&M                                                       91834220
.*                                                                      91834510
.NCHK4 ANOP                                                             91834800
.*                                                                      91835090
.*********************************************************************  91835380
.*                      UCBL KEYWORD                                 *  91835670
.*********************************************************************  91835960
        AIF ('&MAP(&KNT)'(10,1)  EQ '0').NCHK10                         91836250
        AIF (&UCBLF(&NULLIX) EQ 1).NCHK10                               91836540
.*                                                                      91836830
&M    SETC     '''UCBL IS AN INVALID KEYWORD FOR '.'&FUNCTON'           91837120
&M    SETC    '&M'.' SERVICE REQ.'''                                    91837410
      MNOTE 12,&M                                                       91837700
.*                                                                      91837990
.NCHK10 ANOP                                                            91838280
.*                                                                      91838570
.*********************************************************************  91838860
.*                      VOL KEYWORD                                  *  91839150
.*********************************************************************  91839440
        AIF ('&MAP(&KNT)'(13,1)  EQ '0').NCHK13                         91839730
        AIF (&VOLF(&NULLIX) EQ 1).NCHK13                                91840020
.*                                                                      91840310
&M    SETC     '''VOL IS AN INVALID KEYWORD FOR '.'&FUNCTON'            91840600
&M    SETC    '&M'.' SERVICE REQ.'''                                    91840890
      MNOTE 12,&M                                                       91841180
.*                                                                      91841470
.NCHK13 ANOP                                                            91841760
.*                                                                      91842050
.*********************************************************************  91842340
.*                      WAIT KEYWORD                                 *  91842630
.*********************************************************************  91842920
        AIF ('&MAP(&KNT)'(16,1)  EQ '0').NCHK16                         91843210
        AIF ('&WAIT' EQ '').NCHK16                                      91843500
.*                                                                      91843790
&M    SETC     '''WAIT IS AN INVALID KEYWORD FOR '.'&FUNCTON'           91844080
&M    SETC    '&M'.' SERVICE REQ.'''                                    91844370
      MNOTE 12,&M                                                       91844660
.*                                                                      91844950
.NCHK16 ANOP                                                            91845240
.*                                                                      91845530
.*###################################################################*  91845820
.*###################################################################*  91846110
.*                                                                   *  91850000
.* VERIFY EACH SERVICE REQUEST HAS REQUIRED KEYWORDS FOR NORMAL FORM *  91900000
.*                                                                   *  91950000
.*###################################################################*  92009990
.*###################################################################*  92019980
      AIF ('&MF' EQ 'L').RQOK                                           92050000
      AIF ('&MF(1)' EQ 'E').RQOK                                        92100000
      AIF ('&FUNCTON' NE 'RDY').STP1                                    92150000
      AIF (&DCBF(&NULLIX) EQ 0).RQOK                                    92200000
      MNOTE  12,'REQUIRED KEYWORD DCB MISSING'                          92250000
.STP1  ANOP                                                             92300000
      AIF ('&FUNCTON' NE 'MOUNT').STP2                                  92350000
      AIF (&UCBF(&NULLIX) EQ 0).RQOK                                    92400000
      MNOTE  12,'REQUIRED KEYWORD UCB MISSING'                          92450000
.STP2 ANOP                                                              92500000
      AIF ('&FUNCTON' NE 'VERIFY').STP3                                 92550000
      AIF (&UCBF(&NULLIX) EQ 0).RQOK                                    92600000
      MNOTE  12,'REQUIRED KEYWORD UCB MISSING'                          92650000
.STP3 ANOP                                                              92700000
      AIF ('&FUNCTON' NE 'DEMOUNT').STP4                        @H2C    92750000
      AIF (&UCBF(&NULLIX) EQ 0).RQOK                                    92800000
      MNOTE  12,'REQUIRED KEYWORD UCB MISSING'                          92850000
.STP4 ANOP                                                              92900000
      AIF ('&FUNCTON' NE 'RESET').STP5                                  92950000
      AIF (&UCBLF(&NULLIX) EQ 0 OR &UCBF(&NULLIX) EQ 0).RQOK            93000000
      MNOTE  12,'REQUIRED KEYWORD UCBL OR UCB MISSING'                  93050000
.STP5 ANOP                                                              93100000
      AIF ('&FUNCTON' NE 'GEN').RQOK                                    93150000
      AIF (&UCBF(&NULLIX) EQ 0).RQOK                                    93200000
      MNOTE  12,'REQUIRED KEYWORD UCB MISSING'                          93250000
.RQOK ANOP                                                              93300000
.*********************************************************************  93350000
.*     CHECK FOR MUTUALLY  EXCLUSIVE KEYWORDS                        *  93400000
.*********************************************************************  93450000
   AIF ( NOT (&UCBF(&NULLIX) EQ 0 AND &UCBLF(&NULLIX) EQ 0)).NULLSVR    93500000
      MNOTE  12,'MUTUALLY  EXCLUSIVE KEYWORDS UCB AND UCBL SPECIFIED'   93550000
.NULLSVR ANOP                                                           93600000
       AIF ( NOT (&TESTF(&NULLIX) EQ 0 AND '&MF(1)' EQ 'L')).OKKTF3     93650000
      MNOTE  12,'TEST KEYWORD IS MUTUALLY EXCLUSIVE WITH MF=L'          93700000
.OKKTF3 ANOP                                                            93750000
         AIF (NOT (&UCBLF(&NULLIX) EQ 0 AND '&TEST' EQ 'YES')).OKKTF2   93800000
      MNOTE  12,'TEST=YES IS MUTUALLY EXCLUSIVE WITH UCBL KEYWORD'      93850000
.OKKTF2  ANOP                                                           93900000
         AGO  .KEYCMP                                                   93950000
.*                                                                      93953990
.*###################################################################*  93957980
.*###################################################################*  93961970
.*#                                                                 #*  93965960
.*#                  REGCHK INNER MACRO ROUTINE                     #*  93969950
.*#                                                                 #*  93973940
.*#  IF THIS FUNCTION OF THIS MACRO IS INVOKED IT IS ASSUMED THAT   #*  93977930
.*#  THE &REGIX FLAG BIT OF THE PARAMETER IS EQUAL TO ONE (ON).     #*  93981920
.*###################################################################*  93985910
.*###################################################################*  93989900
.REGCHK  ANOP                                                           94000000
.*                                                                      94119990
.*       *---------------------------------------------------*          94189980
.*       * CHECK FOR MF=L WHEN NO REG IS VALID               *          94259970
.*       *---------------------------------------------------*          94329960
        AIF ('&SYSLIST(3)' EQ 'L').REGBAD                               94400000
.*                                                                      94479990
.*       *---------------------------------------------------*          94509980
.*       * CHECK FOR REG 13, 14, OR 15                       *          94539970
.*       *---------------------------------------------------*          94569960
         AIF ('&SYSLIST(2,4)' NE '(13)' AND                            C94599950
               '&SYSLIST(2,4)' NE '(14)' AND                           C94629940
               '&SYSLIST(2,4)' NE '(15)').REGOK1                        94700000
         AGO   .REGBAD                                                  94750000
.REGOK1  ANOP                                                           94800000
.*                                                                      94879990
.*       *---------------------------------------------------*          94909980
.*       * IS IT ZERO AND IS ZERO VALID                      *          94939970
.*       *---------------------------------------------------*          94969960
     AIF ('&SYSLIST(2,4)' EQ '(0)' AND &SYSLIST(2,5) EQ 1).REGOK2       95000000
.*                                                                      95079990
.*       *---------------------------------------------------*          95109980
.*       * IS IT ONE AND IS ONE VALID                        *          95139970
.*       *---------------------------------------------------*          95169960
     AIF ('&SYSLIST(2,4)' EQ '(1)' AND &SYSLIST(2,6) EQ 1).REGOK2       95200000
.*                                                                      95279990
.*       *---------------------------------------------------*          95309980
.*       * IS IT NOT ONE OR ZERO AND IS A REG (2-12) VALID   *          95339970
.*       *---------------------------------------------------*          95369960
     AIF (&SYSLIST(2,3) EQ 0   AND &SYSLIST(2,7) EQ 1).REGOK2           95400000
.*                                                                      95479990
.*       *---------------------------------------------------*          95509980
.*       * NO FLAG IT AS ERROR                               *          95539970
.*       *---------------------------------------------------*          95569960
         AGO   .REGBAD                                                  95600000
.*                                                                      95669990
.*###################################################################*  95689980
.*###################################################################*  95709970
.*#                                                                 #*  95729960
.*#                  RXCHK INNER MACRO ROUTINE                      #*  95749950
.*#                                                                 #*  95769940
.*#  THIS ROUTINE IS INVOKED IF THE KEYWORD IS OF THE RX FORMAT     #*  95789930
.*###################################################################*  95809920
.*###################################################################*  95829910
.RXCHK   ANOP                                                           95850000
.*                                                                      95929990
.*       *---------------------------------------------------*          95959980
.*       * VERIFY THAT THIS IS NOT A LIST FORM OF MACRO      *          95989970
.*       * RX FORM IS NEVER VALID WITH MF=L.                 *          96019960
.*       *---------------------------------------------------*          96049950
         AIF ('&SYSLIST(2,3)' EQ 'L').REGBAD                            96100000
.*                                                                      96179990
.*       *---------------------------------------------------*          96209980
.*       * VERIFY THAT RX IS VALID FOR THIS MACRO            *          96239970
.*       *---------------------------------------------------*          96269960
         AIF (&SYSLIST(2,5) EQ 0).REGBAD                                96300000
         AGO .REGOK2                                                    96350000
.*                                                                      96409990
.*###################################################################*  96419980
.*###################################################################*  96429970
.*#                                                                 #*  96439960
.*#                  CHRST INNER MACRO ROUTINE                      #*  96449950
.*#                                                                 #*  96459940
.*#   THIS ROUTINE DETERMINES IF THE VALUE OF A PASSED IN STRING    #*  96469930
.*#   IS EQUAL TO ONE OF A LIST OF PASSED IN VALUES                 #*  96479920
.*###################################################################*  96489910
.*###################################################################*  96499900
.CHRST   ANOP                                                           96600000
.*                                                                      96689990
.*       *---------------------------------------------------*          96729980
.*       * DEFINE A LOOP VARIABLE AND SET IT                 *          96769970
.*       *---------------------------------------------------*          96809960
&J       SETA    1                                                      96850000
.CSLUUP  ANOP                                                           96900000
.*                                                                      96979990
.*       *---------------------------------------------------*          97009980
.*       * HAVE WE RUN OUT OF VALID STRINGS                  *          97039970
.*       *---------------------------------------------------*          97069960
         AIF ('&SYSLIST(3,&J)' EQ '').REGBAD                            97100000
.*                                                                      97169990
.*       *---------------------------------------------------*          97189980
.*       * DO WE HAVE A VALID STRING YET                     *          97209970
.*       *---------------------------------------------------*          97229960
.*                                                                      97249950
         AIF ('&SYSLIST(3,&J)' EQ  '&SYSLIST(2,4)').REGOK2              97300000
&J       SETA    &J+1                                                   97350000
.*                                                                      97429990
.*       *---------------------------------------------------*          97459980
.*       * GO LOOK AT NEXT  STRING                           *          97489970
.*       *---------------------------------------------------*          97519960
         AGO   .CSLUUP                                                  97550000
.REGBAD  ANOP                                                           97600000
         LCLC  &M2                                                      97650000
         AIF   ('&SYSLIST(2,4)'(1,1) NE '''' OR                        C97700000
               '&SYSLIST(2,4)'(K'&SYSLIST(2,4),1) NE '''').NOLITZ       97750000
&M2      SETC    ''''.'&SYSLIST(2,4)'.''''                              97800000
         AGO    .YESLIT                                                 97850000
.NOLITZ  ANOP                                                           97900000
&M2      SETC   '&SYSLIST(2,4)'                                         97950000
.YESLIT  ANOP                                                           98000000
&M2      SETC  ''''.'&M2'.' INVALID FOR '                               98050000
&M2      SETC   '&M2'.'&SYSLIST(2,2)'.' KEYWORD'''                      98100000
      MNOTE  12,&M2                                                     98150000
.REGOK2  ANOP                                                           98200000
         MEXIT                                                          98250000
.*                                                                      98253990
.*###################################################################*  98257980
.*###################################################################*  98261970
.*#                                                                 #*  98265960
.*#                 LENCHK INNER MACRO ROUTINE                      #*  98269950
.*#                                                                 #*  98273940
.*#   THIS ROUTINE ENSURES THE LENGTH OF A PASSED IN STRING DOES    #*  98277930
.*#   NOT EXCEED A PASSED IN VALUE                                  #*  98281920
.*###################################################################*  98285910
.*###################################################################*  98289900
.LENCHK  ANOP                                                           98300000
.*                                                                      98359990
.*       *---------------------------------------------------*          98369980
.*       * IF NOT A LITERAL OR LENGTH VALID EXIT             *          98379970
.*       *---------------------------------------------------*     @02a 98389960
          AIF (&SYSLIST(2,4) EQ 0 OR                                   C98399950
               &SYSLIST(2,3) LE &SYSLIST(2,5)).LENT1                    98409940
.*                                                                      98419930
&M2      SETC    ''''.'&SYSLIST(2,2)'                                   98450000
&M2      SETC   '&M2'.' LENGTH OF '.'&SYSLIST(2,3)'.' INVALID'''        98500000
      MNOTE  12,&M2                                                     98550000
.LENT1   ANOP                                                           98600000
         MEXIT                                                          98650000
.*                                                                      98650090
.*###################################################################*  98650180
.*###################################################################*  98650270
.*#                                                                 #*  98650360
.*#                 CHKFMT INNER MACRO ROUTINE                      #*  98650450
.*#                                                                 #*  98650540
.*#   This routine ensures the format specified for the passed in   #*  98650630
.*#   keyword is, in fact, supported.  Added with MTL support.  @02a#*  98650720
.*###################################################################*  98650810
.*###################################################################*  98650900
.FMTCHK  ANOP                                                           98650990
.*                                                                      98651080
         LCLA  &LPCTR,&FLGCTR               Local counters              98651170
         LCLC  &FMTTYP,&MSG                 Used in building errmsg     98651260
.*                                                                      98651350
.*       *---------------------------------------------------*          98651440
.*       * This subroutine validates the format of the       *          98651530
.*       * operand specified for the keyword.                *          98651620
.*       *---------------------------------------------------*          98651710
&FLGCTR  SETA 0                                                         98651800
&LPCTR   SETA 1                                                         98651890
.FLOOP   ANOP                                                           98651980
.*                                                                      98652070
.*       *---------------------------------------------------*          98652160
.*       * Determine which keyword we're working with and    *          98652250
.*       * check its related flag settings.  Count them up.  *          98652340
.*       *---------------------------------------------------*          98652430
         AIF ('&SYSLIST(2,2)' NE 'DCB').NOTDCB                          98652520
         AIF (&DCBF(&LPCTR) NE 1).INCREM                                98652610
&FLGCTR  SETA &FLGCTR+1                                                 98652700
         AGO  .INCREM                                                   98652790
.NOTDCB  ANOP                                                           98652880
         AIF ('&SYSLIST(2,2)' NE 'DISP').NOTDISP                        98652970
         AIF (&DISPF(&LPCTR) NE 1).INCREM                               98653060
&FLGCTR  SETA &FLGCTR+1                                                 98653150
         AGO  .INCREM                                                   98653240
.NOTDISP ANOP                                                           98653330
         AIF ('&SYSLIST(2,2)' NE 'FLASH').NOTFLASH                      98653420
         AIF (&FLASHF(&LPCTR) NE 1).INCREM                              98653510
&FLGCTR  SETA &FLGCTR+1                                                 98653600
         AGO  .INCREM                                                   98653690
.NOTFLASH ANOP                                                          98653780
         AIF ('&SYSLIST(2,2)' NE 'FORCE').NOTFORCE                      98653870
         AIF (&FORCEF(&LPCTR) NE 1).INCREM                              98653960
&FLGCTR  SETA &FLGCTR+1                                                 98654050
         AGO  .INCREM                                                   98654140
.NOTFORCE ANOP                                                          98654230
         AIF ('&SYSLIST(2,2)' NE 'INDEX').NOTINDEX                      98654320
         AIF (&INDEXF(&LPCTR) NE 1).INCREM                              98654410
&FLGCTR  SETA &FLGCTR+1                                                 98654500
         AGO  .INCREM                                                   98654590
.NOTINDEX ANOP                                                          98654680
         AIF ('&SYSLIST(2,2)' NE 'LABEL').NOTLABEL                      98654770
         AIF (&LABELF(&LPCTR) NE 1).INCREM                              98654860
&FLGCTR  SETA &FLGCTR+1                                                 98654950
         AGO  .INCREM                                                   98655040
.NOTLABEL ANOP                                                          98655130
         AIF ('&SYSLIST(2,2)' NE 'MEDT').NOTMEDT                        98655220
         AIF (&MEDTF(&LPCTR) NE 1).INCREM                               98655310
&FLGCTR  SETA &FLGCTR+1                                                 98655400
         AGO  .INCREM                                                   98655490
.NOTMEDT  ANOP                                                          98655580
         AIF ('&SYSLIST(2,2)' NE 'MF').NOTMF                            98655670
         AIF (&MFE(&LPCTR) NE 1).INCREM                                 98655760
&FLGCTR  SETA &FLGCTR+1                                                 98655850
         AGO  .INCREM                                                   98655940
.NOTMF    ANOP                                                          98656030
         AIF ('&SYSLIST(2,2)' NE 'MLABEL').NOTMLABEL                    98656120
         AIF (&MLABELF(&LPCTR) NE 1).INCREM                             98656210
&FLGCTR  SETA &FLGCTR+1                                                 98656300
         AGO  .INCREM                                                   98656390
.NOTMLABEL ANOP                                                         98656480
         AIF ('&SYSLIST(2,2)' NE 'MSER').NOTMSER                        98656570
         AIF (&MSERF(&LPCTR) NE 1).INCREM                               98656660
&FLGCTR  SETA &FLGCTR+1                                                 98656750
         AGO  .INCREM                                                   98656840
.NOTMSER   ANOP                                                         98656930
         AIF ('&SYSLIST(2,2)' NE 'SER').NOTSER                          98657020
         AIF (&SERF(&LPCTR) NE 1).INCREM                                98657110
&FLGCTR  SETA &FLGCTR+1                                                 98657200
         AGO  .INCREM                                                   98657290
.NOTSER    ANOP                                                         98657380
         AIF ('&SYSLIST(2,2)' NE 'TEST').NOTTEST                        98657470
         AIF (&TESTF(&LPCTR) NE 1).INCREM                               98657560
&FLGCTR  SETA &FLGCTR+1                                                 98657650
         AGO  .INCREM                                                   98657740
.NOTTEST   ANOP                                                         98657830
         AIF ('&SYSLIST(2,2)' NE 'TXT').NOTTXT                          98657920
         AIF (&TXTF(&LPCTR) NE 1).INCREM                                98658010
&FLGCTR  SETA &FLGCTR+1                                                 98658100
         AGO  .INCREM                                                   98658190
.NOTTXT    ANOP                                                         98658280
         AIF ('&SYSLIST(2,2)' NE 'TXT2').NOTTXT2                        98658370
         AIF (&TXT2F(&LPCTR) NE 1).INCREM                               98658460
&FLGCTR  SETA &FLGCTR+1                                                 98658550
         AGO  .INCREM                                                   98658640
.NOTTXT2   ANOP                                                         98658730
         AIF ('&SYSLIST(2,2)' NE 'UCB').NOTUCB                          98658820
         AIF (&UCBF(&LPCTR) NE 1).INCREM                                98658910
&FLGCTR  SETA &FLGCTR+1                                                 98659000
         AGO  .INCREM                                                   98659090
.NOTUCB    ANOP                                                         98659180
         AIF ('&SYSLIST(2,2)' NE 'UCBL').NOTUCBL                        98659270
         AIF (&UCBLF(&LPCTR) NE 1).INCREM                               98659360
&FLGCTR  SETA &FLGCTR+1                                                 98659450
         AGO  .INCREM                                                   98659540
.NOTUCBL   ANOP                                                         98659630
         AIF ('&SYSLIST(2,2)' NE 'VOL').NOTVOL                          98659720
         AIF (&VOLF(&LPCTR) NE 1).INCREM                                98659810
&FLGCTR  SETA &FLGCTR+1                                                 98659900
         AGO  .INCREM                                                   98659990
.NOTVOL    ANOP                                                         98660080
         AIF ('&SYSLIST(2,2)' NE 'WAIT').NOTWAIT                        98660170
         AIF (&WAITF(&LPCTR) NE 1).INCREM                               98660260
&FLGCTR  SETA &FLGCTR+1                                                 98660350
         AGO  .INCREM                                                   98660440
.NOTWAIT   ANOP                                                         98660530
.*                                                                      98660620
.INCREM    ANOP                                                         98660710
&LPCTR    SETA &LPCTR+1                     Increment loop counter      98660800
         AIF (&LPCTR LE &HIGHIX).FLOOP                                  98660890
.*                                                                      98660980
.*       *---------------------------------------------------*          98661070
.*       * The flags that are set in the 'F' array for the   *          98661160
.*       * current keyword have been counted up.  There can  *          98661250
.*       * be only 1 flag set, with the exception that if    *          98661340
.*       * REG01 is set, the REG is also set.  All other     *          98661430
.*       * combinations are an ERROR.                        *          98661520
.*       *                                                   *          98661610
.*       * We check here for the number of flags set and     *          98661700
.*       * respond accordingly.                              *          98661790
.*       *                                                   *          98661880
.*       * If 2 flags are set we branch to the code that     *          98661970
.*       * ensures that they are REG and REG01.  If they     *          98662060
.*       * REG and REG01 we go to the code that determines   *          98662150
.*       * whether they are supported for the keyword.       *          98662240
.*       *                                                   *          98662330
.*       * If only 1 flag is set we go directly to the code  *          98662420
.*       * that determines whether the format is supported   *          98662510
.*       * for the keyword.                                  *          98662600
.*       *                                                   *          98662690
.*       * All other settings are an error.                  *          98662780
.*       *---------------------------------------------------*          98662870
         AIF (&FLGCTR EQ 2).CHK2FLGS                                    98662960
         AIF (&FLGCTR EQ 1).CHK1FLGS                                    98663050
.*                                                                      98663140
.CHK2FLGS ANOP                                                          98663230
.*       *---------------------------------------------------*          98663320
.*       * 2 flags are set, better be REG and REG01 or ERROR.*          98663410
.*       *                                                   *          98663500
.*       * Check for debug request first                     *          98663590
.*       *---------------------------------------------------*          98663680
         AIF (&SYSLIST(2,3) EQ 1).NODEBUGCK2F                           98663770
.NODEBUGCK2F ANOP                                                       98663860
.*                                                                      98663950
         AIF ('&SYSLIST(2,2)' NE 'DCB').NOTDCB3                         98664040
         AIF (&DCBF(&REGIX) EQ 1 AND                                   C98664130
               &DCBF(&REG01IX) EQ 1).CHK1FLGS                           98664220
         AGO .INVLCOMB                                                  98664310
.NOTDCB3 ANOP                                                           98664400
         AIF ('&SYSLIST(2,2)' NE 'DISP').NOTDISP3                       98664490
         AIF (&DISPF(&REGIX) EQ 1 AND                                  C98664580
               &DISPF(&REG01IX) EQ 1).CHK1FLGS                          98664670
         AGO .INVLCOMB                                                  98664760
.NOTDISP3 ANOP                                                          98664850
         AIF ('&SYSLIST(2,2)' NE 'FLASH').NOTFLASH3                     98664940
         AIF (&FLASHF(&REGIX) EQ 1 AND                                 C98665030
               &FLASHF(&REG01IX) EQ 1).CHK1FLGS                         98665120
         AGO .INVLCOMB                                                  98665210
.NOTFLASH3 ANOP                                                         98665300
         AIF ('&SYSLIST(2,2)' NE 'FORCE').NOTFORCE3                     98665390
         AIF (&FORCEF(&REGIX) EQ 1 AND                                 C98665480
               &FORCEF(&REG01IX) EQ 1).CHK1FLGS                         98665570
         AGO .INVLCOMB                                                  98665660
.NOTFORCE3 ANOP                                                         98665750
         AIF ('&SYSLIST(2,2)' NE 'INDEX').NOTINDEX3                     98665840
         AIF (&INDEXF(&REGIX) EQ 1 AND                                 C98665930
               &INDEXF(&REG01IX) EQ 1).CHK1FLGS                         98666020
         AGO .INVLCOMB                                                  98666110
.NOTINDEX3 ANOP                                                         98666200
         AIF ('&SYSLIST(2,2)' NE 'LABEL').NOTLABEL3                     98666290
         AIF (&LABELF(&REGIX) EQ 1 AND                                 C98666380
               &LABELF(&REG01IX) EQ 1).CHK1FLGS                         98666470
         AGO .INVLCOMB                                                  98666560
.NOTLABEL3 ANOP                                                         98666650
         AIF ('&SYSLIST(2,2)' NE 'MEDT').NOTMEDT3                       98666740
         AIF (&MEDTF(&REGIX) EQ 1 AND                                  C98666830
               &MEDTF(&REG01IX) EQ 1).CHK1FLGS                          98666920
         AGO .INVLCOMB                                                  98667010
.NOTMEDT3  ANOP                                                         98667100
         AIF ('&SYSLIST(2,2)' NE 'MF').NOTMF3                           98667190
         AIF (&MFE(&REGIX) EQ 1 AND                                    C98667280
               &MFE(&REG01IX) EQ 1).CHK1FLGS                            98667370
         AGO .INVLCOMB                                                  98667460
.NOTMF3    ANOP                                                         98667550
         AIF ('&SYSLIST(2,2)' NE 'MLABEL').NOTMLABEL3                   98667640
         AIF (&MLABELF(&REGIX) EQ 1 AND                                C98667730
               &MLABELF(&REG01IX) EQ 1).CHK1FLGS                        98667820
         AGO .INVLCOMB                                                  98667910
.NOTMLABEL3 ANOP                                                        98668000
         AIF ('&SYSLIST(2,2)' NE 'MSER').NOTMSER3                       98668090
         AIF (&MSERF(&REGIX) EQ 1 AND                                  C98668180
               &MSERF(&REG01IX) EQ 1).CHK1FLGS                          98668270
         AGO .INVLCOMB                                                  98668360
.NOTMSER3   ANOP                                                        98668450
         AIF ('&SYSLIST(2,2)' NE 'SER').NOTSER3                         98668540
         AIF (&SERF(&REGIX) EQ 1 AND                                   C98668630
               &SERF(&REG01IX) EQ 1).CHK1FLGS                           98668720
         AGO .INVLCOMB                                                  98668810
.NOTSER3    ANOP                                                        98668900
         AIF ('&SYSLIST(2,2)' NE 'TEST').NOTTEST3                       98668990
         AIF (&TESTF(&REGIX) EQ 1 AND                                  C98669080
               &TESTF(&REG01IX) EQ 1).CHK1FLGS                          98669170
         AGO .INVLCOMB                                                  98669260
.NOTTEST3   ANOP                                                        98669350
         AIF ('&SYSLIST(2,2)' NE 'TXT').NOTTXT3                         98669440
         AIF (&TXTF(&REGIX) EQ 1 AND                                   C98669530
               &TXTF(&REG01IX) EQ 1).CHK1FLGS                           98669620
         AGO .INVLCOMB                                                  98669710
.NOTTXT3   ANOP                                                         98669800
         AIF ('&SYSLIST(2,2)' NE 'TXT2').NOTTXT23                       98669890
         AIF (&TXT2F(&REGIX) EQ 1 AND                                  C98669980
               &TXT2F(&REG01IX) EQ 1).CHK1FLGS                          98670070
         AGO .INVLCOMB                                                  98670160
.NOTTXT23  ANOP                                                         98670250
         AIF ('&SYSLIST(2,2)' NE 'UCB').NOTUCB3                         98670340
         AIF (&UCBF(&REGIX) EQ 1 AND                                   C98670430
               &UCBF(&REG01IX) EQ 1).CHK1FLGS                           98670520
         AGO .INVLCOMB                                                  98670610
.NOTUCB3   ANOP                                                         98670700
         AIF ('&SYSLIST(2,2)' NE 'UCBL').NOTUCBL3                       98670790
         AIF (&UCBLF(&REGIX) EQ 1 AND                                  C98670880
               &UCBLF(&REG01IX) EQ 1).CHK1FLGS                          98670970
         AGO .INVLCOMB                                                  98671060
.NOTUCBL3  ANOP                                                         98671150
         AIF ('&SYSLIST(2,2)' NE 'VOL').NOTVOL3                         98671240
         AIF (&VOLF(&REGIX) EQ 1 AND                                   C98671330
               &VOLF(&REG01IX) EQ 1).CHK1FLGS                           98671420
         AGO .INVLCOMB                                                  98671510
.NOTVOL3   ANOP                                                         98671600
         AIF ('&SYSLIST(2,2)' NE 'WAIT').NOTWAIT3                       98671690
         AIF (&WAITF(&REGIX) EQ 1 AND                                  C98671780
               &WAITF(&REG01IX) EQ 1).CHK1FLGS                          98671870
         AGO .INVLCOMB                                                  98671960
.NOTWAIT3  ANOP                                                         98672050
.*                                                                      98672140
.*                                                                      98672230
.CHK1FLGS  ANOP                                                         98672320
.*       *---------------------------------------------------*          98672410
.*       * Determine which keyword we're working with and    *          98672500
.*       * check what was set in the macro invocation with   *          98672590
.*       * what is allowed for the keyword.  Any unsupported *          98672680
.*       * flags will result in an MNOTE 12.                 *          98672770
.*       *---------------------------------------------------*          98672860
&LPCTR   SETA 1                                                         98672950
.FLOOP2  ANOP                                                           98673040
.*       *---------------------------------------------------*          98673130
.*       * Set the format type in case we need to build an   *          98673220
.*       * error message.                                    *          98673310
.*       *---------------------------------------------------*          98673400
         AIF  (&LPCTR NE &NULLIX).NOTNULLIX                             98673490
&FMTTYP  SETC ' NULL '                                                  98673580
         AGO  .CONTCHK1                                                 98673670
.*                                                                      98673760
.NOTNULLIX  ANOP                                                        98673850
         AIF  (&LPCTR NE &LITIX).NOTLITIX                               98673940
&FMTTYP  SETC ' QUOTED LITERAL '                                        98674030
         AGO  .CONTCHK1                                                 98674120
.*                                                                      98674210
.NOTLITIX   ANOP                                                        98674300
         AIF  (&LPCTR NE &REGIX).NOTREGIX                               98674390
&FMTTYP  SETC ' REGISTER (2-12) '                                       98674480
         AGO  .CONTCHK1                                                 98674570
.*                                                                      98674660
.NOTREGIX   ANOP                                                        98674750
         AIF  (&LPCTR NE &REG01IX).NOTREG01IX                           98674840
&FMTTYP  SETC ' REGISTER (0 OR 1) '                                     98674930
         AGO  .CONTCHK1                                                 98675020
.*                                                                      98675110
.NOTREG01IX   ANOP                                                      98675200
         AIF  (&LPCTR NE &ADCONIX).NOTADCONIX                           98675290
&FMTTYP  SETC ' ADCON '                                                 98675380
         AGO  .CONTCHK1                                                 98675470
.*                                                                      98675560
.NOTADCONIX   ANOP                                                      98675650
         AIF  (&LPCTR NE &RXFMTIX).NOTRXFMTIX                           98675740
&FMTTYP  SETC ' RX '                                                    98675830
         AGO  .CONTCHK1                                                 98675920
.*                                                                      98676010
.NOTRXFMTIX   ANOP                                                      98676100
         AIF  (&LPCTR NE &UNQUOTEIX).NOTUNQUOTEIX                       98676190
&FMTTYP  SETC ' UNQUOTED LITERAL '                                      98676280
         AGO  .CONTCHK1                                                 98676370
.*                                                                      98676460
.NOTUNQUOTEIX ANOP                                                      98676550
.*                                                                      98676640
.CONTCHK1  ANOP                                                         98676730
         AIF ('&SYSLIST(2,2)' NE 'DCB').NOTDCB2                         98676820
         AIF (&DCBF(&LPCTR) EQ 1 AND                                   C98676910
               '&FMT(&DCBIX)'(&LPCTR,1) NE '1').UNSUPFMT                98677000
         AGO  .INCREM2                                                  98677090
.NOTDCB2 ANOP                                                           98677180
         AIF ('&SYSLIST(2,2)' NE 'DISP').NOTDISP2                       98677270
         AIF (&DISPF(&LPCTR) EQ 1 AND                                  C98677360
               '&FMT(&DISPIX)'(&LPCTR,1) NE '1').UNSUPFMT               98677450
         AGO  .INCREM2                                                  98677540
.NOTDISP2 ANOP                                                          98677630
         AIF ('&SYSLIST(2,2)' NE 'FLASH').NOTFLASH2                     98677720
         AIF (&FLASHF(&LPCTR) EQ 1 AND                                 C98677810
               '&FMT(&FLASHIX)'(&LPCTR,1) NE '1').UNSUPFMT              98677900
         AGO  .INCREM2                                                  98677990
.NOTFLASH2 ANOP                                                         98678080
         AIF ('&SYSLIST(2,2)' NE 'FORCE').NOTFORCE2                     98678170
         AIF (&FORCEF(&LPCTR) EQ 1 AND                                 C98678260
               '&FMT(&FORCEIX)'(&LPCTR,1) NE '1').UNSUPFMT              98678350
         AGO  .INCREM2                                                  98678440
.NOTFORCE2 ANOP                                                         98678530
         AIF ('&SYSLIST(2,2)' NE 'INDEX').NOTINDEX2                     98678620
         AIF (&INDEXF(&LPCTR) EQ 1 AND                                 C98678710
               '&FMT(&INDEXIX)'(&LPCTR,1) NE '1').UNSUPFMT              98678800
         AGO  .INCREM2                                                  98678890
.NOTINDEX2 ANOP                                                         98678980
         AIF ('&SYSLIST(2,2)' NE 'LABEL').NOTLABEL2                     98679070
         AIF (&LABELF(&LPCTR) EQ 1 AND                                 C98679160
               '&FMT(&LABELIX)'(&LPCTR,1) NE '1').UNSUPFMT              98679250
         AGO  .INCREM2                                                  98679340
.NOTLABEL2 ANOP                                                         98679430
         AIF ('&SYSLIST(2,2)' NE 'MEDT').NOTMEDT2                       98679520
         AIF (&MEDTF(&LPCTR) EQ 1 AND                                  C98679610
               '&FMT(&MEDTIX)'(&LPCTR,1) NE '1').UNSUPFMT               98679700
         AGO  .INCREM2                                                  98679790
.NOTMEDT2  ANOP                                                         98679880
         AIF ('&SYSLIST(2,2)' NE 'MF').NOTMF2                           98679970
         AIF (&MFE(&LPCTR) EQ 1 AND                                    C98680060
               '&FMT(&MFIX)'(&LPCTR,1) NE '1').UNSUPFMT                 98680150
         AGO  .INCREM2                                                  98680240
.NOTMF2    ANOP                                                         98680330
         AIF ('&SYSLIST(2,2)' NE 'MLABEL').NOTMLABEL2                   98680420
         AIF (&MLABELF(&LPCTR) EQ 1 AND                                C98680510
               '&FMT(&MLABELIX)'(&LPCTR,1) NE '1').UNSUPFMT             98680600
         AGO  .INCREM2                                                  98680690
.NOTMLABEL2 ANOP                                                        98680780
         AIF ('&SYSLIST(2,2)' NE 'MSER').NOTMSER2                       98680870
         AIF (&MSERF(&LPCTR) EQ 1 AND                                  C98680960
               '&FMT(&MSERIX)'(&LPCTR,1) NE '1').UNSUPFMT               98681050
         AGO  .INCREM2                                                  98681140
.NOTMSER2   ANOP                                                        98681230
         AIF ('&SYSLIST(2,2)' NE 'SER').NOTSER2                         98681320
         AIF (&SERF(&LPCTR) EQ 1 AND                                   C98681410
               '&FMT(&SERIX)'(&LPCTR,1) NE '1').UNSUPFMT                98681500
         AGO  .INCREM2                                                  98681590
.NOTSER2    ANOP                                                        98681680
         AIF ('&SYSLIST(2,2)' NE 'TEST').NOTTEST2                       98681770
         AIF (&TESTF(&LPCTR) EQ 1 AND                                  C98681860
               '&FMT(&TESTIX)'(&LPCTR,1) NE '1').UNSUPFMT               98681950
         AGO  .INCREM2                                                  98682040
.NOTTEST2   ANOP                                                        98682130
         AIF ('&SYSLIST(2,2)' NE 'TXT').NOTTXT22                        98682220
         AIF (&TXTF(&LPCTR) EQ 1 AND                                   C98682310
               '&FMT(&TXTIX)'(&LPCTR,1) NE '1').UNSUPFMT                98682400
         AGO  .INCREM2                                                  98682490
.NOTTXT22  ANOP                                                         98682580
         AIF ('&SYSLIST(2,2)' NE 'TXT2').NOTTXT2X                       98682670
         AIF (&TXT2F(&LPCTR) EQ 1 AND                                  C98682760
               '&FMT(&TXT2IX)'(&LPCTR,1) NE '1').UNSUPFMT               98682850
         AGO  .INCREM2                                                  98682940
.NOTTXT2X  ANOP                                                         98683030
         AIF ('&SYSLIST(2,2)' NE 'UCB').NOTUCB2                         98683120
         AIF (&UCBF(&LPCTR) EQ 1 AND                                   C98683210
               '&FMT(&UCBIX)'(&LPCTR,1) NE '1').UNSUPFMT                98683300
         AGO  .INCREM2                                                  98683390
.NOTUCB2   ANOP                                                         98683480
         AIF ('&SYSLIST(2,2)' NE 'UCBL').NOTUCBL2                       98683570
         AIF (&UCBLF(&LPCTR) EQ 1 AND                                  C98683660
               '&FMT(&UCBLIX)'(&LPCTR,1) NE '1').UNSUPFMT               98683750
         AGO  .INCREM2                                                  98683840
.NOTUCBL2  ANOP                                                         98683930
         AIF ('&SYSLIST(2,2)' NE 'VOL').NOTVOL2                         98684020
         AIF (&VOLF(&LPCTR) EQ 1 AND                                   C98684110
               '&FMT(&VOLIX)'(&LPCTR,1) NE '1').UNSUPFMT                98684200
         AGO  .INCREM2                                                  98684290
.NOTVOL2   ANOP                                                         98684380
         AIF ('&SYSLIST(2,2)' NE 'WAIT').NOTWAIT2                       98684470
         AIF (&WAITF(&LPCTR) EQ 1 AND                                  C98684560
               '&FMT(&WAITIX)'(&LPCTR,1) NE '1').UNSUPFMT               98684650
         AGO  .INCREM2                                                  98684740
.NOTWAIT2  ANOP                                                         98684830
.*                                                                      98684920
.INCREM2   ANOP                                                         98685010
&LPCTR    SETA &LPCTR+1                     Increment loop counter      98685100
         AIF (&LPCTR LE &HIGHIX).FLOOP2                                 98685190
.*                                                                      98685280
         AGO  .FMTCHKEXIT                                               98685370
.*                                                                      98685460
.*       *---------------------------------------------------*          98685550
.*       * Issue invalid flag combinations message.          *          98685640
.*       *---------------------------------------------------*          98685730
.INVLCOMB ANOP                                                          98685820
&MSG     SETC  'INVALID FLAGS COMBINATION PASSED TO CHKFMT RTN'         98685910
&MSG     SETC  '&MSG'.' FOR &SYSLIST(2,2) KEYWORD'                      98686000
.*                                                                      98686090
         MNOTE 12,'&MSG'                                                98686180
         AGO  .FMTCHKEXIT                                               98686270
.*                                                                      98686360
.*       *---------------------------------------------------*          98686450
.*       * Issue unsupported format message.                 *          98686540
.*       *---------------------------------------------------*          98686630
.UNSUPFMT  ANOP                                                         98686720
&MSG     SETC  'FORMAT OF'.'&FMTTYP'.'NOT SUPPORTED FOR '               98686810
&MSG     SETC  '&MSG'.'&SYSLIST(2,2) KEYWORD'                           98686900
         MNOTE 12,'&MSG'                                                98686990
         AGO  .FMTCHKEXIT                                               98687080
.*                                                                      98687170
.FMTCHKEXIT  ANOP                                                       98687260
         MEXIT                                                          98687350
.*                                                                      98687440
         MEND                                                           98700000
