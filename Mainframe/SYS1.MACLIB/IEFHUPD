*%IEFHUPD: MACRO KEYS(OLDDSNP,JFCBP,RETCODE,MF);                        00050000
*/**** START OF SPECIFICATIONS **************************************** 00100000
*                                                                     * 00150000
*                                                                     * 00250000
*01* MACRO NAME:  IEFHUPD                               -06/17/92-<0> * 00300000
*                                                                     * 00350000
*                                                                     * 00450000
*01* DESCRIPTIVE NAME:                                                * 00477700
*                                                                     * 00505400
*01* PROPRIETARY STATEMENT:                                           * 00533100
*                                                                     * 00560800
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00588500
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00616200
*     5695-047 (C) COPYRIGHT IBM CORP. 1990, 1992                     * 00643900
*     SEE COPYRIGHT INSTRUCTIONS                                      * 00671600
*                                                                     * 00700000
* STATUS= HBB4430                                                     * 00722200
*                                                                     * 00744400
*                                                                     * 00766600
*                                                                     * 00800000
*01* FUNCTION:                                                        * 00850000
*                                                                     * 00900000
*      OPERATION:  This macro accomplishes its function in the        * 01050000
*      following manner:                                              * 01100000
*                                                                     * 01150000
*                                                                     * 01187500
*      1.  Checks to ensure that all required keywords were           * 01225000
*          specified.                                                 * 01262500
*                                                                     * 01300000
*      2.  Checks to ensure that all keywords provide appropriate     * 01337500
*          values.                                                    * 01375000
*                                                                     * 01412500
*      3.  Builds parameter list using specified values.              * 01450000
*                                                                     * 01487500
*      4.  Processes any return codes for return to the invoker of    * 01525000
*          this macro.                                                * 01562500
*                                                                     * 01600000
*                                                                     * 01650000
*                                                                     * 02050000
*      The IEFHUPD macro is provided in list, execute and standard    * 02100000
*      form.  The list format can only be used to reserve storage for * 02150000
*      the parameter list.  No variable initialization can be         * 02200000
*      accomplished with the list format.  The standard and execute   * 02250000
*      forms format and build the complete parameter list storage     * 02300000
*      area prior to macro invocation.  Because of this, setting      * 02350000
*      variables in the parameter list before the macro is invoked is * 02400000
*      of no value.  There is no need to initialize the parameter     * 02450000
*      list except as is done by the macro.  Thus, no external        * 02500000
*      mapping macro is provided for the parameter list.              * 02550000
*                                                                     * 02600000
*01* INVOCATION REQUIREMENTS:                                         * 02650000
*                                                                     * 02700000
*                                                                     * 02750000
*      Execution Mode:   Task or SRB mode.                            * 02800000
*                                                                     * 02850000
*      Authorization:    Problem or Supervisor state.  Any PSW key.   * 02900000
*                                                                     * 02950000
*      Addressing Mode:  24 or 31 bit addressing mode.                * 03000000
*                                                                     * 03050000
*      Serialization:    The user must provide or inherit the         * 03100000
*                        appropriate Shared or Exclusive              * 03150000
*                        serialization on the SYSZTIOT resource to    * 03200000
*                        maintain a stable DSAB/TIOT environment      * 03250000
*                        during the execution of the IEFHUPD macro.   * 03300000
*                        See "Requesting SVC 99 Functions" in the     * 03350000
*                        MVS/ESA SPL:Application Development Guide    * 03400000
*                        for further discussion.                      * 03450000
*                                                                     * 03500000
*      Restrictions:     The CVT mapping macro and JESCT mapping      * 03550000
*                        macro must be included in the program        * 03600000
*                        invoking this service.                       * 03650000
*                                                                     * 04100000
*                        An 8 byte paramter list will be declared as  * 04150000
*                        part of the caller's working storage for the * 04200000
*                        LIST and STANDARD forms of the macro.        * 04250000
*                                                                     * 04300000
*                                                                     * 04350000
*01* INVOCATION FORMAT:                                               * 04400000
*                                                                     * 04450000
*[xlabel]  IEFHUPD     OLDDSNP=xolddsnp                               * 04500000
*                     ,JFCBP=xjfcbp                                   * 04550000
*                    [,RETCODE=xretcode]                              * 04600000
*                   [,MF=S]                                          * 04650000
*                   [,MF=(L,xmfctrl,xmfattr|0D)]                   * 04700000
*                   [,MF=(E,xmfctrl,COMPLETE)]                     * 04750000
*                                                                     * 04800000
*                                                                     * 04850000
*      Where:                                                         * 04900000
*                                                                     * 04950000
*                                                                     * 05000000
*      [xlabel]                                                       * 05050000
*          is an optional symbol, starting in column 1, that is the   * 05091600
*          name on the IEFHUPD macro invocation.  The name must       * 05133200
*          conform to the rules for an ordinary assembler language    * 05174800
*          symbol.                                                    * 05216400
*          DEFAULT: No name.                                          * 05258000
*                                                                     * 05300000
*                                                                     * 05350000
*                                                                     * 05400000
*      OLDDSNP(xolddsnp)                                              * 05450000
*          is the name (RS-type) (or address in register (2)-(12) ASM * 05500000
*          only) of a required 44 character input containing the data * 05550000
*          set name which was in the JFCBDSNM field of the JFCB       * 05600000
*          pointed to by JFCBP before the data set name was changed.  * 05650000
*          This storage must not be fetch protected.                  * 05700000
*                                                                     * 05750000
*                                                                     * 05800000
*                                                                     * 05850000
*      JFCBP(xjfcbp)                                                  * 05900000
*          is a required input.  It is the name (RS-type) (or address * 05950000
*          in register (2)-(12) ASM only) of the JFCB associated with * 06000000
*          the data set name which was changed.  This must be the SWA * 06050000
*          copy of the JFCB.                                          * 06100000
*                                                                     * 06150000
*                                                                     * 06200000
*                                                                     * 06250000
*      [RETCODE(xretcode)]                                            * 06300000
*          is the name (RS-type) of an optional fullword output       * 06350000
*          variable (or register (2)-(12) ASM only) into which the    * 06400000
*          return code is to be copied from GPR 15.                   * 06450000
*                                                                     * 06500000
*                                                                     * 06550000
*                                                                     * 06600000
*      [MF(S|L|E)]                                                  * 06650000
*          is an optional keyword input which specifies the macro     * 06700000
*          form.                                                      * 06750000
*          DEFAULT: S                                                 * 06800000
*                                                                     * 06850000
*                                                                     * 06900000
*          [MF(S)]                                                    * 06950000
*              specifies the standard form of the macro.  The "S"     * 07000000
*              form generates code to put the parameters into the     * 07050000
*              parameter list and invoke the desired service.  Full   * 07100000
*              checking for required macro keys is done along with    * 07150000
*              supplying defaults for optional parameters that are    * 07200000
*              not specified.  The ?EPILOG macro must be invoked at   * 07250000
*              the end of the module.                                 * 07300000
*                                                                     * 07350000
*              For assembly language code modules, the "S" form       * 07400000
*              generates code to put the parameters into an in-line   * 07450000
*              parameter list and invoke the desired service.  Full   * 07500000
*              checking for required macro keys is done along with    * 07550000
*              supplying defaults for optional parameters that are    * 07600000
*              not specified.                                         * 07650000
*                                                                     * 07700000
*          [MF(L,xmfctrl,xmfattr|BDY(DWORD))]                       * 07750000
*              specifies the list form of the macro.  The "L" form    * 07800000
*              defines an area to be used for the parameter list.     * 07850000
*              Any other macro parameters are flagged as errors.      * 07900000
*                                                                     * 07950000
*            ,xmfctrl                                                 * 08000000
*              is a required input.  It is the name of a storage area * 08050000
*              for the parameter list.                                * 08100000
*                                                                     * 08150000
*            ,xmfattr|BDY(DWORD)                                    * 08200000
*              is an optional 60 character input string that varies   * 08233300
*              from 1 to 60 characters. It can contain any value that * 08266600
*              is valid on an assembler DS pseudo-op                  * 08299900
*              (assembler-only). You can use this parameter to force  * 08333200
*              boundary alignment of the parameter list.              * 08366500
*              DEFAULT: 0D for Assembler, BDY(DWORD) for PL/AS, which * 08400000
*              forces the parameter list to a doubleword boundary.    * 08450000
*                                                                     * 08550000
*          [MF(E,xmfctrl,COMPLETE)]                                 * 08600000
*              specifies the execute form of the macro.  The "E" form * 08650000
*              generates code to put the parameters into the          * 08700000
*              parameter list specified by xmfctrl and provides full  * 08750000
*              syntax checking with default setting.                  * 08800000
*                                                                     * 08850000
*            ,xmfctrl                                                 * 08900000
*              is a required input.  It is the name (RS-type) (or     * 08950000
*              address in register (2)-(12) ASM only) of a storage    * 09000000
*              area for the parameter list.                           * 09050000
*                                                                     * 09100000
*            ,COMPLETE                                              * 09150000
*              is an optional keyword input which specifies the       * 09200000
*              degree of macro parameter syntax checking.             * 09250000
*              DEFAULT: COMPLETE                                      * 09300000
*                                                                     * 09350000
*                                                                     * 09400000
*              COMPLETE   Checking for required macro keys is done    * 09450000
*                        and defaults are supplied for optional       * 09500000
*                        parameters that were not specified.          * 09550000
*                                                                     * 09600000
*                                                                     * 09650000
*                                                                     * 09700000
*                                                                     * 09750000
*01* RETURN CODES:                                                    * 09800000
*                                                                     * 09850000
*                                                                     * 09900000
*            0    Successful completion.                              * 09950000
*                                                                     * 10000000
*            8    Request failed.  This function is not currently     * 10250000
*                 installed on the system.                            * 10300000
*                                                                     * 10350000
*           12    Request failed.  Internal error occurred during     * 10400000
*                 processing the request.                             * 10450000
*                                                                     * 10500000
*                                                                     * 10550000
*01* REASON CODES:  None.                                             * 10600000
*                                                                     * 10650000
*01* MODULE TYPE:  ASSEM-PL/AS MACRO                                  * 10700000
*                                                                     * 10750000
*02*   PROCESSOR:  ASSEM-PL/AS                                        * 10800000
*                                                                     * 10850000
*01* COMPONENT:  SC1B4                                                * 10900000
*                                                                     * 10950000
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 11000000
*                                                                     * 11050000
*01* MACRO USAGE NOTES:                                               * 11100000
*                                                                     * 11150000
*                                                                     * 11200000
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 11250000
*        global macro variable.  Any value other than 'NO' will       * 11300000
*        result in the macro expansion being printed.  The default is * 11350000
*        'YES'.  The following examples illustrate how the ZPRINT     * 11400000
*        variable should be set.                                      * 11450000
*                                                                     * 11500000
*                    GBLC &ZPRINT                                     * 11533300
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 11566600
*                                                                     * 11600000
*                                                                     * 11650000
*01* CHANGE ACTIVITY:                                                 * 11700000
*                                                                     * 11750000
*   Flag LineItem  FMID    Date   ID    Comment                       * 11800000
*                                                                     * 11850000
*    $L0=DDPERF   HBB4420 900226 PDB2:  DDPERFOPNJ DD Limit           * 11861100
*                                         Performance                 * 11872200
*    $P0=PH30806  HBB4420 900417 PDB2:  DDPERFOPNJ DD Limit           * 11883300
*                                         Performance                 * 11894400
*    $P1=PH30874  HBB4420 900430 PDE1:  GPR14F undeclared             * 11905500
*    $P2=PH31030  HBB4420 900604 PDE1:  GPR14F undeclared             * 11916600
*    $P3=PKB0503  HBB4430 920617 PDDH:  10X Defect Elimination        * 11966600
****** END OF SPECIFICATIONS *****************************************/ 12050000
*/********************************************************************* 12100000
         MACRO                                                          12150000
&XLABEL  IEFHUPD &OLDDSNP=,&JFCBP=,&RETCODE=,&MF=                       12200000
.*                                                                      12250000
*              MACDATE -06/17/92-<0>                                    12300000
.*                                                                      12350000
.*******************************************************************    12400000
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        12450000
.*******************************************************************    12500000
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   12550000
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     12600000
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             12650000
.*                                                                      12700000
              GBLC  &ZIEFHUPD   YES=MACRO USED AT LEAST ONCE            12750000
.*******************************************************************    12800000
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          12850000
.*******************************************************************    12900000
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 12950000
              LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS            13000000
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              13050000
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             13100000
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             13150000
              LCLA  &ZAWRK      USED AS A WORK AREA                     13200000
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  13250000
              LCLA  &ZN         NUMERIC WORK VARIABLE                   13300000
              LCLC  &ZC         CHARACTER WORK VARIABLE                 13350000
              LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE             13366600
              LCLA  &ZTLA       VALUE TOO LONG VARIABLE                 13383200
              LCLA  &ZMACRET    MACRO RETURN CODE                       13400000
&ZMACRET      SETA  0           ASSUME NO ERRORS                        13450000
.*                                                                      13500000
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      13550000
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              13600000
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   13650000
.********************************************************************   13700000
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 13750000
.********************************************************************   13800000
              GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                 13850000
              GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE          13900000
.*                                                                      13950000
              AIF   (K'&SYSASCE GT 0).ZSYS4     SYS STATE DEFINED       14000000
              AIF   (K'&SYSSPLV GT 0).ZSYS2     SP LEVEL DEFINED        14050000
              SPLEVEL  TEST                                             14100000
.ZSYS2        ANOP  ,                                                   14150000
              AIF   ('&SYSSPLV' EQ '1').ZSYS3   PRE SP 3.1              14200000
              AIF   ('&SYSSPLV' EQ '2').ZSYS3   PRE SP 3.1              14250000
              SYSSTATE TEST                                             14300000
              AGO   .ZSYS4                                              14350000
.ZSYS3        ANOP  ,                                                   14400000
&SYSASCE      SETC  'P'         ASSUME SYSSTATE PRIMARY                 14450000
.ZSYS4        ANOP  ,                                                   14500000
.*******************************************************************    14550000
.***AB.07  DEFINE ALL MACRO VARIABLES                                   14600000
.*******************************************************************    14650000
              LCLC  &XOLDDSNP   ++ NAME                                 14700000
              LCLC  &XJFCBP     ++ NAME                                 14750000
              LCLC  &XRETCODE   ++ NAME                                 14800000
              LCLC  &XMF        ++ VALUE                                14850000
              LCLC  &XMFCTRL    ++ NAME                                 14900000
              LCLC  &XMFATTR    ++ VALUE                                14950000
              LCLC  &XMFSCK     ++ VALUE                                15000000
.*******************************************************************    15050000
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           15100000
.*******************************************************************    15150000
              LCLC  &ZXOLDDSNP  ++ INPUT NAME                           15200000
              LCLC  &ZXJFCBP    ++ INPUT NAME                           15250000
              LCLC  &ZXRETCODE  ++ OUTPUT NAME                          15300000
              LCLC  &ZXMF       ++ INPUT VALUE                          15350000
              LCLC  &ZXMFCTRL   ++ INPUT NAME                           15400000
              LCLC  &ZXMFATTR   ++ INPUT VALUE                          15450000
              LCLC  &ZXMFSCK    ++ INPUT VALUE                          15500000
.********************************************************************   15550000
.***AG.MF01 PROCESS MF MACRO FORMS                                      15600000
.********************************************************************   15650000
              ACTR  10000                                               15700000
.*------------------------------------------------------------------    15750000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           15800000
&XMF          SETC  ''          INITIALIZE XVARIABLE                    15850000
.*-------------------------------------------------------------------   15900000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           15950000
.ZG12         ANOP  ,                                                   16000000
&ZTLC         SETC 'S'                                                  16033300
              AIF   ('&MF(1)' NE '&ZTLC').ZG13                          16066600
&XMF          SETC  'S'         SET KEYWORD                             16100000
              AIF   (N'&MF LE 1).ZG12A          CK NUM                  16150000
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           16200000
&ZMS          SETC  '&ZMS.&MF"'                                         16250000
&ZMS          SETC  '&ZMS "MF"'                                         16300000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 16350000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             16400000
.ZG12A        ANOP  ,                                                   16450000
.*-------------------------------------------------------------------   16500000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           16550000
.ZG13         ANOP  ,                                                   16600000
&ZTLC         SETC 'L'                                                  16633300
              AIF   ('&MF(1)' NE '&ZTLC').ZG20                          16666600
&XMF          SETC  'L'         SET KEYWORD                             16700000
              AIF   (N'&MF LE 3).ZG13A          CK NUM                  16750000
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           16800000
&ZMS          SETC  '&ZMS.&MF"'                                         16850000
&ZMS          SETC  '&ZMS "MF"'                                         16900000
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                16950000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             17000000
.ZG13A        ANOP  ,                                                   17050000
.*-------------------------------------------------------------------   17100000
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     17150000
              AIF   (N'&SYSLIST NE 0).ZG13B     POSITIONALS?            17200000
              AIF   ('&OLDDSNP' NE '').ZG13B    KEYS?                   17250000
              AIF   ('&JFCBP' NE '').ZG13B      KEYS?                   17300000
              AIF   ('&RETCODE' NE '').ZG13B    KEYS?                   17350000
              AGO    .ZG13C     INVOCATION OKAY                         17400000
.ZG13B        ANOP  ,                                                   17450000
&ZMS          SETC  'THE "L" FORM OF "MF" CANNOT'  *MFLA* MNOTE         17500000
&ZMS          SETC  '&ZMS HAVE ANY OTHER KEYWORDS OR'                   17550000
&ZMS          SETC  '&ZMS POSITIONAL PARAMETERS SPECIFIED'              17600000
              MNOTE 8,' &ZMS ON THE INVOCATION.'                        17650000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             17700000
.ZG13C        ANOP  ,                                                   17750000
.*-------------------------------------------------------------------   17800000
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   17850000
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           17900000
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           17950000
              AIF   (N'&MF(2) GT 1).ZG15B       MULTI PARMS             18000000
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           18050000
.ZG15B        AIF   (K'&MF(2) GT 0).ZG15C                               18100000
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         18150000
&ZMS          SETC  'WHEN "L" IS SPECIFIED'     *KRQDA*                 18200000
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 18250000
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        18300000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             18350000
.ZG15C        ANOP  ,                                                   18400000
.*-------------------------------------------------------------------   18450000
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               18500000
              AIF   (K'&ZXMFCTRL LE 0).ZG15P    NOT I/O                 18550000
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG15P                      18600000
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         18650000
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           18700000
&ZMS          SETC  '&ZMS.&MF"'                                         18750000
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           18800000
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                   18850000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             18900000
.ZG15P        ANOP  ,                                                   18950000
.*-------------------------------------------------------------------   19000000
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      19050000
&ZXMFATTR     SETC  'INPUT'     SET IN/OUTPUT                           19100000
&XMFATTR      SETC  '0D'                                                19150000
              AIF   (K'&MF(3) LE 0).ZG18B       PARM                    19200000
&XMFATTR      SETC  '&MF(3,1)'  SET XVARIABLE                           19250000
              AIF   (N'&MF(3) GT 1).ZG18B       MULTI PARMS             19300000
&XMFATTR      SETC  '&MF(3)'    SET XVARIABLE                           19350000
.ZG18B        ANOP  ,                                                   19400000
.*-------------------------------------------------------------------   19450000
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  19500000
              AIF   (K'&ZXMFATTR LE 0).ZG18P    NOT I/O                 19550000
              AIF   ('&XMFATTR'(1,1) NE '(').ZG18P                      19600000
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         19650000
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           19700000
&ZMS          SETC  '&ZMS.&MF"'                                         19750000
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           19800000
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                   19850000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             19900000
.ZG18P        ANOP  ,                                                   19950000
.*-------------------------------------------------------------------   20000000
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 20050000
              AIF   (K'&ZXMFATTR LE 0).ZG18S    NOT I/O                 20100000
              AIF   (K'&XMFATTR LE 60).ZG18S    LNG OK                  20150000
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         20200000
&ZMS          SETC  '"MF='      *KLNGA* MNOTE                           20250000
&ZMS          SETC  '&ZMS.&MF"'                                         20300000
&ZMS          SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'               20350000
              MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                  20400000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             20450000
.ZG18S        ANOP  ,                                                   20500000
.*-------------------------------------------------------------------   20550000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           20600000
.ZG20         ANOP  ,                                                   20650000
&ZTLC         SETC 'E'                                                  20683300
              AIF   ('&MF(1)' NE '&ZTLC').ZG28                          20716600
&XMF          SETC  'E'         SET KEYWORD                             20750000
              AIF   (N'&MF LE 3).ZG20A          CK NUM                  20800000
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           20850000
&ZMS          SETC  '&ZMS.&MF"'                                         20900000
&ZMS          SETC  '&ZMS "MF"'                                         20950000
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                21000000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             21050000
.ZG20A        ANOP  ,                                                   21100000
.*-------------------------------------------------------------------   21150000
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   21200000
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           21250000
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           21300000
              AIF   (N'&MF(2) GT 1).ZG22B       MULTI PARMS             21350000
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           21400000
.ZG22B        AIF   (K'&MF(2) GT 0).ZG22C                               21450000
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         21500000
&ZMS          SETC  'WHEN "E" IS SPECIFIED'     *KRQDA*                 21550000
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 21600000
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        21650000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             21700000
.ZG22C        ANOP  ,                                                   21750000
.*-------------------------------------------------------------------   21800000
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              21850000
              AIF   (K'&ZXMFCTRL LE 0).ZG22R    NOT I/O                 21900000
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG22R                      21950000
&ZCGPR        SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                          22000000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG22P                        22050000
              AIF   (K'&ZCGPR GT 2).ZG22Q                               22100000
              AIF   ('&ZCGPR' EQ '0').ZG22Q                             22150000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       22200000
              AIF   (T'&ZCGPR NE 'N').ZG22Q     INVALID REG NAME        22250000
.ZG22P        ANOP  ,                                                   22300000
              AIF   (T'&ZCGPR NE 'N').ZG22R     NON NUMERIC             22350000
              AIF   ('&ZCGPR' LT '2').ZG22Q                             22400000
              AIF   ('&ZCGPR' LE '12').ZG22R                            22450000
.ZG22Q        ANOP  ,                                                   22500000
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           22550000
&ZMS          SETC  '&ZMS.&MF"'                                         22600000
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'           22650000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    22700000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             22750000
.ZG22R        ANOP  ,                                                   22800000
.*-------------------------------------------------------------------   22850000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             22900000
&XMFSCK       SETC  ''          INITIALIZE XVARIABLE                    22950000
.ZG26A   AIF   ('&MF(3)' NE 'COMPLETE').ZG27A                           23000000
&XMFSCK       SETC  'COMPLETE'  SET KEYWORD                             23050000
.*-------------------------------------------------------------------   23100000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             23150000
.ZG27A        AIF   (K'&XMFSCK GT 0).ZG27C      KEYWORD                 23200000
              AIF   (K'&MF(3) LE 0).ZG27B                               23250000
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           23300000
&ZMS          SETC  '&ZMS.&MF"'                                         23350000
&ZMS          SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '           23400000
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 23450000
              MNOTE 8,' &ZMS "COMPLETE".'                               23500000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             23550000
.ZG27B        ANOP  ,                                                   23600000
&XMFSCK       SETC  'COMPLETE'  SET DEFAULT KEYWORD                     23650000
.ZG27C        ANOP  ,                                                   23700000
&ZXMFSCK      SETC  'INPUT'     SET IN/OUTPUT                           23750000
.*------------------------------------------------------------------    23800000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           23850000
.ZG28         ANOP  ,                                                   23900000
&ZXMF         SETC  'INPUT'     SET IN/OUTPUT                           23950000
              AIF   (K'&XMF GT 0).ZG28E         VALID ARG               24000000
              AIF   (T'&MF EQ 'O').ZG28D        OMITTED                 24050000
&ZASYSLNDX    SETA  0                                                   24100000
.ZG28A        ANOP  ,           POSITIONAL MACRO KEY                    24150000
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        24200000
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG28C                    24250000
&ZTLC         SETC 'MF'                                                 24283300
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG28A           24316600
.ZG28B        ANOP  ,                                                   24350000
&ZXMF         SETC  ''          RESET IN/OUTPUT                         24400000
&ZMS          SETC  'THE "MF" KEY'              *KOPTA* MNOTE           24450000
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             24500000
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    24550000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             24600000
              AGO   .ZG28E                                              24650000
.ZG28C        ANOP  ,                                                   24700000
&ZXMF         SETC  ''          RESET IN/OUTPUT                         24750000
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           24800000
&ZMS          SETC  '&ZMS.&MF"'                                         24850000
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           24900000
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 24950000
&ZMS          SETC  '&ZMS "S",'                 VALID KEYWORD           25000000
&ZMS          SETC  '&ZMS "L",'                 VALID KEYWORD           25050000
              MNOTE 8,' &ZMS OR "E".'                                   25100000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             25150000
              AGO   .ZG28E                                              25200000
.ZG28D        ANOP  ,                                                   25250000
&XMF          SETC  'S'         SET DEFAULT KEYWORD                     25300000
&XMFSCK       SETC  'COMPLETE'  COMPLETE CHECKING                       25350000
.ZG28E        ANOP  ,                                                   25400000
.********************************************************************   25450000
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 25500000
.********************************************************************   25550000
              ACTR  10000                                               25600000
.*-------------------------------------------------------------------   25650000
.***AG.MF03 MF=(SLE)                                                    25700000
              AIF   ('&XMF' EQ 'L').ZGMFX                               25750000
.*----------------------------------------------------------------***   25800000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     25850000
              AIF   (N'&OLDDSNP LE 1).ZG2A      CK NUM                  25900000
&ZMS          SETC  '"OLDDSNP='                 *KPOSA* MNOTE           25950000
&ZMS          SETC  '&ZMS.&OLDDSNP"'                                    26000000
&ZMS          SETC  '&ZMS "OLDDSNP"'                                    26050000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 26100000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             26150000
.ZG2A         ANOP  ,                                                   26200000
.*-------------------------------------------------------------------   26250000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         26300000
&ZXOLDDSNP    SETC  'INPUT'     SET IN/OUTPUT                           26350000
&XOLDDSNP     SETC  '&OLDDSNP(1)'               SET XVARIABLE           26400000
              AIF   (N'&OLDDSNP GT 1).ZG2B      MULTI PARMS             26450000
&XOLDDSNP     SETC  '&OLDDSNP'  SET XVARIABLE                           26500000
.ZG2B         AIF   (K'&OLDDSNP(1) GT 0).ZG2C                           26550000
&ZXOLDDSNP    SETC  ''          RESET IN/OUTPUT                         26600000
&ZMS          SETC  ' '         *KRQDA*                                 26650000
&ZMS          SETC  '&ZMS "OLDDSNP" KEY AND ITS ARGUMENT'               26700000
              MNOTE 8,' &ZMS ARE REQUIRED.'                             26750000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             26800000
.ZG2C         ANOP  ,                                                   26850000
.*-------------------------------------------------------------------   26900000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    26950000
              AIF   (K'&ZXOLDDSNP LE 0).ZG2R    NOT I/O                 27000000
              AIF   ('&XOLDDSNP'(1,1) NE '(').ZG2R                      27050000
&ZCGPR        SETC  '&XOLDDSNP'(2,K'&XOLDDSNP-2)                        27100000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                         27150000
              AIF   (K'&ZCGPR GT 2).ZG2Q                                27200000
              AIF   ('&ZCGPR' EQ '0').ZG2Q                              27250000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       27300000
              AIF   (T'&ZCGPR NE 'N').ZG2Q      INVALID REG NAME        27350000
.ZG2P         ANOP  ,                                                   27400000
              AIF   (T'&ZCGPR NE 'N').ZG2R      NON NUMERIC             27450000
              AIF   ('&ZCGPR' LT '2').ZG2Q                              27500000
              AIF   ('&ZCGPR' LE '12').ZG2R                             27550000
.ZG2Q         ANOP  ,                                                   27600000
&ZMS          SETC  '"OLDDSNP='                 *KGPRA* MNOTE           27650000
&ZMS          SETC  '&ZMS.&OLDDSNP"'                                    27700000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           27750000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    27800000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             27850000
.ZG2R         ANOP  ,                                                   27900000
.*----------------------------------------------------------------***   27950000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     28000000
              AIF   (N'&JFCBP LE 1).ZG5A        CK NUM                  28050000
&ZMS          SETC  '"JFCBP='   *KPOSA* MNOTE                           28100000
&ZMS          SETC  '&ZMS.&JFCBP"'                                      28150000
&ZMS          SETC  '&ZMS "JFCBP"'                                      28200000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 28250000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             28300000
.ZG5A         ANOP  ,                                                   28350000
.*-------------------------------------------------------------------   28400000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         28450000
&ZXJFCBP      SETC  'INPUT'     SET IN/OUTPUT                           28500000
&XJFCBP       SETC  '&JFCBP(1)'                 SET XVARIABLE           28550000
              AIF   (N'&JFCBP GT 1).ZG5B        MULTI PARMS             28600000
&XJFCBP       SETC  '&JFCBP'    SET XVARIABLE                           28650000
.ZG5B         AIF   (K'&JFCBP(1) GT 0).ZG5C                             28700000
&ZXJFCBP      SETC  ''          RESET IN/OUTPUT                         28750000
&ZMS          SETC  ' '         *KRQDA*                                 28800000
&ZMS          SETC  '&ZMS "JFCBP" KEY AND ITS ARGUMENT'                 28850000
              MNOTE 8,' &ZMS ARE REQUIRED.'                             28900000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             28950000
.ZG5C         ANOP  ,                                                   29000000
.*-------------------------------------------------------------------   29050000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    29100000
              AIF   (K'&ZXJFCBP LE 0).ZG5R      NOT I/O                 29150000
              AIF   ('&XJFCBP'(1,1) NE '(').ZG5R                        29200000
&ZCGPR        SETC  '&XJFCBP'(2,K'&XJFCBP-2)                            29250000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                         29300000
              AIF   (K'&ZCGPR GT 2).ZG5Q                                29350000
              AIF   ('&ZCGPR' EQ '0').ZG5Q                              29400000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       29450000
              AIF   (T'&ZCGPR NE 'N').ZG5Q      INVALID REG NAME        29500000
.ZG5P         ANOP  ,                                                   29550000
              AIF   (T'&ZCGPR NE 'N').ZG5R      NON NUMERIC             29600000
              AIF   ('&ZCGPR' LT '2').ZG5Q                              29650000
              AIF   ('&ZCGPR' LE '12').ZG5R                             29700000
.ZG5Q         ANOP  ,                                                   29750000
&ZMS          SETC  '"JFCBP='   *KGPRA* MNOTE                           29800000
&ZMS          SETC  '&ZMS.&JFCBP"'                                      29850000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           29900000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    29950000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             30000000
.ZG5R         ANOP  ,                                                   30050000
.*----------------------------------------------------------------***   30100000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    30150000
              AIF   (N'&RETCODE LE 1).ZG8A      CK NUM                  30200000
&ZMS          SETC  '"RETCODE='                 *KPOSA* MNOTE           30250000
&ZMS          SETC  '&ZMS.&RETCODE"'                                    30300000
&ZMS          SETC  '&ZMS "RETCODE"'                                    30350000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 30400000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             30450000
.ZG8A         ANOP  ,                                                   30500000
.*-------------------------------------------------------------------   30550000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        30600000
              AIF   (K'&RETCODE(1) LE 0).ZG8C   NO PARM                 30650000
&ZXRETCODE    SETC  'OUTPUT'    SET OUTPUT                              30700000
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE           30750000
              AIF   (N'&RETCODE GT 1).ZG8C                              30800000
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                           30850000
.ZG8C         ANOP  ,                                                   30900000
.*-------------------------------------------------------------------   30950000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   31000000
              AIF   (K'&ZXRETCODE LE 0).ZG8R    NOT I/O                 31050000
              AIF   ('&XRETCODE'(1,1) NE '(').ZG8R                      31100000
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                        31150000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                         31200000
              AIF   (K'&ZCGPR GT 2).ZG8Q                                31250000
              AIF   ('&ZCGPR' EQ '0').ZG8Q                              31300000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       31350000
              AIF   (T'&ZCGPR NE 'N').ZG8Q      INVALID REG NAME        31400000
.ZG8P         ANOP  ,                                                   31450000
              AIF   (T'&ZCGPR NE 'N').ZG8R      NON NUMERIC             31500000
              AIF   ('&ZCGPR' LT '2').ZG8Q                              31550000
              AIF   ('&ZCGPR' LE '12').ZG8R                             31600000
.ZG8Q         ANOP  ,                                                   31650000
&ZMS          SETC  '"RETCODE='                 *KGPRA* MNOTE           31700000
&ZMS          SETC  '&ZMS.&RETCODE"'                                    31750000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           31800000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    31850000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             31900000
.ZG8R         ANOP  ,                                                   31950000
.******************************************************************     32000000
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        32050000
.******************************************************************     32100000
              ACTR  10000                                               32150000
.*----------------------------------------------------------------***   32200000
.***AH.P02 EXTRA POSITIONALS                                            32250000
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS               32300000
&ZCVAL        SETC  ''          ERROR FIELD                             32350000
&ZAWRK        SETA  0           POSITIONAL NUMBER                       32400000
.ZGLIST2      ANOP  ,                                                   32450000
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         32500000
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                32550000
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   32600000
              AGO   .ZGLIST2                                            32650000
.*                                                                      32700000
.ZGLIST3      ANOP  ,                                                   32750000
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             32800000
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'   *PPOSA* MNOTE           32850000
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     32900000
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              32950000
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      33000000
              MNOTE 8,' &ZMS ARE ALLOWED.'                              33050000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             33100000
.ZGLISTX      ANOP  ,                                                   33150000
&ZASYSLNDX    SETA  0                                                   33200000
.*-------------------------------------------------------------------   33250000
.***AG.MF04 MF=(SLE)                                                    33300000
.ZGMFX        ANOP  ,           END OF FULL SYNTAX CHECK                33350000
.*******************************************************************    33400000
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       33450000
.*******************************************************************    33500000
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          33550000
.*******************************************************************    33600000
.***AE.01  START OF IEFHUPD MACRO CODE                                  33650000
.*******************************************************************    33700000
              LCLC  &M0M0001                 NAME                       33750000
&M0M0001      SETC  '&XLABEL'                SET NAME                   33800000
              AIF   (K'&XLABEL NE 0).XLAB2                              33850000
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT NAME               33900000
.*                                                                      33950000
.XLAB2        ANOP  ,                                                   34000000
&M0M0001 DS    0H                             IEFHUPD-0                 34050000
.*******************************************************************    34100000
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              34150000
.*******************************************************************    34200000
              PUSH  PRINT                                               34250000
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          34300000
              PRINT OFF         ++ PR01                                 34350000
              AGO   .ZPRNTXX                                            34400000
.ZPRINTX      PRINT ON                                                  34450000
.ZPRNTXX      ANOP  ,                                                   34500000
.********************************************************************   34550000
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                    34600000
.********************************************************************   34650000
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       34700000
                      LCLA  &ZOPN1         INVOCATION INDEX             34750000
                      LCLC  &ZOPL(4095)    LABEL                        34800000
                      LCLC  &ZOPO(4095)    OPERATION                    34850000
                      LCLC  &ZOPV(4095)    VALUE                        34900000
                      LCLC  &ZOPD(4095)    DESCRIPTION                  34950000
.*                                                                      35000000
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     35050000
.*-------------------------------------------------------------------   35100000
.***AL.A10 SET ZPLLEN                                                   35150000
&ZPLLEN               SETA 8                                            35200000
.******************************************************************     35250000
.***AL.A05 IEFHUPD FMT=ARG MF=S PARAMETER AREA                          35300000
.******************************************************************     35350000
                      AIF   ('&XMF' NE 'S').ZLMFSX  NOT STANDARD MF     35400000
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(2,3).'A'                     35450000
.*                                                                      35475000
&ZOPN                 SETA  &ZOPN+1                                     35500000
&ZOPL(&ZOPN)          SETC  ' '                                         35550000
&ZOPO(&ZOPN)          SETC  'B'                                         35600000
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                35650000
&ZOPD(&ZOPN)          SETC  '++ IEFHUPD ARG PARMS'                      35700000
.*                                                                      35750000
&ZOPN                 SETA  &ZOPN+1                                     35800000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL'                                  35850000
&ZOPO(&ZOPN)          SETC  'DS'                                        35900000
&ZOPV(&ZOPN)          SETC  '2A'                                        35950000
&ZOPD(&ZOPN)          SETC  '++ IEFHUPD ARG PARMS'                      36000000
.*-------------------------------------------------------------------   36050000
.***AL.A07 IEFHUPD FMT=ARG MF=S PARAMETERS                              36100000
&ZOPN                 SETA  &ZOPN+1                                     36150000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                36200000
&ZOPO(&ZOPN)          SETC  'DC'                                        36250000
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   36300000
&ZOPD(&ZOPN)          SETC  '++ IEFHUPD ARG PARMS'                      36350000
.*                                                                      36400000
.ZLMFSX               ANOP  ,                                           36450000
.******************************************************************     36500000
.***AL.AL01 IEFHUPD FMT=ARG MF=L PARAMETER AREA                         36550000
.******************************************************************     36600000
                      AIF   ('&XMF' NE 'L').ZLMFLX  NOT MF=L            36650000
&ZOPN                 SETA  &ZOPN+1                                     36700000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL'                                  36750000
&ZOPO(&ZOPN)          SETC  'DS'                                        36800000
&ZOPV(&ZOPN)          SETC  '&XMFATTR'                                  36850000
&ZOPD(&ZOPN)          SETC  '++ IEFHUPD ARG PARMS'                      36900000
.*                                                                      36950000
&ZOPN                 SETA  &ZOPN+1                                     37000000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XOLDDSNP@'                       37050000
&ZOPO(&ZOPN)          SETC  'DS'                                        37100000
&ZOPV(&ZOPN)          SETC  'A'                                         37150000
&ZOPD(&ZOPN)          SETC  '++ INPUT CL44'                             37200000
.*                                                                      37250000
&ZOPN                 SETA  &ZOPN+1                                     37300000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XJFCBP@'                         37350000
&ZOPO(&ZOPN)          SETC  'DS'                                        37400000
&ZOPV(&ZOPN)          SETC  'A'                                         37450000
&ZOPD(&ZOPN)          SETC  '++ INPUT NAME'                             37500000
.*-------------------------------------------------------------------   37550000
.***AL.AL08 IEFHUPD FMT=ARG MF=L PARAMETER AREA DEFINED                 37600000
                      AGO   .ZMFLX         EXIT, MF=L DONE              37650000
.*                                                                      37700000
.ZLMFLX               ANOP  ,                                           37750000
.********************************************************************   37800000
.***AI.A01 IEFHUPD FMT=ARG FILL IN PARAMETER AREA                       37850000
.********************************************************************   37900000
                      ACTR  10000                                       37950000
&ZOPN                 SETA  &ZOPN+1                                     38000000
&ZOPL(&ZOPN)          SETC  ' '                                         38050000
&ZOPO(&ZOPN)          SETC  'XR'                                        38100000
&ZOPV(&ZOPN)          SETC  '0,0'                                       38150000
&ZOPD(&ZOPN)          SETC  '++ SET GPR TO ZERO'                        38200000
.*                                                                      38250000
&ZCVAL                SETC  'LA'           ASSUME XA MODE               38300000
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSTATE PRI     38350000
&ZCVAL                SETC  'LAE'          XAX MODE                     38400000
.ZIMFXA               ANOP ,                                            38450000
.*                                                                      38500000
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    38550000
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         38600000
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 38650000
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                38700000
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 38750000
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                38800000
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   38850000
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    38900000
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   38950000
&ZOPN                 SETA  &ZOPN+1                                     39000000
&ZOPL(&ZOPN)          SETC  ' '                                         39050000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    39100000
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              39150000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       39200000
                      AGO   .ZIMFNX                                     39250000
.*                                                                      39300000
.ZIMFN2               ANOP ,                                            39350000
&ZOPN                 SETA  &ZOPN+1                                     39400000
&ZOPL(&ZOPN)          SETC  ' '                                         39450000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    39500000
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                39550000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       39600000
.ZIMFNX               ANOP ,                                            39650000
.********************************************************************   39700000
.***AI.A02 IEFHUPD FMT=ARG INITIALIZE PARAMETER AREA                    39750000
.********************************************************************   39800000
.***AI.L03 MF=(SLE)                                                     39850000
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      39900000
.*                                                                      39950000
&ZOPN                 SETA  &ZOPN+1                                     40000000
&ZOPL(&ZOPN)          SETC  ' '                                         40050000
&ZOPO(&ZOPN)          SETC  'XC'                                        40100000
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         40150000
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             40200000
.ZIMFLX               ANOP  ,                                           40250000
.*-------------------------------------------------------------------   40300000
.***AI.A06 BIND=NAME ADDR XOLDDSNP CL44 INPUT                           40350000
         AIF   ('&ZXOLDDSNP' EQ '').ZI1G   NOT USED                     40400000
&ZCGPR   SETC  '14'                                                     40450000
&ZCLNG                SETC  '&XOLDDSNP'                                 40500000
         AIF   ('&XOLDDSNP'(1,1) NE '(').ZI1A  NOT IN GPR               40550000
&ZCGPR   SETC  '&XOLDDSNP'(2,K'&XOLDDSNP-2)                             40600000
         AGO   .ZI1F                                                    40650000
.*                                                                      40700000
.ZI1A                 ANOP  ,                                           40750000
&ZOPN                 SETA  &ZOPN+1                                     40800000
&ZOPL(&ZOPN)          SETC  ' '                                         40850000
&ZOPO(&ZOPN)          SETC  'LA'                                        40900000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             40950000
&ZOPD(&ZOPN)          SETC  '++ BIND=NAME CL44'                         41000000
.*                                                                      41050000
.ZI1F                 ANOP  ,                                           41100000
&ZOPN                 SETA  &ZOPN+1                                     41150000
&ZOPL(&ZOPN)          SETC  ' '                                         41200000
&ZOPO(&ZOPN)          SETC  'ST'                                        41250000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0(,1)'                              41300000
&ZOPD(&ZOPN)          SETC  '++ &ZXOLDDSNP XOLDDSNP ADDR'               41350000
.ZI1G                 ANOP  ,                                           41400000
.*-------------------------------------------------------------------   41450000
.***AI.A06 BIND=NAME ADDR XJFCBP NAME INPUT                             41500000
         AIF   ('&ZXJFCBP' EQ '').ZI2G     NOT USED                     41550000
&ZCGPR   SETC  '14'                                                     41600000
&ZCLNG                SETC  '&XJFCBP'                                   41650000
         AIF   ('&XJFCBP'(1,1) NE '(').ZI2A  NOT IN GPR                 41700000
&ZCGPR   SETC  '&XJFCBP'(2,K'&XJFCBP-2)                                 41750000
         AGO   .ZI2F                                                    41800000
.*                                                                      41850000
.ZI2A                 ANOP  ,                                           41900000
&ZOPN                 SETA  &ZOPN+1                                     41950000
&ZOPL(&ZOPN)          SETC  ' '                                         42000000
&ZOPO(&ZOPN)          SETC  'LA'                                        42050000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             42100000
&ZOPD(&ZOPN)          SETC  '++ BIND=NAME NAME'                         42150000
.*                                                                      42200000
.ZI2F                 ANOP  ,                                           42250000
&ZOPN                 SETA  &ZOPN+1                                     42300000
&ZOPL(&ZOPN)          SETC  ' '                                         42350000
&ZOPO(&ZOPN)          SETC  'ST'                                        42400000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4(,1)'                              42450000
&ZOPD(&ZOPN)          SETC  '++ &ZXJFCBP XJFCBP ADDR'                   42500000
.ZI2G                 ANOP  ,                                           42550000
.*-------------------------------------------------------------------   42600000
&ZOPN1                SETA &ZOPN                                        42650000
.*******************************************************************    42700000
.***AO.X02  RETURN CODE PROCESSING                                      42750000
.*******************************************************************    42800000
                      AIF   (N'&RETCODE LE 0).ZMRETX                    42850000
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            42900000
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             42950000
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             43000000
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               43050000
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                43100000
&ZOPN                 SETA  &ZOPN+1                                     43150000
&ZOPL(&ZOPN)          SETC  ' '                                         43200000
&ZOPO(&ZOPN)          SETC  'ST'                                        43250000
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              43300000
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        43350000
                      AGO   .ZMRETX                                     43400000
.*                                                                      43450000
.ZMRET2               ANOP  ,                                           43500000
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                43550000
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                43600000
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                43650000
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  43700000
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   43750000
&ZOPN                 SETA  &ZOPN+1                                     43800000
&ZOPL(&ZOPN)          SETC  ' '                                         43850000
&ZOPO(&ZOPN)          SETC  'LR'                                        43900000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 43950000
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        44000000
.ZMRETX               ANOP  ,                                           44050000
.*******************************************************************    44100000
.***AO.X04  LABEL FOR MF=L PROCESSING                                   44150000
.*******************************************************************    44200000
.ZMFLX                ANOP  ,              MF=L PROCESSING              44250000
.*******************************************************************    44300000
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               44350000
.*******************************************************************    44400000
                      ACTR  10000                                       44450000
.*                                                                      44500000
                      LCLA  &ZLC           COLUMN POSITION              44550000
                      LCLA  &ZOPX          LIST TABLE INDEX             44600000
                      LCLC  &ZLL           LABEL                        44650000
                      LCLC  &ZLOP          OPERATION                    44700000
                      LCLC  &ZLV           VALUE                        44750000
                      LCLC  &ZLD           DESCRIPTION                  44800000
.*                                                                      44850000
&ZOPX                 SETA  1                                           44900000
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            44950000
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              45000000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              45050000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              45100000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              45150000
                      AIF   (K'&ZLD LE 0).ZL5                           45200000
&ZLC                  SETA  35             COMMENT COLUMN               45250000
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    45300000
&ZLC                  SETA  33             COMMMENT COLUMN              45350000
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   45400000
&ZLV                  SETC  '&ZLV'.' '                                  45450000
                      AGO   .ZL3                                        45500000
.*                                                                      45550000
.ZL4                  ANOP  ,                                           45600000
&ZLV                  SETC  '&ZLV'.' '                                  45650000
.ZL5                  ANOP  ,                                           45700000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               45750000
.*                                                                      45800000
&ZLL     &ZLOP &ZLV                                                     45850000
.*                                                                      45900000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               45950000
                      AGO   .ZL2           CONTINUE LOOPING             46000000
.*                                                                      46050000
.ZLX                  ANOP  ,                                           46100000
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                46150000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  46200000
         LA   15,16                  ADDRESS OF CVT ADDRESS        @P3A 46205500
         L    15,0(,15)              CVT ADDRESS                   @P3A 46211000
         L    15,CVTJESCT-CVT(,15)   JESCT ADDRESS                 @P3A 46216500
         L    15,JESDACA-JESCT(,15)  DACA ADDRESS                  @P3A 46222000
         CLI  4(15),X'02'            CHECK DACA VERSION            @P3C 46227500
         BL   NOSM&SYSNDX            IMPROPER SYSTEM LEVEL         @P0A 46233200
         L    15,88(,15)             LOAD SERVICE MODULE ADDRESS   @P3C 46250000
         LTR  15,15                                                     46300000
         BZ   NOSM&SYSNDX            MODULE ADDRESS IS ZERO             46350000
         BASSM 14,15                 INVOKE SERVICE MODULE              46400000
         B    DONE&SYSNDX                                               46450000
.DSABEND ANOP                                                           46500000
NOSM&SYSNDX EQU *                                                       46550000
         LA   15,8                   SET ERROR RETURN CODE              46600000
DONE&SYSNDX EQU *                                                       46650000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  46700000
.ZLINKX               ANOP  ,                                           46750000
.*******************************************************************    46800000
.***AP.X01  FORMAT GENERATED CODE                                       46850000
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            46900000
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              46950000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              47000000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              47050000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              47100000
                      AIF   (K'&ZLD LE 0).ZL51                          47150000
&ZLC                  SETA  35             COMMENT COLUMN               47200000
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   47250000
&ZLC                  SETA  33             COMMENT COLUMN               47300000
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  47350000
&ZLV                  SETC  '&ZLV'.' '                                  47400000
                      AGO   .ZL31                                       47450000
.*                                                                      47500000
.ZL41                 ANOP  ,                                           47550000
&ZLV                  SETC  '&ZLV'.' '                                  47600000
.ZL51                 ANOP  ,                                           47650000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               47700000
.*                                                                      47750000
&ZLL     &ZLOP &ZLV                                                     47800000
.*                                                                      47850000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               47900000
                      AGO   .ZL21          CONTINUE LOOPING             47950000
.*                                                                      48000000
.ZLX1                 ANOP  ,                                           48050000
.*******************************************************************    48100000
.***AP.X02  END OF IEFHUPD MACRO                                        48150000
&ZIEFHUPD             SETC  'YES'          SET IEFHUPD USED             48200000
         POP   PRINT                                                    48250000
*                                            IEFHUPD-0                  48300000
         SPACE 1                                                        48350000
.ZLX2                 ANOP  ,                                           48400000
         MEND                                                           48450000
**********************************************************************/ 48500000
*/**** START OF SPECIFICATIONS **************************************** 48550000
*                                                                     * 48600000
*                                                                     * 48700000
*01* MACRO NAME:  IEFHUPD                               -06/17/92-<0> * 48750000
*                                                                     * 48800000
*                                                                     * 48900000
*01* DESCRIPTIVE NAME:                                                * 48927700
*                                                                     * 48955400
*01* PROPRIETARY STATEMENT:                                           * 48983100
*                                                                     * 49010800
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 49038500
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 49066200
*     5695-047 (C) COPYRIGHT IBM CORP. 1990, 1992                     * 49093900
*     SEE COPYRIGHT INSTRUCTIONS                                      * 49121600
*                                                                     * 49150000
* STATUS= HBB4430                                                     * 49172200
*                                                                     * 49194400
*                                                                     * 49216600
*                                                                     * 49250000
*01* FUNCTION:                                                        * 49300000
*       See the IEFHUPD macro prologue for details.                   * 49350000
*                                                                     * 49400000
*01* INPUT:                                                           * 49450000
*                                                                     * 49500000
*            ?IEFHUPD     OLDDSNP(xolddsnp)                           * 49550000
*                         JFCBP(xjfcbp)                               * 49600000
*                        [RETCODE(xretcode)]                          * 49650000
*                       [MF(S)]                                      * 49700000
*                       [MF(L,xmfctrl,xmfattr|BDY(DWORD))]         * 49750000
*                       [MF(E,xmfctrl,COMPLETE)]                   * 49800000
*                                                                     * 49850000
****** END OF SPECIFICATIONS *****************************************/ 49950000
*/*PB.ECHO01 MACRO INVOCATION ECHO-----------------------------------*/ 50000000
*  ANS('@SPACE;') NORESCAN COL(MACLMAR);                                50050000
*  ANS('/*++ ? IEFHUPD '||MACLIST||' ')                                 50100000
*      NORESCAN COL(MACLMAR+5);    /* START ECHO */                     50150000
*                                                                       50200000
*  DCL ZELO  FIXED;                                                     50250000
*  DCL ZECOL FIXED;                                                     50300000
*                                                                       50350000
*  ZELO=1;     /* STARTING COLUMN */                                    50400000
*  DO WHILE ZELO<=LENGTH(MACKEYS);  /* PARENTHSIS SCAN */               50450000
*    ZECOL=INDEX(MACKEYS(ZELO:LENGTH(MACKEYS)),')');                    50500000
*    IF ZECOL>0                                                         50550000
*      THEN                                                             50600000
*        DO;   /* PARENTHESIS FOUND */                                  50650000
*          ANS(MACKEYS(ZELO:ZELO+ZECOL-1)||' ')                         50700000
*             NORESCAN COL(MACLMAR+5);                                  50750000
*          ZELO=ZELO+ZECOL;        /* NEXT PORTION */                   50800000
*        END;                                                           50850000
*      ELSE                                                             50900000
*        DO;   /* REMAINING KEYS */                                     50950000
*          ANS(MACKEYS(ZELO:LENGTH(MACKEYS)))                           51000000
*             NORESCAN COL(MACLMAR+5);                                  51050000
*          ZELO=LENGTH(MACKEYS)+1;                                      51100000
*        END;                                                           51150000
*  END;                                                                 51200000
*  ANS(' -06/17/92-0- */')                                              51250000
*      NORESCAN COL(MACLMAR+5);    /* END ECHO */                       51300000
*/********************************************************************/ 51350000
*/*PV.DCL01 MACRO DECLARES AND CODE GENERATION CONTROLS              */ 51400000
*/********************************************************************/ 51450000
*  DCL ZPRINT  EXTERNAL; DEACT ZPRINT; /* YES=PRINT, NO=NO PRINT     */ 51500000
*  DCL ZTEST   EXTERNAL; DEACT ZTEST;  /* YES=TEST, NO=NO TEST       */ 51550000
*  DCL ZSYSTEM EXTERNAL; DEACT ZSYSTEM;/* PCCODE10, MVS, SAK, VM     */ 51600000
*                                                                       51650000
*  DCL   ZIEFHUPD CHAR EXTERNAL; /* YES=USED AT LEAST ONCE          */  51700000
*  DEACT ZIEFHUPD;                                                      51750000
*                                                                       51800000
*  DCL ZMACRET FIXED; DEACT ZMACRET;                                    51850000
*  ZMACRET=0;                   /* MACRO COMPILE RETURN CODE         */ 51900000
*                                                                       51950000
*  DCL ZMS CHAR;   DEACT ZMS;   /* ERROR MESSAGE                     */ 52000000
*  DCL ZCVAL CHAR; DEACT ZCVAL; /* ERROR MESSAGE WORK AREA           */ 52050000
*                                                                       52100000
*  DCL ZI FIXED;  DEACT ZI;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 52150000
*  DCL ZJ FIXED;  DEACT ZJ;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 52200000
*  DCL ZK FIXED;  DEACT ZK;     /* INDEX FOR RANGE COLON (:)         */ 52250000
*  DCL ZL FIXED;  DEACT ZL;     /* INDEX FOR RANGE VALUE CHECKING    */ 52300000
*  DCL ZLO FIXED; DEACT ZLO;    /* LOW RANGE VALUE                   */ 52350000
*  DCL ZHI FIXED; DEACT ZHI;    /* HIGH RANGE VALUE                  */ 52400000
*  DCL ZW CHAR;   DEACT ZW;     /* WORK AREA FOR RANGE VALUE SUBLIST */ 52450000
*  DCL ZN FIXED;  DEACT ZN;     /* NUMERIC WORK VARIABLE             */ 52500000
*  DCL ZC CHAR;   DEACT ZC;     /* CHARACTER WORK VARIABLE           */ 52550000
*  DCL ZMAXINVOCLEN FIXED; DEACT ZMAXINVOCLEN;  /* INVOCATION LENGTH */ 52600000
*  DCL ZPLLEN FIXED; DEACT ZPLLEN;        /* PARAMETER LIST LENGTH   */ 52650000
*                                                                       52700000
*  DCL ZPRMMAX FIXED;           /* MAXIMUM PARM LIST SIZE            */ 52750000
*  DCL ZPRMNUM FIXED;           /* PARAMETER ARRAY INDEX             */ 52800000
*  DCL ZPRM(100);               /* PARAMETER ENTRY                   */ 52850000
*  DCL EHAMAXLEN FIXED EXTERNAL;   /* MAX ILIST SIZE FOR PARM LISTS  */ 52900000
*  DCL EHAREGS CHARACTER EXTERNAL; /* REG DCLS                       */ 52950000
*  DCL EHALIST CHARACTER EXTERNAL; /* STANDARD PARM LIST GENERATION  */ 53000000
*/*******************************************************************/  53050000
*/*PV.XVAR01 DECLARE ALL MACRO PARAMETER VARIABLES                  */  53100000
*/*******************************************************************/  53150000
*  DCL XOLDDSNP;  DEACT XOLDDSNP;  /***PV.XVAR02 INPUT NAME */          53200000
*  DCL ZXOLDDSNP; DEACT ZXOLDDSNP;  /***INPUT/OUTPUT CONTROL */         53250000
*  DCL XJFCBP;  DEACT XJFCBP;      /***PV.XVAR02 INPUT NAME */          53300000
*  DCL ZXJFCBP; DEACT ZXJFCBP;     /***INPUT/OUTPUT CONTROL */          53350000
*  DCL XRETCODE;  DEACT XRETCODE;  /***PV.XVAR02 OUTPUT NAME */         53400000
*  DCL ZXRETCODE; DEACT ZXRETCODE;  /***INPUT/OUTPUT CONTROL */         53450000
*  DCL XMF;  DEACT XMF;            /***PV.XVAR02 INPUT VALUE */         53500000
*  DCL ZXMF; DEACT ZXMF;           /***INPUT/OUTPUT CONTROL */          53550000
*  DCL XMFCTRL;  DEACT XMFCTRL;    /***PV.XVAR02 INPUT NAME */          53600000
*  DCL ZXMFCTRL; DEACT ZXMFCTRL;   /***INPUT/OUTPUT CONTROL */          53650000
*  DCL XMFATTR;  DEACT XMFATTR;    /***PV.XVAR02 INPUT VALUE */         53700000
*  DCL ZXMFATTR; DEACT ZXMFATTR;   /***INPUT/OUTPUT CONTROL */          53750000
*  DCL XMFSCK;  DEACT XMFSCK;      /***PV.XVAR02 INPUT VALUE */         53800000
*  DCL ZXMFSCK; DEACT ZXMFSCK;     /***INPUT/OUTPUT CONTROL */          53850000
*/********************************************************************/ 53900000
*/***PG.MF01  PROCESS MF MACRO FORMS                                 */ 53950000
*/********************************************************************/ 54000000
*/*PG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 54050000
*  XMF='';                                                              54100000
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 54150000
*  IF MF(1)='S'                              /* CHECK FOR KEYWORD */    54200000
*    THEN                                                               54250000
*      DO;                                                              54300000
*        XMF='S';                            /* SET XVARIABLE */        54350000
*        IF NUMBER(MF)>1                     /* CHECK POSITIONALS */    54400000
*          THEN                                                         54450000
*            DO;                                                        54500000
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            54550000
*                  MF||                                                 54600000
*                  '" "MF"'||                                           54650000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        54700000
*              ANS MSG('?IEFHUPD ---> '||ZMS);                          54750000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          54800000
*              ZMACRET=8;                    /* MACRO ERROR */          54850000
*            END;                                                       54900000
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 54950000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     55000000
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 55050000
*  IF MF(1)='L'                              /* CHECK FOR KEYWORD */    55100000
*    THEN                                                               55150000
*      DO;                                                              55200000
*        XMF='L';                            /* SET XVARIABLE */        55250000
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    55300000
*          THEN                                                         55350000
*            DO;                                                        55400000
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            55450000
*                  MF||                                                 55500000
*                  '" "MF"'||                                           55550000
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       55600000
*              ANS MSG('?IEFHUPD ---> '||ZMS);                          55650000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          55700000
*              ZMACRET=8;                    /* MACRO ERROR */          55750000
*            END;                                                       55800000
*/*PG.KKCTL10 -MF(L) SPECIAL CHECK-----------------------------------*/ 55850000
*        ZMAXINVOCLEN = LENGTH(MF) + 2;                                 55900000
*        IF LENGTH(MACKEYS) > ZMAXINVOCLEN |                            55950000
*           MACLIST ^= ''                    /* CHECK FOR OTHER PARMS*/ 56000000
*          THEN                                                         56050000
*            DO;                                                        56100000
*              ZMS=' 8, THE "L" FORM OF "MF" CANNOT'|| /**MFLP* MSG*/   56150000
*                  ' HAVE ANY OTHER KEYWORDS OR'||                      56200000
*                  ' POSITIONAL PARAMETERS SPECIFIED'||                 56250000
*                  ' ON THE INVOCATION.';                               56300000
*              ANS MSG('?IEFHUPD ---> '||ZMS);                          56350000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          56400000
*              ZMACRET=8;                    /* MACRO ERROR */          56450000
*            END;                                                       56500000
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 56550000
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        56600000
*  IF MF(2)=''                               /* CHECK FOR NULL */       56650000
*   THEN                                                                56700000
*    DO;                                     /* KEY IS REQUIRED */      56750000
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      56800000
*        ZMS=' 8, WHEN "L" IS SPECIFIED'||                              56850000
*            ' FOR THE "MF" KEY, POSITIONAL'||                          56900000
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            56950000
*        ANS MSG('?IEFHUPD ---> '||ZMS);                                57000000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                57050000
*        ZMACRET=8;                          /* MACRO ERROR */          57100000
*    END;                                                               57150000
*  ELSE                                                                 57200000
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        57250000
*/*PG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE--------------------*/ 57300000
*  ZXMFATTR='INPUT';                         /* SET IN/OUTPUT */        57350000
*  XMFATTR='BDY(DWORD)';                     /* SET DEFAULT */          57400000
*  IF MF(3)^=''                              /* CHECK FOR NULL */       57450000
*    THEN                                                               57500000
*      XMFATTR=MF(3);                        /* SET XVARIABLE */        57550000
*/*PG.KCK01 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH---------------*/ 57600000
*  IF ZXMFATTR^='' &                         /* NOT IN/OUTPUT */        57650000
*     LENGTH(XMFATTR)>60                                                57700000
*    THEN                                                               57750000
*      DO;                                                              57800000
*        ZXMFATTR='';                        /* RESET IN/OUTPUT */      57850000
*        ZMS=' 8, "MF'||                     /**KLNGP* MSG*/            57900000
*            MF||                                                       57950000
*            '" ARGUMENT 3 EXCEEDS THE MAXIMUM'||                       58000000
*            ' LENGTH OF 60 CHARACTERS. ';                              58050000
*        ANS MSG('?IEFHUPD ---> '||ZMS);                                58100000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                58150000
*        ZMACRET=8;                          /* MACRO ERROR */          58200000
*      END;                                                             58250000
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 58300000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     58350000
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 58400000
*  IF MF(1)='E'                              /* CHECK FOR KEYWORD */    58450000
*    THEN                                                               58500000
*      DO;                                                              58550000
*        XMF='E';                            /* SET XVARIABLE */        58600000
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    58650000
*          THEN                                                         58700000
*            DO;                                                        58750000
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            58800000
*                  MF||                                                 58850000
*                  '" "MF"'||                                           58900000
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       58950000
*              ANS MSG('?IEFHUPD ---> '||ZMS);                          59000000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          59050000
*              ZMACRET=8;                    /* MACRO ERROR */          59100000
*            END;                                                       59150000
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 59200000
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        59250000
*  IF MF(2)=''                               /* CHECK FOR NULL */       59300000
*   THEN                                                                59350000
*    DO;                                     /* KEY IS REQUIRED */      59400000
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      59450000
*        ZMS=' 8, WHEN "E" IS SPECIFIED'||                              59500000
*            ' FOR THE "MF" KEY, POSITIONAL'||                          59550000
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            59600000
*        ANS MSG('?IEFHUPD ---> '||ZMS);                                59650000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                59700000
*        ZMACRET=8;                          /* MACRO ERROR */          59750000
*    END;                                                               59800000
*  ELSE                                                                 59850000
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        59900000
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 59950000
*  XMFSCK='';                                /* RESET XVARIABLE */      60000000
*  IF MF(3) = 'COMPLETE'                                                60050000
*    THEN                                                               60100000
*      XMFSCK = 'COMPLETE';                  /* SET XVARIABLE */        60150000
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 60200000
*  ZXMFSCK='INPUT';                          /* SET IN/OUTPUT */        60250000
*  IF XMFSCK=''                              /* CHECK FOR KEYWORD */    60300000
*    THEN                                                               60350000
*      DO;                                   /* KEYWORD NOT ENTERED */  60400000
*        XMFSCK='COMPLETE';                  /* SET DEFAULT */          60450000
*        IF MF(3)^=''                                                   60500000
*          THEN                                                         60550000
*            DO;                                                        60600000
*              ZXMFSCK='';                   /* RESET IN/OUTPUT */      60650000
*              ZMS=' 8, "MF'||               /**KUKWP* MSG*/            60700000
*                  MF||'"'||                                            60750000
*                  ' ARGUMENT 3 IS AN UNKNOWN KEYWORD. '||              60800000
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    60850000
*                  ' "COMPLETE".';           /* VALID KEYWORD */        60900000
*              ANS MSG('?IEFHUPD ---> '||ZMS);                          60950000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          61000000
*              ZMACRET=8;                    /* MACRO ERROR */          61050000
*            END;                                                       61100000
*      END;                                                             61150000
*/*PG.KKCTL05 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 61200000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     61250000
*/*PG.KKCTL06 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 61300000
*  IF MF='MF' | MF='()'                      /*CHECK ENTRY*/            61350000
*     THEN                                                              61400000
*       DO;                                                             61450000
*              ZMS=' 8, THE "MF" KEY'||      /**KOPTP* MSG*/            61500000
*                  ' MUST CONTAIN ONE'||                                61550000
*                  ' (OR MORE) ARGUMENT(S).';                           61600000
*              ANS MSG('?IEFHUPD ---> '||ZMS);                          61650000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          61700000
*              ZMACRET=8;                    /* MACRO ERROR */          61750000
*       END;                                                            61800000
*  ELSE                                                                 61850000
*    DO;                                                                61900000
*      ZXMF='INPUT';                         /* SET IN/OUTPUT */        61950000
*      IF XMF=''                             /* CHECK FOR KEYWORD */    62000000
*        THEN                                                           62050000
*          DO;                               /* KEYWORD NOT ENTERED */  62100000
*            XMF='S';                        /* SET DEFAULT */          62150000
*            XMFSCK='COMPLETE';              /* COMPLETE CHECKING */    62200000
*            IF MF(1)^=''                    /* CHECK FOR KEYWORD */    62250000
*              THEN                                                     62300000
*                DO;                                                    62350000
*                  ZXMF='';                  /* RESET IN/OUTPUT */      62400000
*              ZMS=' 8, "MF'||               /**KUKWP* MSG*/            62450000
*                  MF||'"'||                                            62500000
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              62550000
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    62600000
*                  ' "S",'||                 /* VALID KEYWORD */        62650000
*                  ' "L",'||                 /* VALID KEYWORD */        62700000
*                  ' OR "E".';               /* VALID KEYWORD */        62750000
*              ANS MSG('?IEFHUPD ---> '||ZMS);                          62800000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          62850000
*              ZMACRET=8;                    /* MACRO ERROR */          62900000
*                END;                                                   62950000
*          END;                                                         63000000
*    END;                                                               63050000
*/********************************************************************/ 63100000
*/***PD.P01 FULL DEFAULT CHECKING                                    */ 63150000
*/********************************************************************/ 63200000
*  ZC='OFF';                                 /* DEFAULT FLAG OFF */     63250000
*/********************************************************************/ 63300000
*/***PD.P02 DEFAULT ECHO                                             */ 63350000
*/********************************************************************/ 63400000
*/*PD.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 63450000
*  IF XMF^='L'                                                          63500000
*    THEN                                                               63550000
*      DO;                                   /* FULL SYNTAX CHECK */    63600000
*        ANS('/*DEFAULT(S): */')                                        63650000
*           NORESCAN COL(MACLMAR+5);                                    63700000
*  IF ZC='OFF'                               /*NO DEFAULTS TAKEN */     63750000
*    THEN                                                               63800000
*      ANS('/* NONE. */')                                               63850000
*         NORESCAN COL(MACLMAR+5);                                      63900000
*/*PD.P04 END DEFAULT ECHO ------------------------------------------*/ 63950000
*      END;                                                             64000000
*/********************************************************************/ 64050000
*/*PB.SYSL01 INVOKE SP LEVEL AND SYSTEM STATE MACROS                 */ 64100000
*/********************************************************************/ 64150000
*  DCL SYSSPLV CHAR EXTERNAL; DEACT SYSSPLV;/* SPLEVEL 1,2,3         */ 64200000
*  DCL SYSASCE CHAR EXTERNAL; DEACT SYSASCE;/* STATE ANY P AR */        64250000
*                                                                       64300000
*  IF SYSASCE=''                                                        64350000
*    THEN                                                               64400000
*      DO;                                                              64450000
*        IF SYSSPLV=''                                                  64500000
*          THEN                                                         64550000
*            ANS('?SPLEVEL  (TEST);') COL(MACLMAR);                     64600000
*        IF SYSSPLV^='1' & SYSSPLV^='2'                                 64650000
*          THEN                                                         64700000
*            ANS('?SYSSTATE (TEST);') COL(MACLMAR);                     64750000
*          ELSE                                                         64800000
*            SYSASCE='P';                    /* SYSSTATE DEFAULT*/      64850000
*      END;                                                             64900000
*/********************************************************************/ 64950000
*/***PG.P01 FULL MACRO SYNTAX CHECKING                               */ 65000000
*/********************************************************************/ 65050000
*/*PG.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 65100000
*  IF XMF^='L'                                                          65150000
*    THEN                                                               65200000
*      DO;                                   /* FULL SYNTAX CHECK */    65250000
*/*PG.P03 EXCESSIVE POSITIONAL ARGUMENTS-----------------------------*/ 65300000
*  IF NUMBER(MACLIST)>0                      /* CHECK POSITIONALS */    65350000
*    THEN                                                               65400000
*      DO;                                                              65450000
*        ZMS=' 8, POSITIONAL ARGUMENT(S),'|| /**PPOSP* MSG*/            65500000
*            ' "'||MACLIST||'"'||                                       65550000
*            ' CANNOT BE USED.'||                                       65600000
*            ' NO POSITIONAL ARGUMENTS'||                               65650000
*            ' ARE ALLOWED.';                                           65700000
*        ANS MSG('?IEFHUPD ---> '||ZMS);                                65750000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                65800000
*        ZMACRET=8;                          /* MACRO ERROR */          65850000
*      END;                                                             65900000
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 65950000
*  IF NUMBER(OLDDSNP)>1                      /* CHECK POSITIONALS */    66000000
*    THEN                                                               66050000
*      DO;                                                              66100000
*        ZMS=' 8, "OLDDSNP'||                /**KPOSP* MSG*/            66150000
*            OLDDSNP||                                                  66200000
*            '" "OLDDSNP"'||                                            66250000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              66300000
*        ANS MSG('?IEFHUPD ---> '||ZMS);                                66350000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                66400000
*        ZMACRET=8;                          /* MACRO ERROR */          66450000
*      END;                                                             66500000
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 66550000
*  XOLDDSNP=OLDDSNP(1);                      /* SET XVARIABLE */        66600000
*  IF OLDDSNP(1)=''                          /* CHECK FOR NULL */       66650000
*   THEN                                                                66700000
*    DO;                                     /* KEY IS REQUIRED */      66750000
*        ZXOLDDSNP='';                       /* RESET IN/OUTPUT */      66800000
*        ZMS=' 8,  '||                                                  66850000
*            ' "OLDDSNP" KEY AND ITS ARGUMENT'||                        66900000
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            66950000
*        ANS MSG('?IEFHUPD ---> '||ZMS);                                67000000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                67050000
*        ZMACRET=8;                          /* MACRO ERROR */          67100000
*    END;                                                               67150000
*  ELSE                                                                 67200000
*    ZXOLDDSNP='INPUT';                      /* SET IN/OUTPUT */        67250000
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 67300000
*  IF NUMBER(JFCBP)>1                        /* CHECK POSITIONALS */    67350000
*    THEN                                                               67400000
*      DO;                                                              67450000
*        ZMS=' 8, "JFCBP'||                  /**KPOSP* MSG*/            67500000
*            JFCBP||                                                    67550000
*            '" "JFCBP"'||                                              67600000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              67650000
*        ANS MSG('?IEFHUPD ---> '||ZMS);                                67700000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                67750000
*        ZMACRET=8;                          /* MACRO ERROR */          67800000
*      END;                                                             67850000
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 67900000
*  XJFCBP=JFCBP(1);                          /* SET XVARIABLE */        67950000
*  IF JFCBP(1)=''                            /* CHECK FOR NULL */       68000000
*   THEN                                                                68050000
*    DO;                                     /* KEY IS REQUIRED */      68100000
*        ZXJFCBP='';                         /* RESET IN/OUTPUT */      68150000
*        ZMS=' 8,  '||                                                  68200000
*            ' "JFCBP" KEY AND ITS ARGUMENT'||                          68250000
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            68300000
*        ANS MSG('?IEFHUPD ---> '||ZMS);                                68350000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                68400000
*        ZMACRET=8;                          /* MACRO ERROR */          68450000
*    END;                                                               68500000
*  ELSE                                                                 68550000
*    ZXJFCBP='INPUT';                        /* SET IN/OUTPUT */        68600000
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 68650000
*  IF RETCODE='RETCODE' | RETCODE='()'       /*CHECK ENTRY*/            68700000
*    THEN                                                               68750000
*      DO;                                                              68800000
*        ZMS=' 8, THE "RETCODE" KEY'||       /**KOPTP* MSG*/            68850000
*            ' MUST CONTAIN ONE'||                                      68900000
*            ' (OR MORE) ARGUMENT(S).';                                 68950000
*        ANS MSG('?IEFHUPD ---> '||ZMS);                                69000000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                69050000
*        ZMACRET=8;                          /* MACRO ERROR */          69100000
*      END;                                                             69150000
*  IF NUMBER(RETCODE)>1                      /* CHECK POSITIONALS */    69200000
*    THEN                                                               69250000
*      DO;                                                              69300000
*        ZMS=' 8, "RETCODE'||                /**KPOSP* MSG*/            69350000
*            RETCODE||                                                  69400000
*            '" "RETCODE"'||                                            69450000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              69500000
*        ANS MSG('?IEFHUPD ---> '||ZMS);                                69550000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                69600000
*        ZMACRET=8;                          /* MACRO ERROR */          69650000
*      END;                                                             69700000
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 69750000
*  IF RETCODE(1)^=''                         /* CHECK FOR NULL */       69800000
*    THEN                                                               69850000
*      DO;                                                              69900000
*        XRETCODE=RETCODE(1);                /* SET XVARIABLE */        69950000
*        ZXRETCODE='OUTPUT';                 /* SET OUTPUT */           70000000
*      END;                                                             70050000
*  ELSE                                                                 70100000
*    IF ZXRETCODE^=''                                                   70150000
*      THEN                                                             70200000
*        ZXRETCODE='';                       /* RESET OUTPUT */         70250000
*/*PG.P04 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 70300000
*      END;                                  /* END COMPLETE CHECKING*/ 70350000
*/********************************************************************/ 70400000
*/***PE.MR01 GENERATE CODE IF ZMACRET=0                              */ 70450000
*/********************************************************************/ 70500000
*  IF ZMACRET = 0                                                       70550000
*    THEN                                                               70600000
*      DO;                                                              70650000
*/********************************************************************/ 70700000
*/***PE.PR01 PRINT CONTROLS, DEFAULT IS YES                          */ 70750000
*/********************************************************************/ 70800000
*  ANS(MACCONC||'LIST PUSH;') NORESCAN COL(MACLMAR);                    70850000
*  IF ZPRINT='NO'                            /* PRINT IS OFF */         70900000
*    THEN                                                               70950000
*      ANS(MACCONC||'LIST OFF;') NORESCAN COL(MACLMAR);                 71000000
*    ELSE                                                               71050000
*      ANS(MACCONC||'LIST ON;')  NORESCAN COL(MACLMAR);                 71100000
*/********************************************************************/ 71150000
*/*PE.DO02 OUTER MACRO DO STATEMENT----------------------------------*/ 71200000
*  IF MF(1)^='L'                                                        71250000
*    THEN                                                               71300000
*      ANS('DO; /*++ IEFHUPD-0 */')                                     71350000
*          NORESCAN COL(MACLMAR);                                       71400000
*/*PL.AL01 ?IEFHUPD ARG MF=L PARAMETER LIST--------------------------*/ 71450000
*  IF XMF='L'                                                           71500000
*    THEN                                                               71550000
*      DO;                                                              71600000
*        ANS('DCL 1 '||XMFCTRL||' '||XMFATTR||', '||                    71650000
*            '/*++ ?IEFHUPD ARG PARM LIST*/')                           71700000
*            NORESCAN COL(MACLMAR);                                     71750000
*/*PL.AL02  XOLDDSNP CHAR(44) INPUT----------------------------------*/ 71800000
*        ANS('2 '||XMFCTRL||                                            71850000
*            '_XOLDDSNP@ PTR(31), '||                                   71900000
*            '/*++ INPUT CHAR(44) */')                                  71950000
*            NORESCAN COL(MACLMAR);                                     72000000
*/*PL.AL02  XJFCBP NAME INPUT----------------------------------------*/ 72050000
*        ANS('2 '||XMFCTRL||                                            72100000
*            '_XJFCBP@ PTR(31), '||                                     72150000
*            '/*++ INPUT NAME */')                                      72200000
*            NORESCAN COL(MACLMAR);                                     72250000
*/*PL.AL04 **********************************************************/  72300000
*        ANS('2 * CHAR(0);')                                            72350000
*            NORESCAN COL(MACLMAR+2);                                   72400000
*/*PL.AL04  XOLDDSNP INPUT-------------------------------------------*/ 72450000
*        ANS('DCL '||XMFCTRL||                                          72500000
*            '_XOLDDSNP '||                                             72550000
*            'CHAR(44) '||                                              72600000
*            ' BASED('||XMFCTRL||'_XOLDDSNP@); '||                      72650000
*            '/*++  INPUT */')                                          72700000
*            NORESCAN COL(MACLMAR+2);                                   72750000
*/*PL.AL04  XJFCBP INPUT---------------------------------------------*/ 72800000
*        ANS('DCL '||XMFCTRL||                                          72850000
*            '_XJFCBP '||                                               72900000
*            ' '||                                                      72950000
*            ' BASED('||XMFCTRL||'_XJFCBP@); '||                        73000000
*            '/*++  INPUT */')                                          73050000
*            NORESCAN COL(MACLMAR+2);                                   73100000
*      END;                                                             73150000
*/*PL.A01 MACRO WORK VARIABLES -------------------------------------*/  73200000
*  DCL ZPRMLINE CHAR;          /* ZPRM ARRAY ENTRY ACCUMULATOR      */  73250000
*  DEACT ZPRMLINE;                                                      73300000
*  DCL ZNDX CHAR;              /* UNIQUE LIST STRUCTURE NAME        */  73350000
*  DEACT ZNDX;                                                          73400000
*  ZNDX=MACINDEX(2:4);         /* MACINDEX LAST THREE DIGITS        */  73450000
*  DCL XVERSION CHAR;                                                   73500000
*  DEACT XVERSION;                                                      73550000
*  DCL XPLISTLEN CHAR;                                                  73600000
*  DEACT XPLISTLEN;                                                     73650000
*/*PL.A02 ?IEFHUPD ARG PARAMETER LIST--------------------------------*/ 73700000
*  IF XMF^='L'                                                          73750000
*    THEN                                                               73800000
*      DO;                                                              73850000
*/*PL.A03 ?IEFHUPD ARG PARAMETER LIST--------------------------------*/ 73900000
*        IF XMF='S'                                                     73950000
*          THEN                                                         74000000
*            XMFCTRL='#ZPLIST';                                         74050000
*/*PL.A04 ?IEFHUPD ARG PARAMETER LIST--------------------------------*/ 74100000
*        ZPRMLINE='DCL 1 #Z'||ZNDX||' DEF('||XMFCTRL||'),'||            74150000
*                 ' /*++ ?IEFHUPD ARG PARM LIST*/';                     74200000
*/*PL.A05  XOLDDSNP CHAR(44) INPUT-----------------------------------*/ 74250000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             74300000
*                 '_XOLDDSNP@ PTR(31), '||                              74350000
*                 '/*++  CHAR(44) INPUT */';                            74400000
*/*PL.A05  XJFCBP NAME INPUT-----------------------------------------*/ 74450000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             74500000
*                 '_XJFCBP@ PTR(31), '||                                74550000
*                 '/*++  NAME INPUT */';                                74600000
*/*PL.A08 -----------------------------------------------------------*/ 74650000
*        ZPRMNUM=ZPRMNUM+1;                                             74700000
*        ZPRM(ZPRMNUM)=ZPRMLINE||' 2 * CHAR(0);';                       74750000
*/*PL.A09 ?IEFHUPD ARG PARAMETER LIST SIZE---------------------------*/ 74800000
*        ZPLLEN=8;                                                      74850000
*        IF ZPRMMAX<ZPLLEN                                              74900000
*           & XMF^='E'                                                  74950000
*          THEN                                                         75000000
*            ZPRMMAX=ZPLLEN;                                            75050000
*/*PL.A10 -----------------------------------------------------------*/ 75100000
*      END;                                                             75150000
*/*PI.A01 XMF^='L' --------------------------------------------------*/ 75200000
*  IF XMF^='L'                                                          75250000
*    THEN                                                               75300000
*      DO;                                   /* LOAD PARAMETER LIST */  75350000
*/*PI.A03 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 75400000
*      ANS('#Z'||ZNDX||'(1:8)=''''B;'||                                 75450000
*          '/*++ CLEAR PARAMETER AREA */')                              75500000
*          NORESCAN COL(MACLMAR);                                       75550000
*/*PI.A06 ADDR(XOLDDSNP) CHAR(44)------------------------------------*/ 75600000
*        IF ZXOLDDSNP^=''                                               75650000
*          THEN                                                         75700000
*            ANS('#Z'||ZNDX||'_XOLDDSNP@='||                            75750000
*                'ADDR('||XOLDDSNP||');'||                              75800000
*                '/*++ XOLDDSNP CHAR(44) */')                           75850000
*                NORESCAN COL(MACLMAR);                                 75900000
*/*PI.A06 ADDR(XJFCBP) NAME------------------------------------------*/ 75950000
*        IF ZXJFCBP^=''                                                 76000000
*          THEN                                                         76050000
*            ANS('#Z'||ZNDX||'_XJFCBP@='||                              76100000
*                'ADDR('||XJFCBP||');'||                                76150000
*                '/*++ XJFCBP NAME */')                                 76200000
*                NORESCAN COL(MACLMAR);                                 76250000
*/*PI.A22 INVOKE FUNCTION--------------------------------------------*/ 76300000
*              ANS('RFY GPR01P RSTD;') NORESCAN COL(MACLMAR);           76350000
*              ANS('GPR01P=ADDR(#Z'||ZNDX||');'||                       76400000
*                  '/*++ ?IEFHUPD LIST PARMS */')                       76450000
*                  NORESCAN COL(MACLMAR);                               76500000
*              IF SYSASCE^='P'                                          76550000
*                THEN                                                   76600000
*                  ANS('SAR(GPR01P,ALET(#Z'||ZNDX||'));'||              76650000
*                      '/*++ ?IEFHUPD LIST PARMS */')                   76700000
*                      NORESCAN COL(MACLMAR);                           76750000
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  76800000
*ANS('IF (JESDACA+4)->I008P < ''02''X |' ||                             76860000
*  '/* DACA is downlevel           */')                                 76875000
*  NORESCAN COL(MACLMAR);                                     /* @P3C*/ 76890000
*ANS('   (JESDACA+88)->I031P = 0 THEN' ||                               76905000
*  '/* Service module is not found */')                                 76920000
*  NORESCAN COL(MACLMAR);                                     /* @P3A*/ 76935000
*ANS('DO;') NORESCAN COL(MACLMAR+2);                                    76950000
*ANS('RESPECIFY GPR15F RSTD;') NORESCAN COL(MACLMAR+4);                 77000000
*ANS('GPR15F = 8;'||'/* Set error return code */') NORESCAN             77050000
*  COL(MACLMAR+4);                                                      77100000
*ANS('RESPECIFY GPR15F UNRSTD;') NORESCAN COL(MACLMAR+4);               77150000
*ANS('END;') NORESCAN COL(MACLMAR+2);                                   77200000
*ANS('ELSE'||'/* Service module is found */') NORESCAN COL(MACLMAR);    77250000
*ANS('DO;') NORESCAN COL(MACLMAR+2);                                    77300000
*ANS('RESPECIFY (GPR14P,GPR15F) RSTD;') NORESCAN COL(MACLMAR+4);        77350000
*ANS('GPR15F = (JESDACA+88)->I031P;'||'/* Load service address */')     77400000
*  NORESCAN COL(MACLMAR+4);                                   /* @P3C*/ 77450000
*ANS('GEN (BASSM 14,15);'||'/* Invoke service */') NORESCAN             77500000
*   COL(MACLMAR+4);                                                     77550000
*ANS('RESPECIFY (GPR14P,GPR15F) UNRSTD;') NORESCAN COL(MACLMAR+4);      77600000
*ANS('END;') NORESCAN COL(MACLMAR+2);                                   77650000
*IF INDEX(EHAREGS,'14P')=0                                              77662500
*  THEN                                                                 77675000
*    EHAREGS=EHAREGS||'14P';         /* GPR14P                   @P1A*/ 77687500
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  77700000
*              ANS('RFY GPR01P UNRSTD;') NORESCAN COL(MACLMAR);         77750000
*              IF NUMBER(RETCODE)>0                                     77800000
*                THEN                                                   77850000
*                  ANS('RFY GPR15F RSTD;') NORESCAN COL(MACLMAR);       77900000
*/*PO.L08 XRETCODE  RETURN CODE--------------------------------------*/ 77950000
*              IF NUMBER(RETCODE)>0                                     78000000
*                THEN                                                   78050000
*                    ANS(XRETCODE||                                     78100000
*                     '=GPR15F; /*++ SET RETURN CODE */')               78150000
*                      NORESCAN COL(MACLMAR);                           78200000
*/*PO.L10 REMOVE REGISTER RESTRICTIONS-------------------------------*/ 78250000
*              IF NUMBER(RETCODE)>0                                     78300000
*                THEN                                                   78350000
*              ANS('RFY GPR15F UNRSTD;') NORESCAN COL(MACLMAR);         78400000
*/*PO.L12 END OF PARAMETER LIST PROCESSING---------------------------*/ 78450000
*      END;                                                             78500000
*/*PO.L13 IEFHUPD USAGE INDICATOR------------------------------------*/ 78550000
*  ZIEFHUPD='YES';                           /* SET IEFHUPD USED */     78600000
*/*PO.L15 END OF EXECUTABLE IEFHUPD-0 MACRO--------------------------*/ 78650000
*  IF XMF^='L'                                                          78700000
*    THEN                                                               78750000
*      ANS('END; /*++ IEFHUPD-0 */')                                    78800000
*          NORESCAN COL(MACLMAR);                                       78850000
*/*PO.L16 RESTORE PRINT CONTROLS-------------------------------------*/ 78900000
*  ANS(MACCONC||'LIST POP;') NORESCAN COL(MACLMAR);                     78950000
*/*PO.L17 END OF IEFHUPD MACRO---------------------------------------*/ 79000000
*  ANS(MACCONC||'SPACE;') NORESCAN COL(MACLMAR);                        79050000
*  ANS(' ') NORESCAN COL(MACLMAR);                                      79100000
*/*******************************************************************/  79150000
*/*  PO.L18 END OF CODE TO BE BYPASSED WHEN ZMACRET ^= 0            */  79200000
*/*******************************************************************/  79250000
*      END;                                                             79300000
*/*******************************************************************/  79350000
*/*  MVS ONLY     -CHECK IF AMG PARM LISTS ARE PRESENT              */  79400000
*/*               -ROUND MAX AMG PARM LIST TO DOUBLEWORD MULTIPLES  */  79450000
*/*******************************************************************/  79500000
*  IF ZPRMNUM>0                   /* NUMBER OF AMG PARM LIST ENTRIES*/  79550000
*    THEN                                                               79600000
*      DO;                                                              79650000
*        ZPRMMAX=((ZPRMMAX+7)/8)*8; /* ROUND PARM LIST SIZE UP TO       79700000
*                                      DOUBLEWORD MULTIPLES        */   79750000
*/*******************************************************************/  79800000
*/*  MVS -GENERATE PARM LIST DCL TO OVERLAY ?EPILOG'S ILIST AREA    */  79850000
*/*******************************************************************/  79900000
*        IF XMF ^= 'M' & XMF ^= 'E'                                     79950000
*          THEN                                                         80000000
*            DO;                                                        80050000
*              IF INDEX(EHALIST,',AMG,')=0 /* HAS DECLARE BEEN DONE?*/  80100000
*                THEN                                                   80150000
*                  DO;                                                  80200000
*                    ANS('?EPILOG                                       80250000
*                        STRING(''DCL #ZPLIST DEF(ILIST);'');');        80300000
*                    EHALIST=EHALIST||',AMG,';                          80350000
*                  END;                                                 80400000
*            END;                                                       80450000
*/*******************************************************************/  80500000
*/*  MVS  -EXTRACT PARM LISTS FROM AMG GLOBAL MACRO ARRAYS          */  80550000
*/*******************************************************************/  80600000
*        IF XMF ^= 'M' & XMF ^= 'E'                                     80650000
*          THEN                                                         80700000
*            DO;                                                        80750000
*              IF ZPRMMAX>EHAMAXLEN                                     80800000
*                THEN                                                   80850000
*                  EHAMAXLEN=ZPRMMAX; /* SET MAX PARM LIST SIZE     */  80900000
*            END;                                                       80950000
*        DO ZI=1 TO ZPRMNUM; /* EXTRACT AMG PARM LISTS               */ 81000000
*          ANS('?EPILOG STRING('''||ZPRM(ZI)||''');')                   81050000
*              COL(MACLMAR);                                            81100000
*        END;                                                           81150000
*      END;                                                             81200000
*/*-----------------------------------------------------------------*/  81250000
*/*  MVS  -ENSURE THAT GPRS NEEDED BY AMG MACROS WILL BE PROVIDED   */  81300000
*/*        BY ?EPILOG                                               */  81350000
*/*-----------------------------------------------------------------*/  81400000
*        IF INDEX(EHAREGS,'01P')=0                                      81450000
*          THEN                                                         81500000
*            EHAREGS=EHAREGS||'01P'; /* GPR01P                      */  81550000
*        IF INDEX(EHAREGS,'15F')=0                                      81600000
*          THEN                                                         81650000
*            EHAREGS=EHAREGS||'15F'; /* GPR15F                      */  81700000
*  RETURN CODE(ZMACRET);                                                81750000
*%END IEFHUPD;                                                          81800000
