*/**** Start of Specifications for BLSABDPL **************************/ 00050000
*/*                                                                  */ 00100000
*/* $MAC(BLSABDPL) COMP(SC132) PROD(HBB7703): Exit parameter list    */ 00150000
*/*                                                                  */ 00200000
*/* PROPRIETARY STATEMENT =                                          */ 00215200
*/*                                                                  */ 00230400
*/*   Licensed Materials - Property of IBM                           */ 00245600
*/*   "Restricted Materials of IBM"                                  */ 00260800
*/*   5647-A01 (C) Copyright IBM Corp. 1975,  2000                   */ 00276000
*/*                                                                  */ 00291200
*/*   Status = HBB7703                                               */ 00306400
*/*                                                                  */ 00321900
*/* EXTERNAL CLASSIFICATION: GUPI                                    */ 00322200
*/* END OF EXTERNAL CLASSIFICATION:                                  */ 00322500
*/*                                                                  */ 00322800
*/* DESCRIPTIVE NAME: ABDUMP Parameter List for Formatters           */ 00323100
*/*   ACRONYM:  ABDPL                                                */ 00323400
*/*                                                                  */ 00323700
*/* MACRO NAME: BLSABDPL                                             */ 00324000
*/* DSECT NAME: ABDPL, ADPLEXTN, AMDCPMAP, ADPLPACC, ADPLPFMT,       */ 00324300
*/*             ADPLPFXT, ADPLPECT, ADPLPSEL, ADPLOSEL, ADPLOSNT     */ 00324600
*/* COMPONENT:  IPCS (SC132)                                         */ 00324900
*/* EYE-CATCHER: None                                                */ 00325200
*/*     OFFSET:  Not applicable                                      */ 00325500
*/*     LENGTH:  Not applicable                                      */ 00325800
*/*                                                                  */ 00326100
*/* STORAGE ATTRIBUTES:                                              */ 00326400
*/*   SUBPOOL:  78 (IPCS), 252 (SNAP)                                */ 00326700
*/*   KEY:  0 (SNAP). 8 (IPCS)                                       */ 00327000
*/*   RESIDENCY:  LOC(BELOW,ANY)                                     */ 00327300
*/*   MAIN STORAGE:  No                                              */ 00327600
*/*   AUXILIARY STORAGE:  Yes                                        */ 00327900
*/*   VIRTUAL STORAGE:  No                                           */ 00328200
*/*   DATA SPACE: No                                                 */ 00328500
*/*                                                                  */ 00328800
*/* SIZE: 96 bytes                                                   */ 00329100
*/* CREATED BY: IPCS, SNAP                                           */ 00329400
*/* POINTED TO BY: None                                              */ 00329700
*/* SERIALIZATION: None                                              */ 00330000
*/*                                                                  */ 00331000
*/* FUNCTION: BLSABDPL contains mappings of parameter blocks used    */ 00400000
*/* for communication between IPCS and SNAP dump formatting hosts    */ 00450000
*/* and the dump formatting exits invoked by them.  It is also used  */ 00500000
*/* by IPCS and SNAP when calling exits to format GTF records.       */ 00550000
*/*                                                                  */ 00550100
*/* ABDPL     is passed by IPCS or SNAP to each exit.  The same      */ 00550200
*/*           block is passed back to service routines available in  */ 00550300
*/*           the two environments.                                  */ 00550400
*/*                                                                  */ 00550500
*/* ADPLEXTN  is an extension to ABDPL, the address of which is      */ 00550600
*/*           filled in by IPCS or SNAP before invoking exits.       */ 00550700
*/*                                                                  */ 00550800
*/* AMDCPMAP  is a description of the data returned by the storage   */ 00550900
*/*           access services in response to a request for CPU       */ 00551000
*/*           STATUS information.  Note:  This is, hopefully, not    */ 00551100
*/*           to be confused with CPU STATUS records used by stand   */ 00551200
*/*           alone dump to capture the result of a processor Store  */ 00551300
*/*           Status operation for each CPU in the system being      */ 00551400
*/*           dumped.  The latter may be accessed via the IPCS       */ 00551500
*/*           Symbol and Storage Map services dump access functions. */ 00551600
*/*                                                                  */ 00551700
*/* ADPLPACC  is a description of the parameter list passed by exits */ 00551800
*/*           when they invoke the storage access service.           */ 00551900
*/*                                                                  */ 00552000
*/* ADPLPFMT  is a description of the parameter list passed by exits */ 00552100
*/*           when they invoke the control block formatter and the   */ 00552200
*/*           model processor services.                              */ 00552300
*/*                                                                  */ 00552400
*/* ADPLPFXT  is a description of an extension to ADPLPFMT that may, */ 00552500
*/*           optionally, be passed by exits to the control block    */ 00552600
*/*           formatter and the model processor services.            */ 00552700
*/*                                                                  */ 00552800
*/* ADPLPECT  is a description of the parameter list passed by exits */ 00552900
*/*           to the ECT service.                                    */ 00553000
*/*                                                                  */ 00553100
*/* ADPLPSEL  is a description of the parameter list passed by exits */ 00553200
*/*           to the select service.                                 */ 00553300
*/*                                                                  */ 00553400
*/* ADPLOSEL  is a description of the header portion of the data     */ 00553500
*/*           returned by the select service to exits.               */ 00553600
*/*                                                                  */ 00553700
*/* ADPLOSNT  is a description of one array entry, many of which     */ 00553800
*/*           may be returned by the select service to exits.        */ 00553900
*/*                                                                  */ 00554000
*/* METHOD OF ACCESS:                                                */ 00554100
*/*   Assembler:  BLSABDPL AMDEXIT=<YES|NO>,  Default is YES         */ 00554200
*/*                     AMDOSEL=<YES|NO>,     Default is YES         */ 00554300
*/*                     AMDPACC=<YES|NO>,     Default is YES         */ 00554400
*/*                     AMDPECT=<YES|NO>,     Default is YES         */ 00554500
*/*                     AMDPFMT=<YES|NO>,     Default is YES         */ 00554600
*/*                     AMDPFXT=<YES|NO>,     Default is NO          */ 00554700
*/*                     AMDPSEL=<YES|NO>,     Default is YES         */ 00554800
*/*                     DSECT=<YES|NO>        Default is YES         */ 00554900
*/*                                                                  */ 00555500
*/*   PL/X:       %INCLUDE SYSLIB(BLSABDPL)                          */ 00566500
*/*                                                                  */ 00577500
*/* DELETED BY: IPCS, SNAP                                           */ 00595600
*/* DEPENDENCIES: None                                               */ 00613700
*/* DISTRIBUTION LIBRARY: AMACLIB                                    */ 00631800
*/*                                                                  */ 00650000
*/* ================================================================ */ 00660300
*/*                                                                  */ 00670600
*/* CHANGE ACTIVITY=                                                 */ 00680900
*/*                                                                  */ 00691200
*/*   Products=                                                      */ 00701500
*/* $L0= EBB1102,EBB1102,75001,PDEP: MVS/370 base                    */ 00712300
*/* $L1= HBB2102,HBB2102,82082,PDE1: MVS/XA support                  */ 00724600
*/* $L2= SRVADFXT,JBB2220,84067,PDE4: Dump exit debugging tool       */ 00736900
*/* $L3= SRVASADA,JBB2220 84061,PD31: ANALYZE subcommand support     */ 00749200
*/* $L4= SRVAPLAS,JBB2220,84104,PDE1: Clean PL/AS compilation        */ 00761500
*/* $L5= IPCSENH,HBB3310,86057,PDE4: Formatting enhancements,        */ 00765600
*/*      New services                                                */ 00769700
*/*      Eliminate FORMAT, PRINT JOBNAME, NUCLEUS, HEADER exits      */ 00770900
*/* $L6= NAMETOK,JBB4422,91029,PDE4: NAME/TOKEN service              */ 00772100
*/*    = IPCSM,HBB4430,910325,PDE4: Withdrawn                        */ 00772700
*/* $L7= SYSLKDFM,HBB5510,920920,PDNY: IXLZSTR exit service          */ 00772800
*/* $L8= SYSLKDFM,HBB5510,92300,PDE1: IXLZSTR exit service           */ 00772900
*/*      Support parameterization of service code references         */ 00773000
*/* $L9= DMPMG,HBB5510,93048,PDE1: Enhance the following services:   */ 00773100
*/*                                                                  */ 00773300
*/*      ECT service                                                 */ 00774100
*/*        Allow exits to invoke subcommands and command procedures  */ 00774900
*/*        containing IPCS subcommands                               */ 00775700
*/*                                                                  */ 00776500
*/*      SELECT service                                              */ 00777300
*/*        Allow exits to indicate that inactive ASIDs may be        */ 00778100
*/*        specified and should be selected via the ASIDLIST option. */ 00778900
*/*        This is appropriate when the exit intends to process      */ 00779700
*/*        trace entries that may have been produced during the      */ 00780500
*/*        period that the ASIDs in question processed multiple      */ 00781300
*/*        units of work.                                            */ 00782100
*/*                                                                  */ 00782900
*/* ---------------------------------------------------------------- */ 00783100
*/*                                                                  */ 00783300
*/*   Design changes=                                                */ 00783700
*/* $D1= DCR0054,JBB2125,83060,PDPD: Improved services               */ 00784500
*/* $D2= DCR0054,JBB2125,83083,PDE2: Improved services               */ 00786100
*/* $D3= DCR0054,JBB2125,83083,PDE4: Improved services               */ 00798400
*/* $D4= DCR0001,JBB2214,84152,PDE4: 2 dimensional array display     */ 00810700
*/*    = DEO0098,HBB4410,89049,PDE4: SRB Q formatter, define         */ 00812000
*/*      component use fields as pointers                            */ 00813300
*/* $D5= DKB0014,HBB4430,92007,PDE1: Remove IPCSM                    */ 00813700
*/* $D6= DKB0054,HBB4430,92036,PD34EP: Add ADPLSCSI service constant */ 00814100
*/*    = DIG0016,HBB5510,92316,PDNY: Duplicate of DKB0014            */ 00814600
*/* $D7= DN70043,HBB5520,94124,PDE1: Add support for a SYMDEF exit   */ 00814900
*/*      service                                                     */ 00815200
*/*                                                                  */ 00815500
*/* ---------------------------------------------------------------- */ 00816100
*/*                                                                  */ 00817400
*/*   PTMs=                                                          */ 00818900
*/* $P1= PAJ0139,JBB2125,83207,PDE4: Report dump type from select    */ 00823000
*/* $P2= PAJ0311,JBB2125,83255,PDE1: Add initial values/symbolic     */ 00835300
*/*      lengths for each block and clean up remarks                 */ 00847900
*/* $P3= PAJ0320,JBB2125,83255,PDE1: Correct misleading remark       */ 00848900
*/* $P4= PAJ0374,JBB2125,83273,PDE1: Bring back AMDJAMAP             */ 00849400
*/* $P5= PC40247,HBB3310,86268,PDE4: Add fill char option to format  */ 00849700
*/* $P6= PC40300,HBB3310,86288,PDE4: Delete ADPLIDX field-no longer  */ 00849800
*/*      supported in this release.                                  */ 00849900
*/* $P7= PC40609,HBB3310,87029,PDE4: Report missing XDT to caller    */ 00855400
*/* $P8= PC42159,HBB3310,88027,PDE4: Relieve 1023 ASID limit from    */ 00857200
*/*      select ASID exit service.                                   */ 00859000
*/* $P9= PEO1551,HBB4410,89055,PDE4: Add pointer definitions for     */ 00859600
*/*      DCR98                                                       */ 00860200
*/* $PA= PEO1939,HBB4410,89143,PDAX: Force ADPLFXHD to a word bdy    */ 00860500
*/*    = PN71760,HBB5520,94277,PDE1: Update prolog to include        */ 00860600
*/*      current levels of SHOWHDR tags                              */ 00860700
*/* $PB= PXD0454,HBB7703,99263,PDE1: Supply a bit that indicates     */ 00861200
*/*      to routines running under SNAP and IPCS that the data being */ 00861700
*/*      processed came from an ESAME-mode system                    */ 00862200
*/* $PC= PXD0502,HBB7703,99274,PDE1: Correct assembly language       */ 00862300
*/*      implementation of PXD0454                                   */ 00862400
*/*    = PXD0606,HBB7703,99299,PDE1: Update description of CPU data  */ 00862500
*/*      returned by storage access service to clarify content from  */ 00862600
*/*      ESAME-mode systems                                          */ 00862700
*/*                                                                  */ 00862800
*/* ---------------------------------------------------------------- */ 00863300
*/*                                                                  */ 00865700
*/*   Maintenance=                                                   */ 00868300
*/* $01= OY03669,JBB2125,87134,PDAX: Add ADPLPENM flag               */ 00875700
*/* $02= OY16079,HBB3310,88281,PFAH: Add ADPLFXEO for extended       */ 00876700
*/*      position offset.                                            */ 00877700
*/*    = OY18871,JBB2220,88333: Add ADPLNFLD bit in ADPLFLAG to      */ 00878700
*/*      indicate translation requirement or not.  (This fix should  */ 00879700
*/*      be only in release JBB2220, not applicable to other         */ 00880700
*/*      releases. )                                                 */ 00881700
*/* $03= OY24149,HBB3310,900401,PDAX: Add ADPLPTOC                   */ 00882400
*/*                                                                  */ 00883200
*/* End of Specifications for BLSABDPL *******************************/ 00900300
*                                                                       00917500
*   %GOTO ABDPLPLS;                                                     00935000
*                                                                       00952500
*/*                                                                     00970000
         MACRO                                                          00987500
         BLSABDPL &AMDEXIT=YES,&DSECT=YES,&AMDCPST=NO,                 *01025000
               &AMDPACC=YES,&AMDPFMT=YES,&AMDPECT=YES,                 *01050000
               &AMDPSEL=YES,&AMDOSEL=YES,&AMDPFXT=NO               @L5C 01075000
         IEZBITS ,                Define symbolic bits             @L1A 02900000
         AIF ('&AMDEXIT' NE 'YES').ABDPL02                              02950000
*/* ================================================================ */ 02960000
*/* Exit parameter list provided by IPCS and SNAP to exits           */ 02970000
*/* ================================================================ */ 02980000
*/*                                                                     02990000
         AIF ('&DSECT' EQ 'YES').ABDPL00                                03000000
ABDPL    EQU    *                 Common IPCS/SNAP                     *03033300
                                  parameter list to exits          @P3C 03066600
         AGO    .ABDPL01                                                03100000
.ABDPL00 ANOP                                                           03150000
ABDPL    DSECT ,                  Common IPCS/SNAP                     *03183300
                                  parameter list to exits          @P3C 03216600
.ABDPL01 SPACE 1                                                        03244400
ADPLCBP  DS    0A                 Address of block for exit        @L5C 03272200
ADPLTCB  DC    A(0)               TCB of task being displayed      @P2C 03300000
ADPLASID DC    H'0'               Address space identifier         @P2C 03350000
ADPLSBPL DC    B'00000000'        Subpool used to get save area    @P2C 03400000
*                                 by component routine                  03450000
ADPLFLAG DC    B'00000000'        Flag field                       @P2C 03500000
ADPLSNPR EQU   BIT0               0=Module loaded by SNAP          @L1C 03550000
*                                 1=Module loaded by IPCS               03600000
ADPLSYTM EQU   BIT1               0=System is OS/VS2               @L1C 03650000
*                                 1=System is OS/VS1                    03700000
ADPLDMGT EQU   BIT2               0=Format DEB only (SNAP caller)  @L1C 03750000
*                                 1=Format DEB, DCB, IOB (SNAP caller)  03800000
ADPLIPCS EQU   BIT3               Called by IPCS                   @L1C 03850000
ADPLPRT  EQU   BIT4               On, SYSPRINT data set request    @L1C 03900000
*                                 Off, PRINTER data set request         03950000
ADPLSYNO EQU   BIT5               Exit given control for syntax    @L1C 04000000
*                                 checking only                @G860P2Z 04050000
ADPLEJEC EQU   BIT6               For a write to PRINTER data set  @L1C 04100000
*                                 eject page first             @ZMC1842 04150000
ADPLBUF  DC    A(0)               Pointer to output buffer         @P2C 04200000
ADPLPRNT DC    A(0)               Address of print routine         @P2C 04250000
ADPLCVT  DC    A(0)               Address of CVT                   @P2C 04300000
ADPLMEMA DC    A(0)               Address of memory access routine @P2C 04350000
ADPLFRMT DC    A(0)               Address of format routine        @P2C 04400000
ADPLCOM1 DC    A(0)               Reserved for component use       @P2C 04450000
ADPLCOM2 DC    A(0)               Reserved for component use       @P2C 04500000
ADPLCOM3 DC    A(0)               Reserved for component use       @P2C 04550000
ADPLCOM4 DC    A(0)               Reserved for component use       @P2C 04600000
ADPLFMT1 DC    A(0)               Reserved for format routine      @P2C 04650000
ADPLFMT2 DC    A(0)               Reserved for format routine      @P2C 04700000
ADPLEXT  DC    A(0)               Address of extension, whose 1st  @P2C 04750000
*                                 word contains the address of the      04800000
*                                 operands list or zero if none.        04850000
ADPLABDA DC    A(0)               Address of host internal         @P2C 04900000
*                                 parameter list               @G33SPHW 04950000
ADPLTRFM DC    A(0)               Address of trace control block   @P2C 05000000
*                                 (SNAP only)                  @G860P2Z 05050000
ADPLSERV DC    A(0)               ->Services router                @P2C 05100000
ADPLLEV  DC    AL1(0)             Index indentation level          @P2C 05150000
         DC    AL1(0)             Entry code number corresponding  @P6C 05200000
*                                 to AMDMNDXT macro entries             05250000
*                                 Support of this interface ended this  05266600
*                                 release                               05283200
ADPLLNCT DC    H'0'               Line count per output page       @P2C 05300000
ADPLLNRM DC    H'0'               Current number of lines          @P2C 05350000
*                                 remaining on the output page          05400000
ADPLDLEN DC    H'0'               Storage access request length    @P2C 05450000
ADPLOPLN DC    H'0'               Length of verb operand list      @P2C 05550000
ADPLPRDP DC    B'0'               Dump read/format flags           @P2C 05600000
ADPLVIRT EQU   BIT0               Virtual address read             @L1C 05650000
ADPLREAL EQU   BIT1               Real address read                @L1C 05700000
ADPLCPU  EQU   BIT2               CPU data read                    @L1C 05750000
ADPLHDR  EQU   BIT3               Dump header read                 @L1C 05800000
*        The following bit governs the masking of register zero prior   05850000
*        to its use by the storage access service as a virtual          05900000
*        storage address.  If it is off, X'7FFFFFFF' will be            05950000
*        logically ANDed with register zero to obtain the requested     06000000
*        address.  If it is on, X'00FFFFFF' will be logically ANDed     06050000
*        with register zero to obtain the requested address.            06100000
ADPLSAMK EQU   BIT7               MVS/370 virtual address          @L1A 06150000
         DC    AL1(0)             reserved                         @P2C 06200000
ADPLNDX  DC    A(0)               Address of the TOC service       @P2C 06250000
*                                 routine                               06300000
ADPLPGNO DC    F'0'               Current output page number       @P2C 06311600
ADPLSRA  DC    A(0)               ->Services router area           @P2C 06323200
         DC    XL4'00'            reserved                         @P2C 06334800
ADPLLEN  EQU   *-ABDPL            Length of ABDPL                  @P2A 06346400
         SPACE 2                                                   @D1P 06358100
*/* ================================================================ */ 06358600
*/* Exit parameter list extension provided by IPCS and SNAP to exits */ 06359100
*/* ================================================================ */ 06359600
*/*                                                                     06360100
         AIF ('&DSECT' EQ 'YES').ADPLE00                           @D1A 06360800
ADPLEXTN EQU    *                 ABDPL extension                  @P3C 06363500
         AGO    .ADPLE01                                           @D1A 06366200
.ADPLE00 ANOP  ,                                                   @D1A 06368900
ADPLEXTN DSECT ,                  ABDPL extension                  @P3C 06371600
.ADPLE01 SPACE 1                                                   @D1A 06374300
ADPLOPTR DC    A(0)               ->Operands buffer                @P2C 06377000
ADPLCPPL DC    A(0)               ->TSO CPPL                       @P2C 06379700
ADPLESYP DC    A(0)               -> BLSRESSY                      @L5C 06382400
ADPLCODE DC    H'0'               Router return code               @P2C 06385100
ADPLPFLG DC    B'00000000'        Processing flags                 @P2C 06387800
ADPLNMSG EQU   BIT0               1=Suppress error messages        @D1A 06390500
ADPLNPRT EQU   BIT1               1=Suppress print services        @L3A 06391800
ADPLEFLG DC    B'00000000'        Error flags                      @P2C 06393200
ADPLEFAS EQU   BIT0               1=No automatic storage           @D1A 06395900
ADPLMAXL DC    AL1(0)             Recommended maximum line width   @P2C 06398600
ADPLSCOL DC    AL1(0)             Control block formatting start       *06400600
                                  column.  Zero based. Zero means do   *06402600
                                  not offset the data.             @L3A 06404600
ADPLCOLS DC    AL1(0)             Control block formatting column  @P2C 06406700
*                                 spacing                               06409400
         DC    XL1'00'            reserved                         @L3C 06410100
ADPLEFCD DC    H'0'               Exit function code               @L3A 06410800
ADPLEFAN EQU   1,C'H',2           Exit called as ANALYZE exit      @L3A 06411500
ADPLEFAC EQU   2,C'H',2           Exit called as ASCB exit         @L5A 06411600
ADPLEFTC EQU   3,C'H',2           Exit called as TCB exit          @L5A 06411700
ADPLEFSR EQU   4,C'H',2           Exit called as formatting exit   @L5A 06411800
ADPLEFLE DC    XL1'00'            Environment flags                @PBA 06412100
ADPLESAME EQU  BIT0               ESAME mode dump data             @PCC 06412400
ADPLRSV1 DC    XL41'00'           reserved                         @PBC 06412700
ADPLEXTL EQU   *-ADPLEXTN         Length of ADPLEXTN               @P2A 06413000
         SPACE 2                                                   @D1P 06414800
*        ---------------------------------------------------------      06416100
*        Service codes defining services to router                      06417500
*        ---------------------------------------------------------      06418800
         SPACE 1                                                   @D1P 06420200
ADPLS000 EQU   1 C'F',4           1st service code in use          @L8A 06421500
ADPLSACC EQU   1,C'F',4           Storage access service           @D1A 06422900
ADPLSPRT EQU   2,C'F',4           Print service                    @D1A 06425600
ADPLSFMT EQU   3,C'F',4           Format model processor           @D1A 06428300
ADPLSCBF EQU   4,C'F',4           Control block formatter service  @D1A 06431000
ADPLSNDX EQU   5,C'F',4           Index service                    @D1A 06433700
ADPLSECT EQU   6,C'F',4           Ect exit service                 @D1A 06436400
ADPLSSEL EQU   7,C'F',4           Select ASID service              @D1A 06439100
ADPLSEQS EQU   8,C'F',4           Equate symbol service            @D1A 06441800
ADPLSGTS EQU   9,C'F',4           Get symbol service               @D1A 06444500
ADPLSCQE EQU   10,C'F',4          CQE create service               @L3A 06445200
ADPLSCBS EQU   11,C'F',4          CB status service                @L3A 06445900
ADPLSPR2 EQU   12,C'F',4          Expanded Print service with a parm   *06446600
                                  list.  See BLSUPPR2 mapping      @L3A 06447300
ADPLSADS EQU   13,C'F',4          Add symptom service              @L3A 06448000
ADPLSWHS EQU   14,C'F',4          WHERE service                    @L3A 06448700
ADPLSNAM EQU   15,C'F',4          NAME service                     @L5A 06449000
ADPLSSYM EQU   16,C'F',4          SYMBOL service                   @L5A 06449300
ADPLSMAP EQU   17,C'F',4          MAP service                      @L5A 06449600
ADPLSNTK EQU   18,C'F',4          NAME/TOKEN service               @L6A 06449800
ADPLSCSI EQU   19,C'F',4          CSVINFO service                  @D6A 06458200
ADPLSSTR EQU   20,C'F',4          IXLZSTR service                  @L7A 06466600
ADPLSSYD EQU   21,C'F',4          SYMDEF service                   @D7A 06472100
ADPLS999 EQU   21 C'F',4          Last service code in use         @D7C 06477600
.ABDPL02 AIF ('&AMDCPST' NE 'YES').ABDPL04                     @G860P2Z 06483300
         EJECT                                                 @G860P2Z 06500000
**********************************************************************  06550000
*                                                                       06600000
*   AMDCPMAP is a mapping of the CPU STATUS data obtained from a dump   06650000
*   upon request.  An exit requests this data by setting ADPLCPU in     06700000
*   the exit parameter list prior to invoking the storage access        06750000
*   service routine, whose address is in ADPLMEMA.                      06800000
*                                                                       06850000
*   Note:  This API is archaic but is being kept minimally              06853100
*   functional for compatibility.  Exit code that requires all 16       06856200
*   floating point registers, the floating point control register, a    06859300
*   16-byte PSW, ... should use the dump access functions available     06862400
*   via the IPCS symbol or storage map services.                        06865500
*                                                                       06868600
*   When this service is requested against a SADUMP of an ESAME-mode    06871700
*   system:                                                             06874800
*                                                                       06877900
*   o  The right sizes of GPRs and control registers are returned.      06881000
*   o  The 8-byte PSW returned is produced from the 16-byte ESAME       06884100
*      PSW in the same way as system services do it.  The final bit     06887200
*      of the instruction address will be one if the ESAME-mode PSW     06890300
*      referenced storage above 7FFFFFFF.                               06893400
*                                                                       06896500
**********************************************************************  06900000
AMDCPMAP DSECT ,                  CPU status record data               *06950000
                                  mapping                          @P3C 07000000
AMDCFLAG DC    BL1'00000000'      CPU status flags                 @P2C 07050000
AMDCUNIP EQU   BIT0               CPU is a uniprocessor:           @L1C 07100000
*                                 Processor address is invalid.         07150000
AMDCSINV EQU   BIT1               Stand-alone dump unable to store @L1C 07200000
*                                 status.  Only  processor address      07250000
*                                 is valid.                             07300000
AMDCGPRV EQU   BIT2               Operator did not perform store   @L1C 07350000
*                                 status.  Only general registers       07400000
*                                 and, if MP, processor address         07450000
*                                 are valid.                            07500000
AMDCSADP EQU   BIT3               Not from a stand alone dump      @L1C 07550000
AMDCPAD1 DC    XL1'00'            Padding                          @P2C 07591700
AMDCPADR DC    H'0'               Processor address                @P2C 07633400
AMDCREGS DC    0XL168'00'         Registers and current PSW        @P2C 07675100
AMDCFREG DC    XL32'00'           Floating point REGs 0,2,4,6      @P2C 07716800
AMDCGREG DC    XL64'00'           General registers                @P2C 07758500
AMDCCREG DC    XL64'00'           Control registers                @P2C 07800200
AMDCCPSW DC    XL8'00'            Current PSW                      @P2C 07841900
AMDCPREG DC    A(0)               Prefix register                  @P2C 07883600
AMDCTIME DC    XL8'00'            CPU timer value                  @P2C 07925300
AMDCLOCK DC    XL8'00'            Clock comparator value           @P2C 07967000
AMDCPMAL EQU   *-AMDCPMAP         Length of AMDCPMAP               @P2A 08008700
.ABDPL04 AIF   ('&AMDPACC' NE 'YES').ABDPL07                       @D2A 08051000
*/* ================================================================ */ 08052000
*/* Storage access parameter list                                    */ 08053000
*/* ================================================================ */ 08053500
*/*                                                                     08054000
         AIF   ('&DSECT' EQ 'YES').ABDPL05                         @D2A 08055000
ADPLPACC DS    0D                 Storage access parameter list    @P2C 08056000
         AGO   .ABDPL06                                            @D2A 08057200
.ABDPL05 ANOP  ,                                                   @D2A 08059000
ADPLPACC DSECT ,                  Storage access parameter list    @P2C 08060800
.ABDPL06 SPACE 1                                                   @D2A 08062600
ADPLPAAD DC    A(0)               Dump address to access           @P2C 08062800
ADPLPART DC    A(0)               Buffer location of data          @P2C 08063000
         DC    XL56'00'           reserved                         @P2A 08063200
ADPLLACC EQU   *-ADPLPACC         Length of ADPLPACC               @P2A 08063400
.ABDPL07 AIF   ('&AMDPFMT' NE 'YES').ABDPL0A                       @D2A 08063600
*/* ================================================================ */ 08063800
*/* Control block and Model formatter services parameter list        */ 08064000
*/* ================================================================ */ 08064100
*/*                                                                     08064200
         AIF   ('&DSECT' EQ 'YES').ABDPL08                         @D2A 08064400
ADPLPFMT DS    0D                 Common parameter list            @P3C 08064600
         AGO   .ABDPL09                                            @D2A 08064800
.ABDPL08 ANOP  ,                                                   @D2A 08065000
ADPLPFMT DSECT ,                  Common parameter list            @P3C 08065200
.ABDPL09 SPACE 1                                                   @D2A 08065400
ADPLPOPT DC    B'00000000'        Option flags                     @P2C 08065600
ADPLPOAC EQU   BIT0               Check acronym                    @P4C 08066200
ADPLPOIX EQU   BIT1               Index entry wanted               @D2A 08068000
ADPLPOLM EQU   BIT2               Line mode                        @D2A 08069800
ADPLPOCL EQU   BIT3               Final host invocation to delete      *08071600
                                  modules and freemain CBAT load       *08073400
                                  table storage                    @D2A 08075200
ADPLPSOF EQU   BIT4               Suppress offsets                 @D3A 08075600
ADPLPPDA EQU   BIT5               Print dump address               @D3A 08076000
ADPLPSDH EQU   BIT6               Suppress dump header             @D3A 08076400
ADPLPSTM EQU   BIT7               Suppress truncation msg          @D3A 08077100
ADPLPRET DS    0BL2               Flags for returning information  @P2C 08077900
*                                 to caller                        @D2A 08079400
ADPLPRE1 DC    B'00000000'                                         @P2C 08080900
ADPLPRAC EQU   BIT0               Bad acronym check                @D2A 08082400
ADPLPRNL EQU   BIT1               Unable to load model/formatter   @D2A 08083900
ADPLPRNB EQU   BIT2               Unavailable control block        @D2A 08085400
ADPLPRNF EQU   BIT3               Unable to format                 @D2A 08086900
ADPLPRTB EQU   BIT4               Truncated block                  @D2A 08088400
ADPLPRNC EQU   BIT5               No CBAT entry                    @D2A 08089900
ADPLPRNE EQU   BIT6               Null CBAT entry                  @D2A 08091400
ADPLPRNG EQU   BIT7               No CBAT load table storage       @D2A 08092900
ADPLPRE2 DC    B'00000000'                                         @P2C 08094400
ADPLPRUU EQU   BIT0               Entry previously marked unuseable@D2A 08095900
ADPLPRIM EQU   BIT1               Invalid model specification      @D2A 08097400
ADPLPRCM EQU   BIT2               Model error                      @D2A 08098900
ADPLPNVM EQU   BIT3               No view match, nothing printed   @D2A 08099600
ADPLPBXI EQU   BIT4               Bad extension identifier         @L5A 08099800
ADPLPFEF EQU   BIT5               Formatting exit failure          @L5A 08100000
ADPLPNXD EQU   BIT6               No EXIT DATA                     @P7A 08100200
ADPLPBLC DC    FL1'0'             Blank line count                 @P2C 08100400
ADPLPCHA DC    CL8' '             Control block acronym or model   @P2C 08102200
*                                 name                             @D2A 08104000
ADPLPPTR DC    A(0)               Model address                    @P2C 08105800
ADPLPBAS DC    A(0)               Buffer address if block is in    @P2C 08107600
*                                 main storage                     @D2A 08109400
ADPLPDAC DC    H'0'               Dynamic array count              @P2C 08111200
ADPLPBLS DC    H'0'               Length of block in main storage  @P2C 08113000
ADPLPBAV DC    A(0)               Virtual block address in dump    @P2C 08114800
ADPLPLME DC    A(0)               Line mode exit entry             @P2C 08116600
*                                 point address                    @D2A 08118400
ADPLPVCL DS    0BL2               Field viewing control            @P2C 08120200
ADPLPVC1 DC    B'00000011'                                         @P2C 08122000
ADPLPKEY EQU   BIT0               Keyfield                         @D2A 08123800
ADPLPSUM EQU   BIT1               Summary field                    @D2A 08125600
ADPLPREG EQU   BIT2               Register save area               @D2A 08127400
ADPLPLIN EQU   BIT3               Linkage field                    @D2A 08129200
ADPLPEFD EQU   BIT4               Error fields                     @D2A 08131000
ADPLPHEX EQU   BIT5               Hex dump                         @D2A 08132800
ADPLPNOR EQU   BIT6               All non reserved fields          @D2A 08134600
ADPLPRES EQU   BIT7               Reserved fields                  @D2A 08136400
ADPLPVC2 DC    B'00000000'                                         @P2C 08137100
ADPLPSTA EQU   BIT0               Static array                     @D2A 08137800
ADPLPDCD EQU   BIT0               Decode flagfields                @L5A 08138100
ADPLPDYN EQU   BIT1               Dynamic array                    @D2A 08138500
ADPLPINP EQU   BIT2               Input field                      @D4A 08138700
ADPLPOUT EQU   BIT3               Output field                     @D4A 08138900
ADPLPCV1 EQU   BIT4               Component use                    @D2A 08139200
ADPLPCV2 EQU   BIT5               Component use                    @D2A 08139900
ADPLPCV3 EQU   BIT6               Component use                    @D2A 08140600
ADPLPCV4 EQU   BIT7               Component use                    @D2A 08141300
ADPLPOSI DC    H'0'               Starting offset                  @P2C 08141800
ADPLPDL  DS    2F                 Dimension lower limits           @D4A 08141900
         ORG   ADPLPDL            Describe individual limits       @D4A 08142000
ADPLPDL1 DC    F'0'               Dimension 1 lower limit          @D4A 08142100
ADPLPDL2 DC    F'0'               Dimension 2 lower limit          @D4A 08142200
ADPLPDU  DS    2F                 Dimension upper limits           @D4A 08142300
         ORG   ADPLPDU            Describe individual limits       @D4A 08142400
ADPLPDU1 DC    F'0'               Dimension 1 upper limit          @D4A 08142500
ADPLPDU2 DC    F'0'               Dimension 2 upper limit          @D4A 08142600
         DC    XL4'00'            Reserved                         @L5C 08142700
ADPLPEXP DC    F'0'               -> Format parameter extension    @L5A 08142800
ADPLPFXC DC    F'0'               Format exit communication        @D4A 08142900
ADPLLFMT EQU   *-ADPLPFMT         Length of ADPLPFMT               @P2A 08143000
.ABDPL1A AIF   ('&AMDPFXT' NE 'YES').ABDPL0A                       @L5A 08143200
*/* ================================================================ */ 08143300
*/* Format parameter extension                                       */ 08143400
*/* ================================================================ */ 08143500
*/*                                                                     08143600
         AIF   ('&DSECT' EQ 'YES').ABDPL18                         @L5A 08143700
ADPLPFXT DS    0D                 Format parameter extension       @L5A 08143800
         AGO   .ABDPL19                                            @L5A 08143900
.ABDPL18 ANOP  ,                                                   @L5A 08144000
ADPLPFXT DSECT ,                  Format parameter extension       @L5A 08144100
.ABDPL19 SPACE 1                                                   @L5A 08144200
ADPLFXHD DS    0CL64              Header                           @L5A 08144300
ADPLFXID DC    C'FEXT'            Identifier                       @L5A 08144400
ADPLFXOP DC    B'00000000'        Extended options                 @L5A 08144500
ADPLFXQE EQU   BIT0               Quit on access error             @L5A 08144600
ADPLFXIN EQU   BIT1               Indent after line 1              @L5A 08144700
ADPLFXNE EQU   BIT2               Name is in ES record(LX)         @L5A 08144800
ADPLFXFE EQU   BIT3               Invoke post format exits         @L5A 08144900
ADPLFXUA EQU   BIT4               Use extended acronym             @L5A 08145000
ADPLFXSS EQU   BIT5               Storage defined by ES record     @L5A 08145100
ADPLFXFA EQU   BIT6               Fill absent data                 @L5A 08145200
         DC    XL3'00'                                             @D5C 08145600
ADPLFXRT DC    B'00000000'        Extension return information     @L5A 08146000
ADPLFXAN EQU   BIT0               Area(s) not available            @L5A 08146100
ADPLFXBE EQU   BIT1               Bad ES record(s)                 @L5A 08146200
         DC    XL5'00'                                             @L5A 08146300
ADPLFXIL DC    XL1'00'            Indentation length               @L5A 08146400
ADPLFXAC DC    XL31'40'           Extended acronym                 @L5A 08146500
ADPLFXLX DC    XL1'00'            List index to ES for name        @L5A 08146600
ADPLFXFC DC    XL1'00'            Fill char for absent data        @P5A 08146700
ADPLFXEO DC    A(0)               Extended position offset         @02A 08146800
         DC    XL12'00'           Reserved                         @D5C 08147000
ADPLFXLS DC    16XL8'00'          ES record pointer list           @L5A 08147200
         ORG   ADPLFXLS                                            @L5A 08147300
ADPLFXBF DC    F'0'               Buffer address                   @L5A 08147400
ADPLFXES DC    F'0'               ES record pointer                @L5A 08147500
ADPLLFXT EQU   *-ADPLPFXT         Length of ADPLPTXT               @L5A 08147600
.ABDPL0A AIF   ('&AMDPECT' NE 'YES').ABDPL0D                       @D2A 08147700
*/* ================================================================ */ 08147800
*/* ECT service parameter list                                       */ 08147900
*/* ================================================================ */ 08148000
*/*                                                                     08148100
         AIF   ('&DSECT' EQ 'YES').ABDPL0B                         @D2A 08148200
ADPLPECT DS    0D                 ECT service parameter list       @P3C 08148300
         AGO   .ABDPL0C                                            @D2A 08148400
.ABDPL0B ANOP  ,                                                   @D2A 08148500
ADPLPECT DSECT ,                  ECT service parameter list       @P3C 08148600
.ABDPL0C SPACE 1                                                   @D2A 08148700
ADPLPEFG DC    B'00000000'        Flags for choosing exit - '0'    @P2C 08149200
*                                 indicates verb exit              @D2A 08149700
ADPLPETB EQU   BIT0               TCB exit                         @P2C 08150200
ADPLPEAS EQU   BIT1               ASCB exit                        @P2C 08150700
ADPLPEVR EQU   BIT2               VERB exit                        @L5A 08151800
ADPLPESC EQU   BIT3               Subcommand or command procedure  @L9A 08152000
ADPLPESP EQU   BIT5               Special exit                     @L5A 08152300
ADPLPENM EQU   BIT6               Exit name is in ADPLPEVB         @01A 08152900
ADPLPESR EQU   BIT7               Formatting exit                  @L5C 08153000
ADPLPERR DC    B'00000000'        Flags for returning              @P2C 08153200
*                                 information to caller            @D2A 08153700
ADPLPEST EQU   BIT0               Exit return code='4' indicating  @P2C 08154200
*                                 insufficient storage             @D2A 08154700
ADPLPENV EQU   BIT1               Verb not found in ECT            @P2C 08155200
ADPLPELI EQU   BIT2               LINK failed - 806 abend          @P2C 08155700
ADPLPENE EQU   BIT3               No ESTAE established             @P2C 08156200
ADPLPECF DC    B'00000000'        Control flags                    @L3A 08156400
ADPLPECP EQU   BIT0               ADPLPEPL -> parm list            @L3A 08156500
ADPLPEMA EQU   BIT1               Use ADPLSAMK value passed        @L5A 08156600
ADPLPTOC EQU   BIT2               Suppressing TOC entries          @03A 08156700
         DC    XL1'00'            Reserved                         @P2C 08156800
ADPLPEVB DC    CL8' '             VERB to search on                @P2C 08157000
ADPLPEPL DC    A(0)               -> Parameter list to be passed       *08157200
                                  to the exit                      @L3A 08157400
ADPLPESY DC    A(0)               -> BLSRESSY                      @L5A 08157600
         DC    XL44'00'           Reserved                         @D5C 08157900
ADPLLECT EQU   *-ADPLPECT         Length of ADPLPECT               @P2A 08158200
.ABDPL0D AIF   ('&AMDPSEL' NE 'YES').ABDPL13                       @D2A 08160100
*/* ================================================================ */ 08160700
*/* Select ASID service parameter list                               */ 08161300
*/* ================================================================ */ 08161600
*/*                                                                     08161900
         AIF   ('&DSECT' EQ 'YES').ABDPL11                         @D2A 08162500
ADPLPSEL DS    0D                 Select ASID service parm list    @P3C 08163100
         AGO   .ABDPL12                                            @D2A 08163700
.ABDPL11 ANOP  ,                                                   @D2A 08164300
ADPLPSEL DSECT ,                  Select ASID service parm list    @P3C 08164900
.ABDPL12 SPACE 1                                                   @D2A 08165500
ADPLPSF1 DC    B'00000000'        Keyword flags                    @P2C 08166100
ADPLPSAL EQU   BIT0               ALL                              @D3A 08166700
ADPLPSCR EQU   BIT1               CURRENT                          @D3A 08167300
ADPLPSER EQU   BIT2               ERROR                            @D3A 08167900
ADPLPSTE EQU   BIT3               TCBERROR                         @D3A 08168500
ADPLPSJL EQU   BIT4               JOBLIST                          @D3A 08169100
ADPLPSAS EQU   BIT5               ASIDLIST                         @D3A 08169700
ADPLPSF2 DC    B'00000000'        Option flags                     @P8A 08169800
ADPLPSXL EQU   BIT0               Use extended length              @P8A 08169900
ADPLPSAF EQU   BIT1               Select all ASIDs referenced by       *08170000
                                  the ASIDLIST (if any)            @L9A 08170100
         DC    XL1'00'            Reserved                         @P8C 08170200
ADPLPSCF DC    B'00000000'        Condition flags                  @L3A 08170300
ADPLPSNV EQU   BIT0               Unable to get ASVT               @L3A 08170400
ADPLPSOL DC    A(0)               ->Select service output list     @P2C 08170500
ADPLPSJN DC    A(0)               ->Jobname list                   @P2C 08170900
ADPLPSAI DC    A(0)               ->ASID list                      @P2C 08171300
ADPLPS31 DC    F'0'               Extended output length           @P8A 08171500
         DC    XL44'00'           reserved                         @P8C 08171700
ADPLLSEL EQU   *-ADPLPSEL         Length of ADPLPSEL               @P2A 08172100
.ABDPL13 AIF   ('&AMDOSEL' NE 'YES').ABDPL16                       @D2A 08172700
*/* ================================================================ */ 08173300
*/* Select ASID service output mappings                              */ 08173900
*/* ================================================================ */ 08174200
*/*                                                                     08174500
ADPLOSEL DSECT ,                  Select ASID output header        @P3C 08175100
ADPLOSHD DS    0XL8               Header                           @P2C 08175700
ADPLOSSZ DC    H'0'               Size of entire list              @P2C 08176300
ADPLOSCT DC    H'0'               Count of entries                 @P2C 08176900
ADPLOSSF DC    B'00000000'        Selection flags                  @P2C 08177500
ADPLOSJM EQU   BIT0               Some jobname(s) not found        @D3A 08178100
ADPLOSAU EQU   BIT1               Some ASID(s) unassigned          @D3A 08178700
ADPLOSAM EQU   BIT2               Some ASID(s) not in dump         @D3A 08179300
ADPLOSDF DC    B'00000000'        Dump flags                       @P2C 08179600
ADPLOSSD EQU   BIT0               Stand alone dump                 @P1A 08179900
         DC    XL1'00'            Reserved                         @P2C 08180300
ADPLOSSP DC    FL1'00'            Subpool                          @P2C 08180700
ADPLOSNB DS    0D                 End of fixed-length base         @L4A 08180900
ADPLOSLL EQU   *-ADPLOSEL         Length of ADPLOSEL               @P2A 08181100
         SPACE 1                                                   @P2P 08181500
ADPLOSNT DSECT ,                  Array, 1 per selected ASID       @P2C 08181900
ADPLOSAP DC    A(0)               Pointer to ASCB                  @P2C 08182300
ADPLOSCW DS    0BL4               Control word                     @P2C 08182700
ADPLOSF1 DC    B'00000000'        Flag for selection match         @P2C 08183100
ADPLOSCR EQU   BIT0               Current on CPU=ASLCPUX           @D3A 08183500
ADPLOSJN EQU   BIT1               Matches jobnames(ASLJOBX)        @D3A 08184100
ADPLOSER EQU   BIT2               ASID in error                    @D3A 08184700
ADPLOSTE EQU   BIT3               TCBERROR                         @D3A 08185300
ADPLOSAS EQU   BIT4               Selected by ASIDLIST             @D3A 08185900
ADPLOSAL EQU   BIT5               Selected by ALL                  @D3A 08186500
ADPLOSF2 DC    B'00000000'        Status flags                     @P2C 08187100
ADPLOSHA EQU   BIT0               CURRENT HOME ASID                @D3A 08187700
ADPLOSPA EQU   BIT1               CURRENT PRIMARY ASID             @D3A 08188300
ADPLOSSA EQU   BIT2               CURRENT SECONDARY ASID           @D3A 08188900
ADPLOSCM EQU   BIT3               ASID HOLDS CML LOCK              @D3A 08189500
ADPLOSND EQU   BIT4               Address space not in dump        @D3A 08190100
ADPLOSNA EQU   BIT5               Private area not accessed        @D3A 08190700
ADPLOSCP DC    B'00000000'        CPUID where current              @P2C 08191200
         DC    XL5'00'            Reserved                         @P2C 08191700
ADPLOSAI DC    H'0'               ASID                             @P2C 08192200
         DC    XL2'00'            Reserved                         @P2C 08192700
ADPLOSJB DC    CL8' '             Jobname                          @P2C 08193200
         DC    XL8'00'            RESERVED                         @P2C 08193700
ADPLOSNL EQU   *-ADPLOSNT         Length of ADPLOSNT               @P2A 08194200
.ABDPL16 ANOP  ,                                                   @D2A 08194900
         MEND  ,                  End of assembler macro             */ 08195500
*                                                                       08203500
*%ABDPLPLS:                         /* Begin PL/S macro              */ 08211500
*   IF AMDEXIT = 'NO'                                                   08219500
*      %THEN                        /* Do not define ABDPL           */ 08227500
*     %GOTO ABDPL05;                /*                               */ 08235500
*   %ADPLLEN = 'LENGTH(ABDPL)';     /* Length of ABDPL           @P2A*/ 08243500
*   %ADPLEXTL = 'LENGTH(ADPLEXTN)'; /* Length of ADPLEXTN        @P2A*/ 08251500
*   %ADPLLACC = 'LENGTH(ADPLPACC)'; /* Length of ADPLPACC        @P2A*/ 08259500
*   %ADPLLFMT = 'LENGTH(ADPLPFMT)'; /* Length of ADPLPFMT        @P2A*/ 08267500
*   %ADPLLECT = 'LENGTH(ADPLPECT)'; /* Length of ADPLPECT        @P2A*/ 08275500
*   %ADPLLSEL = 'LENGTH(ADPLPSEL)'; /* Length of ADPLPSEL        @P2A*/ 08283500
*   %ADPLOSLL = 'LENGTH(ADPLOSEL)'; /* Length of ADPLOSEL        @P2A*/ 08291500
*   %ADPLOSNL = 'LENGTH(ADPLOSNT)'; /* Length of ADPLOSNT        @P2A*/ 08299500
*   %IF ABDPLSTORAGE = '' %THEN     /* No scope/storage class    @L1A*/ 08307500
*     %ABDPLSTORAGE = 'BASED(ABDPLPTR)'; /* Default scope/storage       08315500
*                                                                @L1A*/ 08323500
*   %IF ADPLEXTNSTORAGE = '' %THEN  /* No scope/storage class    @D1A*/ 08331500
*     %ADPLEXTNSTORAGE = 'BASED(ADPLEXT)'; /* Default scope/storage     08339500
*                                                                @D1A*/ 08347500
*   %IF ADPLPACCSTORAGE = '' %THEN  /* No scope/storage class    @D1A*/ 08355500
*     %ADPLPACCSTORAGE = 'BASED';   /* Default scope/storage     @D1A*/ 08363500
*   %IF ADPLPFMTSTORAGE = '' %THEN  /* No scope/storage class    @D2P*/ 08371500
*     %ADPLPFMTSTORAGE = 'BASED';   /* Default scope/storage     @D2P*/ 08379500
*   %IF ADPLPFXTSTORAGE = '' %THEN  /* No scope/storage class    @L5A*/ 08382100
*     %ADPLPFXTSTORAGE = 'BASED';   /* Default scope/storage     @L5A*/ 08384700
*   %IF ADPLPECTSTORAGE = '' %THEN  /* No scope/storage class    @D1C*/ 08387500
*     %ADPLPECTSTORAGE = 'BASED';   /* Default scope/storage     @D1A*/ 08395500
*   %IF ADPLPSELSTORAGE = '' %THEN  /* No scope/storage class    @D3C*/ 08403500
*     %ADPLPSELSTORAGE = 'BASED';   /* Default scope/storage     @D3A*/ 08411500
*   %IF ADPLPEQSSTORAGE = '' %THEN  /* No scope/storage class    @D1A*/ 08419500
*     %ADPLPEQSSTORAGE = 'BASED';   /* Default scope/storage     @D1A*/ 08427500
*   %IF ADPLOSELSTORAGE = '' %THEN  /* No scope/storage          @D3A*/ 08435500
*     %ADPLOSELSTORAGE = 'BASED(ADPLPSOL)'; /* Default scope/stg.       08443500
*                                                                @L2C*/ 08451500
*   DECLARE                                                             08459500
*     1    ABDPL    ABDPLSTORAGE BOUNDARY(DWORD), /* Common IPCS/SNAP   08467500
*                                      parameter list to exits   @P3C*/ 08476600
*                                                                       08483300
*/********************************************************************/ 08490000
*/* The address of the common IPCS/SNAP parameter list to exits is   */ 08500000
*/* passed to exits in register 1.  The exits, in turn, pass the     */ 08510000
*/* list to exit services either in register 1 or as the first       */ 08520000
*/* formal parameter in a parameter list.                            */ 08530000
*/********************************************************************/ 08540000
*                                                                       08579200
*      2    ADPLCBP  POINTER(31),   /* -> Control block          @L5A*/ 08618400
*       3    ADPLTCB  POINTER(31),  /* -> TCB                    @L5C*/ 08657600
*      2    ADPLASID SIGNED BINARY(15), /* Address space identifier  */ 08696800
*      2    ADPLSBPL CHARACTER(1),  /* Subpool used to get save area    08736000
*                                      by component routine          */ 08775200
*      2    ADPLFLAG,               /* Flag field                    */ 08814400
*       3    ADPLSNPR BIT(1),       /* 0-Module loaded by SNAP          08853600
*                                      1-Module loaded by IPCS       */ 08892800
*       3    ADPLSYTM BIT(1),       /* 0-System is OS/VS2 1-System is   08932000
*                                      OS/VS1                        */ 08971200
*       3    ADPLDMGT BIT(1),       /* For data management formatter    09010400
*                                      under SNAP: 0-Format DEB only,   09050000
*                                      1-Format DEB,DCB,IOB          */ 09100000
*       3    ADPLIPCS BIT(1),       /* Called by IPCS                */ 09150000
*       3    ADPLPRT  BIT(1),       /* SYSPRINT data set             */ 09200000
*       3    ADPLSYNO BIT(1),       /* Exit given control for syntax    09250000
*                                      checking only                 */ 09300000
*       3    ADPLEJEC BIT(1),       /* Page eject                    */ 09350000
*      2    ADPLBUF  POINTER(31),   /* Pointer to output buffer      */ 09400000
*      2    ADPLPRNT POINTER(31),   /* Address of print routine      */ 09450000
*      2    ADPLCVT  POINTER(31),   /* Address of CVT                */ 09500000
*      2    ADPLMEMA POINTER(31),   /* Address of memory access         09550000
*                                      routine                       */ 09600000
*      2    ADPLFRMT POINTER(31),   /* Address of format routine     */ 09650000
*      2    ADPLCOM1 FIXED(31),     /* Reserved for component use    */ 09700000
*       3    ADPLCMP1 POINTER(31),  /* Reserved for component use@P9A*/ 09725000
*      2    ADPLCOM2 FIXED(31),     /* Reserved for component use    */ 09750000
*       3    ADPLCMP2 POINTER(31),  /* Reserved for component use@P9A*/ 09775000
*      2    ADPLCOM3 FIXED(31),     /* Reserved for component use    */ 09800000
*       3    ADPLCMP3 POINTER(31),  /* Reserved for component use@P9A*/ 09825000
*      2    ADPLCOM4 FIXED(31),     /* Reserved for component use    */ 09850000
*       3    ADPLCMP4 POINTER(31),  /* Reserved for component use@P9A*/ 09875000
*      2    ADPLFMT1 POINTER(31),   /* Reserved for format routine   */ 09900000
*      2    ADPLFMT2 POINTER(31),   /* Reserved for format routine   */ 09950000
*      2    ADPLEXT  POINTER(31),   /* Address of extension whose       10000000
*                                      first word contains the          10050000
*                                      address of the operands list     10100000
*                                      or zero if none               */ 10150000
*      2    ADPLABDA POINTER(31),   /* Address of host internal         10200000
*                                      parameter list            @L1C*/ 10250000
*      2    ADPLTRFM POINTER(31),   /* Address of trace control block   10300000
*                                      (SNAP only)               @L1C*/ 10350000
*      2    ADPLSERV POINTER(31),   /* ->Services router         @D1C*/ 10385000
*      2    ADPLLEV  UNSIGNED BINARY(8), /* Index indentation level     10420000
*                                                                @L1C*/ 10455000
*      2    *        CHAR(1),       /* Reserved, was entry code         10480400
*                                      number corresponding to          10505800
*                                      AMDMNDXT macro entries.          10531200
*                                      Support ended in this release    10556600
*                                                                @P6C*/ 10582000
*      2    ADPLLNCT UNSIGNED BINARY(16), /* Lines per page      @L1C*/ 10607600
*      2    ADPLLNRM UNSIGNED BINARY(16), /* Lines remaining on the     10652700
*                                      current page              @L1C*/ 10697800
*      2    ADPLDLEN UNSIGNED BINARY(16), /* Storage access length      10742900
*                                                                @L1C*/ 10788000
*      2    ADPLOPLN UNSIGNED BINARY(16), /* Length of operands  @L1C*/ 10833100
*      2    ADPLPRDP,               /* Address qualification     @L1C*/ 10878200
*       3    ADPLVIRT BIT(1),       /* Virtual address           @L1C*/ 10923300
*       3    ADPLREAL BIT(1),       /* Real address              @L1C*/ 10968400
*       3    ADPLCPU  BIT(1),       /* CPU data request          @L1C*/ 11013500
*       3    ADPLHDR  BIT(1),       /* Dump header request       @L1C*/ 11058600
*       3    *        BIT(3),       /* reserved                  @L1A*/ 11103700
*                                                                       11126800
*/*     The following bit governs the masking of register zero prior */ 11150000
*/*     to its use by the storage access service as a virtual        */ 11200000
*/*     storage address.  If it is off, X'7FFFFFFF' will be          */ 11250000
*/*     logically ANDed with register zero to obtain the requested   */ 11300000
*/*     address.  If it is on, X'00FFFFFF' will be logically ANDed   */ 11350000
*/*     with register zero to obtain the requested address.          */ 11400000
*                                                                       11450000
*       3    ADPLSAMK BIT(1),       /* MVS/370 virtual address   @L1A*/ 11500000
*      2    *        CHARACTER(1),  /* reserved                  @D1C*/ 11550000
*      2    ADPLNDX  POINTER(31),   /* Address of the TSO service       11600000
*                                      routine.                  @L1A*/ 11650000
*      2    ADPLPGNO UNSIGNED BINARY(32), /* Current page number @L1A*/ 11750000
*      2    ADPLSRA  POINTER(31),   /* ->Services Router area    @D1A*/ 11783300
*      2    *        CHARACTER(4),  /* reserved                  @D1C*/ 11816600
*                                                                       11833300
*/* ================================================================ */ 11850500
*/* Output buffer is provided by the host and is filled in prior to  */ 11867800
*/* calling the print and index services.  All hosts provide a       */ 11885600
*/* buffer at least 132 bytes in length (see ADPLBUFR).  IPCS        */ 11903400
*/* supplies a longer buffer (see ADPLBUFX and ADPLMAXL) if the      */ 11921200
*/* output media to which messages are being routed will accomodate  */ 11939000
*/* longer lines.                                                    */ 11956800
*/* ================================================================ */ 11965900
*                                                                       11975000
*     ADPLBUFR CHARACTER(132) BASED(ADPLBUF), /* Output buffer   @L1A*/ 12000000
*     ADPLBUFO CHARACTER(1) BASED(ADPLBUF) POSITION(133), /* One        12050000
*                                      overflow byte is provided to     12100000
*                                      the exit                  @L1A*/ 12150000
*     ADPLBUFX CHARACTER(250) BASED(ADPLBUF), /* Output buffer          12166800
*                                      supplied by IPCS          @L3A*/ 12183600
*     1    ADPLEXTN CHARACTER(64) ADPLEXTNSTORAGE BOUNDARY(DWORD), /*   12189300
*                                      ABDPL extension           @P3C*/ 12195000
*                                                                       12197900
*/********************************************************************/ 12200900
*/* ABDPL extension is addressed by ADPLEXT.                         */ 12201000
*/********************************************************************/ 12201100
*                                                                       12201200
*      2    ADPLOPTR POINTER(31),   /* ->Operands buffer         @D1A*/ 12201300
*      2    ADPLCPPL POINTER(31),   /* ->TSO CPPL                @D1A*/ 12201400
*      2    ADPLESYP POINTER(31),   /* -> BLSRESSY               @L5C*/ 12201500
*      2    ADPLCODE UNSIGNED BINARY(15), /* Router return code  @D1A*/ 12201600
*      2    ADPLPFLG BIT(8),        /* Processing flags          @D1A*/ 12201700
*       3    ADPLNMSG BIT(1),       /* 1-Suppress error messages @D1A*/ 12201800
*       3    ADPLNPRT BIT(1),       /* 1=Suppress print services @L2C*/ 12201900
*       3    *        BIT(6),       /* reserved                  @L3C*/ 12202000
*      2    ADPLEFLG BIT(8),        /* Error flags               @D1A*/ 12202100
*       3    ADPLEFAS BIT(1),       /* No automatic storage      @D1A*/ 12202200
*       3    *        BIT(7),       /* reserved                  @D1A*/ 12202300
*      2    ADPLMAXL UNSIGNED BINARY(8), /* Recommended maximum line    12202400
*                                      width                     @D1A*/ 12202500
*      2    ADPLSCOL UNSIGNED BINARY(8), /* Control block formatting    12202600
*                                      start column. Zero based. Zero   12202700
*                                      means do not offset the data.    12202800
*                                                                @L3A*/ 12202900
*      2    ADPLCOLS UNSIGNED BINARY(8), /* Control block formatting    12203000
*                                      column spacing            @D1A*/ 12203100
*      2    *        UNSIGNED BINARY(8), /* Reserved             @L3A*/ 12203200
*      2    ADPLEFCD UNSIGNED BINARY(16), /* Exit function code  @L3A*/ 12203600
*      2    ADPLEFLE BIT(8),        /* Environment flags         @PBA*/ 12203700
*   %IF SYSVERSION = '' %THEN       /* No long names for PLS     @PBA*/ 12203800
*     %GOTO ABDPL02;                /* No long names for PLS     @PBA*/ 12203900
*   %IF SYSRULESMOD = 'PL/S-III ' %THEN /* No long names for PLS @PBA*/ 12204000
*     %GOTO ABDPL02;                /* No long names for PLS     @PBA*/ 12204100
*       3    ADPLESAME BIT(1),      /* ESAME mode dump data      @PBA*/ 12204200
*       3    ADPLRS01 BIT(7),       /* Reserved                  @PBA*/ 12204300
*%ABDPL02:                          /* No long names for PLS     @PBA*/ 12204400
*   ;                               /* No long names for PLS         */ 12204500
*      2    ADPLRSV1 CHARACTER(41), /* Reserved                  @PBC*/ 12204600
*                                                                       12204700
*/* ================================================================ */ 12204800
*/* Services are invoked as follows:                                 */ 12204900
*/*                                                                  */ 12205000
*/*   CALL ADPLESRV(ABDPL,service-code,service-parmlist)             */ 12205100
*/*                                                                  */ 12205200
*/*   where                                                          */ 12205300
*/*     service-code is one of the constants defined below which     */ 12205400
*/*                  indicates to the router the service desired, and*/ 12205500
*/*                                                                  */ 12205600
*/*     service-parmlist is the parameter list for the service, as   */ 12205700
*/*                  mapped below                                    */ 12205800
*/*                                                                  */ 12205900
*/*   Note: The exit services router has attributes AMODE(ANY) and   */ 12206000
*/*   RMODE(24).  These attributes are not explicitly stated so that */ 12206100
*/*   modules may be compiled, specifying code execution under both  */ 12206200
*/*   MVS/370 and MVS/XA operating systems without encountering a    */ 12206300
*/*   compilation error.                                             */ 12206400
*/*                                                                  */ 12206500
*/* ================================================================ */ 12206600
*                                                                       12206700
*     ADPLESRV ENTRY BASED(ADPLSERV) VALUERANGE(*), /* Router    @D1A*/ 12206800
*                                                                       12206900
*/* ---------------------------------------------------------------- */ 12207000
*/* Service codes defining services to router.                       */ 12207100
*/* ---------------------------------------------------------------- */ 12207200
*                                                                       12207300
*     ADPLS000 CONSTANT(1),         /* 1st service code in use   @L8A*/ 12207400
*     ADPLSACC CONSTANT(1),         /* Storage access service    @D1A*/ 12207500
*     ADPLSPRT CONSTANT(2),         /* Print service             @D1A*/ 12207600
*     ADPLSFMT CONSTANT(3),         /* Format model processor    @D1A*/ 12207700
*     ADPLSCBF CONSTANT(4),         /* Control block formatter          12207800
*                                      service                   @D1A*/ 12208200
*     ADPLSNDX CONSTANT(5),         /* Index service             @D1A*/ 12208300
*     ADPLSECT CONSTANT(6),         /* ECT exit service          @D1A*/ 12208400
*     ADPLSSEL CONSTANT(7),         /* Select ASID service       @D1A*/ 12208500
*     ADPLSEQS CONSTANT(8),         /* Equate symbol service     @D1A*/ 12208600
*     ADPLSGTS CONSTANT(9),         /* Get symbol service        @D1A*/ 12208700
*     ADPLSCQE CONSTANT(10),        /* CQE create service        @L3A*/ 12208800
*     ADPLSCBS CONSTANT(11),        /* CB status service         @L3A*/ 12208900
*     ADPLSPR2 CONSTANT(12),        /* Expanded Print service with      12209000
*                                      parm list. See BLSUPPR2          12209600
*                                      mapping                   @L3A*/ 12209700
*     ADPLSADS CONSTANT(13),        /* Add symptom service       @L3A*/ 12209800
*     ADPLSWHS CONSTANT(14),        /* WHERE service             @L3A*/ 12209900
*     ADPLSNAM CONSTANT(15),        /* NAME service              @L5A*/ 12210000
*     ADPLSSYM CONSTANT(16),        /* SYMBOL service            @L5A*/ 12210100
*     ADPLSMAP CONSTANT(17),        /* MAP service               @L5A*/ 12210200
*     ADPLSNTK CONSTANT(18),        /* NAME/TOKEN service        @L6A*/ 12210300
*     ADPLSCSI CONSTANT(19),        /* CSVINFO service           @D6A*/ 12210400
*     ADPLSSTR CONSTANT(20),        /* IXLZSTR service           @L7A*/ 12210500
*     ADPLSSYD CONSTANT(21),        /* SYMDEF service            @D7A*/ 12210600
*     ADPLS999 CONSTANT(21),        /* Last service code in use  @D7C*/ 12210700
*                                                                       12210800
*/* ---------------------------------------------------------------- */ 12210900
*/* Exit function code values for field ADPLEFCD                     */ 12211000
*/* ---------------------------------------------------------------- */ 12211100
*                                                                       12211200
*     ADPLEFAN CONSTANT(1),         /* Called as an ANALYZE exit @L3A*/ 12211300
*     ADPLEFAC CONSTANT(2),         /* Exit called as ASCB exit  @L5A*/ 12211400
*     ADPLEFTC CONSTANT(3),         /* Exit called as TCB exit   @L5A*/ 12211500
*     ADPLEFSR CONSTANT(4),         /* Exit called as formatting exit   12211600
*                                                                @L5A*/ 12211700
*                                                                       12211800
*/* ================================================================ */ 12211900
*/* SERVICE PARAMETER LISTS                                          */ 12212000
*/* ================================================================ */ 12212100
*                                                                       12212200
*     1    ADPLPACC CHARACTER(64) BOUNDARY(WORD) ADPLPACCSTORAGE, /*    12212300
*                                      Storage access parameter list    12212400
*                                                                @P3C*/ 12212500
*                                                                       12212600
*/* ================================================================ */ 12212700
*/* Storage access service parameter list                            */ 12212800
*/* ================================================================ */ 12212900
*                                                                       12213000
*      2    ADPLPAAD POINTER(31),   /* Address to be read        @D1A*/ 12213100
*      2    ADPLPART POINTER(31),   /* Buffer location of data   @P3C*/ 12213200
*      2    *        CHARACTER(56), /* reserved                  @P2A*/ 12213300
*     1    ADPLPFMT CHARACTER(64) BOUNDARY(WORD) ADPLPFMTSTORAGE, /*    12213400
*                                      Common parameter list     @P3C*/ 12213500
*                                                                       12213600
*/* ================================================================ */ 12213700
*/* Control block and Model formatter services parameter list        */ 12213800
*/* ================================================================ */ 12213900
*                                                                       12214000
*      2    ADPLPOPT BIT(8),        /* Option flags              @D2P*/ 12214100
*       3    ADPLPOAC BIT(1),       /* Check acronym             @D2P*/ 12214200
*       3    ADPLPOIX BIT(1),       /* Index entry wanted        @D2P*/ 12214300
*       3    ADPLPOLM BIT(1),       /* Line mode                 @D2P*/ 12214400
*       3    ADPLPOCL BIT(1),       /* Final host invocation to         12214500
*                                      delete modules and freemain      12214600
*                                      CBAT Load Table           @P2C*/ 12214700
*       3    ADPLPSOF BIT(1),       /* Suppress offsets          @D3P*/ 12214800
*       3    ADPLPPDA BIT(1),       /* Print dump address        @D3P*/ 12214900
*       3    ADPLPSDH BIT(1),       /* Suppress dump header      @D3P*/ 12215000
*       3    ADPLPSTM BIT(1),       /* Suppress truncation msg   @D2P*/ 12215100
*      2    ADPLPRET BIT(16),       /* Flags for returning              12215200
*                                      information to caller     @D2P*/ 12215300
*       3    ADPLPRE1 BIT(8),       /*                           @D2P*/ 12215400
*        4    ADPLPRAC BIT(1),      /* Control block acronym check      12215500
*                                      failed                    @P2C*/ 12215600
*        4    ADPLPRNL BIT(1),      /* Unable to load model      @D2P*/ 12215700
*        4    ADPLPRNB BIT(1),      /* Unavailable control block @D2P*/ 12215800
*        4    ADPLPRNF BIT(1),      /* Unable to format          @D2P*/ 12215900
*        4    ADPLPRTB BIT(1),      /* Truncated block           @D2P*/ 12216000
*        4    ADPLPRNC BIT(1),      /* No CBAT entry             @D2P*/ 12216100
*        4    ADPLPRNE BIT(1),      /* Null CBAT entry           @D2P*/ 12216200
*        4    ADPLPRNG BIT(1),      /* No CBAT load table storage       12216300
*                                                                @P2C*/ 12216400
*       3    ADPLPRE2 BIT(8),       /*                           @D2P*/ 12216500
*        4    ADPLPRUU BIT(1),      /* Formatter previously marked      12216600
*                                      unuseable                 @P2C*/ 12216700
*        4    ADPLPRIM BIT(1),      /* Invalid model             @D2P*/ 12216800
*        4    ADPLPRCM BIT(1),      /* Model error               @D2P*/ 12216900
*        4    ADPLPNVM BIT(1),      /* No view match, no output  @D2P*/ 12217000
*        4    ADPLPBXI BIT(1),      /* Bad extension identifier  @L5A*/ 12217100
*        4    ADPLPFEF BIT(1),      /* Formatting exit failure   @L5A*/ 12217200
*        4    ADPLPNXD BIT(1),      /* No EXIT DATA              @P7A*/ 12217300
*        4    *        BIT(1),      /* Reserved                  @P7C*/ 12217400
*      2    ADPLPBLC UNSIGNED BINARY(8), /* Blank line count     @D3P*/ 12217500
*      2    ADPLPCHA CHARACTER(8),  /* Control block acronym or model   12217600
*                                      name                      @D2P*/ 12217700
*      2    ADPLPPTR POINTER(31),   /* Model address             @D2P*/ 12217800
*      2    ADPLPBAS POINTER(31),   /* Buffer address if block is in    12217900
*                                      main storage              @D2P*/ 12218000
*      2    ADPLPDAC UNSIGNED BINARY(15), /* Dynamic array count @D2P*/ 12218100
*      2    ADPLPBLS UNSIGNED BINARY(15), /* Length of block in main    12218200
*                                      storage                   @D2P*/ 12218300
*      2    ADPLPBAV POINTER(31),   /* Block's virtual address in       12218400
*                                      dump                      @D2P*/ 12218500
*      2    ADPLPLME POINTER(31),   /* Line mode exit entry point       12218600
*                                      address                   @D2P*/ 12218700
*      2    ADPLPVCL BIT(16),       /* Field viewing control     @D2P*/ 12218800
*       3    ADPLPVC1 BIT(8),       /*                           @D2P*/ 12218900
*        4    ADPLPKEY BIT(1),      /* Keyfield                  @D2P*/ 12219000
*        4    ADPLPSUM BIT(1),      /* Summary field             @D2P*/ 12219100
*        4    ADPLPREG BIT(1),      /* Register save area        @D2P*/ 12219200
*        4    ADPLPLIN BIT(1),      /* Linkage field             @D2P*/ 12219300
*        4    ADPLPEFD BIT(1),      /* Error fields              @D2P*/ 12219400
*        4    ADPLPHEX BIT(1),      /* Hex dump                  @D2P*/ 12219500
*        4    ADPLPNOR BIT(1),      /* All non reserved fields   @D2P*/ 12219600
*        4    ADPLPRES BIT(1),      /* Reserved fields           @D2P*/ 12219700
*       3    ADPLPVC2 BIT(8),       /*                           @D2P*/ 12219800
*        4    ADPLPSTA BIT(1),      /* Static array              @D2P*/ 12219900
*         5    ADPLPDCD BIT(1),     /* Decode flagfields         @L5A*/ 12220000
*        4    ADPLPDYN BIT(1),      /* Dynamic array             @D2P*/ 12220100
*        4    ADPLPINP BIT(1),      /* Input field               @D4A*/ 12220200
*        4    ADPLPOUT BIT(1),      /* Output field              @D4A*/ 12220300
*        4    ADPLPCV1 BIT(1),      /* Component use             @D2P*/ 12220400
*        4    ADPLPCV2 BIT(1),      /* Component use             @D2P*/ 12220500
*        4    ADPLPCV3 BIT(1),      /* Component use             @D2P*/ 12220600
*        4    ADPLPCV4 BIT(1),      /* Component use             @D2P*/ 12220700
*      2    ADPLPOSI SIGNED BINARY(15), /* Starting offset       @D3A*/ 12220800
*      2    ADPLPDL1 UNSIGNED BINARY(32), /* Dimension 1 lower limit    12220900
*                                                                @D4A*/ 12221000
*      2    ADPLPDL2 UNSIGNED BINARY(32), /* Dimension 2 lower limit    12221100
*                                                                @D4A*/ 12221200
*      2    ADPLPDU1 UNSIGNED BINARY(32), /* Dimension 1 upper limit    12221300
*                                                                @D4A*/ 12221400
*      2    ADPLPDU2 UNSIGNED BINARY(32), /* Dimension 2 upper limit    12221500
*                                                                @D4A*/ 12221600
*      2    *        CHARACTER(4),  /* Reserved                  @L5C*/ 12221700
*      2    ADPLPEXP POINTER(31),   /* -> Format parm extension  @L5A*/ 12221800
*      2    ADPLPFXC POINTER(31),   /* Format exit communicate   @D4A*/ 12221900
*     ADPLPDL(2) UNSIGNED BINARY(32) DEFINED(ADPLPDL1), /*       @D4A*/ 12222000
*     ADPLPDU(2) UNSIGNED BINARY(32) DEFINED(ADPLPDU1), /*       @D4A*/ 12222100
*     1    ADPLPFXT CHAR(192) ADPLPFXTSTORAGE BDY(WORD), /* FORMAT      12222200
*                                      parameter extension       @L5A*/ 12222300
*                                                                       12222400
*/* ================================================================ */ 12222500
*/* FORMAT service parameter extension, multiple source formatting   */ 12222600
*/* ================================================================ */ 12222700
*                                                                       12222800
*      2    ADPLFXHD CHAR(64) BDY(WORD), /* Header               @PAC*/ 12222900
*       3    ADPLFXID CHAR(4),      /* Identifier FEXT           @L5A*/ 12223000
*       3    ADPLFXOP BIT(32),      /* Extended options          @L5A*/ 12223100
*        4    ADPLFXQE BIT(1),      /* Quit on access error      @L5A*/ 12223200
*        4    ADPLFXIN BIT(1),      /* Indent after line 1       @L5A*/ 12223300
*        4    ADPLFXNE BIT(1),      /* Name is in ES record(LX)  @L5A*/ 12223400
*        4    ADPLFXFE BIT(1),      /* Invoke post format exits  @L5A*/ 12223500
*        4    ADPLFXUA BIT(1),      /* Use extended acronym      @L5A*/ 12223600
*        4    ADPLFXSS BIT(1),      /* Storage defined by ES rec @L5A*/ 12223700
*        4    ADPLFXFA BIT(1),      /* Fill absent data          @P5A*/ 12223800
*        4    *        BIT(25),     /* Reserved                  @D5C*/ 12223900
*       3    ADPLFXRT BIT(32),      /* Extended return info      @L5A*/ 12224000
*        4    ADPLFXAN BIT(1),      /* Area(s) not available     @L5A*/ 12224100
*        4    ADPLFXBE BIT(1),      /* Bad ES record             @L5A*/ 12224200
*        4    *        BIT(30),     /* Reserved                  @L5A*/ 12224300
*       3    *        CHAR(2),      /* Reserved                  @L5A*/ 12224400
*       3    ADPLFXIL BIT(8),       /* Indentation length        @L5A*/ 12224500
*       3    ADPLFXAC CHAR(31),     /* Extended acronymm         @L5A*/ 12224600
*       3    ADPLFXLX FIXED(8),     /* List index to ES for name @L5A*/ 12224700
*       3    ADPLFXFC CHAR(1),      /* Fill char for absent data @P5A*/ 12224800
*       3    ADPLFXEO FIXED(31),    /* Extended position offset  @02A*/ 12224900
*       3    *        CHAR(12),     /* Reserved                  @D5C*/ 12225000
*      2    ADPLFXLS CHAR(128) BDY(WORD), /* ES record pointer list     12225100
*                                                                @L5A*/ 12225200
*       3    ADPLFAR(0:15) CHAR(8) BDY(WORD), /* Array, 0 origin @L5A*/ 12225300
*        4    ADPLFXBF PTR(31),     /* -> Buffer                 @L5A*/ 12225400
*        4    ADPLFXES PTR(31),     /* -> ES record              @L5A*/ 12225500
*     ADPLFXIC CHAR(4) CONSTANT('FEXT'), /* Identifier characters       12225600
*                                                                @L5A*/ 12225700
*     1    ADPLPECT CHARACTER(64) BOUNDARY(WORD) ADPLPECTSTORAGE, /*    12225800
*                                      ECT exit parameter list   @P3C*/ 12225900
*                                                                       12226000
*/* ================================================================ */ 12226100
*/* ECT service parameter list                                       */ 12226200
*/* ================================================================ */ 12226300
*                                                                       12226400
*      2    ADPLPEFG BIT(8),        /* Flags for choosing exit - '0'    12226500
*                                      indicates verb exit       @D2A*/ 12226600
*       3    ADPLPETB BIT(1),       /* TCB exit                  @D2A*/ 12226700
*       3    ADPLPEAS BIT(1),       /* ASCB exit                 @D2A*/ 12226800
*       3    ADPLPEVR BIT(1),       /* VERB exit                 @L5A*/ 12226900
*       3    ADPLPESC BIT(1),       /* Subcommand or command            12227000
*                                      procedure                 @L9A*/ 12227100
*       3    *        BIT(1),       /* Reserved                  @L9C*/ 12227200
*       3    ADPLPESP BIT(1),       /* Special exit              @L5A*/ 12227300
*       3    ADPLPENM BIT(1),       /* Exit name is in ADPLPEVB  @01A*/ 12227400
*       3    ADPLPESR BIT(1),       /* Formatting exit           @L5C*/ 12227500
*      2    ADPLPERR BIT(8),        /* Flags for returning              12227600
*                                      information to caller     @D2A*/ 12227700
*       3    ADPLPEST BIT(1),       /* Exit return code='4'             12227800
*                                      indicating insufficient          12227900
*                                      storage                   @D2A*/ 12228000
*       3    ADPLPENV BIT(1),       /* Verb not found in ECT     @D2A*/ 12228100
*       3    ADPLPELI BIT(1),       /* LINK failed - 806 abend   @D2A*/ 12228200
*       3    ADPLPENE BIT(1),       /* No ESTAE established      @D2A*/ 12228300
*       3    *        BIT(4),       /* Reserved                  @D2A*/ 12228400
*      2    ADPLPECF BIT(8),        /* Control flags             @L3A*/ 12228500
*       3    ADPLPECP BIT(1),       /* ADPLPEPL -> parm list     @L3A*/ 12228600
*       3    ADPLPEMA BIT(1),       /* Use ADPLSAMK value passed @L5A*/ 12228700
*       3    ADPLPTOC BIT(1),       /* Suppressing TOC entry     @03A*/ 12228800
*       3    *        BIT(5),       /* Reserved                  @L5C*/ 12228900
*      2    *        CHARACTER(1),  /* Reserved                  @L3C*/ 12229000
*      2    ADPLPEVB CHARACTER(8),  /* VERB to search on         @D2A*/ 12229100
*      2    ADPLPEPL POINTER(31),   /* -> Parameter list to be passed   12229200
*                                      to the exit               @L3A*/ 12229300
*      2    ADPLPESY POINTER(31),   /* -> BLSRESSY               @L5A*/ 12229400
*      2    *        CHARACTER(44), /* Reserved                  @D5C*/ 12229500
*     1    ADPLPSEL CHARACTER(64) BOUNDARY(WORD) ADPLPSELSTORAGE, /*    12229600
*                                      Select ASID parameter list       12229700
*                                                                @P3C*/ 12229800
*                                                                       12229900
*/* ================================================================ */ 12230000
*/* Select ASID service parameter list                               */ 12230100
*/* ================================================================ */ 12230200
*                                                                       12230300
*      2    ADPLPSF1 BIT(8),        /* Keyword flags             @D3A*/ 12230400
*       3    ADPLPSAL BIT(1),       /* ALL                       @D3A*/ 12230500
*       3    ADPLPSCR BIT(1),       /* CURRENT                   @D3A*/ 12230600
*       3    ADPLPSER BIT(1),       /* ERROR                     @D3A*/ 12230700
*       3    ADPLPSTE BIT(1),       /* TCBERROR                  @D3A*/ 12230800
*       3    ADPLPSJL BIT(1),       /* JOBLIST                   @D3A*/ 12230900
*       3    ADPLPSAS BIT(1),       /* ASIDLIST                  @D3A*/ 12231000
*       3    *        BIT(2),       /* Reserved                  @D3A*/ 12231100
*      2    ADPLPSF2 BIT(8),        /* Option flags              @P8A*/ 12231200
*       3    ADPLPSXL BIT(1),       /* Use extended length       @P8A*/ 12231300
*       3    ADPLPSAF BIT(1),       /* Select all ASID(s) referenced    12231400
*                                      by the ASIDLIST (if any)  @L9A*/ 12231500
*       3    *        BIT(6),       /* Reserved                  @L9C*/ 12231600
*      2    *        CHARACTER(1),  /* Reserved                  @P8C*/ 12231700
*      2    ADPLPSCF BIT(8),        /* Condition flags           @L3A*/ 12231800
*       3    ADPLPSNV BIT(1),       /* Unable to get ASVT        @L3A*/ 12231900
*       3    *        BIT(7),       /* Reserved                  @L3A*/ 12232000
*      2    ADPLPSOL POINTER(31),   /* ->Select service output list     12232100
*                                                                @P2C*/ 12232200
*      2    ADPLPSJN POINTER(31),   /* ->Jobname list            @D3A*/ 12232300
*      2    ADPLPSAI POINTER(31),   /* ->ASID list               @D3A*/ 12232400
*      2    ADPLPS31 FIXED(31),     /* Extended output length    @P8A*/ 12232500
*      2    *        CHARACTER(44), /* reserved                  @P8C*/ 12232600
*                                                                       12232700
*/* ================================================================ */ 12232800
*/* Service output mappings.                                         */ 12232900
*/* ================================================================ */ 12233000
*                                                                       12233100
*     1    ADPLOSEL ADPLOSELSTORAGE BOUNDARY(DWORD), /* Select ASID     12233200
*                                      output list               @P3C*/ 12233300
*                                                                       12233400
*/* ================================================================ */ 12233500
*/* Select ASID service output list                                  */ 12233600
*/* ================================================================ */ 12233700
*                                                                       12233800
*      2    ADPLOSHD,               /* Header                    @D3A*/ 12233900
*       3    ADPLOSSZ UNSIGNED BINARY(15), /* Size of entire list       12234000
*                                                                @D3A*/ 12234100
*       3    ADPLOSCT UNSIGNED BINARY(15), /* Count of entries   @D3A*/ 12234200
*       3    ADPLOSSF BIT(8),       /* Selection flags           @D3A*/ 12234300
*        4    ADPLOSJM BIT(1),      /* Some jobname(s) not found @D3A*/ 12234400
*        4    ADPLOSAU BIT(1),      /* Some ASID(s) unassigned   @D3A*/ 12234500
*        4    ADPLOSAM BIT(1),      /* Some ASID(s) not in dump  @D3A*/ 12234600
*        4    *        BIT(5),      /* Reserved                  @D3A*/ 12234700
*       3    ADPLOSDF BIT(8),       /* Dump flags                @D3A*/ 12234800
*        4    ADPLOSSD BIT(1),      /* Standalone dump           @P1A*/ 12234900
*        4    *        BIT(7),      /* Reserved                  @D3A*/ 12235000
*       3    *        CHARACTER(1), /* Reserved                  @D3A*/ 12235100
*       3    ADPLOSSP CHARACTER(1), /* Subpool                   @D3A*/ 12235200
*      2    ADPLOSNB CHARACTER(0),  /* End of fixed-length base  @L4A*/ 12235300
*     1    ADPLOSNT(*) DEFINED(ADPLOSNB), /* Array, one per selected    12235400
*                                      ASID                      @L4C*/ 12236600
*      2    ADPLOSAP POINTER(31),   /* Pointer to ASCB           @D3A*/ 12236900
*      2    ADPLOSCW,               /* Control word              @D3A*/ 12237200
*       3    ADPLOSF1 BIT(8),       /* Flag for selection match  @D3A*/ 12237500
*        4    ADPLOSCR BIT(1),      /* Current on CPU=ASLCPUX    @D3A*/ 12237800
*        4    ADPLOSJN BIT(1),      /* Matches jobnames(ASLJOBX) @D3A*/ 12238100
*        4    ADPLOSER BIT(1),      /* ASID in error             @D3A*/ 12238400
*        4    ADPLOSTE BIT(1),      /* TCBERROR                  @D3A*/ 12238700
*        4    ADPLOSAS BIT(1),      /* Selected by ASIDLIST      @D3A*/ 12239000
*        4    ADPLOSAL BIT(1),      /* Selected by ALL           @D3A*/ 12239300
*        4    *        BIT(2),      /* Reserved                  @D3A*/ 12239600
*       3    ADPLOSF2 BIT(8),       /* Status flags              @D3A*/ 12239900
*        4    ADPLOSHA BIT(1),      /* Current HOME ASID         @D3A*/ 12240200
*        4    ADPLOSPA BIT(1),      /* Current PRIMARY ASID      @D3A*/ 12240500
*        4    ADPLOSSA BIT(1),      /* Current SECONDARY ASID    @D3A*/ 12240800
*        4    ADPLOSCM BIT(1),      /* ASID holds CML lock       @D3A*/ 12241100
*        4    ADPLOSND BIT(1),      /* Address space not in dump @D3A*/ 12241400
*        4    ADPLOSNA BIT(1),      /* Private area not accessed @D3A*/ 12241700
*        4    *        BIT(2),      /* Reserved                  @D3A*/ 12242000
*       3    ADPLOSCP UNSIGNED BINARY(8), /* CPUID where current @D3A*/ 12242300
*       3    *        CHARACTER(5), /* Reserved                  @D3A*/ 12242600
*      2    ADPLOSAI SIGNED BINARY(15), /* ASID                  @D3A*/ 12242900
*      2    *        CHARACTER(2),  /* Reserved                  @D3C*/ 12243200
*      2    ADPLOSJB CHARACTER(8),  /* Jobname                   @D3A*/ 12243500
*      2    *        CHARACTER(8),  /* Reserved                  @D3A*/ 12243800
*                                                                       12244900
*/* ================================================================ */ 12271100
*/* Subroutines accessible via the exit parameter list               */ 12297300
*/* ---------------------------------------------------------------- */ 12323500
*/*   Print service routine--                                        */ 12350000
*/* ---------------------------------------------------------------- */ 12400000
*                                                                       12842800
*     ADPLEPRT ENTRY BASED(ADPLPRNT) VALUERANGE(*) OPTIONS(REFS(        12892800
*         ADPLBUFR,                 /* Each host uses this field     */ 12942800
*         ADPLPRT,ADPLEJEC,         /* IPCS uses these fields        */ 12992800
*         ADPLBUF,ADPLABDA,ADPLLNCT,ADPLLNRM,ADPLPGNO,ADPLSYNO), /*     13042800
*                                      Each host may, but need not,     13100000
*                                      use these fields              */ 13150000
*         SETS(ADPLBUFR,            /* Each host sets this field     */ 13200000
*         ADPLLNRM,ADPLPGNO,ADPLEJEC, /* IPCS sets these fields      */ 13250000
*         ADPLBUF,ADPLABDA,ADPLLNCT,ADPLSYNO)), /* Each host may, but   13300000
*                                      need not, set these fields       13400000
*                                                                @L1A*/ 13450000
*                                                                       13475000
*/* ---------------------------------------------------------------- */ 13512500
*/*   Storage access service routine--Supported by SNAP only for     */ 13550000
*/*   access to live virtual storage.  Its support by IPCS is        */ 13600000
*/*   described below.                                               */ 13650000
*/* ---------------------------------------------------------------- */ 13696800
*                                                                       13743700
*     ADPLESTG ENTRY BASED(ADPLMEMA) VALUERANGE(*) OPTIONS(REFS(        13789500
*         ADPLASID,ADPLDLEN,ADPLVIRT,ADPLREAL,ADPLCPU,ADPLHDR,ADPLSAMK, 13835300
*                                   /* IPCS uses these fields        */ 13881100
*         ADPLCVT,ADPLABDA,ADPLTRFM,ADPLSYNO)), /* Each host may, but   13931100
*                                      need not, use these fields       14005900
*                                                                @L1A*/ 14050000
*                                                                       14075000
*/* ---------------------------------------------------------------- */ 14112500
*/*   Format service routine                                         */ 14150000
*/* ---------------------------------------------------------------- */ 14193700
*                                                                       14237500
*     ADPLEFMT ENTRY BASED(ADPLFRMT) VALUERANGE(*) OPTIONS(REFS(ADPLBUF 14275000
*         ,ADPLABDA),               /* Each host may, but need not,     14312500
*                                      use these fields              */ 14350000
*         SETS(ADPLBUFR,            /* Each host sets this field     */ 14393700
*         ADPLBUF,ADPLABDA,ADPLSYNO)), /* Each host may, but need       14437400
*                                      not, set these fields     @L1A*/ 14481100
*                                                                       14525000
*/* ---------------------------------------------------------------- */ 14562500
*/*   TOC service routine--Supported as minimum-function entries by  */ 14600000
*/*   SNAP.  This entry only blanks ADPLBUFR and returns.  Its       */ 14650000
*/*   support by IPCS is described below.                            */ 14700000
*/* ---------------------------------------------------------------- */ 14746100
*                                                                       14792300
*     ADPLENDX ENTRY BASED(ADPLNDX) VALUERANGE(*) OPTIONS(REFS(ADPLBUFR 14840300
*         ,ADPLLEV,                 /* IPCS uses these fields        */ 14888300
*         ADPLBUF,ADPLABDA,ADPLLNRM,ADPLPGNO,ADPLSYNO), /* IPCS may,    14936300
*                                      but need not, use these fields*/ 14984600
*         SETS(ADPLBUFR,            /* Each host blanks this field   */ 15033300
*         ADPLBUF,ADPLABDA,ADPLSYNO)); /* IPCS may, but need not, set   15082000
*                                      these fields              @P6C*/ 15130700
*%ABDPL05:                          /* Process AMDCPMAP          @P4P*/ 15173000
*   IF AMDCPST ^= 'YES'                                                 15215300
*      %THEN                        /* Do not define AMDCPMAP        */ 15257600
*     %GOTO ABDPL09;                /* End BLSABDPL processing       */ 15300000
*   %AMDCPMAL = 'LENGTH(AMDCPMAP)'; /* Length of AMDCPMAP        @P2A*/ 15331200
*   %IF AMDCPMAPSTORAGE = '' %THEN  /* No scope/storage class    @L1A*/ 15362400
*     %AMDCPMAPSTORAGE = 'BASED';   /* Default scope/storage     @L1A*/ 15393600
*   DECLARE                         /* Status record data            */ 15425000
*     1    AMDCPMAP AMDCPMAPSTORAGE, /* Status record data       @P3C*/ 15437500
*                                                                       15443700
*/********************************************************************/ 15450000
*/* AMDCPMAP is a mapping of the CPU STATUS data obtained from a dump*/ 15500000
*/* upon request.  An exit requests this data by setting ADPLCPU in  */ 15550000
*/* the exit parameter list prior to invoking the storage access     */ 15600000
*/* service routine, whose address is in ADPLMEMA.                   */ 15650000
*/*                                                                  */ 15652900
*/* Note:  This API is archaic but is being kept minimally           */ 15655800
*/* functional for compatibility.  Exit code that requires all 16    */ 15658700
*/* floating point registers, the floating point control register, a */ 15661600
*/* 16-byte PSW, ... should use the dump access functions available  */ 15664500
*/* via the IPCS symbol or storage map services.                     */ 15667400
*/*                                                                  */ 15670300
*/* When this service is requested against a SADUMP of an ESAME-mode */ 15673200
*/* system:                                                          */ 15676100
*/*                                                                  */ 15679000
*/* o  The right sizes of GPRs and control registers are returned.   */ 15681900
*/* o  The 8-byte PSW returned is produced from the 16-byte ESAME    */ 15684800
*/*    PSW in the same way as system services do it.  The final bit  */ 15687700
*/*    of the instruction address will be one if the ESAME-mode PSW  */ 15690600
*/*    referenced storage above 7FFFFFFF.                            */ 15693500
*/*                                                                  */ 15696400
*/********************************************************************/ 15700000
*                                                                       15750000
*      2    AMDCFLAG BIT(8),        /* CPU status flags          @L1C*/ 15800000
*       3    AMDCUNIP BIT(1),       /* CPU is a uniprocessor.           15850000
*                                      Processor address is invalid. */ 16000000
*       3    AMDCSINV BIT(1),       /* Stand alone dump unable to       16050000
*                                      perform store status. Only       16100000
*                                      processor address is valid.   */ 16150000
*       3    AMDCGPRV BIT(1),       /* Operator did not perform store   16200000
*                                      status. Only general registers   16250000
*                                      and, if MP, processor address    16300000
*                                      are valid.                @L1C*/ 16350000
*       3    AMDCSADP BIT(1),       /* Not from a stand alone dump   */ 16400000
*      2    AMDCPAD1 CHARACTER(1),  /* Padding                   @L1C*/ 16450000
*      2    AMDCPADR UNSIGNED BINARY(16), /* Processor address   @L1C*/ 16500000
*      2    AMDCREGS,               /* REGs and current PSW      @L1C*/ 16550000
*       3    AMDCFREG(4) CHARACTER(8), /* Floating point REGs    @L1C*/ 16600000
*       3    AMDCGREG(16) CHARACTER(4), /* General registers     @L1C*/ 16650000
*       3    AMDCCREG(16) CHARACTER(4), /* Control registers     @L1C*/ 16700000
*       3    AMDCCPSW CHARACTER(8), /* Current PSW               @L1C*/ 16750000
*      2    AMDCPREG POINTER(31),   /* Prefix register           @L1C*/ 16800000
*      2    AMDCTIME CHARACTER(8),  /* CPU timer value           @L1C*/ 16850000
*      2    AMDCLOCK CHARACTER(8);  /* Clock comparator          @L1C*/ 16900000
*%ABDPL09:                          /* End BLSABDPL processing       */ 16950000
*   DEACTIVATE AMDEXIT,AMDCPST;                                         17000000
