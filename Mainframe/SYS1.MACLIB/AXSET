*  /* START OF SPECIFICATIONS ***************************************** 00050000
*                                                                     * 00100000
*01*  MODULE-NAME = AXSET                                             * 00150000
*                                                                     * 00200000
*01*  MACDATE = 93.170                                                * 00250000
*                                                                     * 00280000
*01*  DESCRIPTIVE-NAME = AUTHORIZATION INDEX SET MACRO                * 00310000
*                                                                     * 00340000
*01*  COPYRIGHT =                                                     * 00375000
*            5655-068                                                 * 00410000
*            THIS MODULE IS "RESTRICTED MATERIALS OF IBM"             * 00445000
*            (C)COPYRIGHT IBM CORP. 1980, 1993                        * 00480000
*            LICENSED MATERIALS - PROPERTY OF IBM                     * 00515000
*                                                                     * 00550000
*01*  STATUS = HBB5510                                            @P1C* 00583300
*                                                                     * 00616600
*                                                                     * 00650000
*01*  FUNCTION = INTERFACE TO THE AXSET SERVICE                       * 00700000
*                                                                     * 00750000
*01*  MODULE-TYPE = MACRO                                             * 00800000
*                                                                     * 00850000
*01*  PROCESSOR = ASSEMBLER,PL/S-III (BILINGUAL)              @ZM50111* 00900000
*                                                                     * 00937500
*01*  MACROS = IHBERMAC                                               * 00975000
*                                                                     * 01012500
*01*  CHANGE ACTIVITY =       NEW FOR OS/VS2 JBB1226.                 * 01050000
*                             UPDATE BOTH BAL AND PL/S MACDATE        * 01068700
*                             WHENEVER THIS MACRO IS CHANGED.         * 01087500
*                             THE S/D CODE IS @G387PXX.               * 01125000
*             VS50111 - (PL/S) FORCE RC=12 ON NULL AX(1).     @ZM50111* 01162500
*             PBB0031 - (PL/S) PTR NOTATION CHECKS INVALID.   @ZMB0031* 01181200
*             G860PXZ - PUT THE PLS 'DO' COMMENT ALSO ON THE          * 01187400
*                       'END' STATEMENT                       @G860PXZ* 01193600
*           $P1=PIG1968,HBB5510,930616,PDXB: Savearea                 * 01196800
*                                                                     * 01200000
*01*  MNOTES = IHB001 AX OPERAND REQUIRED, NOT SPECIFIED              * 01250000
*              IHB002 INVALID AX OPERAND - ___                        * 01300000
*              IHB027 EXCESSIVE POSITIONAL PARAMETERS SPECIFIED       * 01350000
*                                                                     * 01400000
*01*  PL/S MSGS = AS FOLLOWS:                                         * 01450000
*     AHA0013 AX(1) (AX VALUE) IS REQUIRED BUT IS NOT SPECIFIED.      * 01500000
*             NO TEXT IS GENERATED.                                   * 01550000
*     AHA0013 AX IS REQUIRED BUT IS NOT SPECIFIED.                    * 01600000
*             NO TEXT IS GENERATED.                                   * 01650000
*     AHA0033 AX - '_' - HAS TOO MANY ARGUMENTS.                      * 01700000
*             NO TEXT IS GENERATED.                                   * 01750000
*     AHA0053 THE MACLIST '_' IS NOT ALLOWED. NO TEXT IS GENERATED.   * 01800000
*                                                                     * 01850000
*A000000-999999                                                @G387PXX 01900000
***** END OF SPECIFICATIONS ******************************************* 02000000
         MACRO                                                          02050000
&LABL    AXSET &AX=,       REQUIRED AX VALUE (SEE NOTE BELOW)  (INPUT) X02100000
               &RELATED=   OPTIONAL VALUE FOR DOCUMENTATION             02150000
.* NOTE: IF THE AX PARAMETER IS EXPRESSED IN RX FORM IT IS              02250000
.*         INTERPRETED AS THE ADDRESS OF A HALFWORD AX VALUE.           02300000
.*       IF THE AX PARAMETER IS EXPRESSED IN REGISTER NOTATION          02350000
.*         THE MACRO ASSUMES THE AX VALUE IS IN THE LOW-ORDER HALF      02400000
.*         OF THE SPECIFIED REGISTER. THE HIGH-ORDER HALF OF THE        02450000
.*         REGISTER IS REQUIRED TO BE ZERO BY ATSET.                    02500000
.********************************************************************** 02600000
.*       DECLARE ARITHMETIC VARIABLES                                 * 02650000
.********************************************************************** 02700000
         LCLA  &A          GENERAL USAGE LOCAL ARITH. VAR.              02750000
.********************************************************************** 02800000
.*       DECLARE BIT VARIABLES                                        * 02850000
.********************************************************************** 02900000
         LCLB  &AX0        SPECIAL REGISTER 0 NOTATION WAS SPECIFIED    02950000
.*                         FOR THE 'AX' PARAMETER.                      03000000
.********************************************************************** 03050000
.*       DECLARE CHARACTER VARIABLES                                  * 03100000
.********************************************************************** 03150000
         LCLC  &LT1        LOAD TYPE 1 - THIS VARIABLE WILL BE:         03200000
.*                              'R' IF AX IS REGISTER FORM              03250000
.*                           OR 'H' IF AX IS RX FORM                    03300000
         LCLC  &AXV        HOLDS VALUE OF AX FOR USE IN INSTRUCTIONS.   03350000
         LCLC  &OPERAND    HOLDS OPERAND STRINGS FOR MNOTES             03400000
         LCLC  &OPVAL      HOLDS OPERAND VALUES FOR MNOTES              03450000
.********************************************************************** 03500000
.*       PUT OUT BAL MACDATE COMMENT LINE REGARDLESS OF ERRORS.       * 03550000
.********************************************************************** 03600000
*              MACDATE = 82.076                                         03650000
.********************************************************************** 03750000
.*       INITIALIZE BIT VARIABLES                                     * 03800000
.********************************************************************** 03850000
&AX0     SETB  0           INDICATE NOT SPECIAL REG 0 INPUT PARM        03900000
.********************************************************************** 04000000
.*       CHECK FOR EXTRANEOUS POSITIONAL PARMS                        * 04050000
.********************************************************************** 04100000
         AIF   (N'&SYSLIST NE 0).ERR027                                 04150000
.********************************************************************** 04200000
.*       VALIDATE AX PARAMETER IF PRESENT                             * 04250000
.********************************************************************** 04300000
         AIF   (T'&AX EQ 'O').ERR001    BR IF REQ'D PARM NOT SPEC'D     04350000
&OPERAND SETC  'AX'                     SET FOR POSSIBLE ERROR MSGS     04400000
&OPVAL   SETC  '&AX'                    SET FOR POSSIBLE ERROR MSGS     04450000
.*   DETERMINE WHETHER AX ADDRESS IS RX OR REG TYPE                     04500000
         AIF   ('&AX'(1,1) EQ '(').OK11       BRANCH IF REG TYPE        04550000
&AXV     SETC  '&AX'                    SET VALUE FOR LOAD/STORE INST.  04600000
&LT1     SETC  'H'                      SET TO 'H' FOR RX TYPE ADDR     04650000
         AGO   .OK99                    GO GENERATE THE CODE            04700000
.OK11    ANOP                                                           04750000
&LT1     SETC  'R'                      SET TO 'R' FOR REG              04800000
&AXV     SETC  '&AX'(2,K'&AX-2)         EXTRACT REGISTER NAME           04850000
         AIF   (N'&AX NE 1).ERR002      BR IF INVALID REG FORM          04900000
         AIF   ('&AXV' NE '0').OK99     BR IF NOT SPECIAL REG 0         04950000
&AX0     SETB  1                        INDICATE SPECIAL REG 0          05000000
.********************************************************************** 05050000
.*       GENERATE INTERFACE CODE                                      * 05100000
.********************************************************************** 05150000
.OK99    ANOP                                                           05200000
&LABL    DC    0H'0'                .AXSET XM SERVICE PC                05250000
         STM   14,12,12(13)         .SAVE CALLER'S REGS                 05270000
         AIF   (&AX0 EQ 1).OK99C        SKIP REG0 LOAD IF SPECIAL REG   05300000
.*                                      NOTATION WAS SPECIFIED          05350000
         AIF   ('&LT1' EQ 'R').OK99B    BR IF REGISTER NOTATION         05400000
         SLR   0,0                  .ASSURE UPPER HALFWD IS ZERO        05450000
         ICM   0,3,&AXV             .SET REG0 TO AX VALUE               05500000
         AGO   .OK99C                                                   05550000
.OK99B   ANOP                                                           05600000
         LR    0,&AXV               .SET REG0 TO AX VALUE               05650000
.OK99C   ANOP                                                           05700000
         SLR   1,1                  .PARM REG 1 MUST BE ZERO            05750000
         ESAR  2                    .EXTRACT SASID                      05766600
         ST    2,16(,13)            .SAVE SASID IN REG 15 SLOT          05783200
         L     2,16(0,0)            .GET ADDR OF CVT                    05800000
         L     2,772(,2)            .GET ADDR OF SYSTEM FUNCTION TABLE  05840000
         L     2,36(,2)             .GET LX/EX FOR AXSET                05880000
         PC    0(2)                 .PC TO AXSET SERVICE                05920000
         L     2,16(,13)            .EXTRACT SAVED SASID                05946600
         SSAR  2                    .RESTORE SASID                      05973200
         LM    2,12,28(13)          .RESTORE REGS 2-12                  06000000
         L     14,12(,13)           .RESTORE REG 14                     06050000
         MEXIT                                                          06100000
.********************************************************************** 06150000
.*       PROCESS ERROR CONDITIONS                                     * 06200000
.********************************************************************** 06250000
.ERR001  ANOP SEV 12 MNOTE -- IHB001 &OPERAND REQ''D - NOT SPECIFIED    06300000
         IHBERMAC 1017,&OPERAND                                         06350000
         MEXIT                                                          06400000
.ERR002  ANOP SEV 12 MNOTE -- IHB002 - INVALID &OPERAND OPERAND &OPVAL  06450000
         IHBERMAC 1001,&OPERAND,&OPVAL                                  06500000
         MEXIT                                                          06550000
.ERR027  ANOP SEV 12 MNOTE -- IHB027 - EXCESSIVE POSITIONAL PARAMETERS  06600000
         IHBERMAC 238                                                   06650000
         MEND                                                           06700000
* */                                                                    06750000
*@EJECT;                                                                06800000
*%AXSET:                                                                06850000
*        MACRO KEYS(AX,RELATED);                                        06900000
*/********************************************************************/ 06950000
*/*                DEFINE EXTERNAL MACRO VARIABLES                   */ 07000000
*/********************************************************************/ 07050000
* DECLARE                                                               07100000
*   EHAREGS   CHARACTER EXT, /* CONTAINS DECLARED REGISTER NUMBERS.  */ 07150000
*   EHAMAPS   CHARACTER EXT; /* CONTAINS REQUESTS FOR MAPPINGS.      */ 07200000
*/********************************************************************/ 07250000
*/*                DEFINE INTERNAL MACRO VARIABLES                   */ 07300000
*/********************************************************************/ 07350000
* DECLARE CC       FIXED;    /* STARTING COLUMN FOR PL/S COMMENTS    */ 07400000
* DECLARE IVDOCMT  CHAR;     /* COMMENT FOR DO AND END LINES.        */ 07650000
* DECLARE IVINDNT2 FIXED;    /* STARTING COLUMN FOR ALL ANSWER TEXT  */ 07700000
*                            /*   EXCEPT DO AND END STATEMENTS.      */ 07750000
* DECLARE IVLP1    FIXED;    /* LEFT  PAREN COL FOR AX REG           */ 07800000
* DECLARE IVRC     FIXED;    /* RETURN CODE TO DETERMINE IF TEXT WILL*/ 07850000
*                            /* BE GENERATED.                        */ 07900000
* DECLARE IVRP1    FIXED;    /* RIGHT PAREN COL FOR AX REG           */ 07950000
*/********************************************************************/ 08000000
*/*                INITIALIZE INTERNAL MACRO VARIABLES                  08050000
*/********************************************************************/ 08100000
* CC         = MACRMAR-35;   /* COMMENTS COLUMN (DEFAULT= 72-35 = 37)*/ 08120000
* IVDOCMT    = ' AXSET';     /* START OF DO-END COMMENT--NO KEYS YET */ 08150000
* IVINDNT2   = MACCOL + 2;   /* SET INDENTATION MARGIN.              */ 08400000
* IVLP1      = INDEX(AX(1),'('); /* GET POSITION OF LEFT PAREN       */ 08450000
*                            /* NOTE: A NON-ZERO VALUE FOR IVLP1     */ 08500000
*                            /* INDICATES A POINTER FORM EXPRESSION.*/  08550000
* IVRC       = 0;            /* SET CODE TO GENERATE TEXT            */ 08600000
* IF IVLP1=1 THEN            /* IF POINTER NOTATION          @ZMB0031*/ 08604100
*   DO;                      /* POINTER NOTATION.            @ZMB0031*/ 08608200
*     IVRP1=LENGTH(AX(1));   /* GET LAST CHAR OF SUBLIST     @ZMB0031*/ 08612300
*     IF AX(1,IVRP1:IVRP1)^=')' THEN /* IF NOT A RIGHT PAREN @ZMB0031*/ 08616400
*       IVRP1=IVLP1;         /* FORCE 'NOT-SPECIFIED' ERROR  @ZMB0031*/ 08620500
*   END;                     /* POINTER NOTATION.            @ZMB0031*/ 08624600
* ELSE                       /* NOT POINTER NOTATION.        @ZMB0031*/ 08628700
*   DO;                      /* NOT POINTER NOTATION.        @ZMB0031*/ 08632800
*     IVLP1=0;               /* NOT POINTER NOTATION.        @ZMB0031*/ 08636900
*     IVRP1=0;               /* NOT POINTER NOTATION.        @ZMB0031*/ 08641000
*   END;                     /* NOT POINTER NOTATION.        @ZMB0031*/ 08645100
*/********************************************************************/ 08700000
*/*                CHECK FOR MACLIST                                 */ 08750000
*/********************************************************************/ 08800000
* IF MACLIST ^= ''           /* MACLIST SUPPLIED?                    */ 08950000
*   THEN DO;                 /* YES -                                */ 09000000
*     IVRC = 12;             /*       PREVENT TEXT GENERATION        */ 09050000
*     ANS MSG('AHA0053 THE MACLIST '||QUOTE(MACLIST)||                  09100000
*             ' IS NOT ALLOWED. NO TEXT IS GENERATED.');                09150000
*                            /*       INDICATE MACLIST IN DO-COMMENT.*/ 09200000
*     IVDOCMT = IVDOCMT||' '||MACLIST;                                  09250000
*   END;                     /* END - MACLIST SPECIFIED.             */ 09300000
*/********************************************************************/ 09350000
*/*                PROCESS AX KEYWORD                                */ 09400000
*/********************************************************************/ 09450000
* IF AX ^= ''                /* AX SPECIFIED?                        */ 09550000
*   THEN DO;                 /* YES - ADD KEYWD TO COMMENT           */ 09600000
*     IVDOCMT = IVDOCMT||' AX'||AX;                                     09650000
*     IF AX(1) ^= '' &       /* WAS ARGUMENT SPECIFIED?      @ZM50111*/ 09800000
*       ((IVLP1=0 & IVRP1=0)|/* AND NOT POINTER FORM         @ZM50111*/ 09825000
*       (IVLP1+1 <= IVRP1-1))/* AND NOT = '()' ?             @ZM50111*/ 09837500
*       THEN DO;             /* YES - AX(1) SPECIFIED                */ 09850000
*         IF NUMBER(AX) > 1 /* TOO MANY AX ARGS?                     */ 09900000
*           THEN DO;         /* YES - ISSUE AHA0033                  */ 09950000
*             ANS MSG('AHA0033 AX - '||AX||                             10000000
*                      ' - HAS TOO MANY ARGUMENTS. '||                  10050000
*                      'NO TEXT IS GENERATED.');                        10100000
*             IVRC = 12;     /* KILL TEXT GENERATION                 */ 10150000
*           END;             /* NUMBER(AX) > 1                       */ 10200000
*       END;                 /* AX(1) SPECIFIED                      */ 10750000
*       ELSE DO;             /* NO ARGUMENT-ISSUE AHA0013            */ 10800000
*         ANS MSG('AHA0013 AX(1) (AX VALUE) IS REQUIRED '||             10850000
*                 'BUT IS NOT SPECIFIED. NO TEXT IS GENERATED.');       10900000
*         IVRC = 12;         /* KILL TEXT GENERATION                 */ 10950000
*       END;                 /* NO AX ARGUMENT                       */ 11000000
*   END;                     /* AX KEYWORD SPECIFIED                 */ 11050000
*   ELSE DO;                 /* AX NOT SPECIFIED                     */ 11100000
*     ANS MSG('AHA0013 AX IS REQUIRED '||                               11150000
*             'BUT IS NOT SPECIFIED. NO TEXT IS GENERATED.');           11200000
*     IVRC = 12;             /* KILL TEXT GENERATION                 */ 11250000
*   END;                     /* AX NOT SPECIFIED                     */ 11300000
*/********************************************************************/ 11350000
*/*                PROCESS 'RELATED' KEYWORD                         */ 11400000
*/********************************************************************/ 11450000
* IF RELATED ^= ''           /* IF RELATED WAS SPECIFIED             */ 11500000
*   THEN                     /* ADD KEYWORD TO DO COMMENT            */ 11550000
*     IVDOCMT=IVDOCMT||' RELATED'||RELATED;                             11600000
*/********************************************************************/ 12150000
*/*   INDICATE EPILOG IS TO PRODUCE STANDARD SAVEAREA MAPPING.       */ 12200000
*/********************************************************************/ 12250000
* IF INDEX(EHAMAPS,'SA@')=0   /* IF SA@ MAPPING NOT PREVIOUSLY       */ 12300000
*   THEN                      /* REQUESTED THEN INDICATE REQUEST     */ 12350000
*     EHAMAPS = EHAMAPS||'SA@,'; /* NOTE: COMMAS SEPERATE REQUESTS   */ 12400000
*/********************************************************************/ 12500000
*/*   INDICATE EPILOG IS TO PROVIDE ACCESS TO XM SERVICES.           */ 12550000
*/********************************************************************/ 12600000
* IF INDEX(EHAMAPS,'XM@')=0   /* IF XM SERVICES NOT PREVIOUSLY       */ 12650000
*   THEN                      /* REQUESTED THEN INDICATE REQUEST     */ 12700000
*     EHAMAPS = EHAMAPS||'XM@,'; /* NOTE: COMMAS SEPERATE REQUESTS   */ 12750000
*/********************************************************************/ 12800000
*/*                PUT OUT LABELS (IF ANY)                           */ 12840000
*/********************************************************************/ 12880000
* IF MACLABEL ^= ''          /* ANY LABELS SPECIFIED?                */ 12920000
*   THEN                     /* YES - PUT THEM OUT.                  */ 12960000
*     ANS(MACLABEL) COL(MACLMAR);                                       13000000
*/********************************************************************/ 13040000
*/*     PUT OUT DO STATEMENT                                         */ 13080000
*/********************************************************************/ 13120000
* IVDOCMT=IVDOCMT||' MACDATE(82.076) '; /* ADD MACDATE TO COMMENT    */ 13160000
*                            /*       GENERATE THE DO STATEMENT.     */ 13200000
*   ANS('DO; '||COMMENT(IVDOCMT)) COL(MACCOL);                          13240000
*/********************************************************************/ 13280000
*/*                DETERMINE IF TEXT SHOULD BE PRODUCED              */ 13320000
*/********************************************************************/ 13360000
* IF IVRC > 4                /* ANY SEVERE ERRORS?                   */ 13400000
*   THEN                     /* YES -                                */ 13440000
*     GOTO LHA09000;         /*       EXIT - NO TEXT PRODUCED.       */ 13480000
*/********************************************************************/ 13520000
*/*                DEFINE REGISTER NAMES                             */ 13560000
*/********************************************************************/ 13600000
* IF INDEX(EHAREGS,'00F')=0  /* REGISTER 0 PREVIOUSLY DEFINED?       */ 13800000
*   THEN                     /* NO  -                                */ 13850000
*     EHAREGS=EHAREGS||'00F';/*       DEFINE IT.                     */ 13900000
* IF INDEX(EHAREGS,'01P')=0  /* REGISTER 1 PREVIOUSLY DEFINED?       */ 13950000
*   THEN                     /* NO  -                                */ 14000000
*     EHAREGS=EHAREGS||'01P';/*       DEFINE IT.                     */ 14050000
* IF INDEX(EHAREGS,'02P')=0  /* REGISTER 2 PREVIOUSLY DEFINED?       */ 14100000
*   THEN                     /* NO  -                                */ 14150000
*     EHAREGS=EHAREGS||'02P';/*       DEFINE IT.                     */ 14200000
* IF INDEX(EHAREGS,'12P')=0  /* REGISTER 12 PREVIOUSLY DEFINED?      */ 14250000
*   THEN                     /* NO  -                                */ 14300000
*     EHAREGS=EHAREGS||'12P';/*       DEFINE IT.                     */ 14350000
* IF INDEX(EHAREGS,'13P')=0  /* REGISTER 13 PREVIOUSLY DEFINED?      */ 14400000
*   THEN                     /* NO  -                                */ 14450000
*     EHAREGS=EHAREGS||'13P';/*       DEFINE IT.                     */ 14500000
* IF INDEX(EHAREGS,'14P')=0  /* REGISTER 14 PREVIOUSLY DEFINED?      */ 14550000
*   THEN                     /* NO  -                                */ 14600000
*     EHAREGS=EHAREGS||'14P';/*       DEFINE IT.                     */ 14650000
* IF INDEX(EHAREGS,'15F')=0  /* FIXED REG 15 PREVIOUSLY DEFINED?     */ 14700000
*   THEN                     /* NO  -                                */ 14750000
*     EHAREGS=EHAREGS||'15F';/*       DEFINE IT.                     */ 14800000
*/********************************************************************/ 14850000
*/*                GENERATE LINKAGE TO AXSET SERVICE                 */ 14900000
*/********************************************************************/ 14950000
* ANS('RESPECIFY')                                COL(IVINDNT2);        15100000
* ANS('(GPR00F,')                                 COL(IVINDNT2+1);      15150000
* ANS('GPR01P,')                                  COL(IVINDNT2+2);      15200000
* ANS('GPR02P,')                                  COL(IVINDNT2+2);      15250000
* ANS('GPR13P,')                                  COL(IVINDNT2+2);      15290000
* ANS('GPR14P,')                                  COL(IVINDNT2+2);      15330000
* ANS('GPR15F) RESTRICTED;')                      COL(IVINDNT2+2);      15370000
* ANS('STM(GPR14P,GPR12P,SA@G1412);')             COL(IVINDNT2);        15410000
* ANS(COMMENT(' SAVE CALLER''S REGS            ')) COL(CC);             15450000
* IF IVLP1 ^= 1              /* IF NOT POINTER FORM ADDRESS  @ZMB0031*/ 15490000
*   THEN DO;                                                            15530000
*     ANS('GPR00F='||AX(1)||';')                  COL(IVINDNT2);        15570000
*     ANS(COMMENT(' AX VALUE TO PARM REG 0    ')) COL(CC);              15610000
*   END;                                                                15650000
*   ELSE DO;                                                            15690000
*     ANS('GPR00F='||AX(1,IVLP1+1:IVRP1-1)||';')  COL(IVINDNT2);        15730000
*     ANS(COMMENT(' AX VALUE TO PARM REG 0    ')) COL(CC);              15770000
*   END;                                                                15810000
* ANS('GPR01P=0;')                                COL(IVINDNT2);        15850000
* ANS(COMMENT(' PARM REG 1 MUST BE ZERO       ')) COL(CC);              15890000
* ANS('ESAR(SA@GPR15);')                          COL(IVINDNT2);        15903300
* ANS(COMMENT('SAVE SASID                     ')) COL(CC);              15916600
* ANS('GPR02P=XM@(10);')                          COL(IVINDNT2);        15930000
* ANS(COMMENT(' GET LX/EX FOR AXSET FROM SFT  ')) COL(CC);              15970000
* ANS('GEN (DS 0H);') COL(IVINDNT2);  /* MAKE PL/AS USE SAVEAREA @P1A*/ 15990000
* ANS('PC(GPR02P);')                              COL(IVINDNT2);        16010000
* ANS(COMMENT(' PC TO AXSET SERVICE           ')) COL(CC);              16050000
* ANS('SSAR(SA@GPR15);')                          COL(IVINDNT2);        16063300
* ANS(COMMENT('RESTORE SASID                  ')) COL(CC);              16076600
* ANS('LM(GPR02P,GPR12P,SA@G0212);')              COL(IVINDNT2);        16090000
* ANS(COMMENT(' RESTORE REGS 2-12             ')) COL(CC);              16130000
* ANS('GPR14P=SA@GPR14;')                         COL(IVINDNT2);        16170000
* ANS(COMMENT(' RESTORE REG 14                ')) COL(CC);              16210000
* ANS('RESPECIFY')                                COL(IVINDNT2);        16250000
* ANS('(GPR00F,')                                 COL(IVINDNT2+1);      16290000
* ANS('GPR01P,')                                  COL(IVINDNT2+2);      16330000
* ANS('GPR02P,')                                  COL(IVINDNT2+2);      16370000
* ANS('GPR13P,')                                  COL(IVINDNT2+2);      16600000
* ANS('GPR14P,')                                  COL(IVINDNT2+2);      16650000
* ANS('GPR15F) UNRESTRICTED;')                    COL(IVINDNT2+2);      16700000
*/********************************************************************/ 16750000
*/*                CLOSE OUT DO GROUP AND RETURN                     */ 16800000
*/********************************************************************/ 16850000
*LHA09000:                   /* CLOSE OUT DO GROUP.                  */ 16900000
* ANS('END; '||COMMENT(IVDOCMT)) COL(MACCOL); /*             @G860PXZ*/ 16950000
* RETURN CODE(IVRC);                                                    17000000
*/********************************************************************/ 17200000
*/*                END OF AXSET MACRO                                */ 17250000
*/********************************************************************/ 17300000
* % END AXSET;                                                          17350013
