*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXZXIXCM                              -93/08/16-<1> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Checkpoint a previosuly received msg          * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5645-001 (C) COPYRIGHT IBM CORP. 1993, 1996                     * 00001300
*                                                                     * 00001400
* STATUS= HBB6601                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*01* FUNCTION:                                                        * 00001900
*                                                                     * 00002000
*                                                                     * 00002100
*      Purpose:  The IXZXIXCM is invoked after a message has been     * 00002200
*      received and updates have been made to the users data in the   * 00002300
*      envelope. This service will take those updates and include     * 00002400
*      them into the JESXCF copy of the message. If the receiver      * 00002500
*      abnormally terminates, it will receive the updated messages    * 00002600
*      once it recovers.                                              * 00002700
*                                                                     * 00002800
*      IBM use of this interface:  JES3 will use this service to      * 00002900
*      update the JESXCF copy of the massage after the local copy has * 00003000
*      been updated. JES3 updates these control blocks to indicate    * 00003100
*      what processing steps the message has gone through.            * 00003200
*                                                                     * 00003300
*      Customer use of this interface:  None, this is an internal     * 00003400
*      macro.                                                         * 00003500
*                                                                     * 00003600
*      CDPI Implications:                                             * 00003700
*                                                                     * 00003800
*      This macro is an internal macro and is not part of the general * 00003900
*      use programming interface.                                     * 00004000
*                                                                     * 00004100
*      EEC Implications:  This macro is not an EEC interface.         * 00004200
*                                                                     * 00004300
*      Related Macros:  The following macros are required in order to * 00004400
*      use this macro service:                                        * 00004500
*                                                                     * 00004600
*                                                                     * 00004700
*      o   JES2:                                                      * 00004800
*                                                                     * 00004900
*                                                                     * 00005000
*          -   $MODULE - must be included in the module and must have * 00005100
*              been invoked before the IXZXIXCM macro service.        * 00005200
*                                                                     * 00005300
*                                                                     * 00005400
*                                                                     * 00005500
*      o   JES3:                                                      * 00005600
*                                                                     * 00005700
*                                                                     * 00005800
*          -   IATYMOD - must be included in the module and must have * 00005900
*              been invoked before the IXZXIXCM macro service.        * 00006000
*                                                                     * 00006100
*                                                                     * 00006200
*                                                                     * 00006300
*                                                                     * 00006400
*                                                                     * 00006500
*      Requirements                                                   * 00006600
*                                                                     * 00006700
*                                                                     * 00006800
*      o   Authorization: Authorized                                  * 00006900
*                                                                     * 00007000
*      o   Dispatchable unit mode: Task                               * 00007100
*                                                                     * 00007200
*      o   Cross memory mode: PASN = HASN = SASN                      * 00007300
*                                                                     * 00007400
*      o   AMODE: 31                                                  * 00007500
*                                                                     * 00007600
*      o   ASC mode: Primary                                          * 00007700
*                                                                     * 00007800
*      o   Serialization: Enabled for interrupts                      * 00007900
*                                                                     * 00008000
*      o   Locks:  This service assumes no locks are held by the      * 00008100
*          user.                                                      * 00008200
*                                                                     * 00008300
*      o   Control Parameters:  None                                  * 00008400
*                                                                     * 00008500
*      o   JES Environments:                                          * 00008600
*                                                                     * 00008700
*                                                                     * 00008800
*          -   JES2 Main Task                                         * 00008900
*                                                                     * 00009000
*          -   JES3 Main Task                                         * 00009100
*                                                                     * 00009200
*          -   JES2 Subtask                                           * 00009300
*                                                                     * 00009400
*          -   JES3 Subtask                                           * 00009500
*                                                                     * 00009600
*          -   JES3 FSS                                               * 00009700
*                                                                     * 00009800
*                                                                     * 00009900
*                                                                     * 00010000
*                                                                     * 00010100
*                                                                     * 00010200
*      Register Information                                           * 00010300
*                                                                     * 00010400
*                                                                     * 00010500
*      o   Input registers                                            * 00010600
*                                                                     * 00010700
*                                                                     * 00010800
*          -   R0-R15 - Undefined                                     * 00010900
*                                                                     * 00011000
*                                                                     * 00011100
*                                                                     * 00011200
*      o   Output registers                                           * 00011300
*                                                                     * 00011400
*                                                                     * 00011500
*          -   R0 - Reason code                                       * 00011600
*                                                                     * 00011700
*          -   R1 - Unpredictable                                     * 00011800
*                                                                     * 00011900
*          -   R2-R13 - Unchanged                                     * 00012000
*                                                                     * 00012100
*          -   R14 - Unpredictable                                    * 00012200
*                                                                     * 00012300
*          -   R15 - Return code                                      * 00012400
*                                                                     * 00012500
*                                                                     * 00012600
*                                                                     * 00012700
*                                                                     * 00012800
*                                                                     * 00012900
*      Programming Notes/Requirements:  The programmer must supply    * 00013000
*      the MSGTOKEN that is returned on the receive message service   * 00013100
*      IXZXIXRM.                                                      * 00013200
*                                                                     * 00013300
*      Restrictions                                                   * 00013400
*                                                                     * 00013500
*                                                                     * 00013600
*      o   Can not be issued until JES initialization has attached    * 00013700
*          and initializes the JES Common XCF Task.                   * 00013800
*                                                                     * 00013900
*      o   Must be done under the same task the issued the mailbox    * 00014000
*          build.                                                     * 00014100
*                                                                     * 00014200
*                                                                     * 00014300
*                                                                     * 00014400
*      Performance Implications:  This macro has minimal performance  * 00014500
*      impact, the service routine causes a subtasked function to be  * 00014600
*      performed.                                                     * 00014700
*                                                                     * 00014800
*01* EXTERNAL CLASSIFICATION:   NONE                                  * 00014900
*                                                                     * 00015000
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00015100
*                                                                     * 00015200
*01* SYNTAX:                                                          * 00015300
*                                                                     * 00015400
*[xlabel]  IXZXIXCM     MSGTOKEN=xmsgtoken                            * 00015500
*                      ,GROUPTOKEN=xgrouptoken                        * 00015600
*                     [,RTNCODE=xrtncode]                             * 00015700
*                     [,RSNCODE=xrsncode]                             * 00015800
*                     [,PLISTVER=xplistver|IMPLIED_VERSION]         * 00015900
*                    [,MF=S]                                         * 00016000
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00016100
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00016200
*                                                                     * 00016300
*                                                                     * 00016400
*      Where:                                                         * 00016500
*                                                                     * 00016600
*                                                                     * 00016700
*      [xlabel]                                                       * 00016800
*          is an optional symbol, starting in column 1, that is the   * 00016900
*          name on the IXZXIXCM macro invocation.  The name must      * 00017000
*          conform to the rules for an ordinary assembler language    * 00017100
*          symbol.                                                    * 00017200
*          DEFAULT: No name.                                          * 00017300
*                                                                     * 00017400
*                                                                     * 00017500
*                                                                     * 00017600
*                                                                     * 00017700
*      MSGTOKEN=xmsgtoken                                             * 00017800
*          is the name (RS-type), or address in register (2)-(12), of * 00017900
*          a required 64 bit input that contains the message token    * 00018000
*          returned from the message receive service (IXZXIXRM).      * 00018100
*                                                                     * 00018200
*                                                                     * 00018300
*                                                                     * 00018400
*                                                                     * 00018500
*      GROUPTOKEN=xgrouptoken                                         * 00018600
*          is the name (RS-type), or address in register (2)-(12), of * 00018700
*          a required fullword input that contains the JES XCF group  * 00018800
*          token.                                                     * 00018900
*                                                                     * 00019000
*                                                                     * 00019100
*                                                                     * 00019200
*                                                                     * 00019300
*      [RTNCODE=xrtncode]                                             * 00019400
*          is the name (RS-type) of an optional fullword output       * 00019500
*          variable, or register (2)-(12), into which the return code * 00019600
*          is to be copied from GPR 15.                               * 00019700
*                                                                     * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*                                                                     * 00020100
*      [RSNCODE=xrsncode]                                             * 00020200
*          is the name (RS-type) of an optional fullword output       * 00020300
*          variable, or register (2)-(12), into which the reason code * 00020400
*          is to be copied from GPR 0.                                * 00020500
*                                                                     * 00020600
*                                                                     * 00020700
*                                                                     * 00020800
*                                                                     * 00020900
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00021000
*          is an optional byte input decimal value in the "1-1" range * 00021100
*          that specifies the macro version.  PLISTVER is the only    * 00021200
*          key allowed on the list form of MF and determines which    * 00021300
*          parameter list is generated.  Note that MAX may be         * 00021400
*          specified instead of a number, and the parameter list will * 00021500
*          be of the largest size currently supported. This size may  * 00021600
*          grow from release to release (thus possibly affecting the  * 00021700
*          amount of storage needed by your program).  If your        * 00021800
*          program can tolerate this, IBM recommends that you always  * 00021900
*          specify MAX when creating the list form parameter list as  * 00022000
*          that will ensure that the list form parameter list is      * 00022100
*          always long enough to hold whatever parameters might be    * 00022200
*          specified on the execute form.                             * 00022300
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00022400
*          default is the lowest version which allows all of the      * 00022500
*          parameters specified on the invocation to be processed.    * 00022600
*                                                                     * 00022700
*                                                                     * 00022800
*                                                                     * 00022900
*                                                                     * 00023000
*      [MF=S|L|E]                                                   * 00023100
*          is an optional keyword input which specifies the macro     * 00023200
*          form.                                                      * 00023300
*          DEFAULT: S                                                 * 00023400
*                                                                     * 00023500
*                                                                     * 00023600
*          [MF=S]                                                     * 00023700
*              specifies the standard form of the macro.  The "S"     * 00023800
*              form generates code to put the parameters into an      * 00023900
*              in-line parameter list and invoke the desired service. * 00024000
*              Full checking for required macro keys is done along    * 00024100
*              with supplying defaults for omitted optional           * 00024200
*              parameters.                                            * 00024300
*                                                                     * 00024400
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00024500
*              specifies the list form of the macro.  The "L" form    * 00024600
*              defines an area to be used for the parameter list.     * 00024700
*              Only the PLISTVER key may be specified on the          * 00024800
*              invocation.  All other macro parameters are flagged as * 00024900
*              errors.  If PLISTVER is not specified, the original    * 00025000
*              parameter list definition is used.                     * 00025100
*                                                                     * 00025200
*            ,xmfctrl                                                 * 00025300
*              is a required input.  It is the name of a storage area * 00025400
*              for the parameter list.                                * 00025500
*                                                                     * 00025600
*            ,xmfattr|0D                                            * 00025700
*              is an optional 60 character input string that varies   * 00025800
*              from 1 to 60 characters. It can contain any value that * 00025900
*              is valid on an assembler DS pseudo-op. You can use     * 00026000
*              this parameter to force boundary alignment of the      * 00026100
*              parameter list.                                        * 00026200
*              DEFAULT: 0D which forces the parameter list to a       * 00026300
*              doubleword boundary.                                   * 00026400
*                                                                     * 00026500
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00026600
*              specifies the execute form of the macro.  The "E" form * 00026700
*              generates code to put the parameters into the          * 00026800
*              parameter list specified by xmfctrl and provides full  * 00026900
*              syntax checking with default setting.                  * 00027000
*                                                                     * 00027100
*            ,xmfctrl                                                 * 00027200
*              is a required input.  It is the name (RS-type), or     * 00027300
*              address in register (1)-(12), of a storage area for    * 00027400
*              the parameter list.                                    * 00027500
*                                                                     * 00027600
*            ,COMPLETE                                              * 00027700
*              is an optional keyword input which specifies the       * 00027800
*              degree of macro parameter syntax checking.             * 00027900
*              DEFAULT: COMPLETE                                      * 00028000
*                                                                     * 00028100
*                                                                     * 00028200
*              COMPLETE                                               * 00028300
*                  Checking for required macro keys is done and       * 00028400
*                  defaults are supplied for omitted optional         * 00028500
*                  parameters.                                        * 00028600
*                                                                     * 00028700
*                                                                     * 00028800
*                                                                     * 00028900
*                                                                     * 00029000
*                                                                     * 00029100
*                                                                     * 00029200
*                                                                     * 00029300
*01* RETURN CODES:                                                    * 00029400
*                                                                     * 00029500
*                                                                     * 00029600
*            0    Processing successful. Message was updated.         * 00029700
*                                                                     * 00029800
*            4    Processing did not complete do to user error.       * 00029900
*                                                                     * 00030000
*            8    Processing did not complete due to system error.    * 00030100
*                                                                     * 00030200
*            C    Processing did not complete due to a system abend.  * 00030300
*                                                                     * 00030400
*                                                                     * 00030500
*                                                                     * 00030600
*01* REASON CODES:                                                    * 00030700
*                                                                     * 00030800
*       REASON    RETURN                                              * 00030900
*       CODE      CODE      DESCRIPTION                               * 00031000
*                                          * 00031100
*                                                                     * 00031200
*                                                                     * 00031300
*              0  0         Processing was sucessful, the message was * 00031400
*                           updated.                                  * 00031500
*                                                                     * 00031600
*              4  4         Processing failed because, the  parameter * 00031700
*                           list    passed      to  IXZXIXCM  service * 00031800
*                           routine does not have a valid eyecatcher  * 00031900
*                                                                     * 00032000
*              8  4         Processing  failed because, the parameter * 00032100
*                           list   passed  to  the  IXZXIXCM  service * 00032200
*                           routine had an invalid version indicator. * 00032300
*                           The caller may need to be recompiled.     * 00032400
*                                                                     * 00032500
*              C  4         Processing failed because, the grouptoken * 00032600
*                           passed  to  the  IXZXIXCM service routine * 00032700
*                           was not valid.                            * 00032800
*                                                                     * 00032900
*             10  4         Processing   failed  because,the  IXZIXCM * 00033000
*                           service  routine  was  called on a member * 00033100
*                           that is detaching.                        * 00033200
*                                                                     * 00033300
*             14  4         Processing  failed  because, the msgtoken * 00033400
*                           passed   to   the  IXZXIXCM  service  was * 00033500
*                           invalid or the message has been overlaid. * 00033600
*                                                                     * 00033700
*              0  C         Processing  failed due to a system abend. * 00033800
*                           The request is rejected.                  * 00033900
*                                                                     * 00034000
*                                                                     * 00034100
*                                                                     * 00034200
*01* MODULE TYPE:  ASSEM MACRO                                        * 00034300
*                                                                     * 00034400
*02*   PROCESSOR:  ASSEM                                              * 00034500
*                                                                     * 00034600
*01* COMPONENT:  SCJSC                                                * 00034700
*                                                                     * 00034800
*01* MACRO USAGE NOTES:                                               * 00034900
*                                                                     * 00035000
*                                                                     * 00035100
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00035200
*        global macro variable.  Any value other than 'NO' will       * 00035300
*        result in the macro expansion being printed.  The default is * 00035400
*        'YES'.  The following examples illustrate how the ZPRINT     * 00035500
*        variable should be set.                                      * 00035600
*                                                                     * 00035700
*                    GBLC &ZPRINT                                     * 00035800
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00035900
*                                                                     * 00036000
*                                                                     * 00036100
*    2.  All   keys   currently   contained  in  the  IXZXIXCM  macro * 00036200
*        correspond  to  version  1.   If you specify PLISTVER, use a * 00036300
*        value of 1 or MAX.                                           * 00036400
*                                                                     * 00036500
*                                                                     * 00036600
*                                                                     * 00036700
*                                                                     * 00036800
*01* CHANGE ACTIVITY:                                                 * 00036900
*                                                                     * 00037000
*   Flag LineItem  FMID    Date   ID    Comment                       * 00037100
*                                                                     * 00037200
*    $N0=JESXCF   HBB5510 921201 PD0AL:                               * 00037300
****** END OF SPECIFICATIONS *****************************************/ 00037400
*/********************************************************************* 00037500
         MACRO                                                          00037600
&XLABEL  IXZXIXCM &MSGTOKEN=,&GROUPTOKEN=,&RTNCODE=,&RSNCODE=,         *00037700
               &PLISTVER=,&MF=                                          00037800
.*                                                                      00037900
*                MACDATE -93/08/16-<1>                                  00038000
.*                                                                      00038100
.*******************************************************************    00038200
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00038300
.*******************************************************************    00038400
                GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                 00038500
                GBLC  &ZTEST      YES=TEST NO=NO TEST                   00038600
                GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX           00038700
.*                                                                      00038800
                GBLC  &ZIXZXIXCM  YES=MACRO USED AT LEAST ONCE          00038900
.*******************************************************************    00039000
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00039100
.*******************************************************************    00039200
                LCLC  &ZMS        ERROR MESSAGE WORK AREA               00039300
                LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS          00039400
                LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED            00039500
                LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR           00039600
                LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE           00039700
                LCLA  &ZAWRK      USED AS A WORK AREA                   00039800
                LCLA  &ZASIZ      USED FOR SIZE OF VALUE                00039900
                LCLA  &ZN         NUMERIC WORK VARIABLE                 00040000
                LCLC  &ZC         CHARACTER WORK VARIABLE               00040100
                LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE           00040200
                LCLA  &ZTLA       VALUE TOO LONG VARIABLE               00040300
                LCLA  &ZMACRET    MACRO RETURN CODE                     00040400
&ZMACRET        SETA  0           ASSUME NO ERRORS                      00040500
.*                                                                      00040600
                LCLC  &ZCSYSLIST(255)           NONXKEY, POS ARRAY      00040700
                LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()            00040800
                LCLA  &ZPLLEN     PARAMETER LIST LENGTH                 00040900
                LCLC  &ZENDBASEPL               End of base PL          00041000
                LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                 00041100
.*******************************************************************    00041200
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00041300
.*******************************************************************    00041400
                LCLA  &ZI         INDEX FOR ARRAY                       00041500
                LCLA  &ZJ         INDEX FOR PARMS                       00041600
                LCLA  &ZK         INDEX FOR PARSE                       00041700
                LCLA  &ZLO        LOW RANGE VALUE                       00041800
                LCLA  &ZHI        HIGH RANGE VALUE                      00041900
                LCLC  &ZW         WORK AREA FOR PARM                    00042000
.*******************************************************************    00042100
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00042200
.*******************************************************************    00042300
                LCLC  &XMSGTOKEN  ++ NAME                               00042400
                LCLC  &XGROUPTOKEN              ++ NAME                 00042500
                LCLC  &XRTNCODE   ++ NAME                               00042600
                LCLC  &XRSNCODE   ++ NAME                               00042700
                LCLA  &XPLISTVER  ++ VALUE                              00042800
                LCLC  &XMF        ++ VALUE                              00042900
                LCLC  &XMFCTRL    ++ NAME                               00043000
                LCLC  &XMFATTR    ++ VALUE                              00043100
                LCLC  &XMFSCK     ++ VALUE                              00043200
.*******************************************************************    00043300
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00043400
.*******************************************************************    00043500
                LCLC  &ZXMSGTOKEN               ++ INPUT NAME           00043600
                LCLC  &ZXGROUPTOKEN             ++ INPUT NAME           00043700
                LCLC  &ZXRTNCODE  ++ OUTPUT NAME                        00043800
                LCLC  &ZXRSNCODE  ++ OUTPUT NAME                        00043900
                LCLC  &ZXPLISTVER               ++ INPUT VALUE          00044000
                LCLC  &ZXMF       ++ INPUT VALUE                        00044100
                LCLC  &ZXMFCTRL   ++ INPUT NAME                         00044200
                LCLC  &ZXMFATTR   ++ INPUT VALUE                        00044300
                LCLC  &ZXMFSCK    ++ INPUT VALUE                        00044400
.********************************************************************   00044500
.***AC.PLV01  PROCESS PLISTVER                                      *   00044600
.********************************************************************   00044700
&XPLISTVER      SETA  1                                                 00044800
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00044900
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00045000
&XPLISTVER      SETA  1                                                 00045100
.ZPLV0          ANOP  ,                                                 00045200
.*                                                                      00045300
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00045400
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00045500
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00045600
.*-------------------------------------------------------------------   00045700
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00045800
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00045900
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00046000
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00046100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00046200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00046300
                AGO   .ZPVCK2                                           00046400
.ZPVCK3         ANOP  ,                                                 00046500
.*-------------------------------------------------------------------   00046600
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00046700
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00046800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00046900
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00047000
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00047100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00047200
                AGO   .ZPVCKE                                           00047300
.ZPVCK2         ANOP  ,                                                 00047400
.*-------------------------------------------------------------------   00047500
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00047600
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00047700
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00047800
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00047900
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00048000
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00048100
                MNOTE 8,' &ZMS IS REQUIRED.'                            00048200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00048300
                AGO   .ZPVCK5                                           00048400
.ZPVCK4         ANOP  ,                                                 00048500
&XPLISTVER      SETA  &PLISTVER(1)                                      00048600
.ZPVCK5         ANOP  ,                                                 00048700
.*-------------------------------------------------------------------   00048800
&ZCVAL          SETC  '&PLISTVER(1)'                                    00048900
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00049000
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00049100
                AIF   (&XPLISTVER LT 1).ZPVCK6  TOO LOW                 00049200
                AIF   (&XPLISTVER LE 1).ZPVCKE  NOT HIGH                00049300
.ZPVCK6         ANOP   ,                                                00049400
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00049500
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00049600
&ZMS            SETC  '&ZMS THE RANGE IS "1-1"'                         00049700
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00049800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00049900
.ZPVCKE         ANOP   ,                                                00050000
.********************************************************************   00050100
.***AG.MF01 PROCESS MF MACRO FORMS                                      00050200
.********************************************************************   00050300
                ACTR  10000                                             00050400
.*------------------------------------------------------------------    00050500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00050600
&XMF            SETC  ''          INITIALIZE XVARIABLE                  00050700
.*-------------------------------------------------------------------   00050800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00050900
.ZG18           ANOP  ,                                                 00051000
&ZTLC           SETC 'S'                                                00051100
                AIF   ('&MF(1)' NE '&ZTLC').ZG19                        00051200
&XMF            SETC  'S'         SET KEYWORD                           00051300
                AIF   (N'&MF LE 1).ZG18A        CK NUM                  00051400
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         00051500
&ZMS            SETC  '&ZMS.&MF"'                                       00051600
&ZMS            SETC  '&ZMS "MF"'                                       00051700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00051800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00051900
.ZG18A          ANOP  ,                                                 00052000
.*-------------------------------------------------------------------   00052100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00052200
.ZG19           ANOP  ,                                                 00052300
&ZTLC           SETC 'L'                                                00052400
                AIF   ('&MF(1)' NE '&ZTLC').ZG26                        00052500
&XMF            SETC  'L'         SET KEYWORD                           00052600
                AIF   (N'&MF LE 3).ZG19A        CK NUM                  00052700
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         00052800
&ZMS            SETC  '&ZMS.&MF"'                                       00052900
&ZMS            SETC  '&ZMS "MF"'                                       00053000
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              00053100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00053200
.ZG19A          ANOP  ,                                                 00053300
.*-------------------------------------------------------------------   00053400
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00053500
                AIF   (N'&SYSLIST NE 0).ZG19B   POSITIONALS?            00053600
                AIF   ('&MSGTOKEN' NE '').ZG19B  KEYS?                  00053700
                AIF   ('&GROUPTOKEN' NE '').ZG19B  KEYS?                00053800
                AIF   ('&RTNCODE' NE '').ZG19B  KEYS?                   00053900
                AIF   ('&RSNCODE' NE '').ZG19B  KEYS?                   00054000
                AGO    .ZG19C     INVOCATION OKAY                       00054100
.ZG19B          ANOP  ,                                                 00054200
&ZMS            SETC  'THE "L" FORM OF "MF"'    *MFLA* MNOTE            00054300
&ZMS            SETC  '&ZMS CAN ONLY HAVE'                              00054400
&ZMS            SETC  '&ZMS THE "PLISTVER" KEY'                         00054500
                MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'            00054600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00054700
.ZG19C          ANOP  ,                                                 00054800
.*-------------------------------------------------------------------   00054900
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00055000
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         00055100
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         00055200
                AIF   (N'&MF(2) GT 1).ZG21B     MULTI PARMS             00055300
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         00055400
.ZG21B          AIF   (K'&MF(2) GT 0).ZG21C                             00055500
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00055600
&ZMS            SETC  'WHEN "L" IS SPECIFIED'   *KRQDA*                 00055700
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               00055800
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      00055900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00056000
.ZG21C          ANOP  ,                                                 00056100
.*-------------------------------------------------------------------   00056200
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00056300
                AIF   (K'&ZXMFCTRL LE 0).ZG21P  NOT I/O                 00056400
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG21P                    00056500
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00056600
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         00056700
&ZMS            SETC  '&ZMS.&MF"'                                       00056800
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00056900
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                 00057000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00057100
.ZG21P          ANOP  ,                                                 00057200
.*-------------------------------------------------------------------   00057300
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00057400
&ZXMFATTR       SETC  'INPUT'     SET IN/OUTPUT                         00057500
&XMFATTR        SETC  '0D'                                              00057600
                AIF   (K'&MF(3) LE 0).ZG24B     PARM                    00057700
&XMFATTR        SETC  '&MF(3,1)'  SET XVARIABLE                         00057800
                AIF   (N'&MF(3) GT 1).ZG24B     MULTI PARMS             00057900
&XMFATTR        SETC  '&MF(3)'    SET XVARIABLE                         00058000
.ZG24B          ANOP  ,                                                 00058100
.*-------------------------------------------------------------------   00058200
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00058300
                AIF   (K'&ZXMFATTR LE 0).ZG24P  NOT I/O                 00058400
                AIF   ('&XMFATTR'(1,1) NE '(').ZG24P                    00058500
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       00058600
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         00058700
&ZMS            SETC  '&ZMS.&MF"'                                       00058800
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00058900
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                 00059000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00059100
.ZG24P          ANOP  ,                                                 00059200
.*-------------------------------------------------------------------   00059300
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00059400
                AIF   (K'&ZXMFATTR LE 0).ZG24S  NOT I/O                 00059500
                AIF   (K'&XMFATTR LE 60).ZG24S  LNG OK                  00059600
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       00059700
&ZMS            SETC  '"MF='      *KLNGA* MNOTE                         00059800
&ZMS            SETC  '&ZMS.&MF"'                                       00059900
&ZMS            SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'             00060000
                MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                00060100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00060200
.ZG24S          ANOP  ,                                                 00060300
.*-------------------------------------------------------------------   00060400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00060500
.ZG26           ANOP  ,                                                 00060600
&ZTLC           SETC 'E'                                                00060700
                AIF   ('&MF(1)' NE '&ZTLC').ZG34                        00060800
&XMF            SETC  'E'         SET KEYWORD                           00060900
                AIF   (N'&MF LE 3).ZG26A        CK NUM                  00061000
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         00061100
&ZMS            SETC  '&ZMS.&MF"'                                       00061200
&ZMS            SETC  '&ZMS "MF"'                                       00061300
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              00061400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00061500
.ZG26A          ANOP  ,                                                 00061600
.*-------------------------------------------------------------------   00061700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00061800
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         00061900
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         00062000
                AIF   (N'&MF(2) GT 1).ZG28B     MULTI PARMS             00062100
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         00062200
.ZG28B          AIF   (K'&MF(2) GT 0).ZG28C                             00062300
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00062400
&ZMS            SETC  'WHEN "E" IS SPECIFIED'   *KRQDA*                 00062500
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               00062600
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      00062700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00062800
.ZG28C          ANOP  ,                                                 00062900
.*-------------------------------------------------------------------   00063000
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00063100
                AIF   (K'&ZXMFCTRL LE 0).ZG28R  NOT I/O                 00063200
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG28R                    00063300
&ZCGPR          SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                        00063400
                AIF   ('&ZCGPR'(1,1) NE '0').ZG28P                      00063500
                AIF   (K'&ZCGPR GT 2).ZG28Q                             00063600
                AIF   ('&ZCGPR' EQ '0').ZG28Q                           00063700
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00063800
                AIF   (T'&ZCGPR NE 'N').ZG28Q   INVALID REG NAME        00063900
.ZG28P          ANOP  ,                                                 00064000
                AIF   (T'&ZCGPR NE 'N').ZG28R   NON NUMERIC             00064100
                AIF   ('&ZCGPR' LT '1').ZG28Q                           00064200
                AIF   ('&ZCGPR' LE '12').ZG28R                          00064300
.ZG28Q          ANOP  ,                                                 00064400
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         00064500
&ZMS            SETC  '&ZMS.&MF"'                                       00064600
&ZMS            SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'         00064700
                MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                  00064800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00064900
.ZG28R          ANOP  ,                                                 00065000
.*-------------------------------------------------------------------   00065100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00065200
&XMFSCK         SETC  ''          INITIALIZE XVARIABLE                  00065300
.ZG32A   AIF   ('&MF(3)' NE 'COMPLETE').ZG33A                           00065400
&XMFSCK         SETC  'COMPLETE'  SET KEYWORD                           00065500
.*-------------------------------------------------------------------   00065600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00065700
.ZG33A          AIF   (K'&XMFSCK GT 0).ZG33C    KEYWORD                 00065800
                AIF   (K'&MF(3) LE 0).ZG33B                             00065900
&ZMS            SETC  '"MF='      *KUKWA* MNOTE                         00066000
&ZMS            SETC  '&ZMS.&MF"'                                       00066100
&ZMS            SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '         00066200
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00066300
&ZMS            SETC  '&ZMS "COMPLETE".'        VALID KEYWORD           00066400
                MNOTE 8,' &ZMS '                                        00066500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00066600
.ZG33B          ANOP  ,                                                 00066700
&XMFSCK         SETC  'COMPLETE'  SET DEFAULT KEYWORD                   00066800
.ZG33C          ANOP  ,                                                 00066900
&ZXMFSCK        SETC  'INPUT'     SET IN/OUTPUT                         00067000
.*------------------------------------------------------------------    00067100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00067200
.ZG34           ANOP  ,                                                 00067300
&ZXMF           SETC  'INPUT'     SET IN/OUTPUT                         00067400
                AIF   (K'&XMF GT 0).ZG34E       VALID ARG               00067500
                AIF   (T'&MF EQ 'O').ZG34D      OMITTED                 00067600
&ZASYSLNDX      SETA  0                                                 00067700
.ZG34A          ANOP  ,           POSITIONAL MACRO KEY                  00067800
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00067900
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG34C                  00068000
&ZTLC           SETC 'MF'                                               00068100
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG34A         00068200
.ZG34B          ANOP  ,                                                 00068300
&ZXMF           SETC  ''          RESET IN/OUTPUT                       00068400
&ZMS            SETC  'THE "MF" KEY'            *KOPTA* MNOTE           00068500
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00068600
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00068700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00068800
                AGO   .ZG34E                                            00068900
.ZG34C          ANOP  ,                                                 00069000
&ZXMF           SETC  ''          RESET IN/OUTPUT                       00069100
&ZMS            SETC  '"MF='      *KUKWA* MNOTE                         00069200
&ZMS            SETC  '&ZMS.&MF"'                                       00069300
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00069400
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00069500
&ZMS            SETC  '&ZMS "S",'               VALID KEYWORD           00069600
&ZMS            SETC  '&ZMS "L",'               VALID KEYWORD           00069700
&ZMS            SETC  '&ZMS OR "E".'            VALID KEYWORD           00069800
                MNOTE 8,' &ZMS '                                        00069900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00070000
                AGO   .ZG34E                                            00070100
.ZG34D          ANOP  ,                                                 00070200
&XMF            SETC  'S'         SET DEFAULT KEYWORD                   00070300
&XMFSCK         SETC  'COMPLETE'  COMPLETE CHECKING                     00070400
.ZG34E          ANOP  ,                                                 00070500
.********************************************************************   00070600
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00070700
.********************************************************************   00070800
                ACTR  10000                                             00070900
.*-------------------------------------------------------------------   00071000
.***AG.MF03 MF=(SLE)                                                    00071100
                AIF   ('&XMF' EQ 'L').ZGMFX                             00071200
.*----------------------------------------------------------------***   00071300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00071400
                AIF   (N'&MSGTOKEN LE 1).ZG2A   CK NUM                  00071500
&ZMS            SETC  '"MSGTOKEN='              *KPOSA* MNOTE           00071600
&ZMS            SETC  '&ZMS.&MSGTOKEN"'                                 00071700
&ZMS            SETC  '&ZMS "MSGTOKEN"'                                 00071800
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00071900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00072000
.ZG2A           ANOP  ,                                                 00072100
.*-------------------------------------------------------------------   00072200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00072300
&ZXMSGTOKEN     SETC  'INPUT'     SET IN/OUTPUT                         00072400
&XMSGTOKEN      SETC  '&MSGTOKEN(1)'            SET XVARIABLE           00072500
                AIF   (N'&MSGTOKEN GT 1).ZG2B   MULTI PARMS             00072600
&XMSGTOKEN      SETC  '&MSGTOKEN'               SET XVARIABLE           00072700
.ZG2B           AIF   (K'&MSGTOKEN(1) GT 0).ZG2C                        00072800
&ZXMSGTOKEN     SETC  ''          RESET IN/OUTPUT                       00072900
&ZMS            SETC  ' '         *KRQDA*                               00073000
&ZMS            SETC  '&ZMS "MSGTOKEN" KEY AND ITS ARGUMENT'            00073100
                MNOTE 8,' &ZMS ARE REQUIRED.'                           00073200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00073300
.ZG2C           ANOP  ,                                                 00073400
.*-------------------------------------------------------------------   00073500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00073600
                AIF   (K'&ZXMSGTOKEN LE 0).ZG2R  NOT I/O                00073700
                AIF   ('&XMSGTOKEN'(1,1) NE '(').ZG2R                   00073800
&ZCGPR          SETC  '&XMSGTOKEN'(2,K'&XMSGTOKEN-2)                    00073900
                AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                       00074000
                AIF   (K'&ZCGPR GT 2).ZG2Q                              00074100
                AIF   ('&ZCGPR' EQ '0').ZG2Q                            00074200
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00074300
                AIF   (T'&ZCGPR NE 'N').ZG2Q    INVALID REG NAME        00074400
.ZG2P           ANOP  ,                                                 00074500
                AIF   (T'&ZCGPR NE 'N').ZG2R    NON NUMERIC             00074600
                AIF   ('&ZCGPR' LT '2').ZG2Q                            00074700
                AIF   ('&ZCGPR' LE '12').ZG2R                           00074800
.ZG2Q           ANOP  ,                                                 00074900
&ZMS            SETC  '"MSGTOKEN='              *KGPRA* MNOTE           00075000
&ZMS            SETC  '&ZMS.&MSGTOKEN"'                                 00075100
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00075200
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00075300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00075400
.ZG2R           ANOP  ,                                                 00075500
.*----------------------------------------------------------------***   00075600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00075700
                AIF   (N'&GROUPTOKEN LE 1).ZG5A  CK NUM                 00075800
&ZMS            SETC  '"GROUPTOKEN='            *KPOSA* MNOTE           00075900
&ZMS            SETC  '&ZMS.&GROUPTOKEN"'                               00076000
&ZMS            SETC  '&ZMS "GROUPTOKEN"'                               00076100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00076200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00076300
.ZG5A           ANOP  ,                                                 00076400
.*-------------------------------------------------------------------   00076500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00076600
&ZXGROUPTOKEN   SETC  'INPUT'     SET IN/OUTPUT                         00076700
&XGROUPTOKEN    SETC  '&GROUPTOKEN(1)'          SET XVARIABLE           00076800
                AIF   (N'&GROUPTOKEN GT 1).ZG5B  MULTI PARMS            00076900
&XGROUPTOKEN    SETC  '&GROUPTOKEN'             SET XVARIABLE           00077000
.ZG5B           AIF   (K'&GROUPTOKEN(1) GT 0).ZG5C                      00077100
&ZXGROUPTOKEN   SETC  ''          RESET IN/OUTPUT                       00077200
&ZMS            SETC  ' '         *KRQDA*                               00077300
&ZMS            SETC  '&ZMS "GROUPTOKEN" KEY AND ITS ARGUMENT'          00077400
                MNOTE 8,' &ZMS ARE REQUIRED.'                           00077500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00077600
.ZG5C           ANOP  ,                                                 00077700
.*-------------------------------------------------------------------   00077800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00077900
                AIF   (K'&ZXGROUPTOKEN LE 0).ZG5R  NOT I/O              00078000
                AIF   ('&XGROUPTOKEN'(1,1) NE '(').ZG5R                 00078100
&ZCGPR          SETC  '&XGROUPTOKEN'(2,K'&XGROUPTOKEN-2)                00078200
                AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                       00078300
                AIF   (K'&ZCGPR GT 2).ZG5Q                              00078400
                AIF   ('&ZCGPR' EQ '0').ZG5Q                            00078500
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00078600
                AIF   (T'&ZCGPR NE 'N').ZG5Q    INVALID REG NAME        00078700
.ZG5P           ANOP  ,                                                 00078800
                AIF   (T'&ZCGPR NE 'N').ZG5R    NON NUMERIC             00078900
                AIF   ('&ZCGPR' LT '2').ZG5Q                            00079000
                AIF   ('&ZCGPR' LE '12').ZG5R                           00079100
.ZG5Q           ANOP  ,                                                 00079200
&ZMS            SETC  '"GROUPTOKEN='            *KGPRA* MNOTE           00079300
&ZMS            SETC  '&ZMS.&GROUPTOKEN"'                               00079400
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00079500
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00079600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00079700
.ZG5R           ANOP  ,                                                 00079800
.*----------------------------------------------------------------***   00079900
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00080000
                AIF   (N'&RTNCODE LE 1).ZG8A    CK NUM                  00080100
&ZMS            SETC  '"RTNCODE='               *KPOSA* MNOTE           00080200
&ZMS            SETC  '&ZMS.&RTNCODE"'                                  00080300
&ZMS            SETC  '&ZMS "RTNCODE"'                                  00080400
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00080500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00080600
.ZG8A           ANOP  ,                                                 00080700
.*-------------------------------------------------------------------   00080800
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00080900
                AIF   (K'&RTNCODE(1) LE 0).ZG8C  NO PARM                00081000
&ZXRTNCODE      SETC  'OUTPUT'    SET OUTPUT                            00081100
&XRTNCODE       SETC  '&RTNCODE(1)'             SET XVARIABLE           00081200
                AIF   (N'&RTNCODE GT 1).ZG8C                            00081300
&XRTNCODE       SETC  '&RTNCODE'  SET XVARIABLE                         00081400
.ZG8C           ANOP  ,                                                 00081500
.*-------------------------------------------------------------------   00081600
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00081700
                AIF   (K'&ZXRTNCODE LE 0).ZG8R  NOT I/O                 00081800
                AIF   ('&XRTNCODE'(1,1) NE '(').ZG8R                    00081900
&ZCGPR          SETC  '&XRTNCODE'(2,K'&XRTNCODE-2)                      00082000
                AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                       00082100
                AIF   (K'&ZCGPR GT 2).ZG8Q                              00082200
                AIF   ('&ZCGPR' EQ '0').ZG8Q                            00082300
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00082400
                AIF   (T'&ZCGPR NE 'N').ZG8Q    INVALID REG NAME        00082500
.ZG8P           ANOP  ,                                                 00082600
                AIF   (T'&ZCGPR NE 'N').ZG8R    NON NUMERIC             00082700
                AIF   ('&ZCGPR' LT '2').ZG8Q                            00082800
                AIF   ('&ZCGPR' LE '12').ZG8R                           00082900
.ZG8Q           ANOP  ,                                                 00083000
&ZMS            SETC  '"RTNCODE='               *KGPRA* MNOTE           00083100
&ZMS            SETC  '&ZMS.&RTNCODE"'                                  00083200
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00083300
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00083400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00083500
.ZG8R           ANOP  ,                                                 00083600
.*----------------------------------------------------------------***   00083700
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00083800
                AIF   (N'&RSNCODE LE 1).ZG11A   CK NUM                  00083900
&ZMS            SETC  '"RSNCODE='               *KPOSA* MNOTE           00084000
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00084100
&ZMS            SETC  '&ZMS "RSNCODE"'                                  00084200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00084300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00084400
.ZG11A          ANOP  ,                                                 00084500
.*-------------------------------------------------------------------   00084600
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00084700
                AIF   (K'&RSNCODE(1) LE 0).ZG11C  NO PARM               00084800
&ZXRSNCODE      SETC  'OUTPUT'    SET OUTPUT                            00084900
&XRSNCODE       SETC  '&RSNCODE(1)'             SET XVARIABLE           00085000
                AIF   (N'&RSNCODE GT 1).ZG11C                           00085100
&XRSNCODE       SETC  '&RSNCODE'  SET XVARIABLE                         00085200
.ZG11C          ANOP  ,                                                 00085300
.*-------------------------------------------------------------------   00085400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00085500
                AIF   (K'&ZXRSNCODE LE 0).ZG11R  NOT I/O                00085600
                AIF   ('&XRSNCODE'(1,1) NE '(').ZG11R                   00085700
&ZCGPR          SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                      00085800
                AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                      00085900
                AIF   (K'&ZCGPR GT 2).ZG11Q                             00086000
                AIF   ('&ZCGPR' EQ '0').ZG11Q                           00086100
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00086200
                AIF   (T'&ZCGPR NE 'N').ZG11Q   INVALID REG NAME        00086300
.ZG11P          ANOP  ,                                                 00086400
                AIF   (T'&ZCGPR NE 'N').ZG11R   NON NUMERIC             00086500
                AIF   ('&ZCGPR' LT '2').ZG11Q                           00086600
                AIF   ('&ZCGPR' LE '12').ZG11R                          00086700
.ZG11Q          ANOP  ,                                                 00086800
&ZMS            SETC  '"RSNCODE='               *KGPRA* MNOTE           00086900
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00087000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00087100
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00087200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00087300
.ZG11R          ANOP  ,                                                 00087400
.******************************************************************     00087500
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00087600
.******************************************************************     00087700
                ACTR  10000                                             00087800
.*----------------------------------------------------------------***   00087900
.***AH.P02 EXTRA POSITIONALS                                            00088000
                AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS              00088100
                AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL              00088200
                AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL          00088300
                AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL           00088400
.ZGLISTX1       ANOP  ,                                                 00088500
&ZCVAL          SETC  ''          ERROR FIELD                           00088600
&ZAWRK          SETA  0           POSITIONAL NUMBER                     00088700
.ZGLIST2        ANOP  ,                                                 00088800
&ZAWRK          SETA  &ZAWRK+1    NEXT POSITIONAL                       00088900
                AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE              00089000
&ZCVAL          SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                   00089100
                AGO   .ZGLIST2                                          00089200
.*                                                                      00089300
.ZGLIST3        ANOP  ,                                                 00089400
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)     STRIP COMMA             00089500
&ZMS            SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE          00089600
&ZMS            SETC  '&ZMS "&ZCVAL"'                                   00089700
&ZMS            SETC  '&ZMS CANNOT BE USED.'                            00089800
&ZMS            SETC  '&ZMS NO POSITIONAL ARGUMENTS'                    00089900
                MNOTE 8,' &ZMS ARE ALLOWED.'                            00090000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00090100
.ZGLISTX        ANOP  ,                                                 00090200
&ZASYSLNDX      SETA  0                                                 00090300
.*-------------------------------------------------------------------   00090400
.***AG.MF04 MF=(SLE)                                                    00090500
.ZGMFX          ANOP  ,           END OF FULL SYNTAX CHECK              00090600
.*******************************************************************    00090700
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00090800
.*******************************************************************    00090900
                AIF   (&ZMACRET NE 0).ZLX2      ERROR DETECTED          00091000
.*******************************************************************    00091100
.***AE.01  START OF IXZXIXCM MACRO CODE                                 00091200
.*******************************************************************    00091300
                LCLC  &M0M0001                 NAME                     00091400
&M0M0001        SETC  '&XLABEL'                SET NAME                 00091500
                AIF   (K'&XLABEL NE 0).XLAB2                            00091600
&M0M0001        SETC  'M00M&SYSNDX'            DEFAULT NAME             00091700
.*                                                                      00091800
.XLAB2          ANOP  ,                                                 00091900
&M0M0001 DS    0H                             IXZXIXCM-1                00092000
.*******************************************************************    00092100
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00092200
.*******************************************************************    00092300
              PUSH  PRINT                                               00092400
                AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON        00092500
                PRINT OFF         ++ PR01                               00092600
                AGO   .ZPRNTXX                                          00092700
.ZPRINTX        PRINT ON                                                00092800
.ZPRNTXX        ANOP  ,                                                 00092900
.********************************************************************   00093000
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00093100
.********************************************************************   00093200
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00093300
                      LCLA  &ZOPN1         INVOCATION INDEX             00093400
                      LCLC  &ZOPL(4095)    LABEL                        00093500
                      LCLC  &ZOPO(4095)    OPERATION                    00093600
                      LCLC  &ZOPV(4095)    VALUE                        00093700
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00093800
.*                                                                      00093900
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00094000
.******************************************************************     00094100
.***AL.L10 IXZXIXCM FMT=LIST MF=S|L PARAMETERS                          00094200
.******************************************************************     00094300
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00094400
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00094500
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00094600
&XMFATTR              SETC  '0D'                                        00094700
.*                                                                      00094800
&ZOPN                 SETA  &ZOPN+1                                     00094900
&ZOPL(&ZOPN)          SETC  ' '                                         00095000
&ZOPO(&ZOPN)          SETC  'B'                                         00095100
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00095200
&ZOPD(&ZOPN)          SETC  '++ IXZXIXCM ARG PARMS'                     00095300
.*                                                                      00095400
&ZOPN                 SETA  &ZOPN+1                                     00095500
&ZOPL(&ZOPN)          SETC  ' '                                         00095600
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00095700
&ZOPV(&ZOPN)          SETC  '1'                                         00095800
&ZOPD(&ZOPN)          SETC  ' '                                         00095900
.*                                                                      00096000
.ZLMFSL2              ANOP  ,                                           00096100
.*-------------------------------------------------------------------   00096200
.***AM.L01  IXZXIXCM FMT=LIST PARAMETERS                                00096300
&ZOPN                 SETA &ZOPN+1                                      00096400
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00096500
&ZOPO(&ZOPN)          SETC 'DS'                                         00096600
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00096700
&ZOPD(&ZOPN)          SETC '++ IXZXIXCM PARM LIST'                      00096800
.*-------------------------------------------------------------------   00096900
.***AM.L02 XVERSION XL1                                                 00097000
&ZOPN                 SETA &ZOPN+1                                      00097100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00097200
&ZOPO(&ZOPN)          SETC 'DS'                                         00097300
&ZOPV(&ZOPN)          SETC 'XL1'                                        00097400
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00097500
.*-------------------------------------------------------------------   00097600
.***AM.L09  XEYECATCH CL6                                               00097700
&ZOPN                 SETA &ZOPN+1                                      00097800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEYECATCH'                        00097900
&ZOPO(&ZOPN)          SETC 'DS'                                         00098000
&ZOPV(&ZOPN)          SETC 'CL6'                                        00098100
&ZOPD(&ZOPN)          SETC '++ CONSTANT  XEYECATCH'                     00098200
.*-------------------------------------------------------------------   00098300
.***AM.L09  XRSV0001 CL1                                                00098400
&ZOPN                 SETA &ZOPN+1                                      00098500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00098600
&ZOPO(&ZOPN)          SETC 'DS'                                         00098700
&ZOPV(&ZOPN)          SETC 'CL1'                                        00098800
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0001'                      00098900
.*-------------------------------------------------------------------   00099000
.***AM.L09  XMSGTOKEN BL.64                                             00099100
&ZOPN                 SETA &ZOPN+1                                      00099200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGTOKEN'                        00099300
&ZOPO(&ZOPN)          SETC 'DS'                                         00099400
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00099500
&ZOPD(&ZOPN)          SETC '++ &ZXMSGTOKEN  XMSGTOKEN'                  00099600
.*-------------------------------------------------------------------   00099700
.***AM.L09  XGROUPTOKEN F                                               00099800
&ZOPN                 SETA &ZOPN+1                                      00099900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XGROUPTOKEN'                      00100000
&ZOPO(&ZOPN)          SETC 'DS'                                         00100100
&ZOPV(&ZOPN)          SETC 'F'                                          00100200
&ZOPD(&ZOPN)          SETC '++ &ZXGROUPTOKEN  XGROUPTOKEN'              00100300
.*-------------------------------------------------------------------   00100400
.***AM.L10 END OF IXZXIXCM LIST PARAMETERS                              00100500
&ZOPN                 SETA &ZOPN+1                                      00100600
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00100700
&ZOPO(&ZOPN)          SETC 'EQU'                                        00100800
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00100900
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00101000
.*                                                                      00101100
&ZOPN                 SETA &ZOPN+1                                      00101200
&ZOPL(&ZOPN)          SETC ' '                                          00101300
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00101400
&ZOPV(&ZOPN)          SETC '1'                                          00101500
&ZOPD(&ZOPN)          SETC ' '                                          00101600
.*-------------------------------------------------------------------   00101700
.***AL.L12 IXZXIXCM FMT=LIST MF=S|L PARAMETERS                          00101800
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00101900
.*                                                                      00102000
&ZOPN                 SETA  &ZOPN+1                                     00102100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00102200
&ZOPO(&ZOPN)          SETC  'DC'                                        00102300
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00102400
&ZOPD(&ZOPN)          SETC  '++ IXZXIXCM ARG PARMS'                     00102500
.*                                                                      00102600
.ZLMFSLX              ANOP  ,                                           00102700
.*-------------------------------------------------------------------   00102800
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00102900
&ZPLLEN               SETA 20                                           00103000
.*                                                                      00103100
.******************************************************************     00103200
.***AI.L01 IXZXIXCM FMT=LIST FILL IN PARAMETER AREA                     00103300
.******************************************************************     00103400
                      ACTR  10000                                       00103500
&ZCVAL                SETC  'LA'            XA MODE                     00103600
.*                                                                      00103700
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00103800
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00103900
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00104000
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00104100
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00104200
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00104300
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00104400
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00104500
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00104600
&ZOPN                 SETA  &ZOPN+1                                     00104700
&ZOPL(&ZOPN)          SETC  ' '                                         00104800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00104900
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00105000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00105100
                      AGO   .ZIMFNX                                     00105200
.*                                                                      00105300
.ZIMFN2               ANOP ,                                            00105400
&ZOPN                 SETA  &ZOPN+1                                     00105500
&ZOPL(&ZOPN)          SETC  ' '                                         00105600
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00105700
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00105800
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00105900
.ZIMFNX               ANOP ,                                            00106000
.********************************************************************   00106100
.***AI.L02 IXZXIXCM FMT=LIST INITIALIZE PARAMETER AREA                  00106200
.********************************************************************   00106300
.***AI.L03 MF=(SLE)                                                     00106400
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00106500
.*                                                                      00106600
&ZOPN                 SETA  &ZOPN+1                                     00106700
&ZOPL(&ZOPN)          SETC  ' '                                         00106800
&ZOPO(&ZOPN)          SETC  'XC'                                        00106900
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00107000
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00107100
.ZIMFLX               ANOP  ,                                           00107200
.*-------------------------------------------------------------------   00107300
.***AI.L04B XVERSION XL1                                                00107400
                      AIF   (&XPLISTVER EQ 0).ZIMFVX                    00107500
&ZOPN                 SETA  &ZOPN+1                                     00107600
&ZOPL(&ZOPN)          SETC  ' '                                         00107700
&ZOPO(&ZOPN)          SETC  'MVI'                                       00107800
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00107900
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00108000
.ZIMFVX               ANOP  ,                                           00108100
.*-------------------------------------------------------------------   00108200
.***AI.L60 XEYECATCH CL6                                                00108300
&ZOPN                 SETA  &ZOPN+1                                     00108400
&ZOPL(&ZOPN)          SETC  ' '                                         00108500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00108600
&ZOPV(&ZOPN)          SETC  '1(6,1),=CL6''YIXCM '''                     00108700
&ZOPD(&ZOPN)          SETC  '++ CL6 CONSTANT'                           00108800
.*-------------------------------------------------------------------   00108900
.***AI.L25  XMSGTOKEN XL8                                               00109000
                      AIF   ('&ZXMSGTOKEN' EQ '').ZI4E  NOT USED        00109100
                      AIF   ('&ZXMSGTOKEN' EQ 'OUTPUT').ZI4E            00109200
&ZCGPR                SETC  '&XMSGTOKEN'                                00109300
.*                                                                      00109400
                      AIF   ('&XMSGTOKEN'(1,1) NE '(').ZI4B             00109500
&ZCGPR   SETC  '0('.'&XMSGTOKEN'(2,K'&XMSGTOKEN-2).')'                  00109600
                      AGO   .ZI4D                                       00109700
.ZI4B                 ANOP  ,                                           00109800
.*                                                                      00109900
&ZC                   SETC  '&XMSGTOKEN'(1,1)                           00110000
                      AIF   (T'&ZC NE 'N').ZI4D                         00110100
&ZC                   SETC  '&XMSGTOKEN'                                00110200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI4D                00110300
&ZCGPR                SETC  '=BL8''&XMSGTOKEN'''                        00110400
.*                                                                      00110500
.ZI4D                 ANOP  ,                                           00110600
.*                                                                      00110700
&ZOPN                 SETA  &ZOPN+1                                     00110800
&ZOPL(&ZOPN)          SETC  ' '                                         00110900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00111000
&ZOPV(&ZOPN)          SETC  '8(8,1),&ZCGPR'                             00111100
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGTOKEN XMSGTOKEN XL8'              00111200
.*                                                                      00111300
.ZI4E                 ANOP  ,                                           00111400
.*-------------------------------------------------------------------   00111500
.***AI.L25  XGROUPTOKEN F                                               00111600
                      AIF   ('&ZXGROUPTOKEN' EQ '').ZI5E  NOT USED      00111700
                      AIF   ('&ZXGROUPTOKEN' EQ 'OUTPUT').ZI5E          00111800
&ZCGPR                SETC  '&XGROUPTOKEN'                              00111900
.*                                                                      00112000
                      AIF   ('&XGROUPTOKEN'(1,1) NE '(').ZI5B           00112100
&ZCGPR   SETC  '0('.'&XGROUPTOKEN'(2,K'&XGROUPTOKEN-2).')'              00112200
                      AGO   .ZI5D                                       00112300
.ZI5B                 ANOP  ,                                           00112400
.*                                                                      00112500
&ZC                   SETC  '&XGROUPTOKEN'(1,1)                         00112600
                      AIF   (T'&ZC NE 'N').ZI5D                         00112700
&ZC                   SETC  '&XGROUPTOKEN'                              00112800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI5D                00112900
&ZCGPR                SETC  '=FL4''&XGROUPTOKEN'''                      00113000
.*                                                                      00113100
.ZI5D                 ANOP  ,                                           00113200
.*                                                                      00113300
&ZOPN                 SETA  &ZOPN+1                                     00113400
&ZOPL(&ZOPN)          SETC  ' '                                         00113500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00113600
&ZOPV(&ZOPN)          SETC  '16(4,1),&ZCGPR'                            00113700
&ZOPD(&ZOPN)          SETC  '++ &ZXGROUPTOKEN XGROUPTOKEN F'            00113800
.*                                                                      00113900
.ZI5E                 ANOP  ,                                           00114000
.*-------------------------------------------------------------------   00114100
&ZOPN1                SETA &ZOPN                                        00114200
.*******************************************************************    00114300
.***  PROCESS IXZXIXCM OUTPUT PARAMETERS                                00114400
.*******************************************************************    00114500
                      ACTR  10000                                       00114600
.*******************************************************************    00114700
.***AO.X01  LABEL TO BYPASS INVOCATION                                  00114800
.*******************************************************************    00114900
&ZOPN                 SETA  &ZOPN+1                                     00115000
&ZOPL(&ZOPN)          SETC  'AMGE&SYSNDX'                               00115100
&ZOPO(&ZOPN)          SETC  'DS'                                        00115200
&ZOPV(&ZOPN)          SETC  '0H'                                        00115300
&ZOPD(&ZOPN)          SETC  '++ BYPASS INVOCATION'                      00115400
.*******************************************************************    00115500
.***AO.X02  RETURN CODE PROCESSING                                      00115600
.*******************************************************************    00115700
                      AIF   (N'&RTNCODE LE 0).ZMRETX                    00115800
                      AIF   ('&XRTNCODE'(1,1) EQ '(').ZMRET2            00115900
                      AIF   ('&XRTNCODE' EQ 'GPR15').ZMRETX             00116000
                      AIF   ('&XRTNCODE' EQ 'REG15').ZMRETX             00116100
                      AIF   ('&XRTNCODE' EQ 'R15').ZMRETX               00116200
                      AIF   ('&XRTNCODE' EQ '15').ZMRETX                00116300
&ZOPN                 SETA  &ZOPN+1                                     00116400
&ZOPL(&ZOPN)          SETC  ' '                                         00116500
&ZOPO(&ZOPN)          SETC  'ST'                                        00116600
&ZOPV(&ZOPN)          SETC  '15,&XRTNCODE'                              00116700
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00116800
                      AGO   .ZMRETX                                     00116900
.*                                                                      00117000
.ZMRET2               ANOP  ,                                           00117100
&ZCGPR                SETC  '&XRTNCODE'(2,K'&XRTNCODE-2)                00117200
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00117300
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00117400
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00117500
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00117600
&ZOPN                 SETA  &ZOPN+1                                     00117700
&ZOPL(&ZOPN)          SETC  ' '                                         00117800
&ZOPO(&ZOPN)          SETC  'LR'                                        00117900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00118000
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00118100
.ZMRETX               ANOP  ,                                           00118200
.*******************************************************************    00118300
.***AO.X03  REASON CODE PROCESSING                                      00118400
.*******************************************************************    00118500
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00118600
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00118700
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00118800
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00118900
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00119000
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00119100
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00119200
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00119300
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00119400
&ZOPN                 SETA  &ZOPN+1                                     00119500
&ZOPL(&ZOPN)          SETC  ' '                                         00119600
&ZOPO(&ZOPN)          SETC  'ST'                                        00119700
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00119800
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00119900
                      AGO   .ZMRSNX                                     00120000
.*                                                                      00120100
.ZMRSN2               ANOP  ,                                           00120200
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00120300
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00120400
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00120500
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00120600
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00120700
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00120800
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00120900
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00121000
&ZOPN                 SETA  &ZOPN+1                                     00121100
&ZOPL(&ZOPN)          SETC  ' '                                         00121200
&ZOPO(&ZOPN)          SETC  'LR'                                        00121300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00121400
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00121500
.ZMRSNX               ANOP  ,                                           00121600
.*******************************************************************    00121700
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00121800
.*******************************************************************    00121900
.ZMFLX                ANOP  ,              MF=L PROCESSING              00122000
.*******************************************************************    00122100
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00122200
.*******************************************************************    00122300
                      ACTR  10000                                       00122400
.*                                                                      00122500
                      LCLA  &ZLC           COLUMN POSITION              00122600
                      LCLA  &ZOPX          LIST TABLE INDEX             00122700
                      LCLC  &ZLL           LABEL                        00122800
                      LCLC  &ZLOP          OPERATION                    00122900
                      LCLC  &ZLV           VALUE                        00123000
                      LCLC  &ZLD           DESCRIPTION                  00123100
.*                                                                      00123200
&ZOPX                 SETA  1                                           00123300
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00123400
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00123500
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00123600
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00123700
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00123800
                      AIF   (K'&ZLD LE 0).ZL5                           00123900
&ZLC                  SETA  35             COMMENT COLUMN               00124000
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00124100
&ZLC                  SETA  33             COMMMENT COLUMN              00124200
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00124300
&ZLV                  SETC  '&ZLV'.' '                                  00124400
                      AGO   .ZL3                                        00124500
.*                                                                      00124600
.ZL4                  ANOP  ,                                           00124700
&ZLV                  SETC  '&ZLV'.' '                                  00124800
.ZL5                  ANOP  ,                                           00124900
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00125000
.*                                                                      00125100
&ZLL     &ZLOP &ZLV                                                     00125200
.*                                                                      00125300
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00125400
                      AGO   .ZL2           CONTINUE LOOPING             00125500
.*                                                                      00125600
.ZLX                  ANOP  ,                                           00125700
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00125800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00125900
         GBLC  &ANVIRON           JES2 environment variable             00126000
         GBLB  &J3MN              JES3 Main Task environment            00126100
         GBLB  &J3ST              JES3 Subtask environment              00126200
         GBLB  &J3FSS             JES3 FSS environment                  00126300
         GBLB  &JSXCF             JESXCF environment                    00126400
         AIF   ('&ANVIRON' EQ 'JES2').IXCM050  Are we running under     00126500
.*                                JES2 Main task                        00126600
         AIF   ('&ANVIRON' EQ 'SUBTASK').IXCM050 Are we running under   00126700
.*                                JES2 Subtask                          00126800
         AIF   (&J3MN).IXCM050    Are we running under JES3 Main task   00126900
         AIF   (&J3ST).IXCM050    Are we running under JES3 Sub task    00127000
         AIF   (&J3FSS).IXCM050   Are we running under JES3 FSS         00127100
         MNOTE 8,'IXZ0001 Running in an invalid environment'            00127200
.IXCM050 ANOP                                                           00127300
         AIF   ('&GROUPTOKEN'(1,1) NE '(').IXCM100                      00127400
         LR    14,&GROUPTOKEN     Load the address of the group token   00127500
         L     14,0(14)           Load the group token                  00127600
         AGO   .IXCM150                                                 00127700
.IXCM100 ANOP                                                           00127800
         L     14,&GROUPTOKEN     Load the group token                  00127900
.IXCM150 ANOP                                                           00128000
         L     14,96(14)          Load the PC number of the             00128100
*                                 routine to be called                  00128200
         PC    0(14)              Call the acknowledge message          00128300
*                                 routine                               00128400
         AIF   ('&XMFCTRL'(1,1) NE '(').IXCM200                         00128500
         LR    1,&XMFCTRL         Restore the parameter list address    00128600
         AGO   .IXCM250                                                 00128700
.IXCM200 ANOP                                                           00128800
         LA    1,&XMFCTRL         Restore the parameter list address    00128900
.IXCM250 ANOP                                                           00129000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00129100
.ZLINKX               ANOP  ,                                           00129200
.*******************************************************************    00129300
.***AP.X01  FORMAT GENERATED CODE                                       00129400
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00129500
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00129600
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00129700
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00129800
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00129900
                      AIF   (K'&ZLD LE 0).ZL51                          00130000
&ZLC                  SETA  35             COMMENT COLUMN               00130100
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00130200
&ZLC                  SETA  33             COMMENT COLUMN               00130300
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00130400
&ZLV                  SETC  '&ZLV'.' '                                  00130500
                      AGO   .ZL31                                       00130600
.*                                                                      00130700
.ZL41                 ANOP  ,                                           00130800
&ZLV                  SETC  '&ZLV'.' '                                  00130900
.ZL51                 ANOP  ,                                           00131000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00131100
.*                                                                      00131200
&ZLL     &ZLOP &ZLV                                                     00131300
.*                                                                      00131400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00131500
                      AGO   .ZL21          CONTINUE LOOPING             00131600
.*                                                                      00131700
.ZLX1                 ANOP  ,                                           00131800
.*******************************************************************    00131900
.***AP.X02  END OF IXZXIXCM MACRO                                       00132000
&ZIXZXIXCM            SETC  'YES'          SET IXZXIXCM USED            00132100
         POP   PRINT                                                    00132200
*                                            IXZXIXCM-1                 00132300
         SPACE 1                                                        00132400
.ZLX2                 ANOP  ,                                           00132500
         MEND                                                           00132600
**********************************************************************/ 00132700
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00132800
*%IXZXIXCM: MACRO KEYS(MSGTOKEN,GROUPTOKEN,RTNCODE,RSNCODE,PLISTVER,    00132900
*                 MF);                                                  00133000
*  ANS('?'||MACLABEL||' '||'IXZPIXCM '||MACLIST||                       00133100
*         ' '||MACKEYS||';') COL(MACLMAR);                              00133200
*%END IXZXIXCM;                                                         00133300
