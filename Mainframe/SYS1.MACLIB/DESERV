*/* BILINGUAL DESERV MACRO                                              00000300
         MACRO                                                          00000400
&LABNAM DESERV &MF=S,           S|L|E   DEFAULTS TO S                  X00000500
               &FUNC=,          GET|GET_ALL|GET_NAMES|RELEASE|EXIT ETC X00000600
               &BYPASS_LLA=,    YES|NO                                 X00000700
               &HIDE=,          YES|NO                                 X00000800
               &EXIT_SCOPE=,    TCB | GLOBAL                           X00000900
               &CONCAT=,        concat_number|ALL                      X00001000
               &EXIT_OPTION=,   NOREPLACE|REPLACE|DELETE|QUERY         X00001100
               &OPTION=,                                               X00001200
               &SUBPOOL=,       subpool_id                             X00001300
               &CONN_INTENT=,   NONE|HOLD                              X00001400
               &DCB=,           dcb                                    X00001500
               &CONN_ID=,       connection_identifier                  X00001600
               &AREAPTR=,       buffer_area_address                    X00001700
               &AREA=,          (buffer_area,buffer_length)            X00001800
               &DE_LIST=,       (input_list,input_list_entry_count)    X00001900
               &ENTRY_GAP=,     gap_size                               X00002000
               &MEM_DATA=,                                             X00002100
               &NAME_LIST=,     (input_list,input_list_entry_count)    X00002200
               &NAME=,          name                                   X00002300
               &PDSDE=,         BLDL_directory_entry                   X00002400
               &EXIT_DST=,      deserv screen table                    X00002500
               &EXIT_PREV_DSTPTR=, previous deserv screen table ptr    X00002600
               &RETCODE=,       return_code                            X00002700
               &RSNCODE=        reason_code                             00002800
.*********************************************************************  00002900
.*                                                                   *  00003000
.* $MAC(DESERV) COMP(28473):                                         *  00003100
.*                                                                   *  00003200
.*  MACRO NAME: DESERV                                               *  00003300
.*                                                                   *  00003400
.*  DESCRIPTION: Invokes DESERV (Directory Entry Service) Functions  *  00003500
.*                                                                   *  00003600
.*  STATUS: DFSMS/MVS VERSION 1 RELEASE 4.0                          *  00003700
.*                                                                   *  00003800
.*PROPRIETARY V3 STATEMENT                                           *  00003900
.*LICENSED MATERIALS - PROPERTY OF IBM                               *  00004000
.*"RESTRICTED MATERIALS OF IBM"                                      *  00004200
.*5695-DF1                                                           *  00004500
.*(C) COPYRIGHT 1991,1996  IBM CORP.                                 *  00004800
.*END PROPRIETARY V3 STATEMENT                                       *  00005100
.*                                                                   *  00005700
.*                                                                   *  00006000
.*  NOTE: Please refer to the internal PLX DESERVP macro for the     *  00006300
.*        complete list of allowed internal DESERVP parameters.      *  00006600
.*        This is the external DESERV assemble macro.                *  00006900
.*                                                                   *  00007200
.*                                                                   *  00007500
.*  FUNCTION: The purpose of this macro is to invoke the DESERV      *  00007800
.*    services.                                                      *  00007900
.*                                                                   *  00008000
.*    These services function against datasets (both PDS and PDSE)   *  00008100
.*    open for partitioned access (DSORG=PO) or physical sequential  *  00008200
.*    access (DSORG=PS). A logical connection can be made to         *  00008300
.*    PDSE members if that connection is requested or implied via    *  00008400
.*    the GET or GET_ALL functions.                                  *  00008500
.*                                                                   *  00008600
.*    The following services are provided by DESERV                  *  00008700
.*    functions:                                                     *  00008800
.*                                                                   *  00008900
.*                                                                   *  00009000
.*     GET:                                                          *  00009100
.*                                                                   *  00009200
.*      - Retrieve an SMDE for each member name in a list.           *  00009300
.*        library must have been opened.  The name_list may          *  00009400
.*        contain aliases. Connections  are  established for the     *  00009500
.*        PDSE members.                                              *  00009600
.*                                                                   *  00009700
.*      - Retrieve a SMDE for a member defined by the TTR and        *  00009800
.*        concat number from a BLDL directory entry. The library     *  00009900
.*        must have been opened.  A connection is established        *  00010000
.*        for the PDSDE members. If the concatenation represents a   *  00010100
.*        PDSDE the directory is searched. If a PDS is represented,  *  00010200
.*        the input BLDL directory is converted to a SMDE without    *  00010300
.*        a directory search.                                        *  00010400
.*                                                                   *  00010500
.*     GET_ALL:                                                      *  00010600
.*                                                                   *  00010700
.*      - Retrieve an SMDE for each member of a PDSE. The library    *  00010800
.*        must have been opened. A connections can be established    *  00010900
.*        for PDSE members.                                          *  00011000
.*                                                                   *  00011100
.*     RELEASE:                                                      *  00011200
.*                                                                   *  00011300
.*      - Remove a connection established by the GET or GET_ALL      *  00011400
.*        functions.                                                 *  00011500
.*                                                                   *  00011600
.*      - Remove all connections established by a specific call      *  00011700
.*        (identified by the connect id) to the GET or GET_ALL       *  00011800
.*        functions.                                                 *  00011900
.*                                                                   *  00012000
.*     GET_NAMES:                                                    *  00012100
.*                                                                   *  00012200
.*      - Obtain for a specified name the associated primary and     *  00012300
.*        alias names and the directory data for all names. The      *  00012400
.*        library must have been opened. Directory data is returned  *  00012500
.*        in the PMAR (for primary) and in the PMARA (for alias).    *  00012600
.*        Does not support PDS.                                      *  00012700
.*                                                                   *  00012800
.*     EXIT:                                                         *  00012900
.*                                                                   *  00013000
.*      - Enable DESERV exit processing.                             *  00013100
.*        The DESERV exit may be established for any TCB following   *  00013200
.*        the initialization of LPA. Once established for a Task,    *  00013300
.*        the DESERV exit will be given control whenever DE Services *  00013400
.*        issueds a BLDL during that TCB. There are two possible     *  00013500
.*        exit points, one prior to execution of the DESERV function *  00013600
.*        (EXIT_PRE) and one immediately prior to the return from    *  00013700
.*        the DESERV function (EXIT_POST).                           *  00013800
.*                                                                   *  00013900
.*        Note:  If a DESERV FUNC=GET call is made for which there   *  00014000
.*        are no PDSEs in the concatenation, the DESERV code will    *  00014100
.*        set DESX_BLDL_BIT on before invoking the exit.             *  00014200
.*                                                                   *  00014300
.*                                                                   *  00014400
.*      DELETE:                                                  @02A*  00014500
.*                                                               @02A*  00014600
.*       - Delete a list of names from a PDSE. The library must  @02A*  00014700
.*         have been opened for output or update. Does not effect@02A*  00014800
.*         connections. Does not support PDS.                    @02A*  00014900
.*                                                               @02A*  00015000
.*      RENAME:                                                  @02A*  00015100
.*                                                               @02A*  00015200
.*       - Rename a list of names from a PDSE. The library must  @02A*  00015300
.*         have been opened for output or update. Does not effect@02A*  00015400
.*         connections. Does not support PDS.                    @02A*  00015500
.*                                                               @02A*  00015600
.*                                                               @02A*  00015700
.*      UPDATE:                                                  @02A*  00015800
.*                                                               @02A*  00015900
.*       - Update selected fields in directory entries for a     @02A*  00016000
.*         list of pdse member names. The library must have been @02A*  00016100
.*         opened for output or update. Does not effect          @02A*  00016200
.*         connections. Does not support PDS.                    @02A*  00016300
.*                                                                   *  00016400
.*                                                                   *  00016500
.*    For the specification of the functions see the LINKAGE         *  00016600
.*    section below.                                                 *  00016700
.*                                                                   *  00016800
.*  PROCESSING:                                                      *  00016900
.*                                                                   *  00017000
.*    LOGIC:                                                         *  00017100
.*                                                                   *  00017200
.*      -   Produces a comment block of all parameters               *  00017300
.*      -   Insure no positional parameters were specified           *  00017400
.*      -   Validate the MF keyword                                  *  00017500
.*      -   Validate the FUNC keyword. At the same time the          *  00017600
.*          processing tables will be generated to control           *  00017700
.*          keyword validation.                                      *  00017800
.*      -   Error msg for registers used on MF=L format              *  00017900
.*      -   Error msg for incorrect number of parameters per keyword *  00018000
.*      -   Check for mutually exclusive parameters                  *  00018100
.*      -   Check for valid values from list of allowed values       *  00018200
.*      -   Generate code to initialize the parm list header         *  00018300
.*      -   Generate code for parameters specified                   *  00018400
.*      -   If MF(S) or MF(E) was specified :                        *  00018600
.*            generate code to PC to DESERV                          *  00018900
.*            gen RETCODE and RSNCODE code                           *  00019200
.*                                                                   *  00019500
.*    ERROR PROCESSING:                                              *  00019800
.*                                                                   *  00020100
.*      The macro ensures that :                                     *  00020400
.*                                                                   *  00020700
.*      -   no positional parameters are specified                   *  00021000
.*      -   all keywords are given the proper number of arguments    *  00021300
.*      -   all yes/no flags (keywords) are properly specified       *  00021600
.*      -   invalid keywords for a function are not specified        *  00021900
.*      -   all required keywords are specified unless               *  00022200
.*          MF=L macro format or MF=E format with NOCHECK specified  *  00022500
.*      -   exactly one of a set of mutually exclusive keywords      *  00022800
.*          is specified                                             *  00023100
.*      -   keywords which take a specific list of arguments are     *  00023400
.*          given one of those arguments                             *  00023700
.*      -   all keyword interdependencies are met                    *  00024000
.*                                                                   *  00024300
.*      If any of the above checks fail, then the macro issues       *  00024600
.*      appropriate messages and processing continues, if possible   *  00024900
.*      so that all syntax errors will be found in one compile.      *  00025200
.*                                                                   *  00025500
.*                                                                   *  00025800
.*  NOTES:                                                           *  00026100
.*                                                                   *  00026400
.*    DEPENDENCIES:                                                  *  00026700
.*      -   includes the IGWDES macro if not already invoked         *  00027000
.*          The listing of the IGWDES macro can be suppressed by  @03a  00027100
.*          codeing:                                              @03a  00027200
.*                 GBLC  &SYSIGWDESLIST                           @03a  00027300
.*          &SYSIGWDESLIST SETC 'OFF'                             @03a  00027400
.*                                                                   *  00027500
.*    RESTRICTIONS:                                                  *  00027600
.*      -   all addresses passed via registers are assumed to be     *  00027900
.*          be valid 31-bit addresses                                *  00028200
.*                                                                   *  00028500
.*  MACRO:                                                           *  00028800
.*                                                                   *  00029100
.*    PROCESSOR: Assembler H, High Level Assembler                   *  00029400
.*    DISTRIBUTION LIBRARY: AMACLIB                                  *  00029700
.*                                                                   *  00030000
.*  ENTRY POINT: DESERV                                              *  00030300
.*                                                                   *  00030600
.*                                                                   *  00030900
.*    LINKAGE:                                                       *  00031200
.*                                                                   *  00031500
.* <Label>  DESERV MF=L                                              *  00031800
.* <Label>  DESERV MF=S                                              *  00032100
.* <Label>  DESERV MF=(E,{(1-12)|label},{COMPLETE|NOCHECK})          *  00032400
.*                                                                   *  00032700
.*---------------------------------------------------------------    *  00032800
.*                                                                   *  00032900
.*    PURPOSE:                                                       *  00033000
.*        Obtain selected directory entries.                         *  00033100
.*                                                                   *  00033200
.*    LINKAGE:                                                       *  00033300
.*                                                                   *  00033400
.* <label> DESERV FUNC=GET                                           *  00033500
.*                {,AREA=(buffer_area,buffer_length) |           @L1C*  00033600
.*                 ,AREAPTR=buffer_area_address                  @L1A*  00033700
.*                  <,SUBPOOL=subpool_id> }                      @L1A*  00033800
.*                <,BYPASS_LLA={YES|NO}>                             *  00033900
.*                <,CONN_ID=connection_identifier>                   *  00034000
.*                ,CONN_INTENT=HOLD                                  *  00034100
.*                ,DCB=dcb                                           *  00034200
.*                <,ENTRY_GAP={gap_size|0}>                          *  00034300
.*                <,MF={S|                                           *  00034400
.*                      L|                                           *  00034500
.*                      {(E,{(1-12)|label},{COMPLETE|NOCHECK})}}>    *  00034600
.*                {,NAME_LIST=(input_list,input_list_entry_count)|   *  00034700
.*                 ,PDSDE=BLDL_directory_entry}                      *  00034800
.*                <,RETCODE=retcode>                                 *  00034900
.*                <,RSNCODE=rsncode>                                 *  00035000
.*                                                                   *  00035100
.*---------------------------------------------------------------    *  00035200
.*                                                                   *  00035300
.*    PURPOSE:                                                       *  00035400
.*        Obtain all directory entries.                              *  00035500
.*                                                                   *  00035600
.*    LINKAGE:                                                       *  00035700
.*                                                                   *  00035800
.* <label> DESERV FUNC=GET_ALL                                       *  00035900
.*                ,AREAPTR=buffer_area_address                       *  00036000
.*                <,CONCAT=concat_number|ALL>                    @L1C*  00036100
.*                <,CONN_ID=connection_identifier>                   *  00036200
.*                ,CONN_INTENT={NONE|HOLD}                           *  00036300
.*                ,DCB=dcb                                           *  00036400
.*                <,ENTRY_GAP={gap_size|0}>                          *  00036500
.*                <,HIDE={YES|NO}>                               @03A*  00036600
.*                <,MF={S|                                           *  00036700
.*                      L|                                           *  00036800
.*                      {(E,{(1-12)|label},{COMPLETE|NOCHECK})}}>    *  00036900
.*                <,SUBPOOL=subpool_id>                              *  00037000
.*                <,RETCODE=retcode>                                 *  00037100
.*                <,RSNCODE=rsncode>                                 *  00037200
.*                                                                   *  00037300
.*---------------------------------------------------------------    *  00037400
.*                                                                   *  00037500
.*    PURPOSE:                                                       *  00037600
.*        Obtain all associated names.                               *  00037700
.*                                                                   *  00037800
.*    LINKAGE:                                                       *  00037900
.*                                                                   *  00038000
.* <label> DESERV FUNC=GET_NAMES                                     *  00038100
.*                ,AREAPTR=buffer_area_address                       *  00038200
.*                <,CONCAT=concat_number>                            *  00038300
.*                ,DCB=dcb                                           *  00038400
.*                ,<MF={S|                                           *  00038500
.*                      L|                                           *  00038600
.*                      {(E,{(1-12)|label},{COMPLETE|NOCHECK})}}>    *  00038700
.*                ,NAME=name                                         *  00038800
.*                <,SUBPOOL=subpool_id>                              *  00038900
.*                <,RETCODE=retcode>                                 *  00039000
.*                <,RSNCODE=rsncode>                                 *  00039100
.*                                                                   *  00039200
.*---------------------------------------------------------------    *  00039300
.*                                                                   *  00039400
.*    PURPOSE:                                                       *  00039500
.*        Release connected members.                                 *  00039600
.*                                                                   *  00039700
.*    LINKAGE:                                                       *  00039800
.*                                                                   *  00039900
.* <label> DESERV FUNC=RELEASE                                       *  00040000
.*                {,CONN_ID=connection_identifier|                   *  00040100
.*                ,DE_LIST=(input_list,input_list_entry_count)}      *  00040200
.*                ,DCB=dcb                                           *  00040300
.*                <,MF={S|                                           *  00040400
.*                      L|                                           *  00040500
.*                      {(E,{(1-12)|label},{COMPLETE|NOCHECK})}}>    *  00040600
.*                <,RETCODE=retcode>                                 *  00040700
.*                <,RSNCODE=rsncode>                                 *  00040800
.*                                                                   *  00040900
.*                                                                   *  00041000
.*---------------------------------------------------------------@02A*  00041100
.*                                                               @02A*  00041200
.*    PURPOSE:                                                   @02A*  00041300
.*        Delete                                                 @02A*  00041400
.*                                                               @02A*  00041500
.*    LINKAGE:                                                   @02A*  00041600
.*                                                               @02A*  00041700
.* <label> DESERV FUNC=DELETE                                    @02A*  00041800
.*                ,DCB=dcb                                       @02A*  00041900
.*                <,MF={S|                                       @02A*  00042000
.*                      L|                                       @02A*  00042100
.*                      {(E,{(1-12)|label},{COMPLETE|NOCHECK})}}>@02A*  00042200
.*                ,NAME_LIST=(input_list,input_list_entry_count) @02A*  00042300
.*                <,RETCODE=retcode>                             @02A*  00042400
.*                <,RSNCODE=rsncode>                             @02A*  00042500
.*                                                               @02A*  00042600
.*                                                               @02A*  00042700
.*---------------------------------------------------------------@02A*  00042800
.*                                                               @02A*  00042900
.*    PURPOSE:                                                   @02A*  00043000
.*        Rename                                                 @02A*  00043100
.*                                                               @02A*  00043200
.*    LINKAGE:                                                   @02A*  00043300
.*                                                               @02A*  00043400
.* <label> DESERV FUNC=RENAME                                    @02A*  00043500
.*                ,DCB=dcb                                       @02A*  00043600
.*                <,MF={S|                                       @02A*  00043700
.*                      L|                                       @02A*  00043800
.*                      {(E,{(1-12)|label},{COMPLETE|NOCHECK})}}>@02A*  00043900
.*                ,NAME_LIST=(input_list,input_list_entry_count) @02A*  00044000
.*                <,RETCODE=retcode>                             @02A*  00044100
.*                <,RSNCODE=rsncode>                             @02A*  00044200
.*                                                               @02A*  00044300
.*                                                               @02A*  00044400
.*---------------------------------------------------------------@02A*  00044500
.*                                                               @02A*  00044600
.*    PURPOSE:                                                   @02A*  00044700
.*        Update                                                 @02A*  00044800
.*                                                               @02A*  00044900
.*    LINKAGE:                                                   @02A*  00045000
.*                                                               @02A*  00045100
.* <label> DESERV FUNC=UPDATE                                    @02A*  00045200
.*                ,DCB=dcb                                       @02A*  00045300
.*                <,MF={S|                                       @02A*  00045400
.*                      L|                                       @02A*  00045500
.*                      {(E,{(1-12)|label},{COMPLETE|NOCHECK})}}>@02A*  00045600
.*                ,NAME_LIST=(input_list,input_list_entry_count) @02A*  00045700
.*                <,RETCODE=retcode>                             @02A*  00045800
.*                <,RSNCODE=rsncode>                             @02A*  00045900
.*                                                               @02A*  00046000
.*                                                               @02A*  00046100
.*------------------------------------------------------------------ *  00046200
.*                                                                   *  00046300
.*    PURPOSE:                                                       *  00046400
.*        Establish DESERV exit(s).                                  *  00046500
.*                                                                   *  00046600
.*    LINKAGE:                                                       *  00046700
.*                                                                   *  00046800
.* <label> DESERV FUNC=EXIT                                          *  00046900
.*                <,EXIT_DST=deserv_exit_screen_table>               *  00047000
.*                ,EXIT_PREV_DSTPTR=addr_of_deserv_exit_screen_table *  00047100
.*                <,EXIT_SCOPE={TASK|GLOBAL}>                        *  00047200
.*                <,EXIT_OPTION={NOREPLACE|REPLACE|DELETE|QUERY}>    *  00047300
.*                <,MF={S|                                           *  00047400
.*                      L|                                           *  00047500
.*                      {(E,{(1-12)|label},{COMPLETE|NOCHECK})}}>    *  00047600
.*                <,RETCODE=retcode>                                 *  00047700
.*                <,RSNCODE=rsncode>                                 *  00047800
.*                                                                   *  00047900
.*                                                                   *  00048000
.*------------------------------------------------------------------ *  00048100
.*                                                                   *  00048200
.* DESERV KEYWORD  TABLE :                                           *  00048300
.*                                                                   *  00048400
.* #      -   number of arguments allowed for each keyword.          *  00048500
.*            When more than one argument is specified for a keyword,*  00048600
.*            the arguments must be separated by comma(s) and        *  00048700
.*            enclosed within a set of parentheses.                  *  00048800
.*                                                                   *  00048900
.* TYPE   -   type of keyword arguments allowed                      *  00049000
.*      'KEY' - must be a valid character string, see                *  00049100
.*              Keyword Description section for strings.             *  00049200
.*      'RX'  - can be a register or RX type of address              *  00049300
.*                                                                   *  00049400
.*      'SYM' - can be a register or a symbol                        *  00049500
.*                                                                   *  00049600
.*    'RX/SYM'- keywords having 2 arguments. First keyword argument  *  00049700
.*              is of type RX, second is of type SYM.                *  00049800
.*                                                                   *  00049900
.*      '*'   - MF keyword, 1-3 arguments allowed. MF=L and MF=S     *  00050000
.*              have 1 argument only, MF=E has 2 or 3 arguments.     *  00050100
.*              First argument is KEY, second is RX (can be          *  00050200
.*              register) and third is optional KEY type.            *  00050300
.*                                                                   *  00050400
.*  Note : For further descriptions of how keyword argument's may be *  00050500
.*         defined, see the individual keyword descriptions below.   *  00050600
.*         Keyword arguments will be assumed to be a valid TYPE, if  *  00050700
.*         they are not an assembly error will occur.                *  00050800
.*                                                                   *  00050900
.* For GET, GET_ALL, GET_NAMES, RELEASE,                             *  00051000
.*     EXIT, DELETE, RENAME and UPDATE function columns :            *  00051100
.*                                                                   *  00051200
.*      'R' - keyword is required                                    *  00051300
.*      'O' - keyword is optional                                    *  00051400
.*      ' ' - keyword is invalid                                     *  00051500
.*      'Mn'- mutually exclusive keyword pairs ('M1' OR 'M2') one of *  00051600
.*            the pair must be specified, both can not be specified. *  00051700
.*      'In'- mutually inclusive keyword pairs ('I1') IF one of the  *  00051800
.*            the pair is specified, both must be specified.         *  00051900
.*cc                                                                 *  00052000
.*                                                                   *  00052100
.* DESERV  FUNCTION TABLE PAGE 1 OF 2                                *  00052200
.* ----------------------------------------------------------------  *  00052300
.*                         |     F  U  N  C  T  I  O  N  S        |  *  00052400
.* KEYWORDS:      #: TYPE: |  GET   | GET_ALL| GET_NAMES| RELEASE |  *  00052500
.* ----------------------------------------------------------------  *  00052600
.* AREA           2  RX/SYM|    M3  |        |          |         |  *  00052700
.* ----------------------------------------------------------------  *  00052800
.* AREAPTR        1    RX  |    M3  |   R    |     R    |         |  *  00052900
.* ----------------------------------------------------------------  *  00053000
.* BYPASS_LLA     1    KEY |    O   |        |          |         |  *  00053100
.* ----------------------------------------------------------------  *  00053200
.* CONCAT         1    SYM |        |   O    |     O    |         |  *  00053300
.* ----------------------------------------------------------------  *  00053400
.* CONN_ID        1    RX  |    O   |   O    |          |    M2   |  *  00053500
.* ----------------------------------------------------------------  *  00053600
.* CONN_INTENT    1    KEY |    R   |   O    |          |         |  *  00053700
.* ----------------------------------------------------------------  *  00053800
.* DCB            1    RX  |    R   |   R    |     R    |    R    |  *  00053900
.* ----------------------------------------------------------------  *  00054000
.* DE_LIST        2  RX/SYM|        |        |          |    M2   |  *  00054100
.* ----------------------------------------------------------------  *  00054200
.* ENTRY_GAP      1    SYM |    O   |   O    |          |         |  *  00054300
.* ----------------------------------------------------------------  *  00054400
.* FUNC           1    KEY |    R   |   R    |     R    |    R    |  *  00054500
.* ----------------------------------------------------------------  *  00054600
.* HIDE           1    KEY |        |   O    |          |         |@03A 00054700
.* ----------------------------------------------------------------  *  00054800
.* MF            1-3   *   |    O   |   O    |     O    |    O    |  *  00054900
.* ----------------------------------------------------------------  *  00055000
.* NAME           1    RX  |        |        |     R    |         |  *  00055100
.* ----------------------------------------------------------------  *  00055200
.* NAME_LIST      2  RX/SYM|   M1   |        |          |         |  *  00055300
.* ----------------------------------------------------------------  *  00055400
.* PDSDE          1    RX  |   M1   |        |          |         |  *  00055500
.* ----------------------------------------------------------------  *  00055600
.* RETCODE        1    RX  |    O   |   O    |     O    |    O    |  *  00055700
.* ----------------------------------------------------------------  *  00055800
.* RSNCODE        1    RX  |    O   |   O    |     O    |    O    |  *  00055900
.* ----------------------------------------------------------------  *  00056000
.* SUBPOOL        1    SYM |    O   |   O    |     O    |         |  *  00056100
.* ----------------------------------------------------------------  *  00056200
.*cc                                                                 *  00056300
.*                                                                   *  00056400
.* DESERV  FUNCTION TABLE  PAGE 2 OF 2                           @02A*  00056500
.* ------------------------------------------------------------  @02A*  00056600
.*                         |       F U N C T I O N S          |  @02A*  00056700
.* KEYWORDS:      #: TYPE: | EXIT  | DELETE | RENAME | UPDATE |  @02A*  00056800
.* ------------------------------------------------------------  @02A*  00056900
.* DCB            1    RX  |       |   R    |   R    |   R    |  @02A*  00057000
.* ------------------------------------------------------------  @02A*  00057100
.* EXIT_DST       1    RX  |   O   |        |        |        |  @02A*  00057200
.* ------------------------------------------------------------  @02A*  00057300
.* EXIT_OPTION    1    KEY |   O   |        |        |        |  @02A*  00057400
.* ------------------------------------------------------------  @02A*  00057500
.* EXIT_PREV_DSTPTR 1  RX  |   R   |        |        |        |  @02A*  00057600
.* ------------------------------------------------------------  @02A*  00057700
.* EXIT_SCOPE     1    KEY |   O   |        |        |        |  @02A*  00057800
.* ------------------------------------------------------------  @02A*  00057900
.* FUNC           1    KEY |   R   |   R    |   R    |   R    |  @02A*  00058000
.* ------------------------------------------------------------  @02A*  00058100
.* MF            1-3   *   |   O   |   O    |   O    |   O    |  @02A*  00058200
.* ------------------------------------------------------------  @02A*  00058300
.* NAME_LIST      2  RX/SYM|       |   R    |   R    |   R    |  @02A*  00058400
.* ------------------------------------------------------------  @02A*  00058500
.* RETCODE        1    RX  |   O   |   O    |   O    |   O    |  @02A*  00058600
.* ------------------------------------------------------------  @02A*  00058700
.* RSNCODE        1    RX  |   O   |   O    |   O    |   O    |  @02A*  00058800
.* ------------------------------------------------------------  @02A*  00058900
.*                                                                   *  00059000
.*cc                                                                 *  00059100
.* KEYWORD DESCRIPTIONS                                              *  00059200
.*                                                                   *  00059300
.*   Notes:                                                          *  00059400
.*       - registers specified for keyword arguments (RX or SYM)     *  00059500
.*         must be enclosed in parentheses. Valid registers are      *  00059600
.*         (2-12).                                                   *  00059700
.*             ie. AREA=((R2),(R3)),DCB=(R4)                         *  00059800
.*       - no defaults occur for omitted keywords unless noted below.*  00059900
.*       - see MF keyword description below for further information  *  00060000
.*         as to what argument types are valid for each macro format.*  00060100
.*                                                                   *  00060200
.*    AREA=(buffer_area,buffer_length)                               *  00060300
.*        buffer_area   - RX-type Address or (2-12)                  *  00060400
.*        buffer_length - Symbol or (2-12)                           *  00060500
.*                                                                   *  00060600
.*        This output parameter specifies an area provided by        *  00060700
.*        the caller into which the  GET  function  will store       *  00060800
.*        directory entries.                                         *  00060900
.*        buffer_area is the storage area for use by DE Services.    *  00061000
.*        Variable  buffer_area_size is the  length in  bytes of     *  00061100
.*        the  area  specified  in   the  buffer_area parameter.     *  00061200
.*                                                                   *  00061300
.*        The area  is mapped by  the DESB mapping in  the IGWDES    *  00061400
.*        mapping macro on return  from the service.  The storage    *  00061500
.*        must be addressable in the key of the caller.              *  00061600
.*                                                                   *  00061700
.*        Buffer_length formula :                                    *  00061800
.*         =length(DESB DSECT)+(input_list_entry_count*(SMDE_MAXLEN  *  00061900
.*         + gap_size))                                              *  00062000
.*                                                                   *  00062100
.*        Where :                                                    *  00062200
.*         length of DESB is obtained from the IGWDES macro          *  00062300
.*         SMDE_MAXLEN is obtained from the IGWSMDE macro            *  00062400
.*         input_list_count is a DESERV NAME_LIST parameter          *  00062500
.*         gap_size is the DESERV ENTRY_GAP parameter.               *  00062600
.*                                                                   *  00062700
.*        Note:   There is no way in advance to determine the        *  00062800
.*        exact  buffer_length required to  contain the  directory   *  00062900
.*        entries  on a  single request.  If the  area is  filled    *  00063000
.*        before the  processing has  ended, then the  request is    *  00063100
.*        terminated at that point. Entries in the buffers are valid *  00063200
.*        and connections may or may not have been established.      *  00063300
.*                                                                   *  00063400
.*    AREAPTR=buffer_area_address                                    *  00063500
.*        RX-Type Address or (2-12)                                  *  00063600
.*                                                                   *  00063700
.*        Output parameter, specifies an address where the           *  00063800
.*        GET, GET_ALL, and GET_NAMES  functions  will store         *  00063900
.*        the address of the first buffer of directory entries.      *  00064000
.*        Variable  buffer_area_address must be a fullword pointer.  *  00064100
.*                                                                   *  00064200
.*        This pointer will point to a chain of buffers mapped by    *  00064300
.*        the DESB mapping in the  IGWDES mapping macro on return    *  00064400
.*        from  the service. If no subpool parameter is supplied,    *  00064500
.*        the  storage acquired  will be  in subpool 0 in the key    *  00064600
.*        of the caller.  If  the caller is in  supervisor state     *  00064700
.*        with key  0 then  subpool 252  is obtained. The actual     *  00064800
.*        subpool acquired is placed in the buffer header returned.  *  00064900
.*                                                                   *  00065000
.*        It is the callers responsibility to release this storage.  *  00065100
.*                                                                   *  00065200
.*    BYPASS_LLA=YES|NO                                              *  00065300
.*        Default=NO                                                 *  00065400
.*                                                                   *  00065500
.*        Indicates  whether  the  GET function should  bypass       *  00065600
.*        LLA's  cached  directory entries  and  go  only to  the    *  00065700
.*        current library directory or use LLA's cached directory    *  00065800
.*        entries if they are available.                             *  00065900
.*                                                                   *  00066000
.*        BYPASS_LLA=YES  indicates  that the LLA cache  will not    *  00066100
.*        be  examined.  BYPASS_LLA=NO,   the default,  indicates    *  00066200
.*        that the  LLA cache will be  examined before attempting    *  00066300
.*        to obtain information directly from the data set.          *  00066400
.*                                                                   *  00066500
.*        This is  an optional  parameter for the GET function.      *  00066600
.*        Currently,  the  GET_ALL  function will  not  obtain       *  00066700
.*        member list from LLA.  Therefore, the directory entries    *  00066800
.*        will  come  directly  from   the  data  set  as  though    *  00066900
.*        BYPASS_LLA=YES were specified.                             *  00067000
.*        Note:   Better response  time is provided  if directory    *  00067100
.*        entries are obtained from LLA.                             *  00067200
.*                                                                   *  00067300
.*    CONCAT=concat_number|ALL                                       *  00067400
.*        Symbol or (2-12)                                           *  00067500
.*        Default=0                                                  *  00067600
.*                                                                   *  00067700
.*        Specifies for the GET_ALL and GET_NAMES functions the      *  00067800
.*        specific library in a concatenation of libraries that      *  00067900
.*        will have its names returned by the service.               *  00068000
.*        Variable concat_number is a numeric value in the range     *  00068100
.*        of 0 to 255.                                               *  00068200
.*                                                                   *  00068300
.*        If ALL is specified, the SMDEs for all the data sets  @L1A *  00068400
.*        in the concatenation will be returned.                @L1A *  00068500
.*                                                                   *  00068600
.*        This is an optional parameter. Will default the first      *  00068700
.*        library (0) in a concatenation of libraries if CONCAT is   *  00068800
.*        not specified.                                             *  00068900
.*                                                                   *  00069000
.*    CONN_ID=connection_identifier                                  *  00069100
.*        RX-Type Address or (2-12)                                  *  00069200
.*        Mutually exclusive with : DE_LIST for RELEASE function     *  00069300
.*                                                                   *  00069400
.*        Specifies the location of the  4-byte value used by the    *  00069500
.*        GET, GET_ALL, and  RELEASE functions.  Variable            *  00069600
.*        connection_identifier   is   a   token   that   relates    *  00069700
.*        connections to a particular invocation of a service. It    *  00069800
.*        may indicate a number  of connections or no connections    *  00069900
.*        at all. Represents all connections established under a     *  00070000
.*        single GET or GET_ALL invocation.                          *  00070100
.*                                                                   *  00070200
.*        This is an  input   parameter for the RELEASE function.    *  00070300
.*        This is an  output  parameter for the GET  and GET_ALL     *  00070400
.*        functions.                                                 *  00070500
.*                                                                   *  00070600
.*        When used for the RELEASE function, this keyword  is       *  00070700
.*        mutually exclusive from the DE_LIST keyword. For the       *  00070800
.*        RELEASE function, one of the keywords is required but      *  00070900
.*        both may not be specified.                                 *  00071000
.*                                                                   *  00071100
.*    CONN_INTENT={NONE|HOLD}                                        *  00071200
.*        Default=NONE for GET_ALL function only, no default for GET *  00071300
.*                                                                   *  00071400
.*        Specifies the  intent of the  connection to be  used by    *  00071500
.*        the GET and GET_ALL functions when a connection is         *  00071600
.*        requested.                                                 *  00071700
.*                                                                   *  00071800
.*        CONN_INTENT  Result                                        *  00071900
.*         NONE    -   No connection, not valid for the GET function *  00072000
.*         HOLD    -   Minimal connection to preserve access         *  00072100
.*                     to the member                            2@02D*  00072200
.*                                                                   *  00072300
.*    DCB=dcb                                                        *  00072400
.*        RX-Type Address or (2-12)                                  *  00072500
.*                                                                   *  00072600
.*        Specifies the DCB that identifies the libraries to be      *  00072700
.*        used for the particular service. Variable dcb is an        *  00072800
.*        open Data Control Block. The DCB keyword is required       *  00072900
.*        for all functions except EXIT.                             *  00073000
.*                                                                   *  00073100
.*        Note : A DCB Address of 0 is NOT supported.                *  00073200
.*                                                                   *  00073300
.*    DE_LIST=(input_list,input_list_entry_count)                    *  00073400
.*        input_list    -         RX-Type Address or (2-12)          *  00073500
.*        input_list_entry_count - Symbol or (2-12)                  *  00073600
.*        Mutually exclusive with : CONN_ID for RELEASE function     *  00073700
.*                                                                   *  00073800
.*        Specifies  a list  of directory  entries that  identify    *  00073900
.*        connections to  members that the RELEASE  function is      *  00074000
.*        to release.  The storage must be addressable in the key    *  00074100
.*        of the caller.  Variable input_list specifies a list of    *  00074200
.*        entries.  Variable  input_list_entry_count will contain    *  00074300
.*        the number of entries in the list.                         *  00074400
.*                                                                   *  00074500
.*        The directory entry list structure is mapped by DESL in    *  00074600
.*        the IGWDES mapping macro. The DESL structure is also       *  00074700
.*        used for NAME_LIST, refer to NAME_LIST keyword             *  00074800
.*        description for further details.                           *  00074900
.*                                                                   *  00075000
.*        Mutually exclusive from the CONN_ID keyword. For the       *  00075100
.*        RELEASE function, one of the keywords is required but      *  00075200
.*        both may not be specified.                                 *  00075300
.*                                                                   *  00075400
.*    EXIT_DST=deserv_exit_screen_table                              *  00075500
.*        RX-Type Address or (2-12)                                  *  00075600
.*        Only valid for FUNC=EXIT                                   *  00075700
.*                                                                   *  00075800
.*        Address of the Deserv Screen Table. The screen table       *  00075900
.*        is mapped by DST DSECT of the IGWDES mapping macro.        *  00076000
.*        For an EXIT_OPTION of either NOREPLACE or REPLACE, this    *  00076100
.*        parameter defines the DST will define the currently active *  00076200
.*        exit address. For an EXIT_OPTION of DELETE, this parameter *  00076300
.*        defines the DST which will be used as a compare value in   *  00076400
.*        a compare and swap operation when deleting the current     *  00076500
.*        DST (actually the address of the input DST will be used    *  00076600
.*        as the compare value). If the compare fails, DESERV will   *  00076700
.*        return an error return and reason code.                    *  00076800
.*        If EXIT_OPTION=QUERY is coded, this parameter is not       *  00076900
.*        required.                                                  *  00077000
.*                                                                   *  00077100
.*    EXIT_PREV_DSTPTR=addr_of_deserv_exit_screen_table              *  00077200
.*        RX-Type Address or (2-12)                                  *  00077300
.*        Only valid for FUNC=EXIT                                   *  00077400
.*                                                                   *  00077500
.*        The EXIT_PREV_DSTPTR is an output parameter when an        *  00077600
.*        EXIT_OPTION of NOREPLACE, REPLACE or QUERY is specified,   *  00077700
.*        and an input parameter if an EXIT_OPTION of DELETE is      *  00077800
.*        specified.                                                 *  00077900
.*                                                                   *  00078000
.*        For EXIT_OPTION=NOREPLACE or QUERY this parameter          *  00078100
.*        specifies a four byte field into which DESERV will         *  00078200
.*        return the address of the current DST (or zero if no DST   *  00078300
.*        exists).                                                   *  00078400
.*                                                                   *  00078500
.*        For EXIT_OPTION=REPLACE this parameter                     *  00078600
.*        specifies a four byte field into which DESERV will         *  00078700
.*        return the address of the DST which was successfully       *  00078800
.*        replaced (or zero if no previous DST existed).             *  00078900
.*                                                                   *  00079000
.*                                                                   *  00079100
.*        For EXIT_OPTION=DELETE this parameter                      *  00079200
.*        specifies a four byte field which points to the DST        *  00079300
.*        which DESERV will restore as the current DST. This address *  00079400
.*        will be the swap value for the compare and swap operation. *  00079500
.*                                                                   *  00079600
.*    EXIT_OPTION={REPLACE|NOREPLACE|DELETE|QUERY}                   *  00079700
.*        Keyword, default is NOREPLACE                              *  00079800
.*        Only valid for FUNC=EXIT                                   *  00079900
.*                                                                   *  00080000
.*        If EXIT_OPTION=REPLACE or NOREPLACE is coded, this         *  00080100
.*        specifies whether this invocation of the DESERV FUNC=EXIT  *  00080200
.*        should replace an existing DESERV EXIT (TASK or GLOBAL     *  00080300
.*        as specified by the EXIT_SCOPE parameter). EXIT_PREV_DST   *  00080400
.*        will return the existing exit or be set to zero            *  00080500
.*        if one does not exist.                                     *  00080600
.*                                                                   *  00080700
.*        If EXIT_OPTION=DELETE is coded, this indicates             *  00080800
.*        that the current exit is to be                             *  00080900
.*        deleted (EXIT_OPTION=DELETE). In this case the EXIT_DST    *  00081000
.*        parameter specifies the address of the DST which is to     *  00081100
.*        be deleted. This address will be used as the compare value *  00081200
.*        in a compare and swap operation, The DST address specified *  00081300
.*        via the EXIT_PREV_DSTPTR parameter will be used as the     *  00081400
.*        swap value.                                                *  00081500
.*                                                                   *  00081600
.*        If EXIT_OPTION=QUERY is coded, this indicates              *  00081700
.*        that the current exit DST address is to be returned        *  00081800
.*        via the EXIT_PREV_DSTPTR parameter.                        *  00081900
.*                                                                   *  00082000
.*    EXIT_SCOPE={GLOBAL|TASK}                                       *  00082100
.*        Keyword, default is TASK                                   *  00082200
.*        Only valid for FUNC=EXIT                                   *  00082300
.*                                                                   *  00082400
.*        Specifies whether the exit specified will be of a          *  00082500
.*        TASK level or of a GLOBAL level.                           *  00082600
.*                                                                   *  00082700
.*    ENTRY_GAP=gap_size|0                                           *  00082800
.*        Symbol or (2-12)                                           *  00082900
.*        Default=0                                                  *  00083000
.*                                                                   *  00083100
.*        Specifies  space  to  be  reserved by  the  GET  and       *  00083200
.*        GET_ALL functions within each buffer entry for use by      *  00083300
.*        the caller.  Variable gap_size  is a numeric value from    *  00083400
.*        1 to 2048.                                                 *  00083500
.*                                                                   *  00083600
.*        The length  specified is placed  in the header  area of    *  00083700
.*        the output  buffer area  provided by the  caller.  This    *  00083800
.*        reserved space  exists just following the  length field    *  00083900
.*        of  the buffer  entry  (offset +2), the space is set to    *  00084000
.*        '00'x. The space is  immediately followed by the           *  00084100
.*        directory entry.                                           *  00084200
.*                                                                   *  00084300
.*    FUNC=GET|GET_ALL|GET_NAMES|RELEASE|                        @02C*  00084400
.*         EXIT|DELETE|RENAME|UPDATE                             @02A*  00084500
.*                                                                   *  00084600
.*        Specifies the function name for the particular service.    *  00084700
.*        This keyword is always required except when MF=(E is       *  00084800
.*        coded with "NOCHECK" and no other keywords are coded or    *  00084900
.*        MF=L is coded with no other keywords. For the MF=E case,   *  00085000
.*        the FUNC keyword and other keywords specified on the       *  00085100
.*        MF=L DESERV macro invocation are assumed have been         *  00085200
.*        coded completely.                                          *  00085300
.*                                                                @03a  00085400
.*    HIDE={YES|NO}                                               @03a  00085500
.*        HIDE is used for the GET_ALL function to indicate       @03a  00085600
.*        whether hidden names are to be visible in the name      @03a  00085700
.*        search. Hidden names are names generated by the Program @03a  00085800
.*        management Binder when you specify ALIASES(ALL) on a    @03a  00085900
.*        bind.                                                   @03a  00086000
.*                                                                @03a  00086100
.*        HIDE(YES) - DESERV searches for and returns only exposed@03a  00086200
.*        names (names which were specified during program        @03a  00086300
.*        management binding).                                    @03a  00086400
.*                                                                @03a  00086500
.*        HIDE(NO)  - DESERV searches for and returns all name    @03a  00086600
.*        types.   HIDE(NO) is the default.                       @03a  00086700
.*                                                                @03a  00086800
.*                                                                   *  00086900
.*    MF= {S|                                                        *  00087000
.*         L|                                                        *  00087100
.*         {(E,{(1-12)|label},{COMPLETE|NOCHECK})}}                  *  00087200
.*                                                                   *  00087300
.*        RX-Type Address or (1-12) - for MF=E second argument       *  00087400
.*        Default=S - if the MF keyword is not specified             *  00087500
.*        Default=COMPLETE - if MF=E is specified without the third  *  00087600
.*                        argument (COMPLETE or NOCHECK).            *  00087700
.*                                                                   *  00087900
.*        Specifies how the macro should generate its code.          *  00088200
.*        Invalid keyword checking, based on function specified,     *  00088500
.*        is done for all macro formats.                             *  00088800
.*                                                                   *  00089100
.*        The  Standard  form, S, will check all required keywords   *  00089400
.*        keywords and  invalid keywords.  This  form generates      *  00089700
.*        a complete  inline  expansion  of the parameter list       *  00090000
.*        Control is then  transferred to the DE Service routine.    *  00090300
.*        The standard form  is for programs that are not            *  00090600
.*        reenterable, or for programs that do not change values     *  00090900
.*        in the parameter list.                                     *  00091200
.*                                                                   *  00091500
.*        L  specifies the  List form  of the  macro.  This  form    *  00091800
.*        generates a remote parameter list.  Only keywords of       *  00092100
.*        argument type KEY or SYM (see DESERV  FUNCTION TABLE       *  00092400
.*        above) may be coded. Registers are invalid since           *  00092700
.*        code generation does not occur, adcons are generated.      *  00093000
.*        Invalid keyword checking is done.                          *  00093300
.*                                                                   *  00093600
.*        Keywords with defaults that are set by MF=L invocation     *  00093900
.*        are not reset to their default during MF=E invocation      *  00094200
.*        unless specified.                                          *  00094500
.*                                                                   *  00094800
.*        E specifies the  Execute form of the  macro.  This form    *  00095100
.*        updates the remote parameter list (MF=L) and transfers     *  00095400
.*        control to the DE Service routine.                         *  00095700
.*                                                                   *  00096000
.*        The second parameter for MF=E format is the address of     *  00096300
.*        the plist created by the MF=L DESERV invocation. This      *  00096600
.*        parameter must be specified as either a RX type of address *  00096900
.*        (possibly the label  from MF=L macro invocation) or a      *  00097200
.*        register enclosed in parentheses.                          *  00097500
.*                                                                   *  00097800
.*        The third parameter, COMPLETE or NOCHECK, is optional.     *  00098100
.*        Default  is  COMPLETE.  This argument specifies  whether   *  00098400
.*        required keyword checking will be done. If MF=E is coded   *  00098700
.*        with the NOCHECK argument then no, some or all allowed     *  00099000
.*        keywords  may be  specified, assumption will be that any   *  00099300
.*        missing keywords were coded on the MF=L macro invocation.  *  00099600
.*        If MF=E is coded with the COMPLETE argument or allowed     *  00099900
.*        to default, the plist will be zeroed out (except for the   *  00100200
.*        plist header) which will  set  all  defaults since the     *  00100500
.*        defaults for the  DESERV  macro are  0.  All  required     *  00100800
.*        keywords must be specified.                                *  00101100
.*                                                                   *  00101400
.*                                                                   *  00101500
.*    NAME=name                                                      *  00101600
.*        RX-Type Address or (2-12)                                  *  00101700
.*                                                                   *  00101800
.*        Specifies the member name on the GET_NAMES function.       *  00101900
.*        Variable name is a halfword name length field followed by  *  00102000
.*        the name. The entire field must not exceed 66 characters   *  00102100
.*        (64 characters in the name itself). The structure  is      *  00102200
.*        mapped by the DESN mapping in the IGWDES mapping macro.    *  00102300
.*                                                                   *  00102400
.*    NAME_LIST=(input_list,input_list_entry_count)                  *  00102500
.*        input_list             - RX-Type Addresses or (2-12)       *  00102600
.*        input_list_entry_count - Symbol or (2-12)                  *  00102700
.*        Mutually exclusive with : PDSDE for GET function           *  00102800
.*                                                                   *  00102900
.*        Specifies a list of  member names that identify members@02A*  00103000
.*        for  which the GET, DELETE, RENAME or UPDATE functions @02A*  00103100
.*        will operate on.                                       @02A*  00103200
.*                                                                   *  00103300
.*        Variable input_list specifies a contigous area of          *  00103400
.*        NAME_LIST structures. NAME_LIST is mapped by the DESL      *  00103500
.*        DSECT in the IGWDES mapping macro. DESL_NAME_PTR must      *  00103600
.*        contain the pointer to a structure mapped by the           *  00103700
.*        DESN DSECT. Halfword DESN_VAL must contain the length      *  00103800
.*        of the name specified by DESN_VAL. DESN_VAL may be         *  00103900
.*        between 1 and 8 characters in length. The storage must     *  00104000
.*        be addressable in the key of the caller.                   *  00104100
.*                                                                   *  00104200
.*        Variable  input_list_entry_count will contain the number   *  00104300
.*        of entries in the NAME_LIST.                               *  00104400
.*                                                                   *  00104500
.*        DESL_SMDE_PTR will contain the pointer to each found       *  00104600
.*        member's SMDE on DESERV macro completion. For RENAME   @02A*  00104700
.*        function, DESL_OLD_NAME_PTR is used instead of         @02A*  00104800
.*        DESL_SMDE_PTR.                                         @02A*  00104900
.*                                                                   *  00105000
.*        For FUNC=GET :                                             *  00105100
.*        This keyword is mutually exclusive from the PDSDE keyword. *  00105200
.*        One of the keywords is required but both may not be        *  00105300
.*        specified.                                                 *  00105400
.*                                                                   *  00105500
.*        NAME_LIST is required for DELETE, RELEASE and UPDATE       *  00105600
.*        functions.                                                 *  00105700
.*                                                                   *  00105800
.*    PDSDE=BLDL_directory_entry                                     *  00105900
.*        RX-Type Address or (2-12)                                  *  00106000
.*        Mutually exclusive with : NAME_LIST for GET function       *  00106100
.*                                                                   *  00106200
.*        Specifies a BLDL format directory entry to  be used by     *  00106300
.*        the GET function in building the SMDE.                     *  00106400
.*        BLDL_directory_entry  is   a  BLDL directory entry         *  00106500
.*        for  the member  corresponding to the concatenation        *  00106600
.*        and member locator token (MLT, better known as the         *  00106700
.*        TTR of the member).                                        *  00106800
.*                                                                   *  00106900
.*        Retrieve a SMDE for a member defined by the TTR and        *  00107000
.*        concat number from a BLDL directory entry. The library     *  00107100
.*        must have been opened. Connections can be established for  *  00107200
.*        PDSDE members. If the concatenation represents a PDSE      *  00107300
.*        the directory is searched. If a PDS is represented, the    *  00107400
.*        input BLDL directory is converted to a SMDE without a      *  00107500
.*        directory search.                                          *  00107600
.*                                                                   *  00107700
.*                                                                   *  00107800
.*        This keyword is mutually exclusive from the NAME_LIST      *  00107900
.*        keyword. One of the keywords is required but both may not  *  00108000
.*        be specified.                                              *  00108100
.*                                                                   *  00108200
.*    SUBPOOL=subpool_id                                             *  00108300
.*        Symbol or (2-12)                                           *  00108400
.*                                                                   *  00108500
.*        Specifies  the subpool  identifier to  be used  by         *  00108600
.*        DESERV when acquiring storage for the buffer. Variable     *  00108700
.*        subpool_id is a byte value that is optionally specified    *  00108800
.*        on the GET, GET_ALL, and GET_NAMES functions.              *  00109000
.*                                                                   *  00109300
.*    RETCODE=retcode                                                *  00109400
.*        RX-Type Address or (2-12)                                  *  00109500
.*        Default=Reg15                                              *  00109600
.*                                                                   *  00109700
.*        specifies the address where the return code returned       *  00109800
.*        by DESERV will be stored.                                  *  00109900
.*        Can not be specified on MF=L macro format.                 *  00110000
.*                                                                   *  00110100
.*    RSNCODE=rsncode                                                *  00110200
.*        RX-Type Address or (2-12)                                  *  00110300
.*        Default=Reg0                                               *  00110400
.*                                                                   *  00110500
.*        Specifies the address where the reason code returned       *  00110600
.*        by DESERV will be stored.                                  *  00110700
.*        Can not be specified on MF=L macro format.                 *  00110800
.*                                                                   *  00110900
.*-------------------------------------------------------------------*  00111000
.*                                                                   *  00111100
.*  EXIT NORMAL:                                                     *  00111200
.*                                                                   *  00111300
.*    RETURN CODE: 0                                                 *  00111400
.*                                                                   *  00111500
.*  EXIT WARNING:                                                    *  00111600
.*                                                                   *  00111700
.*    RETURN CODE: 4  Non-failing condition, indicates that a Label  *  00111800
.*                    was not coded on the MF=L macro invocation.    *  00111900
.*                                                                   *  00112000
.*  EXIT ERRORS:                                                     *  00112100
.*                                                                   *  00112200
.*    RETURN CODE: 8                                                 *  00112300
.*                                                                   *  00112400
.*      REASON CODE: NONE                                            *  00112500
.*                                                                   *  00112600
.*                                                                   *  00112700
.*    MACROS:                                                        *  00112800
.*      IGWDES                                                       *  00112900
.*                                                                   *  00113000
.*  CHANGE ACTIVITY:                                                 *  00113100
.*                                                                   *  00113200
.* $01=OW02507,JDZ1110,940510,SJPLGIN: EXTERNALIZE, CONVERT TO       *  00113300
.*                                BILINGUAL, ADD EXIT FUNCTION   @01A*  00113400
.* $02=PM2,HDZ11C0,940510,SJPLGIN: ADD DELETE, RENAME & UPDATE       *  00113500
.*                     FUNCTIONS, EXTERNALIZE OTHER FUNCTIONS    @02A*  00113600
.* $L1=PM3,HDZ11D0,951012,SJPLREB: C370LIB PARAMETER (PLX ONLY)  @L1A*  00113700
.*                     CONCAT(ALL), SUBPOOL/AREAPTR FOR FUNC=GET,@L1A*  00113800
.*                     HIDE, SYSTEMDCB AND SMDE PARMS.           @L1A*  00113900
.* $03=OW40474,HDZ11E0,990901,SJPLREB: SUPPORT HIDE ON ASM MACRO @03A*  00114100
.* $04=OW41275,HDZ11E0,991026,SJPLREB: correct ow40474           @04A*  00114200
.* $05=OW47159,HDZ11f0,001121,SJPLREB: MEMBER_COUNTS plx only    @05A*  00114240
.* $06=OW49802,HDZ11f0,010606,SJPLREB: set desp_concat_flg       @06A*  00114260
.*********************************************************************  00114300
.*cc                                                                    00114600
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00122100
.* INVOKE IGWDES DSECT - IGWDES WILL PREVENT MULTIPLE DSECT INVOCATIONS 00122400
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00122700
         GBLC  &DESCSECT               IF SET TO YES, IGWDES WILL       00123000
.*                                     ECHO THE PREVIOUS CSECT NAME     00123300
&DESCSECT SETC 'YES'                                                    00123600
         IGWDES                                                         00123900
&DESCSECT SETC ''                                                       00124200
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00124500
.* SETUP VARIABLES USED THROUGHOUT MACRO                                00124800
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00125100
         LCLA  &I                  LOOP INDEX                           00125400
         LCLC  &FAIL               EXIT MACRO IF FAIL FLAG SET          00125700
         LCLC  &MF1                FIRST MF PARAMETER                   00126000
         LCLC  &INVOC              INVOC=YES IF MF=S OR MF=E            00126300
         LCLC  &COMPLET              COMPLETE/NOCHECK KEYWORD FLAG      00126600
&FAIL    SETC  'NO'                INIT FAIL FLAG AS NO                 00126900
&INVOC   SETC  'YES'               INVOKE DESERV                        00127200
&COMPLET SETC  'YES'                 DEFAULT, REQUIRE PARMS CHECKED     00127500
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00127800
.* VARIABLES USED FOR KEYWORD MF CHECKING                               00128100
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00128400
         LCLA  &MFARGS             NUMBER OF MF ARGUMENTS SPECIFIED     00128700
         LCLC  &MF2E               MF=E 2ND PARAM MF=(E,X               00129000
         LCLC  &MF2E1              MF=E SECOND PAREN, MF=(E,(           00129300
&MF1     SETC  '&MF(1)'            GET MF IF SPECIFIED                  00129600
&MFARGS  SETA  N'&MF               NUMBER OF MF PARAMETERS              00129900
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00130200
.* CHECK FOR POSITIONAL ARGUMENTS                                       00130500
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00130800
         AIF   (N'&SYSLIST EQ 0).NOPOS ANY NON-KEYWORD ARGUMENTS ?      00131100
&FAIL    SETC  'YES'                   REMEMBER UNSUCCESSFUL            00131400
         MNOTE 8,'NO POSITIONAL ARGUMENTS ARE ALLOWED ON THIS MACRO.'   00131700
.* CHECK MF KEYWORD, DEFAULTS TO MF=S                                   00132000
.NOPOS   AIF   ('&MF1' EQ 'S').MFS,    GO CHECK MF=S, DEFAULT=S TOO    X00132300
               ('&MF1' EQ 'L').MFL,    GO CHECK MF=L CODING            X00132600
               ('&MF1' EQ 'E').MFE     GO CHECK MF=E CODING             00132900
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00133200
.* MF=?   INVALID MF VALUE SPECIFIED                                    00133500
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00133800
&FAIL    SETC  'YES'                   REMEMBER UNSUCCESSFUL            00134100
         MNOTE 8,'KEYWORD "MF" MUST BE "S", "L", "E", OR OMITTED.  VALUX00134400
               E "&MF1" IS INVALID. THIS VALUE WILL BE IGNORED FOR SYNTX00134700
               AX CHECKING.'                                            00135000
&MF1     SETC  'S'                     USE MF=S TO DO SYNTAX CHECKING   00135300
         AGO   .ENDMF                  DONE MF KEYWORD CHECKING         00135600
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00135900
.* MF=S   WAS SPECIFIED OR ALLOWED TO DEFAULT                           00136200
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00136500
.MFS     ANOP                                                           00136800
         AIF   (&MFARGS EQ 1).MFSOK                                     00137100
&FAIL    SETC  'YES'                   REMEMBER UNSUCCESSFUL            00137400
         MNOTE 8,'KEYWORD "MF=S" MUST HAVE EXACTLY 1 ARGUMENT WHEN SPECX00137700
               IFIED. "&MFARGS" ARGUMENTS WERE SPECIFIED.'              00138000
.MFSOK   AGO   .ENDMF                  DONE MF KEYWORD CHECKING         00138300
.*                                                                      00138600
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00138900
.* MF=L  WAS SPECIFIED                                                  00139200
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00139500
.MFL     ANOP                                                           00139800
&COMPLET SETC  'NO'                    PARAMETER CHECKING NOT REQUIRED  00140100
&INVOC   SETC  'NO'                 MF=L SO DON'T INVOC                 00140400
         AIF   (&MFARGS EQ 1).ENDMF                                     00140700
&FAIL    SETC  'YES'                   REMEMBER UNSUCCESSFUL            00141000
         MNOTE 8,'KEYWORD "MF=L" MUST HAVE EXACTLY 1 ARGUMENT,  "&MFARGX00141300
               S" ARGUMENT(S) WERE SPECIFIED.'                          00141600
         AGO   .ENDMF                  DONE MF KEYWORD CHECKING         00141900
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00142200
.* MF=(E,...  WAS SPECIFIED                                             00142500
.* CHECK FOR VALID PARAMETERS                                           00142800
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00143100
.MFE     AIF   ((&MFARGS LE 3) AND (&MFARGS GE 2)).CHKCOM               00143400
&FAIL    SETC  'YES'                   REMEMBER UNSUCCESSFUL            00143700
         MNOTE 8,'KEYWORD "MF=E" MUST HAVE 2 OR 3 ARGUMENTS, "&MFARGS" X00144000
               ARGUMENT(S) WERE SPECIFIED.'                             00144300
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00144600
.* THIRD MF=(E,... PARAMETER MAY BE :                                   00144900
.* "COMPLETE"      - CHECK ALL REQUIRED PARAMETERS SPECIFIED            00145200
.* "NOCHECK"       - SKIP REQUIRED PARAM CHECKING,                      00145500
.*                   MF=L MAY HAVE SPECIFIED REQUIRED PARAMETERS        00145800
.*  NOT SPECIFIED  - DEFAULTS TO "COMPLETE"                             00146100
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00146400
.CHKCOM  AIF   (('&MF(3)' EQ '') OR ('&MF(3)' EQ 'COMPLETE')).COMOK     00146700
         AIF   ('&MF(3)' EQ 'NOCHECK').SETCHK                           00147000
&FAIL    SETC  'YES'                   REMEMBER UNSUCCESSFUL            00147300
         MNOTE 8,'INVALID VALUE "&MF(3)" SPECIFIED FOR THE THIRD ARGUMEX00147600
                NT OF KEYWORD KEYWORD "MF=(E,..". VALID VALUES ARE "COMX00147900
                PLETE", "NOCHECK" OR DEFAULT TO "COMPLETE". NO FURTHER X00148200
                KEYWORD CHECKING IS DONE.'                              00148500
         AGO   .ENDMAC                                                  00148800
.SETCHK  ANOP                      NOCHECK SPECIFIED                    00149100
&COMPLET SETC  'NO'                DON'T DO REQUIRED PARM CHECKING      00149400
.COMOK   ANOP                      COMPLETE SPECIFIED OR DEFAULTED TO   00149700
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00150000
.* SECOND MF=(E,... PARAMETER MAY BE EITHER                             00150300
.* "(1-12) PLIST ADDRESS REGISTER                                       00150600
.* "label"    VARIABLE CONTAINING ADDRESS OF PLIST OR LABEL FROM MF=L   00150900
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00151200
&MF2E    SETC  '&MF(2)'                                                 00151500
         AIF   ('&MF2E' NE '').MF2EOK                                   00151800
&FAIL    SETC  'YES'                   REMEMBER UNSUCCESSFUL            00152100
         MNOTE 8,'THE SECOND ARGUMENT OF KEYWORD "MF=(E,..." WAS NOT SPX00152400
                ECIFIED, IT IS REQUIRED.'                               00152700
         AGO   .ENDMF                                                   00153000
.MF2EOK  ANOP                                                           00153300
&MF2E1   SETC  '&MF(2)'(1,1)      GET FIRST CHARACTER FOR PAREN CHECK   00153600
.* CHECK 2ND MF=E ARGUMENT - {(1)|(reg)|label}                          00153900
         AIF   ('&MF2E' NE '(1)').MFE2CHK                               00154200
&LABNAM  DC    0H'0'                                                    00154500
         AGO   .ENDMFE             REG1 ALREADY SETUP                   00154800
.*       IS = (reg)  ?                                                  00155100
.MFE2CHK AIF   ('&MF2E1' NE '(').GENLA                                  00155400
.*       REMOVE PARENS WHEN DO LR                                       00155700
&LABNAM  LR    1,&MF(2,1)                                               00156000
         AGO   .ENDMFE             MF CHECKING DONE                     00156300
.*       ELSE IS VARIABLE/LABEL                                         00156600
.GENLA   ANOP                                                           00156900
&LABNAM  LA    1,&MF2E                                                  00157200
.ENDMFE  AIF   ('&COMPLET' NE 'YES').ENDMF                              00157500
.*  ZERO PLIST EXCEPT FOR DESP_HEADER                                   00157800
.*                                                                      00158100
         XC    DESP_FUNC-DESP(DESP_LEN_LIST,1),DESP_FUNC-DESP(1)        00158400
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00158700
.ENDMF   ANOP                      MF CHECKING DONE                     00159000
.*                                                                      00159300
.*cc                                                                    00159600
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00159900
.* CREATE STATIC VARIABLES FOR USE AS ARRAY INDICES,                    00160200
.* ONE FOR EVERY ALLOWED PARAMETER                                      00160500
.* ORDER MUST BE THE ORDER IN WHICH PARAMETERS EXIST IN THE DESERV      00160800
.* MAPPING MACRO (IGWDES). ALL ARRAYS AND CHARACTER STRINGS USED        00161100
.* WILL USE THIS SAME ORDER.                                            00161400
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00161700
.*                                                                      00162000
&IBYPASS SETA   1                                                       00162300
.* RESERVED     2              RESERVED BYTE OF BYPASS FLAG       @04a  00162500
&IHIDE    SETA  3                                                 @03C  00162700
&IEXSCOPE SETA  4                                                       00162900
&ICONCAT  SETA  5                                                       00163100
&ILIBTYPE SETA  6              NON-KEYWORD PLIST VALUE                  00163300
&IGETTYPE SETA  7              NON-KEYWORD PLIST VALUE                  00163500
&IRELTYPE SETA  8              NON-KEYWORD PLIST VALUE                  00163700
&IEXOPT   SETA  9                                                       00163900
&IOPTION  SETA 10                                                       00164100
&ISUBPOO SETA  11                                                       00164300
&ICONNIN SETA  12                                                       00164500
.* RESERVED    13                                                       00164700
&IDCB    SETA  14                                                       00164900
.* RESERVED    15              RESERVED                                 00165100
&ICONNID SETA  16                                                       00165300
&IAREAPT SETA  17                                                       00165500
&IAREA   SETA  18                                                       00165700
&IAREA2  SETA  19                                                       00165900
&IDELIST SETA  20                                                       00166100
&IDELIS2 SETA  21                                                       00166300
&IENTRYG SETA  22                                                       00166500
&IMEMDA1 SETA  23                                                       00166700
&IMEMDA2 SETA  24                                                       00166900
&INAMELI SETA  25                                                       00167100
&INAMEL2 SETA  26                                                       00167300
&INAME   SETA  27                                                       00167500
&IPDSDE  SETA  28                                                       00167700
&IEXDST  SETA  29                                                       00167900
&IEXPDST SETA  30                                                       00168100
&IMAX    SETA  30              DO NOT INCLUDE RET/RSNCODE               00168300
.*                                                                      00171300
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00171600
.*  SET &PARMNAM ARRAY ELEMENTS TO EQUAL KEYWORD NAME                   00171900
.*  TO BE USED MAINLY IN MNOTE ERROR MESSAGES FOR MSG CLARITY           00172200
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00172500
.*                                                                      00172800
         LCLC  &PARMNAM(30)                                             00173100
.*                                                                      00173400
.*                                                                      00173700
&PARMNAM(&IBYPASS)  SETC '"BYPASS_LLA"'                                 00174000
&PARMNAM(&IHIDE)    SETC '"HIDE"'                                 @03A  00174100
&PARMNAM(&IEXSCOPE) SETC '"EXIT_SCOPE"'                                 00174300
&PARMNAM(&ICONCAT)  SETC '"CONCAT"'                                     00174600
&PARMNAM(&IEXOPT)   SETC '"EXIT_OPTION"'                                00174900
&PARMNAM(&IOPTION)  SETC '"OPTION"'                                     00175200
&PARMNAM(&ISUBPOO)  SETC '"SUBPOOL"'                                    00175500
&PARMNAM(&ICONNIN)  SETC '"CONN_INTENT"'                                00175800
&PARMNAM(&IDCB)     SETC '"DCB"'                                        00176100
&PARMNAM(&ICONNID)  SETC '"CONN_ID"'                                    00176400
&PARMNAM(&IAREAPT)  SETC '"AREAPTR"'                                    00176700
&PARMNAM(&IAREA)    SETC '"AREA"'                                       00177000
&PARMNAM(&IAREA2)   SETC 'SECOND "AREA" KEYWORD ARGUMENT'               00177300
&PARMNAM(&IDELIST)  SETC '"DE_LIST"'                                    00177600
&PARMNAM(&IDELIS2)  SETC 'SECOND "DE_LIST" KEYWORD ARGUMENT'            00177900
&PARMNAM(&IENTRYG)  SETC '"ENTRY_GAP"'                                  00178200
&PARMNAM(&IMEMDA1)  SETC '"MEM_DATA"'                                   00178300
&PARMNAM(&IMEMDA2)  SETC 'SECOND "MEM_DATA" KEYWORD ARGUMENT'           00178400
&PARMNAM(&INAMELI)  SETC '"NAME_LIST"'                                  00178500
&PARMNAM(&INAMEL2)  SETC 'SECOND "NAME_LIST" KEYWORD ARGUMENT'          00178800
&PARMNAM(&INAME)    SETC '"NAME"'                                       00179100
&PARMNAM(&IPDSDE)   SETC '"PDSDE"'                                      00179400
&PARMNAM(&IEXDST)   SETC '"EXIT_DST"'                                   00179700
&PARMNAM(&IEXPDST)  SETC '"EXIT_PREV_DSTPTR"'                           00180000
.*                                                                      00180300
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00180600
.*  SET &ARGVAL ARRAY ELEMENTS TO VALUE OF EACH ARGUMENT IF SPECIFIED   00180900
.*  IF THE ARGUMENT WAS SPECIFIED IN PARENS, THESE WILL BE RETAINED     00181200
.*  IN THE &ARGVAL ELEMENT. PARENS DENOTE REGISTERS.                    00181500
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00181800
.*                                                                      00182100
         LCLC  &ARGVAL(30)                                              00182400
.*                                                                      00182700
&ARGVAL(&IBYPASS) SETC '&BYPASS_LLA'                                    00183000
&ARGVAL(&IHIDE)   SETC '&HIDE'                                    @03A  00183100
&ARGVAL(&IEXSCOPE) SETC '&EXIT_SCOPE'                                   00183300
&ARGVAL(&ICONCAT) SETC '&CONCAT'                                        00183600
&ARGVAL(&IEXOPT)  SETC '&EXIT_OPTION'                                   00183900
&ARGVAL(&IOPTION) SETC '&OPTION'                                        00184200
&ARGVAL(&ISUBPOO) SETC '&SUBPOOL'                                       00184500
&ARGVAL(&ICONNIN) SETC '&CONN_INTENT'                                   00184800
&ARGVAL(&IDCB)    SETC '&DCB'                                           00185100
&ARGVAL(&ICONNID) SETC '&CONN_ID'                                       00185400
&ARGVAL(&IAREAPT) SETC '&AREAPTR'                                       00185700
&ARGVAL(&IAREA)   SETC '&AREA(1)'                                       00186000
&ARGVAL(&IAREA2)  SETC '&AREA(2)'                                       00186300
&ARGVAL(&IDELIST) SETC '&DE_LIST(1)'                                    00186600
&ARGVAL(&IDELIS2) SETC '&DE_LIST(2)'                                    00186900
&ARGVAL(&IENTRYG) SETC '&ENTRY_GAP'                                     00187200
&ARGVAL(&IMEMDA1) SETC '&MEM_DATA(1)'                                   00187500
&ARGVAL(&IMEMDA2) SETC '&MEM_DATA(2)'                                   00187800
&ARGVAL(&INAMELI) SETC '&NAME_LIST(1)'                                  00188100
&ARGVAL(&INAMEL2) SETC '&NAME_LIST(2)'                                  00188400
&ARGVAL(&INAME)   SETC '&NAME'                                          00188700
&ARGVAL(&IPDSDE)  SETC '&PDSDE'                                         00189000
&ARGVAL(&IEXDST)  SETC '&EXIT_DST'                                      00189300
&ARGVAL(&IEXPDST) SETC '&EXIT_PREV_DSTPTR'                              00189600
.*                                                                      00189900
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00190200
.*  SET &ARGNUM ARRAY ELEMENTS TO THE NUMBER OF PARAMETERS              00190500
.*  SPECIFIED FOR EACH KEYWORD. EXPECTED VALUES ARE 0, 1 OR 2           00190800
.*  USED IN LOOP1 TO DETERMINE IF CORRECT NUMBER OF PARAMETERS          00191100
.*  WERE SPECIFIED.                                                     00191400
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00191700
.*                                                                      00192000
         LCLA  &ARGNUM(30)                                              00192300
.*                                                                      00192600
&ARGNUM(&IBYPASS) SETA N'&BYPASS_LLA                                    00192900
&ARGNUM(&IHIDE)   SETA N'&HIDE                                    @03A  00193000
&ARGNUM(&IEXSCOPE) SETA N'&EXIT_SCOPE                                   00193200
&ARGNUM(&ICONCAT) SETA N'&CONCAT                                        00193500
&ARGNUM(&IEXOPT)  SETA N'&EXIT_OPTION                                   00193800
&ARGNUM(&IOPTION) SETA N'&OPTION                                        00194100
&ARGNUM(&ISUBPOO) SETA N'&SUBPOOL                                       00194400
&ARGNUM(&ICONNIN) SETA N'&CONN_INTENT                                   00194700
&ARGNUM(&IDCB)    SETA N'&DCB                                           00195000
&ARGNUM(&ICONNID) SETA N'&CONN_ID                                       00195300
&ARGNUM(&IAREAPT) SETA N'&AREAPTR                                       00195600
&ARGNUM(&IAREA)   SETA N'&AREA                                          00195900
&ARGNUM(&IAREA2)  SETA N'&AREA(2)                                       00196200
&ARGNUM(&IDELIST) SETA N'&DE_LIST                                       00196500
&ARGNUM(&IDELIS2) SETA N'&DE_LIST(2)                                    00196800
&ARGNUM(&IENTRYG) SETA N'&ENTRY_GAP                                     00197100
&ARGNUM(&IMEMDA1) SETA N'&MEM_DATA                                      00197400
&ARGNUM(&IMEMDA2) SETA N'&MEM_DATA(2)                                   00197700
&ARGNUM(&INAMELI) SETA N'&NAME_LIST                                     00198000
&ARGNUM(&INAMEL2) SETA N'&NAME_LIST(2)                                  00198300
&ARGNUM(&INAME)   SETA N'&NAME                                          00198600
&ARGNUM(&IPDSDE)  SETA N'&PDSDE                                         00198900
&ARGNUM(&IEXDST)  SETA N'&EXIT_DST                                      00199200
&ARGNUM(&IEXPDST) SETA N'&EXIT_PREV_DSTPTR                              00199500
.*                                                                      00199800
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00200100
.*  SET &OFFSET ARRAY ELEMENTS TO PLIST LABEL VALUE                     00200400
.*  USED IN LOOP3 FOR ST, STC, OI, NI AND MVI INSTRUCTIONS.             00200700
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00201000
.*                                                                      00201300
.*                                                                      00201600
         LCLC  &OFFSET(30)                                              00201900
.*                                                                      00202200
&OFFSET(&IBYPASS)  SETC 'DESP_FLAGS'                                    00202500
&OFFSET(&IHIDE)    SETC 'DESP_FLAGS'                              @03A  00202600
&OFFSET(&IEXSCOPE) SETC 'DESP_EXIT_SCOPE'                               00202800
&OFFSET(&ICONCAT)  SETC 'DESP_CONCAT'                                   00203100
&OFFSET(&ILIBTYPE) SETC 'DESP_LIBTYPE'                                  00203400
&OFFSET(&IGETTYPE) SETC 'DESP_GETTYPE'                                  00203700
&OFFSET(&IRELTYPE) SETC 'DESP_RELTYPE'                                  00204000
&OFFSET(&IEXOPT)   SETC 'DESP_EXIT_OPTION'                              00204300
&OFFSET(&IOPTION)  SETC 'DESP_OPTION'                                   00204600
&OFFSET(&ISUBPOO)  SETC 'DESP_SUBPOOL'                                  00204900
&OFFSET(&ICONNIN)  SETC 'DESP_CONN_INTENT'                              00205200
&OFFSET(&IDCB)     SETC 'DESP_DCB_PTR'                                  00205500
&OFFSET(&ICONNID)  SETC 'DESP_CONN_ID_PTR'                              00205800
&OFFSET(&IAREAPT)  SETC 'DESP_AREAPTR_PTR'                              00206100
&OFFSET(&IAREA)    SETC 'DESP_AREA_PTR'                                 00206400
&OFFSET(&IAREA2)   SETC 'DESP_AREA2'                                    00206700
&OFFSET(&IDELIST)  SETC 'DESP_DE_LIST_PTR'                              00207000
&OFFSET(&IDELIS2)  SETC 'DESP_DE_LIST2'                                 00207300
&OFFSET(&IENTRYG)  SETC 'DESP_ENTRY_GAP'                                00207600
&OFFSET(&IMEMDA1)  SETC 'DESP_MEM_DATA_PTR'                             00207900
&OFFSET(&IMEMDA2)  SETC 'DESP_MEM_DATA2'                                00208200
&OFFSET(&INAMELI)  SETC 'DESP_NAME_LIST_PTR'                            00208500
&OFFSET(&INAMEL2)  SETC 'DESP_NAME_LIST2'                               00208800
&OFFSET(&INAME)    SETC 'DESP_NAME_PTR'                                 00209100
&OFFSET(&IPDSDE)   SETC 'DESP_PDSDE_PTR'                                00209400
&OFFSET(&IEXDST)   SETC 'DESP_EXIT_DST_PTR'                             00209700
&OFFSET(&IEXPDST)  SETC 'DESP_EXIT_PREV_DSTPTR_PTR'                     00210000
.*                                                                      00210300
.*                                                                      00210600
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00210900
.* CREATE STATIC ARRAY OF TO CONTAIN PLIST FIELD COMMENTS               00211200
.* ATTEMPTED TO MOVE COMMENTS TO RIGHT COLUMN AREA AS MUCH AS POSSIBLE  00211500
.* DEPENDING ON CODE GENERATED FOR EACH COMMENT. COMMENTS WILL BE       00211800
.* RAGGED SINCE NO CODE WAS ADDED TO COUNT CHARACTERS ON EACH           00212100
.* LINE OF GENNED CODE.                                                 00212400
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00212700
         LCLC  &FIELDNAM(30)                                            00213000
.*                                                                      00213300
&FIELDNAM(&IBYPASS)  SETC '           DESP FLAG1'                       00213600
&FIELDNAM(&IHIDE)    SETC '           DESP FLAG1'                 @03A  00213700
&FIELDNAM(&IEXSCOPE) SETC '     EXIT_SCOPE'                             00213900
&FIELDNAM(3)         SETC '      RESERVED'                              00214200
&FIELDNAM(&ICONCAT)  SETC '      CONCAT'                                00214500
&FIELDNAM(&ILIBTYPE) SETC '   LIBTYPE'                                  00214800
&FIELDNAM(&IGETTYPE) SETC ' GETTYPE'                                    00215100
&FIELDNAM(&IRELTYPE) SETC ' RELTYPE'                                    00215400
&FIELDNAM(&IEXOPT)   SETC '      EXIT_OPTION'                           00215700
&FIELDNAM(&IOPTION)  SETC '      PUT OPTION'                            00216000
&FIELDNAM(&ISUBPOO)  SETC '      SUBPOOL'                               00216300
&FIELDNAM(&ICONNIN)  SETC ' CONNIN'                                     00216600
&FIELDNAM(12)        SETC '      RESERVED'                              00216900
&FIELDNAM(&IDCB)     SETC '            DCB'                             00217200
&FIELDNAM(14)        SETC '      RESERVED'                              00217500
&FIELDNAM(&ICONNID)  SETC '         CONNID'                             00217800
&FIELDNAM(&IAREAPT)  SETC '         AREAPT'                             00218100
&FIELDNAM(&IAREA)    SETC '         AREA'                               00218400
&FIELDNAM(&IAREA2)   SETC '         AREA2'                              00218700
&FIELDNAM(&IDELIST)  SETC '         DELIST'                             00219000
&FIELDNAM(&IDELIS2)  SETC '         DELIS2'                             00219300
&FIELDNAM(&IENTRYG)  SETC '         ENTRYG'                             00219600
&FIELDNAM(&IMEMDA1)  SETC '        RESERVED'                            00219900
&FIELDNAM(&IMEMDA2)  SETC '        RESERVED'                            00220200
&FIELDNAM(&INAMELI)  SETC '         NAMELI'                             00220500
&FIELDNAM(&INAMEL2)  SETC '         NAMEL2'                             00220800
&FIELDNAM(&INAME)    SETC '         NAME'                               00221100
&FIELDNAM(&IPDSDE)   SETC '         PDSDE'                              00221400
&FIELDNAM(&IEXDST)   SETC '         EXIT_DST'                           00221700
&FIELDNAM(&IEXPDST)  SETC '         EXIT_PREV_DSTPTR'                   00222000
.*                                                                      00222300
.*                                                                      00222600
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00222900
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00223200
.*cc                                                                    00223500
.* SETUP UNIQUE CHARACTER STRINGS FOR FUNCTION SPECIFIED                00223800
.*                                                                      00224100
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00224400
.* &FS- THE FUNCTION CHARACTER STRING FOR THE FUNCTION                  00224700
.*    SPECIFIED (GET,GET_ALL,GET_NAMES,RELEASE,UPDATE,DELETE,RENAME OR  00224900
.*               EXIT)                                                  00225100
.*                                                                      00225300
.*      &FS WILL BE COMPRISED OF THE FOLLOWING CHARACTERS :             00225600
.*                                                                      00225900
.*         'R' - DENOTES A  REQUIRED KEYWORD FOR THIS FUNCTION          00226200
.*         'O' - DENOTES AN OPTIONAL KEYWORD FOR THIS FUNCTION          00226500
.*         'X' - DENOTES AN INVALID  KEYWORD FOR THIS FUNCTION          00226800
.*         'I' - A NON-KEYWORD PLIST FIELD                              00227100
.*               NOT USED FOR FUNC CHECKING                             00227400
.*                                                                      00227700
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00228000
.*  HANDLE FUNC KEYWORD                                                 00228300
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00228600
.*  IF ANY KEYWORDS WERE SPECIFIED THEN FUNC KEYWORD IS REQUIRED        00228900
.*  SO THAT KEYWORD VALIDITY CHECKING CAN BE DONE                       00229200
.*                                                                      00229300
         LCLC  &FS                     FUNCTION STRING                  00229500
         LCLC  &FUNCODE                CODE FOR FUNCTION SPECIFIED      00229800
         AIF   ('&FUNC' EQ       'GET').GETFUNC,                       X00229900
               ('&FUNC' EQ   'GET_ALL').GTAFUNC,                       X00230000
               ('&FUNC' EQ 'GET_NAMES').GTNFUNC,                       X00230100
               ('&FUNC' EQ   'RELEASE').RELFUNC,                       X00230200
               ('&FUNC' EQ      'EXIT').EXTFUNC,                       X00230300
               ('&FUNC' EQ    'DELETE').DELFUNC,                       X00230400
               ('&FUNC' EQ    'RENAME').RENFUNC,                       X00230500
               ('&FUNC' EQ    'UPDATE').UPDFUNC,                       X00230600
               ('&FUNC' EQ          '').NOFUNC                          00230700
.*       OTHERWISE INVALID FUNCTION SPECIFIED                           00230800
&FAIL    SETC  'YES'                   REMEMBER UNSUCCESSFUL            00231000
         MNOTE 8,'INVALID VALUE "&FUNC(1)" SPECIFIED FOR KEYWORD FUNC, X00231300
               NO FURTHER PARAMETER CHECKING IS DONE.'                  00231700
         AGO   .ENDMAC                                                  00232200
.*                                                                      00232300
.*       SETUP FUNC=GET CHAR STRINGS OF ALLOWED PARAMETERS              00232400
.*                                                                      00232500
.*              B    LGR  SC D CAAA  E  NN P                            00232600
.*              Y    IEE  UO C ORRR  N  AA D                            00232700
.*              P    BTL  BN B NEEE  T  MM S                            00232800
.*              A    TTT  PN   NAAA  R  EE D                            00232900
.*              S    YYY  OI   IP 2  Y  LL E                            00233000
.*              S    PPP  ON   DT    G  I2                              00233100
.GETFUNC ANOP                                                           00233200
&FS      SETC  'OIXXXIIIIIORXRIOOOOXXOIIOOXOXX'                   @03C  00233300
&FUNCODE SETC  'DESP_FUNC_GET'                                          00233400
         AGO   .ENDFUNC                                                 00233500
.*                                                                      00233600
.*       SETUP FUNC=GET_ALL CHAR STRINGS OF ALLOWED PARAMETERS          00233700
.*                                                                      00233800
.*                H CLGR  SC D CA    E                                  00233900
.*                I OIEE  UO C OR    N                                  00234000
.*                D NBTL  BN B NE    T                                  00234100
.*                E CTTT  PN   NA    R                                  00234200
.*                  AYYY  OI   IP    Y                                  00234300
.*                  TPPP  ON   DT    G                                  00234400
.GTAFUNC ANOP                                                           00234500
&FS      SETC  'XIOXOIIIIIOOXRIORXXXXOIIXXXXXX'                   @03C  00234600
&FUNCODE SETC  'DESP_FUNC_GET_ALL'                                      00234700
         AGO   .ENDFUNC                                                 00234800
.*                                                                      00234900
.*       SETUP FUNC=GET_NAMES CHAR STRINGS OF ALLOWED PARAMETERS        00235000
.*                                                                      00235100
.*                                                                      00235200
.*                  CLGR  S  D  A                                       00235300
.*                  OIEE  U  C  R         N                             00235400
.*                  NBTL  B  B  E         A                             00235500
.*                  CTTT  P     A         M                             00235600
.*                  AYYY  O     P         E                             00235700
.*                  TPPP  O     T                                       00235800
.GTNFUNC ANOP                                                           00235900
&FS      SETC  'XIXXOIIIIIOXXRIXRXXXXXIIXXRXXX'                   @03C  00236000
&FUNCODE SETC  'DESP_FUNC_GET_NAMES'                                    00236100
         AGO   .ENDFUNC                                                 00236200
.*                                                                      00236300
.*       SETUP FUNC=RELEASE CHAR STRINGS OF ALLOWED PARAMETERS          00236400
.*                                                                      00236500
.*                                                                      00236600
.*                   LGR     D C   DD                                   00236700
.*                   IEE     C O   EE                                   00236800
.*                   BTL     B N   LL                                   00236900
.*                   TTT       N   II                                   00237000
.*                   YYY       I   SS                                   00237100
.*                   PPP       D   T2                                   00237200
.RELFUNC ANOP                                                           00237300
&FS      SETC  'XIXXXIIIIIIXXRIOXXXOOXIIXXXXXX'                   @03C  00237400
&FUNCODE SETC  'DESP_FUNC_RELEASE'                                      00237500
         AGO   .ENDFUNC                                                 00237600
.*                                                                      00237700
.*                                                                      00237800
.*       SETUP FUNC=EXIT CHAR STRINGS OF ALLOWED PARAMETERS             00237900
.*                                                                      00238000
.*                 E    E                   EP                          00238100
.*                 X    X                   XR                          00238200
.*                 S    O                   IE                          00238300
.*                 C    P                   TV                          00238400
.*                 O    T                   DD                          00238500
.*                 P    I                   SS                          00238600
.*                 E    O                   TT                          00238700
.EXTFUNC ANOP                                                           00238800
&FS      SETC  'XIXOXIIIOIIXIXIXXXXXXXIIXXXXOR'                   @03C  00238900
&FUNCODE SETC  'DESP_FUNC_EXIT'                                         00239000
         AGO   .ENDFUNC                                                 00239100
.*                                                                      00239200
.*                                                                      00239300
.*       SETUP FUNC=DELETE CHAR STRINGS OF ALLOWED PARAMETERS           00239400
.*                                                                      00239500
.*                           D          NN                              00239600
.*                           C          AA                              00239700
.*                           B          MM                              00239800
.*                                      EE                              00239900
.*                                      LL                              00240000
.*                                      I2                              00240100
.*                                                                      00240200
.DELFUNC ANOP                                                           00240300
&FS      SETC  'XIXXXIIIXIXXIRIXXXXXXXIIRRXXXX'                   @03C  00240400
&FUNCODE SETC  'DESP_FUNC_DELETE'                                       00240500
         AGO   .ENDFUNC                                                 00240600
.*                                                                      00240700
.*                                                                      00240800
.*       SETUP FUNC=RENAME CHAR STRINGS OF ALLOWED PARAMETERS           00240900
.*                                                                      00241000
.*                           D          NN                              00241100
.*                           C          AA                              00241200
.*                           B          MM                              00241300
.*                                      EE                              00241400
.*                                      LL                              00241500
.*                                      I2                              00241600
.*                                                                      00241700
.RENFUNC ANOP                                                           00241800
&FS      SETC  'XIXXXIIIXIXXIRIXXXXXXXIIRRXXXX'                   @03C  00241900
&FUNCODE SETC  'DESP_FUNC_RENAME'                                       00242000
         AGO   .ENDFUNC                                                 00242100
.*                                                                      00242200
.*                                                                      00242300
.*       SETUP FUNC=UPDATE CHAR STRINGS OF ALLOWED PARAMETERS           00242400
.*                                                                      00242500
.*                           D          NN                              00242600
.*                           C          AA                              00242700
.*                           B          MM                              00242800
.*                                      EE                              00242900
.*                                      LL                              00243000
.*                                      I2                              00243100
.*                                                                      00243200
.UPDFUNC ANOP                                                           00243300
&FS      SETC  'XIXXXIIIXIXXIRIXXXXXXXIIRRXXXX'                   @03C  00243400
&FUNCODE SETC  'DESP_FUNC_UPDATE'                                       00243500
         AGO   .ENDFUNC                                                 00243600
.*                                                                      00243700
.NOFUNC  ANOP                                                           00243800
.*                                                                      00243900
.*              B HECLGRE SC D CAAADDE  NNNPEP                          00244000
.*              Y IXOIEEX UO C ORRREEN  AAADXR                          00244100
.*              P DSNBTLO BN B NEEELLT  MMMSIE                          00244200
.*              A ECCTTTP PN   NAAAIIR  EEEDTV                          00244300
.*              S  OAYYYT OI   IP 2SSY  LL EDD                          00244400
.*              S  PTPPPI ON   DT  T2G  I2  SS                          00244500
.*                 E    O                   TT                          00244600
.*                                                                      00244700
&FS      SETC  'OIOOOIIIOIOOIOIOOOOOOOIIOOOOOO' NO FUNC SPECIFIED @03C  00244800
.*                                                                      00244900
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00245000
.* ALLOW NO FUNCTION (&FUNC) TO BE CODED IF BOTH :                      00245100
.*   1.  &COMPLET = NO (MACRO FORMAT IS MF=L OR MF=E WITH NOCHECK)      00245200
.*   2.  NO OTHER KEYWORDS WERE SPECIFIED                               00245300
.*                                                                      00245400
.* CAN NOW CHECK THAT #1 IS TRUE, NEED TO                               00245500
.* SETUP &FS STRING SO CAN DO LOOP1 TO CHECK IF #2 IS TRUE              00245600
.* (BY &ANYKEYS = NO AT END OF LOOP1).                                  00245700
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00245800
.*                                                                      00245900
         AIF   ('&COMPLET' EQ 'NO').ENDFUN2   NOCHECK -> NO FUNC OK     00246000
&FAIL    SETC  'YES'                   REMEMBER UNSUCCESSFUL            00246100
         AIF   ('&MF1' EQ 'E').EMSG                                     00246200
         MNOTE 8,'"FUNC" IS A REQUIRED KEYWORD FOR STANDARD MACRO FORMAX00246300
               T, MF=S.'                                                00246400
         AGO   .ENDMAC                                                  00246500
.EMSG    MNOTE 8,'FOR MF=E TO BE SPECIFIED WITHOUT THE "FUNC" KEYWORD, X00246600
               "NOCHECK" MUST BE SPECIFIED AND NO OTHER KEYWORDS. NO FUX00246700
               RTHER KEYWORD CHECKING IS DONE DUE TO THIS FAILURE.'     00246800
         AGO   .ENDMAC                                                  00246900
.*                                                                      00247000
.*  VALID NO FUNC CODE SKIPS THIS CHECK                                 00247200
.*                                                                      00247500
.ENDFUNC AIF   (N'&FUNC EQ 1).ENDFUN2                                   00247800
&FAIL    SETC  'YES'                   REMEMBER UNSUCCESSFUL            00248100
         MNOTE 8,'KEYWORD "FUNC" MUST HAVE EXACTLY 1 ARGUMENT. NO FURTHX00248400
               ER ERROR CHECKING DONE.'                                 00248700
         AGO   .ENDMAC                                                  00249000
.ENDFUN2 ANOP                                                           00249300
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00249600
.*                                                                      00249900
.* CONTINUE SETUP OF UNIQUE CHARACTER STRINGS                           00250200
.*                                                                      00250500
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00250800
.* &NS - NUMBER STRING                                                  00251100
.*       WILL CONTAIN THE NUMBER OF PARAMETERS ALLOWED FOR EACH KEYWORD 00251400
.*       LOOP1 WILL COMPARE THIS TO &ARGNUM ARRAY TO DETERMINE IF       00251700
.*       THE CORRECT NUMBER OF PARAMETERS PER KEYWORD WERE SPECIFIED    00252000
.*                                                                      00252300
.*    &NS WILL BE COMPRISED OF :                                        00252600
.*                                                                      00252900
.*    '1' - DENOTES THAT ONLY 1 PARAMETER IS ALLOWED FOR THE KEYWORD    00253200
.*    '2' - DENOTES THAT 2 PARAMETERS MUST BE SPECIFIED FOR THE KEYWORD 00253500
.*                                                                      00253800
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00254100
.*                                                                      00254400
         LCLC  &NS                     NUMBER STRING                    00254700
.*                                                                      00255000
.*              B HECLGRE SC D CAAADDE  NNNPEP                          00255300
.*              Y IXOIEEX UO C ORRREEN  AAADXR                          00255600
.*              P DSNBTLO BN B NEEELLT  MMMSDE                          00255900
.*              A ECCTTTP PN   NAAAIIR  EEEDSV                          00256200
.*              S  OAYYYT OI   IP 2SSY  LL ETD                          00256500
.*              S  PTPPPI ON   DT  T2G  I2   S                          00256800
.*                                                                      00257100
&NS      SETC  '101110001011010112121100211111' REPLACE AFTER PUT @03C  00257400
.*                                                                      00257700
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00258000
.*cc                                                                    00258300
.* &FT - FIELD TYPE STRING                                              00258600
.*       WILL BE CONTAIN CHARACTERS THAT DENOTE THE TYPE OF             00258900
.*       PLIST FIELD FOR PLIST FIELD                                    00259200
.*                                                                      00259500
.*  &FT WILL BE COMPRISED OF :                                          00259800
.*                                                                      00260100
.*    'A' - FULLWORD ADDRESS, RX-TYPE ADDRESS OR (2-12)                 00260400
.*          WILL BE PLACED IN THE PARMLIST                              00260700
.*                                                                      00261000
.*                                                                      00261300
.*    'F' - FULLWORD VALUE, RX-TYPE ADDRESS OR (2-12)                   00261600
.*          WILL BE PLACED IN THE PARMLIST                              00261900
.*                                                                      00262200
.*    'B' - BYTE VALUE, VALUE MUST BE FROM LIST VALID VALUES            00262500
.*          ARGUMENTS CANNOT BE REGISTERS OR RX-TYPE                    00262800
.*          DESP_FLAGS (HANDLED AS BYPASS_LLA KEYWORD - FLAG SET FOR    00263100
.*                       BYPASS_LLA, CONCAT, SUBPOOL)                   00263400
.*          OR NON-KEYWORD PLIST FIELD (LIBTYPE, GETTYPE,               00263700
.*                                       RELTYPE, & OPTION)             00264000
.*                                                                      00264300
.*    'X' - HEX STORAGE, RX-TYPE ADDRESS OR (2-12)                      00264600
.*          (CONCAT AND SUBPOOL)                                        00264900
.*          ALTHOUGH FOR CONCAT PARAMETER, CONCAT(ALL) IS VALID.   @L1A 00265200
.*                                                                      00265500
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00265800
         LCLC  &FT                     FIELD TYPE STRING                00266100
.*                                                                      00266400
.*              B HECLGRE SC D CAAADDE  NNNPEP                          00266700
.*              Y IXOIEEX UO C ORRREEN  AAADXR                          00267000
.*              P DSNBTLO BN B NEEELLT  MMMSDE                          00267300
.*              A ECCTTTP PN   NAAAIIR  EEEDSV                          00267600
.*              S  OAYYYT OI   IP 2SSY  LL ETD                          00267900
.*              S  PTPPPI ON   DT  T2G  I2   S                          00268200
.*                                                                      00268500
&FT      SETC  'BXBBXBBBXXXBXAAAAAFAFFAFAFAAAA'                   @03A  00268800
.*                                                                      00269100
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00269400
.*cc                                                                    00269700
.* &ARGTYP - ARGUMENT TYPE ARRAY, SETUP DURING LOOP1                    00270000
.*                                                                      00270300
.*       ELEMENTS SET TO ONE OF THE FOLLOWING CHARACTERS.               00270600
.*       CHARACTERS DENOTE THE TYPE OF ARGUMENT SUPPLIED. STATIC        00270900
.*       FIELD TYPE ARRAY, &FT, IS USED TO ASSIST DETERMINING &ARGTYP.  00271200
.*                                                                      00271500
.*                                                                      00271800
.*                                                                      00272100
.*  &ARGTYP WILL BE COMPRISED OF :                                      00272400
.*                                                                      00272700
.*    'L' - KEYWORD ARGUMENT WAS FROM A LIST OF VALID ARGUMENTS         00273000
.*          SET IF FIELD TYPE, &FT, IS 'B'                              00273300
.*          SET FOR :                                                   00273600
.*          KEYWORDS - BYPASS_LLA,CONN_INTENT                           00273900
.*          NON-KEYWORD PLIST FIELDS - LIBTYPE,GETTYPE,RELTYPE          00274200
.*                                                                      00274500
.*    'R' - KEYWORD ARGUMENT WAS SPECIFIED IN A REGISTER                00274800
.*          SET IF FIELD TYPE IS 'A' , 'F', OR 'X'                      00275100
.*          AND FIRST CHAR OF ARG IS '(' AND LAST IS ')'.               00275400
.*          CAN BE SET FOR : ALL NON-LIST ARGUMENT TYPES ('L') AND      00275700
.*          IF MF=L IS NOT SPECIFIED                                    00276000
.*                                                                      00276300
.*    'A' - RX TYPE OF ARGUMENT                                         00276600
.*          SET IF FIELD TYPE IS 'A' AND ARGUMENT WAS NOT               00276900
.*          IN A REGISTER.                                              00277200
.*                                                                      00277500
.*    'S' - ARGUMENT IS A SYMBOL                                        00277800
.*          SET IF RX TYPE OF ARGUMENT, &ARGTYP = 'A' WAS NOT SET       00278100
.*          (FIELD TYPE OF 'F' OR 'X' IS ASSUMED)                       00278400
.*                                                                      00278700
.*  NOTE :                                                              00279000
.*  NO CHECKING FOR NON-LIST TYPE ARGUMENTS IS DONE AS TO WHETHER       00279300
.*  THE ARGUMENT WAS CORRECTLY SPECIFIED AS AN RX-TYPE OR SYMBOL.       00279600
.*  IT IS ASSUMED TO BE RX OR SYMBOL BASED ON WHICH IS ALLOWED FOR      00279900
.*  EACH ARGUMENT AS DENOTED BY STATIC &FT FIELD TYPE ARRAY. IF SYMBOLS 00280200
.*  ARE USED WHERE RX-TYPE ARE EXPECTED (AND VICE VERSA), ASSEMBLY      00280500
.*  ERRORS WILL OCCUR.                                                  00280800
.*                                                                      00281100
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00281400
         LCLC  &ARGTYP(30)                 FIELD TYPE STRING            00281700
.*                                                                      00282000
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00282300
.*cc                                                                    00282600
.*   TABLE SHOWS RELATIONSHIP OF STATIC &FT, FIELD TYPE, STRING TO      00282900
.*                                                                      00283200
.*   &ARGTYP ARRAY, TYPE OF KEYWORD ARGUMENT CODED ON MACRO INVOCATION  00283500
.*   (&ARGTYP IS BUILT DURING LOOP1)                                    00283800
.*                                                                      00284100
.*   THIS CHART SHOWS HOW KEYWORD ARGUMENT TYPES ARE                    00284400
.*   HANDLED DURING LOOP1, LOOP2 AND LOOP3 PROCESSING.                  00284700
.*   LOOP1 DETERMINES &ARGTYP AND ISSUES REGISTER "INVALID"             00285000
.*   MNOTE MESSAGES FOR MF=L.                                           00285300
.*                                                                      00285600
.*                                                                      00285900
.*                                                                      00286200
.*   &FT FIELD      &ARGTYP    MF=L        MF=S        MF=E & S         00286500
.*       TYPE       LOOP1      LOOP2       LOOP2       LOOP3            00286800
.*   -----------------------------------------------------------        00287100
.*                                                                      00287400
.*   A - ADDRESS    R - REG    INVALID     DEFER->     ST               00287700
.*       FULLWORD   A - RX     DC A( )     DC A( )     LA ST            00288000
.*                                                                      00288300
.*                                                                      00288600
.*   F - VALUE      R - REG    INVALID     DEFER->     ST               00288900
.*       FULLWORD   S - SYM    DC A( )     DC A( )     LA ST            00289200
.*                                                                      00289500
.*                                                                      00289800
.*   X - VALUE      R - REG    INVALID     DEFER->     STC              00290100
.*       BYTE       S - SYM    DC AL1( )   DC AL1( )   LA ST            00290400
.*                                                                      00290700
.*                                                                      00291000
.*   B - FLAG       L - LIST   DC AL1( )   DC AL1( )   OI/NI            00291300
.*       BYTE                                                           00291600
.*                                                                      00291900
.*                                                                      00292200
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00292500
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00292800
.*                                                                      00293100
.*  LOOP 1  - "PRESENCE AND ERROR MESSAGE LOOP"                         00293400
.*                                                                      00293700
.*  - CHECK ALL SPECIFIED KEYWORDS                                      00294000
.*  - DONE FOR MF = L, S, OR E                                          00294300
.*  - HANDLES FUNCTION STRING ELEMENTS &FS = 'R','O' OR 'X'             00294600
.*                                                                      00294900
.*  - SET &ARGTYP ARRAY ELEMENTS AS DESCRIBED UNDER &ARGTYP DECLARATION 00295200
.*  - USES &FS TO DETERMINE IF SHOULD ISSUE MESSAGES :                  00295500
.*       - KEYWORD REQUIRED MSG IF COMPLET = YES                        00295800
.*       - KEYWORD INVALID  MSG                                         00296100
.*       - REGISTER INVALID FOR MF =L                                   00296400
.*       - REGISTER INVALID FOR THIS KEYWORD                            00296700
.*       - WRONG NUMBER OF PARAMETERS FOR THIS KEYWORD                  00297000
.*  - USES &FIELD TO DETERMINE IF SHOULD ISSUE MESSAGE :                00297300
.*       - SELF DEFINING TERM INVALID FOR ADDRESS TYPE OF KEYWORD       00297600
.*  - SET &FAIL FLAG IF ANY KEYWORD ERRORS                              00297900
.*  - SET &ANYKEYS IF ANY KEYWORDS WERE SPECIFIED, VALID OR INVALID     00298200
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00298500
.*                                                                      00298800
.LOOP1   ANOP                                                           00299100
         LCLC  &ANYKEYS          SET TO YES IF ANY KEYWORDS SPECIFIED   00299400
         LCLC  &N                TO SUBSTRING THROUGH NS CHAR STRING    00299700
         LCLC  &FIELD            TO SUBSTRING THROUGH FS CHAR STRING    00300000
         LCLA  &ARGLEN           LENGTH OF EACH KEYWORD ARGUMENT        00300300
&ANYKEYS SETC  'NO'                                                     00300600
.*                                                                      00300900
&I       SETA  0                                                        00301200
.RELOOP1 ANOP                                                           00301500
&I       SETA  &I+1                                                     00301800
         AIF   (&I GT &IMAX).ENDLOP1             EXIT LOOP 1            00302100
.* NO KEYWORD EXISTS FOR 'I'                                            00302400
         AIF   ('&FS'(&I,1) EQ 'I').RELOOP1                             00302700
.* SET &FIELD TO CHAR FOR THIS KEYWORD FIELD TYPE FROM &FT STRING       00303000
&FIELD   SETC  '&FT'(&I,1)              GET THIS KEYWORD FIELD TYPE     00303300
.* DETERMINE IF KEYWORD SPECIFIED                                       00303600
         AIF   ('&ARGVAL(&I)' NE '').CHKINVA                            00303900
.* KEYWORD NOT REQUIRED AND COMPLET IS OFF  DONE TRY NEXT               00304200
         AIF   ('&COMPLET' NE 'YES').RELOOP1                            00304500
.* COMPLET = YES, KEYWORD NOT SPECIFIED - IS KEYWORD REQUIRED ?         00304800
         AIF   ('&FS'(&I,1) NE 'R').RELOOP1                             00305100
.* COMPLET = YES  SO ISSUE MESSAGE                                      00305400
&FAIL    SETC  'YES'                                                    00305700
         MNOTE 8,'&PARMNAM(&I) IS REQUIRED WHEN FUNC="&FUNC" IS SPECIFIX00306000
               ED.'                                                     00306300
         AGO   .RELOOP1                                                 00306600
.*                                                                      00306900
.CHKINVA ANOP                                                           00307200
.* REMEMBER KEYWORD WAS SPECIFIED                                       00307500
&ANYKEYS SETC 'YES'                                                     00307800
.* CHECK IF KEYWORD VALID FOR FUNCTION SPECIFIED                        00308100
         AIF   ('&FS'(&I,1)  NE 'X' ).CHKNUM                            00308400
&FAIL    SETC  'YES'                                                    00308700
         MNOTE 8,'&PARMNAM(&I) IS INVALID FOR FUNC="&FUNC".'            00309000
         AGO   .RELOOP1                                                 00309300
.*                                                                      00309600
.* CHECK NUMBER OF KEYWORD ARGUMENTS SPECIFIED, USE &ARGNUM TO TEST     00309900
.CHKNUM  ANOP                                                           00310200
&N       SETC  '&NS'(&I,1)                                              00310500
         AIF (('&ARGNUM(&I)' NE '0')AND('&ARGNUM(&I)' EQ '&N')).CHKB    00310800
&FAIL    SETC  'YES'                                                    00311100
         MNOTE 8,'&N VALUE(S) MUST BE SPECIFIED FOR KEYWORD &PARMNAM(&IX00311400
               ), &ARGNUM(&I) VALUE(S) WAS SPECIFIED.'                  00311700
         AGO   .RELOOP1                                                 00312000
.*                                                                      00312300
.* IF FIELD TYPE = 'B' THEN NO MORE CHECKING REQUIRED BY LOOP1          00312600
.* WILL CHECK THAT THESE ARGUMENTS ARE VALID FROM LIST OF               00312900
.* ARGUMENTS AFTER LOOP1 (IE. CONN_INTENT = HOLD|NONE)                  00313200
.*                                                                      00313500
.CHKB    AIF   ('&FIELD' NE 'B').CHKREG                                 00313800
&ARGTYP(&I) SETC  'L'                                                   00314100
         AGO   .RELOOP1                                                 00314400
.*                                                                      00314700
.* CHECK FOR REGISTER ARGUMENT                                          00315000
.* ARGUMENT IS IN A REGISTER IF FIRST CHAR IS '(' AND LAST              00315300
.*                                                    CHAR IS ')'       00315600
.CHKREG  ANOP                                                           00315900
&ARGLEN  SETA  K'&ARGVAL(&I)                                            00316200
         AIF   ('&ARGVAL(&I)'(1,1) NE '(').CHKRX                        00316500
         AIF   ('&ARGVAL(&I)'(&ARGLEN,1) NE ')').CHKRX                  00316800
         AIF   ('&MF1' NE 'L').SETR                                     00317100
&FAIL    SETC  'YES'                                                    00317400
         MNOTE 8,'REGISTER FORMAT IS NOT ALLOWED FOR MF=L FORMAT, REGISX00317700
               TER FORMAT WAS USED FOR KEYWORD &PARMNAM(&I).'           00318000
         AGO   .RELOOP1                                                 00318300
.*    SET ARGUMENT TYPE TO 'R' FOR REGISTER (FT='A','F' OR 'X')         00318600
.SETR    ANOP                                                           00318900
&ARGTYP(&I) SETC  'R'                                                   00319200
         AGO   .RELOOP1                                                 00319500
.*                                                                      00319800
.* ASSUME RX TYPE OF ARGUMENT IF &FIELD = 'A'                           00320100
.*                                                                      00320400
.CHKRX   AIF   ('&FIELD' NE 'A').CHKS                                   00320700
.SETRX   ANOP                                                           00321000
&ARGTYP(&I) SETC  'A'                                                   00321300
         AGO   .RELOOP1                                                 00321600
.*                                                                      00321900
.* ASSUME S (SYMBOL) TYPE OF ARGUMENT SINCE &FIELD NOT = A              00322200
.*                                                                      00322500
.CHKS    ANOP                                                           00322800
&ARGTYP(&I) SETC  'S'                                                   00323100
         AGO   .RELOOP1                                                 00323400
.*                                                                      00323700
.ENDLOP1 ANOP                                                           00324000
.*cc                                                                    00324300
.*                                                                      00324600
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00324900
.* ALLOW NO FUNCTION (&FUNC) TO BE CODED IF BOTH :                      00325200
.*   1.  &COMPLET = NO (MACRO FORMAT IS MF=L OR MF=E WITH NOCHECK)      00325500
.*   2.  NO OTHER KEYWORDS WERE SPECIFIED                               00325800
.*                                                                      00326100
.* ALREADY CHECKED #1 PRIOR TO LOOP1                                    00326400
.* NOW CHECK #2  (&ANYKEYS = NO AT END OF LOOP1)                        00326700
.*                                                                      00327000
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00327300
.*                                                                      00327600
         AIF   ('&FUNC' NE '').FUNCOK                                   00327900
.* IF MF=E AND NO KEYWORDS SPECIFIED, GO INVOC DESERV                   00328200
         AIF   (('&ANYKEYS' EQ 'NO') AND ('&MF1' EQ 'E')).CHKINVO       00328500
.* IF MF=L AND NO KEYWORDS SPECIFIED, CONTINUE, GEN PLIST               00328800
         AIF   (('&ANYKEYS' EQ 'NO') AND ('&MF1' EQ 'L')).FUNCOK        00329100
&FAIL    SETC  'YES'                                                    00329400
         MNOTE 8,'"MF=(E...." REQUIRES THE "FUNC" KEYWORD WHEN OTHER KEX00329700
               YWORDS ARE SPECIFIED.'                                   00330000
         AGO   .ENDMAC                                                  00330300
.FUNCOK  ANOP                                                           00330600
.*                                                                      00330900
.*       SKIP ALL THE FOLLOWING MUTUALLY EXCLUSIVE KEYWORD CHECKING     00331200
.*                                             IF FUNC = EXIT           00331500
         AIF   ('&FUNC' EQ 'EXIT').ENDMUT                               00331800
.*                                                                      00332100
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00332400
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00332700
.*                                                                      00333000
.* - CHECK MUTUALLY EXCLUSIVE REQUIRED KEYWORD                          00333300
.*   SAVE VALUE TO SET PLIST NON-KEYWORD FLAG                           00333600
.*   ONE AND ONLY ONE KEYWORD FROM A PAIR OF KEYWORDS, MAY BE SPECIFIED 00333900
.*                                                                      00334200
.* - CHECK VALID VALUE FROM LIST OF ALLOWED VALUES                      00334500
.*                                                                      00334800
.* - HANDLE TYPE STRING, &FT, FOR FLAG ELEMENTS (&FT ELEMENT IS = B)    00335100
.*   THEY ARE: LIBTYPE, GETTYPE & RELTYPE. BYPASS_LLAS,CONCAT & SUBPOOL 00335400
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00335700
.*                                                                      00336000
.*  SET PLIST NON-KEYWORD VALUE : "LIBTYPE"                             00336300
.*                                                                      00336600
.*  KEYWORD :  DCB                                                      00336900
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00337200
.*                                                                      00337500
.*  KEYWORD DCB IS REQUIRED FOR EVERY FUNCTION EXCEPT FUNC=EXIT         00337800
.*  SET LIBTYPE FLAG TO DCB                                             00338100
&ARGVAL(&ILIBTYPE)  SETC  'DESP_LIBTYPE_DCB'                            00338400
&ARGTYP(&ILIBTYPE)  SETC  'L'                                           00338700
.*                                                                      00339000
.*                                                                      00339300
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00339600
.*                                                                      00339900
.*  SET PLIST NON-KEYWORD VALUE : "GETTYPE"                             00340200
.*                                                                      00340500
.*  MUTUALLY EXCLUSIVE PARAMETERS  :  NAME_LIST/PDSDE                   00340800
.*  TEST FOR FUNCTION :  GET                                            00341100
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00341400
.*                                                                      00341700
         LCLA  &MUTFLAG                                                 00342000
&MUTFLAG SETA  0                                                        00342300
         AIF   ('&FUNC' NE     'GET').ENDGET                            00342600
.*                                                                      00342900
         AIF   ('&ARGTYP(&INAMELI)' EQ '').GETOTH                       00343200
&ARGVAL(&IGETTYPE)  SETC  'DESP_GETTYPE_NAME_LIST'                      00343500
&MUTFLAG SETA  1                                                        00343800
&ARGTYP(&IGETTYPE) SETC 'L'                                             00344100
.*                                                                      00344400
.GETOTH  AIF   ('&ARGTYP(&IPDSDE)' EQ '').GETMUT                        00344700
&ARGVAL(&IGETTYPE)  SETC  'DESP_GETTYPE_PDSDE'                          00345000
&MUTFLAG SETA  &MUTFLAG+1                                               00345300
&ARGTYP(&IGETTYPE) SETC 'L'                                             00345600
.*                                                                      00345900
.GETMUT  AIF   (&MUTFLAG  NE 2).GETOMIT                                 00346200
&FAIL    SETC  'YES'                                                    00346500
         MNOTE 8,'EITHER KEYWORD "NAME_LIST" OR "PDSDE" MUST BE SPECIFIX00346800
               ED BUT NOT BOTH.'                                        00347100
         AGO   .ENDGET                                                  00347400
.*                                                                      00347700
.GETOMIT AIF   (&MUTFLAG  NE 0).ENDGET                                  00348000
.*                                                                      00348300
         AIF   ('&COMPLET' NE 'YES').ENDGET                             00348600
&FAIL    SETC  'YES'                                                    00348900
         MNOTE 8,'KEYWORD "NAME_LIST" OR "PDSDE" MUST BE SPECIFIED IF MX00349200
               F=S OR MF=E WITH "COMPLETE" SPECIFIED OR DEFAULTED TO.'  00349500
.ENDGET  ANOP                                                           00349800
.*                                                                      00350100
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00350400
.*                                                                      00350700
.*  CHECK FOR MUTUALLY EXCLUSIVE PARAMETERS  :  AREA/AREAPTR            00350800
.*  TEST FOR FUNCTION :  GET                                            00350900
.*                                                                 @L1A 00351000
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00351100
.*                                                                      00351200
&MUTFLAG SETA  0                                                   @L1A 00351300
         AIF   ('&FUNC' NE     'GET').ENDGET1                      @L1A 00351400
.*                                                                      00351500
         AIF   ('&ARGTYP(&IAREA)' EQ '').GETOTH1                   @L1A 00351600
&MUTFLAG SETA  1                 INDICATE AREA SPECIFIED           @L1A 00351700
.*                                                                      00351800
.GETOTH1 AIF   ('&ARGTYP(&IAREAPT)' EQ '').GETMUT1                 @L1A 00351900
&MUTFLAG SETA  &MUTFLAG+1        INDICATE AREAPTR SPECIFIED        @L1A 00352000
.*                                                                      00352100
.GETMUT1 AIF   (&MUTFLAG  NE 2).GETOMT1                            @L1A 00352200
&FAIL    SETC  'YES'                                               @L1A 00352300
         MNOTE 8,'EITHER KEYWORD "AREA" OR "AREAPTR" MUST BE SPECIFIED X00352400
               BUT NOT BOTH.'                                      @L1A 00352500
.*                                                                      00352600
.GETOMT1 AIF   (&MUTFLAG  NE 0).ENDGET1                            @L1A 00352700
.*                                                                 @L1A 00352800
         AIF   ('&COMPLET' NE 'YES').ENDGET1                       @L1A 00352900
&FAIL    SETC  'YES'                                               @L1A 00353000
         MNOTE 8,'KEYWORD "AREA" OR "AREAPTR" MUST BE SPECIFIED IF MF=SX00353100
                OR MF=E WITH "COMPLETE" SPECIFIED OR DEFAULTED TO.'     00353200
         AIF   ('&ARGTYP(&IAREA)' EQ '').GETNAREA  AREA NOT CODED  @L1A 00353300
         AIF   ('&ARGTYP(&ISUBPOO)' EQ '').GETNAREA NO SUBPOOL     @L1A 00353400
         MNOTE 4,'KEYWORD "SUBPOOL" WILL BE IGNORED SINCE KEYWORD "AREAX00353500
               " WAS ALSO CODED.'                                  @L1A 00353600
.GETNAREA ANOP                   AREA WAS NOT CODED                @L1A 00353700
.ENDGET1 ANOP                                                           00353800
.*                                                                      00353900
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00354000
.*                                                                      00354100
.*  SET PLIST NON-KEYWORD VALUE : "RELTYPE"                             00354200
.*                                                                      00354300
.*  MUTUALLY EXCLUSIVE PARAMETERS  :  DE_LIST/CONN_ID                   00354400
.*  TEST FOR FUNCTION :  RELEASE                                        00354500
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00354600
.*                                                                      00354700
.RELTYPE ANOP                                                           00354800
&MUTFLAG SETA  0                                                        00354900
         AIF   ('&FUNC' NE 'RELEASE').ENDREL                            00355000
         AIF   ('&ARGTYP(&IDELIST)' EQ '').RELOTH                       00355100
&ARGVAL(&IRELTYPE) SETC  'DESP_RELTYPE_DE_LIST'                         00355200
&MUTFLAG SETA  1                                                        00355300
&ARGTYP(&IRELTYPE) SETC 'L'                                             00355400
.*                                                                      00355500
.RELOTH  AIF   ('&ARGTYP(&ICONNID)' EQ '').RELMUT                       00355600
&ARGVAL(&IRELTYPE) SETC  'DESP_RELTYPE_CONN_ID'                         00355700
&MUTFLAG SETA  &MUTFLAG+1                                               00355800
&ARGTYP(&IRELTYPE) SETC 'L'                                             00356100
.*                                                                      00356400
.RELMUT  AIF   (&MUTFLAG  NE 2).RELOMIT                                 00356700
&FAIL    SETC  'YES'                                                    00357000
         MNOTE 8,'EITHER KEYWORD "CONN_ID" OR "DE_LIST" MUST BE SPECIFIX00357300
               D BUT NOT BOTH.'                                         00357600
         AGO   .ENDREL                                                  00357900
.*                                                                      00358200
.RELOMIT AIF   (&MUTFLAG  NE 0).ENDREL                                  00358500
.*                                                                      00358800
         AIF   ('&COMPLET' NE 'YES').ENDREL                             00359100
&FAIL    SETC  'YES'                                                    00359400
         MNOTE 8,'KEYWORD "CONN_ID" OR "DE_LIST" MUST BE SPECIFIED IF  X00359700
               MF=S OR MF=E WITH "COMPLETE" SPECIFIED OR DEFAULTED TO.' 00360000
.ENDREL  ANOP                                                           00360300
.*                                                                      00360600
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00360900
.*                                                                      00361200
.*  CHECK VALID VALUE FROM LIST OF ALLOWED VALUES                       00361500
.*                                                                      00361800
.*  KEYWORD TO CHECK : CONN_INTENT                                      00362100
.*  TEST FOR FUNCTIONS :  GET, GET_ALL                                  00362400
.*                                                                      00362700
.*  DEFAULT TO NONE FOR GET_ALL                                         00363000
.*  CONN_INTENT REQUIRED FOR GET                                        00363300
.*  CONN_INTENT=NONE INVALID FOR GET                                    00363600
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00363900
.*                                                                      00364200
         AIF   (('&FUNC' NE 'GET') AND                                 X00364500
               ('&FUNC' NE 'GET_ALL')).ENDCON                           00364800
.*                                                                      00365100
         AIF   ('&CONN_INTENT' EQ  ''    ).CON00,                      X00365400
               ('&CONN_INTENT' EQ  'NONE').CON0,                       X00365700
               ('&CONN_INTENT' EQ  'HOLD').CON1                         00366300
.*                                                                      00366900
&FAIL    SETC  'YES'                                                    00367200
         MNOTE 8,'INVALID VALUE "&CONN_INTENT" SPECIFIED FOR CONN_INTENX00367500
               T. VALID VALUES FOR GET_ALL ARE "NONE","HOLD" OR  DEFAULX00367900
               T TO "NONE". FOR GET, "HOLD" MUST BE SPECIFIED.'         00368300
.*                                                                      00368700
         AGO     .ENDCON                                                00369000
.*                                                                      00369300
.CON00   AIF   (('&FUNC' EQ 'GET') AND ('&COMPLET' EQ 'YES')).CONERR    00369600
         AIF   ('&FUNC' EQ 'GET').ENDCON                                00369900
&ARGVAL(&ICONNIN)  SETC 'DESP_CONN_INTENT_NONE'                         00370200
         AGO     .ENDCON                                                00370500
.CON0    AIF   ('&FUNC' EQ 'GET').CONERR                                00370800
&ARGVAL(&ICONNIN)  SETC 'DESP_CONN_INTENT_NONE'                         00371100
         AGO     .ENDCON                                                00371400
.CON1    ANOP                                                           00371700
&ARGVAL(&ICONNIN)  SETC 'DESP_CONN_INTENT_HOLD'                         00372000
         AGO     .ENDCON                                                00372300
.*                                                                      00374400
.CONERR  MNOTE 8,'FOR THE "GET" FUNCTION, "CONN_INTENT" MUST BE SPECIFIX00374700
               ED AS "HOLD".'                                           00375100
&FAIL    SETC  'YES'                                                    00375600
.*                                                                      00375900
.ENDCON  ANOP                                                           00376200
.*                                                                      00376500
.ENDMUT  ANOP                                                           00376800
.*                                                                      00377100
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00377400
.*                                                                      00377700
.*  HANDLE PLIST DESP_FLAGS FIELD                                       00378000
.*                                                                      00378300
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00378600
         LCLB  &BYPBIT                                                  00378900
         LCLB  &CATBIT                                                  00379200
         LCLB  &SUBBIT                                                  00379500
         LCLB  &CATALLB           CONCAT(ALL) BIT                  @L1A 00379600
         LCLB  &HIDEBIT           HIDE(YES|NO) BIT                @03A  00379700
&BYPBIT  SETB  0                  INITIALLY SET TO 0 FOR ALL FUNCTIONS  00379800
&CATBIT  SETB  0                  INITIALLY SET TO 0 FOR ALL FUNCTIONS  00380100
&SUBBIT  SETB  0                  INITIALLY SET TO 0 FOR ALL FUNCTIONS  00380400
&CATALLB SETB  0              INITIALLY SET TO 0 FOR ALL FUNCTIONS @L1A 00380500
&HIDEBIT SETB  0              INITIALLY SET TO 0 FOR ALL FUNCTIONS @03A 00380600
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00380700
.*                                                                      00381000
.*  HANDLE PLIST DESP_FLAGS FIELD FOR GET FUNCTION                      00381300
.*  CHECK VALID VALUE FROM LIST OF ALLOWED VALUES                       00381600
.*                                                                      00381900
.*  KEYWORD TO CHECK : BYPASS_LLA                                       00382200
.*  TEST FOR FUNCTION : GET                                             00382500
.*  BYPASS_LLA OPTIONAL FOR GET                                         00382800
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00383100
.*                                                                      00383400
.*                                                                      00383700
         AIF   ('&FUNC' NE 'GET').ENDBYP                                00384000
.*                                                                      00384300
         AIF   ('&BYPASS_LLA' EQ    '').ENDBYP,                        X00384600
               ('&BYPASS_LLA' EQ 'YES').BYPASS,                        X00384900
               ('&BYPASS_LLA' EQ  'NO').ENDBYP                          00385200
.*                                                                      00385500
&FAIL    SETC  'YES'                                                    00385800
         MNOTE 8,'INVALID VALUE "&BYPASS_LLA" SPECIFIED FOR BYPASS_LLA.X00386100
                VALID VALUES ARE "YES", "NO", OR DEFAULT TO "NO".'      00386400
         AGO     .ENDBYP                                                00386700
.*                                                                      00387000
.BYPASS  ANOP                                                           00387300
&BYPBIT  SETB  1                                                        00387600
.ENDBYP  ANOP                                                           00387900
.*                                                                      00388200
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00388500
.*                                                                      00388800
.*  HANDLE PLIST DESP_FLAGS FIELD FOR GET_ALL FUNCTION                  00388900
.*  CHECK VALID VALUE FROM LIST OF ALLOWED VALUES                       00389000
.*                                                                      00389100
.*  KEYWORD TO CHECK : HIDE                                             00389200
.*  TEST FOR FUNCTION : GET_ALL                                         00389300
.*  HIDE IS OPTIONAL FOR GET_ALL                                        00389400
.*                                                                      00389500
.*  SET &ARGTYP(&IBYPASS) = L IF HIDE IS SPECIFIED                @03a  00389600
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00389700
.*                                                                      00389800
.*                                                                      00389900
         AIF   ('&FUNC' NE 'GET_ALL').ENDHID                      @03a  00390000
.*                                                                      00390100
         AIF   ('&HIDE' EQ    '').ENDHID,                         @03a X00390200
               ('&HIDE' EQ 'YES').HIDEYES,                        @03a X00390300
               ('&HIDE' EQ  'NO').HIDENO                          @03a  00390400
.*                                                                      00390500
&FAIL    SETC  'YES'                                              @03a  00390600
         MNOTE 8,'INVALID VALUE "&HIDE" SPECIFIED FOR HIDE. VALID VALUEX00390700
               S ARE "YES", "NO", OR DEFAULT TO "NO".'            @03a  00390800
         AGO     .ENDHID                                          @03a  00390900
.*                                                                      00391000
.HIDEYES ANOP                                                     @03a  00391100
&HIDEBIT SETB  1                                                  @03a  00391200
.* SET &ARGTYP(&IBYPASS) = L SO THAT &I=&IBYPASS WILL HANDLE THE  @03A  00391300
.* SETTING OF THE DESP_FLAGS                                      @03a  00391400
.HIDENO  ANOP                                                     @03a  00391500
&ARGTYP(&IBYPASS) SETC 'L'                                        @03a  00391600
.ENDHID  ANOP                                                     @03a  00391700
.*                                                                      00391800
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00391900
.*                                                                      00392000
.*                                                                      00392100
.* HANDLE PLIST DESP_FLAGS FIELD FOR  GET_ALL  AND  GET_NAMES FUNCTIONS 00392200
.*                                                                      00392300
.*  SET BYPASS_LLA FLAG (DESP_FLAGS) IF CONCAT AND/OR SUBPOOL           00392400
.*  SPECIFIED AND IF SO, SET &ARGTYP(&IBYPASS) = L                      00392500
.*                                                                      00392600
.*  KEYWORD TO CHECK : CONCAT AND SUBPOOL                               00392700
.*  TEST FOR FUNCTIONS :  GET_ALL, GET_NAMES, GET (NOTE ONLY CONCAT IS  00392800
.*                        NOT SUPPORTED FOR FUNC=GET)                   00392900
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00393000
.*                                                                      00393100
         AIF   ('&FUNC' EQ 'GET').CHKSUB                                00393200
         AIF   (('&FUNC' NE 'GET_ALL')AND                              X00393300
               ('&FUNC' NE 'GET_NAMES')).ENDFLG                         00393400
.*                                                                      00393500
         AIF   ('&CONCAT' EQ '').CHKSUB                                 00393600
&CATBIT  SETB  1                                                        00393700
&ARGTYP(&IBYPASS) SETC 'L'                                              00393800
.CHKSUB  AIF   ('&SUBPOOL' EQ '').ENDFLG                                00393900
&SUBBIT  SETB  1                                                        00394200
&ARGTYP(&IBYPASS) SETC 'L'                                              00394500
.ENDFLG  ANOP                                                           00394800
.*                                                                      00395100
.*  SET BYPASS_LLA FLAG (DESP_FLAGS) IF CONCAT(ALL) SPECIFIED           00395200
.*  AND IF SO, SET &ARGTYP(&IBYPASS) = L                                00395300
.*                                                                      00395400
.*  KEYWORD TO CHECK : CONCAT AND SUBPOOL                               00395500
.*  TEST FOR FUNCTIONS :  GET_ALL, GET_NAMES                            00395600
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00395700
.*                                                                      00395800
         AIF   ('&FUNC' NE 'GET_ALL').ENDCATA                           00395900
.*                                                                      00396000
         AIF   ('&CONCAT' NE 'ALL').ENDCATA                             00396100
&CATALLB SETB  1                                                        00396200
&ARGTYP(&IBYPASS) SETC 'L'                                              00396300
.ENDCATA ANOP                                                           00396400
.*                                                                      00396500
.*cc                                                                    00396600
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00396700
.*                                                                      00396800
.* HANDLE KEYWORD CHECKING FOR FUNC=EXIT NOT DONE BY LOOP1              00396900
.*                                                                      00397000
.*                                                                      00397200
.* VALIDATE KEYWORDS PASSED IN :                                        00397500
.*                       EXIT_SCOPE  = TASK | GLOBAL                    00397800
.*                  AND  EXIT_OPTION = NOREPLACE|REPLACE|DELETE|QUERY   00398100
.*                                                                      00398400
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00398700
.*                                                                      00399000
         AIF   ('&FUNC' NE 'EXIT').ENDEXIT                              00399300
.*                                                                      00399600
.*                                                                      00399900
         AIF   ('&EXIT_SCOPE' EQ '').ENDSCOPE,                         X00400200
               ('&EXIT_SCOPE' EQ 'TASK').ARGTASK,                      X00400500
               ('&EXIT_SCOPE' EQ 'GLOBAL').ARGGLOB                      00400800
.*                                                                      00401100
&FAIL    SETC  'YES'                                                    00401400
         MNOTE 8,'KEYWORD "EXIT_SCOPE" MAY BE SPECIFIED AS "TASK", "GLOX00401700
               BAL" OR DEFAULTED TO "TASK", "&EXIT_SCOPE" IS INVALID.'  00402000
         AGO   .ENDSCOPE                                                00402300
.ARGTASK ANOP                                                           00402600
&ARGVAL(&IEXSCOPE)  SETC  'DESP_EXIT_SCOPE_TASK'                        00402900
         AGO   .ENDSCOPE                                                00403200
.ARGGLOB ANOP                                                           00403500
&ARGVAL(&IEXSCOPE)  SETC  'DESP_EXIT_SCOPE_GLOBAL'                      00403800
.*                                                                      00404100
.ENDSCOPE AIF   ('&EXIT_OPTION' EQ '').ENDOPT,                         X00404400
               ('&EXIT_OPTION' EQ 'NOREPLACE').ARGNOREP,               X00404700
               ('&EXIT_OPTION' EQ 'REPLACE').ARGREP,                   X00405000
               ('&EXIT_OPTION' EQ 'QUERY').ARGQRY,                     X00405300
               ('&EXIT_OPTION' EQ 'DELETE').ARGDEL                      00405600
.*                                                                      00405900
&FAIL    SETC  'YES'                                                    00406200
         MNOTE 8,'KEYWORD "EXIT_OPTION" MAY BE SPECIFIED AS "NOREPLACE"X00406500
               , "REPLACE", "DELETE", OR "QUERY", "&EXIT_OPTION" IS INVX00406800
               ALID.'                                                   00407100
         AGO   .ENDOPT                                                  00407400
.ARGNOREP ANOP                                                          00407700
&ARGVAL(&IEXOPT)  SETC  'DESP_EXIT_OPTION_NOREPLACE'                    00408000
         AGO   .ENDOPT                                                  00408300
.ARGREP  ANOP                                                           00408600
&ARGVAL(&IEXOPT)  SETC  'DESP_EXIT_OPTION_REPLACE'                      00408900
         AGO   .ENDOPT                                                  00409200
.ARGQRY  ANOP                                                           00409500
&ARGVAL(&IEXOPT)  SETC  'DESP_EXIT_OPTION_QUERY'                        00409800
         AGO   .ENDOPT                                                  00410100
.ARGDEL  ANOP                                                           00410400
&ARGVAL(&IEXOPT)  SETC  'DESP_EXIT_OPTION_DELETE'                       00410700
.ENDOPT  ANOP                                                           00411000
.*cc                                                                    00411600
.* IF COMPLETE IS SPECIFIED THEN CHECK WHETHER EXIT_DST AND             00411900
.* EXIT_PREV_DSTPTR PARAMETERS SPECIFIED ARE CONSISTANT WITH            00412200
.* THE EXIT_OPTION SPECIFIED.                                           00412500
.*                                                                      00412800
.* NO CHECKING IF NOT COMPLETE                                          00413100
         AIF   ('&COMPLET' NE 'YES').ENDSTCK                            00413400
.* TEST FOR REPLACE, NOREPLACE OR DELETE                                00413700
         AIF   ('&EXIT_OPTION' EQ 'QUERY').DSTQCK                       00414000
.* FOR REPLACE, NOREPLACE AND DELETE, BOTH EXIT_DST AND                 00414300
.* EXIT_PREV_DSTPTR MUST BE SPECIFIED                                   00414600
         AIF   (('&EXIT_DST' NE '') AND                                *00414900
               ('&EXIT_PREV_DSTPTR' NE '')).ENDSTCK                     00415200
&FAIL    SETC  'YES'                                                    00415500
         MNOTE 8,'BOTH "EXIT_DST" AND "EXIT_PREV_DSTPTR" ARE REQUIRED K*00415800
               EYWORDS WHEN "EXIT_OPTION" SPECIFIES "NOREPLACE", "REPLA*00416100
               CE", OR "DELETE".'                                       00416400
         AGO   .ENDSTCK                                                 00416700
.DSTQCK  ANOP                                                           00417000
.* COMPLETE IS SPECIFIED, AND EXIT_OPTION=QUERY...EXIT_PREV_DSTPTR MUST 00417300
.* BE SPECIFIED.                                                        00417600
         AIF   ('&EXIT_PREV_DSTPTR' NE '').ENDSTCK                      00417900
&FAIL    SETC  'YES'                                                    00418200
         MNOTE 8,'KEYWORD "EXIT_PREV_DSTPTR" IS REQUIRED WHEN "EXIT_OPT*00418500
               ION" SPECIFIES "QUERY".'                                 00418800
.ENDSTCK ANOP                                                           00419100
.* IF EXIT_OPTION=QUERY IS SPECIFIED, EXIT_DST IS INVALID               00419400
         AIF   (('&EXIT_OPTION' NE 'QUERY') OR                         *00419700
               ('&EXIT_DST' EQ '')).DSTQCK1                             00420000
&FAIL    SETC  'YES'                                                    00420300
         MNOTE 8,'KEYWORD "EXIT_DST" IS INVALID WHEN "EXIT_OPTION SPECI*00420600
               FIES "QUERY".'                                           00420900
.DSTQCK1 ANOP                                                           00421200
.*                                                                      00421500
.ENDEXIT ANOP                                                           00421600
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00421800
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00422100
.*                                                                      00422400
.* RETCODE / RSNCODE KEYWORD VALIDITY CHECKING                          00422700
.*                                                                      00423000
.* IF MF=L THEN RETCODE AND RSNCODE CAN NOT BE SPECIFIED.               00423300
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00423600
.*                                                                      00423900
.CHKRCS  LCLA  &RCNUM                                                   00424200
         AIF   (('&RETCODE' EQ '') AND ('&RSNCODE' EQ '')).ENDRCS       00424500
         AIF   ('&MF1' NE 'L').CHKRET                                   00424800
&FAIL    SETC  'YES'                                                    00425100
         MNOTE 8,'OPTIONAL KEYWORDS "RETCODE" AND/OR "RSNCODE"  CANNOT X00425400
               BE SPECIFIED FOR "MF=L", IF DESIRED, SPECIFY ON MF=E.'   00425700
         AGO   .ENDRCS                                                  00426000
.CHKRET  AIF   ('&RETCODE' EQ '').CHKRSN                                00426300
         AIF   (N'&RETCODE EQ 1).CHKRSN                                 00426600
&FAIL    SETC  'YES'                                                    00426900
&RCNUM   SETA  N'&RETCODE                                               00427200
         MNOTE 8,'EXACTLY ONE ARGUMENT ALLOWED FOR KEYWORD "RETCODE",  X00427500
               &RCNUM WERE SPECIFIFED.'                                 00427800
.CHKRSN  AIF   ('&RSNCODE' EQ '').ENDRCS                                00428100
         AIF   (N'&RSNCODE EQ 1).ENDRCS                                 00428400
&FAIL    SETC  'YES'                                                    00428700
&RCNUM   SETA  N'&RETCODE                                               00429000
         MNOTE 8,'EXACTLY ONE ARGUMENT ALLOWED FOR KEYWORD "RSNCODE",  X00429300
               &RCNUM WERE SPECIFIFED.'                                 00429600
.ENDRCS  ANOP                                                           00429900
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00430200
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00430500
.* DESERV MACRO KEYWORD VALIDITY CHECKING DONE.                         00430800
.* IF ERRORS EXIST EXIT. ELSE CONTINUE AND ALL OTHER ERROR              00431100
.* MESSAGES WILL BE FROM THE ASSEMBLER.                                 00431400
.*                                                                      00431700
         AIF  ('&FAIL' EQ 'YES').ENDMAC                                 00432000
.*                                                                      00432300
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00432600
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00432900
.*cc                                                                    00433200
.*                                                                      00433500
.*  GEN BRANCH CODE FOR MF=S OR MF=E, GEN PLIST HEADER FOR MF=S OR MF=L 00433800
.*  GEN FUNC CODE                                                       00434100
.*                                                                      00434400
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00434700
.GEN     ANOP                  START GENERATING CODE                    00435000
         AIF   ('&MF1' NE 'E').GENSL      =S OR =L                      00435300
.* HANDLE MF = E, REGISTER 1 WAS SET TO PLIST ADDRESS DURING MF         00435600
.* KEYWORD CHECKING, &LABNAM HANDLED THEN TOO                           00435900
         MVI   DESP_FUNC-DESP(1),&FUNCODE                               00436200
         AGO   .GENEND                                                  00436500
.* HANDLE MF = S                                                        00436800
.GENSL   AIF   ('&MF1' NE 'S').GENHEAD    MF=L SKIP BAS                 00437100
         CNOP  0,4                     ALIGNMENT                        00437400
&LABNAM  BAS   1,*+DESP_LEN_IV+4       BRANCH AROUND PARAM LIST         00437700
         DC    CL8'IGWDESP '           PARAMETER LIST ID                00438000
         AGO   .CONTS                  SKIP MF=L &LABNAM                00438300
.* HANDLE MF = L OR S                                                   00438600
.GENHEAD DS    0F                      ALIGNMENT                        00438900
&LABNAM  DC    CL8'IGWDESP '           PARAMETER LIST ID                00439200
.CONTS   ANOP                                                           00439500
         DC    AL4(DESP_LEN_IV)        PARAMETER LIST LENGTH            00439800
         DC    AL1(DESP_LEV_IV)        PARAMETER LIST LEVEL             00440100
         DC    XL3'0'                  RESERVED                         00440400
.* SET FUNC CODE                                                        00440700
         AIF ('&FUNC' EQ '').LNOFUNC  MF=L,NO KEYWORDS,NO FUNC          00441000
         DC    AL1(&FUNCODE)           FUNCTION CODE                    00441300
         AGO   .CONTGEN                                                 00441600
.LNOFUNC DC    XL1'0'                    FUNCTION CODE                  00441900
.CONTGEN DC    XL7'0'                  RESERVED                         00442200
.GENEND  ANOP                                                           00442500
.*                                                                      00442800
.*cc                                                                    00443100
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00443400
.*                                                                      00443700
.*  LOOP 2 - "BUILD INLINE PLIST LOOP"                                  00444000
.*                                                                      00444300
.*  -  DONE FOR MF=L OR MF=S                                            00444600
.*  -  ENTERED IF NO PREVIOUS KEYWORD ERRORS                            00444900
.*  -  ISSUE DC XLn'0' FOR KEYWORDS THAT DO NOT EXIST                   00445200
.*  -  ISSUE DC ASSEMBLER STATEMENT FOR KEYWORDS THAT EXIST AND         00445500
.*     ARE &ARGTYP (ARGUMENT TYPES SETUP IN LOOP1) OF :                 00445800
.*        'L' - VALID LIST VALUE                                        00446100
.*        'N' - SELF DEFINING TERMS                                     00446400
.*        'D' - RX TYPE, ASSUMED TO BE NON-EXTERNAL                     00446700
.*  -  USE &FIELD TO DETERMINE SIZE OF PLIST FIELD                      00447000
.*                                                                      00447300
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00447600
.*                                                                      00447900
         AIF ('&MF1' EQ 'E').LOOP3     SKIP PLIST BUILD                 00448200
&FILLER  SETC '            '        TO PUSH PLIST COMMENT TO RIGHT      00448500
&I       SETA  0                                                        00448800
.RELOOP2 ANOP                                                           00449100
&I       SETA  &I+1                                                     00449400
         AIF   ('&I' GT '&IMAX').ENDLOP2       EXIT LOOP 2              00449700
.* SET &FIELD TO CHAR FOR THIS KEYWORD FIELD TYPE FROM &FT STRING       00450000
&FIELD   SETC  '&FT'(&I,1)        GET THIS FIELD TYPE FROM &FT STRING   00450300
.*                                                                @03a  00450400
.* SKIP &I = &IHIDE. HIDE IS HANDLED BY &I = &IBYPASS IN SETTING  @03a  00450500
.* DESP_FLAGS                                                     @03a  00450600
.*                                                                @03a  00450700
         AIF   (&I EQ &IHIDE).RELOOP2                             @03a  00450800
.*                                                                      00450900
.*                                                                      00451000
.* HANDLE ARGUMENT TYPE OF LIST VALUE 'L'                               00451200
.*                                                                      00451500
         AIF   ('&ARGTYP(&I)' NE 'L').DOA                               00451800
         AIF   ('&PARMNAM(&I)' EQ '"BYPASS_LLA"').DOBYP                 00452100
         DC    AL1(&ARGVAL(&I))&FIELDNAM(&I)                            00452400
         AGO   .RELOOP2                                                 00452700
.*     HANDLE SPECIAL PLIST FIELD DESP_FLAGS CASE                       00453000
.*     &DESPFLG SETUP AFTER LOOP1                                       00453300
.DOBYP   DC    BL1'&BYPBIT&CATBIT&SUBBIT.0&CATALLB.&HIDEBIT.00'&FIELDNAX00453500
               M(&I)                                                    00453700
         AGO   .RELOOP2                                                 00453900
.*                                                                      00454200
.* HANDLE ARGUMENT TYPE OF RX ADDRESS 'A'                               00454500
.*                                                                      00454800
.DOA     AIF   ('&ARGTYP(&I)' NE 'A').DOS                               00455100
.*                                                                      00455400
         DC    A(&ARGVAL(&I))&FIELDNAM(&I)                              00455700
         AGO   .RELOOP2                                                 00456000
.*                                                                      00456300
.* HANDLE ARGUMENT TYPE OF SYMBOL 'S'                                   00456600
.*                                                                      00456900
.DOS     AIF   ('&ARGTYP(&I)' NE 'S').DOREST                            00457200
         AIF   ('&FIELD' NE 'F').DOSSM                                  00457500
.*                                                                      00457800
         DC    A(&ARGVAL(&I))&FIELDNAM(&I)                              00458100
         AGO   .RELOOP2                                                 00458400
.*                                                                      00458700
.* DO SMALLER FIELD TYPE                                                00459000
.DOSSM   ANOP                                                           00459100
         AIF   ((&I EQ &ICONCAT) AND ('&CONCAT' EQ 'ALL')).MFLCONC      00459200
         DC    AL1(&ARGVAL(&I))&FIELDNAM(&I)                            00459300
         AGO   .RELOOP2                                                 00459400
.MFLCONC ANOP                 CONCAT(ALL) SPECIFIED FOR MF=L OR MF=S    00459500
         DC    AL1(0)&FIELDNAM(&I)                                      00459600
         AGO   .RELOOP2                                                 00459700
.*                                                                      00459900
.* ELSE ARGUMENT WAS NOT SPECIFIED OR IF WAS FOR MF=S &                 00460200
.* WILL BE HANDLED BY CODE GENNED IN LOOP3                              00460500
.*                                                                      00460800
.DOREST  AIF   (('&FIELD' NE 'A') AND ('&FIELD' NE 'F')).DOSMALL        00461100
         DC    XL4'0'&FILLER.&FIELDNAM(&I)                              00461400
         AGO   .RELOOP2                                                 00461700
.*                                                                      00462000
.* DO SMALLER FIELD TYPE                                                00462300
.DOSMALL DC    XL1'0'&FILLER.&FIELDNAM(&I)                              00462600
         AGO   .RELOOP2                                                 00462900
.ENDLOP2 ANOP                                                           00463200
.*                                                                      00463500
.*cc                                                                    00463800
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00464100
.*                                                                      00464400
.*  LOOP 3 - "FILL IN PLIST LOOP"                                       00464700
.*                                                                      00465000
.*  -  FOR MF=E OR MF=S                                                 00465300
.*  -  HANDLE REMOTE PLIST (MF=E) AND IN-LINE PLIST (MF=S)              00465600
.*  -  ENTERED IF NO PREVIOUS KEYWORD ERRORS                            00465900
.*  -  MOVE KEYWORD ADDRESSES OR VALUES INTO PLIST                      00466200
.*                                                                      00466500
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00466800
.*                                                                      00467100
.LOOP3   AIF   ('&MF1' EQ 'L').ENDLOP3                                  00467400
&I       SETA  0                                                        00467700
.RELOOP3 ANOP                                                           00468000
&I       SETA  &I+1                                                     00468300
         AIF   ('&I' GT '&IMAX').ENDLOP3       EXIT LOOP 3              00468600
.* SET &FIELD TO CHAR FOR THIS KEYWORD FIELD TYPE FROM &FT STRING @03C  00468900
&FIELD   SETC  '&FT'(&I,1)        GET THIS FIELD TYPE FROM &FT STRING   00469200
.*                                                                @03a  00469300
.* SKIP &I = &IHIDE. HIDE IS HANDLED BY &I = &IBYPASS.            @03a  00469400
.*                                                                @03a  00469500
         AIF   (&I EQ &IHIDE).RELOOP3                             @03a  00469600
.*                                                                      00469700
.* HANDLE ARGUMENT TYPE OF REGISTER 'R'                                 00469800
.*                                                                      00470100
.*                                                                      00470400
         AIF   ('&ARGTYP(&I)' NE 'R').DOA3                              00470700
         AIF   (('&FIELD' NE 'A') AND ('&FIELD' NE 'F')).DORSM3         00471000
         ST    &ARGVAL(&I),&OFFSET(&I)-DESP(0,1)                        00471300
         AGO   .RELOOP3                                                 00471600
.*    DO SMALLER FIELD TYPE                                             00471900
.DORSM3  STC   &ARGVAL(&I),&OFFSET(&I)-DESP(0,1)                        00472200
         AGO   .RELOOP3                                                 00472500
.*                                                                      00472800
.* HANDLE ARGUMENT TYPE OF RX ADDRESS 'A'                               00473100
.*                                                                      00473400
.*                                                                      00473700
.DOA3    AIF   ('&ARGTYP(&I)' NE 'A').DOS3                              00474000
.*    CHECK IF ALREADY HANDLED IN LOOP2                           @03A  00474100
         AIF   ('&MF1' EQ 'S').RELOOP3                            @03A  00474200
.*                                                                      00474300
.*    HANDLE FIELD TYPE OF ADDRESS                                      00474600
.*    NO SMALL ADDRESS FIELD TO HANDLE                                  00474900
.*                                                                      00475200
         LA    15,&ARGVAL(&I)                                           00475500
         ST    15,&OFFSET(&I)-DESP(0,1)                                 00475800
         AGO   .RELOOP3                                                 00476100
.*                                                                      00476400
.* HANDLE ARGUMENT TYPE OF SYMBOL, 'S'                                  00476700
.*                                                                      00477000
.*                                                                      00477300
.DOS3    AIF   ('&ARGTYP(&I)' NE 'S').DOL3                              00477600
.*    CHECK IF ALREADY HANDLED IN LOOP2                                 00477900
         AIF   ('&MF1' EQ 'S').RELOOP3                                  00478200
         AIF   ('&FIELD' NE 'F').DOLSM3                                 00478500
.*                                                                      00478800
.*    HANDLE FIELD TYPE OF VALUE                                        00479100
.*                                                                      00479400
         LA    15,&ARGVAL(&I)                                           00479700
         ST    15,&OFFSET(&I)-DESP(0,1)                                 00480000
         AGO   .RELOOP3                                                 00480300
.*    DO SMALLER VALUE FIELD TYPE.                                      00480400
.*    IF THIS IS THE CONCAT PARM AND CONCAT(ALL) WAS SPECIFIED,   @L1A  00480500
.*    THIS WAS HANDLED WITH THE FLAGS (I.E. WHTH &I EQ &IBYPASS). @L1A  00480600
.DOLSM3  AIF   (('&I' EQ '&ICONCAT') AND                               *00480700
               ('&CONCAT' EQ 'ALL')).RELOOP3                       @L1A 00480800
         MVI   &OFFSET(&I)-DESP(1),&ARGVAL(&I)                          00480900
         AGO   .RELOOP3                                                 00481200
.*                                                                      00481500
.* HANDLE ARGUMENT TYPE OF L, ARGUMENT IS VALUE FROM LIST OF VALUES     00481800
.*                                                                      00482100
.*                                                                      00482400
.DOL3    AIF   ('&ARGTYP(&I)' NE 'L').RELOOP3                           00482700
.*    CHECK IF ALREADY HANDLED IN LOOP2                                 00483000
         AIF   ('&MF1' EQ 'S').RELOOP3                                  00483300
         AIF   ('&PARMNAM(&I)' EQ '"BYPASS_LLA"').DOBYP3                00483600
.*                                                                      00483900
         MVI   &OFFSET(&I)-DESP(1),&ARGVAL(&I)                          00484200
         AGO   .RELOOP3                                                 00484500
.*     HANDLE SPECIAL PLIST FIELD DESP_FLAGS CASE                       00484800
.*     &DESPFLG SETUP AFTER LOOP1                                       00485100
.*                                                                 @03a 00485200
.*     ONLY DO THE OI INSTRUCTION IF THERE IS SOMETHING TO TURN ON @03a 00485300
.DOBYP3  AIF   ((&BYPBIT EQ 0)AND(&CATBIT EQ 0)AND(&CATALLB EQ 0)AND(&S+00485450
               UBBIT EQ 0)AND(&HIDEBIT EQ 0)).NOBYP3               @06C 00485500
         OI    &OFFSET(&I)-DESP(1),B'&BYPBIT&CATBIT&SUBBIT.0&CATALLB.&H+00485600
               IDEBIT.00'                                               00485700
.NOBYP3  ANOP                                                      @03A 00485800
.*   BYPASS_LLA, CONCAT_ALL, AND HIDE ARE THE ONLY BITS OF DESP_FLAGS   00485900
.*   THAT CAN BE TURNED OFF                                        @03C 00486000
&BYPBIT  SETB  1                INITIALIZE TO "DON'T CHANGE"       @L1A 00486100
&CATALLB SETB  1                INITIALIZE TO "DON'T CHANGE"       @L1A 00486200
&HIDEBIT SETB  1                INITIALIZE TO "DON'T CHANGE"       @0CA 00486300
         AIF   (('&BYPASS_LLA' EQ '') OR ('&BYPASS_LLA' EQ 'YES')).TEST+00486400
               CAT             BYPASSLLA NOT CODED OR CODED AS YES @L1A 00486500
&BYPBIT  SETB  0                INDICATE BYPASS_LLA(NO)            @L1A 00486600
.*                                                                      00486700
.TESTCAT AIF   (('&CONCAT' EQ '') OR ('&CONCAT' EQ 'ALL')).TESTHID     +00486800
                               CONCAT NOT CODED OR CODED AS ALL    @03C 00486900
&CATALLB SETB  0                INDICATE CONCAT(ALL) NOT CODED.    @L1A 00487000
.*                                                                      00487100
.TESTHID AIF   (('&HIDE' EQ '') OR ('&HIDE' EQ 'YES')).TESTNI          +00487200
                               HIDE NOT CODED OR CODED AS YES      @03A 00487300
&HIDEBIT SETB  0                INDICATE HIDE(NO)                  @03A 00487400
.TESTNI  AIF   ((&BYPBIT EQ 1)AND(&CATALLB EQ 1)AND(&HIDEBIT EQ 1)).REL+00487500
               OOP3                                                     00487600
         NI    &OFFSET(&I)-DESP(1),B'&BYPBIT.111&CATALLB.&HIDEBIT.11'   00487700
         AGO   .RELOOP3                                            @L1A 00487800
.ENDLOP3 ANOP                                                           00487900
.*                                                                      00488000
.*cc                                                                    00488100
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00488200
.* GEN CODE TO PC TO DESERV,                                            00488400
.* ON RETURN FROM PC CHECK RETCODE AND RSNCODE KEYWORDS                 00488700
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00489000
.*                                                                      00489300
.*                                                                      00489600
.CHKINVO ANOP                                                           00489900
         AIF   ('&INVOC' NE 'YES').DORCS                                00490200
         L     15,16(,0)               CVT                              00490500
         L     15,1216(,15)            DFA                              00490800
         L     15,44(,15)                                               00491100
         L     15,84(,15)              DESERV PC                        00491400
         PC    0(15)                                                    00491700
.*                                                                      00492000
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00492300
.* GEN RET/RSNCODE CODE                                                 00492600
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00492900
.*                                                                      00493200
.DORCS   AIF   (('&RETCODE' EQ '') AND ('&RSNCODE' EQ '')).ENDMAC       00493500
.*                                                                      00493800
.*   HANDLE RETCODE                                                     00494100
.*                                                                      00494400
         AIF   ('&RETCODE' EQ '').DORSN                                 00494700
.*              CHECK IF PARENS, SIGNIFING REGISTER                     00495000
         AIF   ('&RETCODE' EQ '&RETCODE(1)').DORTRX                     00495300
         ST    15,0(,&RETCODE)                                          00495600
         AGO   .DORSN                                                   00495900
.DORTRX  ST    15,&RETCODE                                              00496200
.*                                                                      00496500
.*     HANDLE REASON CODE                                               00496800
.*                                                                      00497100
.DORSN   AIF   ('&RSNCODE' EQ '').ENDMAC                                00497400
.*              CHECK IF PARENS, SIGNIFING REGISTER                     00497700
         AIF   ('&RSNCODE' EQ  '&RSNCODE(1)').DORSRX                    00498000
         ST    0,0(,&RSNCODE)                                           00498300
         AGO   .ENDMAC                                                  00498600
.DORSRX  ST    0,&RSNCODE                                               00498900
.*                                                                      00499200
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  00499500
.*                                                                      00499800
.ENDMAC  ANOP                                                           00500100
.*                                                                      00500400
         MEND                                                           00500700
**/                                                                     00501000
*/********************************************************************/ 00501300
*/* INVOKE THE INTERNAL PL/AS VERSION OF THE MACRO                   */ 00808000
*/********************************************************************/ 29550000
* %DESERV: MACRO                                                        29600000
*    KEYS(MF,FUNC,RETCODE,RSNCODE,AREA,AREAPTR,BYPASS_LLA,CONCAT,       29650000
*            C370LIB,HIDE,SYSTEM_DCB,SMDE,                              29675000
*            CONN_ID,CONN_INTENT,DCB,DE_LIST,ENTRY_GAP,MEM_DATA,NAME,   29700000
*            NAME_LIST,OPTION,PDSDE,SUBPOOL,DEB,                        29759990
             MEMBER_COUNTS);                                            29769980
* ANS ('?' || MACLABEL || ' DESERVP ' || MACLIST || MACKEYS || ';');    29800000
*                                                                       29850000
* %END DESERV;                                                          29900000
