*                                                                       00050000
* %DCL IGVCAUB_INCLUDED CHAR EXT;                                       00100000
* %DEACTIVATE IGVCAUB_INCLUDED;                                         00150000
* %IF IGVCAUB_INCLUDED = '' %THEN                                       00200000
* %DO;                                                                  00250000
*/* Macro made bi-lingual on 92210. CBGEN compile date 92093         */ 00300000
*% /*                                                                   00350000
         MACRO                                                          00400000
         IGVCAUB &DSECT=YES,&LIST=YES,&CAUB=YES                         00450000
         GBLC  &IGVCAUB_INCLUDED                                        00500000
         GBLC  &ZCBPRINT                                                00550000
&IGVCAUB_INCLUDED SETC 'YES'                                            00600000
 TITLE   '&SYSECT  IGVCAUB - Common Area User Block                    *00650000
                    '                                                   00700000
**/ IGVCAUB_1:;                                                         00750000
*/* START OF SPECIFICATIONS ******************************************  00800000
*                                                                       00850000
* IGVCAUB      Common Area User Block.                                  00900000
*                                                                       00950000
*01* DESCRIPTIVE NAME:  Common Area User Block                          01200000
*                                                                       01225000
*02*    ACRONYM:  CAUB                                                  01250000
*                                                                       01300000
*01* MACRO-NAME:  IGVCAUB                                               01350000
*                                                                    */ 01359300
*/*01* PROPRIETARY STATEMENT=                                        */ 01368600
*/***PROPRIETARY_STATEMENT********************************************/ 01377900
*/*                                                                  */ 01387200
*/*                                                                  */ 01396500
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 01405800
*/* THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      */ 01415100
*/* 5695-047 (C) COPYRIGHT IBM CORP. 1992                            */ 01424400
*/* SEE COPYRIGHT INSTRUCTIONS                                       */ 01433700
*/*                                                                  */ 01443000
*/* STATUS= HBB4430                                                  */ 01452300
*/*                                                                  */ 01461600
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 01470900
*/*                                                                     01480200
*01* DSECT NAME: CAUB                                                   01489500
*                                                                       01500000
*01* COMPONENT:  Virtual Storage Manager (SC1CH)                        01550000
*                                                                       01600000
*01* EYE-CATCHER:  CAUB                                                 01650000
*02*    OFFSET:  8                                                      01700000
*02*    LENGTH:  4                                                      01750000
*                                                                       01800000
*01* STORAGE ATTRIBUTES:                                                01850000
*02*    SUBPOOL:  245                                                   01900000
*02*    KEY:  0                                                         01950000
*02*    RESIDENCY:  Above 16M line                                      02000000
*                                                                       02050000
*01* SIZE:                                                              02100000
*      CAUB -- X'0048' bytes                                            02150000
*                                                                       02200000
*01* CREATED BY:                                                        02250000
*02*    IGVGCAS (VSM address space creation module).                    02300000
*02*    IEAIPL04 (VSM IPL Resource Initialization Module).              02350000
*02*    IGVSJOBI (VSM Job start resource manager).                      02400000
*                                                                       02450000
*01* POINTED TO BY:                                                     02500000
*       VAB_CAUB                                                        02550000
*       VAB_AS_CAUB                                                     02600000
*       GDASCAUB                                                        02650000
*       GDAFCAUB                                                        02700000
*       GDALCAUB                                                        02750000
*       CAUB_Unowned_Next                                               02800000
*       CAUB_Unowned_Prev                                               02850000
*                                                                       02900000
*       Details are as follows:                                         02910000
*                                                                       02920000
*        Address Space CAUB is pointed to by:                           02930000
*          ASCBASSB -> ASSBVAB -> VAB_AS_CAUB -> CAUB                   02940000
*                                                                       02950000
*        System CAUB is pointed to by:                                  02960000
*          GDASCAUB -> CAUB                                             02970000
*                                                                       02980000
*        ASCBASSB -> ASSBVAB -> VAB_CAUB points to:                     02990000
*         - Address Space CAUB                                          03000000
*           While no job is running                                     03010000
*         - Job CAUB                                                    03020000
*           While a job is running                                      03030000
*         - System CAUB                                                 03040000
*           After address space end but before the ASCB                 03050000
*           is re-initialized                                           03060000
*                                                                       03070000
*        Unknown CAUB (aka "no detail" CAUB) is pointed to by:          03080000
*          GDAUCAUB -> CAUB                                             03090000
*                                                                       03100000
*        CAUBs on the Unowned Queue (aka "owner gone" CAUBs)            03106600
*        are anchored by:                                               03113200
*          GDAFCAUB - Address of 1st CAUB on the unowned queue.         03120000
*                     (GDAFCAUB has the address of itself when the      03130000
*                     queue is empty.)                                  03140000
*          GDALCAUB - Address of last CAUB on the unowned queue.        03150000
*                     (GDALCAUB is not valid and should not be used     03160000
*                     when the queue is empty.)                         03170000
*                                                                       03180000
*02*     Unowned Queue is double headed, double threaded, circular.     03190000
*                                                                       03200000
*01* SERIALIZATION:                                                     03250000
*02*  When writing to the CAUB, VSM uses the VSMFIX lock.               03287500
*                                                                       03325000
*02*  When monitor programs read the CAUB, it would be best to do       03352000
*     so with no serialization.  (This is because holding the lock      03379000
*     could impact system performance.)  Note that this means that      03410500
*     the CAUB could be freemained while being read.  The CAUB may      03442000
*     also be put on the queue of free CAUBs while being read.          03473500
*     Monitors will need to handle this (e.g., a recovery routine       03505000
*     could catch the reference to a freemained CAUB, and               03536500
*     encountering a CAUB on the free queue could be taken as the       03568000
*     end of the queue being run.)  A CAUB on the free queue has a      03595000
*     CAUB_ID field that is not 'CAUB'.                                 03622000
*                                                                       03650000
*01* FUNCTION:                                                          03700000
*     Lists the number of bytes of common storage that are 'in use'.    03750000
*     (Bytes that have been given to a caller of GETMAIN or STORAGE     03800000
*     OBTAIN are 'in use'.)                                             03850000
*                                                                       03851300
*02*  The CAUB_Level field will change if the CAUB changes.             03852600
*     Users should interrogate the CAUB_Level field, and ignore         03853900
*     CAUBs with an unrecognized level.                                 03856500
*                                                                       03859100
*02*  There are 5 types of CAUBs:                                       03860400
*                                                                       03861700
*02*   -*- The job CAUB is a CAUB that describes storage owned by a     03863000
*          job. In general, a job owns all the common storage that is   03864300
*          GETMAINed when the address space in which the job runs is    03865600
*          the home address space.  (See the "Owner" keyword on the     03866200
*          Getmain, Storage and Cpool macros for information about      03866800
*          when the home address space is not the owner.)               03867400
*                                                                       03868200
*02*   -*- The address space CAUB describes storage obtained by an      03869500
*          initiator address space when it is between jobs. For         03870800
*          example, storage that is GETMAINed between the end of a      03872100
*          batch job and the beginning of the next batch job is         03873400
*          collected in the address space CAUB.                         03874700
*                                                                       03876000
*02*   -*- The system CAUB describes storage owned by the system. The   03877300
*          system owns common storage that was GETMAINed during times   03878600
*          when it would be impossible or misleading to assign          03879900
*          ownership to the job running in the home address space.      03881200
*          For example, storage obtained during IPL, before any         03882500
*          address spaces exist, is owned by the system. In addition,   03883800
*          some operating system components explicitly indicate that    03885100
*          the storage they obtain should be owned by the system.       03886400
*                                                                       03887700
*02*   -*- The "No Detail" CAUB describes common storage that was in    03889000
*          use at the instant CSA tracking was stopped or started.      03890300
*                                                                       03891600
*02*   -*- An "Owner Gone" CAUB describes storage owned by a job that   03892900
*          has terminated.  These CAUBs are linked together on the      03894200
*          "unowned" queue.                                             03895500
*                                                                       03896800
*                                                                       03900000
*01* METHOD OF ACCESS:                                                  03950000
*02*  PL/AS:                                                            04000000
*      -*- CAUB is based on CAUBPTR.                                    04050000
*      -*- Setting the macro variable %ZCBPRINT to 'NO' suppresses the  04100000
*          printing of the CAUB.                                        04150000
*      -*- Setting the macro variable %IGVCAUB_LIST to 'NO' suppresses  04200000
*          the printing of the CAUB.                                    04250000
*02*  Assembler                                                         04300000
*      -*- Specifying IGVCAUB DSECT=NO suppresses the DSECT statement.  04350000
*      -*- Specifying IGVCAUB LIST=NO suppresses the printing of        04400000
*          the CAUB mapping.                                            04450000
*      -*- Specifying IGVCAUB CAUB=NO suppresses the generation of the  04500000
*          the CAUB mapping.                                            04550000
*      -*- Macro variable ZCBPRINT allows the printing of the CAUB to   04600000
*          be suppressed by another macro.                              04650000
*                                                                       04700000
*                                                                       04750000
*01* DELETED BY:                                                        04800000
*     IGVGCAS  (VSM Address space termination resource manager)         04850000
*     IGVSJOBT (VSM Job termination resource manager)                   04900000
*                                                                       04950000
*01* STORAGE ESTIMATE:                                                  05000000
*     -*- 1 per system, plus                                            05050000
*     -*- 1 per active address space, plus                              05100000
*     -*- 1 per job that owned some common storage when it terminated.  05150000
*                                                                       05200000
*                                                                       05250000
*01* NOTES:                                                             05300000
*     The CAUB is a product sensitive programming interface because     05333300
*     it is used for monitoring and requires knowledge of MVS           05383300
*     internals.                                                        05433300
*                                                                       05650000
*     A tool was used to make this macro bilingual.  The tool created   05700000
*     the macro variable IGVCAUB_INCLUDED.  Its function is to cause    05750000
*     the CAUB to expand only once, regardless of how many times it     05800000
*     was %INCLUDED.  The tool added some other macro logic that is     05850000
*     described in the 'Method of Access' section.                      05900000
*                                                                       05950000
*                                                                       07100000
*      -*- For some types of address spaces (e.g., started              07150000
*          tasks, TSO logons), only 1 job runs in the address space.    07200000
*                                                                       07382400
* ****************                                                      07383300
*                                                                       07384200
*  The allocated counts in the GDA (e.g., GDA_CSA_ALLOC)                07385100
*  will ONLY match the sum of the CAUB counts (e.g., CAUB_CSA_BELOW)    07386000
*  (job, address space, system, unowned CAUBs) if tracking has been     07386900
*  on since IPL.                                                        07387800
*                                                                       07388700
*  If tracking is ever OFF, the difference between the GDA field        07389600
*  and the sum in the CAUBs represents the amount of storage that       07390500
*  was allocated at the time tracking was turned back on that is still  07391400
*  allocated.                                                           07392300
*                                                                       07393200
*  And the difference between the value in the Unknown CAUB and         07394100
*  the difference above represents the amount of storage that was       07395000
*  allocated at the time tracking was turned back on that was           07395900
*  subsequently freed.                                                  07396800
*                                                                       07397700
*                                                                       07398600
* CHANGE ACTIVITY =                                                     07400000
*        $L0=TCSAU  ,HBB4430,911101,PDF5:  Track CSA/SQA use by Job     07450000
*        $L1=TCSAU  ,HBB4430,920218,PDF5:  ShowHdr, comment changes.    07466600
*        $D1=DKB0031,HBB4430,920318,PDXB:  Data Incomplete              07483200
*                                                                       07500000
* END OF SPECIFICATIONS **********************************************/ 07550000
*% /*                                                                   07600000
         AIF   ('&ZCBPRINT' EQ 'NO').P1                                 07650000
         AIF   ('&LIST' EQ 'YES').P2                                    07700000
.P1      ANOP                                                           07750000
         PUSH  PRINT                                                    07800000
         PRINT OFF                                                      07850000
.P2      ANOP                                                           07900000
         AIF   ('&CAUB' EQ 'NO').L0002                                  07950000
         AIF   ('&DSECT' EQ 'YES').L0003                                08000000
         AIF   ('&CAUB' NE 'YES').L0002                                 08050000
CAUB     DS    0D        Common area user block.                        08100000
         AGO   .L0004                                                   08150000
.L0003   ANOP                                                           08200000
CAUB     DSECT ,         Common area user block.                        08250000
.L0004   ANOP                                                           08300000
CAUB_HEADER DS 0CL0052   Header for CAUB_Proper. (CAUB_Proper has the  *08350000
                         counts, CAUB_Header has owner information.)    08400000
*                                                                       08450000
*      ***************************************************************  08500000
*      *                                                             *  08550000
*      * Link fields pertaining to the unowned queue. CAUBs are put  *  08600000
*      * on this queue when a job or address space terminates holding*  08650000
*      * some common storage. These fields are the first thing in the*  08700000
*      * CAUB because that makes queue manipulation a little easier. *  08750000
*      *                                                             *  08800000
*      ***************************************************************  08850000
*                                                                       08900000
*                                                                       08950000
CAUB_UNOWNED_NEXT DS 1AL4 Address of the next CAUB on the 'unowned'    *09000000
                         queue.                                         09050000
CAUB_UNOWNED_PREV DS 1AL4 Address of the previous CAUB on the          *09100000
                         'unowned' queue. This is double threaded to   *09150000
                         make it easy to remove elements from the      *09200000
                         middle.                                        09250000
*                                                                       09300000
*      ***************************************************************  09350000
*      *                                                             *  09400000
*      * Fields that identify this control block as a CAUB.          *  09450000
*      *                                                             *  09500000
*      ***************************************************************  09550000
*                                                                       09600000
*                                                                       09650000
CAUB_ID  DS    1CL0004   Char string 'CAUB' - eyecatcher.               09700000
CAUB_LEVEL DS  1FL2      Indicates the level of the CAUB. The value    *09750000
                         can be used to determine how the CAUB is      *09800000
                         mapped. CAUB_LEVEL_K1 indicates the HBB4430   *09850000
                         level of this macro. Equate value             *09900000
                         CAUB_LEVEL_KCURRENT can be used to determine  *09950000
                         the most recent update level.                  10000000
         DS    1CL0002   Reserved                                       10050000
*                                                                       10150000
*      ***************************************************************  10200000
*      *                                                             *  10250000
*      * Fields that identify the job that owns some common storage. *  10300000
*      *                                                             *  10350000
*      ***************************************************************  10400000
*                                                                       10450000
*                                                                       10500000
*                                                                       10550000
*      ***************************************************************  10600000
*      *                                                             *  10650000
*      * Part of the process of completing a common area GETMAIN     *  10700000
*      * requires that VSM decide which CAUB describes the job doing *  10750000
*      * the GETMAIN. Which CAUB is chosen depends on how the GETMAIN*  10800000
*      * was coded. The coder can choose to have VSM update the      *  10850000
*      * counts in the CAUB associated with the home, primary or     *  10900000
*      * secondary address space. The coder can also specify that VSM*  10950000
*      * use the 'system CAUB', which is associated with no address  *  11000000
*      * space.                                                      *  11050000
*      *                                                             *  11100000
*      ***************************************************************  11150000
*                                                                       11200000
*                                                                       11250000
CAUB_CALLERID DS 0CL0036                                                11300000
CAUB_ASN_WORD DS 0CL0004 Whole register is stored here, but only bits  *11350000
                         16-31 are meaningful.                          11400000
         DS    1CL0002   Reserved, set to 0 when CAUB_ASN is stored.    11450000
CAUB_ASN DS    1BL.016   Address Space Number (ASN) identifying the    *11500000
                         address space that is associated with the job *11550000
                         that owns some common storage. Note: '00'X    *11600000
                         here means that this CAUB tracks 'system'     *11650000
                         storage, which is not associated with any     *11700000
                         address space. This field comes from          *11733300
                         ASCBASID.                                      11766600
CAUB_JOBNAME DS 1CL0008  Name of the job that was active when the      *11800000
                         storage was obtained. This is taken from      *11833300
                         ASCBJBNI or ASCBJBNS.                          11866600
CAUB_JOBID DS  0CL0008   Items from the JSAB that identify the owning  *11900000
                         job. These are obtained via the IAZXJSAB      *11950000
                         macro.                                         12000000
CAUB_WORKID DS 1CL0008   Work Unit ID, aka Job ID. This comes from the *12050000
                         JSAB. (There is 1 'valid' JSAB per address    *12100000
                         space) This ID is NOT unique within an        *12150000
                         instance of MVS when running in a 'Poly-JES'  *12200000
                         environment. Also, this ID is null for        *12250000
                         entities started under the master scheduler   *12300000
                         subsystem (e.g., some system address spaces,  *12350000
                         some started tasks).                           12400000
*                                                                       12450000
*      ***************************************************************  12500000
*      *                                                             *  12550000
*      * Fields pertaining to the unowned queue. CAUBs are put on    *  12600000
*      * this queue when a job or address space terminates holding   *  12650000
*      * some common storage. These fields are undefined (and        *  12700000
*      * probably 0) for CAUBs describing jobs that have not         *  12750000
*      * terminated.                                                 *  12800000
*      *                                                             *  12850000
*      ***************************************************************  12900000
*                                                                       12950000
*                                                                       13000000
CAUB_UNOWNED_DATE DS 1CL0004 Date when the owner of this common        *13050000
                         storage terminated. This is undefined (and    *13100000
                         probably 0) for active jobs. Format is        *13150000
                         decimal, 0YYYYDDD, YYYY=Year, DDD=Day         *13200000
                         (Julian). For example, 01992001 represents    *13250000
                         Jan 1, 1992. (See documentation of the 'TIME' *13300000
                         macro.)                                        13350000
CAUB_UNOWNED_TIME DS 1CL0004 Time when the owner of this common        *13400000
                         storage terminated. This is undefined (and    *13450000
                         probably 0) for active jobs. (Packed decimal, *13500000
                         HHMMSSth, HH=Hours, MM=Minutes, SS=Seconds,   *13550000
                         t=tenths, h=hundredths See documentation of   *13600000
                         the 'TIME' macro.)                             13650000
*                                                                       13700000
*      ***************************************************************  13750000
*      *                                                             *  13800000
*      * Various flags.                                              *  13850000
*      *                                                             *  13900000
*      ***************************************************************  13950000
*                                                                       14000000
*                                                                       14050000
CAUB_FLAGS DS  0CL0004                                                  14100000
CAUB_TYPE DS   0CL0001   Indicates if this CAUB is a Job CAUB, an      *14130000
                         address space CAUB, or a system CAUB, and     *14160000
                         indicates whether this CAUB is on the unowned *14190000
                         queue. Note that there is no bit to identify  *14210000
                         the unknown (aka the "no detail") Caub.        14230000
CAUB_UNOWNED EQU X'80'   If on, this CAUB is on the unowned queue.     *14250000
                         Needed by FREEMAIN, so it can determine       *14300000
                         whether to free this CAUB if the counts are   *14350000
                         0. A CAUB on the unowned queue is still       *14358300
                         marked as a Job or Address Space CAUB.         14366600
*                                                                       14374900
*      ***************************************************************  14383200
*      *                                                             *  14391500
*      * No more than one of the following bits should be on. Any    *  14399800
*      * other combination indicates a VSM bug.                      *  14408100
*      *                                                             *  14416400
*      ***************************************************************  14424700
*                                                                       14433000
*                                                                       14441300
CAUB_SYSTEM EQU X'40'    If on, this CAUB is the 'system' CAUB. Common *14450000
                         storage obtained by system functions should   *14500000
                         be charged to the system. Thus, the job CAUB  *14550000
                         is sometimes really the system CAUB.          *14600000
                         CAUB_System exists to make it easy to tell    *14650000
                         when this is the case.                         14700000
CAUB_JOB EQU   X'20'     If on, this CAUB is a 'job CAUB'. (See        *14750000
                         "Function" section for more information on    *14800000
                         'job CAUB').                                   14850000
CAUB_ADDRESSSPACE EQU X'10' If on, this CAUB is an 'address space      *15012500
                         CAUB'. See "Function" section for more        *15025000
                         information on 'address space CAUB'            15037500
         ORG   CAUB_TYPE+X'00000001'                                    15038600
CAUB_DATAINCOMPLETE DS 0CL0001 Bits indicating that tracking was not   *15039700
                         enabled at some point during the life of this *15040800
                         CAUB                                           15041900
CAUB_CSADATAINCOMPLETE EQU X'80' If on, tracking for CSA data was not  *15043000
                         enabled at some point during the life of this *15044100
                         CAUB                                           15045200
CAUB_SQADATAINCOMPLETE EQU X'40' If on, tracking for SQA data was not  *15046300
                         enabled at some point during the life of this *15047400
                         CAUB                                           15048500
         ORG   CAUB_FLAGS+X'00000004'                                   15050000
         DS    1CL0004   Reserved                                       15100000
*                                                                       15150000
*      ***************************************************************  15200000
*      *                                                             *  15250000
*      * The fields below contain a count of how much common storage *  15300000
*      * is being used by the entity described in CAUB_Header.       *  15350000
*      *                                                             *  15400000
*      ***************************************************************  15450000
*                                                                       15500000
*                                                                       15550000
CAUB_COUNTS DS 0CL0016                                                  15575000
CAUB_CSA_BELOW DS 1FL4   Amount of GETMAINed non-extended CSA storage, *15600000
                         in bytes, owned by the entity described in    *15650000
                         CAUB_Header.                                   15700000
CAUB_SQA_BELOW DS 1FL4   Amount of GETMAINed non-extended SQA storage, *15750000
                         in bytes, owned by the entity described in    *15800000
                         CAUB_Header.                                   15850000
CAUB_CSA_ABOVE DS 1FL4   Amount of GETMAINed extended CSA storage, in  *15900000
                         bytes, owned by the entity described in       *15950000
                         CAUB_Header.                                   16000000
CAUB_SQA_ABOVE DS 1FL4   Amount of GETMAINed extended SQA storage, in  *16050000
                         bytes, owned by the entity described in       *16100000
                         CAUB_Header.                                   16150000
         DS    1CL0004                                                  16175000
CAUB_ID_K EQU  C'CAUB'   Eyecatcher.                                    16200000
CAUB_ASN_KSYSTEM EQU 0   When CAUB_ASN contains this value, there is   *16250000
                         no owning address space - the storage is      *16300000
                         owned by the 'system'.                         16350000
CAUB_LEVEL_KCURRENT EQU 1 Most recent level of the CAUB.                16400000
*                                                                       16450000
*    *****************************************************************  16500000
*    *                                                               *  16550000
*    * Constants are declared for every existing level of the CAUB.  *  16600000
*    *                                                               *  16650000
*    *****************************************************************  16700000
*                                                                       16750000
*                                                                       16800000
CAUB_LEVEL_K1 EQU 1      HBB4430 level                                  16850000
CAUB_LEN EQU   *-CAUB                                                   16900000
.L0002   ANOP                                                           16950000
         AIF   ('&ZCBPRINT' EQ 'NO').P3                                 17000000
         AIF   ('&LIST' EQ 'YES').P4                                    17050000
.P3      ANOP                                                           17100000
         POP   PRINT                                                    17150000
.P4      ANOP                                                           17200000
.P_EXIT  ANOP                                                           17250000
         MEND                                                           17300000
**/ IGVCAUB_2:;                                                         17350000
* %IGVCAUB_INCLUDED = 'YES';                                            17400000
* %DCL ZCBPRINT CHAR EXT;                                               17450000
* %DEACTIVATE ZCBPRINT;                                                 17500000
* %DCL IGVCAUB_LIST CHAR EXT;                                           17550000
* %DEACTIVATE IGVCAUB_LIST;                                             17600000
* %IF IGVCAUB_LIST ^= 'NO' &                                            17650000
*    ZCBPRINT ^= 'NO' %THEN                                             17700000
*   %GOTO IGVCAUB_3;                                                    17750000
*   @LIST PUSH NOECHO;                                                  17800000
*   @LIST NOASSEMBLE NOECHO;                                            17850000
*   @LIST OFF C NOECHO;                                                 17900000
* %IGVCAUB_3:;                                                          17950000
*/* Start of PL/X Source                                             */ 18000000
*@EJECT;                                                                18050000
*                                                                       18100000
*DCL 1  CAUB Based(CAUBPtr),  /* Common area user block.             */ 18150000
*     3 CAUB_Header,          /* Header for CAUB_Proper.  (CAUB_Proper  18200000
*                                has the counts, CAUB_Header has owner  18250000
*                                information.)                          18300000
*                                                                    */ 18350000
*                                                                       18400000
*        /*  Link fields pertaining to the unowned queue.   CAUBs are   18450000
*            put on this queue when a job or address space terminates   18500000
*            holding some common storage.  These fields are the first   18550000
*            thing in the CAUB because that makes queue manipulation a  18600000
*            little easier.                                             18650000
*                                                                    */ 18700000
*      5 CAUB_Unowned_Next Ptr(31), /* Address of the next CAUB         18750000
*                                on the 'unowned' queue.                18800000
*                                                                    */ 18850000
*      5 CAUB_Unowned_Prev Ptr(31), /* Address of the previous CAUB     18900000
*                                on the 'unowned' queue. This is        18950000
*                                double threaded to make it easy to     19000000
*                                remove elements from the middle.       19050000
*                                                                    */ 19100000
*     /* Fields that identify this control block as a CAUB.             19150000
*                                                                    */ 19200000
*      5 CAUB_ID Char(4),     /* Char string 'CAUB' - eyecatcher.    */ 19250000
*      5 CAUB_Level Fixed(16), /* Indicates the level of the CAUB.      19300000
*                                 The value can be used to determine    19350000
*                                 how the CAUB is mapped. CAUB_LEVEL_K1 19400000
*                                 indicates the HBB4430 level of        19450000
*                                 this macro. Equate value              19500000
*                                 CAUB_LEVEL_KCURRENT can be used       19550000
*                                 to determine the most recent          19600000
*                                 update level.                         19650000
*                                                                    */ 19750000
*      5 * Char(2),            /* Reserved                              19800000
*                                                                    */ 19850000
*     /* Fields that identify the job that owns some common storage.    19900000
*                                                                    */ 19950000
*@SPACE;                                                                20000000
*     /*  Part of the process of completing a common area GETMAIN       20050000
*         requires that VSM decide which CAUB describes the job doing   20100000
*         the GETMAIN.  Which CAUB is chosen depends on how the         20150000
*         GETMAIN was coded.  The coder can choose to have VSM update   20200000
*         the counts in the CAUB associated with the home, primary or   20250000
*         secondary address space.  The coder can also specify that     20300000
*         VSM use the 'system CAUB', which is associated with no        20350000
*         address space.                                                20400000
*                                                                    */ 20450000
*      5 CAUB_CallerID,                                                 20500000
*                                                                       20550000
*        7 CAUB_ASN_Word,     /* Whole register is stored here, but     20600000
*                               only bits 16-31 are meaningful.         20650000
*                                                                    */ 20700000
*          9 * Char(2),        /* Reserved, set to 0 when CAUB_ASN      20750000
*                               is stored.                              20800000
*                                                                    */ 20850000
*          9 CAUB_ASN Bit(16), /* Address Space Number (ASN)            20900000
*                               identifying the address space that      20950000
*                               is associated with the job that owns    21000000
*                               some common storage.  Note:  '00'X      21050000
*                               here means that this CAUB tracks        21100000
*                               'system' storage, which is not          21150000
*                               associated with any address space.      21200000
*                               This field comes from ASCBASID.         21225000
*                                                                    */ 21250000
*                                                                       21300000
*        7 CAUB_Jobname Char(8), /* Name of the job that was active     21350000
*                                when the storage was obtained.         21400000
*                                This is taken from ASCBJBNI or         21416600
*                                ASCBJBNS.                              21433200
*                                                                    */ 21450000
*        7 CAUB_JobID,           /* Items from the JSAB that identify   21500000
*                                the owning job.  These are obtained    21550000
*                                via the IAZXJSAB macro.                21600000
*                                                                    */ 21650000
*          9 CAUB_WorkID Char(8), /* Work Unit ID, aka Job ID. This     21700000
*                                comes from the JSAB.  (There is 1      21750000
*                                'valid' JSAB per address space) This   21800000
*                                ID is NOT unique within an instance    21850000
*                                of MVS when running in a 'Poly-JES'    21900000
*                                environment.  Also, this ID is null    21950000
*                                for entities started under the master  22000000
*                                scheduler subsystem (e.g., some system 22050000
*                                address spaces, some started tasks).   22100000
*                                                                   */  22150000
*        /*  Fields pertaining to the unowned queue.   CAUBs are put    22200000
*            on this queue when a job or address space terminates       22250000
*            holding some common storage.  These fields are undefined   22300000
*            (and probably 0) for CAUBs describing jobs that have not   22350000
*            terminated.                                                22400000
*                                                                    */ 22450000
*        7 CAUB_Unowned_Date Char(4),   /* Date when the owner of this  22500000
*                                common storage terminated.  This is    22550000
*                                undefined (and probably 0) for active  22600000
*                                jobs.  Format is decimal, 0YYYYDDD,    22650000
*                                YYYY=Year, DDD=Day (Julian).  For      22700000
*                                example, 01992001 represents Jan 1,    22750000
*                                1992.  (See documentation of the       22800000
*                                'TIME' macro.)                         22850000
*                                                                    */ 22950000
*        7 CAUB_Unowned_Time Char(4),   /* Time when the owner          23000000
*                                of this common storage terminated.     23050000
*                                This is undefined (and probably 0)     23100000
*                                for active jobs.  (Packed decimal,     23150000
*                                HHMMSSth, HH=Hours, MM=Minutes,        23200000
*                                SS=Seconds, t=tenths, h=hundredths     23250000
*                                See documentation of the 'TIME'        23300000
*                                macro.)                                23350000
*                                                                    */ 23400000
*        /*  Various flags.                                             23450000
*                                                                    */ 23500000
*        7 CAUB_Flags CHAR(4),                                          23550000
*         9 CAUB_Type,        /* Indicates if this CAUB is a Job CAUB,  23590000
*                                an address space CAUB, or a system     23630000
*                                CAUB, and indicates whether this CAUB  23670000
*                                is on the unowned queue.               23710000
*                                Note that there is no bit to identify  23720000
*                                the unknown (aka the "no detail")      23730000
*                                Caub.                                  23740000
*                                                                    */ 23750000
*           11 CAUB_Unowned Bit(1), /* If on, this CAUB is on the       23800000
*                                unowned queue. Needed by FREEMAIN,     23850000
*                                so it can determine whether to free    23900000
*                                this CAUB if the counts are 0.         23950000
*                                A CAUB on the unowned queue is still   23957100
*                                marked as a Job or Address Space CAUB. 23964200
*                                                                    */ 23971300
*             /* No more than one of the following bits should          23978400
*                be on.  Any other combination                          23985500
*                indicates a VSM bug.                                   23992600
*                                                                    */ 24000000
*           11 CAUB_System   Bit(1), /* If on, this CAUB is the         24050000
*                                'system' CAUB.  Common storage         24100000
*                                obtained by system functions should    24150000
*                                be charged to the system.  Thus, the   24200000
*                                job CAUB is sometimes really the       24250000
*                                system CAUB.  CAUB_System exists to    24300000
*                                make it easy to tell when this is the  24350000
*                                case.                                  24400000
*                                                                    */ 24700000
*           11 CAUB_Job      Bit(1), /* If on, this CAUB is a           24750000
*                                'job CAUB'.  (See "Function" section   24800000
*                                for more information on 'job CAUB').   24850000
*                                                                    */ 24900000
*           11 CAUB_AddressSpace Bit(1), /* If on, this CAUB is an      24910000
*                                'address space CAUB'. See "Function"   24920000
*                                section for more information on        24930000
*                                'address space CAUB'                */ 24940000
*         9 CAUB_DataIncomplete,         /* Bits indicating that        24940700
*                                tracking was not enabled at some       24941400
*                                point during the life of this CAUB     24942100
*                                                                @D1A*/ 24942800
*           11 CAUB_CsaDataIncomplete Bit(1), /* If on, tracking for    24943500
*                                CSA data was not enabled at some       24944200
*                                point during the life of this CAUB     24944900
*                                                                @D1A*/ 24945600
*           11 CAUB_SqaDataIncomplete Bit(1), /* If on, tracking for    24946300
*                                SQA data was not enabled at some       24947000
*                                point during the life of this CAUB     24947700
*                                                                @D1A*/ 24948400
*        7 *          Char(4),   /* Reserved                        */  24950000
*                                                                       25000000
*        /* The fields below contain a count of how much common         25050000
*           storage is being used by the entity described in            25100000
*           CAUB_Header.                                                25150000
*                                                                    */ 25200000
*     3 CAUB_Counts,                                                    25225000
*       5 CAUB_CSA_Below Fixed(31), /* Amount of GETMAINed              25250000
*                                  non-extended CSA storage, in bytes,  25300000
*                                  owned by the entity described in     25350000
*                                  CAUB_Header.                         25400000
*                                                                    */ 25450000
*       5 CAUB_SQA_Below Fixed(31), /* Amount of GETMAINed              25500000
*                                  non-extended SQA storage, in bytes,  25550000
*                                  owned by the entity described in     25600000
*                                  CAUB_Header.                         25650000
*                                                                    */ 25700000
*       5 CAUB_CSA_Above Fixed(31), /* Amount of GETMAINed              25750000
*                                  extended CSA storage, in bytes,      25800000
*                                  owned by the entity described in     25850000
*                                  CAUB_Header.                         25900000
*                                                                    */ 25950000
*       5 CAUB_SQA_Above Fixed(31), /* Amount of GETMAINed              26000000
*                                  extended SQA storage, in bytes,      26050000
*                                  owned by the entity described in     26100000
*                                  CAUB_Header.                         26150000
*                                                                    */ 26200000
*       3 * Char(4),                                                    26233300
*       3 * Char(0) BDY(DWORD);                                         26266600
*                                                                       26300000
* DCL CAUB_ID_K Char(4) Constant('CAUB');       /* Eyecatcher.          26350000
*                                                                    */ 26400000
* DCL CAUB_ASN_KSystem Fixed(16) Constant(0);       /* When CAUB_ASN    26450000
*                                  contains this value, there is no     26500000
*                                  owning address space - the storage   26550000
*                                  is owned by the 'system'.            26600000
*                                                                    */ 26650000
* DCL CAUB_Level_KCurrent Fixed(8) Constant(1); /* Most recent          26700000
*                                  level of the CAUB.                   26750000
*                                                                    */ 26800000
*        /*  Constants are declared for every existing level of the     26850000
*            CAUB.                                                      26900000
*                                                                    */ 26950000
* DCL CAUB_Level_K1 Fixed(8) Constant(1);    /* HBB4430 level        */ 27000000
*                                                                       27050000
*/* End of PL/X Source                                               */ 27100000
* %IF IGVCAUB_LIST ^= 'NO' &                                            27150000
*    ZCBPRINT ^= 'NO' %THEN                                             27200000
*   %GOTO IGVCAUB_4;                                                    27250000
*   @LIST POP NOECHO;                                                   27300000
* %IGVCAUB_4:;                                                          27350000
* %END;                                                                 27400000
