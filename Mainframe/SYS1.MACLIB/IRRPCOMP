*%;    /*                                                               00001000
         MACRO                                                          00002000
         IRRPCOMP &DSECT=YES                                         */ 00003000
*/****START OF SPECIFICATIONS****************************************** 00004000
*                                                                       00005000
*   $MAC(IRRPCOMP) COMP(SC1BN) PROD(SAF):                         @P1C  00006490
*                                                                       00007000
*01* MACRO NAME: IRRPCOMP                                               00008000
*                                                                       00009000
*01* DSECT NAME: COMP                                                   00010000
*                                                                       00011000
*01* DESCRIPTIVE NAME:   OMVS  Common Security Parameter List           00012000
*                                                                       00013000
*02*   ACRONYM: COMP                                                    00014000
**/                                                                     00015000
*/*01* PROPRIETARY STATEMENT=                                        */ 00016000
*/***PROPRIETARY_STATEMENT********************************************/ 00017000
*/*                                                                  */ 00018000
*/*                                                                  */ 00019000
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 00020000
*/* THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      */ 00021000
*/* 5647-A01 (C) COPYRIGHT IBM CORP. 1992, 2000                      */ 00022500
*/*                                                                  */ 00024000
*/* STATUS= HBB7703                                                  */ 00025000
*/*                                                                  */ 00026000
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 00027000
*/*                                                                  */ 00027200
*/*01* EXTERNAL CLASSIFICATION: PSPI                             @P5A*/ 00027400
*/*01* END OF EXTERNAL CLASSIFICATION:                               */ 00027700
*/*                                                                     00028000
*01* FUNCTION:                                                          00029000
*                                                                       00030000
*    This file contains the PL/X and BAL mapping of the common input    00031000
*    parameter list for   OMVS  SAF and RACF routers. It also has       00032000
*    the input parameter lists for each of the   OMVS  sercurity        00033000
*    service routines. The input parameter lists in this file are:      00034000
*                                                                       00035000
*    DSECT NAME   STUB NAME      SECURITY FUNCTION                      00036000
*                                                                       00037000
*      COMP       all         Common Security                           00038000
*                                                                       00039000
*      IUSP       IRRSIU00    INIT_USP                                  00040000
*                                                                       00041000
*      CSID                   Common Set Id Input Parameter List:       00042000
*                 IRRSSU00      RACF Set Uid                            00043000
*                 IRRSEU00      RACF Set Effective Uid                  00044000
*                 IRRSSG00      RACF Set Group Id                       00045000
*                 IRRSEG00      RACF Set Effective Group Id             00046000
*                                                                       00047000
*      EXID       IRRSEX00    Exec Set Uid/Gid                          00048000
*                                                                       00049000
*      GETG       IRRSGG00    Get Groups.                               00050000
*                                                                       00051000
*      CHKP       IRRSKP00    Check Privilege.                          00052000
*                                                                       00053000
*      GMAP                   Common Get Map Input Parameter List:      00054000
*                 IRRSGM00      RACF Get Group ID Map                   00055000
*                 IRRSUM00      RACF Get User  ID Map                   00056000
*                                                                       00057000
*                                                                       00058000
*      CKPO       IRRSKO00    Check Process Owner.                      00059000
*                                                                       00060000
*      QRYS       IRRSQS00    Query System Security Options.            00061000
*                                                                       00062000
*      CMOD       IRRSCF00    Change File Mode.                         00063000
*                                                                       00064000
*      CLID       IRRSCS00    Clear Setid.                              00065000
*                                                                       00066000
*      n/a        IRRSDU00    Delete Usp (no input parameter list)      00067000
*                                                                       00068000
*      CAUD       IRRSCA00    Change File Audit Options.                00069000
*                                                                       00070000
*      COWN       IRRSCO00    Change Owner and Group.                   00071000
*                                                                       00072000
*      UMSK       IRRSMM00    Set File Mode Creation Mask.              00073000
*                                                                       00074000
*      KACC       IRRSKA00    Check Access.                             00075000
*                                                                       00076000
*      QRYF       IRRSQF00    Query File Security Options.              00077000
*                                                                       00078000
*      KFOW       IRRSKF00    Check File Owner.                         00081000
*                                                                       00082000
*      MKRT       IRRSMR00    Make Root FSP.                            00083000
*                                                                       00084000
*      PTRC       IRRSPT00    PTRACE Authority Check.                   00085000
*                                                                       00086000
*      MFSP       IRRSMF00    Make FSP.                                 00087000
*                                                                       00088000
*      RAUD       IRRSAU00    Audit.                                    00089000
*                                                                       00090000
*      GUGP       IRRSUG00    getugrps()                                00091000
*                                                                       00092000
*      FORK       IRRSFK00    Fork  Exit.                               00093000
*                                                                       00094000
*      MISP       IRRSMI00    Make ISP.                                 00094100
*                                                                       00094200
*      IACC       IRRSKI00    Check access to ISP.                      00094300
*                                                                       00094400
*      IOWN       IRRSCI00    R_IPC_control.                       @03C 00094500
*                                                                       00094600
*      CKO2       IRRSC200    Check the owner of two files.             00094700
*                                                                       00095000
*      GETE       IRRSGE00    Get UIDs/GIDs and supplemental groups     00095300
*                                                                       00095600
*      DINF       IRRSDI00    Get/Set DCE UUID, DCENAME, HOMECELL  @01A 00095700
*                                                                       00095800
*      DKEY       IRRSDK00    Get/Set DPASSWDS                     @01A 00095900
*                                                                       00096000
*      DRUR       IRRSDU00    RACF userid - DCE UUID mapping       @02A 00096100
*                                                                       00096200
*      DAUT       IRRSDA00    RACF Authorization of a DCE Client   @03A 00096300
*                                                                       00096400
*      INTA       IRRSIA00    RACF Initialize ACEE                 @L4A 00096500
*                                                                       00096600
*      ADMN       IRRSEQ00    R_Admin                              @04A 00096700
*                                                                       00096800
*      UMAP       IRRSIM00    R_UserMap                            @L7A 00097100
*                                                                       00097200
*      CDDL       IRRSDL00    CDSA Data Lib Service                @L8A 00097300
*                                                                       00097400
*      KERB       IRRSMK00    RACF Kerberos Information Interface  @LEA 00097500
*                                                                       00097600
*      TKTS       IRRSPK00    RACF Kerberos Ticket Interface       @LHA 00097700
*                                                                       00097800
*01* METHOD OF ACCESS:                                                  00097900
*                                                                       00098000
*02*   PL/X:  %INCLUDE(IRRPCOMP)                                        00098100
*                                                                       00099000
*             DECLARE COMP_PTR PTR(31)                                  00100000
*             To contain the address of the   OMVS  SAF/RACF common     00101000
*             plist and any additional service routine plist.           00102000
*                                                                       00103000
*                                                                       00104000
*02*   ASM:   IRRPCOMP                                                  00105000
*             A DSECT is produced unless DSECT=NO is specified.         00106000
*                                                                       00107000
*             LA     REG,COMP                                           00108000
*             USING  COMP,REG                                           00109000
*                                                                       00110000
*             Where REG is any general register except 0.               00111000
*                                                                       00112000
*                                                                       00113000
*01* SIZE: Release dependent. Refer to the mapping.                     00114000
*                                                                       00115000
*01* POINTED TO BY: Address of COMP is passed in register 1             00116000
*                   when invoking   OMVS  security functions.           00117000
*                                                                       00118000
*01* CREATED BY: Invoker of   OMVS  security functions.                 00119000
*                                                                       00120000
*01* DELETED BY: Invoker of   OMVS   security functions.                00121000
*                                                                       00122000
*01* STORAGE ATTRIBUTES:                                                00123000
*02*   SUBPOOL:  N/A                                                    00124000
*02*   KEY:      Any                                                    00125000
*02*   RESIDENCY: Invoker's primary address space                       00126000
*                                                                       00127000
*01* FREQUENCY: N/A                                                     00128000
*                                                                       00129000
*01* SERIALIZATION: N/A                                                 00130000
*                                                                       00131000
*01* DEPENDENCIES: None                                                 00132000
*                                                                       00133000
*01* NOTES: None                                                        00134000
*                                                                       00135000
*                                                                       00136000
*01* COMPONENT:   SAF (SC1BN)                                           00137000
*                                                                       00138000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     00139000
*                                                                       00140000
*01* EYE-CATCHER: None - this is not a control block definition.        00141000
*02*   OFFSET:  N/A                                                     00142000
*02*   LENGTH:  N/A                                                     00143000
*                                                                       00144000
*01* CHANGE-ACTIVITY:                                                   00145000
*                                                                       00146000
*   $L0=OMVSSAF, HBB4430, 921201, PDNU:   OMVS  Initial Release         00146300
*   $P1=PIG2939, HBB5510, 930910, PDKAF: PIG2939 NFS Support       @P1A 00146600
*   $P2=PIG2993  HBB5510  930915  PDCCM1: PTM PIG2993              @P2A 00146900
*   $L1=XPG4SAF, JBB5522, 940314  PDKAP1: Support for XPG4         @L1A 00147200
*   $L2=UUSAF,   JBB5522, 940906  PDKAP1: Support for UU           @L2A 00147500
*   $L3=NFSSAF,  JBB5522, 941128  PDAPD1: Support for NFS          @L3A 00147800
*   $D1=NFSSAF,  JBB5522, 941128  PDAPD1: Two workareas in GETE    @D1A 00148100
*   $P3=PP20063  JBB5522, 950417  PDAPD1: Support for NFSC PPZ0026 @P3A 00148400
*   $01=OW15238, JBB5522, 950501  PDNMG1: Support for DCE          @01A 00148600
*   $02=OW15238, JBB5522, 950601  PDJWS1: Support for DCE          @02A 00148800
*   $03=OW15238, JBB5522, 950801  PDEMD1: Support for DCE          @03A 00149000
*   $P4=PPZ0036, JBB5522, 950801  PDNMG1: Support for DCE PPZ0036  @04A 00149200
*   $P5=PSD0785, JBB6602, 960202  PDEMD1: Support for PTM PSD0785  @05A 00149400
*   $L4=WEBSR,   HBB6603, 960729  PDJWS1: OE Server performance    @L4A 00149500
*   $P6=PQC2353  HBB6603, 960909  PDNMG1: OE Server performance    @P6A 00149600
*   $04=OW23446, HBB6603, 960905  PDBRW1: Tivoli Admin inter-op    @04A 00149700
*   $05=OW23446, HBB6603, 961030  PDJWS1: Tivoli Admin inter-op    @05A 00149800
*   $06=OW26931, JBB6604, 970324  PDJWS1: Public Key Phase 1       @06A 00150100
*   $07=OW26061, JBB6604, 970326  PDBRW1: Tivoli Security inter-op @07A 00150300
*   $08=OW26061, JBB6604, 970514  PDALF1: More Security inter-op   @08A 00150500
*   $L5=BOSSTA,  HBB6605, 970624  PDPFW:  BOSS Transportable ACEE  @L5A 00150600
*   $L6=RBAAN,   HBB6605, 970922  PDMKL:  OpenEdition/BAAN         @L6A 00150700
*   $09=OW31934, JBB6604, 980112  PDJWS1: Public Key Phase 2       @09A 00150800
*   $L7=GIDM ,   JBB6607, 980501  PDBG1:  Generic ID mapping       @L7A 00151100
*   $L8=ECPI,    HBB6608, 980713  PDCLC:  Enhanced CDSA Plugins    @L8A 00151200
*   $L9=ECPI,    HBB6608, 980815  PDCLC:  Enhanced CDSA Plugins    @L9A 00151300
*   $LA=ECPI,    HBB6608, 980804  PDRDS2: Enhanced CDSA Plugins    @LAA 00151400
*   $LB=OW35193, HBB6608, 981012  PDALF1: R_admin SETROPTS support @LBA 00151500
*   $LC=ECPI,    HBB6608, 981111  PDCLC:  Enhanced CDSA Plugins    @LCA 00151600
*   $LD=DCERT,   HBB7703, 990802  PDJJP:  Certificate Extensions   @LDA 00151700
*   $LE=KERB,    HBB7703, 990707  PDER1:  Kerberos support         @LEA 00151900
*   $LF=PKIX     HBB7703  991018  PDGTM1: RACF PKIX                @LFA 00152000
*   $LG=PADS1    HBB7703  991018  PDBEC1: PADS1 support            @LGA 00152100
*   $P7=PXD0577  HBB7703, 901022  PDER1:  PTM PXD0577              @P7A 00152200
*   $LH=KERB     HBB7703, 991102  PDAWS1: Kerberos support         @LHA 00152300
*   $P8=PXD0596  HBB7703, 000210  PDCAS1: PTM PXD0596              @P8A 00152400
*   $0A=OW45212  HBB7703  000628  PDGTM1: PKIServ SPE              @0AA 00152450
*                                                                       00152500
*                                                                       00152600
*01* CHANGE-DESCRIPTIONS:                                               00152700
*                                                                       00152800
*    A 000000-999999                                                    00153000
*    A - Delete PFSP parmlist for the MAP_FSP callable service     @P2A 00153300
*    A - Add parameter lists for the new XPG4 modules              @L1A 00153600
*    A - Add parameter list (CKO2) for the new UU module           @L2A 00153700
*    A - Add parameter list (GETE) for the new NFS module          @L3A 00153800
*    A - Add workarea to GETE parameter list                       @D1A 00153900
*    A - Return Real, Effective, Saved UID/GID in GETE output area @P3A 00154200
*    A - Add parameter lists for R_dceinfo, R_dcekey               @01A 00154300
*    A - Add parameter list for R_dceruid                          @02A 00154400
*    A - Add parameter list for R_dceauth                          @03A 00154500
*        Changed comments to reflect current OE terminology.       @03C 00154600
*    C - Length calculation in assembler version                   @P4A 00154700
*    A - Added the External Classification information to prolog   @P5A 00154800
*    A - Added parameter list for InitACEE                         @L4A 00154900
*    C - Change constants to match IRRPSIDF                        @P6A 00155200
*    A - Added parameter list for R_admin                          @04A 00155300
*    C - Driver 2 changes for R_admin                              @05A 00155400
*    C - Added certificate parms for InitACEE                      @06A 00155600
*    A - Added function codes and mappings for group support       @07A 00155800
*    A - Added function codes and mappings for resource support    @08A 00156000
*    C - Added ENVR object parms for InitACEE                      @L5A 00156100
*    A - Added INTA_NO_TIMEOUT and INTA_OUSP_RET attributes and    @L6A 00156200
*        the Output_area parameter.                                @L6A 00156300
*    A - Added register/deregister function codes to InitACEE      @09A 00156400
*    A - Added function codes and mappings for R_UserMap           @L7A 00156500
*    A - Added parm list for CDSA DataLib callable svc IRRSDL00    @L8A 00156600
*    A - Changes for CDSA DataLib phase two                        @L9A 00156700
*    A - Changes for CDSA DataLib phase two                        @LAA 00156800
*    A - Added function codes and mappings for SETROPTS support    @LBA 00157100
*    A - Added support for CDSA DataLib GetUpdateCode function     @LCA 00157200
*    A - Added X500 name and Variable List paramters to IRRSIA00   @LDA 00157300
*    A - Added support for kerberos                                @LEA 00157400
*    A - Added support for PKIX                                    @LEA 00157500
*    A - Support for PKIX                                               00157600
*        (Public Key Infrastructure Standards)                          00157700
*        - Added a constant for a new RACF DataLib                      00157800
*          Callable Service - IncSerialNum                              00157900
*        - Added the mapping for a new RACF DataLib                     00158000
*          Callable Service - IncSerialNum                         @LFA 00158100
*    A - Added support for PADS1 extended data call for RACD       @LGA 00158200
*    C - Correct case on equates                                   @P7A 00158300
*    A - Added support for R_ticketserv                            @LHA 00158400
*    C - Corrected comments for QRYS_OPTN_CODE@                    @P8C 00158600
*    A - Support for PKI Services                                       00158620
*        (Public Key Infrastructure Standards)                          00158640
*        - Defined the mapping for a new                                00158660
*          RACF Callable Service - R_PKIServ                            00158680
*        - Defined the constants for the                                00158700
*          Functions available with the new                             00158720
*          RACF Callable Service - R_PKIServ                       @0AA 00158740
*                                                                       00158800
****END OF SPECIFICATIONS*********************************************/ 00159000
*%;/*                                                                   00159200
*********************************************************************** 00159400
*********************************************************************** 00159600
***                                                                  ** 00159800
***                   COMP ASSEMBLER DECLARATIONS                    ** 00160000
***------------------------------------------------------------------** 00161000
***                                                                  ** 00162000
***   DECLARATION NAME = COMP                                        ** 00163000
***                                                                  ** 00164000
***   DESCRIPTIVE NAME =   OMVS  Common SAF/RACF parameter list.     ** 00165000
***                                                                  ** 00166000
***   FUNCTION = Provides BAL mapping of the common input parameter  ** 00167000
***              list for the   OMVS  SAF/RACF routers.              ** 00168000
***                                                                  ** 00169000
**********************************************************************/ 00170000
*%;   /*                                                                00171000
         AIF   ('&DSECT' EQ 'NO').COMPN                                 00172000
*                                                                       00173000
COMP     DSECT ,                   OMVS  SAF/RACF common plist.         00174000
         AGO   .COMPY                                                   00175000
.COMPN  ANOP                                                            00176000
COMP     DS    0F                  OMVS  SAF/RACF common plist.         00177000
.COMPY  ANOP                                                            00178000
*                                                                       00179000
*                                                                       00180000
COMP_WORKA_STOR@  DS  A          Address of 1024 byte work area.  @P2C  00181000
*                                                                       00182000
COMP_SAFRC_ALET@  DS  A          Address of ALET for SAF Return Code.   00183000
*                                                                       00184000
COMP_SAFRC_STOR@  DS  A          Address of SAF Return Code.            00185000
*                                                                       00186000
COMP_RACRC_ALET@  DS  A          Address of ALET for RACF Return Code.  00187000
*                                                                       00188000
COMP_RACRC_STOR@  DS  A          Address of RACF Return Code.           00189000
*                                                                       00190000
COMP_RACSC_ALET@  DS  A          Address of ALET for RACF Reason Code.  00191000
*                                                                       00192000
COMP_RACSC_STOR@  DS  A          Address of RACF Reason Code.           00193000
*                                                                       00194000
COMP_SERVR_PARMS  DS  0C         Parameters for the service routines    00195000
*                                 start here.                           00196000
*                                                                       00197000
COMP_LEN          EQU *-COMP     Constant - Fixed length of the COMP.   00198000
*                                                                       00199000
*********************************************************************** 00200000
*                                                                     * 00201000
*                 IUSP ASSEMBLER DECLARATIONS                         * 00202000
*---------------------------------------------------------------------* 00203000
*                                                                     * 00204000
*   DECLARATION NAME = IUSP                                           * 00205000
*                                                                     * 00206000
*   DESCRIPTIVE NAME =   OMVS  INIT_USP input parameter list.         * 00207000
*                                                                     * 00208000
*   FUNCTION = Provides the BAL mapping of the input parameter        * 00209000
*              list for the   OMVS  INIT_USP service routine.         * 00210000
*                                                                     * 00211000
*********************************************************************** 00212000
*                                                                       00213000
                   ORG   COMP_SERVR_PARMS     Follows common plist @04C 00213500
*                                                                       00214000
IUSP               DS  0C        Mapping for IUSP                  @04A 00214500
*                                                                       00215000
IUSP_WORKA_ALET@   DS  A         Address of ALET for the output area.   00216000
*                                                                       00217000
IUSP_WORKA_STOR@   DS  A         Address of a 4 byte output area.       00218000
*                                 This area contains an address that    00219000
*                                 points to data about the user.        00220000
*                                                                       00221000
*                                                                       00222000
IUSP_LEN           EQU *-IUSP    Constant - fixed length of the IUSP.   00223000
*                                                                       00224000
*********************************************************************** 00225000
*                                                                     * 00226000
*                 CSID ASSEMBLER DECLARATIONS                         * 00227000
*---------------------------------------------------------------------* 00228000
*                                                                     * 00229000
*   DECLARATION NAME = CSID                                           * 00230000
*                                                                     * 00231000
*   DESCRIPTIVE NAME =   OMVS  RACF Common Set ID input parameter     * 00232000
*                       list.                                         * 00233000
*                                                                     * 00234000
*   FUNCTION = Provides the BAL mapping of the input parameter        * 00235000
*              list for the following   OMVS  RACF Service Routines:  * 00236000
*                 Set Uid                                             * 00237000
*                 Set Effective Uid                                   * 00238000
*                 Set Gid                                             * 00239000
*                 Set Effective Gid                                   * 00240000
*                                                                     * 00241000
*********************************************************************** 00242000
*                                                                       00243000
                   ORG   COMP_SERVR_PARMS    Follows common plist. @04C 00243500
*                                                                       00244000
CSID               DS  0C        Mapping for CSID                  @04A 00244500
*                                                                       00245000
CSID_ID_ALET@      DS  A         Address of ALET for the Uid/Gid.       00246000
*                                                                       00247000
CSID_ID@           DS  A         Address of the Uid/Gid.                00248000
*                                                                       00249000
CSID_IDOA_ALET@    DS  A         Address of ALET for the output area.   00250000
*                                                                       00251000
CSID_IDOA@         DS  A         Address of a 3 word output area.       00252000
*                                 This area contains the new real,      00253000
*                                 effective and saved Uid/Gids.         00254000
*                                                                       00255000
CSID_LEN           EQU *-CSID    Constant - fixed length of the CSID.   00256000
*                                                                       00257000
*                                                                       00258000
*********************************************************************** 00259000
*                                                                     * 00260000
*                 EXID ASSEMBLER DECLARATIONS                         * 00261000
*---------------------------------------------------------------------* 00262000
*                                                                     * 00263000
*   DECLARATION NAME = EXID                                           * 00264000
*                                                                     * 00265000
*   DESCRIPTIVE NAME =   OMVS  RACF Exec Set Uid/Gid input parameter  * 00266000
*                      list.                                          * 00267000
*                                                                     * 00268000
*   FUNCTION = Provides the BAL mapping of the input parameter        * 00269000
*              list for the   OMVS  RACF EXEC Service Routine.        * 00270000
*                                                                     * 00271000
*********************************************************************** 00272000
*                                                                       00273000
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 00273500
*                                                                       00274000
EXID                 DS  0C      Mapping for EXID                  @04A 00274500
*                                                                       00275000
EXID_FLAG_ALET@      DS  A       Address of ALET for a byte flag.       00276000
*                                                                       00277000
EXID_FLAG@           DS  A       Address of a one byte flag that        00278000
*                                 indicates set Uid, Gid, or Both.      00279000
*                                   x'01' Set Uid.                      00280000
*                                   x'02' Set Gid.                      00281000
*                                   x'03' Set Both.                     00282000
*                                                                       00283000
EXID_UID_ALET@       DS  A       Address of ALET for Uid to be set.     00284000
*                                                                       00285000
EXID_UID@            DS  A       Address of the Uid to be set.          00286000
*                                                                       00287000
EXID_GID_ALET@       DS  A       Address of ALET for Gid to be set.     00288000
*                                                                       00289000
EXID_GID@            DS  A       Address of the Gid to be set.          00290000
*                                                                       00291000
EXID_UIDO_ALET@      DS  A       Address of ALET for Uid output area.   00292000
*                                                                       00293000
EXID_UIDO@           DS  A       Address of Uid output area, which is   00294000
*                                 3 words filled in by IRRREX00 with    00295000
*                                 the real, effective and saved Uids.   00296000
*                                                                       00297000
EXID_GIDO_ALET@      DS  A       Address of ALET for Gid output area.   00298000
*                                                                       00299000
EXID_GIDO@           DS  A       Address of Gid output area, which is   00300000
*                                 3 words filled in by IRRREX00 with    00301000
*                                 the real, effective and saved Gids.   00302000
*                                                                       00303000
EXID_LEN           EQU *-EXID    Constant - fixed length of the EXID.   00304000
*                                                                       00305000
*                                                                       00306000
*********************************************************************** 00307000
*                                                                     * 00308000
*                 GETG ASSEMBLER DECLARATIONS                         * 00309000
*---------------------------------------------------------------------* 00310000
*                                                                     * 00311000
*   DECLARATION NAME = GETG                                           * 00312000
*                                                                     * 00313000
*   DESCRIPTIVE NAME =   OMVS  RACF Get Supplemental Groups input     * 00314000
*                      parameter list.                                * 00315000
*                                                                     * 00316000
*   FUNCTION = Provides the BAL mapping of the input parameter list   * 00317000
*              for the   OMVS  RACF Get Supplemental Groups service   * 00318000
*              routine.                                               * 00319000
*                                                                     * 00320000
*********************************************************************** 00321000
*                                                                       00322000
                     ORG   COMP_SERVR_PARMS   Follows common plist.@04C 00322500
*                                                                       00323000
GETG                 DS  0C      Mapping for GETG                  @04A 00323500
*                                                                       00324000
GETG_KEY_ALET@       DS  A       Address of ALET for the user's key.    00325000
*                                                                       00326000
GETG_KEY@            DS  A       Address of a byte that contains the    00327000
*                                 user's key. The key is in the high    00328000
*                                 order 4 bits of the byte.             00329000
*                                                                       00330000
GETG_GCNT_ALET@      DS  A       Address of ALET for the Group Count.   00331000
*                                                                       00332000
GETG_GCNT@           DS  A       Address of the group count. (A one     00333000
*                                 word area that contains the number    00334000
*                                 of GIDs in the Grouplist area.)       00335000
*                                                                       00336000
GETG_GLST_ALET@      DS  A       Address of ALET for the Group List.    00337000
*                                                                       00338000
GETG_GLST@           DS  A       Address of the Group List area in      00339000
*                                 which supplemental GIDs are returned. 00340000
*                                                                       00341000
GETG_GNUM_ALET@      DS  A       Address of ALET for the number of      00342000
*                                 groups.                               00343000
*                                                                       00344000
GETG_GNUM@           DS  A       Address of the Number Of Groups.       00345000
*                                 A one word area in which the number   00346000
*                                 of supplemental group GIDs is         00347000
*                                 returned.                             00348000
*                                                                       00349000
GETG_LEN           EQU *-GETG    Constant - fixed length of the GETG.   00350000
*                                                                       00351000
*                                                                       00352000
*********************************************************************** 00353000
*                                                                     * 00354000
*                 CHKP ASSEMBLER DECLARATIONS                         * 00355000
*---------------------------------------------------------------------* 00356000
*                                                                     * 00357000
*   DECLARATION NAME = CHKP                                           * 00358000
*                                                                     * 00359000
*   DESCRIPTIVE NAME =   OMVS  RACF Check Privilege input parameter   * 00360000
*                      list.                                          * 00361000
*                                                                     * 00362000
*   FUNCTION = Provides the BAL mapping of the input parameter list   * 00363000
*              for the   OMVS  RACF Check Privilege service routine.  * 00364000
*                                                                     * 00365000
*********************************************************************** 00366000
*                                                                       00367000
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 00367500
*                                                                       00368000
CHKP                 DS  0C      Mapping for CHKP                  @04A 00368500
*                                                                       00369000
CHKP_AUFC_ALET@      DS  A       Address of ALET for audit function     00370000
*                                 code.                                 00371000
*                                                                       00372000
CHKP_AUFC@           DS  A       Address of the audit function code.    00373000
*                                 (A full word containing the function  00374000
*                                  code that identifies the system      00375000
*                                  call being processed.)               00376000
*                                                                       00377000
CHKP_LEN           EQU *-CHKP    Constant - fixed length of the CHKP.   00378000
*                                                                       00379000
*                                                                       00380000
*********************************************************************** 00381000
*                                                                     * 00382000
*                 GMAP ASSEMBLER DECLARATIONS                         * 00383000
*---------------------------------------------------------------------* 00384000
*                                                                     * 00385000
*   DECLARATION NAME = GMAP                                           * 00386000
*                                                                     * 00387000
*   DESCRIPTIVE NAME =   OMVS  RACF Get Map Common input parameter    * 00388000
*                      list.                                          * 00389000
*                                                                     * 00390000
*   FUNCTION = Provides the BAL mapping of the input parameter        * 00391000
*              list for the   OMVS  RACF Get Group Map/Get User Map   * 00392000
*              service routine.                                       * 00393000
*                                                                     * 00394000
*                                                                     * 00395000
*   Note: GMAP is a common declaration that is used with both Get     * 00396000
*         Group Map and Get User Map. When requesting Get Group Map,  * 00397000
*         all fields pertain to group data. When requesting Get User  * 00398000
*         Map, all fields pertain to user data.                       * 00399000
*                                                                     * 00400000
*********************************************************************** 00401000
*                                                                       00402000
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 00402500
*                                                                       00403000
GMAP                 DS  0C      Mapping for GMAP                  @04A 00403500
*                                                                       00404000
GMAP_FLAG_ALET@      DS  A       Address of ALET for one byte flag.     00405000
*                                                                       00406000
GMAP_FLAG@           DS  A       Address of the one byte flag:          00407000
*                                 x'00' Search by Gid/Uid.              00408000
*                                 x'01' Search by Group ID/Userid.      00409000
*                                                                       00410000
GMAP_ID_ALET@        DS  A       Address of ALET for the Gid/Uid.       00411000
*                                                                       00412000
GMAP_ID@             DS  A       Address of a word containing the       00413000
*                                 input Uid/Gid or in which the         00414000
*                                 Uid/Gid is returned.                  00415000
*                                                                       00416000
GMAP_NAME_ALET@      DS  A       Address of ALET for the Group Name     00417000
*                                 or Userid.                            00418000
*                                                                       00419000
GMAP_NAME@           DS  A       Address of 8 bytes that contain        00420000
*                                 an input Group Name or Userid         00421000
*                                 or in which the Group name or         00422000
*                                 Userid is returned. The name/id       00423000
*                                 left justified and padded with        00424000
*                                 blanks.                               00425000
*                                                                       00426000
GMAP_LEN           EQU *-GMAP    Constant - fixed length of the GMAP.   00427000
*                                                                       00428000
*                                                                       00429000
*                                                                       00430000
*********************************************************************** 00431000
*                                                                     * 00432000
*                 CKPO ASSEMBLER DECLARATIONS                         * 00433000
*---------------------------------------------------------------------* 00434000
*                                                                     * 00435000
*   DECLARATION NAME = CKPO                                           * 00436000
*                                                                     * 00437000
*   DESCRIPTIVE NAME =   OMVS  RACF Check Process Owner input         * 00438000
*                      parameter list.                                * 00439000
*                                                                     * 00440000
*   FUNCTION = Provides the BAL mapping of the input parameter        * 00441000
*              list for the   OMVS  Check Process Owner service       * 00442000
*              routine.                                               * 00443000
*                                                                     * 00444000
*********************************************************************** 00445000
*                                                                       00446000
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 00446500
*                                                                       00447000
CKPO                 DS  0C      Mapping for CKPO                  @04A 00447500
*                                                                       00448000
CKPO_REQT_ALET@      DS  A       Address of ALET for one byte Request   00449000
*                                   type.                               00450000
*                                                                       00451000
CKPO_REQT@           DS  A       Address of the one byte request type:  00452000
*                                   1 -  Audit only request from KILL   00453000
*                                     used when SIGCONT signal is being 00454000
*                                     sent.                             00455000
*                                   2 - KILL request.                   00456000
*                                   3 - GETPSENT request.               00457000
*                                   4 - OPEN TTY request.               00458000
*                                                                       00459000
CKPO_UIDS_ALET@      DS  A       Address of ALET for Uids area.         00460000
*                                                                       00461000
CKPO_UIDS@           DS  A       Address of 3 word area containing the  00462000
*                                 real, effective, and saved Uids (in   00463000
*                                 that order) for the target process.   00464000
*                                                                       00465000
CKPO_PID_ALET@       DS  A       Address of ALET for target PID word.   00466000
*                                                                       00467000
CKPO_PID@            DS  A       Address of the words containing the    00468000
*                                 target process's PID.                 00469000
*                                                                       00470000
CKPO_CODE_ALET@      DS  A       Address of ALET for signal code word.  00471000
*                                                                       00472000
CKPO_CODE@           DS  A       Address of word containing a code      00473000
*                                 identifying the signal being sent.    00474000
*                                 This word is ignored for request      00475000
*                                 type 3.                               00476000
*                                                                       00477000
*                                                                       00478000
CKPO_LEN           EQU *-CKPO    Constant - fixed length of CKPO.       00479000
CKPO_KILL_AUDIT    EQU 1         KILL AUDIT Constant.                   00480000
CKPO_KILL          EQU 2         Kill Verification.                     00481000
CKPO_GETPSENT      EQU 3         Identifies caller is GETPSENT.         00482000
CKPO_OPEN_STTY     EQU 4         Open slave TTY.                        00483000
CKPO_MAX_REQ_TYPE  EQU 4         CKPO Max Request Type.                 00484000
*                                                                       00485000
*********************************************************************** 00486000
*                                                                     * 00487000
*                 QRYS ASSEMBLER DECLARATIONS                         * 00488000
*---------------------------------------------------------------------* 00489000
*                                                                     * 00490000
*   DECLARATION NAME = QRYS                                           * 00491000
*                                                                     * 00492000
*   DESCRIPTIVE NAME =   OMVS  RACF Query System Security options     * 00493000
*                      input parameter list.                          * 00494000
*                                                                     * 00495000
*   FUNCTION = Provides the BAL mapping of the input parameter        * 00496000
*              list for the   OMVS  Query System Security options     * 00497000
*              service routine.                                       * 00498000
*                                                                     * 00499000
*********************************************************************** 00500000
*                                                                       00501000
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 00501500
*                                                                       00502000
QRYS                 DS  0C      Mapping for QRYS                  @04A 00502500
*                                                                       00503000
QRYS_OPTN_CODE_ALET@ DS  A       Address of ALET for the one word       00504000
*                                requested option code.                 00505000
*                                                                       00506000
QRYS_OPTN_CODE@      DS  A       Address of the one word requested      00507000
*                                option code. The defined codes are:    00508000
*                                 x'00000001' - NGROUPS_MAX options@P8C 00509000
*                                 x'00000002' - POSIX_SAVED_IDS opt@P8C 00510000
*                                                                       00511000
QRYS_OUTP_VAL_ALET@  DS  A       Address of ALET for one word output    00512000
*                                value                                  00513000
*                                                                       00514000
QRYS_OUTP_VAL@       DS  A       Address of one word output value       00515000
*                                                                       00516000
QRYS_LEN           EQU *-QRYS    Constant - fixed length of QRYS.       00517000
*                                                                       00518000
*********************************************************************** 00519000
*                                                                     * 00520000
*                 CMOD ASSEMBLER DECLARATIONS                         * 00521000
*---------------------------------------------------------------------* 00522000
*                                                                     * 00523000
*   DECLARATION NAME = CMOD                                           * 00524000
*                                                                     * 00525000
*   DESCRIPTIVE NAME =   OMVS  RACF Change File mode input parameter  * 00526000
*                      list.                                          * 00527000
*                                                                     * 00528000
*   FUNCTION = Provides the BAL mapping of the input parameter        * 00529000
*              list for the   OMVS  Change File Mode service routine. * 00530000
*                                                                     * 00531000
*********************************************************************** 00532000
*                                                                       00533000
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 00533500
*                                                                       00534000
CMOD                 DS  0C      Mapping for CMOD                  @04A 00534500
*                                                                       00535000
CMOD_MODE_ALET@      DS  A       Address of ALET for the mode parameter 00536000
*                                                                       00537000
CMOD_MODE@           DS  A       Address of a one word mode parameter.  00538000
*                                                                       00539000
CMOD_FSP_ALET@       DS  A       Address of ALET for the FSP structure  00540000
*                                                                       00541000
CMOD_FSP@            DS  A       Address of the FSP structure.          00542000
*                                                                       00543000
CMOD_FID_ALET@       DS  A       Address of ALET for the File Id.       00544000
*                                                                       00545000
CMOD_FID@            DS  A       Address of the File Id which is a      00546000
*                                 16 byte area that contains a unique   00547000
*                                 identifier of the file.               00548000
CMOD_CRED_ALET@      DS  A       Address of ALET for CRED structure.    00549000
*                                                                       00550000
CMOD_CRED@           DS  A       Address of the CRED structure.         00551000
*                                                                       00552000
CMOD_LEN           EQU *-CMOD    Constant - fixed length of CMOD.       00553000
*                                                                       00554000
*********************************************************************** 00555000
*                                                                     * 00556000
*                 CLID ASSEMBLER DECLARATIONS                         * 00557000
*---------------------------------------------------------------------* 00558000
*                                                                     * 00559000
*   DECLARATION NAME = CLID                                           * 00560000
*                                                                     * 00561000
*   DESCRIPTIVE NAME =   OMVS  RACF Clear Setid input parameter list. * 00562000
*                                                                     * 00563000
*   FUNCTION = Provides the BAL mapping of the input parameter        * 00564000
*              list for the   OMVS  Clear Setid service routine.      * 00565000
*                                                                     * 00566000
*********************************************************************** 00567000
*                                                                       00568000
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 00568500
*                                                                       00569000
CLID                 DS  0C      Mapping for CLID                  @04A 00569500
*                                                                       00570000
CLID_FSP_ALET@       DS  A       Address of ALET for the FSP structure. 00571000
*                                                                       00572000
CLID_FSP@            DS  A       Address of the FSP structure.          00573000
*                                                                       00574000
CLID_FID_ALET@       DS  A       Address of ALET for the File Id.       00575000
*                                                                       00576000
CLID_FID@            DS  A       Address of the File Id which is a      00577000
*                                 16 byte area that contains a unique   00578000
*                                 identifier of the file.               00579000
*                                                                       00580000
CLID_CRED_ALET@      DS  A       Address of ALET for CRED structure.    00581000
*                                                                       00582000
CLID_CRED@           DS  A       Address of the CRED structure.         00583000
*                                                                       00584000
CLID_LEN           EQU *-CLID    Constant - fixed length of CLID.       00585000
*                                                                       00586000
*                                                                       00587000
*********************************************************************** 00588000
*                                                                     * 00589000
*                 CAUD ASSEMBLER DECLARATIONS                         * 00590000
*---------------------------------------------------------------------* 00591000
*                                                                     * 00592000
*   DECLARATION NAME = CAUD                                           * 00593000
*                                                                     * 00594000
*   DESCRIPTIVE NAME =   OMVS  RACF Change File Audit Options input   * 00595000
*                      parameter list.                                * 00596000
*                                                                     * 00597000
*   FUNCTION = Provides the BAL mapping of the input parameter        * 00598000
*              list for the   OMVS  Change File Audit Options routine * 00599000
*                                                                     * 00600000
*********************************************************************** 00601000
*                                                                       00602000
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 00602500
*                                                                       00603000
CAUD                 DS  0C  Mapping for CAUD                      @04A 00603500
*                                                                       00604000
CAUD_AO_ALET@        DS  A   Address of ALET for the Audit Options.     00605000
*                                                                       00606000
CAUD_AO@             DS  A   Address of 4 bytes that contain an Audit   00607000
*                             Option for each type of access:           00608000
*                              Byte 1 - read access audit options.      00609000
*                              Byte 2 - write access audit options.     00610000
*                              Byte 3 - execute/search audit options.   00611000
*                               Each of the first three bytes contain   00611500
*                               an Audit Option:                   @P1C 00612000
*                               x'00' - don't audit any access attempts 00612500
*                               x'01' - audit successful access.        00613000
*                               x'02' - audit failed access attempts.   00613500
*                              Byte 4 - audit flag.                @P1C 00614000
*                               In the last byte, the last bit     @P1A 00614500
*                               indicates:                         @P1A 00615000
*                               x'00' - set user audit options.    @P1A 00615500
*                               x'01' - set auditor audit options. @P1A 00616000
*                                                                       00617000
CAUD_FSP_ALET@       DS  A   Address of ALET for the FSP structure.     00618000
*                                                                       00619000
CAUD_FSP@            DS  A   Address of the FSP structure.              00620000
*                                                                       00621000
CAUD_FID_ALET@       DS  A   Address of ALET for the File Id.           00622000
*                                                                       00623000
CAUD_FID@            DS  A   Address of the File Id which is a          00624000
*                             16 byte area that contains a unique       00625000
*                             identifier of the file.                   00626000
*                                                                       00627000
CAUD_CRED_ALET@      DS  A   Address of ALET for CRED structure.        00628000
*                                                                       00629000
CAUD_CRED@           DS  A   Address of the CRED structure.             00630000
*                                                                       00631000
CAUD_LEN           EQU *-CAUD   Constant - fixed length of CAUD.        00632000
*                                                                       00633000
*                                                                       00634000
*********************************************************************** 00635000
*                                                                     * 00636000
*                 COWN ASSEMBLER DECLARATIONS                         * 00637000
*---------------------------------------------------------------------* 00638000
*                                                                     * 00639000
*   DECLARATION NAME = COWN                                           * 00640000
*                                                                     * 00641000
*   DESCRIPTIVE NAME =   OMVS  RACF Change Owner and Group input      * 00642000
*                      parameter list.                                * 00643000
*                                                                     * 00644000
*   FUNCTION = Provides the BAL mapping of the input parameter        * 00645000
*              list for the   OMVS  Change Owner and Group service    * 00646000
*              routine.                                               * 00647000
*                                                                     * 00648000
*********************************************************************** 00649000
*                                                                       00650000
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 00650500
*                                                                       00651000
COWN                 DS  0C      Mapping for COWN                  @04A 00651500
*                                                                       00652000
COWN_UID_ALET@       DS  A       Address of ALET for Uid.               00653000
*                                                                       00654000
COWN_UID@            DS  A       Address of the Uid to be set as the    00655000
*                                 file owner Uid.                       00656000
*                                                                       00657000
COWN_GID_ALET@       DS  A       Address of ALET for Gid.               00658000
*                                                                       00659000
COWN_GID@            DS  A       Address of the Gid to be set as the    00660000
*                                 file owner Gid.                       00661000
*                                                                       00662000
COWN_FSP_ALET@       DS  A       Address of ALET for the FSP structure. 00663000
*                                                                       00664000
COWN_FSP@            DS  A       Address of the FSP structure.          00665000
*                                                                       00666000
COWN_FID_ALET@       DS  A       Address of ALET for the File Id.       00667000
*                                                                       00668000
COWN_FID@            DS  A       Address of the File Id which is a      00669000
*                                 16 byte area that contains a unique   00670000
*                                 identifier of the file.               00671000
*                                                                       00672000
COWN_CRED_ALET@      DS  A       Address of ALET for CRED structure.    00673000
*                                                                       00674000
COWN_CRED@           DS  A       Address of the CRED structure.         00675000
*                                                                       00676000
COWN_LEN           EQU *-COWN    Constant - fixed length of COWN.       00677000
*                                                                       00678000
*********************************************************************** 00679000
*                                                                     * 00680000
*                 UMSK ASSEMBLER DECLARATIONS                         * 00681000
*---------------------------------------------------------------------* 00682000
*                                                                     * 00683000
*   DECLARATION NAME = UMSK                                           * 00684000
*                                                                     * 00685000
*   DESCRIPTIVE NAME =   OMVS  RACF Set File Mode Creation Mask       * 00686000
*                      input parameter list.                          * 00687000
*                                                                     * 00688000
*   FUNCTION = Provides the BAL mapping of the input parameter        * 00689000
*              list for the   OMVS  Set File Mode Creation Mask       * 00690000
*              service routine.                                       * 00691000
*                                                                     * 00692000
*********************************************************************** 00693000
*                                                                       00694000
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 00694500
*                                                                       00695000
UMSK                 DS  0C      Mapping for UMSK                  @04A 00695500
*                                                                       00696000
UMSK_MODE_ALET@      DS  A       Address of ALET for the mode parameter 00697000
*                                                                       00698000
UMSK_MODE@           DS  A       Address of the mode parameter.         00699000
*                                                                       00700000
UMSK_LEN           EQU *-UMSK    Constant - fixed length of UMSK.       00701000
*                                                                       00702000
*********************************************************************** 00703000
*                                                                     * 00704000
*                 KACC ASSEMBLER DECLARATIONS                         * 00705000
*---------------------------------------------------------------------* 00706000
*                                                                     * 00707000
*   DECLARATION NAME = KACC                                           * 00708000
*                                                                     * 00709000
*   DESCRIPTIVE NAME =   OMVS  RACF Check Access input parameter      * 00710000
*                      list.                                          * 00711000
*                                                                     * 00712000
*   FUNCTION = Provides the BAL mapping of the input parameter        * 00713000
*              list for the   OMVS  Check Access service routine.     * 00714000
*                                                                     * 00715000
*********************************************************************** 00716000
*                                                                       00717000
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 00717500
*                                                                       00718000
KACC                 DS  0C   Mapping for KACC                     @04A 00718500
*                                                                       00719000
KACC_ACODE_ALET@     DS  A    Address of ALET for the access code.      00720000
*                                                                       00721000
KACC_ACODE@          DS  A    Address of a 1 byte access code that      00722000
*                              contains:                                00723000
*                               x'01' - execute access.                 00724000
*                               x'02' - write access.                   00725000
*                               x'03' - write and execute access.       00726000
*                               x'04' - read access.                    00727000
*                               x'05' - read and execute access.        00728000
*                               x'06' - read and write access.          00729000
*                               x'07' - read, write and execute access. 00730000
*                               x'81' - directory search access.        00731000
*                               x'87' - any access.                     00732000
*                                                                       00733000
KACC_FSP_ALET@       DS  A    Address of ALET for the FSP structure.    00734000
*                                                                       00735000
KACC_FSP@            DS  A    Address of the FSP structure.             00736000
*                                                                       00737000
KACC_FID_ALET@       DS  A    Address of ALET for the File Id.          00738000
*                                                                       00739000
KACC_FID@            DS  A    Address of the File Id which is a         00740000
*                              16 byte area that contains a unique      00741000
*                              identifier of the file.                  00742000
*                                                                       00743000
KACC_CRED_ALET@      DS  A    Address of ALET for CRED structure.       00744000
*                                                                       00745000
KACC_CRED@           DS  A    Address of the CRED structure.            00746000
*                                                                       00747000
KACC_FLAG_ALET@      DS  A    Address of the ALET for the name flag     00748000
*                              byte.                                    00749000
*                                                                       00750000
KACC_FLAG@           DS  A    Address of a byte flag that indicates     00751000
*                              which name is being checked:             00752000
*                              x'00' - Use the CRED_name_flag to        00753000
*                                      determine path name being        00754000
*                                      checked. Used by lookup.         00755000
*                              x'01' - The old (or only) name is        00756000
*                                      being checked. Used by all       00757000
*                                      calls except lookup and when     00758000
*                                      rename and link are checking     00759000
*                                      for write access to the          00760000
*                                      parent directory of the new      00761000
*                                      path name file.                  00762000
*                              x'02' - The new name is being checked.   00763000
*                                      Used by rename and link when     00764000
*                                      checking for write access to     00765000
*                                      the parent directory of the      00766000
*                                      new path name file.              00767000
*                                                                       00768000
KACC_LEN           EQU *-KACC Constant - fixed length of KACC.          00769000
*                                                                       00770000
*********************************************************************** 00771000
*                                                                     * 00772000
*                 QRYF ASSEMBLER DECLARATIONS                         * 00773000
*---------------------------------------------------------------------* 00774000
*                                                                     * 00775000
*   DECLARATION NAME = QRYF                                           * 00776000
*                                                                     * 00777000
*   DESCRIPTIVE NAME =   OMVS  RACF Query File Security Options       * 00778000
*                      input parameter list.                          * 00779000
*                                                                     * 00780000
*   FUNCTION = Provides the BAL mapping of the Query File Security    * 00781000
*              Options for the   OMVS  Query File Security Options    * 00782000
*              service routine.                                       * 00783000
*                                                                     * 00784000
*********************************************************************** 00785000
*                                                                       00786000
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 00786500
*                                                                       00787000
QRYF                 DS  0C      Mapping for QRYF                  @04A 00787500
*                                                                       00788000
QRYF_OCODE_ALET@     DS  A       Address of ALET for the option code.   00789000
*                                                                       00790000
QRYF_OCODE@          DS  A       Address of a 1 word option code that   00791000
*                                 contains:                             00792000
*                                  x'00000001'-POSIX_CHOWN_RESTRICTED.  00793000
*                                                                       00794000
QRYF_OUTV_ALET@      DS  A       Address of ALET for the output value.  00795000
*                                                                       00796000
QRYF_OUTV@           DS  A       Address of the output value that       00797000
*                                 contains:                             00798000
*                                  0 - POSIX_CHOWN_RESTRICTED.          00799000
*                                 -1 - Not POSIX_CHOWN_RESTRICTED.      00800000
*                                                                       00801000
QRYF_LEN           EQU *-QRYF    Constant - fixed length of QRYF.       00802000
*                                                                       00803000
*                                                                 6@P2D 00817500
*********************************************************************** 00832000
*                                                                     * 00833000
*                 KFOW ASSEMBLER DECLARATIONS                         * 00834000
*---------------------------------------------------------------------* 00835000
*                                                                     * 00836000
*   DECLARATION NAME = KFOW                                           * 00837000
*                                                                     * 00838000
*   DESCRIPTIVE NAME =   OMVS  RACF Check File Owner input parameter  * 00839000
*                      list.                                          * 00840000
*                                                                     * 00841000
*   FUNCTION = Provides the BAL mapping of the input parameter list   * 00842000
*              for the   OMVS  Check File Owner service routine.      * 00843000
*                                                                     * 00844000
*********************************************************************** 00845000
*                                                                       00846000
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 00846500
*                                                                       00847000
KFOW                 DS  0C      Mapping for KFOW                  @04A 00847500
*                                                                       00848000
KFOW_FSP_ALET@       DS  A       Address of ALET for the input FSP.     00849000
*                                                                       00850000
KFOW_FSP@            DS  A       Address of the input FSP.              00851000
*                                                                       00852000
KFOW_FID_ALET@       DS  A       Address of ALET for the File Id.       00853000
*                                                                       00854000
KFOW_FID@            DS  A       Address of the File Id which is a      00855000
*                                 16 byte area that contains a unique   00856000
*                                 identifier of the file.               00857000
*                                                                       00858000
KFOW_CRED_ALET@      DS  A       Address of ALET for CRED structure.    00859000
*                                                                       00860000
KFOW_CRED@           DS  A       Address of the CRED structure.         00861000
*                                                                       00862000
*                                                                       00863000
KFOW_LEN           EQU *-KFOW    Constant - fixed length of KFOW.       00864000
*                                                                       00865000
*********************************************************************** 00866000
*                                                                     * 00867000
*                 MKRT ASSEMBLER DECLARATIONS                         * 00868000
*---------------------------------------------------------------------* 00869000
*                                                                     * 00870000
*   DECLARATION NAME = MKRT                                           * 00871000
*                                                                     * 00872000
*   DESCRIPTIVE NAME =   OMVS  RACF Make Root FSP input parameter     * 00873000
*                      list.                                          * 00874000
*                                                                     * 00875000
*   FUNCTION = Provides the BAL mapping of the input parameter list   * 00876000
*              for the   OMVS  Make Root FSP service routine.         * 00877000
*                                                                     * 00878000
*********************************************************************** 00879000
*                                                                       00880000
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 00880500
*                                                                       00881000
MKRT                 DS  0C      Mapping for MKRT                  @04A 00881500
*                                                                       00882000
MKRT_MODE_ALET@      DS  A       Address of ALET for the mode parameter 00883000
*                                                                       00884000
MKRT_MODE@           DS  A       Address of the mode parameter.         00885000
*                                                                       00886000
MKRT_OFSP_ALET@      DS  A       Address of ALET for the output FSP     00887000
*                                 area.                                 00888000
*                                                                       00889000
MKRT_OFSP@           DS  A       Address of the output FSP area.        00890000
*                                                                       00891000
MKRT_FID_ALET@       DS  A       Address of ALET for the File Id.       00892000
*                                                                       00893000
MKRT_FID@            DS  A       Address of the File Id which is a      00894000
*                                 16 byte area that contains a unique   00895000
*                                 identifier of the file.               00896000
*                                                                       00897000
MKRT_DSN_ALET@       DS  A       Address of ALET for the name of the    00898000
*                                 dataset.                              00899000
*                                                                       00900000
MKRT_DSN@            DS  A       Address of an area that contains the   00901000
*                                 name of the PDSE/x data set being     00902000
*                                 created. (44 character length)        00903000
*                                                                       00904000
MKRT_LEN           EQU *-MKRT    Constant - fixed length of MKRT.       00905000
*                                                                       00906000
*********************************************************************** 00907000
*                                                                     * 00908000
*                 PTRC ASSEMBLER DECLARATIONS                         * 00909000
*---------------------------------------------------------------------* 00910000
*                                                                     * 00911000
*   DECLARATION NAME = PTRC                                           * 00912000
*                                                                     * 00913000
*   DESCRIPTIVE NAME =   OMVS  RACF Check PTRACE Authority input      * 00914000
*                      parameter list.                                * 00915000
*                                                                     * 00916000
*   FUNCTION = Provides the BAL mapping of the input parameter list   * 00917000
*              for the   OMVS  Check PTRACE Authority service         * 00918000
*              routine.                                               * 00919000
*                                                                     * 00920000
*********************************************************************** 00921000
*                                                                       00922000
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 00922500
*                                                                       00923000
PTRC                 DS  0C      Mapping for PTRC                  @04A 00923500
*                                                                       00924000
PTRC_TUID_ALET@      DS  A       Address of ALET for the target UIDs    00925000
*                                 area.                                 00926000
*                                                                       00927000
PTRC_TUID@           DS  A       Address of a 3 word area that contains 00928000
*                                 the REAL, EFFECTIVE, and SAVED UIDs   00929000
*                                 (in that order) for the target        00930000
*                                  process.                             00931000
*                                                                       00932000
PTRC_TGID_ALET@      DS  A       Address of ALET for the target GIDs    00933000
*                                 area.                                 00934000
*                                                                       00935000
PTRC_TGID@           DS  A       Address of a 3 word area that contains 00936000
*                                 the REAL, EFFECTIVE, and SAVED GIDs   00937000
*                                 (in that order) for the target        00938000
*                                  process.                             00939000
*                                                                       00940000
PTRC_TPID_ALET@      DS  A       Address of ALET for the target PID.    00941000
*                                                                       00942000
PTRC_TPID@           DS  A       Address of a word that contains the    00943000
*                                 PID of the target process.            00944000
*                                                                       00945000
PTRC_LEN           EQU *-PTRC    Constant - fixed length of PTRC.       00946000
*                                                                       00947000
*********************************************************************** 00948000
*                                                                     * 00949000
*                 MFSP ASSEMBLER DECLARATIONS                         * 00950000
*---------------------------------------------------------------------* 00951000
*                                                                     * 00952000
*   DECLARATION NAME = MFSP                                           * 00953000
*                                                                     * 00954000
*   DESCRIPTIVE NAME =   OMVS  RACF Make FSP input parameter list.    * 00955000
*                                                                     * 00956000
*   FUNCTION = Provides the BAL mapping of the input parameter list   * 00957000
*              for the   OMVS  Make FSP service routine.              * 00958000
*                                                                     * 00959000
*********************************************************************** 00960000
*                                                                       00961000
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 00961500
*                                                                       00962000
MFSP                 DS  0C      Mapping for MFSP                  @04A 00962500
*                                                                       00963000
MFSP_MODE_ALET@      DS  A       Address of ALET for the mode parameter 00964000
*                                                                       00965000
MFSP_MODE@           DS  A       Address of the mode parameter.         00966000
*                                                                       00967000
MFSP_OFSP_ALET@      DS  A       Address of ALET for the output FSP     00968000
*                                 area.                                 00969000
*                                                                       00970000
MFSP_OFSP@           DS  A       Address of the output FSP area.        00971000
*                                                                       00972000
*                                                                       00973000
MFSP_ODFSP_ALET@     DS  A       Address of ALET for the owning         00974000
*                                 directory FSP.                        00975000
*                                                                       00976000
MFSP_ODFSP@          DS  A       Address of the owning directory FSP.   00977000
*                                                                       00978000
MFSP_FID_ALET@       DS  A       Address of ALET for the File Id.       00979000
*                                                                       00980000
MFSP_FID@            DS  A       Address of the File Id which is a      00981000
*                                 16 byte area that contains a unique   00982000
*                                 identifier of the file.               00983000
MFSP_CRED_ALET@      DS  A       Address of ALET for CRED structure.    00984000
*                                                                       00985000
MFSP_CRED@           DS  A       Address of the CRED structure.         00986000
*                                                                       00987000
MFSP_LEN           EQU *-MFSP    Constant - fixed length of MFSP.       00988000
*                                                                       00989000
*********************************************************************** 00990000
*                                                                     * 00991000
*                 RAUD ASSEMBLER DECLARATIONS                         * 00992000
*---------------------------------------------------------------------* 00993000
*                                                                     * 00994000
*   DECLARATION NAME = RAUD                                           * 00995000
*                                                                     * 00996000
*   DESCRIPTIVE NAME =   OMVS  RACF Audit input parameter list.       * 00997000
*                                                                     * 00998000
*   FUNCTION = Provides the BAL mapping of the input parameter list   * 00999000
*              for the   OMVS  Audit service routine.                 * 01000000
*                                                                     * 01001000
*********************************************************************** 01002000
*                                                                       01003000
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 01003500
*                                                                       01004000
RAUD                 DS  0C      Mapping for RAUD                  @04A 01004500
*                                                                       01005000
RAUD_CRED_ALET@      DS  A       Address of ALET for CRED structure.    01006000
*                                                                       01007000
RAUD_CRED@           DS  A       Address of the CRED structure.         01008000
*                                                                       01009000
RAUD_OFID_ALET@      DS  A       Address of ALET for the File Id of     01010000
*                                 the old (or only) file.               01011000
*                                                                       01012000
RAUD_OFID@           DS  A       Address of the File Id for the old     01013000
*                                 (or only) file. The File Id is a      01014000
*                                 16 byte area that contains a unique   01015000
*                                 identifier of the file.               01016000
*                                                                       01017000
RAUD_OFSP_ALET@      DS  A       Address of ALET for the FSP for the    01018000
*                                 old (or only) file.                   01019000
*                                                                       01020000
RAUD_OFSP@           DS  A       Address of the FSP for the old         01021000
*                                 (or only) file.                       01022000
*                                                                       01023000
RAUD_FLAG_ALET@      DS  A       Address of ALET for the flag byte.     01024000
*                                                                       01025000
RAUD_FLAG@           DS  A       Address of a flag byte that indicates: 01026000
*                                 x'00' - last link was not removed.    01027000
*                                 x'01' - last link was removed for     01028000
*                                         a file. The file is deleted.  01029000
*                                This parameter is used only on rename  01030000
*                                and unlink. On a rename, the new name  01031000
*                                is deleted. On unlink, the 'only'      01032000
*                                name was deleted.                      01033000
*                                                                       01034000
RAUD_NFID_ALET@      DS  A       Address of ALET for the File Id of     01035000
*                                 the NEW file. This parameter is       01036000
*                                 used only on a rename.                01037000
*                                                                       01038000
RAUD_NFID@           DS  A       Address of the File Id for the NEW     01039000
*                                 file. This parameter is used only     01040000
*                                 on a rename. The File Id is a         01041000
*                                 16 byte area that contains a unique   01042000
*                                 identifier of the file.               01043000
*                                                                       01044000
RAUD_NFSP_ALET@      DS  A       Address of ALET for the FSP for the    01045000
*                                 NEW file. This parameter is used      01046000
*                                 only on a rename.                     01047000
*                                                                       01048000
RAUD_NFSP@           DS  A       Address of the FSP for the NEW file.   01049000
*                                 This parameter is used only on a      01050000
*                                 rename.                               01051000
*                                                                       01052000
RAUD_LEN           EQU *-RAUD    Constant - fixed length of RAUD.       01053000
*                                                                       01054000
*********************************************************************** 01055000
*                                                                     * 01056000
*                 GUGP ASSEMBLER DECLARATIONS                         * 01057000
*---------------------------------------------------------------------* 01058000
*                                                                     * 01059000
*   DECLARATION NAME = GUGP                                           * 01060000
*                                                                     * 01061000
*   DESCRIPTIVE NAME =   OMVS  RACF Get Users Groups input            * 01062000
*                      parameter list.                                * 01063000
*                                                                     * 01064000
*   FUNCTION = Provides the BAL mapping of the input parameter list   * 01065000
*              for the   OMVS  RACF Get Users Groups service          * 01066000
*              routine.                                               * 01067000
*                                                                     * 01068000
*********************************************************************** 01069000
*                                                                       01070000
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 01070500
*                                                                       01071000
GUGP                 DS  0C      Mapping for GUGP                  @04A 01071500
*                                                                       01072000
GUGP_KEY_ALET@       DS  A       Address of ALET for the user's key.    01073000
*                                                                       01074000
GUGP_KEY@            DS  A       Address of a byte that contains the    01075000
*                                 user's key. The key is in the high    01076000
*                                 order 4 bits of the byte.             01077000
*                                                                       01078000
GUGP_NLEN_ALET@      DS  A       Address of ALET for the USERID         01079000
*                                 length.                               01080000
*                                                                       01081000
GUGP_NLEN@           DS  A       Address of 1 byte USERID length.       01082000
*                                                                       01083000
GUGP_NAME_ALET@      DS  A       Address of ALET for the USERID.        01084000
*                                                                       01085000
GUGP_NAME@           DS  A       Address of 8 byte USERID.              01086000
*                                                                       01087000
GUGP_GCNT_ALET@      DS  A       Address of ALET for the Group Count.   01088000
*                                                                       01089000
GUGP_GCNT@           DS  A       Address of the group count. (A one     01090000
*                                 word area that contains the number    01091000
*                                 of GIDs in the Grouplist area.)       01092000
*                                                                       01093000
GUGP_GLST_ALET@      DS  A       Address of ALET for the Group List.    01094000
*                                                                       01095000
GUGP_GLST@           DS  A       Address of the Group List area in      01096000
*                                 which supplemental GIDs are returned. 01097000
*                                                                       01098000
GUGP_GNUM_ALET@      DS  A       Address of ALET for the number of      01099000
*                                 groups.                               01100000
*                                                                       01101000
GUGP_GNUM@           DS  A       Address of the Number Of Groups.       01102000
*                                 A one word area in which the number   01103000
*                                 of supplemental group GIDs is         01104000
*                                 returned.                             01105000
*                                                                       01106000
GUGP_LEN           EQU *-GUGP    Constant - fixed length of the GUGP.   01107000
*                                                                       01108000
*********************************************************************** 01109000
*                                                                     * 01110000
*                 FORK ASSEMBLER DECLARATIONS                         * 01111000
*---------------------------------------------------------------------* 01112000
*                                                                     * 01113000
*   DECLARATION NAME = FORK                                           * 01114000
*                                                                     * 01115000
*   DESCRIPTIVE NAME =   OMVS  RACF FORK Exit input parameter list.   * 01116000
*                                                                     * 01117000
*   FUNCTION = Provides the BAL mapping of the input parameter list   * 01118000
*              for the   OMVS  RACF FORK Exit service routine.        * 01119000
*                                                                     * 01120000
*********************************************************************** 01121000
*                                                                       01122000
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 01122500
*                                                                       01123000
FORK                 DS  0C      Mapping for FORK                  @04A 01123500
*                                                                       01124000
FORK_FLAG_ALET@      DS  A       Address of the ALET for the fork flag. 01125000
*                                                                       01126000
FORK_FLAG@           DS  A       Address of a word flag that indicates  01127000
*                                 the current type of processing:       01128000
*                                  x'00' - Fork Parent Processing.      01129000
*                                  x'02' - Fork Parent Processing  @LGA 01129300
*                                          Extended Data           @LGA 01129600
*                                  x'01' - Forked Child Processing.     01130000
*                                  x'03' - Forked Child Processing @LGA 01130300
*                                          Extended Data           @LGA 01130600
*                                                                       01131000
FORK_DATAKEY_ALET@   DS  A       Address of ALET for the data's         01132000
*                                 storage key.                          01133000
*                                                                       01134000
FORK_DATAKEY@        DS  A       Address of a word that contains the    01135000
*                                 storage key from which the storage    01136000
*                                 for the data is to be obtained.       01137000
*                                                                       01138000
FORK_DATALEN_ALET@   DS  A       Address of ALET for the data length.   01139000
*                                                                       01140000
FORK_DATALEN@        DS  A       Address of a word that contains the    01141000
*                                 data length.                          01142000
*                                                                       01143000
FORK_DATA_ALET@      DS  A       Address of the data ALET.              01144000
*                                                                       01145000
FORK_DATA@           DS  A       Address of the data being passed       01146000
*                                 from the parent to the child via      01147000
*                                 FORK.                                 01148000
*                                                                       01149000
FORK_DATASP_ALET@    DS  A       Address of ALET for the data subpool.  01150000
*                                                                       01151000
FORK_DATASP@         DS  A       Address of a word that contains the    01152000
*                                 subpool from which to obtain          01153000
*                                 storage to hold the data.             01154000
*                                                                       01155000
FORK_LEN           EQU *-FORK   Constant - fixed length of the FORK.    01156000
FORK_PARENT        EQU 0        Constant - Fork Parent processing flag. 01157000
FORK_PARENTX       EQU 2        Constant - Fork Parent processing  @LGA 01157300
*                                          Extended Data flag.     @LGA 01157600
FORK_CHILD         EQU 1        Constant - Fork Child processing flag.  01158000
FORK_CHILDX        EQU 3        Constant - Fork Child processing   @LGA 01158100
*                                          Extended Data flag.     @LGA 01158200
*                                                                       01158300
*********************************************************************** 01158400
*                                                                     * 01158500
*                 MISP ASSEMBLER DECLARATIONS                         * 01158600
*---------------------------------------------------------------------* 01158700
*                                                                     * 01158800
*   DECLARATION NAME = MISP                                           * 01158900
*                                                                     * 01159000
*   DESCRIPTIVE NAME =   OMVS  RACF Make ISP input parameter list.    * 01159100
*                                                                     * 01159200
*   FUNCTION = Provides the BAL mapping of the input parameter list   * 01159300
*              for the   OMVS  Make ISP service routine.              * 01159400
*                                                                     * 01159500
*********************************************************************** 01159600
*                                                                       01159700
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 01159800
*                                                                       01159900
MISP                 DS  0C      Mapping for MISP                  @04A 01160000
*                                                                       01160100
MISP_MODE_ALET@      DS  A       Address of ALET for the mode.    @L1A  01160200
*                                                                       01160300
MISP_MODE@           DS  A       Address of the mode parameter.   @L1A  01160400
*                                                                       01160500
MISP_OISP_ALET@      DS  A       Address of ALET for the ISP.     @L1A  01160600
*                                                                       01160700
MISP_OISP@           DS  A       Address of the output ISP area.  @L1A  01160800
*                                                                       01160900
MISP_OIPC_ALET@      DS  A       Address of ALET for the output IPCP.   01161000
*                                                                       01161100
MISP_OIPC@           DS  A       Address of the IPCP.             @L1A  01161200
*                                                                       01161300
MISP_CREI_ALET@      DS  A       Address of ALET for CREDIPC structure. 01161400
*                                                                       01161500
MISP_CREI@           DS  A       Address of the CREDIPC structure @L1A  01161600
*                                                                       01161700
MISP_LEN           EQU *-MISP    Constant - fixed length of MISP. @L1A  01161800
*                                                                       01161900
*********************************************************************** 01162000
*                                                                     * 01162100
*                 IACC ASSEMBLER DECLARATIONS                         * 01162200
*---------------------------------------------------------------------* 01162300
*                                                                     * 01162400
*   DECLARATION NAME = IACC                                           * 01162500
*                                                                     * 01162600
*   DESCRIPTIVE NAME =   OMVS  RACF Check access to ISP input         * 01162700
*                      parameter.                                     * 01162800
*                                                                     * 01162900
*   FUNCTION = Provides the BAL mapping of the input parameter        * 01163000
*              list for the   OMVS  Check ISP access service routine. * 01163100
*                                                                     * 01163200
*********************************************************************** 01163300
*                                                                       01163400
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 01163500
*                                                                       01163600
IACC                 DS  0C   Mapping for IACC                     @04A 01163700
*                                                                       01163800
IACC_ACODE_ALET@     DS  A    Address of ALET for the access code. @L1A 01163900
*                                                                       01164000
IACC_ACODE@          DS  A    Address of a 1 byte access code that @L1A 01164100
*                              contains:                                01164200
*                               x'00' - No access.                      01164300
*                               x'02' - write access.                   01164400
*                               x'04' - read access.                    01164500
*                               x'06' - read and write access           01164600
*                                                                       01164700
IACC_ISP_ALET@       DS  A    Address of ALET for the ISP struc.   @L1A 01164800
*                                                                       01164900
IACC_ISP@            DS  A    Address of the ISP structure.        @L1A 01165000
*                                                                       01165100
IACC_CREI_ALET@      DS  A    Address of ALET for CREDIPC struc.   @L1A 01165200
*                                                                       01165300
IACC_CREI@           DS  A    Address of the CREDIPC structure.    @L1A 01165400
*                                                                       01165500
*                                                                       01165600
IACC_LEN           EQU *-IACC Constant - fixed length of IACC.     @L1A 01165700
*                                                                       01165800
*********************************************************************** 01165900
*                                                                     * 01166000
*                 IOWN ASSEMBLER DECLARATIONS                         * 01166100
*---------------------------------------------------------------------* 01166200
*                                                                     * 01166300
*   DECLARATION NAME = IOWN                                           * 01166400
*                                                                     * 01166500
*   DESCRIPTIVE NAME =   OMVS  RACF Perform R_IPC_control Change      * 01166600
*                        Owner and Group input parameter list     @03C* 01166700
*                                                                     * 01166800
*   FUNCTION = Provides the BAL mapping of the input parameter        * 01166900
*              list for the   OMVS  R_IPC_control service routine @03C* 01167000
*                                                                     * 01167100
*********************************************************************** 01167200
*                                                                       01167300
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 01167400
*                                                                       01167500
IOWN                 DS  0C      Mapping for IOWN                  @04A 01167600
*                                                                       01167700
*                                                                       01167800
IOWN_CMD_ALET@       DS  A       Address of ALET for cmd code.     @L1A 01167900
*                                                                       01168000
IOWN_CMD@            DS  A       Address of cmd code.              @L1A 01168100
*                                                                       01168200
IOWN_UID_ALET@       DS  A       Address of ALET for Uid.          @L1A 01168300
*                                                                       01168400
IOWN_UID@            DS  A       Address of the Uid to be set as the    01168500
*                                 ISP owner UID.                   @L1A 01168600
*                                                                       01168700
IOWN_GID_ALET@       DS  A       Address of ALET for Gid.          @L1A 01168800
*                                                                       01168900
IOWN_GID@            DS  A       Address of the Gid to be set as the    01169000
*                                 ISP owner GID.                   @L1A 01169100
*                                                                       01169200
IOWN_MODE_ALET@      DS  A       Address of ALET for the mode parameter 01169300
*                                                                       01169400
IOWN_MODE@           DS  A       Address of the mode parameter.    @L1A 01169500
*                                                                       01169600
IOWN_ISP_ALET@       DS  A       Address of ALET for the ISP structure. 01169700
*                                                                       01169800
IOWN_ISP@            DS  A       Address of the ISP structure.     @L1A 01169900
*                                                                       01170000
IOWN_CREI_ALET@      DS  A       Address of ALET for CREDIPC structure. 01170100
*                                                                       01170200
IOWN_CREI@           DS  A       Address of the CREDIPC structure. @L1A 01170300
*                                                                       01170400
IOWN_LEN           EQU *-IOWN    Constant - fixed length of IOWN.  @L1A 01170500
*                                                                       01170600
*********************************************************************** 01170700
*                                                                     * 01170800
*                 CKO2 ASSEMBLER DECLARATIONS                         * 01170900
*---------------------------------------------------------------------* 01171000
*                                                                     * 01171100
*   DECLARATION NAME = CKO2                                           * 01171200
*                                                                     * 01171300
*   DESCRIPTIVE NAME =   OMVS check owner two files parameter list.   * 01171400
*                                                                     * 01171500
*   FUNCTION = Provides the BAL mapping of the input parameter        * 01171600
*              list for the OMVS check owner two files routine.       * 01171700
*                                                                     * 01171800
*********************************************************************** 01171900
*                                                                       01172000
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 01172100
*                                                                       01172200
CKO2                 DS  0C      Mapping for CK02                  @04A 01172300
*                                                                       01172400
CKO2_FSP1_ALET@      DS  A       Address of ALET for the first FSP.     01172500
*                                                                  @L2A 01172600
*                                                                       01172700
CKO2_FSP1@           DS  A       Address of the first FSP.         @L2A 01172800
*                                                                       01172900
CKO2_FSP2_ALET@      DS  A       Address of ALET for the second         01173000
*                                 FSP.                             @L2A 01173100
*                                                                       01173200
CKO2_FSP2@           DS  A       Address of the second FSP.        @L2A 01173300
*                                                                       01173400
CKO2_FID1_ALET@      DS  A       Address of ALET for the first          01173500
*                                 File ID.                         @L2A 01173600
*                                                                       01173700
CKO2_FID1@           DS  A       Address of the first File ID.          01173800
*                                                                  @L2A 01173900
*                                                                       01174000
CKO2_FID2_ALET@      DS  A       Address of ALET for the                01174100
*                                 Second File ID.                  @L2A 01174200
*                                                                       01174300
CKO2_FID2@           DS  A       Address of the second File ID.    @L2A 01174400
*                                                                       01174500
CKO2_CRED_ALET@      DS  A       Address of ALET for CRED               01174600
*                                 Structure.                       @L2A 01174700
*                                                                       01174800
CKO2_CRED@           DS  A       Address of the CRED structure.    @L2A 01174900
*                                                                       01175000
CKO2_LEN           EQU *-CKO2    Constant - fixed length of CKO2.  @L2A 01175100
*                                                                       01175200
*********************************************************************** 01175300
*                                                                     * 01175400
*                 GETE ASSEMBLER DECLARATIONS                         * 01175500
*---------------------------------------------------------------------* 01175600
*                                                                     * 01175700
*   DECLARATION NAME = GETE                                           * 01175800
*                                                                     * 01175900
*   DESCRIPTIVE NAME =   OMVS  RACF Get real, effective, saved        * 01176000
*                      UIDs/GIDs and supplemental groups from the     * 01176100
*                      USP parameter list.                            * 01176200
*                                                                     * 01176300
*   FUNCTION = Provides the BAL mapping of the input parameter        * 01176400
*              list for the OMVS Get real,eff,saved UIDs/GIDs and     * 01176500
*              supplemental groups routine.                           * 01176600
*********************************************************************** 01176700
*                                                                       01176800
                     ORG   COMP_SERVR_PARMS  Follows common plist  @04C 01176900
*                                                                       01177000
GETE                 DS  0C     Mapping for GETE                   @04A 01177100
*                                                                       01177200
*                                                                       01177300
GETE_WORKB_ALET@     DS  A      Address of ALET for 1024 byte      @D1A 01177400
*                                work area.                             01177500
*                                                                       01177600
GETE_WORKB@          DS  A      Address of 1024 byte work area.    @D1A 01177700
*                                                                       01177800
GETE_KEY_ALET@       DS  A      Address of ALET for the user's key @L3A 01177900
*                                                                       01178000
GETE_KEY@            DS  A      Address of a byte that contains    @L3A 01178100
*                                the user's key. The key is in the      01178200
*                                high order 4 bits of the byte.         01178300
*                                                                       01178400
GETE_GCNT_ALET@      DS  A      Address of ALET for the Group Cnt  @L3A 01178500
*                                                                       01178600
GETE_GCNT@           DS  A      Address of the group count. (A one @L3A 01178700
*                                word area that contains the number     01178800
*                                of GIDs in the Grouplist area.)        01178900
*                                                                       01179000
GETE_GLST_ALET@      DS  A      Address of ALET for the Group List @L3A 01179100
*                                                                       01179200
GETE_GLST@           DS  A      Address of the Group List area in  @L3A 01179300
*                                which supplemental GIDs are returned.  01179400
*                                                                       01179500
GETE_GNUM_ALET@      DS  A      Address of ALET for the number of  @L3A 01179600
*                                groups.                                01179700
*                                                                       01179800
GETE_GNUM@           DS  A      Address of the Number Of Groups.   @L3A 01179900
*                                A one word area in which the number    01180000
*                                of supplemental group GIDs is          01180100
*                                returned.                              01180200
*                                                                       01180300
GETE_UID_ALET@       DS  A      Address of ALET for UIDs.          @L3A 01180400
*                                                                       01180500
GETE_UID@            DS  A      Address of a 3 word output area.   @P3C 01180600
*                                This area contains the real,           01180700
*                                effective and saved UIDs.              01180800
*                                                                       01180900
GETE_GID_ALET@       DS  A      Address of ALET for GIDs.          @L3A 01181000
*                                                                       01181100
GETE_GID@            DS  A      Address of a 3 word output area.   @P3C 01181200
*                                This area contains the real,           01181300
*                                effective and saved GIDs.              01181400
*                                                                       01181500
GETE_LEN           EQU *-GETE   Constant - fixed length of GETE.   @L3A 01181600
*                                                                       01181700
*********************************************************************** 01181800
*                                                                     * 01181900
*                 DKEY ASSEMBLER DECLARATIONS                         * 01182000
*---------------------------------------------------------------------* 01182100
*                                                                     * 01182200
*   DECLARATION NAME = DKEY                                           * 01182300
*                                                                     * 01182400
*   DESCRIPTIVE NAME =   OMVS DCE  Retrieve or replace DCE Key        * 01182500
*                                                                     * 01182600
*   FUNCTION = Provides the ASSEMBLER mapping of the input parameter  * 01182700
*              list for the service to retrieve or replace the        * 01182800
*              DPASSWDS within a RACF user profile.                   * 01182900
*********************************************************************** 01183000
*                                                                       01183100
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 01183200
*                                                                       01183300
DKEY                 DS  0C     Mapping for DKEY callable service  @04A 01183400
*                                                                       01183500
*                                                                       01183600
DKEY_FUNC_ALET@      DS  A      Address of ALET for Function code  @01A 01183700
*                                                                       01183800
DKEY_FUNC@           DS  A      Address of 1 byte function code    @01A 01183900
*                                                                       01184000
DKEY_USERID_ALET@    DS  A      Address of ALET for the RACF userid@01A 01184100
*                                                                       01184200
DKEY_USERID@         DS  A      Address of 9 byte area that contains    01184300
*                                a 1 byte length followed by a          01184400
*                                userid of up to 8 characters      @01A 01184500
*                                                                       01184600
DKEY_KEY_ALET@       DS  A      Address of ALET for the DCE key    @01A 01184700
*                                                                       01184800
DKEY_KEY@            DS  A      Address of the output key area, if      01184900
*                                retrieving the DCE key, or new key if  01185000
*                                setting the user's DCE key        @01A 01185100
*                                                                       01185200
DKEY_KEYL_ALET@      DS  A      Address of ALET for the DCE key length  01185300
*                                                                  @01A 01185400
*                                                                       01185500
DKEY_KEYL@           DS  A      Address of fullword containing the      01185600
*                                DCE key area length               @01A 01185700
*                                                                       01185800
DKEY_LEN           EQU *-DKEY   Constant - fixed length of DKEY    @01A 01185900
*                                                                       01186000
*                                                                       01186100
DKEY_GET           EQU X'01'    Constant - Retrieve DCE key        @01A 01186200
DKEY_PUT           EQU X'02'    Constant - Replace DCE key         @01A 01186300
*********************************************************************** 01186400
*                                                                     * 01186500
*                 DINF ASSEMBLER DECLARATIONS                         * 01186600
*---------------------------------------------------------------------* 01186700
*                                                                     * 01186800
*   DECLARATION NAME = DINF                                           * 01186900
*                                                                     * 01187000
*   DESCRIPTIVE NAME =   OMVS DCE  Retrieve or replace DCE Info       * 01187100
*                                                                     * 01187200
*   FUNCTION = Provides the ASSEMBLER mapping of the input parameter  * 01187300
*              list for the service to retrieve or replace the        * 01187400
*              DCE UUID, DCENAME, or HOMECELL within a RACF user      * 01187500
*              profile.                                               * 01187600
*********************************************************************** 01187700
*                                                                       01187800
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 01187900
*                                                                       01188000
DINF                 DS  0C     Mapping for DINF                   @04A 01188100
*                                                                       01188200
*                                                                       01188300
DINF_FUNC_ALET@      DS  A      Address of ALET for Function code  @01A 01188400
*                                                                       01188500
DINF_FUNC@           DS  A      Address of 1 byte function code    @01A 01188600
*                                                                       01188700
DINF_USERID_ALET@    DS  A      Address of ALET for the RACF userid@01A 01188800
*                                                                       01188900
DINF_USERID@         DS  A      Address of 9 byte area that contains    01189000
*                                a 1 byte length followed by a          01189100
*                                userid of up to 8 characters      @01A 01189200
*                                                                       01189300
DINF_FIELDL_ALET@    DS  A      Address of ALET for the Field List @01A 01189400
*                                                                       01189500
DINF_FIELDL@         DS  A      Address of an area containing input     01189600
*                                Field_list                        @01A 01189700
*                                                                       01189800
DINF_OUTPUTA_ALET@   DS  A      Address of ALET for the Output area@01A 01189900
*                                                                       01190000
DINF_OUTPUTA@        DS  A      Address of area which contains the      01190100
*                                contents of the data obtained     @01A 01190200
*                                                                       01190300
DINF_OUTPUTL_ALET@   DS  A      Address of ALET for the Output area     01190400
*                                length                            @01A 01190500
*                                                                       01190600
DINF_OUTOUTL@        DS  A      Address of fullword containing the      01190700
*                                Output area length                @01A 01190800
*                                                                       01190900
DINF_LEN           EQU *-DINF   Constant - fixed length of DINF    @01A 01191000
*                                                                       01191100
DINF_GET           EQU X'01'    Constant - Retrieve DCE info       @01A 01191200
DINF_PUT           EQU X'02'    Constant - Replace DCE info        @01A 01191300
*********************************************************************** 01191400
*                                                                     * 01191500
*                DRUR ASSEMBLER DECLARATIONS                          * 01191600
*---------------------------------------------------------------------* 01191700
*                                                                     * 01191800
*  DECLARATION NAME = DRUR                                            * 01191900
*                                                                     * 01192000
*  DESCRIPTIVE NAME =   RACF userid - DCE UUID mapping parameters     * 01192100
*                                                                     * 01192200
*  FUNCTION = Provides the ASSEMBLER mapping of the input paramter    * 01192300
*             list for the service to map a RACF userid to a DCE      * 01192400
*             principal UUID/home cell UUID pair.                     * 01192500
*********************************************************************** 01192600
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 01192700
*                                                                       01192800
DRUR                 DS  0C     Mapping for DRUR                   @04A 01192900
*                                                                       01193000
*                                                                       01193100
DRUR_FUNC_ALET@      DS  A      Address of ALET for Function code  @02A 01193200
*                                                                       01193300
DRUR_FUNC@           DS  A      Address of 1 byte function code    @02A 01193400
*                                                                       01193500
DRUR_PRIN_UUID_ALET@ DS  A      Address of ALET for the DCE principal   01193600
*                               UUID                                    01193700
*                                                                       01193800
DRUR_PRIN_UUID@      DS  A      Address of a 36 byte input/output area  01193900
*                               for the DCE principal UUID         @02A 01194000
*                                                                       01194100
*           The following two fields address the home cell UUID         01194200
*           which is optional.  Indicate no home cell UUID passed       01194300
*           by having the pointer and alet address a null byte.    @02A 01194400
DRUR_HOME_UUID_ALET@ DS  A      Address of ALET for the DCE home cell   01194500
*                               UUID                               @02A 01194600
*                                                                       01194700
DRUR_HOME_UUID@      DS  A      Address of a 36 byte input/output area  01194800
*                               for the DCE home cell UUID         @02A 01194900
*                                                                       01195000
DRUR_USERID_ALET@    DS  A      Address of ALET for the RACF userid     01195100
*                                                                  @02A 01195200
DRUR_USERID@         DS  A      Address of a 9 byte input/output area   01195300
*                               for the RACF userid (1 byte for the     01195400
*                               length followed by up to 8 bytes for    01195500
*                               the RACF userid itself)            @02A 01195600
*                                                                       01195700
DRUR_LEN             EQU *-DRUR Constant - fixed length of DRUR    @02A 01195800
*                                                                       01195900
DRUR_GET_RACF_USERID EQU X'01'  Constant - UUID->RACF userid       @02A 01196000
DRUR_GET_DCE_UUID    EQU X'02'  Constant - RACF userid->UUID       @02A 01196100
*                                                                       01196200
*                                                                       01196300
*********************************************************************** 01196400
*                                                                     * 01196500
*                DAUT ASSEMBLER DECLARATIONS                          * 01196600
*---------------------------------------------------------------------* 01196700
*                                                                     * 01196800
*  DECLARATION NAME = DAUT                                            * 01196900
*                                                                     * 01197000
*  DESCRIPTIVE NAME =   RACF Authorization of a DCE Client            * 01197100
*                                                                     * 01197200
*  FUNCTION = Provides the ASSEMBLER mapping of the input paramter    * 01197300
*             list for the service which allows MVS servers to verify * 01197400
*             the authority of a DCE Client (who is also a RACF user) * 01197500
*             to resources on the MVS system that are protected by    * 01197600
*             RACF.                                                   * 01197700
*                                                                     * 01197800
*********************************************************************** 01197900
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 01198000
*                                                                       01198100
DAUT                 DS  0C     Mapping for DAUT                   @04A 01198200
*                                                                       01198300
*                                                                       01198400
DAUT_ACEEP@          DS  A      Address of a full word containing the   01198500
*                               address of a                            01198600
*                               previously created ACEE (or 0)     @03A 01198700
*                                                                       01198800
DAUT_ALET@           DS  A      Address of ALET for following           01198900
*                               variables.                         @03A 01199000
*                                                                       01199100
DAUT_PRIN_UUID@      DS  A      Address of a 36 byte area for the       01199200
*                               DCE principal UUID                 @03A 01199300
*                                                                       01199400
DAUT_HOME_UUID@      DS  A      Address of a 36 byte area for the       01199500
*                               DCE home cell UUID                 @03A 01199600
*                                                                       01199700
DAUT_USERID@         DS  A      Address of a 9 byte area                01199800
*                               for the RACF userid (1 byte for the     01199900
*                               length followed by up to 8 bytes for    01200000
*                               the RACF userid itself)            @03A 01200100
*                                                                       01200200
DAUT_CLASS_NAME@     DS  A      Address of an 8 byte area for           01200300
*                               the RACF class name of a resource.      01200400
*                               The class name must be left justified   01200500
*                               and padded to the right with blanks.    01200600
*                                                                  @03A 01200700
*                                                                       01200800
DAUT_ENT_NAME@       DS  A      Address of an area for the RACF         01200900
*                               resource profile name.             @03A 01201000
*                                                                       01201100
DAUT_ENT_LEN@        DS  A      Address of a 2 byte area which          01201200
*                               contains the length of the resource     01201300
*                               profile name.                      @03A 01201400
*                                                                       01201500
DAUT_ACC_REQ@        DS  A      Address of a 1 byte area containing     01201600
*                               the requested access to the             01201700
*                               resource.                          @03A 01201800
*                                                                       01201900
DAUT_LEN             EQU *-DAUT Constant - fixed length of DAUT    @03A 01202000
*                                                                       01202100
DAUT_READ            EQU X'02'  Constant - READ access requested   @03A 01202200
DAUT_UPDATE          EQU X'04'  Constant - UPDATE access request.  @03A 01202300
DAUT_CONTROL         EQU X'08'  Constant - CONTROL access request. @03A 01202400
DAUT_ALTER           EQU X'80'  Constant - ALTER access requested  @03A 01202500
*                                                                       01202600
*                                                                       01202700
*********************************************************************** 01202800
*                                                                     * 01202900
*                INTA ASSEMBLER DECLARATIONS                          * 01203000
*---------------------------------------------------------------------* 01203100
*                                                                     * 01203200
*  DECLARATION NAME = INTA                                            * 01203300
*                                                                     * 01203400
*  DESCRIPTIVE NAME =   RACF Initialize ACEE                          * 01203500
*                                                                     * 01203600
*  FUNCTION = Provides the ASSEMBLER mapping of the input paramter    * 01203700
*      list for the service which will create/delete/manage ACEEs.    * 01203800
*                                                                     * 01203900
*********************************************************************** 01204000
                     ORG   COMP_SERVR_PARMS   Follows common plist @L4A 01204100
*                                                                       01204200
INTA                 DS  0C     Mapping for INTA                   @L4A 01204300
*                                                                       01204400
*                                                                       01204500
INTA_FUNC@           DS  A      Address of 1 byte function code    @L4A 01204600
*                                                                       01204700
INTA_ATTRIBUTES@     DS  A      Address of a full word area             01204800
*                               which contains the attribute flags      01204900
*                               for the service                    @L4A 01205000
*                                                                       01205100
INTA_USERID@         DS  A      Address of 9 byte area for the          01205200
*                               RACF userid (1 byte for the             01205300
*                               length followed by up to 8 bytes        01205400
*                               for the RACF userid itself)        @L4A 01205500
*                                                                       01205600
INTA_ACEEP@          DS  A      Address of a full word input/           01205700
*                               output area for the ACEE address.  @L4A 01205800
*                                                                       01205900
INTA_APPL_ID@        DS  A      Address of an 9 byte area which         01206000
*                               specifies the name of the               01206100
*                               application being accessed by the       01206200
*                               user. (1 byte for the length            01206300
*                               followed by up to 8 bytes for the       01206400
*                               application name itself)           @L4A 01206500
*                                                                       01206600
INTA_PASSWORD@       DS  A      Address of an 9 byte area               01206700
*                               containing the user's password or       01206800
*                               pass ticket. (1 byte for the            01206900
*                               length followed by up to 8 bytes        01207000
*                               for the password itself)           @L4A 01207100
*                                                                       01207200
INTA_LOGSTRING@      DS  A      Address of a variable length area       01207300
*                               containing the log string to be         01207400
*                               passed to RACROUTE (1 byte for the      01207500
*                               length followed by up to 255 bytes      01207600
*                               for the log string itself)         @L4A 01207700
INTA_LAST_PARM_VER1  EQU X'80000000' - Variable length parameter list.  01207800
*                                      This was the last parameter for  01207900
*                                      plist version 1            @06A  01208000
*                                                                       01208100
INTA_CERTIFICATE@    DS  A      Address of a variable length area       01208200
*                               containing the X.509 certificate        01208300
*                               identifying the user (fullword          01208400
*                               length followed by the certificate      01208500
*                               itself. Length of zero indicates        01208600
*                               certificate not present)           @06A 01208700
INTA_LAST_PARM_VER2  EQU X'80000000' - Variable length parameter list.  01209200
*                                      This was the last parameter for  01209800
*                                      plist version 2            @L5A  01210400
*                                                                       01211200
INTA_ENVR_IN@        DS  A      Address of an area containing the data  01211300
*                               structure to recreate the security      01211400
*                               environment                        @L5A 01211500
INTA_LAST_PARM_ENVR_IN EQU X'80000000' - Variable length parameter list 01211600
*                                      This could be one of the last    01211700
*                                      parameters for plist ver 3 @L5A  01211800
*                                                                       01211900
INTA_ENVR_OUT@       DS  A      Address of an area containing the data  01212000
*                               structure to retrieve the security      01212100
*                               environment                        @L5A 01212200
*                                                                       01212300
INTA_LAST_PARM_ENVR_OUT EQU X'80000000' -Variable length parameter list 01212400
*                                      This could be one of the last    01212500
*                                      parameters for plist ver 3 @L6A  01212600
*                                                                       01212700
INTA_OUTA_STOR@      DS  A      Address of full word containing the     01212800
*                               address of an OUSP.                @L6A 01212900
INTA_LAST_PARM_OUTA_STOR EQU X'80000000' - Variable length              01213000
*                                      parameter list.  This            01213100
*                                      could be one of the last         01213200
*                                      parameters for plist ver 3  @L6A 01213300
*                                                                       01213400
INTA_X500_NAME_PTR   DS  A      Address of the x500 name pair           01213500
*                               structure.  The structure is a 4-Byte   01213600
*                               structure length, followed by 2 2-byte  01213700
*                               lengths, followed by up to 255 bytes    01213800
*                               of issuers name and up to 255 bytes     01213900
*                               of subjects name.                  @LDA 01214000
*                                                                       01214100
INTA_LAST_X500_NAME  EQU X'80000000' - Variable length                  01214200
*                                      parameter list.  This            01214300
*                                      could be one of the last         01214400
*                                      parameters for plist ver 4  @LDA 01214500
*                                                                       01214600
INTA_VARIABLE_LIST@  DS  A      Address of an area containing a         01214700
*                               criteria value data structure. The      01214800
*                               structure is a 4-byte number of         01214900
*                               entries, followed by 1 or more entries  01215000
*                               Each entry is an 8-byte name, followed  01215100
*                               by a 4-byte value length, followed      01215200
*                               by the value.                      @LDA 01215300
*                                                                       01215400
INTA_LAST_PARM_VAR_LIST  EQU X'80000000' - Variable length              01215500
*                                      parameter list.  This            01215600
*                                      could be one of the last         01215700
*                                      parameters for plist ver 4  @LDA 01215800
*                                                                       01215900
INTA_LAST_PARM       EQU X'80000000' - Variable length parameter list.  01216000
*                                      This is the last parameter @L4A  01216100
*                                                                       01216200
INTA_LEN             EQU *-INTA Constant - fixed length of INTA    @L4A 01216300
*                                                                       01216400
*   Function Code Constants                                             01216500
*                                                                       01216600
INTA_CREATE          EQU X'01'  Constant - Create an ACEE          @L4A 01216700
INTA_DELETE          EQU X'02'  Constant - Delete an ACEE and USP if    01216800
*                                          applicable              @L4A 01216900
INTA_PURGE           EQU X'03'  Constant - Purge space related ACEE     01217000
*                                          management resources    @L4A 01217100
INTA_REGSTR          EQU X'04'  Constant - Register a certificate for   01217200
*                                          the current ACEE        @09A 01217300
INTA_DEREGS          EQU X'05'  Constant - Deregister a certificate for 01217400
*                                          the current ACEE        @09A 01217500
INTA_QUERY           EQU X'06'  Constant - Query a certificate for an   01217600
*                                          associated user ID      @09A 01217700
*                                                                       01217800
*   Attributes Word Bit Mapping                                         01217900
*                                                                       01218000
INTA_MANAGED         EQU X'80000000' - ACEE should be managed           01218100
*                                      (CREATE only)               @L4A 01218200
INTA_USP             EQU X'40000000' - Initialize a USP for the ACEE    01218300
*                                      (CREATE only)               @L4A 01218400
INTA_TASK_LVL        EQU X'20000000' - For CREATE, ON indicates chain   01218500
*                                      ACEE to the TCB. OFF indicates   01218600
*                                      return ACEE address via the      01218700
*                                      Acee_Ptr field.  For DELETE,     01218800
*                                      ON indicates get ACEE address    01218900
*                                      from the TCB. OFF indicates      01219000
*                                      ACEE address passed through      01219100
*                                      Acee_Ptr                    @L4A 01219200
INTA_AUTH_CLNT       EQU X'10000000' - Authenticated Client        @L4A 01219300
INTA_UNAUTH_CLNT     EQU X'08000000' - Unauthenticated Client      @L4A 01219400
INTA_MSG_SUPP        EQU X'04000000' - ON to suppress RACF messages     01219500
*                                      produced as a result of cre-     01219600
*                                      ating an ACEE               @L4A 01219700
INTA_ENVR_RET        EQU X'02000000' - ON to return an ENVR object      01219800
*                                      for the ACEE (CREATE only)  @L5A 01219900
INTA_NO_TIMEOUT      EQU X'01000000' - ON to create a no timeout        01220000
*                                      managed ACEE (CREATE only)  @L6A 01220100
INTA_OUSP_RET        EQU X'00800000' - ON to return an OUSP             01220200
*                                      (CREATE only)               @L6A 01220300
INTA_X500_RET        EQU X'00400000' - ON to return a X500 name         01220400
*                                      pair (QUERY only)           @LDA 01220500
*                                                                       01220600
*********************************************************************** 01220700
*                                                                     * 01220800
*                ADMN ASSEMBLER DECLARATIONS                          * 01220900
*---------------------------------------------------------------------* 01221000
*                                                                     * 01221100
*  DECLARATION NAME = ADMN                                            * 01221200
*                                                                     * 01221300
*  DESCRIPTIVE NAME =   RACF Administration interface                 * 01221400
*                                                                     * 01221500
*  FUNCTION = Provides the ASSEMBLER mapping of the input parameter   * 01221600
*      list for the service which will create/delete/alter users      * 01221700
*      and execute RACF commands.                                     * 01221800
*                                                                  @04A 01221900
*********************************************************************** 01222000
                     ORG   COMP_SERVR_PARMS   Follows common plist @04A 01222100
*                                                                       01222200
ADMN                 DS  0C     Mapping for ADMN                   @04A 01222300
*                                                                       01222400
*                                                                       01222500
ADMN_FUNC@           DS  A      Address of 1 byte function code    @04A 01222600
*                                                                       01222700
ADMN_PARMLIST@       DS  A      Address of the function-specific        01222800
*                               parameter list strcuture           @04A 01222900
*                                                                       01223000
ADMN_USERID@         DS  A      Address of 9 byte area for the          01223100
*                               RACF userid under whose authority       01223200
*                               this service will execute (1 byte       01223300
*                               for the length followed by up to 8      01223400
*                               bytes for the userid itself)       @04A 01223500
*                                                                       01223600
ADMN_ACEEP@          DS  A      Address of a full word containing       01223700
*                               the ACEE address under the authority    01223800
*                               of which this service will execute @04A 01223900
*                                                                       01224000
ADMN_OUTPUT_SP@      DS  A      Address of a caller-supplied one byte   01224100
*                               area containing the subpool in which    01224200
*                               output messages should be obtained @04A 01224300
*                                                                       01224400
ADMN_OUTPUT_MSG@     DS  A      Address of a fullword containing        01224500
*                               a pointer to the RACF command           01224600
*                               ouput, which is mapped below.           01224700
*                               The caller is responsible for           01224800
*                               freeing this storage.              @04A 01224900
*                                                                       01225000
*                                                                       01225100
ADMN_LAST_PARM       EQU X'80000000' - Variable length parameter list.  01225200
*                                      This is the last parameter  @04A 01225300
*                                                                       01225400
*                                                                       01225500
ADMN_LEN             EQU *-ADMN Constant - fixed length of ADMN    @04A 01225600
*                                                                       01225700
*   Function Code Constants                                             01225800
*                                                                       01225900
ADMN_ADD_USER        EQU X'01'  Constant - Add a user              @04A 01226000
ADMN_DEL_USER        EQU X'02'  Constant - Delete a user           @04A 01226100
ADMN_ALT_USER        EQU X'03'  Constant - Alter a user            @04A 01226200
ADMN_LST_USER        EQU X'04'  Constant - List a user             @04A 01226300
ADMN_RUN_COMD        EQU X'05'  Constant - Run a RACF command      @04A 01226400
ADMN_ADD_GROUP       EQU X'06'  Constant - Add a group             @07A 01226500
ADMN_DEL_GROUP       EQU X'07'  Constant - Delete a group          @07A 01226600
ADMN_ALT_GROUP       EQU X'08'  Constant - Alter a group           @07A 01226700
ADMN_LST_GROUP       EQU X'09'  Constant - List a group            @07A 01226800
ADMN_CONNECT         EQU X'0A'  Constant - Connect user to group   @07A 01226900
ADMN_REMOVE          EQU X'0B'  Constant - Remove user from group  @07A 01227000
ADMN_ADD_GENRES      EQU X'0C'  Constant - Add a resource          @08A 01227100
ADMN_DEL_GENRES      EQU X'0D'  Constant - Delete a resource       @08A 01227200
ADMN_ALT_GENRES      EQU X'0E'  Constant - Alter a resource        @08A 01227300
ADMN_LST_GENRES      EQU X'0F'  Constant - List a resource         @08A 01227400
ADMN_ADD_DS          EQU X'10'  Constant - Add a dataset           @08A 01227500
ADMN_DEL_DS          EQU X'11'  Constant - Delete a dataset        @08A 01227600
ADMN_ALT_DS          EQU X'12'  Constant - Alter a dataset         @08A 01227700
ADMN_LST_DS          EQU X'13'  Constant - List a dataset          @08A 01227800
ADMN_PERMIT          EQU X'14'  Constant - Permit a user or group  @08A 01227900
ADMN_ALT_SETR        EQU X'15'  Constant - Alter SETROPTS info     @LBA 01228000
ADMN_XTR_SETR        EQU X'16'  Constant - SETROPTS R_admin ext    @LBA 01228100
ADMN_UNL_SETR        EQU X'17'  Constant - SETROPTS SMF Unload ext @LBA 01228200
*                                                                       01228300
*******************************************************************@L7A 01228400
*                                                                  @L7A 01228500
*                UMAP ASSEMBLER DECLARATIONS                       @L7A 01228600
*------------------------------------------------------------------@L7A 01228700
*                                                                  @L7A 01228800
*  DECLARATION NAME = UMAP                                         @L7A 01228900
*                                                                  @L7A 01229000
*  DESCRIPTIVE NAME =   RACF userid - R_UserMap                    @L7A 01229100
*                                                                  @L7A 01229200
*  FUNCTION = Provides the ASSEMBLER mapping of the input paramter @L7A 01229300
*             list for the service to map an application userid to @L7A 01229400
*             a RACF userid                                        @L7A 01229500
*                                                                  @L7A 01229600
*******************************************************************@L7A 01229700
                     ORG   COMP_SERVR_PARMS   Follows common plist @L7A 01229800
*                                                                  @L7A 01229900
UMAP                 DS  0C     Mapping for UMAP                   @L7A 01230000
*                                                                  @L7A 01230100
*                                                                  @L7A 01230200
UMAP_PARM_ALET@      DS  A      Address of ALET for remaining      @L7A 01230300
*                               parameters                         @L7A 01230400
UMAP_FUNC@           DS  A      Address of 2-byte function code    @L7A 01230500
UMAP_OPTION_WORD@    DS  A      Reserved for future use            @L7A 01230600
UMAP_USERID@         DS  A      Address of a 9-byte input/output   @L7A 01230700
*                               for the RACF userid.  The first    @L7A 01230800
*                               byte is the length followed by     @L7A 01230900
*                               8 bytes for the RACF userid.       @L7A 01231000
UMAP_CERTIFICATE@    DS  A      Address of an input area           @L7A 01231100
*                               for a digital certificate.  First  @L7A 01231200
*                               four bytes are a length followed   @L7A 01231300
*                               by the digital certificate.        @L7A 01231400
UMAP_APPL_USERID@    DS  A      Address of an input/output area for@L7A 01231500
*                               an Application ID.  The first      @L7A 01231600
*                               two bytes contains the length      @L7A 01231700
*                               followed by 246 bytes for the      @L7A 01231800
*                               Application ID.                    @L7A 01231900
*                               If not specified on input, length  @L7A 01232000
*                               must be zero                       @L7A 01232100
UMAP_LAST_PARM  EQU X'80000000' Variable length parameter list     @L7A 01232200
*                               This is the last parameter         @L7A 01232300
*                                                                  @L7A 01232400
UMAP_LEN             EQU *-UMAP Constant - fixed length of UMAP    @L7A 01232500
*                                                                  @L7A 01232600
*********************************************************************** 01232700
*                                                                     * 01232800
*                CDDL ASSEMBLER DECLARATIONS                          * 01232900
*---------------------------------------------------------------------* 01233000
*                                                                     * 01233100
*  DECLARATION NAME = CDDL                                            * 01233200
*                                                                     * 01233300
*  DESCRIPTIVE NAME =   CDSA DataLib Service parameters               * 01233400
*                                                                     * 01233500
*  FUNCTION = Provides the ASSEMBLER mapping of the input paramter    * 01233600
*             list for the CDSA Datalib callable service              * 01233700
*******************************************************************@L8A 01233800
                     ORG   COMP_SERVR_PARMS   Follows common plist @L8A 01233900
*                                                                       01234000
CDDL                 DS  0C     Mapping for CDDL                   @L8A 01234100
*                                                                       01234200
*                                                                       01234300
CDDL_FUNC@           DS  A      Address of 1 byte input function        01234400
*                               code.  Constants for the function       01234500
*                               codes are supplied below           @L8A 01234600
*                                                                       01234700
CDDL_ATTRIBUTES@     DS  A      Address of full word of input           01234800
*                               attributes                         @L8A 01234900
*                                                                       01235000
CDDL_USERID@         DS  A      Address of a 9 byte input area          01235100
*                               for the RACF userid (1 byte for the     01235200
*                               length followed by 8 bytes for          01235300
*                               the RACF userid itself).  A length      01235400
*                               of 0 indicates the current user is      01235500
*                               the ring owner                     @L8A 01235600
*                                                                       01235700
CDDL_RING@           DS  A      Address of a variable length input area 01235800
*                               for the ring name (1 byte for the       01235900
*                               length followed by up to 237 bytes for  01236000
*                               the ring name).  Parameter ignored      01236100
*                               for functions CheckStatus, AbortQuery,  01236200
*                               and DataGetNext.                   @L8A 01236300
*                                                                       01236400
CDDL_VERSION@        DS  A      Address of a 4 byte area containing the 01236500
*                               input version number for function       01236600
*                               specific parameter list pointed to by   01236700
*                               CDDL_PARMLIST@.  Must be set to 0. @L8A 01236800
*                                                                       01236900
CDDL_PARMLIST@       DS  A      Address of the input function specific  01237000
*                               parameter list                     @L8A 01237100
CDDL_LAST_PARM  EQU X'80000000' Variable length parameter list     @L8A 01237200
*                               This is the last parameter         @L8A 01237300
CDDL_LEN           EQU *-CDDL   Constant - fixed length of CDDL    @L8A 01237400
*                                                                       01237500
*---------------------------------------------------------------------* 01237600
*                                                                       01237700
*   Function Code Constants                                             01237800
*                                                                       01237900
*---------------------------------------------------------------------* 01238000
CDDL_DATA_GET_FIRST  EQU X'01'  DataGetFirst - locate and return        01238100
*                               the first certificate in the ring       01238200
*                               matching the specified criteria    @L8A 01238300
CDDL_DATA_GET_NEXT   EQU X'02'  DataGetNext - locate and return the     01238400
*                               next certificate in the ring matching   01238500
*                               the same criteria specified in the      01238600
*                               previous DataGetFirst/DataGetNext       01238700
*                               call                               @L8A 01238800
CDDL_DATA_ABORT      EQU X'03'  DataAbortQuery - free resources         01238900
*                               from previous DataGetFirst or           01239000
*                               DataGetNext call                   @L8A 01239100
CDDL_CHECK_STATUS    EQU X'04'  CheckStatus - return the TRUST/NOTRUST  01239200
*                               status for a given certificate          01239300
CDDL_GET_UPDATE_CODE EQU X'05'  GetUpdateCode - returns the sequence    01239400
*                               number for a ring                  @LCA 01239500
CDDL_INC_SER_NUM     EQU X'06'  IncSerialNum - Increments the Serial    01239600
*                               Number for a Digital Certificate   @LFA 01239700
*                                                                       01239900
*********************************************************************** 01240000
*                                                                     * 01240100
*                KERBEROS ASSEMBLER DECLARATIONS                      * 01240200
*---------------------------------------------------------------------* 01240300
*                                                                     * 01240400
*  DECLARATION NAME = KERB                                            * 01240500
*                                                                     * 01240600
*  DESCRIPTIVE NAME =   Kerberos retrieve or set parameters           * 01240700
*                                                                     * 01240800
*  FUNCTION = Provides the ASSEMBLER mapping of the input parameter   * 01240900
*             list for the R_kerbinfo callable service                * 01241000
*******************************************************************@LEA 01241100
                     ORG   COMP_SERVR_PARMS   Follows common plist @LEA 01241200
*                                                                       01241300
KERB                 DS  0C     Mapping for KERB                   @LEA 01241400
*                                                                       01241500
*                                                                       01241600
KERB_FUNC@           DS  A      Address of 1 byte input function        01241700
*                               code.  Constants for the function       01241800
*                               codes are supplied below           @LEA 01241900
*                                                                       01242000
KERB_RACF_NAME@      DS  A      Address of a 9 byte area containing a   01242100
*                               RACF name. x'00' in first byte if not   01242200
*                               specified                          @LEA 01242300
*                                                                       01242400
KERB_NAME@           DS  A      Address of a 240 byte area containing   01242500
*                               Kerberos Principal name. x'00' in first 01242600
*                               byte if not specified              @LEA 01242700
*                                                                       01242800
KERB_DATA_AREA@      DS  A      Address of storage to be used for       01242900
*                               fields returned on a retrieve      @LEA 01243000
*                                                                       01243100
KERB_LAST_PARM       EQU X'80000000' - Variable length paramater list   01243200
*                                      This is the last parameter  @LEA 01243300
*                                                                       01243400
KERB_LEN             EQU *-KERB Constant - fixed length of KERB    @LEA 01243500
*---------------------------------------------------------------------* 01243600
*                                                                       01243700
*   Function code constants                                             01243800
*                                                                       01243900
*---------------------------------------------------------------------* 01244000
KERB_GET_USER        EQU X'01'  Constant - Get user  information   @P7C 01244100
KERB_UPDATE_REVOKECT EQU X'02'  Constant - Update user revoke count@P7C 01244200
KERB_RESET_REVOKECT  EQU X'03'  Constant - Reset user revoke count @P7C 01244300
KERB_GET_REALM       EQU X'04'  Constant - Get realm information   @P7C 01244400
*                                                                       01244500
*                                                                       01244600
*********************************************************************** 01244700
*                                                                     * 01244800
*                         ASSEMBLER DECLARATIONS                      * 01244900
*---------------------------------------------------------------------* 01245000
*                                                                     * 01245100
*  DECLARATION NAME = TKTS                                            * 01245200
*                                                                     * 01245300
*  DESCRIPTIVE NAME =  Parse or Extract from Kerberos Ticket          * 01245400
*                                                                     * 01245500
*  FUNCTION = Provides the ASSEMBLER mapping of the input parameter   * 01245600
*             list for the R_ticketserv callable service              * 01245700
*******************************************************************@LHA 01245800
                     ORG   COMP_SERVR_PARMS   Follows common plist @LHA 01245900
*                                                                       01246000
TKTS                 DS  0C     Mapping for TKTS                   @LHA 01246100
*                                                                       01246200
*                                                                       01246300
TKTS_PARM_ALET@      DS  A      Address of ALET for remaining      @LHA 01246400
*                               parameters                         @LHA 01246500
TKTS_FUNC@           DS  A      Address of 2 byte input function        01246600
*                               code.  Constants for the function       01246700
*                               codes are supplied below           @LHA 01246800
*                                                                       01246900
TKTS_OPTION_WORD@    DS  A      Address of a full word containing       01247000
*                               binary zeros. The area pointed to by    01247100
*                               this parameter is reserved for future   01247200
*                               use.                               @LHA 01247300
*                                                                       01247400
TKTS_CRED_AREA@      DS  A      Address of an area consisting of a      01247500
*                               2 byte length field followed by a       01247600
*                               ticket.                            @LHA 01247700
*                                                                       01247800
TKTS_OPTIONS@        DS  A      Address of the address containing a     01247900
*                               binary bit string which identifies the  01248000
*                               credential specific processing to be    01248100
*                               performed. This parameter is reserved   01248200
*                               for future use.                    @LHA 01248300
*                                                                       01248400
TKTS_PRIN_USERID@    DS  A      Address of a pre-allocated storage area 01248500
*                               containing 242 bytes which is the       01248600
*                               output principal name preceded by a     01248700
*                               2 byte length field.               @LHA 01248800
*                                                                       01248900
TKTS_LAST_PARM       EQU X'80000000' - Variable length parameter list   01249000
*                                      This is the last parameter  @LHA 01249100
*                                                                       01249200
TKTS_LEN             EQU *-TKTS Constant - fixed length of TKTS    @LHA 01249300
*---------------------------------------------------------------------* 01249400
*                                                                       01249500
*   Function code constants                                             01249600
*                                                                       01249700
*---------------------------------------------------------------------* 01249800
TKTS_RETURN_NAME     EQU X'0001'  Constant - Parse and return Kerberos  01249900
*                                            principal name        @LHA 01250000
*                                                                  @L7A 01250050
*                                                                       01250100
*******************************************************************@0AA 01250101
*                                                                       01250102
*********************************************************************** 01250103
*                                                                     * 01250104
*                PKIS ASSEMBLER DECLARATIONS                          * 01250105
*---------------------------------------------------------------------* 01250106
*                                                                     * 01250107
*  DECLARATION NAME = PKIS                                            * 01250108
*                                                                     * 01250109
*  DESCRIPTIVE NAME = PKIS Service parameters                         * 01250110
*                                                                     * 01250111
*  FUNCTION = Provides the ASSEMBLER mapping of the input parameter   * 01250112
*             list for the PKIS callable service R_PKIServ            * 01250113
*******************************************************************@0AA 01250114
*                                                                       01250115
                     ORG   COMP_SERVR_PARMS   Follows common plist @0AA 01250116
*                                                                       01250117
PKIS                 DS  0C     Mapping for PKIS                   @0AA 01250118
*                                                                       01250119
PKIS_NUM_PARMS@      DS  A      Address of a Four-Byte variable         01250120
*                               that contains the number of             01250121
*                               parameters that follow in the           01250122
*                               non-request specific portion of         01250123
*                               the R_PKIServ callable service          01250124
*                               Parameter List                     @0AA 01250125
*                                                                       01250126
PKIS_FUNC@           DS  A      Address of a Two-Byte variable          01250127
*                               that contains the code of the           01250128
*                               requested function.  Constants          01250129
*                               for the function codes codes            01250130
*                               are declared below                 @0AA 01250131
*                                                                       01250132
PKIS_ATTRIBUTES@     DS  A      Address of a Four-Byte variable         01250133
*                               that contains attribute flags           01250134
*                               for the service                    @0AA 01250135
*                                                                       01250136
PKIS_LOG_STRING@     DS  A      Address of a Variable-Length area       01250137
*                               that contains the LOG string to         01250138
*                               be passed to RACROUTE (1 byte for       01250139
*                               the length followed by up to 255        01250140
*                               bytes for the LOG string itself)   @0AA 01250141
*                                                                       01250142
PKIS_PARM_VER@       DS  A      Address of a Four-Byte variable         01250143
*                               that contains the version number        01250144
*                               of the Function Specific                01250145
*                               Parameter List (PKIS_FUNC_PARML@)  @0AA 01250146
*                                                                       01250147
PKIS_FUNC_PARML@     DS  A      Address of the FSPL -                   01250148
*                               Function Specific Parameter List        01250149
*                               (FSPL = the Parameter List that         01250150
*                                       corresponds to the              01250151
*                                       Function Code)             @0AA 01250152
*                                                                       01250153
PKIS_LAST_PARM  EQU X'80000000' Variable length parameter list          01250154
*                               This is the last parameter         @0AA 01250155
*                                                                       01250156
PKIS_LEN           EQU *-PKIS   Constant - fixed length of PKIS    @0AA 01250157
*                                                                       01250158
*---------------------------------------------------------------------* 01250159
*                                                                     * 01250160
*   PKIS Function Code Constants                                   @0AA 01250161
*                                                                     * 01250162
*---------------------------------------------------------------------* 01250163
*                                                                       01250164
PKIS_GENCERT       EQU X'0001'  GENCERT Function of RACDCERT            01250165
*                               Generates a basic X.509 V3              01250166
*                               digital certificate                @0AA 01250167
*                                                                       01250168
PKIS_EXPORT        EQU X'0002'  EXPORT  Function of RACDCERT            01250169
*                               Extracts a digital certificate          01250170
*                               by Certificate Request ID          @0AA 01250171
*                                                                       01250172
*******************************************************************@0AA 01250173
*                                                                       01250174
*                                                                       01250175
*------------------------------------------------------------------     01250200
*                                                                       01250300
* The following DSECTs, must be after the COMP dsect               @04C 01250400
*                                                                       01250500
*------------------------------------------------------------------     01250600
ADMN_RUNCOMD_MAP     DSECT                                         @04A 01250700
ADMN_RUNCOMD_LEN     DS  AL2    Length of command string           @04A 01250800
ADMN_RUNCOMD_CMD     DS  0C     Command string                     @04A 01250900
*                                                                       01251000
ADMN_USRADM_MAP      DSECT      Mapping for add/alt/del/list user  @04A 01251100
*                               and for connect/remove             @04A 01251200
ADMN_USRADM_USER_LEN DS  X      Length of User ID                  @04A 01251300
ADMN_USRADM_USER_ID  DS  CL8    User ID                            @04A 01251400
                     DS  CL1    Reserved                           @05C 01251500
ADMN_USRADM_ERROFF   DS  AL2    Offset to segment/field in error   @05A 01251600
ADMN_USRADM_SEG_NUM  DS  AL2    Number of segments to update       @04A 01251700
ADMN_USRADM_SEGSTRT  DS  0C     First segment entry                @04A 01251800
*                                                                       01251900
ADMN_USRADM_SEGENTRY DSECT      Use this for all function codes    @04A 01252000
ADMN_USRADM_SEG_NAME DS  CL8    Profile segment name               @04A 01252100
ADMN_USRADM_SEG_FLAG DS  CL1    Flag byte for segment              @05A 01252200
ADMN_USRADM_FLD_NUM  DS  AL2    Number of fields to update in seg. @04A 01252300
ADMN_USRADM_FLDSTRT  DS  0C     First field entry for segment      @04A 01252400
*                                                                       01252500
ADMN_USRADM_FLDENTRY DSECT      Use this for all function codes    @04A 01252600
ADMN_USRADM_FLD_NAME DS  CL8    Segment field name                 @04A 01252700
ADMN_USRADM_FLD_FLAG DS  CL1    Flag byte for field                @05A 01252800
ADMN_USRADM_FLD_LEN  DS  AL2    Field data length                  @04A 01252900
ADMN_USRADM_FLD_DATA DS  0C     Field data                         @04A 01253000
*                                                                       01253100
ADMN_GRPADM_MAP      DSECT      Mapping for add/alt/del/list group @07A 01253200
ADMN_GRPADM_GRP_LEN  DS  X      Length of Group ID                 @07A 01253300
ADMN_GRPADM_GRP_ID   DS  CL8    Group ID                           @07A 01253400
                     DS  CL1    Reserved                           @07A 01253500
ADMN_GRPADM_ERROFF   DS  AL2    Offset to segment/field in error   @07A 01253600
ADMN_GRPADM_SEG_NUM  DS  AL2    Number of segments to update       @07A 01253700
ADMN_GRPADM_SEGSTRT  DS  0C     First segment entry                @07A 01253800
*                                                                       01253900
ADMN_RESADM_MAP      DSECT      Mapping for add/alt/del/list       @08A 01254000
*                               resource, add/alt/del/list ds, and @08A 01254100
*                               permit                             @08A 01254200
ADMN_RESADM_CLAS_LEN DS  X      Length of Class Name               @08A 01254300
ADMN_RESADM_CLAS_NAM DS  CL8    Class Name                         @08A 01254400
                     DS  CL1    Reserved                           @08A 01254500
ADMN_RESADM_ERROFF   DS  AL2    Offset to segment/field in error   @08A 01254600
ADMN_RESADM_SEG_NUM  DS  AL2    Number of segments to update       @08A 01254700
ADMN_RESADM_SEGSTRT  DS  0C     First segment entry                @08A 01254800
*                                                                       01254900
ADMN_SETRADM_MAP     DSECT      Mapping for alter SETROPTS         @LBA 01255000
*                               information                        @LBA 01255100
                     DS  CL10   Reserved                           @LBA 01255200
ADMN_SETRADM_ERROFF  DS  AL2    Offset to segment/field in error   @LBA 01255300
ADMN_SETRADM_SEG_NUM DS  AL2    Number of segments to update       @LBA 01255400
ADMN_SETRADM_SEGSTRT DS  0C     First segment entry                @LBA 01255500
*                                                                       01255600
ADMN_OUTMSG_MAP      DSECT                                         @04A 01255700
ADMN_OUT_NEXT        DS  XL4    Addr of next block or 0            @04A 01255800
ADMN_OUT_EYE         DS  CL4    Eye catcher for output block       @04A 01255900
ADMN_OUT_SPID        DS  XL1    Subpool ID for block               @04A 01256000
ADMN_OUT_LEN         DS  AL3    Length of block                    @04A 01256100
ADMN_OUT_OFF         DS  F      Offset (from ADMN_OUTMSG_MAP) to   @04A+01256200
                                1st byte after last message        @04A 01256300
ADMN_OUT_STRT        DS  0C     Start of message data (see below)  @04A 01256400
*                                                                       01256500
ADMN_OUT_ENTRY       DSECT      Mapping for a message entry        @04A 01256600
ADMN_OUT_MLEN        DS  AL2    Length of message line             @04A 01256700
ADMN_OUT_MSTR        DS  0C     Variable length message string     @04A 01256800
*                                                                       01256900
ADMN_XTRUNL_MAP      DSECT      R_admin SETROPTS output mapping    @LBA 01257000
ADMN_XTRUNL_EYE      DS  CL4    Eye catcher for SETROPTS output    @LBA 01257100
ADMN_XTRUNL_OUTLEN   DS  AL4    Total length of output buffer      @LBA 01257200
                     DS  CL4    Reserved                           @LBA 01257300
ADMN_XTRUNL_NUM      DS  AL2    Number of segment entries for      @LBA 01257400
*                               ADMN_XTR_SETR or number of record  @LBA 01257500
*                               types for ADMN_UNL_SETR            @LBA 01257600
ADMN_XTRUNL_ENTRY    DS  0C     First segment or record entry      @LBA 01257700
*                                                                       01257800
ADMN_UNL_ENTRY       DSECT      Data mapping for ADMN_UNL_SETR     @LBA 01257900
ADMN_UNL_TYPE        DS  CL8    SMF Data Unload record type        @LBA 01258000
ADMN_UNL_LEN         DS  AL4    Length of a record of this type    @LBA 01258100
ADMN_UNL_NUM         DS  AL4    Number of records of this type     @LBA 01258200
                     DS  CL8    Reserved                           @LBA 01258300
ADMN_UNL_RECSTRT     DS  0C     Start of first record of this type @LBA 01258400
*                                                                       01258500
DINF_FIELD_LIST      DSECT                                         @01A 01258600
DINF_FIELD_LIST_LEN  DS  AL2    Length in bytes of field list      @01A 01258700
DINF_FIELD_LIST_CNT  DS  AL2    Number of fields in field list     @01A 01258800
DINF_FIELD_LIST_ST   DS  0C     Fields start here                  @01A 01258900
*                                                                       01259000
DINF_FIELDS          DSECT                                         @01A 01259100
DINF_FIELD_NAME      DS  CL8    Name of field                      @01A 01259200
DINF_FIELD_LEN       DS  AL2    Length of field                    @01A 01259300
DINF_FIELD_DATA      DS  0C     Field data                         @01A 01259400
*                                                                       01259500
DINF_OUTPUT_AREA     DSECT                                         @01A 01259600
DINF_OUTPUT_AREA_LEN DS  AL2    Length in bytes of output data     @01A 01259700
DINF_OUTPUT_AREA_CNT DS  AL2    Number of fields in output data    @01A 01259800
DINF_OUTPUT_AREA_ST  DS  0C     Start of output                    @01A 01259900
*                                                                       01260000
DINF_OUTPUT_FLD      DSECT                                         @01A 01260100
DINF_OUTPUT_FLD_NAME DS  CL8    Name of field                      @01A 01260200
DINF_OUTPUT_FLD_LEN  DS  AL2    Length of this output piece        @01A 01260300
DINF_OUTPUT_FLD_DATA DS  0C     Data retrieved                     @01A 01260400
*                                                                  @L7A 01260500
UMAP_CERTIFICATE DSECT          Digital certificate mapping        @L7A 01260600
*                               based on UMAP_CERTIFICATE@         @L7A 01260700
UMAP_DIGCERT_LEN     DS  F      Length of digital certificate      @L7A 01260800
UMAP_DIGCERT         DS  0C     Digital certificate                @L7A 01260900
*                                                                  @L7A 01261000
UMAP_USERID          DSECT      RACF Userid mapping                @L7A 01261100
*                               based on UMAP_RACFUSERID@          @L7A 01261200
UMAP_RACFID_LEN      DS  X      Length of RACF userid              @L7A 01261300
UMAP_RACFID          DS  CL8    RACF userid                        @L7A 01261400
*                                                                  @L7A 01261500
UMAP_APPL_USERID     DSECT      Application ID mapping             @L7A 01261600
*                               based on UMAP_APPL_USERID@         @L7A 01261700
UMAP_APPLID_LEN      DS  H      Length of RACF userid              @L7A 01261800
UMAP_APPLID          DS  CL246  Application ID                     @L7A 01261900
*                                                                  @L7A 01262000
*  function code values                                            @L7A 01262100
*                                                                  @L7A 01262200
UMAP_R_TO_L  EQU X'0001'  Return Lotus Notes ID for this RACF ID   @L7A 01262300
UMAP_L_TO_R  EQU X'0002'  Return RACF ID for this Lotus Notes ID   @L7A 01262400
UMAP_R_TO_N  EQU X'0003'  Return NDS ID for this RACF ID           @L7A 01262500
UMAP_N_TO_R  EQU X'0004'  Return RACF ID for this NDS ID           @L7A 01262600
UMAP_R_TO_K  EQU X'0005'  Return Kerb principal for this RACF ID   @LEA 01262700
UMAP_K_TO_R  EQU X'0006'  Return RACF ID for this Kerb principal   @LEA 01262800
*                                                                  @L7A 01262900
*                                                                  @L7A 01263000
*                                                                  @L7A 01263100
*---------------------------------------------------------------------* 01263200
*                                                                     * 01263300
*   CDDL Function Specific Parameter Lists                            * 01263400
*                                                                     * 01263500
*---------------------------------------------------------------------* 01263600
CDDL_ABORT           DSECT      Parameter list for DataAbortQuery  @L8A 01263700
CDDL_PREV_HANDLE     DS  A      Address of an input/output area         01263800
*                               from previous DataGetFirst or           01263900
*                               DataGetNext call                   @L8A 01264000
*                                                                       01264100
CDDL_GET_CERT        DSECT      Parameter list for DataGetFirst         01264200
*                               and DataGetNext                    @L8A 01264300
CDDL_RES_HANDLE      DS  A      Address of input/output area            01264400
*                               mapped by CDDL_HANDLE_MAP          @L8A 01264500
CDDL_CERT_USAGE      DS  CL4    4 byte output area containing           01264600
*                               certificate usage flags                 01264700
*                                x'00000000' - Usage is SITE            01264800
*                                x'00000002' - Usage is CERTAUTH        01264900
*                                x'00000008' - Usage is PERSONAL        01265000
*                                x'FFFFFFF5' - reserved bits must be    01265100
*                                              set to 0            @L8A 01265200
CDDL_CERT_DEFAULT    DS  F      output default indicator.  Zero         01265300
*                               value indicates not default certificate 01265400
*                               for ring, non-zero indicates this is    01265500
*                               the default certificate.           @L8A 01265600
CDDL_CERT_LEN        DS  F      On input, contains the length of the    01265700
*                               certificate area pointed to by          01265800
*                               CDDL_CERT_PTR. On output, contains the  01265900
*                               actual size of the certificate returned 01266000
*                               or 0 if no certificate returned.   @L8A 01266100
CDDL_CERT_PTR        DS  A      Input value specifying address of       01266200
*                               output certificate data area       @L8A 01266300
CDDL_PK_LEN          DS  F      On input, contains size of private      01266400
*                               key area pointed to by CDDL_PK_PTR.     01266500
*                               On output contains the length of the    01266600
*                               private returned at address             01266700
*                               CDDL_PK_PTR or 0 if no private key      01266800
*                               was returned.                      @L8A 01266900
CDDL_PK_PTR          DS  A      Input value specifying address of       01267000
*                               private key output data area       @L8A 01267100
CDDL_PK_TYPE         DS  F      Output value indicating type of private 01267200
*                               key. See constants below.          @L8A 01267300
CDDL_PK_BITSIZE      DS  F      Output value indicating the size        01267400
*                               of the private key modulus in bits @L8A 01267500
CDDL_LABEL_LEN       DS  F      On input, contains the length of the    01267600
*                               field pointed to by CDDL_LABEL_PTR,     01267700
*                               and must be at least 32.  On output,    01267800
*                               contains the length of the label        01267900
*                               returned at the address in              01268000
*                               CDDL_LABEL_PTR, and will be 32 or       01268100
*                               less.                              @L8A 01268200
CDDL_LABEL_PTR       DS  A      Input value specifying the address      01268300
*                               of output area to be used for the       01268400
*                               label name.                        @L8A 01268500
CDDL_RACF_USERID     DS  CL9    Input value containing a 1 byte length  01268600
*                               followed by the certificate owning      01268700
*                               userid. The combination of the output   01268800
*                               label and this field uniquely identify  01268900
*                               a certificate                      @L8A 01269000
                     DS  CL3    Reserved                           @L8A 01269100
CDDL_SDN_LEN         DS  F      On input, contains the length of the    01269200
*                               output buffer pointed to by             01269300
*                               CDDL_SDN_PTR.  On output, contains the  01269400
*                               length of the BER encoded Subject's     01269500
*                               Distinguished Name returned in          01269600
*                               CDDL_SDN_LEN.                      @L8A 01269700
CDDL_SDN_PTR         DS  A      Input value specifying the address of   01269800
*                               the output area to be used for the      01269900
*                               Subject's Distinguished Name.      @L8A 01270000
CDDL_RECID_LEN       DS  F      Output value containing the length of   01270100
*                               the record ID returned in area pointed  01270200
*                               to by CDDL_RECID_PTR, or 0 if no        01270300
*                               record returned.                   @LDC 01270400
CDDL_RECID_PTR       DS  A      Input value specifying address of a     01270500
*                               246 byte area to contain output         01270600
*                               record ID data.                    @LDC 01270700
CDDL_CRT_STATUS      DSECT      Parameter list for CheckStatus     @LAA 01270800
CDDL_CRT_LEN         DS  F      Input area containing the length of the 01270900
*                               certificate area pointed to by          01271000
*                               CDDL_CRT_PTR.                      @LAA 01271100
CDDL_CRT_PTR         DS  A      Input value specifying address of       01271200
*                               output certificate data area       @LAA 01271300
CDDL_GET_UPDATE      DSECT      Parameter list for                 @LCA 01271400
*                               GetUpdateCode                      @LCA 01271500
CDDL_RING_SEQN       DS  F      Ring sequence number               @LCA 01271600
*                                                                       01271700
CDDL_ISN             DSECT      Parm List for IncSerialNum              01271800
CDDL_ISN_CLEN        DS  F      Length of DER Encoded input             01271900
*                               Digital Certificate                @LFA 01272000
CDDL_ISN_CPTR        DS  A      Address of DER Encoded input            01272100
*                               Digital Certificate                @LFA 01272200
CDDL_ISN_SERNUM      DS  CL8    Output - Incremented Serial Number      01272300
*                                        of Digital Certificate    @LFA 01272400
*                                                                       01272500
*---------------------------------------------------------------------* 01272600
*                                                                       01272700
*   Private Key Type Constants returned in CDDL_PK_TYPE                 01272800
*                                                                       01272900
CDDL_PKCS10          EQU 1      Private key is PKCS#10 DER encoded @L8A 01273000
CDDL_ICSF            EQU 2      Private key is a ICSF token        @L8A 01273100
*---------------------------------------------------------------------* 01273200
*                                                                     * 01273300
*    Mapping of input/output area pointed to by CDDL_RES_HANDLE       * 01273400
*                                                                     * 01273500
*---------------------------------------------------------------------* 01273600
CDDL_HANDLE_MAP      DSECT      Mapping of area pointed to by           01273700
*                               CDDL_RES_HANDLE & CDDL_PREV_HANDLE @L9C 01273800
CDDL_TOKEN           DS  A      Reserved for use by the security        01273900
*                               server.  This value must be preserved   01274000
*                               for subsequent calls to DataGetNext     01274100
*                               and DataAbortQuery                 @L8A 01274200
CDDL_PREDICATES      DS  F      Input value specifying the selection    01274300
*                               criteria.  See constants below     @L8A 01274400
CDDL_ATTR_ID         DS  F      Input value specifying the attribute    01274500
*                               to query on.  Ignored if                01274600
*                               CDDL_PREDICATES is 0.  See constants    01274700
*                               below for possible values.         @L8A 01274800
CDDL_ATTR_LEN        DS  F      Input value containing the length       01274900
*                               of the attributes supplied in           01275000
*                               CDDL_ATTR_PTR                      @L8A 01275100
CDDL_ATTR_PTR        DS  A      Input value containing the address      01275200
*                               of query attribute data.  Type of       01275300
*                               data supplied determined by             01275400
*                               CDDL_ATTR_ID                       @L8A 01275500
*---------------------------------------------------------------------* 01275600
*                                                                       01275700
*   Input selection criteria constants supplied in CDDL_PREDICATES      01275800
*                                                                       01275900
CDDL_NONE            EQU 0      No selection criteria              @L8A 01276000
CDDL_ATTR            EQU 1      Query on a particular attribute    @L8A 01276100
*---------------------------------------------------------------------* 01276200
*                                                                       01276300
*   Input query attributes supplied in CDDL_ATTR_ID                @L8A 01276400
*                                                                       01276500
CDDL_LABEL           EQU 1      The certificate label, up to 32         01276600
*                               characters long                    @L8A 01276700
CDDL_DEFAULT         EQU 2      The default flag, a 4 byte field        01276800
*                               specified as 0 for NO, or a             01276900
*                               non-zero value for YES             @L8A 01277000
CDDL_SUBJECT         EQU 3      BER encoded subjects name          @L8A 01277100
*---------------------------------------------------------------------* 01277200
*                                                                       01277300
KERB_FLDDATA_MAP     DSECT      Mapping for Kerberos data area     @LEA 01277400
KERB_FLDDATA_LEN     DS  AL2    Length of data area                @LEA 01277500
KERB_FLD_NUM         DS  AL2    Number of fields present           @LEA 01277600
KERB_FLDSTRT         DS  0C     First field entry                  @LEA 01277700
*                                                                       01277800
KERB_FLDENTRY        DSECT      Mapping for Kerberos fields        @LEA 01277900
KERB_FLD_NAME        DS  CL8    Segment field name                 @LEA 01278000
KERB_FLD_LEN         DS  AL2    Field data length                  @LEA 01278100
KERB_FLD_DATA        DS  0C     Field data                         @LEA 01278200
*---------------------------------------------------------------------* 01278201
*                                                                       01278202
*******************************************************************@0AA 01278203
*                                                                       01278204
*---------------------------------------------------------------------* 01278205
*                                                                     * 01278206
*   PKIS Function Specific Parameter Lists                            * 01278207
*                                                                     * 01278208
*---------------------------------------------------------------------* 01278209
*                                                                       01278210
PKIS_GENCERT_MAP     DSECT      Function Specific Parameter List        01278211
*                               (FSPL) for GENCERT                 @0AA 01278212
*                                                                       01278213
PKIS_GENC_EYECATCH   DS  CL8    Eyecatcher for the GENCERT FSPL         01278214
*                               Left justified blank filled string      01278215
*                               containing the text 'GENCERT '     @0AA 01278216
*                                                                       01278217
PKIS_GENC_CERTPL_LEN DS  F      Length (in bytes) of the Digital        01278218
*                               Certificate generation PList       @0AA 01278219
*                                                                       01278220
PKIS_GENC_CERTPL@    DS  A      Address of the Digital                  01278221
*                               Certificate generation PList       @0AA 01278222
*                                                                       01278223
PKIS_GENC_CERTID@    DS  A      Address of a 57-Byte area that          01278224
*                               contains the Output Certificate         01278225
*                               Request ID (the first byte of this      01278226
*                               area contains the length of the         01278227
*                               Output Certificate Request ID)     @0AA 01278228
*                                                                       01278229
*------------------------------*                                        01278230
*                                                                       01278231
PKIS_CPL_ENTRY       DSECT      Certificate Request PList entry         01278232
*                               (a single GENCERT PList entry)     @0AA 01278233
*                                                                       01278234
PKIS_CPL_FIELD_NAME  DS  CL12   Certificate Request Field Name     @0AA 01278235
*                                                                       01278236
PKIS_CPL_FIELD_LEN   DS  F      Length (in bytes) of the                01278237
*                               Request Field Name value           @0AA 01278238
*                                                                       01278239
PKIS_CPL_FIELD_VALUE DS  0C     Request Field Name value           @0AA 01278240
*                                                                       01278241
*------------------------------*                                        01278242
*                                                                       01278243
PKIS_EXPORT_MAP      DSECT      Function Specific Parameter List        01278244
*                               (FSPL) for EXPORT                  @0AA 01278245
*                                                                       01278246
PKIS_EXP_EYECATCH    DS  CL8    Eyecatcher for the EXPORT FSPL          01278247
*                               Left justified blank filled string      01278248
*                               containing the text 'EXPORT  '     @0AA 01278249
*                                                                       01278250
PKIS_EXP_CERTAN_LEN  DS  F      Length (in bytes) of the                01278251
*                               preallocated Certificate Anchor         01278252
*                               area                               @0AA 01278253
*                                                                       01278254
PKIS_EXP_CERTAN@     DS  A      Address of the preallocated             01278255
*                               Certificate Anchor area            @0AA 01278256
*                                                                       01278257
PKIS_EXP_CERTID@     DS  A      Address of a 57-Byte area that          01278258
*                               contains the Input Certificate          01278259
*                               Request ID that will be used to         01278260
*                               locate the Digital Certificate          01278261
*                               to be EXPORTed (the first byte of       01278262
*                               this area contains the length of        01278263
*                               the Input Certificate Request ID)  @0AA 01278264
*                                                                       01278265
*******************************************************************@0AA 01278266
*                                                                       01278267
*                                                                       01278268
*---------------------------------------------------------------------* 01278300
                   MEND                                              */ 01278400
*                                                                       01278500
*                                                                       01278600
*                                                                       01278700
*                                                                       01278800
*                                                                       01278900
*                                                                       01279000
*                                                                       01279100
*/********************************************************************/ 01279200
*/********************************************************************/ 01279300
*/********************************************************************/ 01279400
*/*                                                                  */ 01279500
*/*                     COMP PL/X DECLARATIONS                       */ 01279600
*/*------------------------------------------------------------------*/ 01279700
*/*                                                                  */ 01279800
*/*   DECLARATION NAME = COMP                                        */ 01279900
*/*                                                                  */ 01280000
*/*   DESCRIPTIVE NAME =   OMVS  common SAF/RACF parameter list.     */ 01280100
*/*                                                                  */ 01280200
*/*   FUNCTION = Provides PL/X mapping of the common input parameter */ 01280300
*/*              list for the   OMVS  SAF/RACF routers.              */ 01280400
*/*                                                                  */ 01280500
*/********************************************************************/ 01280600
*                                                                       01280700
* DECLARE                                                               01280800
*  1 COMP  BASED BDY(WORD),      /* Common SAF/RACF plist.           */ 01280900
*                                                                       01281000
*   3 COMP_WORKA_STOR@ PTR(31),  /* Addr of 1024 byte work area.     */ 01281100
*                                                                       01281200
*   3 COMP_SAFRC_ALET@ PTR(31),  /* Addr of ALET for SAF RC.         */ 01281300
*                                                                       01281400
*   3 COMP_SAFRC_STOR@ PTR(31),  /* Addr of SAF Return Code.         */ 01281500
*                                                                       01281600
*   3 COMP_RACRC_ALET@ PTR(31),  /* Addr of ALET for RACF Return Code*/ 01281700
*                                                                       01281800
*   3 COMP_RACRC_STOR@ PTR(31),  /* Addr of RACF Return Code.        */ 01281900
*                                                                       01282000
*   3 COMP_RACSC_ALET@ PTR(31),  /* Addr of ALET for RACF Reason Code*/ 01282100
*                                                                       01282200
*   3 COMP_RACSC_STOR@ PTR(31),  /* Addr of RACF Reason Code.        */ 01282300
*                                                                       01282400
*   3 COMP_SERVR_PARMS CHAR(0);  /* Service routine parameter lists     01282500
*                                    begin here.                     */ 01282600
*                                                                       01282700
*                                                                       01282800
* DECLARE                                                               01282900
*  COMP_LEN FIXED(31) CONSTANT(LENGTH(COMP)); /* Constant COMP length*/ 01283000
*                                                                       01283100
*                                                                       01283200
*/********************************************************************/ 01283300
*/*                                                                  */ 01283400
*/*                     IUSP PL/X DECLARATIONS                       */ 01283500
*/*------------------------------------------------------------------*/ 01283600
*/*                                                                  */ 01283700
*/*   DECLARATION NAME = IUSP                                        */ 01283800
*/*                                                                  */ 01283900
*/*   DESCRIPTIVE NAME =   OMVS  INIT_USP input parameter list.      */ 01284000
*/*                                                                  */ 01284100
*/*   FUNCTION = Provides PL/X mapping of the input parameter list   */ 01284200
*/*              for the   OMVS  INIT_USP service routine.           */ 01284300
*/*                                                                  */ 01284400
*/********************************************************************/ 01284500
*                                                                       01284600
* DECLARE                                                               01284700
*  1 IUSP  BASED(ADDR(COMP_SERVR_PARMS)),                               01284800
*                                                                       01284900
*   3 IUSP_WORKA_ALET@ PTR(31),  /* Addr of ALET for the output area.*/ 01285000
*                                                                       01285100
*   3 IUSP_WORKA_STOR@ PTR(31);  /* Addr of the 4 byte output area.     01285200
*                                    The output area contains an addr   01285300
*                                    that points to data about a user*/ 01285400
*                                                                       01285500
*                                                                       01285600
* DECLARE                                                               01285700
*  IUSP_LEN FIXED(31) CONSTANT(LENGTH(IUSP)); /* Constant IUSP length*/ 01285800
*                                                                       01285900
*                                                                       01286000
*/********************************************************************/ 01286100
*/*                                                                  */ 01286200
*/*                     CSID PL/X DECLARATIONS                       */ 01286300
*/*------------------------------------------------------------------*/ 01286400
*/*                                                                  */ 01286500
*/* DECLARATION NAME = CSID                                          */ 01286600
*/*                                                                  */ 01286700
*/* DESCRIPTIVE NAME =   OMVS  RACF Common Set ID input parameter    */ 01286800
*/*                    list.                                         */ 01286900
*/*                                                                  */ 01287000
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 01287100
*/*            list for the following   OMVS  RACF Service Routines: */ 01287200
*/*               Set Uid                                            */ 01287300
*/*               Set Effective Uid                                  */ 01287400
*/*               Set Gid                                            */ 01287500
*/*               Set Effective Gid                                  */ 01287600
*/*                                                                  */ 01287700
*/*                                                                  */ 01287800
*/********************************************************************/ 01287900
*                                                                       01288000
*                                                                       01288100
* DECLARE                                                               01288200
*  1 CSID  BASED(ADDR(COMP_SERVR_PARMS)),                               01288300
*                                                                       01288400
*   3 CSID_ID_ALET@     PTR  (31),  /* Addr of ALET for the Uid/Gid. */ 01288500
*                                                                       01288600
*   3 CSID_ID@          PTR  (31),  /* Addr of the Uid/Gid.          */ 01288700
*                                                                       01288800
*   3 CSID_IDOA_ALET@   PTR  (31),  /* Addr of ALET for output area. */ 01288900
*                                                                       01289000
*   3 CSID_IDOA@        PTR  (31);  /* Addr of a 3 word output area.    01289100
*                                      This area contains the new real, 01289200
*                                      effective and saved Uid/Gids. */ 01289300
*                                                                       01289400
* DECLARE                                                               01289500
*  CSID_LEN FIXED(31) CONSTANT(LENGTH(CSID)); /* Constant CSID length*/ 01289600
*                                                                       01289700
*                                                                       01289800
*/********************************************************************/ 01289900
*/*                                                                  */ 01290000
*/*                     EXID PL/X DECLARATIONS                       */ 01290100
*/*------------------------------------------------------------------*/ 01290200
*/*                                                                  */ 01290300
*/* DECLARATION NAME = EXID                                          */ 01290400
*/*                                                                  */ 01290500
*/* DESCRIPTIVE NAME =   OMVS  RACF Exec Set Uid/Gid input parameter */ 01290600
*/*                    list.                                         */ 01290700
*/*                                                                  */ 01290800
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 01290900
*/*            list for the   OMVS  RACF EXEC Service Routine.       */ 01291000
*/*                                                                  */ 01291100
*/********************************************************************/ 01291200
*                                                                       01291300
* DECLARE                                                               01291400
*  1 EXID  BASED(ADDR(COMP_SERVR_PARMS)),                               01291500
*   3 EXID_FLAG_ALET@   PTR(31),/* Address of ALET for a byte flag.  */ 01292000
*                                                                       01293000
*   3 EXID_FLAG@        PTR(31),/* Address of a one byte flag that      01294000
*                                   indicates set Uid, Gid, or Both.    01295000
*                                     x'01' Set Uid.                    01296000
*                                     x'02' Set Gid.                    01297000
*                                     x'03' Set Both.                */ 01298000
*                                                                       01299000
*   3 EXID_UID_ALET@    PTR(31),/* Address of ALET for Uid to be set.*/ 01300000
*                                                                       01301000
*   3 EXID_UID@         PTR(31),/* Addr of the Uid to be set.        */ 01302000
*                                                                       01303000
*   3 EXID_GID_ALET@    PTR(31),/* Addr of ALET for Gid to be set.   */ 01304000
*                                                                       01305000
*   3 EXID_GID@         PTR(31),/* Addr of the Gid to be set.        */ 01306000
*                                                                       01307000
*   3 EXID_UIDO_ALET@   PTR(31),/* Addr of ALET for Uid output area. */ 01308000
*                                                                       01309000
*   3 EXID_UIDO@        PTR(31),/* Addr of Uid output area, which is    01310000
*                                   3 words filled in by IRRREX00 with  01311000
*                                   the real, effective and saved Uids  01312000
*                                                                    */ 01313000
*                                                                       01314000
*   3 EXID_GIDO_ALET@   PTR(31),/* Addr of ALET for Gid output area. */ 01315000
*                                                                       01316000
*   3 EXID_GIDO@        PTR(31);/* Addr of Gid output area, which is    01317000
*                                   3 words filled in by IRRREX00 with  01318000
*                                   the real, effective and saved Gids  01319000
*                                                                    */ 01320000
*                                                                       01321000
* DECLARE                                                               01322000
*  EXID_LEN FIXED(31) CONSTANT(LENGTH(EXID)); /* Constant EXID length*/ 01323000
*                                                                       01324000
*                                                                       01325000
*/********************************************************************/ 01326000
*/*                                                                  */ 01327000
*/*                     GETG PL/X DECLARATIONS                       */ 01328000
*/*------------------------------------------------------------------*/ 01329000
*/*                                                                  */ 01330000
*/* DECLARATION NAME = GETG                                          */ 01331000
*/*                                                                  */ 01332000
*/* DESCRIPTIVE NAME =   OMVS  RACF Get Supplemental Groups input    */ 01333000
*/*                    parameter list.                               */ 01334000
*/*                                                                  */ 01335000
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 01336000
*/*            list for the   OMVS  RACF Get Supplemental Groups     */ 01337000
*/*            service routine.                                      */ 01338000
*/*                                                                  */ 01339000
*/********************************************************************/ 01340000
*                                                                       01341000
* DECLARE                                                               01342000
*  1 GETG  BASED(ADDR(COMP_SERVR_PARMS)),                               01343000
*   3 GETG_KEY_ALET@   PTR(31), /* Addr of ALET for the user's  key. */ 01344000
*                                                                       01345000
*   3 GETG_KEY@        PTR(31), /* Address of a byte that contains      01346000
*                                   the user's key. The key is in the   01347000
*                                   high order 4 bits of the byte.   */ 01348000
*                                                                       01349000
*   3 GETG_GCNT_ALET@  PTR(31), /* Addr of ALET for the Group Count. */ 01350000
*                                                                       01351000
*   3 GETG_GCNT@       PTR(31), /* Address of the group count. (A one   01352000
*                                   word area that contains the number  01353000
*                                   of GIDs in the Grouplist area.)  */ 01354000
*                                                                       01355000
*   3 GETG_GLST_ALET@  PTR(31), /* Addr of ALET for the Group List.  */ 01356000
*                                                                       01357000
*   3 GETG_GLST@       PTR(31), /* Addr of the Group List area in which 01358000
*                                  supplemental GIDs are returned.   */ 01359000
*                                                                       01360000
*   3 GETG_GNUM_ALET@  PTR(31), /* Addr of ALET for number of groups.*/ 01361000
*                                                                       01362000
*   3 GETG_GNUM@       PTR(31); /* Addr of the Number of Groups. (A     01363000
*                                   one word area in which the number   01364000
*                                   of supplemental group GIDs is       01365000
*                                   returned.)                       */ 01366000
* DECLARE                                                               01367000
*  GETG_LEN FIXED(31) CONSTANT(LENGTH(GETG)); /* Constant GETG length*/ 01368000
*                                                                       01369000
*/********************************************************************/ 01370000
*/*                                                                  */ 01371000
*/*                     CHKP PL/X DECLARATIONS                       */ 01372000
*/*------------------------------------------------------------------*/ 01373000
*/*                                                                  */ 01374000
*/* DECLARATION NAME = CHKP                                          */ 01375000
*/*                                                                  */ 01376000
*/* DESCRIPTIVE NAME =   OMVS  RACF Check Privilege input parameter  */ 01377000
*/*                    list.                                         */ 01378000
*/*                                                                  */ 01379000
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 01380000
*/*            list for the   OMVS  RACF Check Privilege service     */ 01381000
*/*            routine.                                              */ 01382000
*/*                                                                  */ 01383000
*/********************************************************************/ 01384000
*                                                                       01385000
* DECLARE                                                               01386000
*  1 CHKP  BASED(ADDR(COMP_SERVR_PARMS)),                               01387000
*   3 CHKP_AUFC_ALET@  PTR(31), /* Addr of ALET for audit function      01388000
*                                   code.                            */ 01389000
*                                                                       01390000
*   3 CHKP_AUFC@       PTR(31); /* Addr of the audit function code.     01391000
*                                 (A full word containing the function  01392000
*                                  code that identifies the system      01393000
*                                  call being processed.)            */ 01394000
*                                                                       01395000
* DECLARE                                                               01396000
*  CHKP_LEN FIXED(31) CONSTANT(LENGTH(CHKP)); /* Constant CHKP length*/ 01397000
*                                                                       01398000
*/********************************************************************/ 01399000
*/*                                                                  */ 01400000
*/*                     GMAP PL/X DECLARATIONS                       */ 01401000
*/*------------------------------------------------------------------*/ 01402000
*/*                                                                  */ 01403000
*/* DECLARATION NAME = GMAP                                          */ 01404000
*/*                                                                  */ 01405000
*/* DESCRIPTIVE NAME =   OMVS  RACF Get Map Common input parameter   */ 01406000
*/*                    list.                                         */ 01407000
*/*                                                                  */ 01408000
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 01409000
*/*            list for the   OMVS  RACF Get Group Map/Get User Map  */ 01410000
*/*            service routine.                                      */ 01411000
*/*                                                                  */ 01412000
*/*                                                                  */ 01413000
*/* Note: GMAP is a common declaration that is used with both Get    */ 01414000
*/*       Group Map and Get User Map. When requesting Get Group Map, */ 01415000
*/*       all fields pertain to group data. When requesting Get User */ 01416000
*/*       Map, all fields pertain to user data.                      */ 01417000
*/*                                                                  */ 01418000
*/*                                                                  */ 01419000
*/********************************************************************/ 01420000
*                                                                       01421000
* DECLARE                                                               01422000
*  1 GMAP  BASED(ADDR(COMP_SERVR_PARMS)),                               01423000
*                                                                       01424000
*   3 GMAP_FLAG_ALET@  PTR(31), /* Address of ALET for one byte flag */ 01425000
*                                                                       01426000
*   3 GMAP_FLAG@       PTR(31), /* Address of the one byte flag:        01427000
*                                    x'00' Search by Gid/Uid.           01428000
*                                    x'01' Search by Group ID/Userid.*/ 01429000
*                                                                       01430000
*   3 GMAP_ID_ALET@    PTR(31), /* Address of ALET for the Gid/Uid.  */ 01431000
*                                                                       01432000
*   3 GMAP_ID@         PTR(31), /* Address of a word containing the     01433000
*                                   input Uid/Gid or in which the       01434000
*                                   Uid/Gid is returned.             */ 01435000
*                                                                       01436000
*                                                                       01437000
*   3 GMAP_NAME_ALET@  PTR(31), /* Address of ALET for the Group Name   01438000
*                                   or Userid.                       */ 01439000
*                                                                       01440000
*   3 GMAP_NAME@       PTR(31); /* Address of 8 bytes that contain      01441000
*                                   an input Group Name or Userid       01442000
*                                   or in which the Group name or       01443000
*                                   Userid is returned. The name/id     01444000
*                                   left justified and padded with      01445000
*                                   blanks.                          */ 01446000
*                                                                       01447000
* DECLARE                                                               01448000
*  GMAP_LEN FIXED(31) CONSTANT(LENGTH(GMAP)); /* Constant GMAP length*/ 01449000
*                                                                       01450000
*/********************************************************************/ 01451000
*/*                                                                  */ 01452000
*/*                     CKPO PL/X DECLARATIONS                       */ 01453000
*/*------------------------------------------------------------------*/ 01454000
*/*                                                                  */ 01455000
*/* DECLARATION NAME = CKPO                                          */ 01456000
*/*                                                                  */ 01457000
*/* DESCRIPTIVE NAME =   OMVS  RACF Check Process Owner input        */ 01458000
*/*                    parameter list.                               */ 01459000
*/*                                                                  */ 01460000
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 01461000
*/*            list for the   OMVS  Check Process Owner service      */ 01462000
*/*            routine.                                              */ 01463000
*/*                                                                  */ 01464000
*/********************************************************************/ 01465000
*                                                                       01466000
* DECLARE                                                               01467000
*  1 CKPO  BASED(ADDR(COMP_SERVR_PARMS)),                               01468000
*                                                                       01469000
*   3 CKPO_REQT_ALET@  PTR(31), /* Address of ALET for one byte Request 01470000
*                                   type.                            */ 01471000
*                                                                       01472000
*   3 CKPO_REQT@       PTR(31), /* Address of the one byte request      01473000
*                                   type:                               01474000
*                                   1 -  Audit only request from KILL   01475000
*                                     used when SIGCONT signal is being 01476000
*                                     sent.                             01477000
*                                   2 - KILL request.                   01478000
*                                   3 - GETPSENT request.               01479000
*                                   4 - OPEN Slave TTY request.      */ 01480000
*                                                                       01481000
*   3 CKPO_UIDS_ALET@  PTR(31), /* Address of ALET for Uids area.    */ 01482000
*                                                                       01483000
*   3 CKPO_UIDS@       PTR(31), /* Address of a 3 word area containing  01484000
*                                 real, effective, and saved Uids (in   01485000
*                                 that order) for the target process.*/ 01486000
*                                                                       01487000
*   3 CKPO_PID_ALET@   PTR(31), /* Address of ALET for target PID.   */ 01488000
*                                                                       01489000
*   3 CKPO_PID@        PTR(31), /* Address of the words containing the  01490000
*                                   target process's PID.            */ 01491000
*                                                                       01492000
*   3 CKPO_CODE_ALET@  PTR(31), /* Address of ALET for signal code.  */ 01493000
*                                                                       01494000
*   3 CKPO_CODE@       PTR(31); /* Address of word containing a code    01495000
*                                   identifying signal being sent.      01496000
*                                   This word is ignored for request    01497000
*                                   type 3.                          */ 01498000
*                                                                       01499000
* DECLARE                                                               01500000
*  CKPO_LEN FIXED(31) CONSTANT(LENGTH(CKPO)), /* Constant CKPO length*/ 01501000
*  CKPO_KILL_AUDIT FIXED(31) CONSTANT(1), /* KILL AUDIT Constant     */ 01502000
*  CKPO_KILL       FIXED(31) CONSTANT(2), /* Kill Verification.      */ 01503000
*  CKPO_GETPSENT   FIXED(31) CONSTANT(3), /* Caller is GETPSENT.     */ 01504000
*  CKPO_OPEN_STTY  FIXED(31) CONSTANT(4), /* Open Slave TTY.         */ 01505000
*  CKPO_MAX_REQ_TYPE FIXED(31) CONSTANT(4); /* Max Request Type.     */ 01506000
*/********************************************************************/ 01507000
*/*                                                                  */ 01508000
*/*               QRYS PL/X DECLARATIONS                             */ 01509000
*/*------------------------------------------------------------------*/ 01510000
*/*                                                                  */ 01511000
*/* DECLARATION NAME = QRYS                                          */ 01512000
*/*                                                                  */ 01513000
*/* DESCRIPTIVE NAME =   OMVS  RACF Query System Security options    */ 01514000
*/*                    input parameter list.                         */ 01515000
*/*                                                                  */ 01516000
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 01517000
*/*            list for the   OMVS  Query System Security options    */ 01518000
*/*            service routine.                                      */ 01519000
*/*                                                                  */ 01520000
*/********************************************************************/ 01521000
*                                                                       01522000
* DECLARE                                                               01523000
*  1 QRYS  BASED(ADDR(COMP_SERVR_PARMS)),                               01524000
*                                                                       01525000
*   3 QRYS_OPTN_CODE_ALET@ PTR(31), /* Address of ALET for one word     01526000
*                                       requested option code        */ 01527000
*                                                                       01528000
*   3 QRYS_OPTN_CODE@  PTR(31), /* Address of the one word requested    01529000
*                                  option code. The defined codes are:  01530000
*                                x'00000001' - NGROUPS_MAX options@P8C  01531000
*                                x'00000002' - POSIX_SAVED_IDS op@P8C*/ 01532000
*                                                                       01533000
*                                                                       01534000
*   3 QRYS_OUTP_VAL_ALET@ PTR(31),  /* Address of ALET for one word     01535000
*                                       output value                 */ 01536000
*                                                                       01537000
*   3 QRYS_OUTP_VAL@   PTR(31);     /* Address of one word output       01538000
*                                       value                        */ 01539000
*                                                                       01540000
* DECLARE                                                               01541000
*  QRYS_LEN FIXED(31) CONSTANT(LENGTH(QRYS)); /* Constant QRYS length*/ 01542000
*                                                                       01543000
*/********************************************************************/ 01544000
*/*                                                                  */ 01545000
*/*               CMOD PL/X DECLARATIONS                             */ 01546000
*/*------------------------------------------------------------------*/ 01547000
*/*                                                                  */ 01548000
*/* DECLARATION NAME = CMOD                                          */ 01549000
*/*                                                                  */ 01550000
*/* DESCRIPTIVE NAME =   OMVS  RACF Change File Mode input parameter */ 01551000
*/*                    list.                                         */ 01552000
*/*                                                                  */ 01553000
*/* FUNCTION = Provides the PL/X mapping of the input parameter list */ 01554000
*/*            for the   OMVS  Change File Mode service routine.     */ 01555000
*/*                                                                  */ 01556000
*/********************************************************************/ 01557000
*                                                                       01558000
* DECLARE                                                               01559000
*  1 CMOD  BASED(ADDR(COMP_SERVR_PARMS)),                               01560000
*                                                                       01561000
*   3 CMOD_MODE_ALET@  PTR(31), /* Address of the ALET for the mode     01562000
*                                   structure.                       */ 01563000
*                                                                       01564000
*   3 CMOD_MODE@       PTR(31), /* Address of a one word mode           01565000
*                                   parameter.                       */ 01566000
*                                                                       01567000
*   3 CMOD_FSP_ALET@   PTR(31), /* Address of the ALET for the FSP      01568000
*                                   structure.                       */ 01569000
*                                                                       01570000
*   3 CMOD_FSP@        PTR(31), /* Address of the FSP structure.     */ 01571000
*                                                                       01572000
*   3 CMOD_FID_ALET@  PTR(31), /* Address of the ALET for the file id*/ 01573000
*                                                                       01574000
*   3 CMOD_FID@       PTR(31), /* Address of the File Id which is a 16  01575000
*                                  byte area that contains a unique     01576000
*                                  identifier of the file.           */ 01577000
*   3 CMOD_CRED_ALET@  PTR(31), /* Address of the ALET for the CRED     01578000
*                                   structure.                       */ 01579000
*                                                                       01580000
*   3 CMOD_CRED@       PTR(31); /* Address of the CRED structure.    */ 01581000
*                                                                       01582000
*                                                                       01583000
* DECLARE                                                               01584000
*  CMOD_LEN FIXED(31) CONSTANT(LENGTH(CMOD)); /* Constant CMOD length*/ 01585000
*                                                                       01586000
*/********************************************************************/ 01587000
*/*                                                                  */ 01588000
*/*               CLID PL/X DECLARATIONS                             */ 01589000
*/*------------------------------------------------------------------*/ 01590000
*/*                                                                  */ 01591000
*/* DECLARATION NAME = CLID                                          */ 01592000
*/*                                                                  */ 01593000
*/* DESCRIPTIVE NAME =   OMVS  RACF Clear Setid input parameter list */ 01594000
*/*                                                                  */ 01595000
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 01596000
*/*            list for the   OMVS  Clear Setid service routine.     */ 01597000
*/*                                                                  */ 01598000
*/********************************************************************/ 01599000
*                                                                       01600000
* DECLARE                                                               01601000
*  1 CLID  BASED(ADDR(COMP_SERVR_PARMS)),                               01602000
*                                                                       01603000
*   3 CLID_FSP_ALET@  PTR(31), /* Address of the ALET for the FSP       01604000
*                                  structure.                        */ 01605000
*   3 CLID_FSP@       PTR(31), /* Address of the FSP structure.      */ 01606000
*                                                                       01607000
*   3 CLID_FID_ALET@  PTR(31), /* Address of the ALET for the file id*/ 01608000
*                                                                       01609000
*   3 CLID_FID@       PTR(31), /* Address of the File Id which is a 16  01610000
*                                  byte area that contains a unique     01611000
*                                  identifier of the file.           */ 01612000
*   3 CLID_CRED_ALET@ PTR(31), /* Address of the ALET for the CRED      01613000
*                                  structure.                        */ 01614000
*   3 CLID_CRED@      PTR(31); /* Address of the CRED structure.     */ 01615000
*                                                                       01616000
* DECLARE                                                               01617000
*  CLID_LEN FIXED(31) CONSTANT(LENGTH(CLID)); /* Constant CLID length*/ 01618000
*                                                                       01619000
*/********************************************************************/ 01620000
*/*                                                                  */ 01621000
*/*               CAUD PL/X DECLARATIONS                             */ 01622000
*/*------------------------------------------------------------------*/ 01623000
*/*                                                                  */ 01624000
*/* DECLARATION NAME = CAUD                                          */ 01625000
*/*                                                                  */ 01626000
*/* DESCRIPTIVE NAME =   OMVS  RACF Change File Audit Options input  */ 01627000
*/*                    parameter list.                               */ 01628000
*/*                                                                  */ 01629000
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 01630000
*/*            list for the   OMVS  Change File Audit Options        */ 01631000
*/*            routine.                                              */ 01632000
*/*                                                                  */ 01633000
*/********************************************************************/ 01634000
*                                                                       01635000
* DECLARE                                                               01636000
*  1 CAUD  BASED(ADDR(COMP_SERVR_PARMS)),                               01637000
*                                                                       01638000
*   3 CAUD_AO_ALET@  PTR(31),/* Address of the ALET for the Audit       01639000
*                                Options.                            */ 01640000
*                                                                       01641000
*   3 CAUD_AO@   PTR(31),/* Addr of 4 bytes that contain an Audit       01642000
*                            Option for each type of access:            01643000
*                             Byte 1 - read access audit options.       01644000
*                             Byte 2 - write access audit options.      01645000
*                             Byte 3 - execute/search audit options.    01646000
*                               Each of the first three bytes contain   01646500
*                               an Audit Option:                   @P1C 01647000
*                               x'00' - don't audit any access attempts 01647500
*                               x'01' - audit successful access.        01648000
*                               x'02' - audit failed access attempts.   01648500
*                             Byte 4 - audit flag.                 @P1C 01649000
*                               In the last byte, the last bit     @P1A 01649500
*                               indicates:                         @P1A 01650000
*                               x'00' - set user audit options.    @P1A 01650500
*                               x'01' - set auditor audit options. @P1A 01651000
*                                                                    */ 01651500
*                                                                       01652000
*   3 CAUD_FSP_ALET@  PTR(31), /* Address of the ALET for the FSP       01653000
*                                  structure.                        */ 01654000
*                                                                       01655000
*   3 CAUD_FSP@       PTR(31), /* Address of the FSP structure.      */ 01656000
*                                                                       01657000
*   3 CAUD_FID_ALET@  PTR(31), /* Address of the ALET for the file id*/ 01658000
*                                                                       01659000
*   3 CAUD_FID@       PTR(31), /* Address of the File Id which is a 16  01660000
*                                  byte area that contains a unique     01661000
*                                  identifier of the file.           */ 01662000
*                                                                       01663000
*   3 CAUD_CRED_ALET@ PTR(31), /* Address of the ALET for the CRED      01664000
*                                  structure.                        */ 01665000
*                                                                       01666000
*   3 CAUD_CRED@      PTR(31); /* Address of the CRED structure.     */ 01667000
*                                                                       01668000
*                                                                       01669000
* DECLARE                                                               01670000
*  CAUD_LEN FIXED(31) CONSTANT(LENGTH(CAUD)); /* Constant CAUD length*/ 01671000
*                                                                       01672000
*/********************************************************************/ 01673000
*/*                                                                  */ 01674000
*/*               COWN PL/X DECLARATIONS                             */ 01675000
*/*------------------------------------------------------------------*/ 01676000
*/*                                                                  */ 01677000
*/* DECLARATION NAME = COWN                                          */ 01678000
*/*                                                                  */ 01679000
*/* DESCRIPTIVE NAME =   OMVS  RACF Change Owner and Group input     */ 01680000
*/*                    parameter list.                               */ 01681000
*/*                                                                  */ 01682000
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 01683000
*/*            list for the   OMVS  Change Owner and Group service   */ 01684000
*/*            routine.                                              */ 01685000
*/*                                                                  */ 01686000
*/********************************************************************/ 01687000
*                                                                       01688000
* DECLARE                                                               01689000
*  1 COWN  BASED(ADDR(COMP_SERVR_PARMS)),                               01690000
*                                                                       01691000
*   3 COWN_UID_ALET@  PTR(31), /* Address of ALET for Uid to be set. */ 01692000
*                                                                       01693000
*   3 COWN_UID@       PTR(31), /* Addr of the Uid to be set as the      01694000
*                                  file owner Uid.                   */ 01695000
*                                                                       01696000
*   3 COWN_GID_ALET@  PTR(31), /* Addr of ALET for Gid to be set.    */ 01697000
*                                                                       01698000
*   3 COWN_GID@       PTR(31), /* Addr of the Gid to be set as the      01699000
*                                  file owner Gid.                   */ 01700000
*                                                                       01701000
*   3 COWN_FSP_ALET@  PTR(31), /* Address of the ALET for the FSP       01702000
*                                  structure.                        */ 01703000
*                                                                       01704000
*   3 COWN_FSP@       PTR(31), /* Address of the FSP structure.      */ 01705000
*                                                                       01706000
*   3 COWN_FID_ALET@  PTR(31), /* Address of the ALET for the file id*/ 01707000
*                                                                       01708000
*   3 COWN_FID@       PTR(31), /* Address of the File Id which is a 16  01709000
*                                  byte area that contains a unique     01710000
*                                  identifier of the file.           */ 01711000
*                                                                       01712000
*   3 COWN_CRED_ALET@ PTR(31), /* Address of the ALET for the CRED      01713000
*                                  structure.                        */ 01714000
*                                                                       01715000
*   3 COWN_CRED@      PTR(31); /* Address of the CRED structure.     */ 01716000
*                                                                       01717000
*                                                                       01718000
* DECLARE                                                               01719000
*  COWN_LEN FIXED(31) CONSTANT(LENGTH(COWN)); /* Constant COWN length*/ 01720000
*                                                                       01721000
*/********************************************************************/ 01722000
*/*                                                                  */ 01723000
*/*               UMSK PL/X DECLARATIONS                             */ 01724000
*/*------------------------------------------------------------------*/ 01725000
*/*                                                                  */ 01726000
*/* DECLARATION NAME = UMSK                                          */ 01727000
*/*                                                                  */ 01728000
*/* DESCRIPTIVE NAME =   OMVS  RACF Set File Mode Creation Mask      */ 01729000
*/*                    input parameter list.                         */ 01730000
*/*                                                                  */ 01731000
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 01732000
*/*            list for the   OMVS  Set File Mode Creation Mask      */ 01733000
*/*            service routine.                                      */ 01734000
*/*                                                                  */ 01735000
*/********************************************************************/ 01736000
*                                                                       01737000
* DECLARE                                                               01738000
*  1 UMSK  BASED(ADDR(COMP_SERVR_PARMS)),                               01739000
*                                                                       01740000
*   3 UMSK_MODE_ALET@  PTR(31), /* Address of the ALET for the mode     01741000
*                                   structure.                       */ 01742000
*                                                                       01743000
*   3 UMSK_MODE@       PTR(31); /* Address of the mode parameter.    */ 01744000
*                                                                       01745000
* DECLARE                                                               01746000
*  UMSK_LEN FIXED(31) CONSTANT(LENGTH(UMSK)); /* Constant UMSK length*/ 01747000
*                                                                       01748000
*/********************************************************************/ 01749000
*/*                                                                  */ 01750000
*/*               KACC PL/X DECLARATIONS                             */ 01751000
*/*------------------------------------------------------------------*/ 01752000
*/*                                                                  */ 01753000
*/* DECLARATION NAME = KACC                                          */ 01754000
*/*                                                                  */ 01755000
*/* DESCRIPTIVE NAME =   OMVS  RACF Check Access input parameter     */ 01756000
*/*                    list.                                         */ 01757000
*/*                                                                  */ 01758000
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 01759000
*/*            list for the   OMVS  Check Access service routine.    */ 01760000
*/*                                                                  */ 01761000
*/********************************************************************/ 01762000
*                                                                       01763000
* DECLARE                                                               01764000
*  1 KACC  BASED(ADDR(COMP_SERVR_PARMS)),                               01765000
*                                                                       01766000
*   3 KACC_ACODE_ALET@ PTR(31),/* Address of the ALET for the access    01767000
*                                   code.                            */ 01768000
*                                                                       01769000
*   3 KACC_ACODE@      PTR(31),/* Address of a 1 byte access code       01770000
*                                  that contains:                       01771000
*                                   x'01' - execute access.             01772000
*                                   x'02' - write access.               01773000
*                                   x'03' - write and execute access.   01774000
*                                   x'04' - read access.                01775000
*                                   x'05' - read and execute access.    01776000
*                                   x'06' - read and write access.      01777000
*                                   x'07' - read, write and execute     01778000
*                                            access.                    01779000
*                                   x'81' - directory search access.    01780000
*                                   x'87' - any access.              */ 01781000
*                                                                       01782000
*   3 KACC_FSP_ALET@   PTR(31),/* Address of the ALET for the FSP       01783000
*                                  structure.                        */ 01784000
*                                                                       01785000
*   3 KACC_FSP@        PTR(31),/* Address of the FSP structure.      */ 01786000
*                                                                       01787000
*   3 KACC_FID_ALET@   PTR(31),/* Address of the ALET for the file id*/ 01788000
*                                                                       01789000
*   3 KACC_FID@        PTR(31),/* Address of the File Id which is a 16  01790000
*                                  byte area that contains a unique     01791000
*                                  identifier of the file.           */ 01792000
*                                                                       01793000
*   3 KACC_CRED_ALET@  PTR(31),/* Address of the ALET for the CRED      01794000
*                                  structure.                        */ 01795000
*                                                                       01796000
*   3 KACC_CRED@       PTR(31),/* Address of the CRED structure.     */ 01797000
*                                                                       01798000
*   3 KACC_FLAG_ALET@  PTR(31),/* Address of the ALET for the name      01799000
*                                  flag byte.                        */ 01800000
*                                                                       01801000
*   3 KACC_FLAG@       PTR(31);/* Address of a byte flag that indicates 01802000
*                                  which name is being checked:         01803000
*                                   x'00' - Use the CRED_name_flag to   01804000
*                                           determine path name being   01805000
*                                           checked. Used by lookup.    01806000
*                                                                       01807000
*                                   x'01' - The old (or only) name is   01808000
*                                           being checked. Used by all  01809000
*                                           calls except lookup and     01810000
*                                           when rename and link are    01811000
*                                           checking for write access   01812000
*                                           to the parent directory of  01813000
*                                           the new path name file.     01814000
*                                                                       01815000
*                                   x'02' - The new name is being       01816000
*                                           checked. Used by rename     01817000
*                                           and link when checking for  01818000
*                                           write access to the parent  01819000
*                                           directory of the new path   01820000
*                                           name file.               */ 01821000
*                                                                       01822000
*                                                                       01823000
*                                                                       01824000
* DECLARE                                                               01825000
*  KACC_LEN FIXED(31) CONSTANT(LENGTH(KACC)); /* Constant KACC length*/ 01826000
*                                                                       01827000
*                                                                       01828000
*/********************************************************************/ 01829000
*/*                                                                  */ 01830000
*/*               QRYF PL/X DECLARATIONS                             */ 01831000
*/*------------------------------------------------------------------*/ 01832000
*/*                                                                  */ 01833000
*/* DECLARATION NAME = QRYF                                          */ 01834000
*/*                                                                  */ 01835000
*/* DESCRIPTIVE NAME =   OMVS  RACF Query File Security Options      */ 01836000
*/*                    input parameter list.                         */ 01837000
*/*                                                                  */ 01838000
*/* FUNCTION = Provides the PL/X mapping of the input parameter list */ 01839000
*/*            for the   OMVS  Query File Security Options service   */ 01840000
*/*            routine.                                              */ 01841000
*/*                                                                  */ 01842000
*/********************************************************************/ 01843000
*                                                                       01844000
* DECLARE                                                               01845000
*  1 QRYF  BASED(ADDR(COMP_SERVR_PARMS)),                               01846000
*                                                                       01847000
*   3 QRYF_OCODE_ALET@ PTR(31),/* Address of the ALET for the option    01848000
*                                  code.                             */ 01849000
*                                                                       01850000
*   3 QRYF_OCODE@      PTR(31),/* Address of a 1 word option code       01851000
*                                  that contains:                       01852000
*                                  x'00000001'-POSIX_CHOWN_RESTRICTED*/ 01853000
*                                                                       01854000
*   3 QRYF_OUTV_ALET@  PTR(31),/* Address of the ALET for the output    01855000
*                                  value.                            */ 01856000
*                                                                       01857000
*   3 QRYF_OUTV@       PTR(31);/* Address of the output value:          01858000
*                                   0 - POSIX_CHOWN_RESTRICTED.         01859000
*                                  -1 - Not POSIX_CHOWN_RESTRICTED.  */ 01860000
*                                                                       01861000
* DECLARE                                                               01862000
*  QRYF_LEN FIXED(31) CONSTANT(LENGTH(QRYF)); /* Constant QRYF length*/ 01863000
*                                                                       01864000
*                                                                       01865000
*/********************************************************************/ 01866000
*                                                            /* 6@P2D*/ 01882000
*/*                                                                  */ 01898000
*/*                    KFOW PL/X DECLARATIONS                        */ 01899000
*/*------------------------------------------------------------------*/ 01900000
*/*                                                                  */ 01901000
*/* DECLARATION NAME = KFOW                                          */ 01902000
*/*                                                                  */ 01903000
*/* DESCRIPTIVE NAME =   OMVS  RACF Check File Owner input parameter */ 01904000
*/*                    list.                                         */ 01905000
*/*                                                                  */ 01906000
*/* FUNCTION = Provides the PL/X mapping of the input parameter list */ 01907000
*/*            for the   OMVS  Check File Owner service routine.     */ 01908000
*/*                                                                  */ 01909000
*/********************************************************************/ 01910000
*                                                                       01911000
* DECLARE                                                               01912000
*  1 KFOW  BASED(ADDR(COMP_SERVR_PARMS)),                               01913000
*                                                                       01914000
*   3 KFOW_FSP_ALET@   PTR(31),/* Address of the ALET for the FSP       01915000
*                                  structure.                        */ 01916000
*                                                                       01917000
*   3 KFOW_FSP@        PTR(31),/* Address of the FSP structure.      */ 01918000
*                                                                       01919000
*   3 KFOW_FID_ALET@   PTR(31),/* Address of the ALET for the file id*/ 01920000
*                                                                       01921000
*   3 KFOW_FID@        PTR(31),/* Address of the File Id which is a 16  01922000
*                                  byte area that contains a unique     01923000
*                                  identifier of the file.           */ 01924000
*                                                                       01925000
*   3 KFOW_CRED_ALET@  PTR(31),/* Address of the ALET for the CRED      01926000
*                                  structure.                        */ 01927000
*                                                                       01928000
*   3 KFOW_CRED@       PTR(31);/* Address of the CRED structure.     */ 01929000
*                                                                       01930000
* DECLARE                                                               01931000
*  KFOW_LEN FIXED(31) CONSTANT(LENGTH(KFOW)); /* Constant KFOW length*/ 01932000
*                                                                       01933000
*/********************************************************************/ 01934000
*/*                                                                  */ 01935000
*/*                    MKRT PL/X DECLARATIONS                        */ 01936000
*/*------------------------------------------------------------------*/ 01937000
*/*                                                                  */ 01938000
*/* DECLARATION NAME = MKRT                                          */ 01939000
*/*                                                                  */ 01940000
*/* DESCRIPTIVE NAME =   OMVS  RACF Make Root FSP input parameter    */ 01941000
*/*                    list.                                         */ 01942000
*/*                                                                  */ 01943000
*/* FUNCTION =Provides the PL/X mapping of the input parameter list  */ 01944000
*/*            for the   OMVS  Make Root FSP service routine.        */ 01945000
*/*                                                                  */ 01946000
*/********************************************************************/ 01947000
*                                                                       01948000
* DECLARE                                                               01949000
*  1 MKRT  BASED(ADDR(COMP_SERVR_PARMS)),                               01950000
*                                                                       01951000
*   3 MKRT_MODE_ALET@  PTR(31), /* Address of the ALET for the mode     01952000
*                                   structure.                       */ 01953000
*                                                                       01954000
*   3 MKRT_MODE@       PTR(31), /* Address of the mode parameter.    */ 01955000
*                                                                       01956000
*   3 MKRT_OFSP_ALET@  PTR(31),/* Address of the ALET for the output    01957000
*                                  FSP.                              */ 01958000
*                                                                       01959000
*   3 MKRT_OFSP@       PTR(31),/* Address of the output FSP.         */ 01960000
*                                                                       01961000
*   3 MKRT_FID_ALET@   PTR(31),/* Address of the ALET for the file id*/ 01962000
*                                                                       01963000
*   3 MKRT_FID@        PTR(31),/* Address of the File Id which is a 16  01964000
*                                  byte area that contains a unique     01965000
*                                  identifier of the file.           */ 01966000
*                                                                       01967000
*   3 MKRT_DSN_ALET@   PTR(31),/* Address of the ALET for the dataset   01968000
*                                  name.                             */ 01969000
*                                                                       01970000
*   3 MKRT_DSN@        PTR(31);/* Address of an area that contains the  01971000
*                                  name of the PDSE/x data set being    01972000
*                                  created. (44 character length)    */ 01973000
*                                                                       01974000
* DECLARE                                                               01975000
*  MKRT_LEN FIXED(31) CONSTANT(LENGTH(MKRT)); /* Constant MKRT length*/ 01976000
*                                                                       01977000
*                                                                       01978000
*/********************************************************************/ 01979000
*/*                                                                  */ 01980000
*/*               PTRC PL/X DECLARATIONS                             */ 01981000
*/*------------------------------------------------------------------*/ 01982000
*/*                                                                  */ 01983000
*/* DECLARATION NAME = PTRC                                          */ 01984000
*/*                                                                  */ 01985000
*/* DESCRIPTIVE NAME =   OMVS  RACF Check PTRACE Authority input     */ 01986000
*/*                    parameter list.                               */ 01987000
*/*                                                                  */ 01988000
*/* FUNCTION = Provides the PL/X mapping of the input parameter list */ 01989000
*/*            for the   OMVS  Check PTRACE Authority service        */ 01990000
*/*            routine.                                              */ 01991000
*/*                                                                  */ 01992000
*/********************************************************************/ 01993000
*                                                                       01994000
* DECLARE                                                               01995000
*  1 PTRC  BASED(ADDR(COMP_SERVR_PARMS)),                               01996000
*                                                                       01997000
*   3 PTRC_TUID_ALET@ PTR(31),/* Address of ALET for the target UIDs    01998000
*                                  area.                             */ 01999000
*                                                                       02000000
*   3 PTRC_TUID@      PTR(31),/* Address of a 3 word area that contains 02001000
*                                  the REAL, EFFECTIVE, and SAVED UIDs  02002000
*                                  (in that order) for the target       02003000
*                                   process.                         */ 02004000
*                                                                       02005000
*   3 PTRC_TGID_ALET@ PTR(31),/* Address of ALET for the target GIDs    02006000
*                                 area.                              */ 02007000
*                                                                       02008000
*   3 PTRC_TGID@      PTR(31),/* Address of a 3 word area that contains 02009000
*                                 the REAL, EFFECTIVE, and SAVED GIDs   02010000
*                                 (in that order) for the target        02011000
*                                  process.                          */ 02012000
*   3 PTRC_TPID_ALET@ PTR(31),/* Address of ALET for the target PID. */ 02013000
*                                                                       02014000
*                                                                       02015000
*                                                                       02016000
*   3 PTRC_TPID@      PTR(31);/* Address of a word that contains the    02017000
*                                 PID of the target process.         */ 02018000
*                                                                       02019000
* DECLARE                                                               02020000
*  PTRC_LEN FIXED(31) CONSTANT(LENGTH(PTRC)); /* Constant PTRC length*/ 02021000
*                                                                       02022000
*/********************************************************************/ 02023000
*/*                                                                  */ 02024000
*/*               MFSP PL/X DECLARATIONS                             */ 02025000
*/*------------------------------------------------------------------*/ 02026000
*/*                                                                  */ 02027000
*/* DECLARATION NAME = MFSP                                          */ 02028000
*/*                                                                  */ 02029000
*/* DESCRIPTIVE NAME =   OMVS  RACF Make FSP input parameter list.   */ 02030000
*/*                                                                  */ 02031000
*/* FUNCTION = Provides the PL/X mapping of the input parameter list */ 02032000
*/*            for the   OMVS  Make FSP service routine.             */ 02033000
*/*                                                                  */ 02034000
*/********************************************************************/ 02035000
*                                                                       02036000
* DECLARE                                                               02037000
*  1 MFSP  BASED(ADDR(COMP_SERVR_PARMS)),                               02038000
*                                                                       02039000
*   3 MFSP_MODE_ALET@  PTR(31), /* Address of the ALET for the mode     02040000
*                                   structure.                       */ 02041000
*                                                                       02042000
*   3 MFSP_MODE@       PTR(31), /* Address of the mode parameter.    */ 02043000
*                                                                       02044000
*   3 MFSP_OFSP_ALET@  PTR(31),/* Address of the ALET for the output    02045000
*                                  FSP.                              */ 02046000
*                                                                       02047000
*   3 MFSP_OFSP@       PTR(31),/* Address of the output FSP.         */ 02048000
*                                                                       02049000
*   3 MFSP_ODFSP_ALET@ PTR(31),/* Address of the ALET for the owning    02050000
*                                  directory FSP.                    */ 02051000
*                                                                       02052000
*   3 MFSP_ODFSP@      PTR(31),/* Address of the owning directory FSP*/ 02053000
*                                                                       02054000
*   3 MFSP_FID_ALET@  PTR(31), /* Address of the ALET for the file id*/ 02055000
*                                                                       02056000
*   3 MFSP_FID@       PTR(31), /* Address of the File Id which is a 16  02057000
*                                  byte area that contains a unique     02058000
*                                  identifier of the file.           */ 02059000
*   3 MFSP_CRED_ALET@  PTR(31), /* Address of the ALET for the CRED     02060000
*                                   structure.                       */ 02061000
*                                                                       02062000
*   3 MFSP_CRED@       PTR(31); /* Address of the CRED structure.    */ 02063000
*                                                                       02064000
*                                                                       02065000
* DECLARE                                                               02066000
*  MFSP_LEN FIXED(31) CONSTANT(LENGTH(MFSP)); /* Constant MFSP length*/ 02067000
*                                                                       02068000
*/********************************************************************/ 02069000
*/*                                                                  */ 02070000
*/*               RAUD PL/X DECLARATIONS                             */ 02071000
*/*------------------------------------------------------------------*/ 02072000
*/*                                                                  */ 02073000
*/* DECLARATION NAME = RAUD                                          */ 02074000
*/*                                                                  */ 02075000
*/* DESCRIPTIVE NAME =   OMVS  RACF Audit input parameter list.      */ 02076000
*/*                                                                  */ 02077000
*/* FUNCTION = Provides the PL/X mapping of the input parameter list */ 02078000
*/*            for the   OMVS  Audit service routine.                */ 02079000
*/*                                                                  */ 02080000
*/********************************************************************/ 02081000
*                                                                       02082000
*                                                                       02083000
* DECLARE                                                               02084000
*  1 RAUD  BASED(ADDR(COMP_SERVR_PARMS)),                               02085000
*                                                                       02086000
*   3 RAUD_CRED_ALET@  PTR(31),/* Address of ALET for CRED structure.*/ 02087000
*                                                                       02088000
*   3 RAUD_CRED@       PTR(31),/* Address of the CRED structure.     */ 02089000
*                                                                       02090000
*   3 RAUD_OFID_ALET@  PTR(31),/* Address of ALET for the File Id of    02091000
*                                 the old (or only) file.            */ 02092000
*                                                                       02093000
*   3 RAUD_OFID@       PTR(31),/* Address of the File Id for the old    02094000
*                                  (or only) file. The File Id is a     02095000
*                                  16 byte area that contains a unique  02096000
*                                  identifier of the file.           */ 02097000
*                                                                       02098000
*   3 RAUD_OFSP_ALET@  PTR(31),/* Address of ALET for the FSP for the   02099000
*                                  old (or only) file.               */ 02100000
*                                                                       02101000
*   3 RAUD_OFSP@       PTR(31),/* Address of the FSP for the old        02102000
*                                  (or only) file.                   */ 02103000
*                                                                       02104000
*   3 RAUD_FLAG_ALET@  PTR(31),/* Address of ALET for the flag byte. */ 02105000
*                                                                       02106000
*   3 RAUD_FLAG@       PTR(31),/* Address of a flag byte that           02107000
*                                 indicates:                            02108000
*                                  x'00' - last link was not removed.   02109000
*                                  x'01' - last link was removed for    02110000
*                                          a file. The file is deleted. 02111000
*                                This parameter is used only on rename  02112000
*                                and unlink. On a rename, the new name  02113000
*                                is deleted. On unlink, the 'only'      02114000
*                                name was deleted.                   */ 02115000
*                                                                       02116000
*   3 RAUD_NFID_ALET@  PTR(31),/* Address of ALET for the File Id of    02117000
*                                  the NEW file. This parameter is      02118000
*                                  used only on a rename.            */ 02119000
*                                                                       02120000
*   3 RAUD_NFID@       PTR(31),/* Address of the File Id for the NEW    02121000
*                                 file. This parameter is used only     02122000
*                                 on a rename. The File Id is a         02123000
*                                 16 byte area that contains a unique   02124000
*                                 identifier of the file.            */ 02125000
*                                                                       02126000
*   3 RAUD_NFSP_ALET@ PTR(31),/* Address of ALET for the FSP for the    02127000
*                                 NEW file. This parameter is used      02128000
*                                 only on a rename.                  */ 02129000
*                                                                       02130000
*   3 RAUD_NFSP@      PTR(31);/* Address of the FSP for the NEW file.   02131000
*                                 This parameter is used only on a      02132000
*                                 rename.                            */ 02133000
*                                                                       02134000
* DECLARE                                                               02135000
*  RAUD_LEN FIXED(31) CONSTANT(LENGTH(RAUD)); /* Constant RAUD length*/ 02136000
*                                                                       02137000
*/********************************************************************/ 02138000
*/*                                                                  */ 02139000
*/*                     GUGP PL/X DECLARATIONS                       */ 02140000
*/*------------------------------------------------------------------*/ 02141000
*/*                                                                  */ 02142000
*/* DECLARATION NAME = GUGP                                          */ 02143000
*/*                                                                  */ 02144000
*/* DESCRIPTIVE NAME =   OMVS  RACF Get Supplemental Groups input    */ 02145000
*/*                    parameter list.                               */ 02146000
*/*                                                                  */ 02147000
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 02148000
*/*            list for the   OMVS  RACF Get Supplemental Groups     */ 02149000
*/*            service routine.                                      */ 02150000
*/*                                                                  */ 02151000
*/********************************************************************/ 02152000
*                                                                       02153000
* DECLARE                                                               02154000
*  1 GUGP  BASED(ADDR(COMP_SERVR_PARMS)),                               02155000
*   3 GUGP_KEY_ALET@   PTR(31), /* Addr of ALET for the user's  key. */ 02156000
*                                                                       02157000
*   3 GUGP_KEY@        PTR(31), /* Address of a byte that contains      02158000
*                                   the user's key. The key is in the   02159000
*                                   high order 4 bits of the byte.   */ 02160000
*                                                                       02161000
*   3 GUGP_NLEN_ALET@  PTR(31), /* Address of ALET for the USERID       02162000
*                                   length                           */ 02163000
*                                                                       02164000
*   3 GUGP_NLEN@       PTR(31), /* Address of 1 byte USERID Length.  */ 02165000
*                                                                       02166000
*   3 GUGP_NAME_ALET@  PTR(31), /* Address of ALET for the USERID.   */ 02167000
*                                                                       02168000
*   3 GUGP_NAME@       PTR(31), /* Address of 8 byte USERID.         */ 02169000
*                                                                       02170000
*   3 GUGP_GCNT_ALET@  PTR(31), /* Addr of ALET for the Group Count. */ 02171000
*                                                                       02172000
*   3 GUGP_GCNT@       PTR(31), /* Address of the group count. (A one   02173000
*                                   word area that contains the number  02174000
*                                   of GIDs in the Grouplist area.)  */ 02175000
*                                                                       02176000
*   3 GUGP_GLST_ALET@  PTR(31), /* Addr of ALET for the Group List.  */ 02177000
*                                                                       02178000
*   3 GUGP_GLST@       PTR(31), /* Addr of the Group List area in which 02179000
*                                  supplemental GIDs are returned.   */ 02180000
*                                                                       02181000
*   3 GUGP_GNUM_ALET@  PTR(31), /* Addr of ALET for number of groups.*/ 02182000
*                                                                       02183000
*   3 GUGP_GNUM@       PTR(31); /* Addr of the Number of Groups. (A     02184000
*                                   one word area in which the number   02185000
*                                   of supplemental group GIDs is       02186000
*                                   returned.)                       */ 02187000
* DECLARE                                                               02188000
*  GUGP_LEN FIXED(31) CONSTANT(LENGTH(GUGP)); /* Constant GUGP length*/ 02189000
*                                                                       02190000
*                                                                       02191000
*/********************************************************************/ 02192000
*/*                                                                  */ 02193000
*/*               FORK PL/X DECLARATIONS                             */ 02194000
*/*------------------------------------------------------------------*/ 02195000
*/*                                                                  */ 02196000
*/* DECLARATION NAME = FORK                                          */ 02197000
*/*                                                                  */ 02198000
*/* DESCRIPTIVE NAME =   OMVS  RACF FORK Exit input parameter list.  */ 02199000
*/*                                                                  */ 02200000
*/* FUNCTION = Provides the PL/X mapping of the input parameter list */ 02201000
*/*            for the   OMVS  RACF FORK Exit service routine.       */ 02202000
*/*                                                                  */ 02203000
*/********************************************************************/ 02204000
*                                                                       02205000
* DECLARE                                                               02206000
*  1 FORK  BASED(ADDR(COMP_SERVR_PARMS)),                               02207000
*                                                                       02208000
*   3 FORK_FLAG_ALET@  PTR(31), /* Address of ALET for fork flag.    */ 02209000
*                                                                       02210000
*   3 FORK_FLAG@       PTR(31), /* Address of a word flag that          02211000
*                                   indicates the current type of       02212000
*                                   processing:                         02213000
*                                    x'00' - Fork Parent Processing.    02214000
*                                    x'02' - Fork Parent Processing     02214300
*                                            Extended Data              02214600
*                                    x'01' - Forked Child Processing.   02214900
*                                    x'03' - Forked Child Processing    02215200
*                                            Extended Data       @LGC*/ 02215500
*                                                                       02216000
*   3 FORK_DATAKEY_ALET@ PTR(31),/* Address of ALET for data's          02217000
*                                   storage key.                     */ 02218000
*                                                                       02219000
*   3 FORK_DATAKEY@    PTR(31), /* Address of a word that contains the  02220000
*                                   storage key from which the storage  02221000
*                                   for the data is to be obtained.  */ 02222000
*                                                                       02223000
*   3 FORK_DATALEN_ALET@ PTR(31), /* Address of ALET for data length.*/ 02224000
*                                                                       02225000
*   3 FORK_DATALEN@    PTR(31), /* Address of a word that contains the  02226000
*                                   data length.                     */ 02227000
*                                                                       02228000
*   3 FORK_DATA_ALET@  PTR(31), /* Address of the data's ALET.       */ 02229000
*                                                                       02230000
*   3 FORK_DATA@       PTR(31), /* Address of the data being passed     02231000
*                                   from the parent to the child via    02232000
*                                   FORK.                            */ 02233000
*                                                                       02234000
*   3 FORK_DATASP_ALET@ PTR(31),/* Address of ALET for data subpool. */ 02235000
*                                                                       02236000
*   3 FORK_DATASP@     PTR(31); /* Address of a word that contains the  02237000
*                                   subpool from which to obtain the    02238000
*                                   storage to hold the data.        */ 02239000
*                                                                       02240000
* DECLARE                                                               02241000
*  FORK_LEN FIXED(31) CONSTANT(LENGTH(FORK)), /* Constant FORK length*/ 02242000
*  FORK_PARENT FIXED(31) CONSTANT(0), /* Fork Parent Processing flag.*/ 02243000
*  FORK_PARENTX FIXED(31) CONSTANT(2), /* Fork Parent Processing        02243300
*                                         Extended Data flag.    @LGA*/ 02243600
*  FORK_CHILD  FIXED(31) CONSTANT(1), /* Fork Child Processing flag. */ 02243900
*  FORK_CHILDX  FIXED(31) CONSTANT(3); /* Fork Child Processing         02244200
*                                         Extended Data flag.    @LGA*/ 02244500
*                                                                       02245000
*/********************************************************************/ 02295000
*/*                                                                  */ 02345000
*/*               MISP PL/X DECLARATIONS                             */ 02395000
*/*------------------------------------------------------------------*/ 02445000
*/*                                                                  */ 02495000
*/* DECLARATION NAME = MISP                                          */ 02545000
*/*                                                                  */ 02595000
*/* DESCRIPTIVE NAME =   OMVS  RACF Make ISP input parameter list.   */ 02645000
*/*                                                                  */ 02695000
*/* FUNCTION = Provides the PL/X mapping of the input parameter list */ 02745000
*/*            for the   OMVS  Make ISP service routine.             */ 02795000
*/*                                                                  */ 02845000
*/********************************************************************/ 02895000
*                                                                       02945000
* DECLARE                                                               02995000
*  1 MISP  BASED(ADDR(COMP_SERVR_PARMS)),                               03045000
*                                                                       03095000
*   3 MISP_MODE_ALET@  PTR(31), /* Address of the ALET for the mode     03145000
*                                   structure.                   @L1A*/ 03195000
*                                                                       03245000
*   3 MISP_MODE@       PTR(31), /* Address of the mode parameter.@L1A*/ 03295000
*                                                                       03345000
*   3 MISP_OISP_ALET@  PTR(31),/* Address of the ALET for the output    03395000
*                                  ISP.                          @L1A*/ 03445000
*                                                                       03495000
*   3 MISP_OISP@       PTR(31),/* Address of the output ISP.     @L1A*/ 03545000
*                                                                       03595000
*   3 MISP_OIPC_ALET@  PTR(31),/* Address of the ALET for the output    03645000
*                                  IPCP.                         @L1A*/ 03695000
*                                                                       03745000
*   3 MISP_OIPC@       PTR(31),/* Address of the output IPCP.    @L1A*/ 03795000
*                                                                       03845000
*   3 MISP_CREI_ALET@  PTR(31), /* Address of the ALET for the CREDIPC  03895000
*                                   structure.                   @L1A*/ 03945000
*                                                                       03995000
*   3 MISP_CREI@       PTR(31); /* Address of the CREDIPC structure.    04045000
*                                                                @L1A*/ 04095000
*                                                                       04145000
*                                                                       04195000
* DECLARE                                                               04245000
*  MISP_LEN FIXED(31) CONSTANT(LENGTH(MISP)); /* Constant MISP length   04295000
*                                                                @L1A*/ 04345000
*                                                                       04395000
*/********************************************************************/ 04445000
*/*                                                                  */ 04495000
*/*               IACC PL/X DECLARATIONS                             */ 04545000
*/*------------------------------------------------------------------*/ 04595000
*/*                                                                  */ 04645000
*/* DECLARATION NAME = IACC                                          */ 04695000
*/*                                                                  */ 04745000
*/* DESCRIPTIVE NAME =   OMVS  RACF Check Access input parameter     */ 04795000
*/*                    list.                                         */ 04845000
*/*                                                                  */ 04895000
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 04945000
*/*            list for the   OMVS  Check Access service routine.    */ 04995000
*/*                                                                  */ 05045000
*/********************************************************************/ 05095000
*                                                                       05145000
* DECLARE                                                               05195000
*  1 IACC  BASED(ADDR(COMP_SERVR_PARMS)),                               05245000
*                                                                       05295000
*   3 IACC_ACODE_ALET@ PTR(31),/* Address of the ALET for the access    05345000
*                                   code.                        @L1A*/ 05395000
*                                                                       05445000
*   3 IACC_ACODE@      PTR(31),/* Address of a 1 byte access code       05495000
*                                  that contains:                       05545000
*                                   x'00' - no access.                  05595000
*                                   x'02' - write access.               05645000
*                                   x'04' - read access.                05695000
*                                   x'06' - read and write access.      05745000
*                                                                @L1A*/ 05795000
*                                                                       05845000
*   3 IACC_ISP_ALET@   PTR(31),/* Address of the ALET for the ISP       05895000
*                                  structure.                    @L1A*/ 05945000
*                                                                       05995000
*   3 IACC_ISP@        PTR(31),/* Address of the ISP structure.  @L1A*/ 06045000
*                                                                       06095000
*                                                                       06145000
*   3 IACC_CREI_ALET@  PTR(31),/* Address of the ALET for the CREDIPC   06195000
*                                  structure.                    @L1A*/ 06245000
*                                                                       06295000
*   3 IACC_CREI@       PTR(31);/* Address of the CREDIPC structure.     06345000
*                                                                @L1A*/ 06395000
*                                                                       06445000
*                                                                       06495000
*                                                                       06545000
*                                                                       06595000
* DECLARE                                                               06645000
*  IACC_LEN FIXED(31) CONSTANT(LENGTH(IACC)); /* Constant IACC length   06695000
*                                                                @L1A*/ 06745000
*                                                                       06795000
*                                                                       06845000
*/********************************************************************/ 06895000
*/*                                                                  */ 06945000
*/*               IOWN PL/X DECLARATIONS                             */ 06995000
*/*------------------------------------------------------------------*/ 07045000
*/*                                                                  */ 07095000
*/* DECLARATION NAME = IOWN                                          */ 07145000
*/*                                                                  */ 07195000
*/* DESCRIPTIVE NAME =   OMVS  RACF Perform R_IPC_control Change     */ 07245000
*/*                    Owner and Group input parameter list.     @03C*/ 07295000
*/*                                                                  */ 07345000
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 07395000
*/*            list for the   OMVS  R_IPC_control Change Owner and   */ 07445000
*/*            Group service routine.                                */ 07495000
*/*                                                                  */ 07545000
*/********************************************************************/ 07595000
*                                                                       07645000
* DECLARE                                                               07695000
*  1 IOWN  BASED(ADDR(COMP_SERVR_PARMS)),                               07745000
*                                                                       07795000
*   3 IOWN_CMD_ALET@  PTR(31), /* Address of ALET for cmd code.  @L1A*/ 07845000
*                                                                       07895000
*   3 IOWN_CMD@       PTR(31), /* Address of cmd code.           @L1A*/ 07945000
*                                                                       07995000
*   3 IOWN_UID_ALET@  PTR(31), /* Address of ALET for Uid to be set.    08045000
*                                                                @L1A*/ 08095000
*                                                                       08145000
*   3 IOWN_UID@       PTR(31), /* Addr of the Uid to be set as the      08195000
*                                  ISP owner Uid.                @L1A*/ 08245000
*                                                                       08295000
*   3 IOWN_GID_ALET@  PTR(31), /* Addr of ALET for Gid to be set.@L1A*/ 08345000
*                                                                       08395000
*   3 IOWN_GID@       PTR(31), /* Addr of the Gid to be set as the      08445000
*                                  ISP owner Gid.                @L1A*/ 08495000
*                                                                       08545000
*   3 IOWN_MODE_ALET@  PTR(31), /* Address of the ALET for the mode     08595000
*                                   structure.                   @L1A*/ 08645000
*                                                                       08695000
*   3 IOWN_MODE@       PTR(31), /* Address of the mode parameter.@L1A*/ 08745000
*                                                                       08795000
*   3 IOWN_ISP_ALET@  PTR(31), /* Address of the ALET for the ISP       08845000
*                                  structure.                    @L1A*/ 08895000
*                                                                       08945000
*   3 IOWN_ISP@       PTR(31), /* Address of the ISP structure.  @L1A*/ 08995000
*                                                                       09045000
*   3 IOWN_CREI_ALET@ PTR(31), /* Address of the ALET for the CREDIPC   09095000
*                                  structure.                    @L1A*/ 09145000
*                                                                       09195000
*   3 IOWN_CREI@      PTR(31); /* Address of the CREDIPC structure.     09245000
*                                                                @L1A*/ 09295000
*                                                                       09345000
*                                                                       09395000
* DECLARE                                                               09445000
*  IOWN_LEN FIXED(31) CONSTANT(LENGTH(IOWN)); /* Constant IOWN length   09495000
*                                                                @L1A*/ 09545000
*                                                                       09595000
*/********************************************************************/ 09645000
*/*                                                                  */ 09695000
*/*               CKO2 PL/X DECLARATIONS                             */ 09745000
*/*------------------------------------------------------------------*/ 09795000
*/*                                                                  */ 09845000
*/* DECLARATION NAME = CKO2                                          */ 09895000
*/*                                                                  */ 09945000
*/* DESCRIPTIVE NAME =   OMVS  RACF Check owner two files input      */ 09995000
*/*                    parameter list.                               */ 10045000
*/*                                                                  */ 10095000
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 10145000
*/*            list for the OMVS Check Owner two files routine.      */ 10195000
*/*                                                                  */ 10245000
*/********************************************************************/ 10295000
*                                                                       10345000
* DECLARE                                                               10395000
*  1 CKO2  BASED(ADDR(COMP_SERVR_PARMS)),                               10445000
*                                                                       10495000
*   3 CKO2_FSP1_ALET@ PTR(31), /* Address of ALET for the first         10545000
*                                  FSP structure.               @L2A */ 10595000
*                                                                       10645000
*   3 CKO2_FSP1@      PTR(31), /* Addr of the first FSP structure.      10695000
*                                                               @L2A */ 10745000
*                                                                       10795000
*   3 CKO2_FSP2_ALET@ PTR(31), /* Addr of ALET for the second FSP       10845000
*                                  structure.                   @L2A */ 10895000
*                                                                       10945000
*   3 CKO2_FSP2@      PTR(31), /* Addr of the second FSP structure.     10995000
*                                                               @L2A */ 11045000
*                                                                       11095000
*   3 CKO2_FID1_ALET@ PTR(31), /* Address of the ALET for the first     11145000
*                                  file ID.                     @L2A */ 11195000
*                                                                       11245000
*   3 CKO2_FID1@      PTR(31), /* Address of the first file ID. @L2A */ 11295000
*                                                                       11345000
*   3 CKO2_FID2_ALET@ PTR(31), /* Address of the ALET for the second    11395000
*                                  file ID.                     @L2A */ 11445000
*                                                                       11495000
*   3 CKO2_FID2@      PTR(31), /* Address of the second file            11545000
*                                 ID.                          @L2A  */ 11595000
*                                                                       11645000
*   3 CKO2_CRED_ALET@ PTR(31), /* Address of the ALET for the CRED      11695000
*                                  structure.                   @L2A */ 11745000
*                                                                       11795000
*   3 CKO2_CRED@      PTR(31); /* Address of the CRED structure.     */ 11845000
*                                                                       11895000
*                                                                       11945000
* DECLARE                                                               11995000
*  CKO2_LEN FIXED(31) CONSTANT(LENGTH(CKO2)); /* Constant CKO2 length   12028300
*                                                                @L2A*/ 12061600
*                                                                       12095000
*/********************************************************************/ 12145000
*/*                                                                  */ 12195000
*/*               GETE PL/X DECLARATIONS                             */ 12245000
*/*------------------------------------------------------------------*/ 12295000
*/*                                                                  */ 12345000
*/* DECLARATION NAME = GETE                                          */ 12395000
*/*                                                                  */ 12445000
*/* DESCRIPTIVE NAME =   OMVS  RACF Get real, effective, saved       */ 12495000
*/*                    UIDs/GIDs and supplemental groups from the    */ 12545000
*/*                    USP parameter list.                           */ 12595000
*/*                                                                  */ 12645000
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 12695000
*/*            list for the OMVS Get real,eff,saved UIDs/GIDs and    */ 12745000
*/*            supplemental groups routine.                          */ 12795000
*/*                                                                  */ 12845000
*/********************************************************************/ 12895000
*                                                                       12945000
* DECLARE                                                               12995000
*  1 GETE  BASED(ADDR(COMP_SERVR_PARMS)),                               13045000
*                                                                       13095000
*   3 GETE_WORKB_ALET@  PTR(31),  /* Address of ALET for 1024 byte      13103300
*                                    work area.                  @D1A*/ 13111600
*                                                                       13119900
*   3 GETE_WORKB@     PTR(31), /* Address of 1024 byte work area @D1A*/ 13128200
*                                                                       13136500
*   3 GETE_KEY_ALET@  PTR(31), /* Address of ALET for the               13145000
*                                  user's key                    @L3A*/ 13195000
*                                                                       13245000
*   3 GETE_KEY@       PTR(31), /* Address of a byte that contains the   13295000
*                                  user's key. The key is in the high   13345000
*                                  order 4 bits of the byte.     @L3A*/ 13395000
*                                                                       13445000
*   3 GETE_GCNT_ALET@ PTR(31), /* Address of ALET for the               13495000
*                                  Group Count.                  @L3A*/ 13545000
*                                                                       13595000
*                                                                       13645000
*   3 GETE_GCNT@      PTR(31), /* Address of the group count. A one     13695000
*                                 word area that contains the number    13745000
*                                 of GIDs in the Grouplist area. @L3A*/ 13795000
*                                                                       13845000
*   3 GETE_GLST_ALET@ PTR(31), /* Address of ALET for the Group List.   13895000
*                                                                @L3A*/ 13945000
*                                                                       13995000
*   3 GETE_GLST@      PTR(31), /* Address of the Group List area in     14045000
*                                  which supplemental GIDs are          14095000
*                                  returned.                     @L3A*/ 14145000
*                                                                       14195000
*   3 GETE_GNUM_ALET@ PTR(31), /* Address of ALET for the number of     14245000
*                                  groups.                       @L3A*/ 14295000
*                                                                       14345000
*   3 GETE_GNUM@      PTR(31), /* Address of the Number Of Groups.      14395000
*                                  A one word area in which the number  14445000
*                                  of supplemental group GIDs is        14495000
*                                  returned.                     @L3A*/ 14545000
*   3 GETE_UID_ALET@  PTR(31), /* Address of ALET for the UIDs.  @L3A*/ 14595000
*                                                                       14645000
*   3 GETE_UID@       PTR(31), /* Address of a 3 word output area.      14670000
*                                  This area contains the real,         14695000
*                                  effective and saved UIDs.     @P3C*/ 14720000
*                                                                       14745000
*   3 GETE_GID_ALET@  PTR(31), /* Address of ALET for the GIDs.  @L3A*/ 14795000
*                                                                       14845000
*   3 GETE_GID@       PTR(31); /* Address of a 3 word output area.      14870000
*                                  This area contains the real,         14895000
*                                  effective and saved GIDs.     @P3C*/ 14920000
*                                                                       14945000
* DECLARE                                                               14995000
*  GETE_LEN FIXED(31) CONSTANT(LENGTH(GETE)); /* Constant GETE length   15045000
*                                                                @L3A*/ 15095000
*                                                                       15145000
*/********************************************************************/ 15195000
*/*                                                                  */ 15245000
*/*               DKEY PL/X DECLARATIONS                             */ 15295000
*/*------------------------------------------------------------------*/ 15345000
*/*                                                                  */ 15395000
*/* DECLARATION NAME = DKEY                                          */ 15445000
*/*                                                                  */ 15495000
*/* DESCRIPTIVE NAME =   OMVS DCE  Retrieve or replace DCE Key       */ 15545000
*/*                                                                  */ 15595000
*/* FUNCTION = Provides the PL/X mapping of the input paramter       */ 15645000
*/*            list for the service to retrieve or replace the       */ 15695000
*/*            DPASSWDS within a RACF user profile.                  */ 15745000
*/********************************************************************/ 15795000
*                                                                       15845000
*                                                                       15895000
* DECLARE                                                               15945000
*  1 DKEY  BASED(ADDR(COMP_SERVR_PARMS)),                               15995000
*                                                                       16045000
*   3 DKEY_FUNC_ALET@   PTR(31),  /* Address of ALET for Function code  16095000
*                                                                @01A*/ 16145000
*   3 DKEY_FUNC@        PTR(31),  /* Address of 1 byte function code    16195000
*                                                                @01A*/ 16245000
*   3 DKEY_USERID_ALET@ PTR(31),  /* Address of ALET for the RACF       16295000
*                                    userid                      @01A*/ 16345000
*   3 DKEY_USERID@      PTR(31),  /* Address of 9 byte area that        16395000
*                                    contains a 1 byte length followed  16445000
*                                    by userid of up to 8 chars  @01A*/ 16495000
*                                                                       16545000
*   3 DKEY_KEY_ALET@    PTR(31),  /* Address of ALET for the DCE key    16595000
*                                                                @01A*/ 16645000
*                                                                       16695000
*   3 DKEY_KEY@         PTR(31),  /* Address of the output key area, if 16745000
*                                    retrieving the DCE key, or new key 16795000
*                                    if setting users DCE key    @01A*/ 16845000
*                                                                       16895000
*   3 DKEY_KEYL_ALET@   PTR(31),  /* Address of ALET for the DCE key    16945000
*                                    length                      @01A*/ 16995000
*                                                                       17045000
*   3 DKEY_KEYL@        PTR(31);  /* Address of fullword containing the 17095000
*                                    DCE key area length         @01A*/ 17145000
* DECLARE                                                               17195000
*  DKEY_LEN FIXED(31) CONSTANT(LENGTH(DKEY)), /* Constant DKEY length   17245000
*                                                                @01A*/ 17295000
*  DKEY_GET BIT(8) CONSTANT('01'X),/* Get the DPASSWDS           @01A*/ 17345000
*  DKEY_PUT BIT(8) CONSTANT('02'X);/* Put the DPASSWDS           @01A*/ 17395000
*                                                                       17445000
*/********************************************************************/ 17495000
*/*                                                                  */ 17545000
*/*               DINF PL/X DECLARATIONS                             */ 17595000
*/*------------------------------------------------------------------*/ 17645000
*/*                                                                  */ 17695000
*/* DECLARATION NAME = DINF                                          */ 17745000
*/*                                                                  */ 17795000
*/* DESCRIPTIVE NAME =   OMVS DCE  Retrieve or replace DCE Info      */ 17845000
*/*                                                                  */ 17895000
*/* FUNCTION = Provides the PL/X mapping of the input paramter       */ 17945000
*/*            list for the service to retrieve or replace the       */ 17995000
*/*            DCE UUID, DCENAME, or HOMECELL within a RACF user     */ 18045000
*/*            profile.                                              */ 18095000
*/********************************************************************/ 18145000
*                                                                       18195000
* DECLARE                                                               18245000
*  1 DINF  BASED(ADDR(COMP_SERVR_PARMS)),                               18295000
*                                                                       18345000
*   3 DINF_FUNC_ALET@   PTR(31),  /* Address of ALET for Function code  18395000
*                                                                @01A*/ 18445000
*   3 DINF_FUNC@        PTR(31),  /* Address of 1 byte function code    18495000
*                                                                @01A*/ 18545000
*   3 DINF_USERID_ALET@ PTR(31),  /* Address of ALET for the RACF       18595000
*                                    userid                      @01A*/ 18645000
*   3 DINF_USERID@      PTR(31),  /* Address of 9 byte area that        18695000
*                                    contains a 1 byte length followed  18745000
*                                    by userid of up to 8 chars  @01A*/ 18795000
*   3 DINF_FIELDL_ALET@ PTR(31),  /* Address of ALET for the Field list 18845000
*                                                                @01A*/ 18895000
*   3 DINF_FIELDL@      PTR(31),  /* Address of an area containing      18945000
*                                    the input Field_list        @01A*/ 18995000
*   3 DINF_OUTPUTA_ALET@ PTR(31), /* Address of ALET for the Output     19045000
*                                    area                        @01A*/ 19095000
*   3 DINF_OUTPUTA@     PTR(31),  /* Address of area which contains the 19145000
*                                    contents of data obtained   @01A*/ 19195000
*   3 DINF_OUTPUTL_ALET@ PTR(31), /* Address of ALET for the Output     19245000
*                                    area length                 @01A*/ 19295000
*   3 DINF_OUTPUTL@     PTR(31);  /* Address of fullword containing the 19345000
*                                    Output area length          @01A*/ 19395000
* DECLARE                                                               19445000
*  DINF_LEN FIXED(31) CONSTANT(LENGTH(DINF)),  /* Constant DINF length  19495000
*                                                                @01A*/ 19545000
*  DINF_GET BIT(8) CONSTANT('01'X),/* Get the DCE info           @01A*/ 19595000
*  DINF_PUT BIT(8) CONSTANT('02'X);/* Put the DCE info           @01A*/ 19645000
*                                                                       19695000
* DECLARE                                                               19745000
*  1 DINF_FIELD_LIST BASED,       /* List of fields to set/get   @01A*/ 19795000
*   3 DINF_FIELD_LIST_LEN    FIXED(16), /* Len in bytes of field list   19845000
*                                                                @01A*/ 19895000
*   3 DINF_FIELD_LIST_CNT    FIXED(16), /* Number fields in field list  19945000
*                                                                @01A*/ 19995000
*   3 DINF_FIELD_LIST_ST     CHAR(*);   /* Fields start here     @01A*/ 20045000
*                                                                       20095000
* DECLARE                                                               20145000
*  1 DINF_FIELDS BASED,           /* Fields passed from caller   @01A*/ 20195000
*   3 DINF_FIELD_NAME   CHAR(8),  /* Name of field               @01A*/ 20245000
*   3 DINF_FIELD_LEN    FIXED(16),/* Length of field             @01A*/ 20295000
*   3 DINF_FIELD_DATA   CHAR(*);  /* Field data                  @01A*/ 20345000
*                                                                       20395000
* DECLARE                                                               20445000
*  1 DINF_OUTPUT_AREA BASED,      /* Output area from caller     @01A*/ 20495000
*   3 DINF_OUTPUT_AREA_LEN FIXED(16), /* Length in bytes of output area 20545000
*                                                                @01A*/ 20595000
*   3 DINF_OUTPUT_AREA_CNT FIXED(16), /* Number fields in output data   20645000
*                                                                @01A*/ 20695000
*   3 DINF_OUTPUT_AREA_ST  CHAR(*);   /* Output starts here      @01A*/ 20745000
*                                                                       20795000
* DECLARE                                                               20845000
*  1 DINF_OUTPUT_FLD BASED,       /* Data returned for one field @01A*/ 20895000
*   3 DINF_OUTPUT_FLD_NAME CHAR(8),   /* Name of field           @01A*/ 20945000
*   3 DINF_OUTPUT_FLD_LEN  FIXED(16), /* Length of this output piece    20995000
*                                                                @01A*/ 21045000
*   3 DINF_OUTPUT_FLD_DATA CHAR(*);   /* Data retrieved          @01A*/ 21095000
*                                                                       21145000
*/********************************************************************/ 21195000
*/*                                                                  */ 21245000
*/*                DRUR PL/X DECLARATIONS                            */ 21295000
*/*------------------------------------------------------------------*/ 21345000
*/*                                                                  */ 21395000
*/*  DECLARATION NAME = DRUR                                         */ 21445000
*/*                                                                  */ 21495000
*/*  DESCRIPTIVE NAME =   RACF userid - DCE UUID mapping parameters  */ 21545000
*/*                                                                  */ 21595000
*/*  FUNCTION = Provides the PL/X mapping of the input paramter      */ 21645000
*/*             list for the service to map a RACF userid to a DCE   */ 21695000
*/*             principal UUID/home cell UUID pair                   */ 21745000
*/********************************************************************/ 21795000
*                                                                       21845000
* DECLARE                                                               21895000
*  1 DRUR  BASED(ADDR(COMP_SERVR_PARMS)),                               21945000
*                                                                       21995000
*   3 DRUR_FUNC_ALET@   PTR(31),  /* Address of ALET for Function code  22045000
*                                                                @02A*/ 22095000
*   3 DRUR_FUNC@        PTR(31),  /* Address of 1 byte function code    22145000
*                                                                @02A*/ 22195000
*   3 DRUR_PRIN_UUID_ALET@ PTR(31), /* Address of ALET for the DCE      22245000
*                                      principal UUID            @02A*/ 22295000
*   3 DRUR_PRIN_UUID@    PTR(31), /* Address of a 36 byte input/output  22345000
*                                    area for the principal UUID @02A*/ 22395000
*         ! The following two fields address the home cell UUID         22445000
*         ! which is optional.  Indicate no home cell UUID passed       22495000
*         ! by having the pointer and alet address a null byte.    @02A 22545000
*   3 DRUR_HOME_UUID_ALET@ PTR(31), /* Address of ALET for the DCE      22595000
*                                      home cell UUID            @02A*/ 22645000
*   3 DRUR_HOME_UUID@   PTR(31),  /* Address of a 36 byte input/output  22695000
*                                    area for the home cell UUID @02A*/ 22745000
*   3 DRUR_USERID_ALET@ PTR(31),  /* Address of ALET for the RACF       22795000
*                                    userid                      @02A*/ 22845000
*   3 DRUR_USERID@      PTR(31);  /* Address of a 9 byte input/output   22895000
*                                    area for the RACF userid (1 byte   22945000
*                                    for the length followed by up to   22995000
*                                    8 bytes for the RACF userid        23045000
*                                    itself)                     @02A*/ 23095000
* DECLARE                                                               23145000
*  DRUR_LEN FIXED(31) CONSTANT(LENGTH(DRUR)), /* Constant DRUR length   23195000
*                                                                @02A*/ 23245000
*  DRUR_GET_RACF_USERID BIT(8) CONSTANT('01'X),! UUID->RACF userid @02A 23295000
*  DRUR_GET_DCE_UUID BIT(8)    CONSTANT('02'X);! RACF userid->UUID @02A 23345000
*                                                                       23395000
*/********************************************************************/ 23445000
*/*                                                                  */ 23495000
*/*              DAUT PL/X DECLARATIONS                              */ 23545000
*/*------------------------------------------------------------------*/ 23595000
*/*                                                                  */ 23645000
*/*  DECLARATION NAME = DAUT                                         */ 23695000
*/*                                                                  */ 23745000
*/*  DESCRIPTIVE NAME =   RACF Authorization of a DCE Client         */ 23795000
*/*                                                                  */ 23845000
*/*  FUNCTION = Provides the PL/X mapping of the input paramter      */ 23895000
*/*           list for the service which allows MVS servers to       */ 23945000
*/*           verify the authority of a DCE Client (who is also      */ 23995000
*/*           a RACF user) to resources on the MVS system that are   */ 24045000
*/*           protected by RACF.                                     */ 24095000
*/*                                                                  */ 24145000
*/********************************************************************/ 24195000
* DECLARE                                                               24245000
*  1 DAUT  BASED(ADDR(COMP_SERVR_PARMS)),                               24295000
*                                                                       24345000
*   3 DAUT_ACEEP@       PTR(31),  /*  Address of a full word containing 24395000
*                                     the address of a previously       24445000
*                                     created ACEE (or 0)        @03A*/ 24495000
*                                                                       24545000
*   3 DAUT_ALET@        PTR(31),  /* Address of ALET for following      24595000
*                                    variables                   @03A*/ 24645000
*                                                                       24695000
*   3 DAUT_PRIN_UUID@   PTR(31),  /* Address of 36 byte area for the    24745000
*                                    DCE principle UUID          @03A*/ 24795000
*                                                                       24845000
*   3 DAUT_HOME_UUID@   PTR(31),  /* Address of 36 byte area for the    24895000
*                                    DCE home cell UUID.         @03A*/ 24945000
*                                                                       24995000
*   3 DAUT_USERID@      PTR(31),  /* Address of 9 byte area for the     25045000
*                                    RACF userid (1 byte for the        25095000
*                                    length followed by up to 8 bytes   25145000
*                                    for the RACF userid itself) @03A*/ 25195000
*                                                                       25245000
*   3 DAUT_CLASS_NAME@  PTR(31),  /* Address of an 8 byte area for      25295000
*                                    the RACF class name of a resource. 25345000
*                                    The class name must be left        25395000
*                                    justified and padded to the right  25445000
*                                    with blanks.                @03A*/ 25495000
*                                                                       25545000
*   3 DAUT_ENT_NAME@    PTR(31),  /* Address of an area for the RACF    25595000
*                                    resource profile name.      @03A*/ 25645000
*                                                                       25695000
*   3 DAUT_ENT_LEN@     PTR(31),  /* Address of a 2 byte area which     25745000
*                                    contains the length of the         25795000
*                                    resource profile name.      @03A*/ 25845000
*                                                                       25895000
*   3 DAUT_ACC_REQ@     PTR(31);  /* Address of a 1 byte area           25945000
*                                    containing the requested access    25995000
*                                    to the resource.            @03A*/ 26045000
*                                                                       26095000
* DECLARE                                                               26145000
*  DAUT_LEN FIXED(31) CONSTANT(LENGTH(DAUT)), /* Constant DAUT length   26195000
*                                                                @03A*/ 26245000
*  DAUT_READ       BIT(8) CONSTANT('02'X), /* READ    access req @03A*/ 26295000
*  DAUT_UPDATE     BIT(8) CONSTANT('04'X), /* UPDATE  access req @03A*/ 26345000
*  DAUT_CONTROL    BIT(8) CONSTANT('08'X), /* CONTORL access req @03A*/ 26395000
*  DAUT_ALTER      BIT(8) CONSTANT('80'X); /* ALTER   access req @03A*/ 26445000
*                                                                       26495000
*/********************************************************************/ 26545000
*/*                                                                  */ 26595000
*/*              INTA PL/X DECLARATIONS                              */ 26645000
*/*------------------------------------------------------------------*/ 26695000
*/*                                                                  */ 26745000
*/*  DECLARATION NAME = INTA                                         */ 26795000
*/*                                                                  */ 26845000
*/*  DESCRIPTIVE NAME =   RACF Initialize ACEE                       */ 26895000
*/*                                                                  */ 26945000
*/*  FUNCTION = Provides the PL/X mapping of the input paramter      */ 26995000
*/*      list for the service which will create/delete/manage ACEEs. */ 27045000
*/*                                                                  */ 27095000
*/*                                                              @L4A*/ 27145000
*/********************************************************************/ 27195000
* DECLARE                                                               27245000
*  1 INTA  BASED(ADDR(COMP_SERVR_PARMS)),                               27295000
*                                                                       27345000
*   3 INTA_FUNC@        PTR(31),  /* Address of 1 byte function code    27395000
*                                                                @L4A*/ 27445000
*   3 INTA_ATTRIBUTES@  PTR(31),  /* Address of a full word area        27495000
*                                    which contains the attribute flags 27545000
*                                    for the service             @L4A*/ 27595000
*   3 INTA_USERID@      PTR(31),  /* Address of 9 byte area for the     27645000
*                                    RACF userid (1 byte for the        27695000
*                                    length followed by up to 8 bytes   27745000
*                                    for the RACF userid itself) @L4A*/ 27795000
*                                                                       27845000
*   3 INTA_ACEEP@       PTR(31),  /* Address of a full word input/      27895000
*                                    output area for the ACEE address.  27945000
*                                                                @L4A*/ 27995000
*                                                                       28045000
*   3 INTA_APPL_ID@     PTR(31),  /* Address of an 9 byte area which    28095000
*                                    specifies the name of the          28145000
*                                    application being accessed by the  28195000
*                                    user. (1 byte for the length       28245000
*                                    followed by up to 8 bytes for the  28295000
*                                    application name itself) @L4A*/    28345000
*                                                                       28395000
*                                                                       28445000
*                                                                       28495000
*   3 INTA_PASSWORD@    PTR(31),  /* Address of an 9 byte area          28545000
*                                    containing the user's password or  28595000
*                                    pass ticket. (1 byte for the       28645000
*                                    length followed by up to 8 bytes   28695000
*                                    for the password itself) @L4A*/    28745000
*                                                                       28795000
*   3 INTA_LOGSTRING@   PTR(31),  /* Address of a variable length area  28845000
*                                    containing the log string to be    28895000
*                                    passed to RACROUTE (1 byte for the 28945000
*                                    length followed by up to 255 bytes 28995000
*                                    for the log string itself) @L4A*/  29045000
*                                                                       29095000
*     5 INTA_LAST_PARM_VER1 BIT(1), /* Variable length parameter list.  29099100
*                                    This was the last parameter for    29103200
*                                    plist version 1             @06A*/ 29107300
*                                                                       29111400
*   3 INTA_CERTIFICATE@ PTR(31),  /* Address of a variable length area  29115500
*                                    containing the X.509 certificate   29119600
*                                    identifying the user (fullword     29123700
*                                    length followed by the certificate 29127800
*                                    itself. Length of zero indicates   29131900
*                                    certificate not present)   @06A*/  29136000
*                                                                       29140100
*     5 INTA_LAST_PARM_VER2 BIT(1), /* Variable length parameter list.  29143200
*                                    This was the last parameter for    29146300
*                                    plist version 2             @L5C*/ 29149400
*                                                                       29152500
*   3 INTA_ENVR_IN@  PTR(31),     /* Address of an area containing      29155600
*                                    the data structure to recreate the 29158700
*                                    security environment.       @L5A*/ 29161800
*                                                                       29164900
*     5 INTA_LAST_PARM_ENVR_IN BIT(1), /* Variable length parameter list29168000
*                                    This is a valid last parameter for 29171100
*                                    the plist version 3.        @L5A*/ 29174200
*                                                                       29177300
*   3 INTA_ENVR_OUT@ PTR(31),     /* Address of an area containing      29180400
*                                    the data structure to retrieve the 29183500
*                                    security environment.       @L5A*/ 29186600
*                                                                       29189700
*     5 INTA_LAST_PARM_ENVR_OUT BIT(1), /* Variable length parameter    29192800
*                                    list.  This is a valid last        29195900
*                                    parameter for plist                29199000
*                                    version 3.                  @L6A*/ 29202100
*                                                                       29205200
*   3 INTA_OUTA_STOR@ PTR(31),    /* Address of an area containing an   29208300
*                                    OUSP                        @L6A*/ 29211400
*                                                                       29214500
*     5 INTA_LAST_PARM_OUTA_STOR BIT(1), /* Variable length parameter   29217600
*                                    list. This is a valid last         29220700
*                                    parameter for the plist            29223800
*                                    version 3.                  @L6A*/ 29226900
*                                                                       29230000
*   3 INTA_X500_NAME_PTR PTR(31), /* A word in which to store the       29230100
*                                    Address of the x500 name pair      29230200
*                                    structure.  The structure is a     29230300
*                                    4-byte structure length, followed  29230400
*                                    by 2 2-byte lengths, followed by   29230500
*                                    up to 255 bytes of issuers name    29230600
*                                    and to up 255 bytes of subjects    29230700
*                                    name.                       @LDA*/ 29230800
*                                                                       29230900
*     5 INTA_LAST_X500_NAME BIT(1), /* Variable length parameter        29231000
*                                    list. This could be the last       29231100
*                                    parameter for the plist            29231200
*                                    version 4.                  @LDA*/ 29231300
*                                                                       29231400
*   3 INTA_VARIABLE_LIST@ PTR(31), /* Address of an area containing a   29231500
*                                    criteria value data structure.     29231600
*                                    The structure is a 4-byte number   29231700
*                                    of entries, followed by 1 or more  29231800
*                                    entries. Each entry is an 8-byte   29231900
*                                    name, followed by a 4-byte value   29232000
*                                    length, followed by the value.     29232100
*                                                                @LDA*/ 29232200
*                                                                       29232300
*     5 INTA_LAST_PARM_VAR_LIST BIT(1), /* Variable length parameter    29232400
*                                    list. This could be the last       29232500
*                                    parameter for the plist            29232600
*                                    version 4.                  @LDA*/ 29232700
*                                                                       29232800
*       7 INTA_LAST_PARM BIT(1);  /* Variable length parameter          29233100
*                                    list.  This is the last            29236200
*                                    parameter                   @L6A*/ 29239300
*                                                                       29245000
* DECLARE                                                               29295000
*  INTA_LEN FIXED(31) CONSTANT(LENGTH(INTA)), /* Constant INTA length   29345000
*                                                                @L4A*/ 29395000
*      ! Function code values    @L4A                                   29445000
*  INTA_CREATE FIXED(8) CONSTANT(1),   /* Create an ACEE         @P6C*/ 29495000
*  INTA_DELETE FIXED(8) CONSTANT(2),   /* Delete the ACEE and USP if    29545000
*                                         applicable             @P6C*/ 29595000
*  INTA_PURGE FIXED(8) CONSTANT(3),    /* Purge space related ACEE      29611600
*                                         management resources   @09C*/ 29628200
*  INTA_REGSTR FIXED(8) CONSTANT(4),   /* Register certificate for      29644800
*                                         the current userid     @09A*/ 29661400
*  INTA_DEREGS FIXED(8) CONSTANT(5),   /* Deregister certificate for    29678000
*                                         the current userid     @09A*/ 29694600
*  INTA_QUERY  FIXED(8) CONSTANT(6);   /* Query a certificate for an    29711200
*                                         associated user ID     @09A*/ 29727800
*      ! Attribute flags                                                29745000
* DECLARE                                                               29795000
*   1 INTA_ATTRIBUTES_MAP BIT(32) BASED,                                29845000
*     3 INTA_MANAGED BIT(1),           /* ACEE should be managed        29895000
*                                         (CREATE only)   @L4A*/        29945000
*     3 INTA_USP     BIT(1),           /* Initialize a USP for the ACEE 29995000
*                                         (CREATE only)   @L4A*/        30045000
*     3 INTA_TASK_LVL BIT(1),          /* For CREATE,ON indicates chain 30095000
*                                         ACEE to the TCB.OFF indicates 30145000
*                                         return ACEE address via the   30195000
*                                         Acee_Ptr field.  For DELETE,  30245000
*                                         ON indicates get ACEE address 30295000
*                                         from the TCB. OFF indicates   30345000
*                                         ACEE address passed through   30395000
*                                         Acee_Ptr        @L4A*/        30445000
*     3 INTA_CLIENT   BIT(2),          /* ACEE client flags             30495000
*                                         (CREATE only)   @L4A*/        30545000
*       5 INTA_UNAUTH_CLNT BIT(1),     /* Unauthenticated Client @L4A*/ 30595000
*       5 INTA_AUTH_CLNT BIT(1),       /* Authenticated Client @L4A*/   30645000
*                                                                       30695000
*     3 INTA_MSG_SUPP BIT(1),          /* ON to suppress RACF messages  30745000
*                                         produced as a result of cre-  30795000
*                                         ating an ACEE           @L4A*/30806100
*                                                                       30817200
*     3 INTA_ENVR_RET BIT(1),          /* ON - return an ENVR object for30828300
*                                         the ACEE (CREATE only)  @L5A*/30839400
*     3 INTA_NO_TIMEOUT BIT(1),        /* ON to create a no timeout     30850500
*                                      managed ACEE (CREATE only)@L6A*/ 30861600
*     3 INTA_OUSP_RET   BIT(1),        /* ON to return an OUSP          30868200
*                                      (CREATE only)             @LDC*/ 30874800
*     3 INTA_X500_RET   BIT(1);        /* ON to return a X500           30881400
*                                      pair (QUERY only)         @LDA*/ 30888000
*                                                                       30895000
*/********************************************************************/ 30945000
*/*                                                                  */ 30995000
*/*              ADMN PL/X DECLARATIONS                              */ 31045000
*/*------------------------------------------------------------------*/ 31095000
*/*                                                                  */ 31145000
*/*  DECLARATION NAME = ADMN                                         */ 31195000
*/*                                                                  */ 31245000
*/*  DESCRIPTIVE NAME =   RACF Administration interface              */ 31295000
*/*                                                                  */ 31345000
*/*  FUNCTION = Provides the PL/X mapping of the input parameter     */ 31395000
*/*      list for the service which will create/delete/alter users   */ 31445000
*/*      and execute RACF commands.                                  */ 31495000
*/*                                                              @04A*/ 31545000
*/********************************************************************/ 31595000
* DECLARE                                                               31645000
*  1 ADMN  BASED(ADDR(COMP_SERVR_PARMS)),                               31695000
*                                                                       31745000
*   3 ADMN_FUNC@        PTR(31),  /* Address of 1 byte function code    31795000
*                                                                @04A*/ 31845000
*   3 ADMN_PARMLIST@    PTR(31),  /* Address of the function-specific   31895000
*                                    parameter list structure    @04A*/ 31945000
*   3 ADMN_USERID@      PTR(31),  /* Address of 9 byte area for the     31995000
*                                    RACF userid under whose authority  32045000
*                                    this service will execute (1 byte  32095000
*                                    for the length followed by up to 8 32145000
*                                    bytes for the userid itself)@04A*/ 32195000
*   3 ADMN_ACEEP@       PTR(31),  /* Address of a full word containing  32245000
*                                    the ACEE address under the auth-   32295000
*                                    ority of which this service        32345000
*                                    will execute                @04A*/ 32395000
*   3 ADMN_OUTPUT_SP@   PTR(31),  /* Address of a caller-supplied one   32445000
*                                    byte area containing the subpool   32495000
*                                    in which output messages should    32545000
*                                    be obtained                 @04A*/ 32595000
*   3 ADMN_OUTPUT_MSG@  PTR(31),  /* Address of a fullword containing   32645000
*                                    a pointer to the RACF command      32695000
*                                    ouput, which is mapped below.      32745000
*                                    The caller is responsible for      32795000
*                                    freeing this storage.       @04A*/ 32845000
*     5 ADMN_LAST_PARM BIT(1);    /* Variable length parameter list.    32895000
*                                    This is the last parameter  @04A*/ 32945000
*                                                                       32995000
* DECLARE                                                               33045000
*  ADMN_LEN FIXED(31) CONSTANT(LENGTH(ADMN)), /* Constant ADMN length   33095000
*                                                                @04A*/ 33145000
*/*                 Function code values                         @04A*/ 33195000
*  ADMN_ADD_USER  FIXED(8) CONSTANT(1), /* Add a user            @04A*/ 33245000
*  ADMN_DEL_USER  FIXED(8) CONSTANT(2), /* Delete a user         @04A*/ 33295000
*  ADMN_ALT_USER  FIXED(8) CONSTANT(3), /* Alter a user          @04A*/ 33345000
*  ADMN_LST_USER  FIXED(8) CONSTANT(4), /* List a user           @04A*/ 33395000
*  ADMN_RUN_COMD  FIXED(8) CONSTANT(5), /* Run a RACF command    @04A*/ 33400800
*  ADMN_ADD_GROUP FIXED(8) CONSTANT(6), /* Add a group           @07A*/ 33406600
*  ADMN_DEL_GROUP FIXED(8) CONSTANT(7), /* Delete a group        @07A*/ 33412400
*  ADMN_ALT_GROUP FIXED(8) CONSTANT(8), /* Alter a group         @07A*/ 33418200
*  ADMN_LST_GROUP FIXED(8) CONSTANT(9), /* List a group          @07A*/ 33424000
*  ADMN_CONNECT   FIXED(8) CONSTANT(10),/* Connect user to group @07A*/ 33429800
*  ADMN_REMOVE    FIXED(8) CONSTANT(11),/* Remove user from group @08C*/33435600
*  ADMN_ADD_GENRES FIXED(8) CONSTANT(12),/* Add a resource       @08A*/ 33441400
*  ADMN_DEL_GENRES FIXED(8) CONSTANT(13),/* Delete a resource    @08A*/ 33447200
*  ADMN_ALT_GENRES FIXED(8) CONSTANT(14),/* Alter a resource     @08A*/ 33453000
*  ADMN_LST_GENRES FIXED(8) CONSTANT(15),/* List a resource      @08A*/ 33458800
*  ADMN_ADD_DS    FIXED(8) CONSTANT(16),/* Add a dataset         @08A*/ 33464600
*  ADMN_DEL_DS    FIXED(8) CONSTANT(17),/* Delete a dataset      @08A*/ 33470400
*  ADMN_ALT_DS    FIXED(8) CONSTANT(18),/* Alter a dataset       @08A*/ 33476200
*  ADMN_LST_DS    FIXED(8) CONSTANT(19),/* List a dataset        @08A*/ 33482000
*  ADMN_PERMIT    FIXED(8) CONSTANT(20),/* Permit a user or group @LBC*/33484100
*  ADMN_ALT_SETR  FIXED(8) CONSTANT(21),/* Alter SETROPTS info   @LBA*/ 33486200
*  ADMN_XTR_SETR  FIXED(8) CONSTANT(22),/* SETROPTS R_admin ext  @LBA*/ 33488300
*  ADMN_UNL_SETR  FIXED(8) CONSTANT(23);/* SETROPTS SMF Unload ext      33490400
*                                                                @LBA*/ 33492500
*                                                                       33495000
*/*------------------------------------------------------------------*/ 33545000
*/*                                                                  */ 33595000
*/*  Following is the mapping of the input buffer for each of        */ 33645000
*/*  the function codes defined.                                     */ 33695000
*/*                                                              @04A*/ 33745000
*/********************************************************************/ 33795000
* DECLARE                            /* Function code 5              */ 33845000
*  1 ADMN_RUNCOMD_MAP BASED,         /* Mapping for running a command   33895000
*                                                                @04A*/ 33945000
*    3 ADMN_RUNCOMD_LEN FIXED(16),   /* Length of command string @04A*/ 33995000
*    3 ADMN_RUNCOMD_CMD CHAR(*);     /* Command string           @04A*/ 34045000
* DECLARE                            /* Function codes 1-4,10-11. Map*/ 34095000
*  1 ADMN_USRADM_MAP BASED,          /* for Add/Alter/Delete/List user  34145000
*                                       and for Connect/Remove   @07C*/ 34195000
*    3 ADMN_USRADM_USER,             /* User: For Delete user, this is  34245000
*                                       the only required field  @04A*/ 34295000
*      5 ADMN_USRADM_USER_LEN FIXED(8), /* Length of User ID     @04A*/ 34345000
*      5 ADMN_USRADM_USER_ID CHAR(8),   /* User ID               @04A*/ 34395000
*    3 * CHAR(1),                    /* reserved (for alignment) @05C*/ 34445000
*    3 ADMN_USRADM_ERROFF FIXED(16), /* Offset to segment/field in      34495000
*                                       error                    @05A*/ 34545000
*    3 ADMN_USRADM_SEG_NUM FIXED(16),/* Number of segments to update    34595000
*                                       or list                  @04A*/ 34645000
*    3 ADMN_USRADM_SEGSTRT CHAR(1);  /* First segment entry      @04A*/ 34695000
*/********************************************************************/ 34745000
*/* The segment data for all function codes requiring it is      @07C*/ 34764000
*/* mapped below.  Despite the .."USRADM".. naming of the        @07C*/ 34783000
*/* segment fields, they should be used for all function codes   @07C*/ 34802000
*/* requiring segment data to be specified.  The base RACF       @07C*/ 34821000
*/* segment is specified as "BASE    ".                          @07C*/ 34840000
*/*                                                                  */ 34859000
*/* Following are listed any special requirements for the        @07A*/ 34878000
*/* various function codes of IRRSEQ00:                          @07A*/ 34897000
*/*                                                                  */ 34916000
*/* - ADMN_LST_USER  - The field data will be ignored if         @07C*/ 34935000
*/*   ADMN_LST_GROUP   specified.  Set ADMN_USRADM_FLD_NUM to    @07C*/ 34954000
*/*                    0 to save space in the plist.  At a       @07C*/ 34973000
*/*                    minimum, the BASE segment must be         @07C*/ 34992000
*/*                    requested.  Specifying 0 segments on a    @07C*/ 35011000
*/*                    List request will result in a parameter       */ 35030000
*/*                    list error.                                   */ 35049000
*/* - ADMN_CONNECT   - Use the BASE segment in which to specify  @07A*/ 35068000
*/*   ADMN_REMOVE      your field data.  At a minimum, the       @07A*/ 35087000
*/*                    GROUP field must be provided.             @07A*/ 35106000
*/* - ADMN_ADD_GENRES- At a minimum, the PROFILE field must be   @LBA*/ 35107700
*/*   ADMN_DEL_GENRES  provided.                                 @LBA*/ 35109400
*/*   ADMN_ALT_GENRES                                            @LBA*/ 35111100
*/*   ADMN_LST_GENRES                                            @LBA*/ 35112800
*/*   ADMN_ADD_DS                                                @LBA*/ 35114500
*/*   ADMN_DEL_DS                                                @LBA*/ 35116200
*/*   ADMN_ALT_DS                                                @LBA*/ 35117900
*/*   ADMN_PERMIT                                                @LBA*/ 35119600
*/* - ADMN_ALT_SETR  - Use the BASE segment in which to specify  @LBA*/ 35121300
*/*                    your field data.                          @LBA*/ 35123000
*/*                                                                  */ 35125000
*/********************************************************************/ 35145000
* DECLARE                            /* Segment data             @07C*/ 35195000
*  1 ADMN_USRADM_SEGENTRY  BASED,    /* Mapping for Segment entry@04A*/ 35245000
*    3 ADMN_USRADM_SEG_NAME CHAR(8), /* Profile segment name     @04A*/ 35295000
*    3 ADMN_USRADM_SEG_FLAG CHAR(1), /* Flag byte for segment    @05A*/ 35345000
*    3 ADMN_USRADM_FLD_NUM FIXED(16) BDY(BYTE), /* Number of fields     35395000
*                                       within segment.  Set to 0 for   35445000
*                                       the List function        @04A*/ 35495000
*    3 ADMN_USRADM_FLDSTRT CHAR(1);  /* First field entry for segment   35545000
*                                                                @04A*/ 35595000
* DECLARE                                                               35645000
*  1 ADMN_USRADM_FLDENTRY   BASED,   /* Mapping for Field entry  @04A*/ 35695000
*    3 ADMN_USRADM_FLD_NAME CHAR(8), /* Segment field name       @04A*/ 35745000
*    3 ADMN_USRADM_FLD_FLAG CHAR(1), /* Flag byte for field      @05A*/ 35795000
*    3 ADMN_USRADM_FLD_LEN  FIXED(16) BDY(BYTE), /* Fld data len @04A*/ 35845000
*    3 ADMN_USRADM_FLD_DATA CHAR(*); /* Field data               @04A*/ 35895000
*                                                                       35896600
* DECLARE                            /* Function codes 6-9: Mapping  */ 35898200
*  1 ADMN_GRPADM_MAP BASED,          /* for Add/Alter/Delete/List group 35899800
*                                                                @07A*/ 35901400
*    3 ADMN_GRPADM_GROUP,            /* User: For Delete, this is       35903000
*                                       the only required field  @07A*/ 35904600
*      5 ADMN_GRPADM_GRP_LEN FIXED(8),  /* Length of Group ID    @07A*/ 35906200
*      5 ADMN_GRPADM_GRP_ID CHAR(8),    /* Group ID              @07A*/ 35907800
*    3 * CHAR(1),                    /* reserved (for alignment) @07A*/ 35909400
*    3 ADMN_GRPADM_ERROFF FIXED(16), /* Offset to segment/field in      35911000
*                                       error                    @07A*/ 35912600
*    3 ADMN_GRPADM_SEG_NUM FIXED(16),/* Number of segments to update    35914200
*                                                                @07A*/ 35915800
*    3 ADMN_GRPADM_SEGSTRT CHAR(1);  /* First segment entry      @07A*/ 35917400
*                                                                       35919000
* DECLARE                            /* Function codes 12-20:        */ 35920600
*  1 ADMN_RESADM_MAP BASED,          /* Mapping for add/alt/del/list    35922200
*                                       resource, add/alt/del/list      35923800
*                                       dataset, and permit      @08A*/ 35925400
*    3 ADMN_RESADM_CLASS,            /* Class: not required for         35927000
*                                       dataset functions        @08A*/ 35928600
*      5 ADMN_RESADM_CLAS_LEN FIXED(8), /* Length of Class Name  @08A*/ 35930200
*      5 ADMN_RESADM_CLAS_NAM CHAR(8),  /* Class Name            @08A*/ 35931800
*    3 * CHAR(1),                    /* reserved (for alignment) @08A*/ 35933400
*    3 ADMN_RESADM_ERROFF FIXED(16), /* Offset to segment/field in      35935000
*                                       error                    @08A*/ 35936600
*    3 ADMN_RESADM_SEG_NUM FIXED(16),/* Number of segments to update    35938200
*                                                                @08A*/ 35939800
*    3 ADMN_RESADM_SEGSTRT CHAR(1);  /* First segment entry      @08A*/ 35941400
*                                                                       35945000
* DECLARE                            /* Function code 21         @LBA*/ 35950000
*  1 ADMN_SETRADM_MAP BASED,         /* Mapping for alter SETROPTS      35955000
*                                       information              @LBA*/ 35960000
*    3 * CHAR(10),                   /* Reserved                 @LBA*/ 35965000
*    3 ADMN_SETRADM_ERROFF FIXED(16), /* Offset to segment/field in     35970000
*                                       error                    @LBA*/ 35975000
*    3 ADMN_SETRADM_SEG_NUM FIXED(16),/* Number of segments to update   35980000
*                                                                @LBA*/ 35985000
*    3 ADMN_SETRADM_SEGSTRT CHAR(0); /* First segment entry      @LBA*/ 35990000
*                                                                       35995000
*/*------------------------------------------------------------------*/ 36045000
*/*                                                                  */ 36095000
*/*  Following is the mapping of the output message buffer.          */ 36145000
*/*                                                              @04A*/ 36195000
*/********************************************************************/ 36245000
* DECLARE                                                               36295000
*  1 ADMN_OUTMSG_MAP BASED BDY(WORD), /* R_admin output mapping  @04A*/ 36345000
*    3 ADMN_OUT_NEXT PTR(31),         /* Addr of next block or 0 @04A*/ 36395000
*    3 ADMN_OUT_EYE CHAR(4),          /* Eye catcher: "RMSG"     @04A*/ 36445000
*    3 ADMN_OUT_SPID FIXED(8),        /* Subpool ID of this block@04A*/ 36495000
*    3 ADMN_OUT_LEN FIXED(24),        /* Total block length      @04A*/ 36545000
*    3 ADMN_OUT_OFF OFFSET,           /* Offset to first byte after the 36595000
*                                     last message. Offset value is     36645000
*                                     relative to ADMN_OUTMSG_MAP@04A*/ 36695000
*    3 ADMN_OUT_STRT CHAR(1);         /* First message in block  @04A*/ 36745000
* DECLARE                                                               36795000
*  1 ADMN_OUT_ENTRY BASED,            /* Individual message entry@04A*/ 36845000
*    3 ADMN_OUT_MLEN FIXED(15),       /* Length of this message  @04A*/ 36895000
*    3 ADMN_OUT_MSTR CHAR(*);         /* Variable message string @04A*/ 36945000
*                                                                       36995000
* DECLARE ADMN_OUT_RMSG CHAR(4) CONSTANT('RMSG'); /* eyecatcher in      37045000
*                                                   ADMN_OUT_EYE @04A*/ 37095000
*                                                                       37096200
*/*------------------------------------------------------------------*/ 37097400
*/*                                                                  */ 37098600
*/*  Following is the mapping of the SETROPTS output buffer.         */ 37099800
*/*  Note that ADMN_UNL_ENTRY is only used to map the output of      */ 37101000
*/*  an ADMN_UNL_SETR request.  For an ADMN_XTR_SETR request, the    */ 37102200
*/*  output buffer is formatted like the input buffer.               */ 37103400
*/*                                                              @LBA*/ 37104600
*/********************************************************************/ 37105800
* DECLARE                                                               37107000
*  1 ADMN_XTRUNL_MAP BASED BDY(WORD), /* R_admin SETROPTS output @LBA*/ 37108200
*    3 ADMN_XTRUNL_EYE CHAR(4),       /* Eye catcher: "RXTR"            37109400
*                                     or "RUNL"                  @LBA*/ 37110600
*    3 ADMN_XTRUNL_OUTLEN FIXED(32),  /* Total length of output buffer  37111800
*                                                                @LBA*/ 37113000
*    3 * CHAR(4),                     /* Reserved                @LBA*/ 37114200
*    3 ADMN_XTRUNL_NUM FIXED(16),     /* Number of segment entries for  37115400
*                                     ADMN_XTR_SETR or number of record 37116600
*                                     types for ADMN_UNL_SETR    @LBA*/ 37117800
*    3 ADMN_XTRUNL_ENTRY CHAR(0);     /* First segment or record entry  37119000
*                                                                @LBA*/ 37120200
* DECLARE                                                               37121400
*  1 ADMN_UNL_ENTRY BASED,            /* Data mapping for               37122600
*                                        ADMN_UNL_SETR           @LBA*/ 37123800
*    3 ADMN_UNL_TYPE CHAR(8),         /* SMF Data Unload record type    37125000
*                                                                @LBA*/ 37126200
*    3 ADMN_UNL_LEN FIXED(32),        /* Length of a record of this     37127400
*                                        type                    @LBA*/ 37128600
*    3 ADMN_UNL_NUM FIXED(32),        /* Number of records of this      37129800
*                                        type                    @LBA*/ 37131000
*    3 * CHAR(8),                     /* Reserved                @LBA*/ 37132200
*    3 ADMN_UNL_RECSTRT CHAR(0);      /* Start of first record of this  37133400
*                                        type                    @LBA*/ 37134600
*                                                                       37135800
* DECLARE ADMN_XTRUNL_RXTR CHAR(4) CONSTANT('RXTR');/* eyecatcher in    37137000
*                                               ADMN_XTRUNL_EYE  @LBA*/ 37138200
* DECLARE ADMN_XTRUNL_RUNL CHAR(4) CONSTANT('RUNL');/* eyecatcher in    37139400
*                                               ADMN_XTRUNL_EYE  @LBA*/ 37140600
*                                                                       37141800
*/****************************************************************@L7A* 37145000
*                                                                     * 37195000
*                UMAP PLX DECLARATIONS                                * 37245000
*---------------------------------------------------------------------* 37295000
*                                                                     * 37345000
*  DECLARATION NAME = UMAP                                            * 37395000
*                                                                     * 37445000
*  DESCRIPTIVE NAME =   RACF userid - R_UserMap                       * 37495000
*                                                                     * 37545000
*  FUNCTION = Provides the ASSEMBLER mapping of the input paramter    * 37595000
*             list for the service to map an application userid to    * 37645000
*             a RACF userid                                           * 37695000
*                                                                     * 37745000
****************************************************************@L7A */ 37795000
* declare                                                        !@L7A  37845000
*  1 UMAP based(addr(COMP_SERVR_PARMS)),                         !@L7A  37895000
*   3 UMAP_PARM_ALET@ ptr(31), ! Address of ALET for remaining    @L7A  37945000
*                            ! parameters                         @L7A  37995000
*   3 UMAP_FUNC@ ptr(31),    ! Address of 2-byte function code    @L7A  38045000
*   3 UMAP_OPTION_WORD@ ptr(31), ! Reserved for future use        @L7A  38095000
*   3 UMAP_USERID@ ptr(31),  ! Address of a 9-byte input/output   @L7A  38145000
*                            ! for the RACF userid.  The first    @L7A  38195000
*                            ! byte is the length followed by     @L7A  38245000
*                            ! 8 bytes for the RACF userid        @L7A  38295000
*   3 UMAP_CERTIFICATE@ ptr(31), ! Address of input area          @L7A  38345000
*                            ! for a digital certificate.  First  @L7A  38395000
*                            ! four bytes are a length followed   @L7A  38445000
*                            ! by the digital certificate.        @L7A  38495000
*   3 UMAP_APPL_USERID@ ptr(31),! Address of an input/output      @L7A  38545000
*                            ! area for an Application ID.  First @L7A  38595000
*                            ! two bytes contain the length       @L7A  38645000
*                            ! followed by 246 bytes for the      @L7A  38695000
*                            ! Application ID.                    @L7A  38745000
*                            ! If not specified on input, length  @L7A  38795000
*                            ! must be zero.                      @L7A  38845000
*    5 UMAP_LAST_PARM bit(1); ! Variable length parameter list    @L7A  38895000
*                                                                       38945000
* declare UMAP_LEN constant(length(UMAP)); ! fixed length of UMAP @L7A  38995000
*                                                                       39045000
*declare                                                                39095000
* 1 UMAP_CERTIFICATE based(UMAP_CERTIFICATE@),        !           @L7A  39145000
*                            ! Digital certificat mapping         @L7A  39195000
*  3 UMAP_DIGCERT_LEN fixed, ! Length of digital certificate      @L7A  39245000
*  3 UMAP_DIGCERT char(*);   ! Digital certificate                @L7A  39295000
*                                                                       39345000
*declare                                                                39395000
* 1 UMAP_USERID based(UMAP_USERID@),        ! RACF userid mapping @L7A  39445000
*  3 UMAP_RACFID_LEN fixed(8), ! Length of RACF userid            @L7A  39495000
*  3 UMAP_RACFID char(*);    ! RACF userid                        @L7A  39545000
*                                                                       39595000
*declare                     !                                    @L7A  39645000
* 1 UMAP_APPL_USERID based(UMAP_APPL_USERID@),! Application       @L7A  39695000
*                            ! ID mapping                         @L7A  39745000
*  3 UMAP_APPLID_LEN fixed(16), ! Length of Application ID        @L7A  39795000
*                            ! This is the last parameter         @L7A  39845000
*  3 UMAP_APPLID char(*);    ! Application ID                     @L7A  39895000
*                                                                       39945000
* ! function codes                                                @L7A  39995000
* declare                    !                                    @L7A  40045000
*  UMAP_R_TO_L  constant(1) fixed(16), ! Return Lotus Notes ID    @L7A  40095000
*                            ! for this RACF ID                   @L7A  40145000
*  UMAP_L_TO_R  constant(2) fixed(16), ! Return RACF ID for this  @L7A  40195000
*                            ! Lotus Notes ID                     @L7A  40245000
*  UMAP_R_TO_N  constant(3) fixed(16), ! Return NDS ID for this   @L7A  40295000
*                            ! RACF ID                            @L7A  40345000
*  UMAP_N_TO_R  constant(4) fixed(16), ! Return RACF ID for this  @LEC  40395000
*                            ! NDS ID                             @L7A  40445000
*  UMAP_R_TO_K  constant(5) fixed(16), ! Return Kerb principal    @LEA  40455000
*                            ! for this RACF ID                   @LEA  40465000
*  UMAP_K_TO_R  constant(6) fixed(16); ! Return RACF ID for this  @LEA  40475000
*                            ! Kerb principal                     @LEA  40485000
*/********************************************************************/ 40495000
*/*                                                                  */ 40545000
*/*                CDDL PL/X DECLARATIONS                            */ 40595000
*/*------------------------------------------------------------------*/ 40645000
*/*                                                                  */ 40695000
*/*  DECLARATION NAME = CDDL                                         */ 40745000
*/*                                                                  */ 40795000
*/*  DESCRIPTIVE NAME =   CDSA DataLib Service parameters            */ 40845000
*/*                                                                  */ 40895000
*/*  FUNCTION = Provides the ASSEMBLER mapping of the input paramter */ 40945000
*/*             list for the CDSA Datalib callable service           */ 40995000
*/***************************************************************@L8A*/ 41045000
* DECLARE                                                               41095000
*  1 CDDL  BASED(ADDR(COMP_SERVR_PARMS)), /* Mapping for CDDL        */ 41145000
*   3 CDDL_FUNC@       PTR(31),   /* Address of 1 byte input function   41195000
*                                    code.  Constants for the function  41245000
*                                    codes are supplied below        */ 41295000
*   3 CDDL_ATTRIBUTES@ PTR(31),   /* Address of full word of input      41345000
*                                    attributes */                      41395000
*   3 CDDL_USERID@     PTR(31),   /* Address of a 9 byte input area     41445000
*                                    for the RACF userid (1 byte for    41495000
*                                    the length followed by 8 bytes     41545000
*                                    for the RACF userid itself).       41595000
*                                    A length of 0 indicates the        41645000
*                                    current user is the ring owner  */ 41695000
*   3 CDDL_RING@       PTR(31),   /* Address of a variable length       41745000
*                                    input area for the ring name       41795000
*                                    (1 byte for the length followed    41845000
*                                    by up to 237 bytes for the ring    41895000
*                                    name).  Parameter ignored for      41945000
*                                    CheckStatus, AbortQuery, and       41995000
*                                    DataGetNext                     */ 42045000
*   3 CDDL_VERSION@    PTR(31),   /* Address of a 4 byte area           42095000
*                                    containing the input version       42145000
*                                    number for the function specific   42195000
*                                    specific parameter list pointed    42245000
*                                    to by CDDL_PARMLIST@.  Must be     42295000
*                                    set to 0.                       */ 42345000
*                                                                       42395000
*   3 CDDL_PARMLIST@   PTR(31),   /* Address of the input function      42445000
*                                    specific parameter list         */ 42495000
*    5 CDDL_LAST_PARM Bit(1);     /* Last parm in variable length parm  42545000
*                                    list                        @L8A*/ 42595000
* DECLARE                                                               42645000
*  CDDL_LEN FIXED(31) CONSTANT(LENGTH(CDDL)); /* Constant - length of   42695000
*                                    CDDL                        @L8A*/ 42745000
*                                                                       42795000
*/*------------------------------------------------------------------*/ 42845000
*/*                                                                  */ 42895000
*/*                 Function code constants                          */ 42945000
*/*                                                                  */ 42995000
*/*------------------------------------------------------------------*/ 43045000
* DECLARE                                                               43095000
*                                                                       43145000
*  CDDL_DATA_GET_FIRST FIXED(8) CONSTANT(1), /* DataGetFirst - locate   43195000
*                                    and return the first               43245000
*                                    certificate in the ring            43295000
*                                    matching the specified criteria */ 43345000
*  CDDL_DATA_GET_NEXT  FIXED(8) CONSTANT(2), /* DataGetNext -           43395000
*                                    locate and return the next         43445000
*                                    certificate in the ring            43495000
*                                    matching the same criteria         43545000
*                                    specified in the previous          43595000
*                                    DataGetFirst/DataGetNext           43645000
*                                    call                            */ 43695000
*  CDDL_DATA_ABORT     FIXED(8) CONSTANT(3), /* DataAbortQuery -        43745000
*                                    free resources from previous       43795000
*                                    DataGetFirst or DataGetNext        43845000
*                                    call                            */ 43895000
*  CDDL_CHECK_STATUS   FIXED(8) CONSTANT(4), /* CheckStatus - return    43945000
*                                    the TRUST/NOTRUST status for a     43995000
*                                    given certificate           @LCC*/ 44015000
*  CDDL_GET_UPDATE_CODE FIXED(8) CONSTANT(5), /* GetUpdateCode -        44035000
*                                    returns the sequence number for    44055000
*                                    for a ring                  @LFC*/ 44061600
*  CDDL_INC_SER_NUM     FIXED(8) CONSTANT(6); /* IncSerialNum -         44068200
*                                             Increments the Serial     44074800
*                              Number for a Digital Certificate  @LFA*/ 44081400
*                                                                       44088000
*/*------------------------------------------------------------------*/ 44095000
*/*                                                                  */ 44145000
*/* Function Specific Parameter Lists                                */ 44195000
*/*                                                                  */ 44245000
*/*------------------------------------------------------------------*/ 44295000
* DECLARE                         /* Function code CDDL_DATA_ABORT   */ 44345000
*  1 CDDL_ABORT BASED,            /* Parameter list for                 44395000
*                                    DataAbortQuery                  */ 44445000
*    3 CDDL_PREV_HANDLE PTR(31);  /* Address of an input/output area    44495000
*                                    from previous DataGetFirst or      44545000
*                                    DataGetNext call            @L8A*/ 44595000
* DECLARE                         /* Function codes                     44645000
*                                    CDDL_DATA_GET_FIRST and            44695000
*                                    CDDL_DATA_GET_NEXT              */ 44745000
*  1 CDDL_GET_CERT BASED,         /* Parameter list for DataGetFirst    44795000
*                                    and DataGetNext                 */ 44845000
*    3 CDDL_RES_HANDLE PTR(31),   /* Address of input/output area       44895000
*                                    mapped by CDDL_HANDLE_MAP       */ 44945000
*    3 CDDL_CERT_USAGE CHAR(4),   /* 4 byte output area containing      44995000
*                                    certificate usage flags            45045000
*                                    x'00000000' - Usage is SITE        45095000
*                                    x'00000002' - Usage is CERTAUTH    45145000
*                                    x'00000008' - Usage is PERSONAL    45195000
*                                    x'FFFFFFF5' - reserved bits must   45245000
*                                                 be set to zero @L8A*/ 45295000
*    3 CDDL_CERT_DEFAULT FIXED(32), /* Output default indicator.        45345000
*                                    Zero value indicates not           45395000
*                                    default certificate for ring,      45445000
*                                    non-zero indicates this is         45495000
*                                    the default certificate.        */ 45545000
*    3 CDDL_CERT_LEN    FIXED(32), /* On input, contains the length     45595000
*                                    of the certificate area pointed    45645000
*                                    to by CDDL_CERT_PTR. On output,    45695000
*                                    contains the actual size of the    45745000
*                                    certificate returned or 0 if no    45795000
*                                    certificate returned.           */ 45845000
*    3 CDDL_CERT_PTR PTR(31),     /* Input value specifying             45895000
*                                    address of output certificate      45945000
*                                    data area                       */ 45995000
*    3 CDDL_PK_LEN FIXED(32),     /* On input, contains size of         46045000
*                                    private key area pointed to by     46095000
*                                    CDDL_PK_PTR.  On output            46145000
*                                    contains the length of the         46195000
*                                    private key returned at            46245000
*                                    address CDDL_PK_PTR or 0 if no     46295000
*                                    private key was returned        */ 46345000
*    3 CDDL_PK_PTR PTR(31),       /* Input value specifying address     46395000
*                                    of private key output data         46445000
*                                    area                            */ 46495000
*    3 CDDL_PK_TYPE FIXED(32),    /* Output value indicating            46545000
*                                    type of private key. See           46595000
*                                    constants below.                */ 46645000
*    3 CDDL_PK_BITSIZE FIXED(32), /* Output value indicating the        46695000
*                                    size of the private key            46745000
*                                    modulus in bits                 */ 46795000
*    3 CDDL_LABEL_LEN FIXED(32),  /* On input, contains the length of   46845000
*                                    the field pointed to by            46895000
*                                    CDDL_LABEL_PTR, and must be at     46945000
*                                    least 32.  On output, contains     46995000
*                                    the length of the label returned   47045000
*                                    at the address in                  47095000
*                                    CDDL_LABEL_PTR, and will be 32     47145000
*                                    or less.                        */ 47195000
*    3 CDDL_LABEL_PTR PTR(31),    /* Input value specifying the         47245000
*                                    address of the output area         47295000
*                                    to be used for the label name   */ 47345000
*    3 CDDL_RACF_USERID CHAR(9),  /* Input value containing a           47395000
*                                    1 byte length followed by the      47445000
*                                    certificate owning userid. The     47495000
*                                    combination of the output          47545000
*                                    label and this field uniquely      47595000
*                                    identify a certificate          */ 47645000
*    3 *            CHAR(3),      /* Reserved                        */ 47695000
*    3 CDDL_SDN_LEN FIXED(32),    /* On input, contains the length of   47745000
*                                    the output buffer pointed to by    47795000
*                                    CDDL_SDN_PTR.  On output, contains 47845000
*                                    the length of the BER encoded      47895000
*                                    Subject's Distinguished Name       47945000
*                                    returned in CDDL_SDN_LEN.       */ 47995000
*    3 CDDL_SDN_PTR Ptr(31),      /* Input value specifying the         48045000
*                                    address of the output area to be   48095000
*                                    used for the Subjects's            48145000
*                                    Distinguished Name.             */ 48195000
*    3 CDDL_RECID_LEN FIXED(32),  /* Output value containing the        48245000
*                                    length of the record ID            48295000
*                                    returned in area pointed to by     48345000
*                                    CDDL_RECID_PTR, or 0 if no         48395000
*                                    record returned.                */ 48445000
*    3 CDDL_RECID_PTR PTR(31);    /* Input value specifying the         48495000
*                                    address of a 246 byte area to      48545000
*                                    contain output record ID data      48595000
*                                                                @L8A*/ 48645000
* DECLARE                         /* Function codes for CheckStatus  */ 48695000
*  1 CDDL_CRT_STATUS BASED,   /* Parameter list for CheckStatus  @LAA*/ 48745000
*    3 CDDL_CRT_LEN FIXED(32), /* Address of an input/output area       48795000
*                                 On input, contains the length of the  48845000
*                                 certificate area pointed to by        48895000
*                                 CDDL_CRT_PTR.                  @LAA*/ 48945000
*    3 CDDL_CRT_PTR   PTR(31); /* Input value specifying address of     48995000
*                              output certificate data area      @LAA*/ 49045000
* DECLARE                                                               49057500
*  1 CDDL_GET_UPDATE   BASED,    /* Parm list for GetUpdateCode  @LCA*/ 49070000
*    3 CDDL_RING_SEQN FIXED(32); /* Ring sequence number         @LCA*/ 49082500
*                                                                       49083600
* DECLARE                                                               49084700
*  1 CDDL_ISN   BASED,            /* Parm List for IncSerialNum  @LFA*/ 49085800
*    2 CDDL_ISN_CLEN   FIXED(32), /* Length of DER Encoded input        49086900
*                                    Digital Certificate         @LFA*/ 49088000
*    2 CDDL_ISN_CPTR   PTR(31),   /* Address of DER Encoded input       49089100
*                                    Digital Certificate         @LFA*/ 49090200
*    2 CDDL_ISN_SERNUM CHAR(8);   /* Output - Incremented Serial Number 49091300
*                                    of Digital Certificate      @LFA*/ 49092400
*                                                                       49093500
*/*------------------------------------------------------------------*/ 49095000
*/*                                                                  */ 49145000
*/*       Private Key Type Constants returned in CDDL_PK_TYPE        */ 49195000
*/*                                                                  */ 49245000
*/*------------------------------------------------------------------*/ 49295000
* DECLARE                                                               49345000
*  CDDL_PKCS10        FIXED(32) CONSTANT(1), /* Private key is          49395000
*                                     PKCS#10 DER encoded            */ 49445000
*  CDDL_ICSF10        FIXED(32) CONSTANT(2); /* Private key is          49495000
*                                     a ICSF token               @L8A*/ 49545000
*/*------------------------------------------------------------------*/ 49595000
*/*                                                                  */ 49645000
*/*  Mapping of input/output area pointed to by CDDL_RES_HANDLE      */ 49695000
*/*                                                                  */ 49745000
*/*------------------------------------------------------------------*/ 49795000
* DECLARE                                                               49845000
*  1 CDDL_HANDLE_MAP  BASED,      /* Mapping of area pointed to by      49895000
*                                    CDDL_RES_HANDLE & CDDL_PREV_HANDLE 49945000
*                                                                @L9C*/ 49995000
*    3 CDDL_TOKEN Ptr,            /* Reserved for use by the security   50045000
*                                    server.  This value must be        50095000
*                                    preserved for subsequent calls     50145000
*                                    to DataGetNext and                 50195000
*                                    DataAbortQuery                  */ 50245000
*    3 CDDL_PREDICATES FIXED(32), /* Input value specifying             50295000
*                                    the selection criteria.  See       50345000
*                                    constants below                 */ 50395000
*    3 CDDL_ATTR_ID FIXED(32),    /* Input value specifying             50445000
*                                    the attribute to query on.         50495000
*                                    Ignored if CDDL_PREDICATES is 0.   50545000
*                                    See constants below for possible   50595000
*                                    values.                         */ 50645000
*    3 CDDL_ATTR_LEN FIXED(32),   /* Input value containing the         50695000
*                                    length of the attributes           50745000
*                                    supplied in CDDL_ATTR_PTR       */ 50795000
*    3 CDDL_ATTR_PTR PTR(31);     /* Input value containing             50845000
*                                    the address of query               50895000
*                                    attribute data.  Type of data      50945000
*                                    supplied determined by             50995000
*                                    CDDL_ATTR_ID                @L8A*/ 51045000
*/*------------------------------------------------------------------*/ 51095000
*/*                                                                  */ 51145000
*/* Input selection criteria constants supplied in CDDL_PREDICATES   */ 51195000
*/*                                                                  */ 51245000
*/*------------------------------------------------------------------*/ 51295000
* DECLARE                                                               51345000
*  CDDL_NONE          FIXED(32) CONSTANT(0), /* No selection criteria*/ 51395000
*  CDDL_ATTR          FIXED(32) CONSTANT(1); /* Query on a              51445000
*                                    particular attribute        @L8A*/ 51495000
*/*------------------------------------------------------------------*/ 51545000
*/*                                                                  */ 51595000
*/* Input query attributes supplied in CDDL_ATTR_ID                  */ 51645000
*/*                                                                  */ 51695000
*/*------------------------------------------------------------------*/ 51745000
* DECLARE                                                               51795000
*  CDDL_LABEL FIXED(32) CONSTANT(1), /* The certificate label, up to    51845000
*                                       32 characters long           */ 51895000
*  CDDL_DEFAULT FIXED(32) CONSTANT(2), /* The default flag, a 4 byte    51945000
*                                    field specified as 0 for NO, or    51995000
*                                    a non-zero value for YES        */ 52045000
*  CDDL_SUBJECT FIXED(32) CONSTANT(3); /* BER encoded subject's name */ 52095000
*                                                                       52145000
*/********************************************************************/ 52195000
*/*                                                                  */ 52245000
*/*              KERB PL/X DECLARATIONS                              */ 52295000
*/*------------------------------------------------------------------*/ 52345000
*/*                                                                  */ 52395000
*/*  DECLARATION NAME = KERB                                         */ 52445000
*/*                                                                  */ 52495000
*/*  DESCRIPTIVE NAME =   RACF Kerberos information interface        */ 52545000
*/*                                                                  */ 52595000
*/*  FUNCTION = Provides the PL/X mapping of the input parameter     */ 52645000
*/*      list for the service which will update or retrieve Kerberos */ 52695000
*/*      information                                                 */ 52745000
*/*                                                              @LEA*/ 52795000
*/********************************************************************/ 52845000
* DECLARE                                                               52895000
*  1 KERB  BASED(ADDR(COMP_SERVR_PARMS)),  /*                    @LEA*/ 52945000
*                                                                       52995000
*   3 KERB_FUNC@        PTR(31),  /* Address of 1 byte function code    53045000
*                                                                @LEA*/ 53095000
*   3 KERB_RACF_NAME@   PTR(31),  /* Address of a 9 byte area           53145000
*                                    containing a RACF name preceded by 53195000
*                                    a one byte length. x'00' in first  53245000
                                     byte if not specified.      @LEA*/ 53295000
*   3 KERB_NAME@        PTR(31),  /* Address of 240 byte area for the   53345000
*                                    Kerberos Principal.  x'00' in the  53395000
*                                    first byte if not specified.@LEA*/ 53445000
*   3 KERB_DATA_AREA@   PTR(31),  /* Address of a caller-supplied area  53495000
*                                    for the field mappings.     @LEA*/ 53545000
*     5 KERB_LAST_PARM BIT(1);    /* Variable length parameter list.    53595000
*                                    This is the last parameter  @LEA*/ 53645000
*                                                                       53695000
* DECLARE                                                               53745000
*  KERB_LEN FIXED(31) CONSTANT(LENGTH(KERB)), /* Constant KERB length   53795000
*                                                                @LEA*/ 53845000
*/*                 Function code values                         @LEA*/ 53895000
*  KERB_GET_USER  FIXED(8) CONSTANT(1), /* Get user information  @LEA*/ 53945000
*  KERB_UPDATE_REVOKECT                                                 53995000
*                 FIXED(8) CONSTANT(2), /* Update revoke count   @LEA*/ 54045000
*  KERB_RESET_REVOKECT                                                  54095000
*                 FIXED(8) CONSTANT(3), /* Update revoke count   @LEA*/ 54145000
*  KERB_GET_REALM FIXED(8) CONSTANT(4); /* Get realm information @LEA*/ 54195000
*                                                                       54245000
*/********************************************************************/ 54295000
*/* field structure and field mapping                            @LEA*/ 54345000
*/********************************************************************/ 54395000
* DECLARE                                                               54445000
*  1 KERB_FLDDATA_MAP   BASED,       /* Mapping for Field entry  @LEA*/ 54495000
*    3 KERB_FLDDATA_LEN FIXED(16),   /* Length of field struct   @LEA*/ 54545000
*    3 KERB_FLD_NUM FIXED(16),       /* Number of fields to update      54595000
*                                       or list                  @LEA*/ 54645000
*    3 KERB_FLDSTRT CHAR(0);         /* First field entry        @LEA*/ 54695000
*                                                                       54745000
* DECLARE                                                               54795000
*  1 KERB_FLDENTRY   BASED,          /* Mapping for Field entry  @LEA*/ 54845000
*    3 KERB_FLD_NAME CHAR(8),        /* Field name               @LEA*/ 54895000
*    3 KERB_FLD_LEN  FIXED(16) BDY(BYTE), /* Field data length   @LEA*/ 54945000
*    3 KERB_FLD_DATA CHAR(*);        /* Field data               @LEA*/ 54995000
*                                                                       55045000
*/********************************************************************/ 55095000
*/*                                                                  */ 55145000
*/*              TKTS PL/X DECLARATIONS                              */ 55195000
*/*------------------------------------------------------------------*/ 55245000
*/*                                                                  */ 55295000
*/*  DECLARATION NAME = TKTS                                         */ 55345000
*/*                                                                  */ 55395000
*/*  DESCRIPTIVE NAME =  Parse or Extract from Kerberos Ticket       */ 55445000
*/*                                                                  */ 55495000
*/*  FUNCTION = Provides the PL/X mapping of the input parameter     */ 55545000
*/*             list for the R_ticketserv callable service           */ 55595000
*/*                                                              @LHA*/ 55645000
*/********************************************************************/ 55695000
* DECLARE                                                               55745000
*  1 TKTS  BASED(ADDR(COMP_SERVR_PARMS)),  /*                    @LHA*/ 55795000
*                                                                       55845000
*   3 TKTS_PARM_ALET@   PTR(31),  /* Address of ALET for remaining      55895000
*                                    parameters                  @LHA*/ 55945000
*   3 TKTS_FUNC@        PTR(31),  /* Address of 2 byte function code    55995000
*                                                                @LHA*/ 56045000
*   3 TKTS_OPTION_WORD@ PTR(31),  /* Address of a full word containing  56095000
*                                    binary zeros. The area pointed to  56145000
*                                    by this parameter is reserved for  56195000
*                                    future use.                 @LHA*/ 56245000
*   3 TKTS_CRED_AREA@   PTR(31),  /* Address of an area consisting of   56295000
*                                    a 2 byte length field followed by  56345000
*                                    a ticket.                   @LHA*/ 56395000
*   3 TKTS_OPTIONS@     PTR(31),  /* Address of an address containing   56445000
*                                    a binary bit string which          56495000
*                                    identifies the credential specific 56545000
*                                    processing to be performed. This   56595000
*                                    parameter is reserved for future   56645000
*                                    use.                        @LHA*/ 56695000
*   3 TKTS_PRIN_USERID@ PTR(31),  /* Address of a pre-allocated storage 56745000
*                                    area containing 242 bytes which is 56795000
*                                    the output principal name preceded 56845000
*                                    by a 2 byte length field.   @LHA*/ 56895000
*     5 TKTS_LAST_PARM BIT(1);    /* Variable length parameter list.    56945000
*                                    This is the last parameter  @LHA*/ 56995000
* DECLARE                                                               57045000
*  TKTS_LEN FIXED(31) CONSTANT(LENGTH(TKTS)), /* Constant TKTS length   57095000
*                                                                @LHA*/ 57145000
*/*                 Function code values                         @LHA*/ 57195000
*  TKTS_RETURN_NAME FIXED(16) CONSTANT(1); /* Parse and return Kerberos 57245000
*                                            principal name      @LHA*/ 57295000
*                                                                       57345000
*/***************************************************************@0AA*/ 57346000
*                                                                       57347000
*/********************************************************************/ 57348000
*/*                                                                  */ 57349000
*/*                PKIS PL/X DECLARATIONS                            */ 57350000
*/*------------------------------------------------------------------*/ 57351000
*/*                                                                  */ 57352000
*/* DECLARATION NAME = PKIS                                          */ 57353000
*/*                                                                  */ 57354000
*/* DESCRIPTIVE NAME = PKIS Service parameters                       */ 57355000
*/*                                                                  */ 57356000
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 57357000
*/*            list for the PKIS callable service R_PKIServ          */ 57358000
*/***************************************************************@0AA*/ 57359000
*                                                                       57360000
* DECLARE                                                               57361000
*  1 PKIS   BASED(ADDR(COMP_SERVR_PARMS)), /* Mapping for PKIS   @0AA*/ 57362000
*   2 PKIS_NUM_PARMS@    PTR(31), /* Address of a Four-Byte variable    57363000
*                                    that contains the number of        57364000
*                                    parameters that follow in the      57365000
*                                    non-request specific portion of    57366000
*                                    the R_PKIServ callable service     57367000
*                                    Parameter List              @0AA*/ 57368000
*   2 PKIS_FUNC@         PTR(31), /* Address of a Two-Byte variable     57369000
*                                    that contains the code of the      57370000
*                                    requested function.  Constants     57371000
*                                    for the function codes codes       57372000
*                                    are declared below          @0AA*/ 57373000
*   2 PKIS_ATTRIBUTES@   PTR(31), /* Address of a Four-Byte variable    57374000
*                                    that contains attribute flags      57375000
*                                    for the service             @0AA*/ 57376000
*   2 PKIS_LOG_STRING@   PTR(31), /* Address of a Variable-Length area  57377000
*                                    that contains the LOG string to    57378000
*                                    be passed to RACROUTE (1 byte for  57379000
*                                    the length followed by up to 255   57380000
*                                    bytes for the LOG string itself)   57381000
*                                                                @0AA*/ 57382000
*   2 PKIS_PARM_VER@     PTR(31), /* Address of a Four-Byte variable    57383000
*                                    that contains the version number   57384000
*                                    of the Function Specific           57385000
*                                    Parameter List (PKIS_FUNC_PARML@)  57386000
*                                                                @0AA*/ 57387000
*   2 PKIS_FUNC_PARML@   PTR(31), /* Address of the FSPL -              57388000
*                                    Function Specific Parameter List   57389000
*                                    (FSPL = the Parameter List that    57390000
*                                            corresponds to the         57391000
*                                            Function Code)      @0AA*/ 57392000
*     3 PKIS_LAST_PARM     BIT(1); /* Variable length parameter list.   57393000
*                                  This is the last parameter    @0AA*/ 57394000
*                                                                       57395000
* DECLARE                                                               57396000
*  PKIS_LEN FIXED(31) CONSTANT(LENGTH(PKIS)); /* Constant - length of   57397000
*                                    PKIS                        @0AA*/ 57398000
*                                                                       57399000
*/*------------------------------------------------------------------*/ 57400000
*/*                                                                  */ 57401000
*/* PKIS Function Code Constants                                 @0AA*/ 57402000
*/*                                                                  */ 57403000
*/*------------------------------------------------------------------*/ 57404000
*                                                                       57405000
* DECLARE                                                               57406000
*  PKIS_GENCERT        FIXED(16) CONSTANT(1), /* GENCERT Function of    57407000
*                                             RACDCERT.  Generates a    57408000
*                                             basic X.509 V3 digital    57409000
*                                             certificate        @0AA*/ 57410000
*  PKIS_EXPORT         FIXED(16) CONSTANT(2); /* EXPORT  Function of    57411000
*                                             RACDCERT.  Extracts a     57412000
*                                             digital certificate by    57413000
*                                             Certificate Request ID    57414000
*                                                                @0AA*/ 57415000
*                                                                       57416000
*/*------------------------------------------------------------------*/ 57417000
*/*                                                                  */ 57418000
*/* PKIS Function Specific Parameter Lists                       @0AA*/ 57419000
*/*                                                                  */ 57420000
*/*------------------------------------------------------------------*/ 57421000
*                                                                       57422000
* DECLARE                                                               57423000
*  1 PKIS_GENCERT_MAP    BASED,     /* Function Specific Parameter List 57424000
*                                      (FSPL) for GENCERT        @0AA*/ 57425000
*   2 PKIS_GENC_EYECATCH   CHAR(8), /* Eyecatcher for the GENCERT FSPL  57426000
*                                   Left justified blank filled string  57427000
*                                   containing the text 'GENCERT '      57428000
*                                                                @0AA*/ 57429000
*   2 PKIS_GENC_CERTPL_LEN FIXED(32), /* Length (in bytes) of the       57430000
*                                        Digital Certificate            57431000
*                                        generation PList        @0AA*/ 57432000
*   2 PKIS_GENC_CERTPL@    PTR(31), /* Address of the                   57433000
*                                      Digital Certificate              57434000
*                                      generation PList          @0AA*/ 57435000
*   2 PKIS_GENC_CERTID@    PTR(31); /* Address of a 57-Byte area that   57436000
*                                   contains the Output Certificate     57437000
*                                   Request ID (the first byte of this  57438000
*                                   area contains the length of the     57439000
*                                   Output Certificate Request ID)      57440000
*                                                                @0AA*/ 57441000
*                                                                       57442000
*/*-------------------------------*/                                    57443000
*                                                                       57444000
* DECLARE                                                               57445000
*  1 PKIS_CPL_ENTRY      BASED,     /* Certificate Request PList entry  57446000
*                                      (a single GENCERT PList entry)   57447000
*                                                                @0AA*/ 57448000
*   2 PKIS_CPL_FIELD_NAME  CHAR(12), /* Certificate Request Field Name  57449000
*                                                                @0AA*/ 57450000
*   2 PKIS_CPL_FIELD_LEN   FIXED(32), /* Length (in bytes) of the       57451000
*                                     Request Field Name value   @0AA*/ 57452000
*   2 PKIS_CPL_FIELD_VALUE CHAR(*);   /* Request Field Name value       57453000
*                                                                @0AA*/ 57454000
*                                                                       57455000
*/*-------------------------------*/                                    57456000
*                                                                       57457000
* DECLARE                                                               57458000
*  1 PKIS_EXPORT_MAP     BASED,     /* Function Specific Parameter List 57459000
*                                      (FSPL) for EXPORT         @0AA*/ 57460000
*   2 PKIS_EXP_EYECATCH    CHAR(8), /* Eyecatcher for the EXPORT FSPL   57461000
*                                   Left justified blank filled string  57462000
*                                   containing the text 'EXPORT  '      57463000
*                                                                @0AA*/ 57464000
*   2 PKIS_EXP_CERTAN_LEN  FIXED(32), /* Length (in bytes) of the       57465000
*                                        preallocated Certificate       57466000
*                                        Anchor area             @0AA*/ 57467000
*   2 PKIS_EXP_CERTAN@     PTR(31), /* Address of the preallocated      57468000
*                                      Certificate Anchor area   @0AA*/ 57469000
*   2 PKIS_EXP_CERTID@     PTR(31); /* Address of a 57-Byte area that   57470000
*                                   contains the Input Certificate      57471000
*                                   Request ID that will be used to     57472000
*                                   locate the Digital Certificate      57473000
*                                   to be EXPORTed (the first byte of   57474000
*                                   this area contains the length of    57475000
*                                   the Input Certificate Request ID)   57476000
*                                                                @0AA*/ 57477000
*                                                                       57478000
*/***************************************************************@0AA*/ 57479000
*                                                                       57480000
